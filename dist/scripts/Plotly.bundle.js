(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{220:function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var require;var require;function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}/**\n* plotly.js (scatter3d) v1.43.2\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n* Licensed under the MIT license\n*/(function(f){if(( false?undefined:_typeof(exports))===\"object\"&&typeof module!==\"undefined\"){module.exports=f();}else if(true){!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (f),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}else{ var g; }})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return require(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a;}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r);},p,p.exports,r,e,n,t);}return n[i].exports;}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++){o(t[i]);}return o;}return r;}()({1:[function(_dereq_,module,exports){'use strict';var Lib=_dereq_('../src/lib');var rules={\"X,X div\":\"direction:ltr;font-family:'Open Sans', verdana, arial, sans-serif;margin:0;padding:0;\",\"X input,X button\":\"font-family:'Open Sans', verdana, arial, sans-serif;\",\"X input:focus,X button:focus\":\"outline:none;\",\"X a\":\"text-decoration:none;\",\"X a:hover\":\"text-decoration:none;\",\"X .crisp\":\"shape-rendering:crispEdges;\",\"X .user-select-none\":\"-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;\",\"X svg\":\"overflow:hidden;\",\"X svg a\":\"fill:#447adb;\",\"X svg a:hover\":\"fill:#3c6dc5;\",\"X .main-svg\":\"position:absolute;top:0;left:0;pointer-events:none;\",\"X .main-svg .draglayer\":\"pointer-events:all;\",\"X .cursor-default\":\"cursor:default;\",\"X .cursor-pointer\":\"cursor:pointer;\",\"X .cursor-crosshair\":\"cursor:crosshair;\",\"X .cursor-move\":\"cursor:move;\",\"X .cursor-col-resize\":\"cursor:col-resize;\",\"X .cursor-row-resize\":\"cursor:row-resize;\",\"X .cursor-ns-resize\":\"cursor:ns-resize;\",\"X .cursor-ew-resize\":\"cursor:ew-resize;\",\"X .cursor-sw-resize\":\"cursor:sw-resize;\",\"X .cursor-s-resize\":\"cursor:s-resize;\",\"X .cursor-se-resize\":\"cursor:se-resize;\",\"X .cursor-w-resize\":\"cursor:w-resize;\",\"X .cursor-e-resize\":\"cursor:e-resize;\",\"X .cursor-nw-resize\":\"cursor:nw-resize;\",\"X .cursor-n-resize\":\"cursor:n-resize;\",\"X .cursor-ne-resize\":\"cursor:ne-resize;\",\"X .cursor-grab\":\"cursor:-webkit-grab;cursor:grab;\",\"X .modebar\":\"position:absolute;top:2px;right:2px;z-index:1001;\",\"X .ease-bg\":\"-webkit-transition:background-color 0.3s ease 0s;-moz-transition:background-color 0.3s ease 0s;-ms-transition:background-color 0.3s ease 0s;-o-transition:background-color 0.3s ease 0s;transition:background-color 0.3s ease 0s;\",\"X .modebar--hover>:not(.watermark)\":\"opacity:0;-webkit-transition:opacity 0.3s ease 0s;-moz-transition:opacity 0.3s ease 0s;-ms-transition:opacity 0.3s ease 0s;-o-transition:opacity 0.3s ease 0s;transition:opacity 0.3s ease 0s;\",\"X:hover .modebar--hover .modebar-group\":\"opacity:1;\",\"X .modebar-group\":\"float:left;display:inline-block;box-sizing:border-box;margin-left:8px;position:relative;vertical-align:middle;white-space:nowrap;\",\"X .modebar-btn\":\"position:relative;font-size:16px;padding:3px 4px;height:22px;cursor:pointer;line-height:normal;box-sizing:border-box;\",\"X .modebar-btn svg\":\"position:relative;top:2px;\",\"X .modebar.vertical\":\"display:flex;flex-direction:column;flex-wrap:wrap;align-content:flex-end;max-height:100%;\",\"X .modebar.vertical svg\":\"top:-1px;\",\"X .modebar.vertical .modebar-group\":\"display:block;float:none;margin-left:0px;margin-bottom:8px;\",\"X .modebar.vertical .modebar-group .modebar-btn\":\"display:block;text-align:center;\",\"X [data-title]:before,X [data-title]:after\":\"position:absolute;-webkit-transform:translate3d(0, 0, 0);-moz-transform:translate3d(0, 0, 0);-ms-transform:translate3d(0, 0, 0);-o-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);display:none;opacity:0;z-index:1001;pointer-events:none;top:110%;right:50%;\",\"X [data-title]:hover:before,X [data-title]:hover:after\":\"display:block;opacity:1;\",\"X [data-title]:before\":\"content:'';position:absolute;background:transparent;border:6px solid transparent;z-index:1002;margin-top:-12px;border-bottom-color:#69738a;margin-right:-6px;\",\"X [data-title]:after\":\"content:attr(data-title);background:#69738a;color:white;padding:8px 10px;font-size:12px;line-height:12px;white-space:nowrap;margin-right:-18px;border-radius:2px;\",\"X .vertical [data-title]:before,X .vertical [data-title]:after\":\"top:0%;right:200%;\",\"X .vertical [data-title]:before\":\"border:6px solid transparent;border-left-color:#69738a;margin-top:8px;margin-right:-30px;\",\"X .select-outline\":\"fill:none;stroke-width:1;shape-rendering:crispEdges;\",\"X .select-outline-1\":\"stroke:white;\",\"X .select-outline-2\":\"stroke:black;stroke-dasharray:2px 2px;\",Y:\"font-family:'Open Sans';position:fixed;top:50px;right:20px;z-index:10000;font-size:10pt;max-width:180px;\",\"Y p\":\"margin:0;\",\"Y .notifier-note\":\"min-width:180px;max-width:250px;border:1px solid #fff;z-index:3000;margin:0;background-color:#8c97af;background-color:rgba(140,151,175,0.9);color:#fff;padding:10px;overflow-wrap:break-word;word-wrap:break-word;-ms-hyphens:auto;-webkit-hyphens:auto;hyphens:auto;\",\"Y .notifier-close\":\"color:#fff;opacity:0.8;float:right;padding:0 5px;background:none;border:none;font-size:20px;font-weight:bold;line-height:20px;\",\"Y .notifier-close:hover\":\"color:#444;text-decoration:none;cursor:pointer;\"};for(var selector in rules){var fullSelector=selector.replace(/^,/,' ,').replace(/X/g,'.js-plotly-plot .plotly').replace(/Y/g,'.plotly-notifier');Lib.addStyleRule(fullSelector,rules[selector]);}},{\"../src/lib\":423}],2:[function(_dereq_,module,exports){'use strict';module.exports={'undo':{'width':857.1,'height':1000,'path':'m857 350q0-87-34-166t-91-137-137-92-166-34q-96 0-183 41t-147 114q-4 6-4 13t5 11l76 77q6 5 14 5 9-1 13-7 41-53 100-82t126-29q58 0 110 23t92 61 61 91 22 111-22 111-61 91-92 61-110 23q-55 0-105-20t-90-57l77-77q17-16 8-38-10-23-33-23h-250q-15 0-25 11t-11 25v250q0 24 22 33 22 10 39-8l72-72q60 57 137 88t159 31q87 0 166-34t137-92 91-137 34-166z','transform':'matrix(1 0 0 -1 0 850)'},'home':{'width':928.6,'height':1000,'path':'m786 296v-267q0-15-11-26t-25-10h-214v214h-143v-214h-214q-15 0-25 10t-11 26v267q0 1 0 2t0 2l321 264 321-264q1-1 1-4z m124 39l-34-41q-5-5-12-6h-2q-7 0-12 3l-386 322-386-322q-7-4-13-4-7 2-12 7l-35 41q-4 5-3 13t6 12l401 334q18 15 42 15t43-15l136-114v109q0 8 5 13t13 5h107q8 0 13-5t5-13v-227l122-102q5-5 6-12t-4-13z','transform':'matrix(1 0 0 -1 0 850)'},'camera-retro':{'width':1000,'height':1000,'path':'m518 386q0 8-5 13t-13 5q-37 0-63-27t-26-63q0-8 5-13t13-5 12 5 5 13q0 23 16 38t38 16q8 0 13 5t5 13z m125-73q0-59-42-101t-101-42-101 42-42 101 42 101 101 42 101-42 42-101z m-572-320h858v71h-858v-71z m643 320q0 89-62 152t-152 62-151-62-63-152 63-151 151-63 152 63 62 151z m-571 358h214v72h-214v-72z m-72-107h858v143h-462l-36-71h-360v-72z m929 143v-714q0-30-21-51t-50-21h-858q-29 0-50 21t-21 51v714q0 30 21 51t50 21h858q29 0 50-21t21-51z','transform':'matrix(1 0 0 -1 0 850)'},'zoombox':{'width':1000,'height':1000,'path':'m1000-25l-250 251c40 63 63 138 63 218 0 224-182 406-407 406-224 0-406-182-406-406s183-406 407-406c80 0 155 22 218 62l250-250 125 125z m-812 250l0 438 437 0 0-438-437 0z m62 375l313 0 0-312-313 0 0 312z','transform':'matrix(1 0 0 -1 0 850)'},'pan':{'width':1000,'height':1000,'path':'m1000 350l-187 188 0-125-250 0 0 250 125 0-188 187-187-187 125 0 0-250-250 0 0 125-188-188 186-187 0 125 252 0 0-250-125 0 187-188 188 188-125 0 0 250 250 0 0-126 187 188z','transform':'matrix(1 0 0 -1 0 850)'},'zoom_plus':{'width':875,'height':1000,'path':'m1 787l0-875 875 0 0 875-875 0z m687-500l-187 0 0-187-125 0 0 187-188 0 0 125 188 0 0 187 125 0 0-187 187 0 0-125z','transform':'matrix(1 0 0 -1 0 850)'},'zoom_minus':{'width':875,'height':1000,'path':'m0 788l0-876 875 0 0 876-875 0z m688-500l-500 0 0 125 500 0 0-125z','transform':'matrix(1 0 0 -1 0 850)'},'autoscale':{'width':1000,'height':1000,'path':'m250 850l-187 0-63 0 0-62 0-188 63 0 0 188 187 0 0 62z m688 0l-188 0 0-62 188 0 0-188 62 0 0 188 0 62-62 0z m-875-938l0 188-63 0 0-188 0-62 63 0 187 0 0 62-187 0z m875 188l0-188-188 0 0-62 188 0 62 0 0 62 0 188-62 0z m-125 188l-1 0-93-94-156 156 156 156 92-93 2 0 0 250-250 0 0-2 93-92-156-156-156 156 94 92 0 2-250 0 0-250 0 0 93 93 157-156-157-156-93 94 0 0 0-250 250 0 0 0-94 93 156 157 156-157-93-93 0 0 250 0 0 250z','transform':'matrix(1 0 0 -1 0 850)'},'tooltip_basic':{'width':1500,'height':1000,'path':'m375 725l0 0-375-375 375-374 0-1 1125 0 0 750-1125 0z','transform':'matrix(1 0 0 -1 0 850)'},'tooltip_compare':{'width':1125,'height':1000,'path':'m187 786l0 2-187-188 188-187 0 0 937 0 0 373-938 0z m0-499l0 1-187-188 188-188 0 0 937 0 0 376-938-1z','transform':'matrix(1 0 0 -1 0 850)'},'plotlylogo':{'width':1542,'height':1000,'path':'m0-10h182v-140h-182v140z m228 146h183v-286h-183v286z m225 714h182v-1000h-182v1000z m225-285h182v-715h-182v715z m225 142h183v-857h-183v857z m231-428h182v-429h-182v429z m225-291h183v-138h-183v138z','transform':'matrix(1 0 0 -1 0 850)'},'z-axis':{'width':1000,'height':1000,'path':'m833 5l-17 108v41l-130-65 130-66c0 0 0 38 0 39 0-1 36-14 39-25 4-15-6-22-16-30-15-12-39-16-56-20-90-22-187-23-279-23-261 0-341 34-353 59 3 60 228 110 228 110-140-8-351-35-351-116 0-120 293-142 474-142 155 0 477 22 477 142 0 50-74 79-163 96z m-374 94c-58-5-99-21-99-40 0-24 65-43 144-43 79 0 143 19 143 43 0 19-42 34-98 40v216h87l-132 135-133-135h88v-216z m167 515h-136v1c16 16 31 34 46 52l84 109v54h-230v-71h124v-1c-16-17-28-32-44-51l-89-114v-51h245v72z','transform':'matrix(1 0 0 -1 0 850)'},'3d_rotate':{'width':1000,'height':1000,'path':'m922 660c-5 4-9 7-14 11-359 263-580-31-580-31l-102 28 58-400c0 1 1 1 2 2 118 108 351 249 351 249s-62 27-100 42c88 83 222 183 347 122 16-8 30-17 44-27-2 1-4 2-6 4z m36-329c0 0 64 229-88 296-62 27-124 14-175-11 157-78 225-208 249-266 8-19 11-31 11-31 2 5 6 15 11 32-5-13-8-20-8-20z m-775-239c70-31 117-50 198-32-121 80-199 346-199 346l-96-15-58-12c0 0 55-226 155-287z m603 133l-317-139c0 0 4-4 19-14 7-5 24-15 24-15s-177-147-389 4c235-287 536-112 536-112l31-22 100 299-4-1z m-298-153c6-4 14-9 24-15 0 0-17 10-24 15z','transform':'matrix(1 0 0 -1 0 850)'},'camera':{'width':1000,'height':1000,'path':'m500 450c-83 0-150-67-150-150 0-83 67-150 150-150 83 0 150 67 150 150 0 83-67 150-150 150z m400 150h-120c-16 0-34 13-39 29l-31 93c-6 15-23 28-40 28h-340c-16 0-34-13-39-28l-31-94c-6-15-23-28-40-28h-120c-55 0-100-45-100-100v-450c0-55 45-100 100-100h800c55 0 100 45 100 100v450c0 55-45 100-100 100z m-400-550c-138 0-250 112-250 250 0 138 112 250 250 250 138 0 250-112 250-250 0-138-112-250-250-250z m365 380c-19 0-35 16-35 35 0 19 16 35 35 35 19 0 35-16 35-35 0-19-16-35-35-35z','transform':'matrix(1 0 0 -1 0 850)'},'movie':{'width':1000,'height':1000,'path':'m938 413l-188-125c0 37-17 71-44 94 64 38 107 107 107 187 0 121-98 219-219 219-121 0-219-98-219-219 0-61 25-117 66-156h-115c30 33 49 76 49 125 0 103-84 187-187 187s-188-84-188-187c0-57 26-107 65-141-38-22-65-62-65-109v-250c0-70 56-126 125-126h500c69 0 125 56 125 126l188-126c34 0 62 28 62 63v375c0 35-28 63-62 63z m-750 0c-69 0-125 56-125 125s56 125 125 125 125-56 125-125-56-125-125-125z m406-1c-87 0-157 70-157 157 0 86 70 156 157 156s156-70 156-156-70-157-156-157z','transform':'matrix(1 0 0 -1 0 850)'},'question':{'width':857.1,'height':1000,'path':'m500 82v107q0 8-5 13t-13 5h-107q-8 0-13-5t-5-13v-107q0-8 5-13t13-5h107q8 0 13 5t5 13z m143 375q0 49-31 91t-77 65-95 23q-136 0-207-119-9-14 4-24l74-55q4-4 10-4 9 0 14 7 30 38 48 51 19 14 48 14 27 0 48-15t21-33q0-21-11-34t-38-25q-35-16-65-48t-29-70v-20q0-8 5-13t13-5h107q8 0 13 5t5 13q0 10 12 27t30 28q18 10 28 16t25 19 25 27 16 34 7 45z m214-107q0-117-57-215t-156-156-215-58-216 58-155 156-58 215 58 215 155 156 216 58 215-58 156-156 57-215z','transform':'matrix(1 0 0 -1 0 850)'},'disk':{'width':857.1,'height':1000,'path':'m214-7h429v214h-429v-214z m500 0h72v500q0 8-6 21t-11 20l-157 156q-5 6-19 12t-22 5v-232q0-22-15-38t-38-16h-322q-22 0-37 16t-16 38v232h-72v-714h72v232q0 22 16 38t37 16h465q22 0 38-16t15-38v-232z m-214 518v178q0 8-5 13t-13 5h-107q-7 0-13-5t-5-13v-178q0-8 5-13t13-5h107q7 0 13 5t5 13z m357-18v-518q0-22-15-38t-38-16h-750q-23 0-38 16t-16 38v750q0 22 16 38t38 16h517q23 0 50-12t42-26l156-157q16-15 27-42t11-49z','transform':'matrix(1 0 0 -1 0 850)'},'lasso':{'width':1031,'height':1000,'path':'m1018 538c-36 207-290 336-568 286-277-48-473-256-436-463 10-57 36-108 76-151-13-66 11-137 68-183 34-28 75-41 114-42l-55-70 0 0c-2-1-3-2-4-3-10-14-8-34 5-45 14-11 34-8 45 4 1 1 2 3 2 5l0 0 113 140c16 11 31 24 45 40 4 3 6 7 8 11 48-3 100 0 151 9 278 48 473 255 436 462z m-624-379c-80 14-149 48-197 96 42 42 109 47 156 9 33-26 47-66 41-105z m-187-74c-19 16-33 37-39 60 50-32 109-55 174-68-42-25-95-24-135 8z m360 75c-34-7-69-9-102-8 8 62-16 128-68 170-73 59-175 54-244-5-9 20-16 40-20 61-28 159 121 317 333 354s407-60 434-217c28-159-121-318-333-355z','transform':'matrix(1 0 0 -1 0 850)'},'selectbox':{'width':1000,'height':1000,'path':'m0 850l0-143 143 0 0 143-143 0z m286 0l0-143 143 0 0 143-143 0z m285 0l0-143 143 0 0 143-143 0z m286 0l0-143 143 0 0 143-143 0z m-857-286l0-143 143 0 0 143-143 0z m857 0l0-143 143 0 0 143-143 0z m-857-285l0-143 143 0 0 143-143 0z m857 0l0-143 143 0 0 143-143 0z m-857-286l0-143 143 0 0 143-143 0z m286 0l0-143 143 0 0 143-143 0z m285 0l0-143 143 0 0 143-143 0z m286 0l0-143 143 0 0 143-143 0z','transform':'matrix(1 0 0 -1 0 850)'},'spikeline':{'width':1000,'height':1000,'path':'M512 409c0-57-46-104-103-104-57 0-104 47-104 104 0 57 47 103 104 103 57 0 103-46 103-103z m-327-39l92 0 0 92-92 0z m-185 0l92 0 0 92-92 0z m370-186l92 0 0 93-92 0z m0-184l92 0 0 92-92 0z','transform':'matrix(1.5 0 0 -1.5 0 850)'},'newplotlylogo':{'name':'newplotlylogo','svg':'<svg xmlns=\\'http://www.w3.org/2000/svg\\' viewBox=\\'0 0 132 132\\'><defs><style>.cls-1 {fill: #119dff;} .cls-2 {fill: #25fefd;} .cls-3 {fill: #fff;}</style></defs><title>plotly-logomark</title><g id=\\'symbol\\'><rect class=\\'cls-1\\' width=\\'132\\' height=\\'132\\' rx=\\'6\\' ry=\\'6\\'/><circle class=\\'cls-2\\' cx=\\'78\\' cy=\\'54\\' r=\\'6\\'/><circle class=\\'cls-2\\' cx=\\'102\\' cy=\\'30\\' r=\\'6\\'/><circle class=\\'cls-2\\' cx=\\'78\\' cy=\\'30\\' r=\\'6\\'/><circle class=\\'cls-2\\' cx=\\'54\\' cy=\\'30\\' r=\\'6\\'/><circle class=\\'cls-2\\' cx=\\'30\\' cy=\\'30\\' r=\\'6\\'/><circle class=\\'cls-2\\' cx=\\'30\\' cy=\\'54\\' r=\\'6\\'/><path class=\\'cls-3\\' d=\\'M30,72a6,6,0,0,0-6,6v24a6,6,0,0,0,12,0V78A6,6,0,0,0,30,72Z\\'/><path class=\\'cls-3\\' d=\\'M78,72a6,6,0,0,0-6,6v24a6,6,0,0,0,12,0V78A6,6,0,0,0,78,72Z\\'/><path class=\\'cls-3\\' d=\\'M54,48a6,6,0,0,0-6,6v48a6,6,0,0,0,12,0V54A6,6,0,0,0,54,48Z\\'/><path class=\\'cls-3\\' d=\\'M102,48a6,6,0,0,0-6,6v48a6,6,0,0,0,12,0V54A6,6,0,0,0,102,48Z\\'/></g></svg>'}};},{}],3:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports=_dereq_('../src/core');},{\"../src/core\":400}],4:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Plotly=_dereq_('../lib/core');Plotly.register([_dereq_('../lib/scatter3d'),_dereq_('../lib/scatter3dpoint')]);module.exports=Plotly;},{\"../lib/core\":3,\"../lib/scatter3d\":5,\"../lib/scatter3dpoint\":6}],5:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports=_dereq_('../src/traces/scatter3d');},{\"../src/traces/scatter3d\":565}],6:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports=_dereq_('../src/traces/scatter3dpoint');},{\"../src/traces/scatter3dpoint\":571}],7:[function(_dereq_,module,exports){'use strict';module.exports=createCamera;var now=_dereq_('right-now');var createView=_dereq_('3d-view');var mouseChange=_dereq_('mouse-change');var mouseWheel=_dereq_('mouse-wheel');var mouseOffset=_dereq_('mouse-event-offset');var hasPassive=_dereq_('has-passive-events');function createCamera(element,options){element=element||document.body;options=options||{};var limits=[0.01,Infinity];if('distanceLimits'in options){limits[0]=options.distanceLimits[0];limits[1]=options.distanceLimits[1];}if('zoomMin'in options){limits[0]=options.zoomMin;}if('zoomMax'in options){limits[1]=options.zoomMax;}var view=createView({center:options.center||[0,0,0],up:options.up||[0,1,0],eye:options.eye||[0,0,10],mode:options.mode||'orbit',distanceLimits:limits});var pmatrix=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];var distance=0.0;var width=element.clientWidth;var height=element.clientHeight;var camera={view:view,element:element,delay:options.delay||16,rotateSpeed:options.rotateSpeed||1,zoomSpeed:options.zoomSpeed||1,translateSpeed:options.translateSpeed||1,flipX:!!options.flipX,flipY:!!options.flipY,modes:view.modes,tick:function tick(){var t=now();var delay=this.delay;view.idle(t-delay);view.flush(t-(100+delay*2));var ctime=t-2*delay;view.recalcMatrix(ctime);var allEqual=true;var matrix=view.computedMatrix;for(var i=0;i<16;++i){allEqual=allEqual&&pmatrix[i]===matrix[i];pmatrix[i]=matrix[i];}var sizeChanged=element.clientWidth===width&&element.clientHeight===height;width=element.clientWidth;height=element.clientHeight;if(allEqual){return!sizeChanged;}distance=Math.exp(view.computedRadius[0]);return true;},lookAt:function lookAt(center,eye,up){view.lookAt(view.lastT(),center,eye,up);},rotate:function rotate(pitch,yaw,roll){view.rotate(view.lastT(),pitch,yaw,roll);},pan:function pan(dx,dy,dz){view.pan(view.lastT(),dx,dy,dz);},translate:function translate(dx,dy,dz){view.translate(view.lastT(),dx,dy,dz);}};Object.defineProperties(camera,{matrix:{get:function get(){return view.computedMatrix;},set:function set(mat){view.setMatrix(view.lastT(),mat);return view.computedMatrix;},enumerable:true},mode:{get:function get(){return view.getMode();},set:function set(mode){view.setMode(mode);return view.getMode();},enumerable:true},center:{get:function get(){return view.computedCenter;},set:function set(ncenter){view.lookAt(view.lastT(),ncenter);return view.computedCenter;},enumerable:true},eye:{get:function get(){return view.computedEye;},set:function set(neye){view.lookAt(view.lastT(),null,neye);return view.computedEye;},enumerable:true},up:{get:function get(){return view.computedUp;},set:function set(nup){view.lookAt(view.lastT(),null,null,nup);return view.computedUp;},enumerable:true},distance:{get:function get(){return distance;},set:function set(d){view.setDistance(view.lastT(),d);return d;},enumerable:true},distanceLimits:{get:function get(){return view.getDistanceLimits(limits);},set:function set(v){view.setDistanceLimits(v);return v;},enumerable:true}});element.addEventListener('contextmenu',function(ev){ev.preventDefault();return false;});var lastX=0,lastY=0,lastMods={shift:false,control:false,alt:false,meta:false};mouseChange(element,handleInteraction);//enable simple touch interactions\nelement.addEventListener('touchstart',function(ev){var xy=mouseOffset(ev.changedTouches[0],element);handleInteraction(0,xy[0],xy[1],lastMods);handleInteraction(1,xy[0],xy[1],lastMods);ev.preventDefault();},hasPassive?{passive:false}:false);element.addEventListener('touchmove',function(ev){var xy=mouseOffset(ev.changedTouches[0],element);handleInteraction(1,xy[0],xy[1],lastMods);ev.preventDefault();},hasPassive?{passive:false}:false);element.addEventListener('touchend',function(ev){var xy=mouseOffset(ev.changedTouches[0],element);handleInteraction(0,lastX,lastY,lastMods);ev.preventDefault();},hasPassive?{passive:false}:false);function handleInteraction(buttons,x,y,mods){var scale=1.0/element.clientHeight;var dx=scale*(x-lastX);var dy=scale*(y-lastY);var flipX=camera.flipX?1:-1;var flipY=camera.flipY?1:-1;var drot=Math.PI*camera.rotateSpeed;var t=now();if(buttons&1){if(mods.shift){view.rotate(t,0,0,-dx*drot);}else{view.rotate(t,flipX*drot*dx,-flipY*drot*dy,0);}}else if(buttons&2){view.pan(t,-camera.translateSpeed*dx*distance,camera.translateSpeed*dy*distance,0);}else if(buttons&4){var kzoom=camera.zoomSpeed*dy/window.innerHeight*(t-view.lastT())*50.0;view.pan(t,0,0,distance*(Math.exp(kzoom)-1));}lastX=x;lastY=y;lastMods=mods;}mouseWheel(element,function(dx,dy,dz){var flipX=camera.flipX?1:-1;var flipY=camera.flipY?1:-1;var t=now();if(Math.abs(dx)>Math.abs(dy)){view.rotate(t,0,0,-dx*flipX*Math.PI*camera.rotateSpeed/window.innerWidth);}else{var kzoom=camera.zoomSpeed*flipY*dy/window.innerHeight*(t-view.lastT())/100.0;view.pan(t,0,0,distance*(Math.exp(kzoom)-1));}},true);return camera;}},{\"3d-view\":8,\"has-passive-events\":164,\"mouse-change\":184,\"mouse-event-offset\":185,\"mouse-wheel\":187,\"right-now\":239}],8:[function(_dereq_,module,exports){'use strict';module.exports=createViewController;var createTurntable=_dereq_('turntable-camera-controller');var createOrbit=_dereq_('orbit-camera-controller');var createMatrix=_dereq_('matrix-camera-controller');function ViewController(controllers,mode){this._controllerNames=Object.keys(controllers);this._controllerList=this._controllerNames.map(function(n){return controllers[n];});this._mode=mode;this._active=controllers[mode];if(!this._active){this._mode='turntable';this._active=controllers.turntable;}this.modes=this._controllerNames;this.computedMatrix=this._active.computedMatrix;this.computedEye=this._active.computedEye;this.computedUp=this._active.computedUp;this.computedCenter=this._active.computedCenter;this.computedRadius=this._active.computedRadius;}var proto=ViewController.prototype;var COMMON_METHODS=[['flush',1],['idle',1],['lookAt',4],['rotate',4],['pan',4],['translate',4],['setMatrix',2],['setDistanceLimits',2],['setDistance',2]];COMMON_METHODS.forEach(function(method){var name=method[0];var argNames=[];for(var i=0;i<method[1];++i){argNames.push('a'+i);}var code='var cc=this._controllerList;for(var i=0;i<cc.length;++i){cc[i].'+method[0]+'('+argNames.join()+')}';proto[name]=Function.apply(null,argNames.concat(code));});proto.recalcMatrix=function(t){this._active.recalcMatrix(t);};proto.getDistance=function(t){return this._active.getDistance(t);};proto.getDistanceLimits=function(out){return this._active.getDistanceLimits(out);};proto.lastT=function(){return this._active.lastT();};proto.setMode=function(mode){if(mode===this._mode){return;}var idx=this._controllerNames.indexOf(mode);if(idx<0){return;}var prev=this._active;var next=this._controllerList[idx];var lastT=Math.max(prev.lastT(),next.lastT());prev.recalcMatrix(lastT);next.setMatrix(lastT,prev.computedMatrix);this._active=next;this._mode=mode;//Update matrix properties\nthis.computedMatrix=this._active.computedMatrix;this.computedEye=this._active.computedEye;this.computedUp=this._active.computedUp;this.computedCenter=this._active.computedCenter;this.computedRadius=this._active.computedRadius;};proto.getMode=function(){return this._mode;};function createViewController(options){options=options||{};var eye=options.eye||[0,0,1];var center=options.center||[0,0,0];var up=options.up||[0,1,0];var limits=options.distanceLimits||[0,Infinity];var mode=options.mode||'turntable';var turntable=createTurntable();var orbit=createOrbit();var matrix=createMatrix();turntable.setDistanceLimits(limits[0],limits[1]);turntable.lookAt(0,eye,center,up);orbit.setDistanceLimits(limits[0],limits[1]);orbit.lookAt(0,eye,center,up);matrix.setDistanceLimits(limits[0],limits[1]);matrix.lookAt(0,eye,center,up);return new ViewController({turntable:turntable,orbit:orbit,matrix:matrix},mode);}},{\"matrix-camera-controller\":182,\"orbit-camera-controller\":197,\"turntable-camera-controller\":267}],9:[function(_dereq_,module,exports){'use strict';var weakMap=typeof WeakMap==='undefined'?_dereq_('weak-map'):WeakMap;var createBuffer=_dereq_('gl-buffer');var createVAO=_dereq_('gl-vao');var TriangleCache=new weakMap();function createABigTriangle(gl){var triangleVAO=TriangleCache.get(gl);var handle=triangleVAO&&(triangleVAO._triangleBuffer.handle||triangleVAO._triangleBuffer.buffer);if(!handle||!gl.isBuffer(handle)){var buf=createBuffer(gl,new Float32Array([-1,-1,-1,4,4,-1]));triangleVAO=createVAO(gl,[{buffer:buf,type:gl.FLOAT,size:2}]);triangleVAO._triangleBuffer=buf;TriangleCache.set(gl,triangleVAO);}triangleVAO.bind();gl.drawArrays(gl.TRIANGLES,0,3);triangleVAO.unbind();}module.exports=createABigTriangle;},{\"gl-buffer\":93,\"gl-vao\":146,\"weak-map\":275}],10:[function(_dereq_,module,exports){var padLeft=_dereq_('pad-left');module.exports=addLineNumbers;function addLineNumbers(string,start,delim){start=typeof start==='number'?start:1;delim=delim||': ';var lines=string.split(/\\r?\\n/);var totalDigits=String(lines.length+start-1).length;return lines.map(function(line,i){var c=i+start;var digits=String(c).length;var prefix=padLeft(c,totalDigits-digits);return prefix+delim+line;}).join('\\n');}},{\"pad-left\":198}],11:[function(_dereq_,module,exports){'use strict';module.exports=affineHull;var orient=_dereq_('robust-orientation');function linearlyIndependent(points,d){var nhull=new Array(d+1);for(var i=0;i<points.length;++i){nhull[i]=points[i];}for(var i=0;i<=points.length;++i){for(var j=points.length;j<=d;++j){var x=new Array(d);for(var k=0;k<d;++k){x[k]=Math.pow(j+1-i,k);}nhull[j]=x;}var o=orient.apply(void 0,nhull);if(o){return true;}}return false;}function affineHull(points){var n=points.length;if(n===0){return[];}if(n===1){return[0];}var d=points[0].length;var frame=[points[0]];var index=[0];for(var i=1;i<n;++i){frame.push(points[i]);if(!linearlyIndependent(frame,d)){frame.pop();continue;}index.push(i);if(index.length===d+1){return index;}}return index;}},{\"robust-orientation\":245}],12:[function(_dereq_,module,exports){module.exports=function _atob(str){return atob(str);};},{}],13:[function(_dereq_,module,exports){'use strict';module.exports=barycentric;var solve=_dereq_('robust-linear-solve');function reduce(x){var r=0;for(var i=0;i<x.length;++i){r+=x[i];}return r;}function barycentric(simplex,point){var d=point.length;var A=new Array(d+1);for(var i=0;i<d;++i){var row=new Array(d+1);for(var j=0;j<=d;++j){row[j]=simplex[j][i];}A[i]=row;}A[d]=new Array(d+1);for(var i=0;i<=d;++i){A[d][i]=1;}var b=new Array(d+1);for(var i=0;i<d;++i){b[i]=point[i];}b[d]=1.0;var x=solve(A,b);var w=reduce(x[d+1]);if(w===0){w=1.0;}var y=new Array(d+1);for(var i=0;i<=d;++i){y[i]=reduce(x[i])/w;}return y;}},{\"robust-linear-solve\":244}],14:[function(_dereq_,module,exports){'use strict';exports.byteLength=byteLength;exports.toByteArray=toByteArray;exports.fromByteArray=fromByteArray;var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!=='undefined'?Uint8Array:Array;var code='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';for(var i=0,len=code.length;i<len;++i){lookup[i]=code[i];revLookup[code.charCodeAt(i)]=i;}// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)]=62;revLookup['_'.charCodeAt(0)]=63;function getLens(b64){var len=b64.length;if(len%4>0){throw new Error('Invalid string. Length must be a multiple of 4');}// Trim off extra bytes after placeholder bytes are found\n// See: https://github.com/beatgammit/base64-js/issues/42\nvar validLen=b64.indexOf('=');if(validLen===-1)validLen=len;var placeHoldersLen=validLen===len?0:4-validLen%4;return[validLen,placeHoldersLen];}// base64 is 4/3 + up to two characters of the original data\nfunction byteLength(b64){var lens=getLens(b64);var validLen=lens[0];var placeHoldersLen=lens[1];return(validLen+placeHoldersLen)*3/4-placeHoldersLen;}function _byteLength(b64,validLen,placeHoldersLen){return(validLen+placeHoldersLen)*3/4-placeHoldersLen;}function toByteArray(b64){var tmp;var lens=getLens(b64);var validLen=lens[0];var placeHoldersLen=lens[1];var arr=new Arr(_byteLength(b64,validLen,placeHoldersLen));var curByte=0;// if there are placeholders, only get up to the last complete 4 chars\nvar len=placeHoldersLen>0?validLen-4:validLen;for(var i=0;i<len;i+=4){tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)];arr[curByte++]=tmp>>16&0xFF;arr[curByte++]=tmp>>8&0xFF;arr[curByte++]=tmp&0xFF;}if(placeHoldersLen===2){tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4;arr[curByte++]=tmp&0xFF;}if(placeHoldersLen===1){tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2;arr[curByte++]=tmp>>8&0xFF;arr[curByte++]=tmp&0xFF;}return arr;}function tripletToBase64(num){return lookup[num>>18&0x3F]+lookup[num>>12&0x3F]+lookup[num>>6&0x3F]+lookup[num&0x3F];}function encodeChunk(uint8,start,end){var tmp;var output=[];for(var i=start;i<end;i+=3){tmp=(uint8[i]<<16&0xFF0000)+(uint8[i+1]<<8&0xFF00)+(uint8[i+2]&0xFF);output.push(tripletToBase64(tmp));}return output.join('');}function fromByteArray(uint8){var tmp;var len=uint8.length;var extraBytes=len%3;// if we have 1 byte left, pad 2 bytes\nvar parts=[];var maxChunkLength=16383;// must be multiple of 3\n// go through the array every three bytes, we'll deal with trailing stuff later\nfor(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){parts.push(encodeChunk(uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));}// pad the end with zeros, but make sure to not forget the extra bytes\nif(extraBytes===1){tmp=uint8[len-1];parts.push(lookup[tmp>>2]+lookup[tmp<<4&0x3F]+'==');}else if(extraBytes===2){tmp=(uint8[len-2]<<8)+uint8[len-1];parts.push(lookup[tmp>>10]+lookup[tmp>>4&0x3F]+lookup[tmp<<2&0x3F]+'=');}return parts.join('');}},{}],15:[function(_dereq_,module,exports){'use strict';var rationalize=_dereq_('./lib/rationalize');module.exports=add;function add(a,b){return rationalize(a[0].mul(b[1]).add(b[0].mul(a[1])),a[1].mul(b[1]));}},{\"./lib/rationalize\":25}],16:[function(_dereq_,module,exports){'use strict';module.exports=cmp;function cmp(a,b){return a[0].mul(b[1]).cmp(b[0].mul(a[1]));}},{}],17:[function(_dereq_,module,exports){'use strict';var rationalize=_dereq_('./lib/rationalize');module.exports=div;function div(a,b){return rationalize(a[0].mul(b[1]),a[1].mul(b[0]));}},{\"./lib/rationalize\":25}],18:[function(_dereq_,module,exports){'use strict';var isRat=_dereq_('./is-rat');var isBN=_dereq_('./lib/is-bn');var num2bn=_dereq_('./lib/num-to-bn');var str2bn=_dereq_('./lib/str-to-bn');var rationalize=_dereq_('./lib/rationalize');var div=_dereq_('./div');module.exports=makeRational;function makeRational(numer,denom){if(isRat(numer)){if(denom){return div(numer,makeRational(denom));}return[numer[0].clone(),numer[1].clone()];}var shift=0;var a,b;if(isBN(numer)){a=numer.clone();}else if(typeof numer==='string'){a=str2bn(numer);}else if(numer===0){return[num2bn(0),num2bn(1)];}else if(numer===Math.floor(numer)){a=num2bn(numer);}else{while(numer!==Math.floor(numer)){numer=numer*Math.pow(2,256);shift-=256;}a=num2bn(numer);}if(isRat(denom)){a.mul(denom[1]);b=denom[0].clone();}else if(isBN(denom)){b=denom.clone();}else if(typeof denom==='string'){b=str2bn(denom);}else if(!denom){b=num2bn(1);}else if(denom===Math.floor(denom)){b=num2bn(denom);}else{while(denom!==Math.floor(denom)){denom=denom*Math.pow(2,256);shift+=256;}b=num2bn(denom);}if(shift>0){a=a.ushln(shift);}else if(shift<0){b=b.ushln(-shift);}return rationalize(a,b);}},{\"./div\":17,\"./is-rat\":19,\"./lib/is-bn\":23,\"./lib/num-to-bn\":24,\"./lib/rationalize\":25,\"./lib/str-to-bn\":26}],19:[function(_dereq_,module,exports){'use strict';var isBN=_dereq_('./lib/is-bn');module.exports=isRat;function isRat(x){return Array.isArray(x)&&x.length===2&&isBN(x[0])&&isBN(x[1]);}},{\"./lib/is-bn\":23}],20:[function(_dereq_,module,exports){'use strict';var BN=_dereq_('bn.js');module.exports=sign;function sign(x){return x.cmp(new BN(0));}},{\"bn.js\":33}],21:[function(_dereq_,module,exports){'use strict';var sign=_dereq_('./bn-sign');module.exports=bn2num;//TODO: Make this better\nfunction bn2num(b){var l=b.length;var words=b.words;var out=0;if(l===1){out=words[0];}else if(l===2){out=words[0]+words[1]*0x4000000;}else{for(var i=0;i<l;i++){var w=words[i];out+=w*Math.pow(0x4000000,i);}}return sign(b)*out;}},{\"./bn-sign\":20}],22:[function(_dereq_,module,exports){'use strict';var db=_dereq_('double-bits');var ctz=_dereq_('bit-twiddle').countTrailingZeros;module.exports=ctzNumber;//Counts the number of trailing zeros\nfunction ctzNumber(x){var l=ctz(db.lo(x));if(l<32){return l;}var h=ctz(db.hi(x));if(h>20){return 52;}return h+32;}},{\"bit-twiddle\":32,\"double-bits\":74}],23:[function(_dereq_,module,exports){'use strict';var BN=_dereq_('bn.js');module.exports=isBN;//Test if x is a bignumber\n//FIXME: obviously this is the wrong way to do it\nfunction isBN(x){return x&&_typeof(x)==='object'&&Boolean(x.words);}},{\"bn.js\":33}],24:[function(_dereq_,module,exports){'use strict';var BN=_dereq_('bn.js');var db=_dereq_('double-bits');module.exports=num2bn;function num2bn(x){var e=db.exponent(x);if(e<52){return new BN(x);}else{return new BN(x*Math.pow(2,52-e)).ushln(e-52);}}},{\"bn.js\":33,\"double-bits\":74}],25:[function(_dereq_,module,exports){'use strict';var num2bn=_dereq_('./num-to-bn');var sign=_dereq_('./bn-sign');module.exports=rationalize;function rationalize(numer,denom){var snumer=sign(numer);var sdenom=sign(denom);if(snumer===0){return[num2bn(0),num2bn(1)];}if(sdenom===0){return[num2bn(0),num2bn(0)];}if(sdenom<0){numer=numer.neg();denom=denom.neg();}var d=numer.gcd(denom);if(d.cmpn(1)){return[numer.div(d),denom.div(d)];}return[numer,denom];}},{\"./bn-sign\":20,\"./num-to-bn\":24}],26:[function(_dereq_,module,exports){'use strict';var BN=_dereq_('bn.js');module.exports=str2BN;function str2BN(x){return new BN(x);}},{\"bn.js\":33}],27:[function(_dereq_,module,exports){'use strict';var rationalize=_dereq_('./lib/rationalize');module.exports=mul;function mul(a,b){return rationalize(a[0].mul(b[0]),a[1].mul(b[1]));}},{\"./lib/rationalize\":25}],28:[function(_dereq_,module,exports){'use strict';var bnsign=_dereq_('./lib/bn-sign');module.exports=sign;function sign(x){return bnsign(x[0])*bnsign(x[1]);}},{\"./lib/bn-sign\":20}],29:[function(_dereq_,module,exports){'use strict';var rationalize=_dereq_('./lib/rationalize');module.exports=sub;function sub(a,b){return rationalize(a[0].mul(b[1]).sub(a[1].mul(b[0])),a[1].mul(b[1]));}},{\"./lib/rationalize\":25}],30:[function(_dereq_,module,exports){'use strict';var bn2num=_dereq_('./lib/bn-to-num');var ctz=_dereq_('./lib/ctz');module.exports=roundRat;// Round a rational to the closest float\nfunction roundRat(f){var a=f[0];var b=f[1];if(a.cmpn(0)===0){return 0;}var h=a.abs().divmod(b.abs());var iv=h.div;var x=bn2num(iv);var ir=h.mod;var sgn=a.negative!==b.negative?-1:1;if(ir.cmpn(0)===0){return sgn*x;}if(x){var s=ctz(x)+4;var y=bn2num(ir.ushln(s).divRound(b));return sgn*(x+y*Math.pow(2,-s));}else{var ybits=b.bitLength()-ir.bitLength()+53;var y=bn2num(ir.ushln(ybits).divRound(b));if(ybits<1023){return sgn*y*Math.pow(2,-ybits);}y*=Math.pow(2,-1023);return sgn*y*Math.pow(2,1023-ybits);}}},{\"./lib/bn-to-num\":21,\"./lib/ctz\":22}],31:[function(_dereq_,module,exports){\"use strict\";function compileSearch(funcName,predicate,reversed,extraArgs,useNdarray,earlyOut){var code=[\"function \",funcName,\"(a,l,h,\",extraArgs.join(\",\"),\"){\",earlyOut?\"\":\"var i=\",reversed?\"l-1\":\"h+1\",\";while(l<=h){\\\nvar m=(l+h)>>>1,x=a\",useNdarray?\".get(m)\":\"[m]\"];if(earlyOut){if(predicate.indexOf(\"c\")<0){code.push(\";if(x===y){return m}else if(x<=y){\");}else{code.push(\";var p=c(x,y);if(p===0){return m}else if(p<=0){\");}}else{code.push(\";if(\",predicate,\"){i=m;\");}if(reversed){code.push(\"l=m+1}else{h=m-1}\");}else{code.push(\"h=m-1}else{l=m+1}\");}code.push(\"}\");if(earlyOut){code.push(\"return -1};\");}else{code.push(\"return i};\");}return code.join(\"\");}function compileBoundsSearch(predicate,reversed,suffix,earlyOut){var result=new Function([compileSearch(\"A\",\"x\"+predicate+\"y\",reversed,[\"y\"],false,earlyOut),compileSearch(\"B\",\"x\"+predicate+\"y\",reversed,[\"y\"],true,earlyOut),compileSearch(\"P\",\"c(x,y)\"+predicate+\"0\",reversed,[\"y\",\"c\"],false,earlyOut),compileSearch(\"Q\",\"c(x,y)\"+predicate+\"0\",reversed,[\"y\",\"c\"],true,earlyOut),\"function dispatchBsearch\",suffix,\"(a,y,c,l,h){\\\nif(a.shape){\\\nif(typeof(c)==='function'){\\\nreturn Q(a,(l===undefined)?0:l|0,(h===undefined)?a.shape[0]-1:h|0,y,c)\\\n}else{\\\nreturn B(a,(c===undefined)?0:c|0,(l===undefined)?a.shape[0]-1:l|0,y)\\\n}}else{\\\nif(typeof(c)==='function'){\\\nreturn P(a,(l===undefined)?0:l|0,(h===undefined)?a.length-1:h|0,y,c)\\\n}else{\\\nreturn A(a,(c===undefined)?0:c|0,(l===undefined)?a.length-1:l|0,y)\\\n}}}\\\nreturn dispatchBsearch\",suffix].join(\"\"));return result();}module.exports={ge:compileBoundsSearch(\">=\",false,\"GE\"),gt:compileBoundsSearch(\">\",false,\"GT\"),lt:compileBoundsSearch(\"<\",true,\"LT\"),le:compileBoundsSearch(\"<=\",true,\"LE\"),eq:compileBoundsSearch(\"-\",true,\"EQ\",true)};},{}],32:[function(_dereq_,module,exports){/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\"use strict\";\"use restrict\";//Number of bits in an integer\nvar INT_BITS=32;//Constants\nexports.INT_BITS=INT_BITS;exports.INT_MAX=0x7fffffff;exports.INT_MIN=-1<<INT_BITS-1;//Returns -1, 0, +1 depending on sign of x\nexports.sign=function(v){return(v>0)-(v<0);};//Computes absolute value of integer\nexports.abs=function(v){var mask=v>>INT_BITS-1;return(v^mask)-mask;};//Computes minimum of integers x and y\nexports.min=function(x,y){return y^(x^y)&-(x<y);};//Computes maximum of integers x and y\nexports.max=function(x,y){return x^(x^y)&-(x<y);};//Checks if a number is a power of two\nexports.isPow2=function(v){return!(v&v-1)&&!!v;};//Computes log base 2 of v\nexports.log2=function(v){var r,shift;r=(v>0xFFFF)<<4;v>>>=r;shift=(v>0xFF)<<3;v>>>=shift;r|=shift;shift=(v>0xF)<<2;v>>>=shift;r|=shift;shift=(v>0x3)<<1;v>>>=shift;r|=shift;return r|v>>1;};//Computes log base 10 of v\nexports.log10=function(v){return v>=1000000000?9:v>=100000000?8:v>=10000000?7:v>=1000000?6:v>=100000?5:v>=10000?4:v>=1000?3:v>=100?2:v>=10?1:0;};//Counts number of bits\nexports.popCount=function(v){v=v-(v>>>1&0x55555555);v=(v&0x33333333)+(v>>>2&0x33333333);return(v+(v>>>4)&0xF0F0F0F)*0x1010101>>>24;};//Counts number of trailing zeros\nfunction countTrailingZeros(v){var c=32;v&=-v;if(v)c--;if(v&0x0000FFFF)c-=16;if(v&0x00FF00FF)c-=8;if(v&0x0F0F0F0F)c-=4;if(v&0x33333333)c-=2;if(v&0x55555555)c-=1;return c;}exports.countTrailingZeros=countTrailingZeros;//Rounds to next power of 2\nexports.nextPow2=function(v){v+=v===0;--v;v|=v>>>1;v|=v>>>2;v|=v>>>4;v|=v>>>8;v|=v>>>16;return v+1;};//Rounds down to previous power of 2\nexports.prevPow2=function(v){v|=v>>>1;v|=v>>>2;v|=v>>>4;v|=v>>>8;v|=v>>>16;return v-(v>>>1);};//Computes parity of word\nexports.parity=function(v){v^=v>>>16;v^=v>>>8;v^=v>>>4;v&=0xf;return 0x6996>>>v&1;};var REVERSE_TABLE=new Array(256);(function(tab){for(var i=0;i<256;++i){var v=i,r=i,s=7;for(v>>>=1;v;v>>>=1){r<<=1;r|=v&1;--s;}tab[i]=r<<s&0xff;}})(REVERSE_TABLE);//Reverse bits in a 32 bit word\nexports.reverse=function(v){return REVERSE_TABLE[v&0xff]<<24|REVERSE_TABLE[v>>>8&0xff]<<16|REVERSE_TABLE[v>>>16&0xff]<<8|REVERSE_TABLE[v>>>24&0xff];};//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2=function(x,y){x&=0xFFFF;x=(x|x<<8)&0x00FF00FF;x=(x|x<<4)&0x0F0F0F0F;x=(x|x<<2)&0x33333333;x=(x|x<<1)&0x55555555;y&=0xFFFF;y=(y|y<<8)&0x00FF00FF;y=(y|y<<4)&0x0F0F0F0F;y=(y|y<<2)&0x33333333;y=(y|y<<1)&0x55555555;return x|y<<1;};//Extracts the nth interleaved component\nexports.deinterleave2=function(v,n){v=v>>>n&0x55555555;v=(v|v>>>1)&0x33333333;v=(v|v>>>2)&0x0F0F0F0F;v=(v|v>>>4)&0x00FF00FF;v=(v|v>>>16)&0x000FFFF;return v<<16>>16;};//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3=function(x,y,z){x&=0x3FF;x=(x|x<<16)&4278190335;x=(x|x<<8)&251719695;x=(x|x<<4)&3272356035;x=(x|x<<2)&1227133513;y&=0x3FF;y=(y|y<<16)&4278190335;y=(y|y<<8)&251719695;y=(y|y<<4)&3272356035;y=(y|y<<2)&1227133513;x|=y<<1;z&=0x3FF;z=(z|z<<16)&4278190335;z=(z|z<<8)&251719695;z=(z|z<<4)&3272356035;z=(z|z<<2)&1227133513;return x|z<<2;};//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3=function(v,n){v=v>>>n&1227133513;v=(v|v>>>2)&3272356035;v=(v|v>>>4)&251719695;v=(v|v>>>8)&4278190335;v=(v|v>>>16)&0x3FF;return v<<22>>22;};//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination=function(v){var t=v|v-1;return t+1|(~t&-~t)-1>>>countTrailingZeros(v)+1;};},{}],33:[function(_dereq_,module,exports){(function(module,exports){'use strict';// Utils\nfunction assert(val,msg){if(!val)throw new Error(msg||'Assertion failed');}// Could use `inherits` module, but don't want to move from single file\n// architecture yet.\nfunction inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function TempCtor(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor();ctor.prototype.constructor=ctor;}// BN\nfunction BN(number,base,endian){if(BN.isBN(number)){return number;}this.negative=0;this.words=null;this.length=0;// Reduction context\nthis.red=null;if(number!==null){if(base==='le'||base==='be'){endian=base;base=10;}this._init(number||0,base||10,endian||'be');}}if(_typeof(module)==='object'){module.exports=BN;}else{exports.BN=BN;}BN.BN=BN;BN.wordSize=26;var Buffer;try{Buffer=_dereq_('buffer').Buffer;}catch(e){}BN.isBN=function isBN(num){if(num instanceof BN){return true;}return num!==null&&_typeof(num)==='object'&&num.constructor.wordSize===BN.wordSize&&Array.isArray(num.words);};BN.max=function max(left,right){if(left.cmp(right)>0)return left;return right;};BN.min=function min(left,right){if(left.cmp(right)<0)return left;return right;};BN.prototype._init=function init(number,base,endian){if(typeof number==='number'){return this._initNumber(number,base,endian);}if(_typeof(number)==='object'){return this._initArray(number,base,endian);}if(base==='hex'){base=16;}assert(base===(base|0)&&base>=2&&base<=36);number=number.toString().replace(/\\s+/g,'');var start=0;if(number[0]==='-'){start++;}if(base===16){this._parseHex(number,start);}else{this._parseBase(number,base,start);}if(number[0]==='-'){this.negative=1;}this.strip();if(endian!=='le')return;this._initArray(this.toArray(),base,endian);};BN.prototype._initNumber=function _initNumber(number,base,endian){if(number<0){this.negative=1;number=-number;}if(number<0x4000000){this.words=[number&0x3ffffff];this.length=1;}else if(number<0x10000000000000){this.words=[number&0x3ffffff,number/0x4000000&0x3ffffff];this.length=2;}else{assert(number<0x20000000000000);// 2 ^ 53 (unsafe)\nthis.words=[number&0x3ffffff,number/0x4000000&0x3ffffff,1];this.length=3;}if(endian!=='le')return;// Reverse the bytes\nthis._initArray(this.toArray(),base,endian);};BN.prototype._initArray=function _initArray(number,base,endian){// Perhaps a Uint8Array\nassert(typeof number.length==='number');if(number.length<=0){this.words=[0];this.length=1;return this;}this.length=Math.ceil(number.length/3);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0;}var j,w;var off=0;if(endian==='be'){for(i=number.length-1,j=0;i>=0;i-=3){w=number[i]|number[i-1]<<8|number[i-2]<<16;this.words[j]|=w<<off&0x3ffffff;this.words[j+1]=w>>>26-off&0x3ffffff;off+=24;if(off>=26){off-=26;j++;}}}else if(endian==='le'){for(i=0,j=0;i<number.length;i+=3){w=number[i]|number[i+1]<<8|number[i+2]<<16;this.words[j]|=w<<off&0x3ffffff;this.words[j+1]=w>>>26-off&0x3ffffff;off+=24;if(off>=26){off-=26;j++;}}}return this.strip();};function parseHex(str,start,end){var r=0;var len=Math.min(str.length,end);for(var i=start;i<len;i++){var c=str.charCodeAt(i)-48;r<<=4;// 'a' - 'f'\nif(c>=49&&c<=54){r|=c-49+0xa;// 'A' - 'F'\n}else if(c>=17&&c<=22){r|=c-17+0xa;// '0' - '9'\n}else{r|=c&0xf;}}return r;}BN.prototype._parseHex=function _parseHex(number,start){// Create possibly bigger array to ensure that it fits the number\nthis.length=Math.ceil((number.length-start)/6);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0;}var j,w;// Scan 24-bit chunks and add them to the number\nvar off=0;for(i=number.length-6,j=0;i>=start;i-=6){w=parseHex(number,i,i+6);this.words[j]|=w<<off&0x3ffffff;// NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\nthis.words[j+1]|=w>>>26-off&0x3fffff;off+=24;if(off>=26){off-=26;j++;}}if(i+6!==start){w=parseHex(number,start,i+6);this.words[j]|=w<<off&0x3ffffff;this.words[j+1]|=w>>>26-off&0x3fffff;}this.strip();};function parseBase(str,start,end,mul){var r=0;var len=Math.min(str.length,end);for(var i=start;i<len;i++){var c=str.charCodeAt(i)-48;r*=mul;// 'a'\nif(c>=49){r+=c-49+0xa;// 'A'\n}else if(c>=17){r+=c-17+0xa;// '0' - '9'\n}else{r+=c;}}return r;}BN.prototype._parseBase=function _parseBase(number,base,start){// Initialize as zero\nthis.words=[0];this.length=1;// Find length of limb in base\nfor(var limbLen=0,limbPow=1;limbPow<=0x3ffffff;limbPow*=base){limbLen++;}limbLen--;limbPow=limbPow/base|0;var total=number.length-start;var mod=total%limbLen;var end=Math.min(total,total-mod)+start;var word=0;for(var i=start;i<end;i+=limbLen){word=parseBase(number,i,i+limbLen,base);this.imuln(limbPow);if(this.words[0]+word<0x4000000){this.words[0]+=word;}else{this._iaddn(word);}}if(mod!==0){var pow=1;word=parseBase(number,i,number.length,base);for(i=0;i<mod;i++){pow*=base;}this.imuln(pow);if(this.words[0]+word<0x4000000){this.words[0]+=word;}else{this._iaddn(word);}}};BN.prototype.copy=function copy(dest){dest.words=new Array(this.length);for(var i=0;i<this.length;i++){dest.words[i]=this.words[i];}dest.length=this.length;dest.negative=this.negative;dest.red=this.red;};BN.prototype.clone=function clone(){var r=new BN(null);this.copy(r);return r;};BN.prototype._expand=function _expand(size){while(this.length<size){this.words[this.length++]=0;}return this;};// Remove leading `0` from `this`\nBN.prototype.strip=function strip(){while(this.length>1&&this.words[this.length-1]===0){this.length--;}return this._normSign();};BN.prototype._normSign=function _normSign(){// -0 = 0\nif(this.length===1&&this.words[0]===0){this.negative=0;}return this;};BN.prototype.inspect=function inspect(){return(this.red?'<BN-R: ':'<BN: ')+this.toString(16)+'>';};/*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */var zeros=['','0','00','000','0000','00000','000000','0000000','00000000','000000000','0000000000','00000000000','000000000000','0000000000000','00000000000000','000000000000000','0000000000000000','00000000000000000','000000000000000000','0000000000000000000','00000000000000000000','000000000000000000000','0000000000000000000000','00000000000000000000000','000000000000000000000000','0000000000000000000000000'];var groupSizes=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];var groupBases=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,10000000,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64000000,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,24300000,28629151,33554432,39135393,45435424,52521875,60466176];BN.prototype.toString=function toString(base,padding){base=base||10;padding=padding|0||1;var out;if(base===16||base==='hex'){out='';var off=0;var carry=0;for(var i=0;i<this.length;i++){var w=this.words[i];var word=((w<<off|carry)&0xffffff).toString(16);carry=w>>>24-off&0xffffff;if(carry!==0||i!==this.length-1){out=zeros[6-word.length]+word+out;}else{out=word+out;}off+=2;if(off>=26){off-=26;i--;}}if(carry!==0){out=carry.toString(16)+out;}while(out.length%padding!==0){out='0'+out;}if(this.negative!==0){out='-'+out;}return out;}if(base===(base|0)&&base>=2&&base<=36){// var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\nvar groupSize=groupSizes[base];// var groupBase = Math.pow(base, groupSize);\nvar groupBase=groupBases[base];out='';var c=this.clone();c.negative=0;while(!c.isZero()){var r=c.modn(groupBase).toString(base);c=c.idivn(groupBase);if(!c.isZero()){out=zeros[groupSize-r.length]+r+out;}else{out=r+out;}}if(this.isZero()){out='0'+out;}while(out.length%padding!==0){out='0'+out;}if(this.negative!==0){out='-'+out;}return out;}assert(false,'Base should be between 2 and 36');};BN.prototype.toNumber=function toNumber(){var ret=this.words[0];if(this.length===2){ret+=this.words[1]*0x4000000;}else if(this.length===3&&this.words[2]===0x01){// NOTE: at this stage it is known that the top bit is set\nret+=0x10000000000000+this.words[1]*0x4000000;}else if(this.length>2){assert(false,'Number can only safely store up to 53 bits');}return this.negative!==0?-ret:ret;};BN.prototype.toJSON=function toJSON(){return this.toString(16);};BN.prototype.toBuffer=function toBuffer(endian,length){assert(typeof Buffer!=='undefined');return this.toArrayLike(Buffer,endian,length);};BN.prototype.toArray=function toArray(endian,length){return this.toArrayLike(Array,endian,length);};BN.prototype.toArrayLike=function toArrayLike(ArrayType,endian,length){var byteLength=this.byteLength();var reqLength=length||Math.max(1,byteLength);assert(byteLength<=reqLength,'byte array longer than desired length');assert(reqLength>0,'Requested array length <= 0');this.strip();var littleEndian=endian==='le';var res=new ArrayType(reqLength);var b,i;var q=this.clone();if(!littleEndian){// Assume big-endian\nfor(i=0;i<reqLength-byteLength;i++){res[i]=0;}for(i=0;!q.isZero();i++){b=q.andln(0xff);q.iushrn(8);res[reqLength-i-1]=b;}}else{for(i=0;!q.isZero();i++){b=q.andln(0xff);q.iushrn(8);res[i]=b;}for(;i<reqLength;i++){res[i]=0;}}return res;};if(Math.clz32){BN.prototype._countBits=function _countBits(w){return 32-Math.clz32(w);};}else{BN.prototype._countBits=function _countBits(w){var t=w;var r=0;if(t>=0x1000){r+=13;t>>>=13;}if(t>=0x40){r+=7;t>>>=7;}if(t>=0x8){r+=4;t>>>=4;}if(t>=0x02){r+=2;t>>>=2;}return r+t;};}BN.prototype._zeroBits=function _zeroBits(w){// Short-cut\nif(w===0)return 26;var t=w;var r=0;if((t&0x1fff)===0){r+=13;t>>>=13;}if((t&0x7f)===0){r+=7;t>>>=7;}if((t&0xf)===0){r+=4;t>>>=4;}if((t&0x3)===0){r+=2;t>>>=2;}if((t&0x1)===0){r++;}return r;};// Return number of used bits in a BN\nBN.prototype.bitLength=function bitLength(){var w=this.words[this.length-1];var hi=this._countBits(w);return(this.length-1)*26+hi;};function toBitArray(num){var w=new Array(num.bitLength());for(var bit=0;bit<w.length;bit++){var off=bit/26|0;var wbit=bit%26;w[bit]=(num.words[off]&1<<wbit)>>>wbit;}return w;}// Number of trailing zero bits\nBN.prototype.zeroBits=function zeroBits(){if(this.isZero())return 0;var r=0;for(var i=0;i<this.length;i++){var b=this._zeroBits(this.words[i]);r+=b;if(b!==26)break;}return r;};BN.prototype.byteLength=function byteLength(){return Math.ceil(this.bitLength()/8);};BN.prototype.toTwos=function toTwos(width){if(this.negative!==0){return this.abs().inotn(width).iaddn(1);}return this.clone();};BN.prototype.fromTwos=function fromTwos(width){if(this.testn(width-1)){return this.notn(width).iaddn(1).ineg();}return this.clone();};BN.prototype.isNeg=function isNeg(){return this.negative!==0;};// Return negative clone of `this`\nBN.prototype.neg=function neg(){return this.clone().ineg();};BN.prototype.ineg=function ineg(){if(!this.isZero()){this.negative^=1;}return this;};// Or `num` with `this` in-place\nBN.prototype.iuor=function iuor(num){while(this.length<num.length){this.words[this.length++]=0;}for(var i=0;i<num.length;i++){this.words[i]=this.words[i]|num.words[i];}return this.strip();};BN.prototype.ior=function ior(num){assert((this.negative|num.negative)===0);return this.iuor(num);};// Or `num` with `this`\nBN.prototype.or=function or(num){if(this.length>num.length)return this.clone().ior(num);return num.clone().ior(this);};BN.prototype.uor=function uor(num){if(this.length>num.length)return this.clone().iuor(num);return num.clone().iuor(this);};// And `num` with `this` in-place\nBN.prototype.iuand=function iuand(num){// b = min-length(num, this)\nvar b;if(this.length>num.length){b=num;}else{b=this;}for(var i=0;i<b.length;i++){this.words[i]=this.words[i]&num.words[i];}this.length=b.length;return this.strip();};BN.prototype.iand=function iand(num){assert((this.negative|num.negative)===0);return this.iuand(num);};// And `num` with `this`\nBN.prototype.and=function and(num){if(this.length>num.length)return this.clone().iand(num);return num.clone().iand(this);};BN.prototype.uand=function uand(num){if(this.length>num.length)return this.clone().iuand(num);return num.clone().iuand(this);};// Xor `num` with `this` in-place\nBN.prototype.iuxor=function iuxor(num){// a.length > b.length\nvar a;var b;if(this.length>num.length){a=this;b=num;}else{a=num;b=this;}for(var i=0;i<b.length;i++){this.words[i]=a.words[i]^b.words[i];}if(this!==a){for(;i<a.length;i++){this.words[i]=a.words[i];}}this.length=a.length;return this.strip();};BN.prototype.ixor=function ixor(num){assert((this.negative|num.negative)===0);return this.iuxor(num);};// Xor `num` with `this`\nBN.prototype.xor=function xor(num){if(this.length>num.length)return this.clone().ixor(num);return num.clone().ixor(this);};BN.prototype.uxor=function uxor(num){if(this.length>num.length)return this.clone().iuxor(num);return num.clone().iuxor(this);};// Not ``this`` with ``width`` bitwidth\nBN.prototype.inotn=function inotn(width){assert(typeof width==='number'&&width>=0);var bytesNeeded=Math.ceil(width/26)|0;var bitsLeft=width%26;// Extend the buffer with leading zeroes\nthis._expand(bytesNeeded);if(bitsLeft>0){bytesNeeded--;}// Handle complete words\nfor(var i=0;i<bytesNeeded;i++){this.words[i]=~this.words[i]&0x3ffffff;}// Handle the residue\nif(bitsLeft>0){this.words[i]=~this.words[i]&0x3ffffff>>26-bitsLeft;}// And remove leading zeroes\nreturn this.strip();};BN.prototype.notn=function notn(width){return this.clone().inotn(width);};// Set `bit` of `this`\nBN.prototype.setn=function setn(bit,val){assert(typeof bit==='number'&&bit>=0);var off=bit/26|0;var wbit=bit%26;this._expand(off+1);if(val){this.words[off]=this.words[off]|1<<wbit;}else{this.words[off]=this.words[off]&~(1<<wbit);}return this.strip();};// Add `num` to `this` in-place\nBN.prototype.iadd=function iadd(num){var r;// negative + positive\nif(this.negative!==0&&num.negative===0){this.negative=0;r=this.isub(num);this.negative^=1;return this._normSign();// positive + negative\n}else if(this.negative===0&&num.negative!==0){num.negative=0;r=this.isub(num);num.negative=1;return r._normSign();}// a.length > b.length\nvar a,b;if(this.length>num.length){a=this;b=num;}else{a=num;b=this;}var carry=0;for(var i=0;i<b.length;i++){r=(a.words[i]|0)+(b.words[i]|0)+carry;this.words[i]=r&0x3ffffff;carry=r>>>26;}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;this.words[i]=r&0x3ffffff;carry=r>>>26;}this.length=a.length;if(carry!==0){this.words[this.length]=carry;this.length++;// Copy the rest of the words\n}else if(a!==this){for(;i<a.length;i++){this.words[i]=a.words[i];}}return this;};// Add `num` to `this`\nBN.prototype.add=function add(num){var res;if(num.negative!==0&&this.negative===0){num.negative=0;res=this.sub(num);num.negative^=1;return res;}else if(num.negative===0&&this.negative!==0){this.negative=0;res=num.sub(this);this.negative=1;return res;}if(this.length>num.length)return this.clone().iadd(num);return num.clone().iadd(this);};// Subtract `num` from `this` in-place\nBN.prototype.isub=function isub(num){// this - (-num) = this + num\nif(num.negative!==0){num.negative=0;var r=this.iadd(num);num.negative=1;return r._normSign();// -this - num = -(this + num)\n}else if(this.negative!==0){this.negative=0;this.iadd(num);this.negative=1;return this._normSign();}// At this point both numbers are positive\nvar cmp=this.cmp(num);// Optimization - zeroify\nif(cmp===0){this.negative=0;this.length=1;this.words[0]=0;return this;}// a > b\nvar a,b;if(cmp>0){a=this;b=num;}else{a=num;b=this;}var carry=0;for(var i=0;i<b.length;i++){r=(a.words[i]|0)-(b.words[i]|0)+carry;carry=r>>26;this.words[i]=r&0x3ffffff;}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;carry=r>>26;this.words[i]=r&0x3ffffff;}// Copy rest of the words\nif(carry===0&&i<a.length&&a!==this){for(;i<a.length;i++){this.words[i]=a.words[i];}}this.length=Math.max(this.length,i);if(a!==this){this.negative=1;}return this.strip();};// Subtract `num` from `this`\nBN.prototype.sub=function sub(num){return this.clone().isub(num);};function smallMulTo(self,num,out){out.negative=num.negative^self.negative;var len=self.length+num.length|0;out.length=len;len=len-1|0;// Peel one iteration (compiler can't do it, because of code complexity)\nvar a=self.words[0]|0;var b=num.words[0]|0;var r=a*b;var lo=r&0x3ffffff;var carry=r/0x4000000|0;out.words[0]=lo;for(var k=1;k<len;k++){// Sum all words with the same `i + j = k` and accumulate `ncarry`,\n// note that ncarry could be >= 0x3ffffff\nvar ncarry=carry>>>26;var rword=carry&0x3ffffff;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self.length+1);j<=maxJ;j++){var i=k-j|0;a=self.words[i]|0;b=num.words[j]|0;r=a*b+rword;ncarry+=r/0x4000000|0;rword=r&0x3ffffff;}out.words[k]=rword|0;carry=ncarry|0;}if(carry!==0){out.words[k]=carry|0;}else{out.length--;}return out.strip();}// TODO(indutny): it may be reasonable to omit it for users who don't need\n// to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n// multiplication (like elliptic secp256k1).\nvar comb10MulTo=function comb10MulTo(self,num,out){var a=self.words;var b=num.words;var o=out.words;var c=0;var lo;var mid;var hi;var a0=a[0]|0;var al0=a0&0x1fff;var ah0=a0>>>13;var a1=a[1]|0;var al1=a1&0x1fff;var ah1=a1>>>13;var a2=a[2]|0;var al2=a2&0x1fff;var ah2=a2>>>13;var a3=a[3]|0;var al3=a3&0x1fff;var ah3=a3>>>13;var a4=a[4]|0;var al4=a4&0x1fff;var ah4=a4>>>13;var a5=a[5]|0;var al5=a5&0x1fff;var ah5=a5>>>13;var a6=a[6]|0;var al6=a6&0x1fff;var ah6=a6>>>13;var a7=a[7]|0;var al7=a7&0x1fff;var ah7=a7>>>13;var a8=a[8]|0;var al8=a8&0x1fff;var ah8=a8>>>13;var a9=a[9]|0;var al9=a9&0x1fff;var ah9=a9>>>13;var b0=b[0]|0;var bl0=b0&0x1fff;var bh0=b0>>>13;var b1=b[1]|0;var bl1=b1&0x1fff;var bh1=b1>>>13;var b2=b[2]|0;var bl2=b2&0x1fff;var bh2=b2>>>13;var b3=b[3]|0;var bl3=b3&0x1fff;var bh3=b3>>>13;var b4=b[4]|0;var bl4=b4&0x1fff;var bh4=b4>>>13;var b5=b[5]|0;var bl5=b5&0x1fff;var bh5=b5>>>13;var b6=b[6]|0;var bl6=b6&0x1fff;var bh6=b6>>>13;var b7=b[7]|0;var bl7=b7&0x1fff;var bh7=b7>>>13;var b8=b[8]|0;var bl8=b8&0x1fff;var bh8=b8>>>13;var b9=b[9]|0;var bl9=b9&0x1fff;var bh9=b9>>>13;out.negative=self.negative^num.negative;out.length=19;/* k = 0 */lo=Math.imul(al0,bl0);mid=Math.imul(al0,bh0);mid=mid+Math.imul(ah0,bl0)|0;hi=Math.imul(ah0,bh0);var w0=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w0>>>26)|0;w0&=0x3ffffff;/* k = 1 */lo=Math.imul(al1,bl0);mid=Math.imul(al1,bh0);mid=mid+Math.imul(ah1,bl0)|0;hi=Math.imul(ah1,bh0);lo=lo+Math.imul(al0,bl1)|0;mid=mid+Math.imul(al0,bh1)|0;mid=mid+Math.imul(ah0,bl1)|0;hi=hi+Math.imul(ah0,bh1)|0;var w1=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w1>>>26)|0;w1&=0x3ffffff;/* k = 2 */lo=Math.imul(al2,bl0);mid=Math.imul(al2,bh0);mid=mid+Math.imul(ah2,bl0)|0;hi=Math.imul(ah2,bh0);lo=lo+Math.imul(al1,bl1)|0;mid=mid+Math.imul(al1,bh1)|0;mid=mid+Math.imul(ah1,bl1)|0;hi=hi+Math.imul(ah1,bh1)|0;lo=lo+Math.imul(al0,bl2)|0;mid=mid+Math.imul(al0,bh2)|0;mid=mid+Math.imul(ah0,bl2)|0;hi=hi+Math.imul(ah0,bh2)|0;var w2=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w2>>>26)|0;w2&=0x3ffffff;/* k = 3 */lo=Math.imul(al3,bl0);mid=Math.imul(al3,bh0);mid=mid+Math.imul(ah3,bl0)|0;hi=Math.imul(ah3,bh0);lo=lo+Math.imul(al2,bl1)|0;mid=mid+Math.imul(al2,bh1)|0;mid=mid+Math.imul(ah2,bl1)|0;hi=hi+Math.imul(ah2,bh1)|0;lo=lo+Math.imul(al1,bl2)|0;mid=mid+Math.imul(al1,bh2)|0;mid=mid+Math.imul(ah1,bl2)|0;hi=hi+Math.imul(ah1,bh2)|0;lo=lo+Math.imul(al0,bl3)|0;mid=mid+Math.imul(al0,bh3)|0;mid=mid+Math.imul(ah0,bl3)|0;hi=hi+Math.imul(ah0,bh3)|0;var w3=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w3>>>26)|0;w3&=0x3ffffff;/* k = 4 */lo=Math.imul(al4,bl0);mid=Math.imul(al4,bh0);mid=mid+Math.imul(ah4,bl0)|0;hi=Math.imul(ah4,bh0);lo=lo+Math.imul(al3,bl1)|0;mid=mid+Math.imul(al3,bh1)|0;mid=mid+Math.imul(ah3,bl1)|0;hi=hi+Math.imul(ah3,bh1)|0;lo=lo+Math.imul(al2,bl2)|0;mid=mid+Math.imul(al2,bh2)|0;mid=mid+Math.imul(ah2,bl2)|0;hi=hi+Math.imul(ah2,bh2)|0;lo=lo+Math.imul(al1,bl3)|0;mid=mid+Math.imul(al1,bh3)|0;mid=mid+Math.imul(ah1,bl3)|0;hi=hi+Math.imul(ah1,bh3)|0;lo=lo+Math.imul(al0,bl4)|0;mid=mid+Math.imul(al0,bh4)|0;mid=mid+Math.imul(ah0,bl4)|0;hi=hi+Math.imul(ah0,bh4)|0;var w4=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w4>>>26)|0;w4&=0x3ffffff;/* k = 5 */lo=Math.imul(al5,bl0);mid=Math.imul(al5,bh0);mid=mid+Math.imul(ah5,bl0)|0;hi=Math.imul(ah5,bh0);lo=lo+Math.imul(al4,bl1)|0;mid=mid+Math.imul(al4,bh1)|0;mid=mid+Math.imul(ah4,bl1)|0;hi=hi+Math.imul(ah4,bh1)|0;lo=lo+Math.imul(al3,bl2)|0;mid=mid+Math.imul(al3,bh2)|0;mid=mid+Math.imul(ah3,bl2)|0;hi=hi+Math.imul(ah3,bh2)|0;lo=lo+Math.imul(al2,bl3)|0;mid=mid+Math.imul(al2,bh3)|0;mid=mid+Math.imul(ah2,bl3)|0;hi=hi+Math.imul(ah2,bh3)|0;lo=lo+Math.imul(al1,bl4)|0;mid=mid+Math.imul(al1,bh4)|0;mid=mid+Math.imul(ah1,bl4)|0;hi=hi+Math.imul(ah1,bh4)|0;lo=lo+Math.imul(al0,bl5)|0;mid=mid+Math.imul(al0,bh5)|0;mid=mid+Math.imul(ah0,bl5)|0;hi=hi+Math.imul(ah0,bh5)|0;var w5=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w5>>>26)|0;w5&=0x3ffffff;/* k = 6 */lo=Math.imul(al6,bl0);mid=Math.imul(al6,bh0);mid=mid+Math.imul(ah6,bl0)|0;hi=Math.imul(ah6,bh0);lo=lo+Math.imul(al5,bl1)|0;mid=mid+Math.imul(al5,bh1)|0;mid=mid+Math.imul(ah5,bl1)|0;hi=hi+Math.imul(ah5,bh1)|0;lo=lo+Math.imul(al4,bl2)|0;mid=mid+Math.imul(al4,bh2)|0;mid=mid+Math.imul(ah4,bl2)|0;hi=hi+Math.imul(ah4,bh2)|0;lo=lo+Math.imul(al3,bl3)|0;mid=mid+Math.imul(al3,bh3)|0;mid=mid+Math.imul(ah3,bl3)|0;hi=hi+Math.imul(ah3,bh3)|0;lo=lo+Math.imul(al2,bl4)|0;mid=mid+Math.imul(al2,bh4)|0;mid=mid+Math.imul(ah2,bl4)|0;hi=hi+Math.imul(ah2,bh4)|0;lo=lo+Math.imul(al1,bl5)|0;mid=mid+Math.imul(al1,bh5)|0;mid=mid+Math.imul(ah1,bl5)|0;hi=hi+Math.imul(ah1,bh5)|0;lo=lo+Math.imul(al0,bl6)|0;mid=mid+Math.imul(al0,bh6)|0;mid=mid+Math.imul(ah0,bl6)|0;hi=hi+Math.imul(ah0,bh6)|0;var w6=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w6>>>26)|0;w6&=0x3ffffff;/* k = 7 */lo=Math.imul(al7,bl0);mid=Math.imul(al7,bh0);mid=mid+Math.imul(ah7,bl0)|0;hi=Math.imul(ah7,bh0);lo=lo+Math.imul(al6,bl1)|0;mid=mid+Math.imul(al6,bh1)|0;mid=mid+Math.imul(ah6,bl1)|0;hi=hi+Math.imul(ah6,bh1)|0;lo=lo+Math.imul(al5,bl2)|0;mid=mid+Math.imul(al5,bh2)|0;mid=mid+Math.imul(ah5,bl2)|0;hi=hi+Math.imul(ah5,bh2)|0;lo=lo+Math.imul(al4,bl3)|0;mid=mid+Math.imul(al4,bh3)|0;mid=mid+Math.imul(ah4,bl3)|0;hi=hi+Math.imul(ah4,bh3)|0;lo=lo+Math.imul(al3,bl4)|0;mid=mid+Math.imul(al3,bh4)|0;mid=mid+Math.imul(ah3,bl4)|0;hi=hi+Math.imul(ah3,bh4)|0;lo=lo+Math.imul(al2,bl5)|0;mid=mid+Math.imul(al2,bh5)|0;mid=mid+Math.imul(ah2,bl5)|0;hi=hi+Math.imul(ah2,bh5)|0;lo=lo+Math.imul(al1,bl6)|0;mid=mid+Math.imul(al1,bh6)|0;mid=mid+Math.imul(ah1,bl6)|0;hi=hi+Math.imul(ah1,bh6)|0;lo=lo+Math.imul(al0,bl7)|0;mid=mid+Math.imul(al0,bh7)|0;mid=mid+Math.imul(ah0,bl7)|0;hi=hi+Math.imul(ah0,bh7)|0;var w7=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w7>>>26)|0;w7&=0x3ffffff;/* k = 8 */lo=Math.imul(al8,bl0);mid=Math.imul(al8,bh0);mid=mid+Math.imul(ah8,bl0)|0;hi=Math.imul(ah8,bh0);lo=lo+Math.imul(al7,bl1)|0;mid=mid+Math.imul(al7,bh1)|0;mid=mid+Math.imul(ah7,bl1)|0;hi=hi+Math.imul(ah7,bh1)|0;lo=lo+Math.imul(al6,bl2)|0;mid=mid+Math.imul(al6,bh2)|0;mid=mid+Math.imul(ah6,bl2)|0;hi=hi+Math.imul(ah6,bh2)|0;lo=lo+Math.imul(al5,bl3)|0;mid=mid+Math.imul(al5,bh3)|0;mid=mid+Math.imul(ah5,bl3)|0;hi=hi+Math.imul(ah5,bh3)|0;lo=lo+Math.imul(al4,bl4)|0;mid=mid+Math.imul(al4,bh4)|0;mid=mid+Math.imul(ah4,bl4)|0;hi=hi+Math.imul(ah4,bh4)|0;lo=lo+Math.imul(al3,bl5)|0;mid=mid+Math.imul(al3,bh5)|0;mid=mid+Math.imul(ah3,bl5)|0;hi=hi+Math.imul(ah3,bh5)|0;lo=lo+Math.imul(al2,bl6)|0;mid=mid+Math.imul(al2,bh6)|0;mid=mid+Math.imul(ah2,bl6)|0;hi=hi+Math.imul(ah2,bh6)|0;lo=lo+Math.imul(al1,bl7)|0;mid=mid+Math.imul(al1,bh7)|0;mid=mid+Math.imul(ah1,bl7)|0;hi=hi+Math.imul(ah1,bh7)|0;lo=lo+Math.imul(al0,bl8)|0;mid=mid+Math.imul(al0,bh8)|0;mid=mid+Math.imul(ah0,bl8)|0;hi=hi+Math.imul(ah0,bh8)|0;var w8=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w8>>>26)|0;w8&=0x3ffffff;/* k = 9 */lo=Math.imul(al9,bl0);mid=Math.imul(al9,bh0);mid=mid+Math.imul(ah9,bl0)|0;hi=Math.imul(ah9,bh0);lo=lo+Math.imul(al8,bl1)|0;mid=mid+Math.imul(al8,bh1)|0;mid=mid+Math.imul(ah8,bl1)|0;hi=hi+Math.imul(ah8,bh1)|0;lo=lo+Math.imul(al7,bl2)|0;mid=mid+Math.imul(al7,bh2)|0;mid=mid+Math.imul(ah7,bl2)|0;hi=hi+Math.imul(ah7,bh2)|0;lo=lo+Math.imul(al6,bl3)|0;mid=mid+Math.imul(al6,bh3)|0;mid=mid+Math.imul(ah6,bl3)|0;hi=hi+Math.imul(ah6,bh3)|0;lo=lo+Math.imul(al5,bl4)|0;mid=mid+Math.imul(al5,bh4)|0;mid=mid+Math.imul(ah5,bl4)|0;hi=hi+Math.imul(ah5,bh4)|0;lo=lo+Math.imul(al4,bl5)|0;mid=mid+Math.imul(al4,bh5)|0;mid=mid+Math.imul(ah4,bl5)|0;hi=hi+Math.imul(ah4,bh5)|0;lo=lo+Math.imul(al3,bl6)|0;mid=mid+Math.imul(al3,bh6)|0;mid=mid+Math.imul(ah3,bl6)|0;hi=hi+Math.imul(ah3,bh6)|0;lo=lo+Math.imul(al2,bl7)|0;mid=mid+Math.imul(al2,bh7)|0;mid=mid+Math.imul(ah2,bl7)|0;hi=hi+Math.imul(ah2,bh7)|0;lo=lo+Math.imul(al1,bl8)|0;mid=mid+Math.imul(al1,bh8)|0;mid=mid+Math.imul(ah1,bl8)|0;hi=hi+Math.imul(ah1,bh8)|0;lo=lo+Math.imul(al0,bl9)|0;mid=mid+Math.imul(al0,bh9)|0;mid=mid+Math.imul(ah0,bl9)|0;hi=hi+Math.imul(ah0,bh9)|0;var w9=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w9>>>26)|0;w9&=0x3ffffff;/* k = 10 */lo=Math.imul(al9,bl1);mid=Math.imul(al9,bh1);mid=mid+Math.imul(ah9,bl1)|0;hi=Math.imul(ah9,bh1);lo=lo+Math.imul(al8,bl2)|0;mid=mid+Math.imul(al8,bh2)|0;mid=mid+Math.imul(ah8,bl2)|0;hi=hi+Math.imul(ah8,bh2)|0;lo=lo+Math.imul(al7,bl3)|0;mid=mid+Math.imul(al7,bh3)|0;mid=mid+Math.imul(ah7,bl3)|0;hi=hi+Math.imul(ah7,bh3)|0;lo=lo+Math.imul(al6,bl4)|0;mid=mid+Math.imul(al6,bh4)|0;mid=mid+Math.imul(ah6,bl4)|0;hi=hi+Math.imul(ah6,bh4)|0;lo=lo+Math.imul(al5,bl5)|0;mid=mid+Math.imul(al5,bh5)|0;mid=mid+Math.imul(ah5,bl5)|0;hi=hi+Math.imul(ah5,bh5)|0;lo=lo+Math.imul(al4,bl6)|0;mid=mid+Math.imul(al4,bh6)|0;mid=mid+Math.imul(ah4,bl6)|0;hi=hi+Math.imul(ah4,bh6)|0;lo=lo+Math.imul(al3,bl7)|0;mid=mid+Math.imul(al3,bh7)|0;mid=mid+Math.imul(ah3,bl7)|0;hi=hi+Math.imul(ah3,bh7)|0;lo=lo+Math.imul(al2,bl8)|0;mid=mid+Math.imul(al2,bh8)|0;mid=mid+Math.imul(ah2,bl8)|0;hi=hi+Math.imul(ah2,bh8)|0;lo=lo+Math.imul(al1,bl9)|0;mid=mid+Math.imul(al1,bh9)|0;mid=mid+Math.imul(ah1,bl9)|0;hi=hi+Math.imul(ah1,bh9)|0;var w10=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w10>>>26)|0;w10&=0x3ffffff;/* k = 11 */lo=Math.imul(al9,bl2);mid=Math.imul(al9,bh2);mid=mid+Math.imul(ah9,bl2)|0;hi=Math.imul(ah9,bh2);lo=lo+Math.imul(al8,bl3)|0;mid=mid+Math.imul(al8,bh3)|0;mid=mid+Math.imul(ah8,bl3)|0;hi=hi+Math.imul(ah8,bh3)|0;lo=lo+Math.imul(al7,bl4)|0;mid=mid+Math.imul(al7,bh4)|0;mid=mid+Math.imul(ah7,bl4)|0;hi=hi+Math.imul(ah7,bh4)|0;lo=lo+Math.imul(al6,bl5)|0;mid=mid+Math.imul(al6,bh5)|0;mid=mid+Math.imul(ah6,bl5)|0;hi=hi+Math.imul(ah6,bh5)|0;lo=lo+Math.imul(al5,bl6)|0;mid=mid+Math.imul(al5,bh6)|0;mid=mid+Math.imul(ah5,bl6)|0;hi=hi+Math.imul(ah5,bh6)|0;lo=lo+Math.imul(al4,bl7)|0;mid=mid+Math.imul(al4,bh7)|0;mid=mid+Math.imul(ah4,bl7)|0;hi=hi+Math.imul(ah4,bh7)|0;lo=lo+Math.imul(al3,bl8)|0;mid=mid+Math.imul(al3,bh8)|0;mid=mid+Math.imul(ah3,bl8)|0;hi=hi+Math.imul(ah3,bh8)|0;lo=lo+Math.imul(al2,bl9)|0;mid=mid+Math.imul(al2,bh9)|0;mid=mid+Math.imul(ah2,bl9)|0;hi=hi+Math.imul(ah2,bh9)|0;var w11=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w11>>>26)|0;w11&=0x3ffffff;/* k = 12 */lo=Math.imul(al9,bl3);mid=Math.imul(al9,bh3);mid=mid+Math.imul(ah9,bl3)|0;hi=Math.imul(ah9,bh3);lo=lo+Math.imul(al8,bl4)|0;mid=mid+Math.imul(al8,bh4)|0;mid=mid+Math.imul(ah8,bl4)|0;hi=hi+Math.imul(ah8,bh4)|0;lo=lo+Math.imul(al7,bl5)|0;mid=mid+Math.imul(al7,bh5)|0;mid=mid+Math.imul(ah7,bl5)|0;hi=hi+Math.imul(ah7,bh5)|0;lo=lo+Math.imul(al6,bl6)|0;mid=mid+Math.imul(al6,bh6)|0;mid=mid+Math.imul(ah6,bl6)|0;hi=hi+Math.imul(ah6,bh6)|0;lo=lo+Math.imul(al5,bl7)|0;mid=mid+Math.imul(al5,bh7)|0;mid=mid+Math.imul(ah5,bl7)|0;hi=hi+Math.imul(ah5,bh7)|0;lo=lo+Math.imul(al4,bl8)|0;mid=mid+Math.imul(al4,bh8)|0;mid=mid+Math.imul(ah4,bl8)|0;hi=hi+Math.imul(ah4,bh8)|0;lo=lo+Math.imul(al3,bl9)|0;mid=mid+Math.imul(al3,bh9)|0;mid=mid+Math.imul(ah3,bl9)|0;hi=hi+Math.imul(ah3,bh9)|0;var w12=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w12>>>26)|0;w12&=0x3ffffff;/* k = 13 */lo=Math.imul(al9,bl4);mid=Math.imul(al9,bh4);mid=mid+Math.imul(ah9,bl4)|0;hi=Math.imul(ah9,bh4);lo=lo+Math.imul(al8,bl5)|0;mid=mid+Math.imul(al8,bh5)|0;mid=mid+Math.imul(ah8,bl5)|0;hi=hi+Math.imul(ah8,bh5)|0;lo=lo+Math.imul(al7,bl6)|0;mid=mid+Math.imul(al7,bh6)|0;mid=mid+Math.imul(ah7,bl6)|0;hi=hi+Math.imul(ah7,bh6)|0;lo=lo+Math.imul(al6,bl7)|0;mid=mid+Math.imul(al6,bh7)|0;mid=mid+Math.imul(ah6,bl7)|0;hi=hi+Math.imul(ah6,bh7)|0;lo=lo+Math.imul(al5,bl8)|0;mid=mid+Math.imul(al5,bh8)|0;mid=mid+Math.imul(ah5,bl8)|0;hi=hi+Math.imul(ah5,bh8)|0;lo=lo+Math.imul(al4,bl9)|0;mid=mid+Math.imul(al4,bh9)|0;mid=mid+Math.imul(ah4,bl9)|0;hi=hi+Math.imul(ah4,bh9)|0;var w13=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w13>>>26)|0;w13&=0x3ffffff;/* k = 14 */lo=Math.imul(al9,bl5);mid=Math.imul(al9,bh5);mid=mid+Math.imul(ah9,bl5)|0;hi=Math.imul(ah9,bh5);lo=lo+Math.imul(al8,bl6)|0;mid=mid+Math.imul(al8,bh6)|0;mid=mid+Math.imul(ah8,bl6)|0;hi=hi+Math.imul(ah8,bh6)|0;lo=lo+Math.imul(al7,bl7)|0;mid=mid+Math.imul(al7,bh7)|0;mid=mid+Math.imul(ah7,bl7)|0;hi=hi+Math.imul(ah7,bh7)|0;lo=lo+Math.imul(al6,bl8)|0;mid=mid+Math.imul(al6,bh8)|0;mid=mid+Math.imul(ah6,bl8)|0;hi=hi+Math.imul(ah6,bh8)|0;lo=lo+Math.imul(al5,bl9)|0;mid=mid+Math.imul(al5,bh9)|0;mid=mid+Math.imul(ah5,bl9)|0;hi=hi+Math.imul(ah5,bh9)|0;var w14=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w14>>>26)|0;w14&=0x3ffffff;/* k = 15 */lo=Math.imul(al9,bl6);mid=Math.imul(al9,bh6);mid=mid+Math.imul(ah9,bl6)|0;hi=Math.imul(ah9,bh6);lo=lo+Math.imul(al8,bl7)|0;mid=mid+Math.imul(al8,bh7)|0;mid=mid+Math.imul(ah8,bl7)|0;hi=hi+Math.imul(ah8,bh7)|0;lo=lo+Math.imul(al7,bl8)|0;mid=mid+Math.imul(al7,bh8)|0;mid=mid+Math.imul(ah7,bl8)|0;hi=hi+Math.imul(ah7,bh8)|0;lo=lo+Math.imul(al6,bl9)|0;mid=mid+Math.imul(al6,bh9)|0;mid=mid+Math.imul(ah6,bl9)|0;hi=hi+Math.imul(ah6,bh9)|0;var w15=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w15>>>26)|0;w15&=0x3ffffff;/* k = 16 */lo=Math.imul(al9,bl7);mid=Math.imul(al9,bh7);mid=mid+Math.imul(ah9,bl7)|0;hi=Math.imul(ah9,bh7);lo=lo+Math.imul(al8,bl8)|0;mid=mid+Math.imul(al8,bh8)|0;mid=mid+Math.imul(ah8,bl8)|0;hi=hi+Math.imul(ah8,bh8)|0;lo=lo+Math.imul(al7,bl9)|0;mid=mid+Math.imul(al7,bh9)|0;mid=mid+Math.imul(ah7,bl9)|0;hi=hi+Math.imul(ah7,bh9)|0;var w16=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w16>>>26)|0;w16&=0x3ffffff;/* k = 17 */lo=Math.imul(al9,bl8);mid=Math.imul(al9,bh8);mid=mid+Math.imul(ah9,bl8)|0;hi=Math.imul(ah9,bh8);lo=lo+Math.imul(al8,bl9)|0;mid=mid+Math.imul(al8,bh9)|0;mid=mid+Math.imul(ah8,bl9)|0;hi=hi+Math.imul(ah8,bh9)|0;var w17=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w17>>>26)|0;w17&=0x3ffffff;/* k = 18 */lo=Math.imul(al9,bl9);mid=Math.imul(al9,bh9);mid=mid+Math.imul(ah9,bl9)|0;hi=Math.imul(ah9,bh9);var w18=(c+lo|0)+((mid&0x1fff)<<13)|0;c=(hi+(mid>>>13)|0)+(w18>>>26)|0;w18&=0x3ffffff;o[0]=w0;o[1]=w1;o[2]=w2;o[3]=w3;o[4]=w4;o[5]=w5;o[6]=w6;o[7]=w7;o[8]=w8;o[9]=w9;o[10]=w10;o[11]=w11;o[12]=w12;o[13]=w13;o[14]=w14;o[15]=w15;o[16]=w16;o[17]=w17;o[18]=w18;if(c!==0){o[19]=c;out.length++;}return out;};// Polyfill comb\nif(!Math.imul){comb10MulTo=smallMulTo;}function bigMulTo(self,num,out){out.negative=num.negative^self.negative;out.length=self.length+num.length;var carry=0;var hncarry=0;for(var k=0;k<out.length-1;k++){// Sum all words with the same `i + j = k` and accumulate `ncarry`,\n// note that ncarry could be >= 0x3ffffff\nvar ncarry=hncarry;hncarry=0;var rword=carry&0x3ffffff;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self.length+1);j<=maxJ;j++){var i=k-j;var a=self.words[i]|0;var b=num.words[j]|0;var r=a*b;var lo=r&0x3ffffff;ncarry=ncarry+(r/0x4000000|0)|0;lo=lo+rword|0;rword=lo&0x3ffffff;ncarry=ncarry+(lo>>>26)|0;hncarry+=ncarry>>>26;ncarry&=0x3ffffff;}out.words[k]=rword;carry=ncarry;ncarry=hncarry;}if(carry!==0){out.words[k]=carry;}else{out.length--;}return out.strip();}function jumboMulTo(self,num,out){var fftm=new FFTM();return fftm.mulp(self,num,out);}BN.prototype.mulTo=function mulTo(num,out){var res;var len=this.length+num.length;if(this.length===10&&num.length===10){res=comb10MulTo(this,num,out);}else if(len<63){res=smallMulTo(this,num,out);}else if(len<1024){res=bigMulTo(this,num,out);}else{res=jumboMulTo(this,num,out);}return res;};// Cooley-Tukey algorithm for FFT\n// slightly revisited to rely on looping instead of recursion\nfunction FFTM(x,y){this.x=x;this.y=y;}FFTM.prototype.makeRBT=function makeRBT(N){var t=new Array(N);var l=BN.prototype._countBits(N)-1;for(var i=0;i<N;i++){t[i]=this.revBin(i,l,N);}return t;};// Returns binary-reversed representation of `x`\nFFTM.prototype.revBin=function revBin(x,l,N){if(x===0||x===N-1)return x;var rb=0;for(var i=0;i<l;i++){rb|=(x&1)<<l-i-1;x>>=1;}return rb;};// Performs \"tweedling\" phase, therefore 'emulating'\n// behaviour of the recursive algorithm\nFFTM.prototype.permute=function permute(rbt,rws,iws,rtws,itws,N){for(var i=0;i<N;i++){rtws[i]=rws[rbt[i]];itws[i]=iws[rbt[i]];}};FFTM.prototype.transform=function transform(rws,iws,rtws,itws,N,rbt){this.permute(rbt,rws,iws,rtws,itws,N);for(var s=1;s<N;s<<=1){var l=s<<1;var rtwdf=Math.cos(2*Math.PI/l);var itwdf=Math.sin(2*Math.PI/l);for(var p=0;p<N;p+=l){var rtwdf_=rtwdf;var itwdf_=itwdf;for(var j=0;j<s;j++){var re=rtws[p+j];var ie=itws[p+j];var ro=rtws[p+j+s];var io=itws[p+j+s];var rx=rtwdf_*ro-itwdf_*io;io=rtwdf_*io+itwdf_*ro;ro=rx;rtws[p+j]=re+ro;itws[p+j]=ie+io;rtws[p+j+s]=re-ro;itws[p+j+s]=ie-io;/* jshint maxdepth : false */if(j!==l){rx=rtwdf*rtwdf_-itwdf*itwdf_;itwdf_=rtwdf*itwdf_+itwdf*rtwdf_;rtwdf_=rx;}}}}};FFTM.prototype.guessLen13b=function guessLen13b(n,m){var N=Math.max(m,n)|1;var odd=N&1;var i=0;for(N=N/2|0;N;N=N>>>1){i++;}return 1<<i+1+odd;};FFTM.prototype.conjugate=function conjugate(rws,iws,N){if(N<=1)return;for(var i=0;i<N/2;i++){var t=rws[i];rws[i]=rws[N-i-1];rws[N-i-1]=t;t=iws[i];iws[i]=-iws[N-i-1];iws[N-i-1]=-t;}};FFTM.prototype.normalize13b=function normalize13b(ws,N){var carry=0;for(var i=0;i<N/2;i++){var w=Math.round(ws[2*i+1]/N)*0x2000+Math.round(ws[2*i]/N)+carry;ws[i]=w&0x3ffffff;if(w<0x4000000){carry=0;}else{carry=w/0x4000000|0;}}return ws;};FFTM.prototype.convert13b=function convert13b(ws,len,rws,N){var carry=0;for(var i=0;i<len;i++){carry=carry+(ws[i]|0);rws[2*i]=carry&0x1fff;carry=carry>>>13;rws[2*i+1]=carry&0x1fff;carry=carry>>>13;}// Pad with zeroes\nfor(i=2*len;i<N;++i){rws[i]=0;}assert(carry===0);assert((carry&~0x1fff)===0);};FFTM.prototype.stub=function stub(N){var ph=new Array(N);for(var i=0;i<N;i++){ph[i]=0;}return ph;};FFTM.prototype.mulp=function mulp(x,y,out){var N=2*this.guessLen13b(x.length,y.length);var rbt=this.makeRBT(N);var _=this.stub(N);var rws=new Array(N);var rwst=new Array(N);var iwst=new Array(N);var nrws=new Array(N);var nrwst=new Array(N);var niwst=new Array(N);var rmws=out.words;rmws.length=N;this.convert13b(x.words,x.length,rws,N);this.convert13b(y.words,y.length,nrws,N);this.transform(rws,_,rwst,iwst,N,rbt);this.transform(nrws,_,nrwst,niwst,N,rbt);for(var i=0;i<N;i++){var rx=rwst[i]*nrwst[i]-iwst[i]*niwst[i];iwst[i]=rwst[i]*niwst[i]+iwst[i]*nrwst[i];rwst[i]=rx;}this.conjugate(rwst,iwst,N);this.transform(rwst,iwst,rmws,_,N,rbt);this.conjugate(rmws,_,N);this.normalize13b(rmws,N);out.negative=x.negative^y.negative;out.length=x.length+y.length;return out.strip();};// Multiply `this` by `num`\nBN.prototype.mul=function mul(num){var out=new BN(null);out.words=new Array(this.length+num.length);return this.mulTo(num,out);};// Multiply employing FFT\nBN.prototype.mulf=function mulf(num){var out=new BN(null);out.words=new Array(this.length+num.length);return jumboMulTo(this,num,out);};// In-place Multiplication\nBN.prototype.imul=function imul(num){return this.clone().mulTo(num,this);};BN.prototype.imuln=function imuln(num){assert(typeof num==='number');assert(num<0x4000000);// Carry\nvar carry=0;for(var i=0;i<this.length;i++){var w=(this.words[i]|0)*num;var lo=(w&0x3ffffff)+(carry&0x3ffffff);carry>>=26;carry+=w/0x4000000|0;// NOTE: lo is 27bit maximum\ncarry+=lo>>>26;this.words[i]=lo&0x3ffffff;}if(carry!==0){this.words[i]=carry;this.length++;}return this;};BN.prototype.muln=function muln(num){return this.clone().imuln(num);};// `this` * `this`\nBN.prototype.sqr=function sqr(){return this.mul(this);};// `this` * `this` in-place\nBN.prototype.isqr=function isqr(){return this.imul(this.clone());};// Math.pow(`this`, `num`)\nBN.prototype.pow=function pow(num){var w=toBitArray(num);if(w.length===0)return new BN(1);// Skip leading zeroes\nvar res=this;for(var i=0;i<w.length;i++,res=res.sqr()){if(w[i]!==0)break;}if(++i<w.length){for(var q=res.sqr();i<w.length;i++,q=q.sqr()){if(w[i]===0)continue;res=res.mul(q);}}return res;};// Shift-left in-place\nBN.prototype.iushln=function iushln(bits){assert(typeof bits==='number'&&bits>=0);var r=bits%26;var s=(bits-r)/26;var carryMask=0x3ffffff>>>26-r<<26-r;var i;if(r!==0){var carry=0;for(i=0;i<this.length;i++){var newCarry=this.words[i]&carryMask;var c=(this.words[i]|0)-newCarry<<r;this.words[i]=c|carry;carry=newCarry>>>26-r;}if(carry){this.words[i]=carry;this.length++;}}if(s!==0){for(i=this.length-1;i>=0;i--){this.words[i+s]=this.words[i];}for(i=0;i<s;i++){this.words[i]=0;}this.length+=s;}return this.strip();};BN.prototype.ishln=function ishln(bits){// TODO(indutny): implement me\nassert(this.negative===0);return this.iushln(bits);};// Shift-right in-place\n// NOTE: `hint` is a lowest bit before trailing zeroes\n// NOTE: if `extended` is present - it will be filled with destroyed bits\nBN.prototype.iushrn=function iushrn(bits,hint,extended){assert(typeof bits==='number'&&bits>=0);var h;if(hint){h=(hint-hint%26)/26;}else{h=0;}var r=bits%26;var s=Math.min((bits-r)/26,this.length);var mask=0x3ffffff^0x3ffffff>>>r<<r;var maskedWords=extended;h-=s;h=Math.max(0,h);// Extended mode, copy masked part\nif(maskedWords){for(var i=0;i<s;i++){maskedWords.words[i]=this.words[i];}maskedWords.length=s;}if(s===0){// No-op, we should not move anything at all\n}else if(this.length>s){this.length-=s;for(i=0;i<this.length;i++){this.words[i]=this.words[i+s];}}else{this.words[0]=0;this.length=1;}var carry=0;for(i=this.length-1;i>=0&&(carry!==0||i>=h);i--){var word=this.words[i]|0;this.words[i]=carry<<26-r|word>>>r;carry=word&mask;}// Push carried bits as a mask\nif(maskedWords&&carry!==0){maskedWords.words[maskedWords.length++]=carry;}if(this.length===0){this.words[0]=0;this.length=1;}return this.strip();};BN.prototype.ishrn=function ishrn(bits,hint,extended){// TODO(indutny): implement me\nassert(this.negative===0);return this.iushrn(bits,hint,extended);};// Shift-left\nBN.prototype.shln=function shln(bits){return this.clone().ishln(bits);};BN.prototype.ushln=function ushln(bits){return this.clone().iushln(bits);};// Shift-right\nBN.prototype.shrn=function shrn(bits){return this.clone().ishrn(bits);};BN.prototype.ushrn=function ushrn(bits){return this.clone().iushrn(bits);};// Test if n bit is set\nBN.prototype.testn=function testn(bit){assert(typeof bit==='number'&&bit>=0);var r=bit%26;var s=(bit-r)/26;var q=1<<r;// Fast case: bit is much higher than all existing words\nif(this.length<=s)return false;// Check bit and return\nvar w=this.words[s];return!!(w&q);};// Return only lowers bits of number (in-place)\nBN.prototype.imaskn=function imaskn(bits){assert(typeof bits==='number'&&bits>=0);var r=bits%26;var s=(bits-r)/26;assert(this.negative===0,'imaskn works only with positive numbers');if(this.length<=s){return this;}if(r!==0){s++;}this.length=Math.min(s,this.length);if(r!==0){var mask=0x3ffffff^0x3ffffff>>>r<<r;this.words[this.length-1]&=mask;}return this.strip();};// Return only lowers bits of number\nBN.prototype.maskn=function maskn(bits){return this.clone().imaskn(bits);};// Add plain number `num` to `this`\nBN.prototype.iaddn=function iaddn(num){assert(typeof num==='number');assert(num<0x4000000);if(num<0)return this.isubn(-num);// Possible sign change\nif(this.negative!==0){if(this.length===1&&(this.words[0]|0)<num){this.words[0]=num-(this.words[0]|0);this.negative=0;return this;}this.negative=0;this.isubn(num);this.negative=1;return this;}// Add without checks\nreturn this._iaddn(num);};BN.prototype._iaddn=function _iaddn(num){this.words[0]+=num;// Carry\nfor(var i=0;i<this.length&&this.words[i]>=0x4000000;i++){this.words[i]-=0x4000000;if(i===this.length-1){this.words[i+1]=1;}else{this.words[i+1]++;}}this.length=Math.max(this.length,i+1);return this;};// Subtract plain number `num` from `this`\nBN.prototype.isubn=function isubn(num){assert(typeof num==='number');assert(num<0x4000000);if(num<0)return this.iaddn(-num);if(this.negative!==0){this.negative=0;this.iaddn(num);this.negative=1;return this;}this.words[0]-=num;if(this.length===1&&this.words[0]<0){this.words[0]=-this.words[0];this.negative=1;}else{// Carry\nfor(var i=0;i<this.length&&this.words[i]<0;i++){this.words[i]+=0x4000000;this.words[i+1]-=1;}}return this.strip();};BN.prototype.addn=function addn(num){return this.clone().iaddn(num);};BN.prototype.subn=function subn(num){return this.clone().isubn(num);};BN.prototype.iabs=function iabs(){this.negative=0;return this;};BN.prototype.abs=function abs(){return this.clone().iabs();};BN.prototype._ishlnsubmul=function _ishlnsubmul(num,mul,shift){var len=num.length+shift;var i;this._expand(len);var w;var carry=0;for(i=0;i<num.length;i++){w=(this.words[i+shift]|0)+carry;var right=(num.words[i]|0)*mul;w-=right&0x3ffffff;carry=(w>>26)-(right/0x4000000|0);this.words[i+shift]=w&0x3ffffff;}for(;i<this.length-shift;i++){w=(this.words[i+shift]|0)+carry;carry=w>>26;this.words[i+shift]=w&0x3ffffff;}if(carry===0)return this.strip();// Subtraction overflow\nassert(carry===-1);carry=0;for(i=0;i<this.length;i++){w=-(this.words[i]|0)+carry;carry=w>>26;this.words[i]=w&0x3ffffff;}this.negative=1;return this.strip();};BN.prototype._wordDiv=function _wordDiv(num,mode){var shift=this.length-num.length;var a=this.clone();var b=num;// Normalize\nvar bhi=b.words[b.length-1]|0;var bhiBits=this._countBits(bhi);shift=26-bhiBits;if(shift!==0){b=b.ushln(shift);a.iushln(shift);bhi=b.words[b.length-1]|0;}// Initialize quotient\nvar m=a.length-b.length;var q;if(mode!=='mod'){q=new BN(null);q.length=m+1;q.words=new Array(q.length);for(var i=0;i<q.length;i++){q.words[i]=0;}}var diff=a.clone()._ishlnsubmul(b,1,m);if(diff.negative===0){a=diff;if(q){q.words[m]=1;}}for(var j=m-1;j>=0;j--){var qj=(a.words[b.length+j]|0)*0x4000000+(a.words[b.length+j-1]|0);// NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n// (0x7ffffff)\nqj=Math.min(qj/bhi|0,0x3ffffff);a._ishlnsubmul(b,qj,j);while(a.negative!==0){qj--;a.negative=0;a._ishlnsubmul(b,1,j);if(!a.isZero()){a.negative^=1;}}if(q){q.words[j]=qj;}}if(q){q.strip();}a.strip();// Denormalize\nif(mode!=='div'&&shift!==0){a.iushrn(shift);}return{div:q||null,mod:a};};// NOTE: 1) `mode` can be set to `mod` to request mod only,\n//       to `div` to request div only, or be absent to\n//       request both div & mod\n//       2) `positive` is true if unsigned mod is requested\nBN.prototype.divmod=function divmod(num,mode,positive){assert(!num.isZero());if(this.isZero()){return{div:new BN(0),mod:new BN(0)};}var div,mod,res;if(this.negative!==0&&num.negative===0){res=this.neg().divmod(num,mode);if(mode!=='mod'){div=res.div.neg();}if(mode!=='div'){mod=res.mod.neg();if(positive&&mod.negative!==0){mod.iadd(num);}}return{div:div,mod:mod};}if(this.negative===0&&num.negative!==0){res=this.divmod(num.neg(),mode);if(mode!=='mod'){div=res.div.neg();}return{div:div,mod:res.mod};}if((this.negative&num.negative)!==0){res=this.neg().divmod(num.neg(),mode);if(mode!=='div'){mod=res.mod.neg();if(positive&&mod.negative!==0){mod.isub(num);}}return{div:res.div,mod:mod};}// Both numbers are positive at this point\n// Strip both numbers to approximate shift value\nif(num.length>this.length||this.cmp(num)<0){return{div:new BN(0),mod:this};}// Very short reduction\nif(num.length===1){if(mode==='div'){return{div:this.divn(num.words[0]),mod:null};}if(mode==='mod'){return{div:null,mod:new BN(this.modn(num.words[0]))};}return{div:this.divn(num.words[0]),mod:new BN(this.modn(num.words[0]))};}return this._wordDiv(num,mode);};// Find `this` / `num`\nBN.prototype.div=function div(num){return this.divmod(num,'div',false).div;};// Find `this` % `num`\nBN.prototype.mod=function mod(num){return this.divmod(num,'mod',false).mod;};BN.prototype.umod=function umod(num){return this.divmod(num,'mod',true).mod;};// Find Round(`this` / `num`)\nBN.prototype.divRound=function divRound(num){var dm=this.divmod(num);// Fast case - exact division\nif(dm.mod.isZero())return dm.div;var mod=dm.div.negative!==0?dm.mod.isub(num):dm.mod;var half=num.ushrn(1);var r2=num.andln(1);var cmp=mod.cmp(half);// Round down\nif(cmp<0||r2===1&&cmp===0)return dm.div;// Round up\nreturn dm.div.negative!==0?dm.div.isubn(1):dm.div.iaddn(1);};BN.prototype.modn=function modn(num){assert(num<=0x3ffffff);var p=(1<<26)%num;var acc=0;for(var i=this.length-1;i>=0;i--){acc=(p*acc+(this.words[i]|0))%num;}return acc;};// In-place division by number\nBN.prototype.idivn=function idivn(num){assert(num<=0x3ffffff);var carry=0;for(var i=this.length-1;i>=0;i--){var w=(this.words[i]|0)+carry*0x4000000;this.words[i]=w/num|0;carry=w%num;}return this.strip();};BN.prototype.divn=function divn(num){return this.clone().idivn(num);};BN.prototype.egcd=function egcd(p){assert(p.negative===0);assert(!p.isZero());var x=this;var y=p.clone();if(x.negative!==0){x=x.umod(p);}else{x=x.clone();}// A * x + B * y = x\nvar A=new BN(1);var B=new BN(0);// C * x + D * y = y\nvar C=new BN(0);var D=new BN(1);var g=0;while(x.isEven()&&y.isEven()){x.iushrn(1);y.iushrn(1);++g;}var yp=y.clone();var xp=x.clone();while(!x.isZero()){for(var i=0,im=1;(x.words[0]&im)===0&&i<26;++i,im<<=1){;}if(i>0){x.iushrn(i);while(i--\x3e0){if(A.isOdd()||B.isOdd()){A.iadd(yp);B.isub(xp);}A.iushrn(1);B.iushrn(1);}}for(var j=0,jm=1;(y.words[0]&jm)===0&&j<26;++j,jm<<=1){;}if(j>0){y.iushrn(j);while(j--\x3e0){if(C.isOdd()||D.isOdd()){C.iadd(yp);D.isub(xp);}C.iushrn(1);D.iushrn(1);}}if(x.cmp(y)>=0){x.isub(y);A.isub(C);B.isub(D);}else{y.isub(x);C.isub(A);D.isub(B);}}return{a:C,b:D,gcd:y.iushln(g)};};// This is reduced incarnation of the binary EEA\n// above, designated to invert members of the\n// _prime_ fields F(p) at a maximal speed\nBN.prototype._invmp=function _invmp(p){assert(p.negative===0);assert(!p.isZero());var a=this;var b=p.clone();if(a.negative!==0){a=a.umod(p);}else{a=a.clone();}var x1=new BN(1);var x2=new BN(0);var delta=b.clone();while(a.cmpn(1)>0&&b.cmpn(1)>0){for(var i=0,im=1;(a.words[0]&im)===0&&i<26;++i,im<<=1){;}if(i>0){a.iushrn(i);while(i--\x3e0){if(x1.isOdd()){x1.iadd(delta);}x1.iushrn(1);}}for(var j=0,jm=1;(b.words[0]&jm)===0&&j<26;++j,jm<<=1){;}if(j>0){b.iushrn(j);while(j--\x3e0){if(x2.isOdd()){x2.iadd(delta);}x2.iushrn(1);}}if(a.cmp(b)>=0){a.isub(b);x1.isub(x2);}else{b.isub(a);x2.isub(x1);}}var res;if(a.cmpn(1)===0){res=x1;}else{res=x2;}if(res.cmpn(0)<0){res.iadd(p);}return res;};BN.prototype.gcd=function gcd(num){if(this.isZero())return num.abs();if(num.isZero())return this.abs();var a=this.clone();var b=num.clone();a.negative=0;b.negative=0;// Remove common factor of two\nfor(var shift=0;a.isEven()&&b.isEven();shift++){a.iushrn(1);b.iushrn(1);}do{while(a.isEven()){a.iushrn(1);}while(b.isEven()){b.iushrn(1);}var r=a.cmp(b);if(r<0){// Swap `a` and `b` to make `a` always bigger than `b`\nvar t=a;a=b;b=t;}else if(r===0||b.cmpn(1)===0){break;}a.isub(b);}while(true);return b.iushln(shift);};// Invert number in the field F(num)\nBN.prototype.invm=function invm(num){return this.egcd(num).a.umod(num);};BN.prototype.isEven=function isEven(){return(this.words[0]&1)===0;};BN.prototype.isOdd=function isOdd(){return(this.words[0]&1)===1;};// And first word and num\nBN.prototype.andln=function andln(num){return this.words[0]&num;};// Increment at the bit position in-line\nBN.prototype.bincn=function bincn(bit){assert(typeof bit==='number');var r=bit%26;var s=(bit-r)/26;var q=1<<r;// Fast case: bit is much higher than all existing words\nif(this.length<=s){this._expand(s+1);this.words[s]|=q;return this;}// Add bit and propagate, if needed\nvar carry=q;for(var i=s;carry!==0&&i<this.length;i++){var w=this.words[i]|0;w+=carry;carry=w>>>26;w&=0x3ffffff;this.words[i]=w;}if(carry!==0){this.words[i]=carry;this.length++;}return this;};BN.prototype.isZero=function isZero(){return this.length===1&&this.words[0]===0;};BN.prototype.cmpn=function cmpn(num){var negative=num<0;if(this.negative!==0&&!negative)return-1;if(this.negative===0&&negative)return 1;this.strip();var res;if(this.length>1){res=1;}else{if(negative){num=-num;}assert(num<=0x3ffffff,'Number is too big');var w=this.words[0]|0;res=w===num?0:w<num?-1:1;}if(this.negative!==0)return-res|0;return res;};// Compare two numbers and return:\n// 1 - if `this` > `num`\n// 0 - if `this` == `num`\n// -1 - if `this` < `num`\nBN.prototype.cmp=function cmp(num){if(this.negative!==0&&num.negative===0)return-1;if(this.negative===0&&num.negative!==0)return 1;var res=this.ucmp(num);if(this.negative!==0)return-res|0;return res;};// Unsigned comparison\nBN.prototype.ucmp=function ucmp(num){// At this point both numbers have the same sign\nif(this.length>num.length)return 1;if(this.length<num.length)return-1;var res=0;for(var i=this.length-1;i>=0;i--){var a=this.words[i]|0;var b=num.words[i]|0;if(a===b)continue;if(a<b){res=-1;}else if(a>b){res=1;}break;}return res;};BN.prototype.gtn=function gtn(num){return this.cmpn(num)===1;};BN.prototype.gt=function gt(num){return this.cmp(num)===1;};BN.prototype.gten=function gten(num){return this.cmpn(num)>=0;};BN.prototype.gte=function gte(num){return this.cmp(num)>=0;};BN.prototype.ltn=function ltn(num){return this.cmpn(num)===-1;};BN.prototype.lt=function lt(num){return this.cmp(num)===-1;};BN.prototype.lten=function lten(num){return this.cmpn(num)<=0;};BN.prototype.lte=function lte(num){return this.cmp(num)<=0;};BN.prototype.eqn=function eqn(num){return this.cmpn(num)===0;};BN.prototype.eq=function eq(num){return this.cmp(num)===0;};//\n// A reduce context, could be using montgomery or something better, depending\n// on the `m` itself.\n//\nBN.red=function red(num){return new Red(num);};BN.prototype.toRed=function toRed(ctx){assert(!this.red,'Already a number in reduction context');assert(this.negative===0,'red works only with positives');return ctx.convertTo(this)._forceRed(ctx);};BN.prototype.fromRed=function fromRed(){assert(this.red,'fromRed works only with numbers in reduction context');return this.red.convertFrom(this);};BN.prototype._forceRed=function _forceRed(ctx){this.red=ctx;return this;};BN.prototype.forceRed=function forceRed(ctx){assert(!this.red,'Already a number in reduction context');return this._forceRed(ctx);};BN.prototype.redAdd=function redAdd(num){assert(this.red,'redAdd works only with red numbers');return this.red.add(this,num);};BN.prototype.redIAdd=function redIAdd(num){assert(this.red,'redIAdd works only with red numbers');return this.red.iadd(this,num);};BN.prototype.redSub=function redSub(num){assert(this.red,'redSub works only with red numbers');return this.red.sub(this,num);};BN.prototype.redISub=function redISub(num){assert(this.red,'redISub works only with red numbers');return this.red.isub(this,num);};BN.prototype.redShl=function redShl(num){assert(this.red,'redShl works only with red numbers');return this.red.shl(this,num);};BN.prototype.redMul=function redMul(num){assert(this.red,'redMul works only with red numbers');this.red._verify2(this,num);return this.red.mul(this,num);};BN.prototype.redIMul=function redIMul(num){assert(this.red,'redMul works only with red numbers');this.red._verify2(this,num);return this.red.imul(this,num);};BN.prototype.redSqr=function redSqr(){assert(this.red,'redSqr works only with red numbers');this.red._verify1(this);return this.red.sqr(this);};BN.prototype.redISqr=function redISqr(){assert(this.red,'redISqr works only with red numbers');this.red._verify1(this);return this.red.isqr(this);};// Square root over p\nBN.prototype.redSqrt=function redSqrt(){assert(this.red,'redSqrt works only with red numbers');this.red._verify1(this);return this.red.sqrt(this);};BN.prototype.redInvm=function redInvm(){assert(this.red,'redInvm works only with red numbers');this.red._verify1(this);return this.red.invm(this);};// Return negative clone of `this` % `red modulo`\nBN.prototype.redNeg=function redNeg(){assert(this.red,'redNeg works only with red numbers');this.red._verify1(this);return this.red.neg(this);};BN.prototype.redPow=function redPow(num){assert(this.red&&!num.red,'redPow(normalNum)');this.red._verify1(this);return this.red.pow(this,num);};// Prime numbers with efficient reduction\nvar primes={k256:null,p224:null,p192:null,p25519:null};// Pseudo-Mersenne prime\nfunction MPrime(name,p){// P = 2 ^ N - K\nthis.name=name;this.p=new BN(p,16);this.n=this.p.bitLength();this.k=new BN(1).iushln(this.n).isub(this.p);this.tmp=this._tmp();}MPrime.prototype._tmp=function _tmp(){var tmp=new BN(null);tmp.words=new Array(Math.ceil(this.n/13));return tmp;};MPrime.prototype.ireduce=function ireduce(num){// Assumes that `num` is less than `P^2`\n// num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\nvar r=num;var rlen;do{this.split(r,this.tmp);r=this.imulK(r);r=r.iadd(this.tmp);rlen=r.bitLength();}while(rlen>this.n);var cmp=rlen<this.n?-1:r.ucmp(this.p);if(cmp===0){r.words[0]=0;r.length=1;}else if(cmp>0){r.isub(this.p);}else{r.strip();}return r;};MPrime.prototype.split=function split(input,out){input.iushrn(this.n,0,out);};MPrime.prototype.imulK=function imulK(num){return num.imul(this.k);};function K256(){MPrime.call(this,'k256','ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');}inherits(K256,MPrime);K256.prototype.split=function split(input,output){// 256 = 9 * 26 + 22\nvar mask=0x3fffff;var outLen=Math.min(input.length,9);for(var i=0;i<outLen;i++){output.words[i]=input.words[i];}output.length=outLen;if(input.length<=9){input.words[0]=0;input.length=1;return;}// Shift by 9 limbs\nvar prev=input.words[9];output.words[output.length++]=prev&mask;for(i=10;i<input.length;i++){var next=input.words[i]|0;input.words[i-10]=(next&mask)<<4|prev>>>22;prev=next;}prev>>>=22;input.words[i-10]=prev;if(prev===0&&input.length>10){input.length-=10;}else{input.length-=9;}};K256.prototype.imulK=function imulK(num){// K = 0x1000003d1 = [ 0x40, 0x3d1 ]\nnum.words[num.length]=0;num.words[num.length+1]=0;num.length+=2;// bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\nvar lo=0;for(var i=0;i<num.length;i++){var w=num.words[i]|0;lo+=w*0x3d1;num.words[i]=lo&0x3ffffff;lo=w*0x40+(lo/0x4000000|0);}// Fast length reduction\nif(num.words[num.length-1]===0){num.length--;if(num.words[num.length-1]===0){num.length--;}}return num;};function P224(){MPrime.call(this,'p224','ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');}inherits(P224,MPrime);function P192(){MPrime.call(this,'p192','ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');}inherits(P192,MPrime);function P25519(){// 2 ^ 255 - 19\nMPrime.call(this,'25519','7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');}inherits(P25519,MPrime);P25519.prototype.imulK=function imulK(num){// K = 0x13\nvar carry=0;for(var i=0;i<num.length;i++){var hi=(num.words[i]|0)*0x13+carry;var lo=hi&0x3ffffff;hi>>>=26;num.words[i]=lo;carry=hi;}if(carry!==0){num.words[num.length++]=carry;}return num;};// Exported mostly for testing purposes, use plain name instead\nBN._prime=function prime(name){// Cached version of prime\nif(primes[name])return primes[name];var prime;if(name==='k256'){prime=new K256();}else if(name==='p224'){prime=new P224();}else if(name==='p192'){prime=new P192();}else if(name==='p25519'){prime=new P25519();}else{throw new Error('Unknown prime '+name);}primes[name]=prime;return prime;};//\n// Base reduction engine\n//\nfunction Red(m){if(typeof m==='string'){var prime=BN._prime(m);this.m=prime.p;this.prime=prime;}else{assert(m.gtn(1),'modulus must be greater than 1');this.m=m;this.prime=null;}}Red.prototype._verify1=function _verify1(a){assert(a.negative===0,'red works only with positives');assert(a.red,'red works only with red numbers');};Red.prototype._verify2=function _verify2(a,b){assert((a.negative|b.negative)===0,'red works only with positives');assert(a.red&&a.red===b.red,'red works only with red numbers');};Red.prototype.imod=function imod(a){if(this.prime)return this.prime.ireduce(a)._forceRed(this);return a.umod(this.m)._forceRed(this);};Red.prototype.neg=function neg(a){if(a.isZero()){return a.clone();}return this.m.sub(a)._forceRed(this);};Red.prototype.add=function add(a,b){this._verify2(a,b);var res=a.add(b);if(res.cmp(this.m)>=0){res.isub(this.m);}return res._forceRed(this);};Red.prototype.iadd=function iadd(a,b){this._verify2(a,b);var res=a.iadd(b);if(res.cmp(this.m)>=0){res.isub(this.m);}return res;};Red.prototype.sub=function sub(a,b){this._verify2(a,b);var res=a.sub(b);if(res.cmpn(0)<0){res.iadd(this.m);}return res._forceRed(this);};Red.prototype.isub=function isub(a,b){this._verify2(a,b);var res=a.isub(b);if(res.cmpn(0)<0){res.iadd(this.m);}return res;};Red.prototype.shl=function shl(a,num){this._verify1(a);return this.imod(a.ushln(num));};Red.prototype.imul=function imul(a,b){this._verify2(a,b);return this.imod(a.imul(b));};Red.prototype.mul=function mul(a,b){this._verify2(a,b);return this.imod(a.mul(b));};Red.prototype.isqr=function isqr(a){return this.imul(a,a.clone());};Red.prototype.sqr=function sqr(a){return this.mul(a,a);};Red.prototype.sqrt=function sqrt(a){if(a.isZero())return a.clone();var mod3=this.m.andln(3);assert(mod3%2===1);// Fast case\nif(mod3===3){var pow=this.m.add(new BN(1)).iushrn(2);return this.pow(a,pow);}// Tonelli-Shanks algorithm (Totally unoptimized and slow)\n//\n// Find Q and S, that Q * 2 ^ S = (P - 1)\nvar q=this.m.subn(1);var s=0;while(!q.isZero()&&q.andln(1)===0){s++;q.iushrn(1);}assert(!q.isZero());var one=new BN(1).toRed(this);var nOne=one.redNeg();// Find quadratic non-residue\n// NOTE: Max is such because of generalized Riemann hypothesis.\nvar lpow=this.m.subn(1).iushrn(1);var z=this.m.bitLength();z=new BN(2*z*z).toRed(this);while(this.pow(z,lpow).cmp(nOne)!==0){z.redIAdd(nOne);}var c=this.pow(z,q);var r=this.pow(a,q.addn(1).iushrn(1));var t=this.pow(a,q);var m=s;while(t.cmp(one)!==0){var tmp=t;for(var i=0;tmp.cmp(one)!==0;i++){tmp=tmp.redSqr();}assert(i<m);var b=this.pow(c,new BN(1).iushln(m-i-1));r=r.redMul(b);c=b.redSqr();t=t.redMul(c);m=i;}return r;};Red.prototype.invm=function invm(a){var inv=a._invmp(this.m);if(inv.negative!==0){inv.negative=0;return this.imod(inv).redNeg();}else{return this.imod(inv);}};Red.prototype.pow=function pow(a,num){if(num.isZero())return new BN(1).toRed(this);if(num.cmpn(1)===0)return a.clone();var windowSize=4;var wnd=new Array(1<<windowSize);wnd[0]=new BN(1).toRed(this);wnd[1]=a;for(var i=2;i<wnd.length;i++){wnd[i]=this.mul(wnd[i-1],a);}var res=wnd[0];var current=0;var currentLen=0;var start=num.bitLength()%26;if(start===0){start=26;}for(i=num.length-1;i>=0;i--){var word=num.words[i];for(var j=start-1;j>=0;j--){var bit=word>>j&1;if(res!==wnd[0]){res=this.sqr(res);}if(bit===0&&current===0){currentLen=0;continue;}current<<=1;current|=bit;currentLen++;if(currentLen!==windowSize&&(i!==0||j!==0))continue;res=this.mul(res,wnd[current]);currentLen=0;current=0;}start=26;}return res;};Red.prototype.convertTo=function convertTo(num){var r=num.umod(this.m);return r===num?r.clone():r;};Red.prototype.convertFrom=function convertFrom(num){var res=num.clone();res.red=null;return res;};//\n// Montgomery method engine\n//\nBN.mont=function mont(num){return new Mont(num);};function Mont(m){Red.call(this,m);this.shift=this.m.bitLength();if(this.shift%26!==0){this.shift+=26-this.shift%26;}this.r=new BN(1).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv);}inherits(Mont,Red);Mont.prototype.convertTo=function convertTo(num){return this.imod(num.ushln(this.shift));};Mont.prototype.convertFrom=function convertFrom(num){var r=this.imod(num.mul(this.rinv));r.red=null;return r;};Mont.prototype.imul=function imul(a,b){if(a.isZero()||b.isZero()){a.words[0]=0;a.length=1;return a;}var t=a.imul(b);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m);}else if(u.cmpn(0)<0){res=u.iadd(this.m);}return res._forceRed(this);};Mont.prototype.mul=function mul(a,b){if(a.isZero()||b.isZero())return new BN(0)._forceRed(this);var t=a.mul(b);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m);}else if(u.cmpn(0)<0){res=u.iadd(this.m);}return res._forceRed(this);};Mont.prototype.invm=function invm(a){// (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\nvar res=this.imod(a._invmp(this.m).mul(this.r2));return res._forceRed(this);};})(typeof module==='undefined'||module,this);},{\"buffer\":41}],34:[function(_dereq_,module,exports){'use strict';module.exports=boxIntersectWrapper;var pool=_dereq_('typedarray-pool');var sweep=_dereq_('./lib/sweep');var boxIntersectIter=_dereq_('./lib/intersect');function boxEmpty(d,box){for(var j=0;j<d;++j){if(!(box[j]<=box[j+d])){return true;}}return false;}//Unpack boxes into a flat typed array, remove empty boxes\nfunction convertBoxes(boxes,d,data,ids){var ptr=0;var count=0;for(var i=0,n=boxes.length;i<n;++i){var b=boxes[i];if(boxEmpty(d,b)){continue;}for(var j=0;j<2*d;++j){data[ptr++]=b[j];}ids[count++]=i;}return count;}//Perform type conversions, check bounds\nfunction boxIntersect(red,blue,visit,full){var n=red.length;var m=blue.length;//If either array is empty, then we can skip this whole thing\nif(n<=0||m<=0){return;}//Compute dimension, if it is 0 then we skip\nvar d=red[0].length>>>1;if(d<=0){return;}var retval;//Convert red boxes\nvar redList=pool.mallocDouble(2*d*n);var redIds=pool.mallocInt32(n);n=convertBoxes(red,d,redList,redIds);if(n>0){if(d===1&&full){//Special case: 1d complete\nsweep.init(n);retval=sweep.sweepComplete(d,visit,0,n,redList,redIds,0,n,redList,redIds);}else{//Convert blue boxes\nvar blueList=pool.mallocDouble(2*d*m);var blueIds=pool.mallocInt32(m);m=convertBoxes(blue,d,blueList,blueIds);if(m>0){sweep.init(n+m);if(d===1){//Special case: 1d bipartite\nretval=sweep.sweepBipartite(d,visit,0,n,redList,redIds,0,m,blueList,blueIds);}else{//General case:  d>1\nretval=boxIntersectIter(d,visit,full,n,redList,redIds,m,blueList,blueIds);}pool.free(blueList);pool.free(blueIds);}}pool.free(redList);pool.free(redIds);}return retval;}var RESULT;function appendItem(i,j){RESULT.push([i,j]);}function intersectFullArray(x){RESULT=[];boxIntersect(x,x,appendItem,true);return RESULT;}function intersectBipartiteArray(x,y){RESULT=[];boxIntersect(x,y,appendItem,false);return RESULT;}//User-friendly wrapper, handle full input and no-visitor cases\nfunction boxIntersectWrapper(arg0,arg1,arg2){var result;switch(arguments.length){case 1:return intersectFullArray(arg0);case 2:if(typeof arg1==='function'){return boxIntersect(arg0,arg0,arg1,true);}else{return intersectBipartiteArray(arg0,arg1);}case 3:return boxIntersect(arg0,arg1,arg2,false);default:throw new Error('box-intersect: Invalid arguments');}}},{\"./lib/intersect\":36,\"./lib/sweep\":40,\"typedarray-pool\":270}],35:[function(_dereq_,module,exports){'use strict';var DIMENSION='d';var AXIS='ax';var VISIT='vv';var FLIP='fp';var ELEM_SIZE='es';var RED_START='rs';var RED_END='re';var RED_BOXES='rb';var RED_INDEX='ri';var RED_PTR='rp';var BLUE_START='bs';var BLUE_END='be';var BLUE_BOXES='bb';var BLUE_INDEX='bi';var BLUE_PTR='bp';var RETVAL='rv';var INNER_LABEL='Q';var ARGS=[DIMENSION,AXIS,VISIT,RED_START,RED_END,RED_BOXES,RED_INDEX,BLUE_START,BLUE_END,BLUE_BOXES,BLUE_INDEX];function generateBruteForce(redMajor,flip,full){var funcName='bruteForce'+(redMajor?'Red':'Blue')+(flip?'Flip':'')+(full?'Full':'');var code=['function ',funcName,'(',ARGS.join(),'){','var ',ELEM_SIZE,'=2*',DIMENSION,';'];var redLoop='for(var i='+RED_START+','+RED_PTR+'='+ELEM_SIZE+'*'+RED_START+';'+'i<'+RED_END+';'+'++i,'+RED_PTR+'+='+ELEM_SIZE+'){'+'var x0='+RED_BOXES+'['+AXIS+'+'+RED_PTR+'],'+'x1='+RED_BOXES+'['+AXIS+'+'+RED_PTR+'+'+DIMENSION+'],'+'xi='+RED_INDEX+'[i];';var blueLoop='for(var j='+BLUE_START+','+BLUE_PTR+'='+ELEM_SIZE+'*'+BLUE_START+';'+'j<'+BLUE_END+';'+'++j,'+BLUE_PTR+'+='+ELEM_SIZE+'){'+'var y0='+BLUE_BOXES+'['+AXIS+'+'+BLUE_PTR+'],'+(full?'y1='+BLUE_BOXES+'['+AXIS+'+'+BLUE_PTR+'+'+DIMENSION+'],':'')+'yi='+BLUE_INDEX+'[j];';if(redMajor){code.push(redLoop,INNER_LABEL,':',blueLoop);}else{code.push(blueLoop,INNER_LABEL,':',redLoop);}if(full){code.push('if(y1<x0||x1<y0)continue;');}else if(flip){code.push('if(y0<=x0||x1<y0)continue;');}else{code.push('if(y0<x0||x1<y0)continue;');}code.push('for(var k='+AXIS+'+1;k<'+DIMENSION+';++k){'+'var r0='+RED_BOXES+'[k+'+RED_PTR+'],'+'r1='+RED_BOXES+'[k+'+DIMENSION+'+'+RED_PTR+'],'+'b0='+BLUE_BOXES+'[k+'+BLUE_PTR+'],'+'b1='+BLUE_BOXES+'[k+'+DIMENSION+'+'+BLUE_PTR+'];'+'if(r1<b0||b1<r0)continue '+INNER_LABEL+';}'+'var '+RETVAL+'='+VISIT+'(');if(flip){code.push('yi,xi');}else{code.push('xi,yi');}code.push(');if('+RETVAL+'!==void 0)return '+RETVAL+';}}}');return{name:funcName,code:code.join('')};}function bruteForcePlanner(full){var funcName='bruteForce'+(full?'Full':'Partial');var prefix=[];var fargs=ARGS.slice();if(!full){fargs.splice(3,0,FLIP);}var code=['function '+funcName+'('+fargs.join()+'){'];function invoke(redMajor,flip){var res=generateBruteForce(redMajor,flip,full);prefix.push(res.code);code.push('return '+res.name+'('+ARGS.join()+');');}code.push('if('+RED_END+'-'+RED_START+'>'+BLUE_END+'-'+BLUE_START+'){');if(full){invoke(true,false);code.push('}else{');invoke(false,false);}else{code.push('if('+FLIP+'){');invoke(true,true);code.push('}else{');invoke(true,false);code.push('}}else{if('+FLIP+'){');invoke(false,true);code.push('}else{');invoke(false,false);code.push('}');}code.push('}}return '+funcName);var codeStr=prefix.join('')+code.join('');var proc=new Function(codeStr);return proc();}exports.partial=bruteForcePlanner(false);exports.full=bruteForcePlanner(true);},{}],36:[function(_dereq_,module,exports){'use strict';module.exports=boxIntersectIter;var pool=_dereq_('typedarray-pool');var bits=_dereq_('bit-twiddle');var bruteForce=_dereq_('./brute');var bruteForcePartial=bruteForce.partial;var bruteForceFull=bruteForce.full;var sweep=_dereq_('./sweep');var findMedian=_dereq_('./median');var genPartition=_dereq_('./partition');//Twiddle parameters\nvar BRUTE_FORCE_CUTOFF=128;//Cut off for brute force search\nvar SCAN_CUTOFF=1<<22;//Cut off for two way scan\nvar SCAN_COMPLETE_CUTOFF=1<<22;//Partition functions\nvar partitionInteriorContainsInterval=genPartition('!(lo>=p0)&&!(p1>=hi)',['p0','p1']);var partitionStartEqual=genPartition('lo===p0',['p0']);var partitionStartLessThan=genPartition('lo<p0',['p0']);var partitionEndLessThanEqual=genPartition('hi<=p0',['p0']);var partitionContainsPoint=genPartition('lo<=p0&&p0<=hi',['p0']);var partitionContainsPointProper=genPartition('lo<p0&&p0<=hi',['p0']);//Frame size for iterative loop\nvar IFRAME_SIZE=6;var DFRAME_SIZE=2;//Data for box statck\nvar INIT_CAPACITY=1024;var BOX_ISTACK=pool.mallocInt32(INIT_CAPACITY);var BOX_DSTACK=pool.mallocDouble(INIT_CAPACITY);//Initialize iterative loop queue\nfunction iterInit(d,count){var levels=8*bits.log2(count+1)*(d+1)|0;var maxInts=bits.nextPow2(IFRAME_SIZE*levels);if(BOX_ISTACK.length<maxInts){pool.free(BOX_ISTACK);BOX_ISTACK=pool.mallocInt32(maxInts);}var maxDoubles=bits.nextPow2(DFRAME_SIZE*levels);if(BOX_DSTACK<maxDoubles){pool.free(BOX_DSTACK);BOX_DSTACK=pool.mallocDouble(maxDoubles);}}//Append item to queue\nfunction iterPush(ptr,axis,redStart,redEnd,blueStart,blueEnd,state,lo,hi){var iptr=IFRAME_SIZE*ptr;BOX_ISTACK[iptr]=axis;BOX_ISTACK[iptr+1]=redStart;BOX_ISTACK[iptr+2]=redEnd;BOX_ISTACK[iptr+3]=blueStart;BOX_ISTACK[iptr+4]=blueEnd;BOX_ISTACK[iptr+5]=state;var dptr=DFRAME_SIZE*ptr;BOX_DSTACK[dptr]=lo;BOX_DSTACK[dptr+1]=hi;}//Special case:  Intersect single point with list of intervals\nfunction onePointPartial(d,axis,visit,flip,redStart,redEnd,red,redIndex,blueOffset,blue,blueId){var elemSize=2*d;var bluePtr=blueOffset*elemSize;var blueX=blue[bluePtr+axis];red_loop:for(var i=redStart,redPtr=redStart*elemSize;i<redEnd;++i,redPtr+=elemSize){var r0=red[redPtr+axis];var r1=red[redPtr+axis+d];if(blueX<r0||r1<blueX){continue;}if(flip&&blueX===r0){continue;}var redId=redIndex[i];for(var j=axis+1;j<d;++j){var r0=red[redPtr+j];var r1=red[redPtr+j+d];var b0=blue[bluePtr+j];var b1=blue[bluePtr+j+d];if(r1<b0||b1<r0){continue red_loop;}}var retval;if(flip){retval=visit(blueId,redId);}else{retval=visit(redId,blueId);}if(retval!==void 0){return retval;}}}//Special case:  Intersect one point with list of intervals\nfunction onePointFull(d,axis,visit,redStart,redEnd,red,redIndex,blueOffset,blue,blueId){var elemSize=2*d;var bluePtr=blueOffset*elemSize;var blueX=blue[bluePtr+axis];red_loop:for(var i=redStart,redPtr=redStart*elemSize;i<redEnd;++i,redPtr+=elemSize){var redId=redIndex[i];if(redId===blueId){continue;}var r0=red[redPtr+axis];var r1=red[redPtr+axis+d];if(blueX<r0||r1<blueX){continue;}for(var j=axis+1;j<d;++j){var r0=red[redPtr+j];var r1=red[redPtr+j+d];var b0=blue[bluePtr+j];var b1=blue[bluePtr+j+d];if(r1<b0||b1<r0){continue red_loop;}}var retval=visit(redId,blueId);if(retval!==void 0){return retval;}}}//The main box intersection routine\nfunction boxIntersectIter(d,visit,initFull,xSize,xBoxes,xIndex,ySize,yBoxes,yIndex){//Reserve memory for stack\niterInit(d,xSize+ySize);var top=0;var elemSize=2*d;var retval;iterPush(top++,0,0,xSize,0,ySize,initFull?16:0,-Infinity,Infinity);if(!initFull){iterPush(top++,0,0,ySize,0,xSize,1,-Infinity,Infinity);}while(top>0){top-=1;var iptr=top*IFRAME_SIZE;var axis=BOX_ISTACK[iptr];var redStart=BOX_ISTACK[iptr+1];var redEnd=BOX_ISTACK[iptr+2];var blueStart=BOX_ISTACK[iptr+3];var blueEnd=BOX_ISTACK[iptr+4];var state=BOX_ISTACK[iptr+5];var dptr=top*DFRAME_SIZE;var lo=BOX_DSTACK[dptr];var hi=BOX_DSTACK[dptr+1];//Unpack state info\nvar flip=state&1;var full=!!(state&16);//Unpack indices\nvar red=xBoxes;var redIndex=xIndex;var blue=yBoxes;var blueIndex=yIndex;if(flip){red=yBoxes;redIndex=yIndex;blue=xBoxes;blueIndex=xIndex;}if(state&2){redEnd=partitionStartLessThan(d,axis,redStart,redEnd,red,redIndex,hi);if(redStart>=redEnd){continue;}}if(state&4){redStart=partitionEndLessThanEqual(d,axis,redStart,redEnd,red,redIndex,lo);if(redStart>=redEnd){continue;}}var redCount=redEnd-redStart;var blueCount=blueEnd-blueStart;if(full){if(d*redCount*(redCount+blueCount)<SCAN_COMPLETE_CUTOFF){retval=sweep.scanComplete(d,axis,visit,redStart,redEnd,red,redIndex,blueStart,blueEnd,blue,blueIndex);if(retval!==void 0){return retval;}continue;}}else{if(d*Math.min(redCount,blueCount)<BRUTE_FORCE_CUTOFF){//If input small, then use brute force\nretval=bruteForcePartial(d,axis,visit,flip,redStart,redEnd,red,redIndex,blueStart,blueEnd,blue,blueIndex);if(retval!==void 0){return retval;}continue;}else if(d*redCount*blueCount<SCAN_CUTOFF){//If input medium sized, then use sweep and prune\nretval=sweep.scanBipartite(d,axis,visit,flip,redStart,redEnd,red,redIndex,blueStart,blueEnd,blue,blueIndex);if(retval!==void 0){return retval;}continue;}}//First, find all red intervals whose interior contains (lo,hi)\nvar red0=partitionInteriorContainsInterval(d,axis,redStart,redEnd,red,redIndex,lo,hi);//Lower dimensional case\nif(redStart<red0){if(d*(red0-redStart)<BRUTE_FORCE_CUTOFF){//Special case for small inputs: use brute force\nretval=bruteForceFull(d,axis+1,visit,redStart,red0,red,redIndex,blueStart,blueEnd,blue,blueIndex);if(retval!==void 0){return retval;}}else if(axis===d-2){if(flip){retval=sweep.sweepBipartite(d,visit,blueStart,blueEnd,blue,blueIndex,redStart,red0,red,redIndex);}else{retval=sweep.sweepBipartite(d,visit,redStart,red0,red,redIndex,blueStart,blueEnd,blue,blueIndex);}if(retval!==void 0){return retval;}}else{iterPush(top++,axis+1,redStart,red0,blueStart,blueEnd,flip,-Infinity,Infinity);iterPush(top++,axis+1,blueStart,blueEnd,redStart,red0,flip^1,-Infinity,Infinity);}}//Divide and conquer phase\nif(red0<redEnd){//Cut blue into 3 parts:\n//\n//  Points < mid point\n//  Points = mid point\n//  Points > mid point\n//\nvar blue0=findMedian(d,axis,blueStart,blueEnd,blue,blueIndex);var mid=blue[elemSize*blue0+axis];var blue1=partitionStartEqual(d,axis,blue0,blueEnd,blue,blueIndex,mid);//Right case\nif(blue1<blueEnd){iterPush(top++,axis,red0,redEnd,blue1,blueEnd,(flip|4)+(full?16:0),mid,hi);}//Left case\nif(blueStart<blue0){iterPush(top++,axis,red0,redEnd,blueStart,blue0,(flip|2)+(full?16:0),lo,mid);}//Center case (the hard part)\nif(blue0+1===blue1){//Optimization: Range with exactly 1 point, use a brute force scan\nif(full){retval=onePointFull(d,axis,visit,red0,redEnd,red,redIndex,blue0,blue,blueIndex[blue0]);}else{retval=onePointPartial(d,axis,visit,flip,red0,redEnd,red,redIndex,blue0,blue,blueIndex[blue0]);}if(retval!==void 0){return retval;}}else if(blue0<blue1){var red1;if(full){//If full intersection, need to handle special case\nred1=partitionContainsPoint(d,axis,red0,redEnd,red,redIndex,mid);if(red0<red1){var redX=partitionStartEqual(d,axis,red0,red1,red,redIndex,mid);if(axis===d-2){//Degenerate sweep intersection:\n//  [red0, redX] with [blue0, blue1]\nif(red0<redX){retval=sweep.sweepComplete(d,visit,red0,redX,red,redIndex,blue0,blue1,blue,blueIndex);if(retval!==void 0){return retval;}}//Normal sweep intersection:\n//  [redX, red1] with [blue0, blue1]\nif(redX<red1){retval=sweep.sweepBipartite(d,visit,redX,red1,red,redIndex,blue0,blue1,blue,blueIndex);if(retval!==void 0){return retval;}}}else{if(red0<redX){iterPush(top++,axis+1,red0,redX,blue0,blue1,16,-Infinity,Infinity);}if(redX<red1){iterPush(top++,axis+1,redX,red1,blue0,blue1,0,-Infinity,Infinity);iterPush(top++,axis+1,blue0,blue1,redX,red1,1,-Infinity,Infinity);}}}}else{if(flip){red1=partitionContainsPointProper(d,axis,red0,redEnd,red,redIndex,mid);}else{red1=partitionContainsPoint(d,axis,red0,redEnd,red,redIndex,mid);}if(red0<red1){if(axis===d-2){if(flip){retval=sweep.sweepBipartite(d,visit,blue0,blue1,blue,blueIndex,red0,red1,red,redIndex);}else{retval=sweep.sweepBipartite(d,visit,red0,red1,red,redIndex,blue0,blue1,blue,blueIndex);}}else{iterPush(top++,axis+1,red0,red1,blue0,blue1,flip,-Infinity,Infinity);iterPush(top++,axis+1,blue0,blue1,red0,red1,flip^1,-Infinity,Infinity);}}}}}}}},{\"./brute\":35,\"./median\":37,\"./partition\":38,\"./sweep\":40,\"bit-twiddle\":32,\"typedarray-pool\":270}],37:[function(_dereq_,module,exports){'use strict';module.exports=findMedian;var genPartition=_dereq_('./partition');var partitionStartLessThan=genPartition('lo<p0',['p0']);var PARTITION_THRESHOLD=8;//Cut off for using insertion sort in findMedian\n//Base case for median finding:  Use insertion sort\nfunction insertionSort(d,axis,start,end,boxes,ids){var elemSize=2*d;var boxPtr=elemSize*(start+1)+axis;for(var i=start+1;i<end;++i,boxPtr+=elemSize){var x=boxes[boxPtr];for(var j=i,ptr=elemSize*(i-1);j>start&&boxes[ptr+axis]>x;--j,ptr-=elemSize){//Swap\nvar aPtr=ptr;var bPtr=ptr+elemSize;for(var k=0;k<elemSize;++k,++aPtr,++bPtr){var y=boxes[aPtr];boxes[aPtr]=boxes[bPtr];boxes[bPtr]=y;}var tmp=ids[j];ids[j]=ids[j-1];ids[j-1]=tmp;}}}//Find median using quick select algorithm\n//  takes O(n) time with high probability\nfunction findMedian(d,axis,start,end,boxes,ids){if(end<=start+1){return start;}var lo=start;var hi=end;var mid=end+start>>>1;var elemSize=2*d;var pivot=mid;var value=boxes[elemSize*mid+axis];while(lo<hi){if(hi-lo<PARTITION_THRESHOLD){insertionSort(d,axis,lo,hi,boxes,ids);value=boxes[elemSize*mid+axis];break;}//Select pivot using median-of-3\nvar count=hi-lo;var pivot0=Math.random()*count+lo|0;var value0=boxes[elemSize*pivot0+axis];var pivot1=Math.random()*count+lo|0;var value1=boxes[elemSize*pivot1+axis];var pivot2=Math.random()*count+lo|0;var value2=boxes[elemSize*pivot2+axis];if(value0<=value1){if(value2>=value1){pivot=pivot1;value=value1;}else if(value0>=value2){pivot=pivot0;value=value0;}else{pivot=pivot2;value=value2;}}else{if(value1>=value2){pivot=pivot1;value=value1;}else if(value2>=value0){pivot=pivot0;value=value0;}else{pivot=pivot2;value=value2;}}//Swap pivot to end of array\nvar aPtr=elemSize*(hi-1);var bPtr=elemSize*pivot;for(var i=0;i<elemSize;++i,++aPtr,++bPtr){var x=boxes[aPtr];boxes[aPtr]=boxes[bPtr];boxes[bPtr]=x;}var y=ids[hi-1];ids[hi-1]=ids[pivot];ids[pivot]=y;//Partition using pivot\npivot=partitionStartLessThan(d,axis,lo,hi-1,boxes,ids,value);//Swap pivot back\nvar aPtr=elemSize*(hi-1);var bPtr=elemSize*pivot;for(var i=0;i<elemSize;++i,++aPtr,++bPtr){var x=boxes[aPtr];boxes[aPtr]=boxes[bPtr];boxes[bPtr]=x;}var y=ids[hi-1];ids[hi-1]=ids[pivot];ids[pivot]=y;//Swap pivot to last pivot\nif(mid<pivot){hi=pivot-1;while(lo<hi&&boxes[elemSize*(hi-1)+axis]===value){hi-=1;}hi+=1;}else if(pivot<mid){lo=pivot+1;while(lo<hi&&boxes[elemSize*lo+axis]===value){lo+=1;}}else{break;}}//Make sure pivot is at start\nreturn partitionStartLessThan(d,axis,start,mid,boxes,ids,boxes[elemSize*mid+axis]);}},{\"./partition\":38}],38:[function(_dereq_,module,exports){'use strict';module.exports=genPartition;var code='for(var j=2*a,k=j*c,l=k,m=c,n=b,o=a+b,p=c;d>p;++p,k+=j){var _;if($)if(m===p)m+=1,l+=j;else{for(var s=0;j>s;++s){var t=e[k+s];e[k+s]=e[l],e[l++]=t}var u=f[p];f[p]=f[m],f[m++]=u}}return m';function genPartition(predicate,args){var fargs='abcdef'.split('').concat(args);var reads=[];if(predicate.indexOf('lo')>=0){reads.push('lo=e[k+n]');}if(predicate.indexOf('hi')>=0){reads.push('hi=e[k+o]');}fargs.push(code.replace('_',reads.join()).replace('$',predicate));return Function.apply(void 0,fargs);}},{}],39:[function(_dereq_,module,exports){'use strict';//This code is extracted from ndarray-sort\n//It is inlined here as a temporary workaround\nmodule.exports=wrapper;var INSERT_SORT_CUTOFF=32;function wrapper(data,n0){if(n0<=4*INSERT_SORT_CUTOFF){insertionSort(0,n0-1,data);}else{quickSort(0,n0-1,data);}}function insertionSort(left,right,data){var ptr=2*(left+1);for(var i=left+1;i<=right;++i){var a=data[ptr++];var b=data[ptr++];var j=i;var jptr=ptr-2;while(j--\x3eleft){var x=data[jptr-2];var y=data[jptr-1];if(x<a){break;}else if(x===a&&y<b){break;}data[jptr]=x;data[jptr+1]=y;jptr-=2;}data[jptr]=a;data[jptr+1]=b;}}function swap(i,j,data){i*=2;j*=2;var x=data[i];var y=data[i+1];data[i]=data[j];data[i+1]=data[j+1];data[j]=x;data[j+1]=y;}function move(i,j,data){i*=2;j*=2;data[i]=data[j];data[i+1]=data[j+1];}function rotate(i,j,k,data){i*=2;j*=2;k*=2;var x=data[i];var y=data[i+1];data[i]=data[j];data[i+1]=data[j+1];data[j]=data[k];data[j+1]=data[k+1];data[k]=x;data[k+1]=y;}function shufflePivot(i,j,px,py,data){i*=2;j*=2;data[i]=data[j];data[j]=px;data[i+1]=data[j+1];data[j+1]=py;}function compare(i,j,data){i*=2;j*=2;var x=data[i],y=data[j];if(x<y){return false;}else if(x===y){return data[i+1]>data[j+1];}return true;}function comparePivot(i,y,b,data){i*=2;var x=data[i];if(x<y){return true;}else if(x===y){return data[i+1]<b;}return false;}function quickSort(left,right,data){var sixth=(right-left+1)/6|0,index1=left+sixth,index5=right-sixth,index3=left+right>>1,index2=index3-sixth,index4=index3+sixth,el1=index1,el2=index2,el3=index3,el4=index4,el5=index5,less=left+1,great=right-1,tmp=0;if(compare(el1,el2,data)){tmp=el1;el1=el2;el2=tmp;}if(compare(el4,el5,data)){tmp=el4;el4=el5;el5=tmp;}if(compare(el1,el3,data)){tmp=el1;el1=el3;el3=tmp;}if(compare(el2,el3,data)){tmp=el2;el2=el3;el3=tmp;}if(compare(el1,el4,data)){tmp=el1;el1=el4;el4=tmp;}if(compare(el3,el4,data)){tmp=el3;el3=el4;el4=tmp;}if(compare(el2,el5,data)){tmp=el2;el2=el5;el5=tmp;}if(compare(el2,el3,data)){tmp=el2;el2=el3;el3=tmp;}if(compare(el4,el5,data)){tmp=el4;el4=el5;el5=tmp;}var pivot1X=data[2*el2];var pivot1Y=data[2*el2+1];var pivot2X=data[2*el4];var pivot2Y=data[2*el4+1];var ptr0=2*el1;var ptr2=2*el3;var ptr4=2*el5;var ptr5=2*index1;var ptr6=2*index3;var ptr7=2*index5;for(var i1=0;i1<2;++i1){var x=data[ptr0+i1];var y=data[ptr2+i1];var z=data[ptr4+i1];data[ptr5+i1]=x;data[ptr6+i1]=y;data[ptr7+i1]=z;}move(index2,left,data);move(index4,right,data);for(var k=less;k<=great;++k){if(comparePivot(k,pivot1X,pivot1Y,data)){if(k!==less){swap(k,less,data);}++less;}else{if(!comparePivot(k,pivot2X,pivot2Y,data)){while(true){if(!comparePivot(great,pivot2X,pivot2Y,data)){if(--great<k){break;}continue;}else{if(comparePivot(great,pivot1X,pivot1Y,data)){rotate(k,less,great,data);++less;--great;}else{swap(k,great,data);--great;}break;}}}}}shufflePivot(left,less-1,pivot1X,pivot1Y,data);shufflePivot(right,great+1,pivot2X,pivot2Y,data);if(less-2-left<=INSERT_SORT_CUTOFF){insertionSort(left,less-2,data);}else{quickSort(left,less-2,data);}if(right-(great+2)<=INSERT_SORT_CUTOFF){insertionSort(great+2,right,data);}else{quickSort(great+2,right,data);}if(great-less<=INSERT_SORT_CUTOFF){insertionSort(less,great,data);}else{quickSort(less,great,data);}}},{}],40:[function(_dereq_,module,exports){'use strict';module.exports={init:sqInit,sweepBipartite:sweepBipartite,sweepComplete:sweepComplete,scanBipartite:scanBipartite,scanComplete:scanComplete};var pool=_dereq_('typedarray-pool');var bits=_dereq_('bit-twiddle');var isort=_dereq_('./sort');//Flag for blue\nvar BLUE_FLAG=1<<28;//1D sweep event queue stuff (use pool to save space)\nvar INIT_CAPACITY=1024;var RED_SWEEP_QUEUE=pool.mallocInt32(INIT_CAPACITY);var RED_SWEEP_INDEX=pool.mallocInt32(INIT_CAPACITY);var BLUE_SWEEP_QUEUE=pool.mallocInt32(INIT_CAPACITY);var BLUE_SWEEP_INDEX=pool.mallocInt32(INIT_CAPACITY);var COMMON_SWEEP_QUEUE=pool.mallocInt32(INIT_CAPACITY);var COMMON_SWEEP_INDEX=pool.mallocInt32(INIT_CAPACITY);var SWEEP_EVENTS=pool.mallocDouble(INIT_CAPACITY*8);//Reserves memory for the 1D sweep data structures\nfunction sqInit(count){var rcount=bits.nextPow2(count);if(RED_SWEEP_QUEUE.length<rcount){pool.free(RED_SWEEP_QUEUE);RED_SWEEP_QUEUE=pool.mallocInt32(rcount);}if(RED_SWEEP_INDEX.length<rcount){pool.free(RED_SWEEP_INDEX);RED_SWEEP_INDEX=pool.mallocInt32(rcount);}if(BLUE_SWEEP_QUEUE.length<rcount){pool.free(BLUE_SWEEP_QUEUE);BLUE_SWEEP_QUEUE=pool.mallocInt32(rcount);}if(BLUE_SWEEP_INDEX.length<rcount){pool.free(BLUE_SWEEP_INDEX);BLUE_SWEEP_INDEX=pool.mallocInt32(rcount);}if(COMMON_SWEEP_QUEUE.length<rcount){pool.free(COMMON_SWEEP_QUEUE);COMMON_SWEEP_QUEUE=pool.mallocInt32(rcount);}if(COMMON_SWEEP_INDEX.length<rcount){pool.free(COMMON_SWEEP_INDEX);COMMON_SWEEP_INDEX=pool.mallocInt32(rcount);}var eventLength=8*rcount;if(SWEEP_EVENTS.length<eventLength){pool.free(SWEEP_EVENTS);SWEEP_EVENTS=pool.mallocDouble(eventLength);}}//Remove an item from the active queue in O(1)\nfunction sqPop(queue,index,count,item){var idx=index[item];var top=queue[count-1];queue[idx]=top;index[top]=idx;}//Insert an item into the active queue in O(1)\nfunction sqPush(queue,index,count,item){queue[count]=item;index[item]=count;}//Recursion base case: use 1D sweep algorithm\nfunction sweepBipartite(d,visit,redStart,redEnd,red,redIndex,blueStart,blueEnd,blue,blueIndex){//store events as pairs [coordinate, idx]\n//\n//  red create:  -(idx+1)\n//  red destroy: idx\n//  blue create: -(idx+BLUE_FLAG)\n//  blue destroy: idx+BLUE_FLAG\n//\nvar ptr=0;var elemSize=2*d;var istart=d-1;var iend=elemSize-1;for(var i=redStart;i<redEnd;++i){var idx=redIndex[i];var redOffset=elemSize*i;SWEEP_EVENTS[ptr++]=red[redOffset+istart];SWEEP_EVENTS[ptr++]=-(idx+1);SWEEP_EVENTS[ptr++]=red[redOffset+iend];SWEEP_EVENTS[ptr++]=idx;}for(var i=blueStart;i<blueEnd;++i){var idx=blueIndex[i]+BLUE_FLAG;var blueOffset=elemSize*i;SWEEP_EVENTS[ptr++]=blue[blueOffset+istart];SWEEP_EVENTS[ptr++]=-idx;SWEEP_EVENTS[ptr++]=blue[blueOffset+iend];SWEEP_EVENTS[ptr++]=idx;}//process events from left->right\nvar n=ptr>>>1;isort(SWEEP_EVENTS,n);var redActive=0;var blueActive=0;for(var i=0;i<n;++i){var e=SWEEP_EVENTS[2*i+1]|0;if(e>=BLUE_FLAG){//blue destroy event\ne=e-BLUE_FLAG|0;sqPop(BLUE_SWEEP_QUEUE,BLUE_SWEEP_INDEX,blueActive--,e);}else if(e>=0){//red destroy event\nsqPop(RED_SWEEP_QUEUE,RED_SWEEP_INDEX,redActive--,e);}else if(e<=-BLUE_FLAG){//blue create event\ne=-e-BLUE_FLAG|0;for(var j=0;j<redActive;++j){var retval=visit(RED_SWEEP_QUEUE[j],e);if(retval!==void 0){return retval;}}sqPush(BLUE_SWEEP_QUEUE,BLUE_SWEEP_INDEX,blueActive++,e);}else{//red create event\ne=-e-1|0;for(var j=0;j<blueActive;++j){var retval=visit(e,BLUE_SWEEP_QUEUE[j]);if(retval!==void 0){return retval;}}sqPush(RED_SWEEP_QUEUE,RED_SWEEP_INDEX,redActive++,e);}}}//Complete sweep\nfunction sweepComplete(d,visit,redStart,redEnd,red,redIndex,blueStart,blueEnd,blue,blueIndex){var ptr=0;var elemSize=2*d;var istart=d-1;var iend=elemSize-1;for(var i=redStart;i<redEnd;++i){var idx=redIndex[i]+1<<1;var redOffset=elemSize*i;SWEEP_EVENTS[ptr++]=red[redOffset+istart];SWEEP_EVENTS[ptr++]=-idx;SWEEP_EVENTS[ptr++]=red[redOffset+iend];SWEEP_EVENTS[ptr++]=idx;}for(var i=blueStart;i<blueEnd;++i){var idx=blueIndex[i]+1<<1;var blueOffset=elemSize*i;SWEEP_EVENTS[ptr++]=blue[blueOffset+istart];SWEEP_EVENTS[ptr++]=-idx|1;SWEEP_EVENTS[ptr++]=blue[blueOffset+iend];SWEEP_EVENTS[ptr++]=idx|1;}//process events from left->right\nvar n=ptr>>>1;isort(SWEEP_EVENTS,n);var redActive=0;var blueActive=0;var commonActive=0;for(var i=0;i<n;++i){var e=SWEEP_EVENTS[2*i+1]|0;var color=e&1;if(i<n-1&&e>>1===SWEEP_EVENTS[2*i+3]>>1){color=2;i+=1;}if(e<0){//Create event\nvar id=-(e>>1)-1;//Intersect with common\nfor(var j=0;j<commonActive;++j){var retval=visit(COMMON_SWEEP_QUEUE[j],id);if(retval!==void 0){return retval;}}if(color!==0){//Intersect with red\nfor(var j=0;j<redActive;++j){var retval=visit(RED_SWEEP_QUEUE[j],id);if(retval!==void 0){return retval;}}}if(color!==1){//Intersect with blue\nfor(var j=0;j<blueActive;++j){var retval=visit(BLUE_SWEEP_QUEUE[j],id);if(retval!==void 0){return retval;}}}if(color===0){//Red\nsqPush(RED_SWEEP_QUEUE,RED_SWEEP_INDEX,redActive++,id);}else if(color===1){//Blue\nsqPush(BLUE_SWEEP_QUEUE,BLUE_SWEEP_INDEX,blueActive++,id);}else if(color===2){//Both\nsqPush(COMMON_SWEEP_QUEUE,COMMON_SWEEP_INDEX,commonActive++,id);}}else{//Destroy event\nvar id=(e>>1)-1;if(color===0){//Red\nsqPop(RED_SWEEP_QUEUE,RED_SWEEP_INDEX,redActive--,id);}else if(color===1){//Blue\nsqPop(BLUE_SWEEP_QUEUE,BLUE_SWEEP_INDEX,blueActive--,id);}else if(color===2){//Both\nsqPop(COMMON_SWEEP_QUEUE,COMMON_SWEEP_INDEX,commonActive--,id);}}}}//Sweep and prune/scanline algorithm:\n//  Scan along axis, detect intersections\n//  Brute force all boxes along axis\nfunction scanBipartite(d,axis,visit,flip,redStart,redEnd,red,redIndex,blueStart,blueEnd,blue,blueIndex){var ptr=0;var elemSize=2*d;var istart=axis;var iend=axis+d;var redShift=1;var blueShift=1;if(flip){blueShift=BLUE_FLAG;}else{redShift=BLUE_FLAG;}for(var i=redStart;i<redEnd;++i){var idx=i+redShift;var redOffset=elemSize*i;SWEEP_EVENTS[ptr++]=red[redOffset+istart];SWEEP_EVENTS[ptr++]=-idx;SWEEP_EVENTS[ptr++]=red[redOffset+iend];SWEEP_EVENTS[ptr++]=idx;}for(var i=blueStart;i<blueEnd;++i){var idx=i+blueShift;var blueOffset=elemSize*i;SWEEP_EVENTS[ptr++]=blue[blueOffset+istart];SWEEP_EVENTS[ptr++]=-idx;}//process events from left->right\nvar n=ptr>>>1;isort(SWEEP_EVENTS,n);var redActive=0;for(var i=0;i<n;++i){var e=SWEEP_EVENTS[2*i+1]|0;if(e<0){var idx=-e;var isRed=false;if(idx>=BLUE_FLAG){isRed=!flip;idx-=BLUE_FLAG;}else{isRed=!!flip;idx-=1;}if(isRed){sqPush(RED_SWEEP_QUEUE,RED_SWEEP_INDEX,redActive++,idx);}else{var blueId=blueIndex[idx];var bluePtr=elemSize*idx;var b0=blue[bluePtr+axis+1];var b1=blue[bluePtr+axis+1+d];red_loop:for(var j=0;j<redActive;++j){var oidx=RED_SWEEP_QUEUE[j];var redPtr=elemSize*oidx;if(b1<red[redPtr+axis+1]||red[redPtr+axis+1+d]<b0){continue;}for(var k=axis+2;k<d;++k){if(blue[bluePtr+k+d]<red[redPtr+k]||red[redPtr+k+d]<blue[bluePtr+k]){continue red_loop;}}var redId=redIndex[oidx];var retval;if(flip){retval=visit(blueId,redId);}else{retval=visit(redId,blueId);}if(retval!==void 0){return retval;}}}}else{sqPop(RED_SWEEP_QUEUE,RED_SWEEP_INDEX,redActive--,e-redShift);}}}function scanComplete(d,axis,visit,redStart,redEnd,red,redIndex,blueStart,blueEnd,blue,blueIndex){var ptr=0;var elemSize=2*d;var istart=axis;var iend=axis+d;for(var i=redStart;i<redEnd;++i){var idx=i+BLUE_FLAG;var redOffset=elemSize*i;SWEEP_EVENTS[ptr++]=red[redOffset+istart];SWEEP_EVENTS[ptr++]=-idx;SWEEP_EVENTS[ptr++]=red[redOffset+iend];SWEEP_EVENTS[ptr++]=idx;}for(var i=blueStart;i<blueEnd;++i){var idx=i+1;var blueOffset=elemSize*i;SWEEP_EVENTS[ptr++]=blue[blueOffset+istart];SWEEP_EVENTS[ptr++]=-idx;}//process events from left->right\nvar n=ptr>>>1;isort(SWEEP_EVENTS,n);var redActive=0;for(var i=0;i<n;++i){var e=SWEEP_EVENTS[2*i+1]|0;if(e<0){var idx=-e;if(idx>=BLUE_FLAG){RED_SWEEP_QUEUE[redActive++]=idx-BLUE_FLAG;}else{idx-=1;var blueId=blueIndex[idx];var bluePtr=elemSize*idx;var b0=blue[bluePtr+axis+1];var b1=blue[bluePtr+axis+1+d];red_loop:for(var j=0;j<redActive;++j){var oidx=RED_SWEEP_QUEUE[j];var redId=redIndex[oidx];if(redId===blueId){break;}var redPtr=elemSize*oidx;if(b1<red[redPtr+axis+1]||red[redPtr+axis+1+d]<b0){continue;}for(var k=axis+2;k<d;++k){if(blue[bluePtr+k+d]<red[redPtr+k]||red[redPtr+k+d]<blue[bluePtr+k]){continue red_loop;}}var retval=visit(redId,blueId);if(retval!==void 0){return retval;}}}}else{var idx=e-BLUE_FLAG;for(var j=redActive-1;j>=0;--j){if(RED_SWEEP_QUEUE[j]===idx){for(var k=j+1;k<redActive;++k){RED_SWEEP_QUEUE[k-1]=RED_SWEEP_QUEUE[k];}break;}}--redActive;}}}},{\"./sort\":39,\"bit-twiddle\":32,\"typedarray-pool\":270}],41:[function(_dereq_,module,exports){},{}],42:[function(_dereq_,module,exports){// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar objectCreate=Object.create||objectCreatePolyfill;var objectKeys=Object.keys||objectKeysPolyfill;var bind=Function.prototype.bind||functionBindPolyfill;function EventEmitter(){if(!this._events||!Object.prototype.hasOwnProperty.call(this,'_events')){this._events=objectCreate(null);this._eventsCount=0;}this._maxListeners=this._maxListeners||undefined;}module.exports=EventEmitter;// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter=EventEmitter;EventEmitter.prototype._events=undefined;EventEmitter.prototype._maxListeners=undefined;// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners=10;var hasDefineProperty;try{var o={};if(Object.defineProperty)Object.defineProperty(o,'x',{value:0});hasDefineProperty=o.x===0;}catch(err){hasDefineProperty=false;}if(hasDefineProperty){Object.defineProperty(EventEmitter,'defaultMaxListeners',{enumerable:true,get:function get(){return defaultMaxListeners;},set:function set(arg){// check whether the input is a positive number (whose value is zero or\n// greater and not a NaN).\nif(typeof arg!=='number'||arg<0||arg!==arg)throw new TypeError('\"defaultMaxListeners\" must be a positive number');defaultMaxListeners=arg;}});}else{EventEmitter.defaultMaxListeners=defaultMaxListeners;}// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners=function setMaxListeners(n){if(typeof n!=='number'||n<0||isNaN(n))throw new TypeError('\"n\" argument must be a positive number');this._maxListeners=n;return this;};function $getMaxListeners(that){if(that._maxListeners===undefined)return EventEmitter.defaultMaxListeners;return that._maxListeners;}EventEmitter.prototype.getMaxListeners=function getMaxListeners(){return $getMaxListeners(this);};// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler,isFn,self){if(isFn)handler.call(self);else{var len=handler.length;var listeners=arrayClone(handler,len);for(var i=0;i<len;++i){listeners[i].call(self);}}}function emitOne(handler,isFn,self,arg1){if(isFn)handler.call(self,arg1);else{var len=handler.length;var listeners=arrayClone(handler,len);for(var i=0;i<len;++i){listeners[i].call(self,arg1);}}}function emitTwo(handler,isFn,self,arg1,arg2){if(isFn)handler.call(self,arg1,arg2);else{var len=handler.length;var listeners=arrayClone(handler,len);for(var i=0;i<len;++i){listeners[i].call(self,arg1,arg2);}}}function emitThree(handler,isFn,self,arg1,arg2,arg3){if(isFn)handler.call(self,arg1,arg2,arg3);else{var len=handler.length;var listeners=arrayClone(handler,len);for(var i=0;i<len;++i){listeners[i].call(self,arg1,arg2,arg3);}}}function emitMany(handler,isFn,self,args){if(isFn)handler.apply(self,args);else{var len=handler.length;var listeners=arrayClone(handler,len);for(var i=0;i<len;++i){listeners[i].apply(self,args);}}}EventEmitter.prototype.emit=function emit(type){var er,handler,len,args,i,events;var doError=type==='error';events=this._events;if(events)doError=doError&&events.error==null;else if(!doError)return false;// If there is no 'error' event listener then throw.\nif(doError){if(arguments.length>1)er=arguments[1];if(er instanceof Error){throw er;// Unhandled 'error' event\n}else{// At least give some kind of context to the user\nvar err=new Error('Unhandled \"error\" event. ('+er+')');err.context=er;throw err;}return false;}handler=events[type];if(!handler)return false;var isFn=typeof handler==='function';len=arguments.length;switch(len){// fast cases\ncase 1:emitNone(handler,isFn,this);break;case 2:emitOne(handler,isFn,this,arguments[1]);break;case 3:emitTwo(handler,isFn,this,arguments[1],arguments[2]);break;case 4:emitThree(handler,isFn,this,arguments[1],arguments[2],arguments[3]);break;// slower\ndefault:args=new Array(len-1);for(i=1;i<len;i++){args[i-1]=arguments[i];}emitMany(handler,isFn,this,args);}return true;};function _addListener(target,type,listener,prepend){var m;var events;var existing;if(typeof listener!=='function')throw new TypeError('\"listener\" argument must be a function');events=target._events;if(!events){events=target._events=objectCreate(null);target._eventsCount=0;}else{// To avoid recursion in the case that type === \"newListener\"! Before\n// adding it to the listeners, first emit \"newListener\".\nif(events.newListener){target.emit('newListener',type,listener.listener?listener.listener:listener);// Re-assign `events` because a newListener handler could have caused the\n// this._events to be assigned to a new object\nevents=target._events;}existing=events[type];}if(!existing){// Optimize the case of one listener. Don't need the extra array object.\nexisting=events[type]=listener;++target._eventsCount;}else{if(typeof existing==='function'){// Adding the second element, need to change to array.\nexisting=events[type]=prepend?[listener,existing]:[existing,listener];}else{// If we've already got an array, just append.\nif(prepend){existing.unshift(listener);}else{existing.push(listener);}}// Check for listener leak\nif(!existing.warned){m=$getMaxListeners(target);if(m&&m>0&&existing.length>m){existing.warned=true;var w=new Error('Possible EventEmitter memory leak detected. '+existing.length+' \"'+String(type)+'\" listeners '+'added. Use emitter.setMaxListeners() to '+'increase limit.');w.name='MaxListenersExceededWarning';w.emitter=target;w.type=type;w.count=existing.length;if((typeof console===\"undefined\"?\"undefined\":_typeof(console))==='object'&&console.warn){console.warn('%s: %s',w.name,w.message);}}}}return target;}EventEmitter.prototype.addListener=function addListener(type,listener){return _addListener(this,type,listener,false);};EventEmitter.prototype.on=EventEmitter.prototype.addListener;EventEmitter.prototype.prependListener=function prependListener(type,listener){return _addListener(this,type,listener,true);};function onceWrapper(){if(!this.fired){this.target.removeListener(this.type,this.wrapFn);this.fired=true;switch(arguments.length){case 0:return this.listener.call(this.target);case 1:return this.listener.call(this.target,arguments[0]);case 2:return this.listener.call(this.target,arguments[0],arguments[1]);case 3:return this.listener.call(this.target,arguments[0],arguments[1],arguments[2]);default:var args=new Array(arguments.length);for(var i=0;i<args.length;++i){args[i]=arguments[i];}this.listener.apply(this.target,args);}}}function _onceWrap(target,type,listener){var state={fired:false,wrapFn:undefined,target:target,type:type,listener:listener};var wrapped=bind.call(onceWrapper,state);wrapped.listener=listener;state.wrapFn=wrapped;return wrapped;}EventEmitter.prototype.once=function once(type,listener){if(typeof listener!=='function')throw new TypeError('\"listener\" argument must be a function');this.on(type,_onceWrap(this,type,listener));return this;};EventEmitter.prototype.prependOnceListener=function prependOnceListener(type,listener){if(typeof listener!=='function')throw new TypeError('\"listener\" argument must be a function');this.prependListener(type,_onceWrap(this,type,listener));return this;};// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener=function removeListener(type,listener){var list,events,position,i,originalListener;if(typeof listener!=='function')throw new TypeError('\"listener\" argument must be a function');events=this._events;if(!events)return this;list=events[type];if(!list)return this;if(list===listener||list.listener===listener){if(--this._eventsCount===0)this._events=objectCreate(null);else{delete events[type];if(events.removeListener)this.emit('removeListener',type,list.listener||listener);}}else if(typeof list!=='function'){position=-1;for(i=list.length-1;i>=0;i--){if(list[i]===listener||list[i].listener===listener){originalListener=list[i].listener;position=i;break;}}if(position<0)return this;if(position===0)list.shift();else spliceOne(list,position);if(list.length===1)events[type]=list[0];if(events.removeListener)this.emit('removeListener',type,originalListener||listener);}return this;};EventEmitter.prototype.removeAllListeners=function removeAllListeners(type){var listeners,events,i;events=this._events;if(!events)return this;// not listening for removeListener, no need to emit\nif(!events.removeListener){if(arguments.length===0){this._events=objectCreate(null);this._eventsCount=0;}else if(events[type]){if(--this._eventsCount===0)this._events=objectCreate(null);else delete events[type];}return this;}// emit removeListener for all listeners on all events\nif(arguments.length===0){var keys=objectKeys(events);var key;for(i=0;i<keys.length;++i){key=keys[i];if(key==='removeListener')continue;this.removeAllListeners(key);}this.removeAllListeners('removeListener');this._events=objectCreate(null);this._eventsCount=0;return this;}listeners=events[type];if(typeof listeners==='function'){this.removeListener(type,listeners);}else if(listeners){// LIFO order\nfor(i=listeners.length-1;i>=0;i--){this.removeListener(type,listeners[i]);}}return this;};function _listeners(target,type,unwrap){var events=target._events;if(!events)return[];var evlistener=events[type];if(!evlistener)return[];if(typeof evlistener==='function')return unwrap?[evlistener.listener||evlistener]:[evlistener];return unwrap?unwrapListeners(evlistener):arrayClone(evlistener,evlistener.length);}EventEmitter.prototype.listeners=function listeners(type){return _listeners(this,type,true);};EventEmitter.prototype.rawListeners=function rawListeners(type){return _listeners(this,type,false);};EventEmitter.listenerCount=function(emitter,type){if(typeof emitter.listenerCount==='function'){return emitter.listenerCount(type);}else{return listenerCount.call(emitter,type);}};EventEmitter.prototype.listenerCount=listenerCount;function listenerCount(type){var events=this._events;if(events){var evlistener=events[type];if(typeof evlistener==='function'){return 1;}else if(evlistener){return evlistener.length;}}return 0;}EventEmitter.prototype.eventNames=function eventNames(){return this._eventsCount>0?Reflect.ownKeys(this._events):[];};// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list,index){for(var i=index,k=i+1,n=list.length;k<n;i+=1,k+=1){list[i]=list[k];}list.pop();}function arrayClone(arr,n){var copy=new Array(n);for(var i=0;i<n;++i){copy[i]=arr[i];}return copy;}function unwrapListeners(arr){var ret=new Array(arr.length);for(var i=0;i<ret.length;++i){ret[i]=arr[i].listener||arr[i];}return ret;}function objectCreatePolyfill(proto){var F=function F(){};F.prototype=proto;return new F();}function objectKeysPolyfill(obj){var keys=[];for(var k in obj){if(Object.prototype.hasOwnProperty.call(obj,k)){keys.push(k);}}return k;}function functionBindPolyfill(context){var fn=this;return function(){return fn.apply(context,arguments);};}},{}],43:[function(_dereq_,module,exports){/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ /* eslint-disable no-proto */'use strict';var base64=_dereq_('base64-js');var ieee754=_dereq_('ieee754');exports.Buffer=Buffer;exports.SlowBuffer=SlowBuffer;exports.INSPECT_MAX_BYTES=50;var K_MAX_LENGTH=0x7fffffff;exports.kMaxLength=K_MAX_LENGTH;/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!=='undefined'&&typeof console.error==='function'){console.error('This browser lacks typed array (Uint8Array) support which is required by '+'`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');}function typedArraySupport(){// Can typed array instances can be augmented?\ntry{var arr=new Uint8Array(1);arr.__proto__={__proto__:Uint8Array.prototype,foo:function foo(){return 42;}};return arr.foo()===42;}catch(e){return false;}}Object.defineProperty(Buffer.prototype,'parent',{enumerable:true,get:function get(){if(!Buffer.isBuffer(this))return undefined;return this.buffer;}});Object.defineProperty(Buffer.prototype,'offset',{enumerable:true,get:function get(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset;}});function createBuffer(length){if(length>K_MAX_LENGTH){throw new RangeError('The value \"'+length+'\" is invalid for option \"size\"');}// Return an augmented `Uint8Array` instance\nvar buf=new Uint8Array(length);buf.__proto__=Buffer.prototype;return buf;}/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */function Buffer(arg,encodingOrOffset,length){// Common case.\nif(typeof arg==='number'){if(typeof encodingOrOffset==='string'){throw new TypeError('The \"string\" argument must be of type string. Received type number');}return allocUnsafe(arg);}return from(arg,encodingOrOffset,length);}// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif(typeof Symbol!=='undefined'&&Symbol.species!=null&&Buffer[Symbol.species]===Buffer){Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:true,enumerable:false,writable:false});}Buffer.poolSize=8192;// not used by this implementation\nfunction from(value,encodingOrOffset,length){if(typeof value==='string'){return fromString(value,encodingOrOffset);}if(ArrayBuffer.isView(value)){return fromArrayLike(value);}if(value==null){throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, '+'or Array-like Object. Received type '+_typeof(value));}if(isInstance(value,ArrayBuffer)||value&&isInstance(value.buffer,ArrayBuffer)){return fromArrayBuffer(value,encodingOrOffset,length);}if(typeof value==='number'){throw new TypeError('The \"value\" argument must not be of type number. Received type number');}var valueOf=value.valueOf&&value.valueOf();if(valueOf!=null&&valueOf!==value){return Buffer.from(valueOf,encodingOrOffset,length);}var b=fromObject(value);if(b)return b;if(typeof Symbol!=='undefined'&&Symbol.toPrimitive!=null&&typeof value[Symbol.toPrimitive]==='function'){return Buffer.from(value[Symbol.toPrimitive]('string'),encodingOrOffset,length);}throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, '+'or Array-like Object. Received type '+_typeof(value));}/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/Buffer.from=function(value,encodingOrOffset,length){return from(value,encodingOrOffset,length);};// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__=Uint8Array.prototype;Buffer.__proto__=Uint8Array;function assertSize(size){if(typeof size!=='number'){throw new TypeError('\"size\" argument must be of type number');}else if(size<0){throw new RangeError('The value \"'+size+'\" is invalid for option \"size\"');}}function alloc(size,fill,encoding){assertSize(size);if(size<=0){return createBuffer(size);}if(fill!==undefined){// Only pay attention to encoding if it's a string. This\n// prevents accidentally sending in a number that would\n// be interpretted as a start offset.\nreturn typeof encoding==='string'?createBuffer(size).fill(fill,encoding):createBuffer(size).fill(fill);}return createBuffer(size);}/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/Buffer.alloc=function(size,fill,encoding){return alloc(size,fill,encoding);};function allocUnsafe(size){assertSize(size);return createBuffer(size<0?0:checked(size)|0);}/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */Buffer.allocUnsafe=function(size){return allocUnsafe(size);};/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */Buffer.allocUnsafeSlow=function(size){return allocUnsafe(size);};function fromString(string,encoding){if(typeof encoding!=='string'||encoding===''){encoding='utf8';}if(!Buffer.isEncoding(encoding)){throw new TypeError('Unknown encoding: '+encoding);}var length=byteLength(string,encoding)|0;var buf=createBuffer(length);var actual=buf.write(string,encoding);if(actual!==length){// Writing a hex string, for example, that contains invalid characters will\n// cause everything after the first invalid character to be ignored. (e.g.\n// 'abxxcd' will be treated as 'ab')\nbuf=buf.slice(0,actual);}return buf;}function fromArrayLike(array){var length=array.length<0?0:checked(array.length)|0;var buf=createBuffer(length);for(var i=0;i<length;i+=1){buf[i]=array[i]&255;}return buf;}function fromArrayBuffer(array,byteOffset,length){if(byteOffset<0||array.byteLength<byteOffset){throw new RangeError('\"offset\" is outside of buffer bounds');}if(array.byteLength<byteOffset+(length||0)){throw new RangeError('\"length\" is outside of buffer bounds');}var buf;if(byteOffset===undefined&&length===undefined){buf=new Uint8Array(array);}else if(length===undefined){buf=new Uint8Array(array,byteOffset);}else{buf=new Uint8Array(array,byteOffset,length);}// Return an augmented `Uint8Array` instance\nbuf.__proto__=Buffer.prototype;return buf;}function fromObject(obj){if(Buffer.isBuffer(obj)){var len=checked(obj.length)|0;var buf=createBuffer(len);if(buf.length===0){return buf;}obj.copy(buf,0,0,len);return buf;}if(obj.length!==undefined){if(typeof obj.length!=='number'||numberIsNaN(obj.length)){return createBuffer(0);}return fromArrayLike(obj);}if(obj.type==='Buffer'&&Array.isArray(obj.data)){return fromArrayLike(obj.data);}}function checked(length){// Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n// length is NaN (which is otherwise coerced to zero.)\nif(length>=K_MAX_LENGTH){throw new RangeError('Attempt to allocate Buffer larger than maximum '+'size: 0x'+K_MAX_LENGTH.toString(16)+' bytes');}return length|0;}function SlowBuffer(length){if(+length!=length){// eslint-disable-line eqeqeq\nlength=0;}return Buffer.alloc(+length);}Buffer.isBuffer=function isBuffer(b){return b!=null&&b._isBuffer===true&&b!==Buffer.prototype;// so Buffer.isBuffer(Buffer.prototype) will be false\n};Buffer.compare=function compare(a,b){if(isInstance(a,Uint8Array))a=Buffer.from(a,a.offset,a.byteLength);if(isInstance(b,Uint8Array))b=Buffer.from(b,b.offset,b.byteLength);if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');}if(a===b)return 0;var x=a.length;var y=b.length;for(var i=0,len=Math.min(x,y);i<len;++i){if(a[i]!==b[i]){x=a[i];y=b[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};Buffer.isEncoding=function isEncoding(encoding){switch(String(encoding).toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'latin1':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return true;default:return false;}};Buffer.concat=function concat(list,length){if(!Array.isArray(list)){throw new TypeError('\"list\" argument must be an Array of Buffers');}if(list.length===0){return Buffer.alloc(0);}var i;if(length===undefined){length=0;for(i=0;i<list.length;++i){length+=list[i].length;}}var buffer=Buffer.allocUnsafe(length);var pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(isInstance(buf,Uint8Array)){buf=Buffer.from(buf);}if(!Buffer.isBuffer(buf)){throw new TypeError('\"list\" argument must be an Array of Buffers');}buf.copy(buffer,pos);pos+=buf.length;}return buffer;};function byteLength(string,encoding){if(Buffer.isBuffer(string)){return string.length;}if(ArrayBuffer.isView(string)||isInstance(string,ArrayBuffer)){return string.byteLength;}if(typeof string!=='string'){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+'Received type '+_typeof(string));}var len=string.length;var mustMatch=arguments.length>2&&arguments[2]===true;if(!mustMatch&&len===0)return 0;// Use a for loop to avoid recursion\nvar loweredCase=false;for(;;){switch(encoding){case'ascii':case'latin1':case'binary':return len;case'utf8':case'utf-8':return utf8ToBytes(string).length;case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return len*2;case'hex':return len>>>1;case'base64':return base64ToBytes(string).length;default:if(loweredCase){return mustMatch?-1:utf8ToBytes(string).length;// assume utf8\n}encoding=(''+encoding).toLowerCase();loweredCase=true;}}}Buffer.byteLength=byteLength;function slowToString(encoding,start,end){var loweredCase=false;// No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\n// undefined is handled specially as per ECMA-262 6th Edition,\n// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\nif(start===undefined||start<0){start=0;}// Return early if start > this.length. Done here to prevent potential uint32\n// coercion fail below.\nif(start>this.length){return'';}if(end===undefined||end>this.length){end=this.length;}if(end<=0){return'';}// Force coersion to uint32. This will also coerce falsey/NaN values to 0.\nend>>>=0;start>>>=0;if(end<=start){return'';}if(!encoding)encoding='utf8';while(true){switch(encoding){case'hex':return hexSlice(this,start,end);case'utf8':case'utf-8':return utf8Slice(this,start,end);case'ascii':return asciiSlice(this,start,end);case'latin1':case'binary':return latin1Slice(this,start,end);case'base64':return base64Slice(this,start,end);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);encoding=(encoding+'').toLowerCase();loweredCase=true;}}}// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer=true;function swap(b,n,m){var i=b[n];b[n]=b[m];b[m]=i;}Buffer.prototype.swap16=function swap16(){var len=this.length;if(len%2!==0){throw new RangeError('Buffer size must be a multiple of 16-bits');}for(var i=0;i<len;i+=2){swap(this,i,i+1);}return this;};Buffer.prototype.swap32=function swap32(){var len=this.length;if(len%4!==0){throw new RangeError('Buffer size must be a multiple of 32-bits');}for(var i=0;i<len;i+=4){swap(this,i,i+3);swap(this,i+1,i+2);}return this;};Buffer.prototype.swap64=function swap64(){var len=this.length;if(len%8!==0){throw new RangeError('Buffer size must be a multiple of 64-bits');}for(var i=0;i<len;i+=8){swap(this,i,i+7);swap(this,i+1,i+6);swap(this,i+2,i+5);swap(this,i+3,i+4);}return this;};Buffer.prototype.toString=function toString(){var length=this.length;if(length===0)return'';if(arguments.length===0)return utf8Slice(this,0,length);return slowToString.apply(this,arguments);};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(b){if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');if(this===b)return true;return Buffer.compare(this,b)===0;};Buffer.prototype.inspect=function inspect(){var str='';var max=exports.INSPECT_MAX_BYTES;str=this.toString('hex',0,max).replace(/(.{2})/g,'$1 ').trim();if(this.length>max)str+=' ... ';return'<Buffer '+str+'>';};Buffer.prototype.compare=function compare(target,start,end,thisStart,thisEnd){if(isInstance(target,Uint8Array)){target=Buffer.from(target,target.offset,target.byteLength);}if(!Buffer.isBuffer(target)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+'Received type '+_typeof(target));}if(start===undefined){start=0;}if(end===undefined){end=target?target.length:0;}if(thisStart===undefined){thisStart=0;}if(thisEnd===undefined){thisEnd=this.length;}if(start<0||end>target.length||thisStart<0||thisEnd>this.length){throw new RangeError('out of range index');}if(thisStart>=thisEnd&&start>=end){return 0;}if(thisStart>=thisEnd){return-1;}if(start>=end){return 1;}start>>>=0;end>>>=0;thisStart>>>=0;thisEnd>>>=0;if(this===target)return 0;var x=thisEnd-thisStart;var y=end-start;var len=Math.min(x,y);var thisCopy=this.slice(thisStart,thisEnd);var targetCopy=target.slice(start,end);for(var i=0;i<len;++i){if(thisCopy[i]!==targetCopy[i]){x=thisCopy[i];y=targetCopy[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){// Empty buffer means no match\nif(buffer.length===0)return-1;// Normalize byteOffset\nif(typeof byteOffset==='string'){encoding=byteOffset;byteOffset=0;}else if(byteOffset>0x7fffffff){byteOffset=0x7fffffff;}else if(byteOffset<-0x80000000){byteOffset=-0x80000000;}byteOffset=+byteOffset;// Coerce to Number.\nif(numberIsNaN(byteOffset)){// byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\nbyteOffset=dir?0:buffer.length-1;}// Normalize byteOffset: negative offsets start from the end of the buffer\nif(byteOffset<0)byteOffset=buffer.length+byteOffset;if(byteOffset>=buffer.length){if(dir)return-1;else byteOffset=buffer.length-1;}else if(byteOffset<0){if(dir)byteOffset=0;else return-1;}// Normalize val\nif(typeof val==='string'){val=Buffer.from(val,encoding);}// Finally, search either indexOf (if dir is true) or lastIndexOf\nif(Buffer.isBuffer(val)){// Special case: looking for empty string/buffer always fails\nif(val.length===0){return-1;}return arrayIndexOf(buffer,val,byteOffset,encoding,dir);}else if(typeof val==='number'){val=val&0xFF;// Search for a byte value [0-255]\nif(typeof Uint8Array.prototype.indexOf==='function'){if(dir){return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset);}else{return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset);}}return arrayIndexOf(buffer,[val],byteOffset,encoding,dir);}throw new TypeError('val must be string, number or Buffer');}function arrayIndexOf(arr,val,byteOffset,encoding,dir){var indexSize=1;var arrLength=arr.length;var valLength=val.length;if(encoding!==undefined){encoding=String(encoding).toLowerCase();if(encoding==='ucs2'||encoding==='ucs-2'||encoding==='utf16le'||encoding==='utf-16le'){if(arr.length<2||val.length<2){return-1;}indexSize=2;arrLength/=2;valLength/=2;byteOffset/=2;}}function read(buf,i){if(indexSize===1){return buf[i];}else{return buf.readUInt16BE(i*indexSize);}}var i;if(dir){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++){if(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){if(foundIndex===-1)foundIndex=i;if(i-foundIndex+1===valLength)return foundIndex*indexSize;}else{if(foundIndex!==-1)i-=i-foundIndex;foundIndex=-1;}}}else{if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;for(i=byteOffset;i>=0;i--){var found=true;for(var j=0;j<valLength;j++){if(read(arr,i+j)!==read(val,j)){found=false;break;}}if(found)return i;}}return-1;}Buffer.prototype.includes=function includes(val,byteOffset,encoding){return this.indexOf(val,byteOffset,encoding)!==-1;};Buffer.prototype.indexOf=function indexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,true);};Buffer.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,false);};function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;if(!length){length=remaining;}else{length=Number(length);if(length>remaining){length=remaining;}}var strLen=string.length;if(length>strLen/2){length=strLen/2;}for(var i=0;i<length;++i){var parsed=parseInt(string.substr(i*2,2),16);if(numberIsNaN(parsed))return i;buf[offset+i]=parsed;}return i;}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);}function asciiWrite(buf,string,offset,length){return blitBuffer(asciiToBytes(string),buf,offset,length);}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length);}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length);}function ucs2Write(buf,string,offset,length){return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);}Buffer.prototype.write=function write(string,offset,length,encoding){// Buffer#write(string)\nif(offset===undefined){encoding='utf8';length=this.length;offset=0;// Buffer#write(string, encoding)\n}else if(length===undefined&&typeof offset==='string'){encoding=offset;length=this.length;offset=0;// Buffer#write(string, offset[, length][, encoding])\n}else if(isFinite(offset)){offset=offset>>>0;if(isFinite(length)){length=length>>>0;if(encoding===undefined)encoding='utf8';}else{encoding=length;length=undefined;}}else{throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');}var remaining=this.length-offset;if(length===undefined||length>remaining)length=remaining;if(string.length>0&&(length<0||offset<0)||offset>this.length){throw new RangeError('Attempt to write outside buffer bounds');}if(!encoding)encoding='utf8';var loweredCase=false;for(;;){switch(encoding){case'hex':return hexWrite(this,string,offset,length);case'utf8':case'utf-8':return utf8Write(this,string,offset,length);case'ascii':return asciiWrite(this,string,offset,length);case'latin1':case'binary':return latin1Write(this,string,offset,length);case'base64':// Warning: maxLength not taken into account in base64Write\nreturn base64Write(this,string,offset,length);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);encoding=(''+encoding).toLowerCase();loweredCase=true;}}};Buffer.prototype.toJSON=function toJSON(){return{type:'Buffer',data:Array.prototype.slice.call(this._arr||this,0)};};function base64Slice(buf,start,end){if(start===0&&end===buf.length){return base64.fromByteArray(buf);}else{return base64.fromByteArray(buf.slice(start,end));}}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);var res=[];var i=start;while(i<end){var firstByte=buf[i];var codePoint=null;var bytesPerSequence=firstByte>0xEF?4:firstByte>0xDF?3:firstByte>0xBF?2:1;if(i+bytesPerSequence<=end){var secondByte,thirdByte,fourthByte,tempCodePoint;switch(bytesPerSequence){case 1:if(firstByte<0x80){codePoint=firstByte;}break;case 2:secondByte=buf[i+1];if((secondByte&0xC0)===0x80){tempCodePoint=(firstByte&0x1F)<<0x6|secondByte&0x3F;if(tempCodePoint>0x7F){codePoint=tempCodePoint;}}break;case 3:secondByte=buf[i+1];thirdByte=buf[i+2];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0xC|(secondByte&0x3F)<<0x6|thirdByte&0x3F;if(tempCodePoint>0x7FF&&(tempCodePoint<0xD800||tempCodePoint>0xDFFF)){codePoint=tempCodePoint;}}break;case 4:secondByte=buf[i+1];thirdByte=buf[i+2];fourthByte=buf[i+3];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80&&(fourthByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0x12|(secondByte&0x3F)<<0xC|(thirdByte&0x3F)<<0x6|fourthByte&0x3F;if(tempCodePoint>0xFFFF&&tempCodePoint<0x110000){codePoint=tempCodePoint;}}}}if(codePoint===null){// we did not generate a valid codePoint so insert a\n// replacement char (U+FFFD) and advance only 1 byte\ncodePoint=0xFFFD;bytesPerSequence=1;}else if(codePoint>0xFFFF){// encode to utf16 (surrogate pair dance)\ncodePoint-=0x10000;res.push(codePoint>>>10&0x3FF|0xD800);codePoint=0xDC00|codePoint&0x3FF;}res.push(codePoint);i+=bytesPerSequence;}return decodeCodePointsArray(res);}// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH=0x1000;function decodeCodePointsArray(codePoints){var len=codePoints.length;if(len<=MAX_ARGUMENTS_LENGTH){return String.fromCharCode.apply(String,codePoints);// avoid extra slice()\n}// Decode in chunks to avoid \"call stack size exceeded\".\nvar res='';var i=0;while(i<len){res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));}return res;}function asciiSlice(buf,start,end){var ret='';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]&0x7F);}return ret;}function latin1Slice(buf,start,end){var ret='';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]);}return ret;}function hexSlice(buf,start,end){var len=buf.length;if(!start||start<0)start=0;if(!end||end<0||end>len)end=len;var out='';for(var i=start;i<end;++i){out+=toHex(buf[i]);}return out;}function utf16leSlice(buf,start,end){var bytes=buf.slice(start,end);var res='';for(var i=0;i<bytes.length;i+=2){res+=String.fromCharCode(bytes[i]+bytes[i+1]*256);}return res;}Buffer.prototype.slice=function slice(start,end){var len=this.length;start=~~start;end=end===undefined?len:~~end;if(start<0){start+=len;if(start<0)start=0;}else if(start>len){start=len;}if(end<0){end+=len;if(end<0)end=0;}else if(end>len){end=len;}if(end<start)end=start;var newBuf=this.subarray(start,end);// Return an augmented `Uint8Array` instance\nnewBuf.__proto__=Buffer.prototype;return newBuf;};/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */function checkOffset(offset,ext,length){if(offset%1!==0||offset<0)throw new RangeError('offset is not uint');if(offset+ext>length)throw new RangeError('Trying to access beyond buffer length');}Buffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}return val;};Buffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){checkOffset(offset,byteLength,this.length);}var val=this[offset+--byteLength];var mul=1;while(byteLength>0&&(mul*=0x100)){val+=this[offset+--byteLength]*mul;}return val;};Buffer.prototype.readUInt8=function readUInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);return this[offset];};Buffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]|this[offset+1]<<8;};Buffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]<<8|this[offset+1];};Buffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+this[offset+3]*0x1000000;};Buffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]*0x1000000+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3]);};Buffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var i=byteLength;var mul=1;var val=this[offset+--i];while(i>0&&(mul*=0x100)){val+=this[offset+--i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readInt8=function readInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);if(!(this[offset]&0x80))return this[offset];return(0xff-this[offset]+1)*-1;};Buffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24;};Buffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3];};Buffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,true,23,4);};Buffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,false,23,4);};Buffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,true,52,8);};Buffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,false,52,8);};function checkInt(buf,value,offset,ext,max,min){if(!Buffer.isBuffer(buf))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(value>max||value<min)throw new RangeError('\"value\" argument is out of bounds');if(offset+ext>buf.length)throw new RangeError('Index out of range');}Buffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var mul=1;var i=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var i=byteLength-1;var mul=1;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,1,0xff,0);this[offset]=value&0xff;return offset+1;};Buffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);this[offset]=value&0xff;this[offset+1]=value>>>8;return offset+2;};Buffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);this[offset]=value>>>8;this[offset+1]=value&0xff;return offset+2;};Buffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);this[offset+3]=value>>>24;this[offset+2]=value>>>16;this[offset+1]=value>>>8;this[offset]=value&0xff;return offset+4;};Buffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;return offset+4;};Buffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=0;var mul=1;var sub=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i-1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=byteLength-1;var mul=1;var sub=0;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i+1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);if(value<0)value=0xff+value+1;this[offset]=value&0xff;return offset+1;};Buffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);this[offset]=value&0xff;this[offset+1]=value>>>8;return offset+2;};Buffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);this[offset]=value>>>8;this[offset+1]=value&0xff;return offset+2;};Buffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);this[offset]=value&0xff;this[offset+1]=value>>>8;this[offset+2]=value>>>16;this[offset+3]=value>>>24;return offset+4;};Buffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);if(value<0)value=0xffffffff+value+1;this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;return offset+4;};function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError('Index out of range');if(offset<0)throw new RangeError('Index out of range');}function writeFloat(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,4,3.4028234663852886e+38,-3.4028234663852886e+38);}ieee754.write(buf,value,offset,littleEndian,23,4);return offset+4;}Buffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){return writeFloat(this,value,offset,true,noAssert);};Buffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){return writeFloat(this,value,offset,false,noAssert);};function writeDouble(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,8,1.7976931348623157E+308,-1.7976931348623157E+308);}ieee754.write(buf,value,offset,littleEndian,52,8);return offset+8;}Buffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){return writeDouble(this,value,offset,true,noAssert);};Buffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){return writeDouble(this,value,offset,false,noAssert);};// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy=function copy(target,targetStart,start,end){if(!Buffer.isBuffer(target))throw new TypeError('argument should be a Buffer');if(!start)start=0;if(!end&&end!==0)end=this.length;if(targetStart>=target.length)targetStart=target.length;if(!targetStart)targetStart=0;if(end>0&&end<start)end=start;// Copy 0 bytes; we're done\nif(end===start)return 0;if(target.length===0||this.length===0)return 0;// Fatal error conditions\nif(targetStart<0){throw new RangeError('targetStart out of bounds');}if(start<0||start>=this.length)throw new RangeError('Index out of range');if(end<0)throw new RangeError('sourceEnd out of bounds');// Are we oob?\nif(end>this.length)end=this.length;if(target.length-targetStart<end-start){end=target.length-targetStart+start;}var len=end-start;if(this===target&&typeof Uint8Array.prototype.copyWithin==='function'){// Use built-in when available, missing from IE11\nthis.copyWithin(targetStart,start,end);}else if(this===target&&start<targetStart&&targetStart<end){// descending copy from end\nfor(var i=len-1;i>=0;--i){target[i+targetStart]=this[i+start];}}else{Uint8Array.prototype.set.call(target,this.subarray(start,end),targetStart);}return len;};// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill=function fill(val,start,end,encoding){// Handle string cases:\nif(typeof val==='string'){if(typeof start==='string'){encoding=start;start=0;end=this.length;}else if(typeof end==='string'){encoding=end;end=this.length;}if(encoding!==undefined&&typeof encoding!=='string'){throw new TypeError('encoding must be a string');}if(typeof encoding==='string'&&!Buffer.isEncoding(encoding)){throw new TypeError('Unknown encoding: '+encoding);}if(val.length===1){var code=val.charCodeAt(0);if(encoding==='utf8'&&code<128||encoding==='latin1'){// Fast path: If `val` fits into a single byte, use that numeric value.\nval=code;}}}else if(typeof val==='number'){val=val&255;}// Invalid ranges are not set to a default, so can range check early.\nif(start<0||this.length<start||this.length<end){throw new RangeError('Out of range index');}if(end<=start){return this;}start=start>>>0;end=end===undefined?this.length:end>>>0;if(!val)val=0;var i;if(typeof val==='number'){for(i=start;i<end;++i){this[i]=val;}}else{var bytes=Buffer.isBuffer(val)?val:Buffer.from(val,encoding);var len=bytes.length;if(len===0){throw new TypeError('The value \"'+val+'\" is invalid for argument \"value\"');}for(i=0;i<end-start;++i){this[i+start]=bytes[i%len];}}return this;};// HELPER FUNCTIONS\n// ================\nvar INVALID_BASE64_RE=/[^+/0-9A-Za-z-_]/g;function base64clean(str){// Node takes equal signs as end of the Base64 encoding\nstr=str.split('=')[0];// Node strips out invalid characters like \\n and \\t from the string, base64-js does not\nstr=str.trim().replace(INVALID_BASE64_RE,'');// Node converts strings with length < 2 to ''\nif(str.length<2)return'';// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\nwhile(str.length%4!==0){str=str+'=';}return str;}function toHex(n){if(n<16)return'0'+n.toString(16);return n.toString(16);}function utf8ToBytes(string,units){units=units||Infinity;var codePoint;var length=string.length;var leadSurrogate=null;var bytes=[];for(var i=0;i<length;++i){codePoint=string.charCodeAt(i);// is surrogate component\nif(codePoint>0xD7FF&&codePoint<0xE000){// last char was a lead\nif(!leadSurrogate){// no lead yet\nif(codePoint>0xDBFF){// unexpected trail\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}else if(i+1===length){// unpaired lead\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}// valid lead\nleadSurrogate=codePoint;continue;}// 2 leads in a row\nif(codePoint<0xDC00){if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);leadSurrogate=codePoint;continue;}// valid surrogate pair\ncodePoint=(leadSurrogate-0xD800<<10|codePoint-0xDC00)+0x10000;}else if(leadSurrogate){// valid bmp char, but last char was a lead\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);}leadSurrogate=null;// encode utf8\nif(codePoint<0x80){if((units-=1)<0)break;bytes.push(codePoint);}else if(codePoint<0x800){if((units-=2)<0)break;bytes.push(codePoint>>0x6|0xC0,codePoint&0x3F|0x80);}else if(codePoint<0x10000){if((units-=3)<0)break;bytes.push(codePoint>>0xC|0xE0,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else if(codePoint<0x110000){if((units-=4)<0)break;bytes.push(codePoint>>0x12|0xF0,codePoint>>0xC&0x3F|0x80,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else{throw new Error('Invalid code point');}}return bytes;}function asciiToBytes(str){var byteArray=[];for(var i=0;i<str.length;++i){// Node's code seems to be doing this and not & 0x7F..\nbyteArray.push(str.charCodeAt(i)&0xFF);}return byteArray;}function utf16leToBytes(str,units){var c,hi,lo;var byteArray=[];for(var i=0;i<str.length;++i){if((units-=2)<0)break;c=str.charCodeAt(i);hi=c>>8;lo=c%256;byteArray.push(lo);byteArray.push(hi);}return byteArray;}function base64ToBytes(str){return base64.toByteArray(base64clean(str));}function blitBuffer(src,dst,offset,length){for(var i=0;i<length;++i){if(i+offset>=dst.length||i>=src.length)break;dst[i+offset]=src[i];}return i;}// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance(obj,type){return obj instanceof type||obj!=null&&obj.constructor!=null&&obj.constructor.name!=null&&obj.constructor.name===type.name;}function numberIsNaN(obj){// For IE11 support\nreturn obj!==obj;// eslint-disable-line no-self-compare\n}},{\"base64-js\":14,\"ieee754\":165}],44:[function(_dereq_,module,exports){'use strict';var monotoneTriangulate=_dereq_('./lib/monotone');var makeIndex=_dereq_('./lib/triangulation');var delaunayFlip=_dereq_('./lib/delaunay');var filterTriangulation=_dereq_('./lib/filter');module.exports=cdt2d;function canonicalizeEdge(e){return[Math.min(e[0],e[1]),Math.max(e[0],e[1])];}function compareEdge(a,b){return a[0]-b[0]||a[1]-b[1];}function canonicalizeEdges(edges){return edges.map(canonicalizeEdge).sort(compareEdge);}function getDefault(options,property,dflt){if(property in options){return options[property];}return dflt;}function cdt2d(points,edges,options){if(!Array.isArray(edges)){options=edges||{};edges=[];}else{options=options||{};edges=edges||[];}//Parse out options\nvar delaunay=!!getDefault(options,'delaunay',true);var interior=!!getDefault(options,'interior',true);var exterior=!!getDefault(options,'exterior',true);var infinity=!!getDefault(options,'infinity',false);//Handle trivial case\nif(!interior&&!exterior||points.length===0){return[];}//Construct initial triangulation\nvar cells=monotoneTriangulate(points,edges);//If delaunay refinement needed, then improve quality by edge flipping\nif(delaunay||interior!==exterior||infinity){//Index all of the cells to support fast neighborhood queries\nvar triangulation=makeIndex(points.length,canonicalizeEdges(edges));for(var i=0;i<cells.length;++i){var f=cells[i];triangulation.addTriangle(f[0],f[1],f[2]);}//Run edge flipping\nif(delaunay){delaunayFlip(points,triangulation);}//Filter points\nif(!exterior){return filterTriangulation(triangulation,-1);}else if(!interior){return filterTriangulation(triangulation,1,infinity);}else if(infinity){return filterTriangulation(triangulation,0,infinity);}else{return triangulation.cells();}}else{return cells;}}},{\"./lib/delaunay\":45,\"./lib/filter\":46,\"./lib/monotone\":47,\"./lib/triangulation\":48}],45:[function(_dereq_,module,exports){'use strict';var inCircle=_dereq_('robust-in-sphere')[4];var bsearch=_dereq_('binary-search-bounds');module.exports=delaunayRefine;function testFlip(points,triangulation,stack,a,b,x){var y=triangulation.opposite(a,b);//Test boundary edge\nif(y<0){return;}//Swap edge if order flipped\nif(b<a){var tmp=a;a=b;b=tmp;tmp=x;x=y;y=tmp;}//Test if edge is constrained\nif(triangulation.isConstraint(a,b)){return;}//Test if edge is delaunay\nif(inCircle(points[a],points[b],points[x],points[y])<0){stack.push(a,b);}}//Assume edges are sorted lexicographically\nfunction delaunayRefine(points,triangulation){var stack=[];var numPoints=points.length;var stars=triangulation.stars;for(var a=0;a<numPoints;++a){var star=stars[a];for(var j=1;j<star.length;j+=2){var b=star[j];//If order is not consistent, then skip edge\nif(b<a){continue;}//Check if edge is constrained\nif(triangulation.isConstraint(a,b)){continue;}//Find opposite edge\nvar x=star[j-1],y=-1;for(var k=1;k<star.length;k+=2){if(star[k-1]===b){y=star[k];break;}}//If this is a boundary edge, don't flip it\nif(y<0){continue;}//If edge is in circle, flip it\nif(inCircle(points[a],points[b],points[x],points[y])<0){stack.push(a,b);}}}while(stack.length>0){var b=stack.pop();var a=stack.pop();//Find opposite pairs\nvar x=-1,y=-1;var star=stars[a];for(var i=1;i<star.length;i+=2){var s=star[i-1];var t=star[i];if(s===b){y=t;}else if(t===b){x=s;}}//If x/y are both valid then skip edge\nif(x<0||y<0){continue;}//If edge is now delaunay, then don't flip it\nif(inCircle(points[a],points[b],points[x],points[y])>=0){continue;}//Flip the edge\ntriangulation.flip(a,b);//Test flipping neighboring edges\ntestFlip(points,triangulation,stack,x,a,y);testFlip(points,triangulation,stack,a,y,x);testFlip(points,triangulation,stack,y,b,x);testFlip(points,triangulation,stack,b,x,y);}}},{\"binary-search-bounds\":49,\"robust-in-sphere\":243}],46:[function(_dereq_,module,exports){'use strict';var bsearch=_dereq_('binary-search-bounds');module.exports=classifyFaces;function FaceIndex(cells,neighbor,constraint,flags,active,next,boundary){this.cells=cells;this.neighbor=neighbor;this.flags=flags;this.constraint=constraint;this.active=active;this.next=next;this.boundary=boundary;}var proto=FaceIndex.prototype;function compareCell(a,b){return a[0]-b[0]||a[1]-b[1]||a[2]-b[2];}proto.locate=function(){var key=[0,0,0];return function(a,b,c){var x=a,y=b,z=c;if(b<c){if(b<a){x=b;y=c;z=a;}}else if(c<a){x=c;y=a;z=b;}if(x<0){return-1;}key[0]=x;key[1]=y;key[2]=z;return bsearch.eq(this.cells,key,compareCell);};}();function indexCells(triangulation,infinity){//First get cells and canonicalize\nvar cells=triangulation.cells();var nc=cells.length;for(var i=0;i<nc;++i){var c=cells[i];var x=c[0],y=c[1],z=c[2];if(y<z){if(y<x){c[0]=y;c[1]=z;c[2]=x;}}else if(z<x){c[0]=z;c[1]=x;c[2]=y;}}cells.sort(compareCell);//Initialize flag array\nvar flags=new Array(nc);for(var i=0;i<flags.length;++i){flags[i]=0;}//Build neighbor index, initialize queues\nvar active=[];var next=[];var neighbor=new Array(3*nc);var constraint=new Array(3*nc);var boundary=null;if(infinity){boundary=[];}var index=new FaceIndex(cells,neighbor,constraint,flags,active,next,boundary);for(var i=0;i<nc;++i){var c=cells[i];for(var j=0;j<3;++j){var x=c[j],y=c[(j+1)%3];var a=neighbor[3*i+j]=index.locate(y,x,triangulation.opposite(y,x));var b=constraint[3*i+j]=triangulation.isConstraint(x,y);if(a<0){if(b){next.push(i);}else{active.push(i);flags[i]=1;}if(infinity){boundary.push([y,x,-1]);}}}}return index;}function filterCells(cells,flags,target){var ptr=0;for(var i=0;i<cells.length;++i){if(flags[i]===target){cells[ptr++]=cells[i];}}cells.length=ptr;return cells;}function classifyFaces(triangulation,target,infinity){var index=indexCells(triangulation,infinity);if(target===0){if(infinity){return index.cells.concat(index.boundary);}else{return index.cells;}}var side=1;var active=index.active;var next=index.next;var flags=index.flags;var cells=index.cells;var constraint=index.constraint;var neighbor=index.neighbor;while(active.length>0||next.length>0){while(active.length>0){var t=active.pop();if(flags[t]===-side){continue;}flags[t]=side;var c=cells[t];for(var j=0;j<3;++j){var f=neighbor[3*t+j];if(f>=0&&flags[f]===0){if(constraint[3*t+j]){next.push(f);}else{active.push(f);flags[f]=side;}}}}//Swap arrays and loop\nvar tmp=next;next=active;active=tmp;next.length=0;side=-side;}var result=filterCells(cells,flags,target);if(infinity){return result.concat(index.boundary);}return result;}},{\"binary-search-bounds\":49}],47:[function(_dereq_,module,exports){'use strict';var bsearch=_dereq_('binary-search-bounds');var orient=_dereq_('robust-orientation')[3];var EVENT_POINT=0;var EVENT_END=1;var EVENT_START=2;module.exports=monotoneTriangulate;//A partial convex hull fragment, made of two unimonotone polygons\nfunction PartialHull(a,b,idx,lowerIds,upperIds){this.a=a;this.b=b;this.idx=idx;this.lowerIds=lowerIds;this.upperIds=upperIds;}//An event in the sweep line procedure\nfunction Event(a,b,type,idx){this.a=a;this.b=b;this.type=type;this.idx=idx;}//This is used to compare events for the sweep line procedure\n// Points are:\n//  1. sorted lexicographically\n//  2. sorted by type  (point < end < start)\n//  3. segments sorted by winding order\n//  4. sorted by index\nfunction compareEvent(a,b){var d=a.a[0]-b.a[0]||a.a[1]-b.a[1]||a.type-b.type;if(d){return d;}if(a.type!==EVENT_POINT){d=orient(a.a,a.b,b.b);if(d){return d;}}return a.idx-b.idx;}function testPoint(hull,p){return orient(hull.a,hull.b,p);}function addPoint(cells,hulls,points,p,idx){var lo=bsearch.lt(hulls,p,testPoint);var hi=bsearch.gt(hulls,p,testPoint);for(var i=lo;i<hi;++i){var hull=hulls[i];//Insert p into lower hull\nvar lowerIds=hull.lowerIds;var m=lowerIds.length;while(m>1&&orient(points[lowerIds[m-2]],points[lowerIds[m-1]],p)>0){cells.push([lowerIds[m-1],lowerIds[m-2],idx]);m-=1;}lowerIds.length=m;lowerIds.push(idx);//Insert p into upper hull\nvar upperIds=hull.upperIds;var m=upperIds.length;while(m>1&&orient(points[upperIds[m-2]],points[upperIds[m-1]],p)<0){cells.push([upperIds[m-2],upperIds[m-1],idx]);m-=1;}upperIds.length=m;upperIds.push(idx);}}function findSplit(hull,edge){var d;if(hull.a[0]<edge.a[0]){d=orient(hull.a,hull.b,edge.a);}else{d=orient(edge.b,edge.a,hull.a);}if(d){return d;}if(edge.b[0]<hull.b[0]){d=orient(hull.a,hull.b,edge.b);}else{d=orient(edge.b,edge.a,hull.b);}return d||hull.idx-edge.idx;}function splitHulls(hulls,points,event){var splitIdx=bsearch.le(hulls,event,findSplit);var hull=hulls[splitIdx];var upperIds=hull.upperIds;var x=upperIds[upperIds.length-1];hull.upperIds=[x];hulls.splice(splitIdx+1,0,new PartialHull(event.a,event.b,event.idx,[x],upperIds));}function mergeHulls(hulls,points,event){//Swap pointers for merge search\nvar tmp=event.a;event.a=event.b;event.b=tmp;var mergeIdx=bsearch.eq(hulls,event,findSplit);var upper=hulls[mergeIdx];var lower=hulls[mergeIdx-1];lower.upperIds=upper.upperIds;hulls.splice(mergeIdx,1);}function monotoneTriangulate(points,edges){var numPoints=points.length;var numEdges=edges.length;var events=[];//Create point events\nfor(var i=0;i<numPoints;++i){events.push(new Event(points[i],null,EVENT_POINT,i));}//Create edge events\nfor(var i=0;i<numEdges;++i){var e=edges[i];var a=points[e[0]];var b=points[e[1]];if(a[0]<b[0]){events.push(new Event(a,b,EVENT_START,i),new Event(b,a,EVENT_END,i));}else if(a[0]>b[0]){events.push(new Event(b,a,EVENT_START,i),new Event(a,b,EVENT_END,i));}}//Sort events\nevents.sort(compareEvent);//Initialize hull\nvar minX=events[0].a[0]-(1+Math.abs(events[0].a[0]))*Math.pow(2,-52);var hull=[new PartialHull([minX,1],[minX,0],-1,[],[],[],[])];//Process events in order\nvar cells=[];for(var i=0,numEvents=events.length;i<numEvents;++i){var event=events[i];var type=event.type;if(type===EVENT_POINT){addPoint(cells,hull,points,event.a,event.idx);}else if(type===EVENT_START){splitHulls(hull,points,event);}else{mergeHulls(hull,points,event);}}//Return triangulation\nreturn cells;}},{\"binary-search-bounds\":49,\"robust-orientation\":245}],48:[function(_dereq_,module,exports){'use strict';var bsearch=_dereq_('binary-search-bounds');module.exports=createTriangulation;function Triangulation(stars,edges){this.stars=stars;this.edges=edges;}var proto=Triangulation.prototype;function removePair(list,j,k){for(var i=1,n=list.length;i<n;i+=2){if(list[i-1]===j&&list[i]===k){list[i-1]=list[n-2];list[i]=list[n-1];list.length=n-2;return;}}}proto.isConstraint=function(){var e=[0,0];function compareLex(a,b){return a[0]-b[0]||a[1]-b[1];}return function(i,j){e[0]=Math.min(i,j);e[1]=Math.max(i,j);return bsearch.eq(this.edges,e,compareLex)>=0;};}();proto.removeTriangle=function(i,j,k){var stars=this.stars;removePair(stars[i],j,k);removePair(stars[j],k,i);removePair(stars[k],i,j);};proto.addTriangle=function(i,j,k){var stars=this.stars;stars[i].push(j,k);stars[j].push(k,i);stars[k].push(i,j);};proto.opposite=function(j,i){var list=this.stars[i];for(var k=1,n=list.length;k<n;k+=2){if(list[k]===j){return list[k-1];}}return-1;};proto.flip=function(i,j){var a=this.opposite(i,j);var b=this.opposite(j,i);this.removeTriangle(i,j,a);this.removeTriangle(j,i,b);this.addTriangle(i,b,a);this.addTriangle(j,a,b);};proto.edges=function(){var stars=this.stars;var result=[];for(var i=0,n=stars.length;i<n;++i){var list=stars[i];for(var j=0,m=list.length;j<m;j+=2){result.push([list[j],list[j+1]]);}}return result;};proto.cells=function(){var stars=this.stars;var result=[];for(var i=0,n=stars.length;i<n;++i){var list=stars[i];for(var j=0,m=list.length;j<m;j+=2){var s=list[j];var t=list[j+1];if(i<Math.min(s,t)){result.push([i,s,t]);}}}return result;};function createTriangulation(numVerts,edges){var stars=new Array(numVerts);for(var i=0;i<numVerts;++i){stars[i]=[];}return new Triangulation(stars,edges);}},{\"binary-search-bounds\":49}],49:[function(_dereq_,module,exports){\"use strict\";function compileSearch(funcName,predicate,reversed,extraArgs,earlyOut){var code=[\"function \",funcName,\"(a,l,h,\",extraArgs.join(\",\"),\"){\",earlyOut?\"\":\"var i=\",reversed?\"l-1\":\"h+1\",\";while(l<=h){var m=(l+h)>>>1,x=a[m]\"];if(earlyOut){if(predicate.indexOf(\"c\")<0){code.push(\";if(x===y){return m}else if(x<=y){\");}else{code.push(\";var p=c(x,y);if(p===0){return m}else if(p<=0){\");}}else{code.push(\";if(\",predicate,\"){i=m;\");}if(reversed){code.push(\"l=m+1}else{h=m-1}\");}else{code.push(\"h=m-1}else{l=m+1}\");}code.push(\"}\");if(earlyOut){code.push(\"return -1};\");}else{code.push(\"return i};\");}return code.join(\"\");}function compileBoundsSearch(predicate,reversed,suffix,earlyOut){var result=new Function([compileSearch(\"A\",\"x\"+predicate+\"y\",reversed,[\"y\"],earlyOut),compileSearch(\"P\",\"c(x,y)\"+predicate+\"0\",reversed,[\"y\",\"c\"],earlyOut),\"function dispatchBsearch\",suffix,\"(a,y,c,l,h){\\\nif(typeof(c)==='function'){\\\nreturn P(a,(l===void 0)?0:l|0,(h===void 0)?a.length-1:h|0,y,c)\\\n}else{\\\nreturn A(a,(c===void 0)?0:c|0,(l===void 0)?a.length-1:l|0,y)\\\n}}\\\nreturn dispatchBsearch\",suffix].join(\"\"));return result();}module.exports={ge:compileBoundsSearch(\">=\",false,\"GE\"),gt:compileBoundsSearch(\">\",false,\"GT\"),lt:compileBoundsSearch(\"<\",true,\"LT\"),le:compileBoundsSearch(\"<=\",true,\"LE\"),eq:compileBoundsSearch(\"-\",true,\"EQ\",true)};},{}],50:[function(_dereq_,module,exports){module.exports=clamp;function clamp(value,min,max){return min<max?value<min?min:value>max?max:value:value<max?max:value>min?min:value;}},{}],51:[function(_dereq_,module,exports){'use strict';module.exports=cleanPSLG;var UnionFind=_dereq_('union-find');var boxIntersect=_dereq_('box-intersect');var segseg=_dereq_('robust-segment-intersect');var rat=_dereq_('big-rat');var ratCmp=_dereq_('big-rat/cmp');var ratToFloat=_dereq_('big-rat/to-float');var ratVec=_dereq_('rat-vec');var nextafter=_dereq_('nextafter');var solveIntersection=_dereq_('./lib/rat-seg-intersect');// Bounds on a rational number when rounded to a float\nfunction boundRat(r){var f=ratToFloat(r);return[nextafter(f,-Infinity),nextafter(f,Infinity)];}// Convert a list of edges in a pslg to bounding boxes\nfunction boundEdges(points,edges){var bounds=new Array(edges.length);for(var i=0;i<edges.length;++i){var e=edges[i];var a=points[e[0]];var b=points[e[1]];bounds[i]=[nextafter(Math.min(a[0],b[0]),-Infinity),nextafter(Math.min(a[1],b[1]),-Infinity),nextafter(Math.max(a[0],b[0]),Infinity),nextafter(Math.max(a[1],b[1]),Infinity)];}return bounds;}// Convert a list of points into bounding boxes by duplicating coords\nfunction boundPoints(points){var bounds=new Array(points.length);for(var i=0;i<points.length;++i){var p=points[i];bounds[i]=[nextafter(p[0],-Infinity),nextafter(p[1],-Infinity),nextafter(p[0],Infinity),nextafter(p[1],Infinity)];}return bounds;}// Find all pairs of crossing edges in a pslg (given edge bounds)\nfunction getCrossings(points,edges,edgeBounds){var result=[];boxIntersect(edgeBounds,function(i,j){var e=edges[i];var f=edges[j];if(e[0]===f[0]||e[0]===f[1]||e[1]===f[0]||e[1]===f[1]){return;}var a=points[e[0]];var b=points[e[1]];var c=points[f[0]];var d=points[f[1]];if(segseg(a,b,c,d)){result.push([i,j]);}});return result;}// Find all pairs of crossing vertices in a pslg (given edge/vert bounds)\nfunction getTJunctions(points,edges,edgeBounds,vertBounds){var result=[];boxIntersect(edgeBounds,vertBounds,function(i,v){var e=edges[i];if(e[0]===v||e[1]===v){return;}var p=points[v];var a=points[e[0]];var b=points[e[1]];if(segseg(a,b,p,p)){result.push([i,v]);}});return result;}// Cut edges along crossings/tjunctions\nfunction cutEdges(floatPoints,edges,crossings,junctions,useColor){var i,e;// Convert crossings into tjunctions by constructing rational points\nvar ratPoints=floatPoints.map(function(p){return[rat(p[0]),rat(p[1])];});for(i=0;i<crossings.length;++i){var crossing=crossings[i];e=crossing[0];var f=crossing[1];var ee=edges[e];var ef=edges[f];var x=solveIntersection(ratVec(floatPoints[ee[0]]),ratVec(floatPoints[ee[1]]),ratVec(floatPoints[ef[0]]),ratVec(floatPoints[ef[1]]));if(!x){// Segments are parallel, should already be handled by t-junctions\ncontinue;}var idx=floatPoints.length;floatPoints.push([ratToFloat(x[0]),ratToFloat(x[1])]);ratPoints.push(x);junctions.push([e,idx],[f,idx]);}// Sort tjunctions\njunctions.sort(function(a,b){if(a[0]!==b[0]){return a[0]-b[0];}var u=ratPoints[a[1]];var v=ratPoints[b[1]];return ratCmp(u[0],v[0])||ratCmp(u[1],v[1]);});// Split edges along junctions\nfor(i=junctions.length-1;i>=0;--i){var junction=junctions[i];e=junction[0];var edge=edges[e];var s=edge[0];var t=edge[1];// Check if edge is not lexicographically sorted\nvar a=floatPoints[s];var b=floatPoints[t];if((a[0]-b[0]||a[1]-b[1])<0){var tmp=s;s=t;t=tmp;}// Split leading edge\nedge[0]=s;var last=edge[1]=junction[1];// If we are grouping edges by color, remember to track data\nvar color;if(useColor){color=edge[2];}// Split other edges\nwhile(i>0&&junctions[i-1][0]===e){var junction=junctions[--i];var next=junction[1];if(useColor){edges.push([last,next,color]);}else{edges.push([last,next]);}last=next;}// Add final edge\nif(useColor){edges.push([last,t,color]);}else{edges.push([last,t]);}}// Return constructed rational points\nreturn ratPoints;}// Merge overlapping points\nfunction dedupPoints(floatPoints,ratPoints,floatBounds){var numPoints=ratPoints.length;var uf=new UnionFind(numPoints);// Compute rational bounds\nvar bounds=[];for(var i=0;i<ratPoints.length;++i){var p=ratPoints[i];var xb=boundRat(p[0]);var yb=boundRat(p[1]);bounds.push([nextafter(xb[0],-Infinity),nextafter(yb[0],-Infinity),nextafter(xb[1],Infinity),nextafter(yb[1],Infinity)]);}// Link all points with over lapping boxes\nboxIntersect(bounds,function(i,j){uf.link(i,j);});// Do 1 pass over points to combine points in label sets\nvar noDupes=true;var labels=new Array(numPoints);for(var i=0;i<numPoints;++i){var j=uf.find(i);if(j!==i){// Clear no-dupes flag, zero out label\nnoDupes=false;// Make each point the top-left point from its cell\nfloatPoints[j]=[Math.min(floatPoints[i][0],floatPoints[j][0]),Math.min(floatPoints[i][1],floatPoints[j][1])];}}// If no duplicates, return null to signal termination\nif(noDupes){return null;}var ptr=0;for(var i=0;i<numPoints;++i){var j=uf.find(i);if(j===i){labels[i]=ptr;floatPoints[ptr++]=floatPoints[i];}else{labels[i]=-1;}}floatPoints.length=ptr;// Do a second pass to fix up missing labels\nfor(var i=0;i<numPoints;++i){if(labels[i]<0){labels[i]=labels[uf.find(i)];}}// Return resulting union-find data structure\nreturn labels;}function compareLex2(a,b){return a[0]-b[0]||a[1]-b[1];}function compareLex3(a,b){var d=a[0]-b[0]||a[1]-b[1];if(d){return d;}if(a[2]<b[2]){return-1;}else if(a[2]>b[2]){return 1;}return 0;}// Remove duplicate edge labels\nfunction dedupEdges(edges,labels,useColor){if(edges.length===0){return;}if(labels){for(var i=0;i<edges.length;++i){var e=edges[i];var a=labels[e[0]];var b=labels[e[1]];e[0]=Math.min(a,b);e[1]=Math.max(a,b);}}else{for(var i=0;i<edges.length;++i){var e=edges[i];var a=e[0];var b=e[1];e[0]=Math.min(a,b);e[1]=Math.max(a,b);}}if(useColor){edges.sort(compareLex3);}else{edges.sort(compareLex2);}var ptr=1;for(var i=1;i<edges.length;++i){var prev=edges[i-1];var next=edges[i];if(next[0]===prev[0]&&next[1]===prev[1]&&(!useColor||next[2]===prev[2])){continue;}edges[ptr++]=next;}edges.length=ptr;}function preRound(points,edges,useColor){var labels=dedupPoints(points,[],boundPoints(points));dedupEdges(edges,labels,useColor);return!!labels;}// Repeat until convergence\nfunction snapRound(points,edges,useColor){// 1. find edge crossings\nvar edgeBounds=boundEdges(points,edges);var crossings=getCrossings(points,edges,edgeBounds);// 2. find t-junctions\nvar vertBounds=boundPoints(points);var tjunctions=getTJunctions(points,edges,edgeBounds,vertBounds);// 3. cut edges, construct rational points\nvar ratPoints=cutEdges(points,edges,crossings,tjunctions,useColor);// 4. dedupe verts\nvar labels=dedupPoints(points,ratPoints,vertBounds);// 5. dedupe edges\ndedupEdges(edges,labels,useColor);// 6. check termination\nif(!labels){return crossings.length>0||tjunctions.length>0;}// More iterations necessary\nreturn true;}// Main loop, runs PSLG clean up until completion\nfunction cleanPSLG(points,edges,colors){// If using colors, augment edges with color data\nvar prevEdges;if(colors){prevEdges=edges;var augEdges=new Array(edges.length);for(var i=0;i<edges.length;++i){var e=edges[i];augEdges[i]=[e[0],e[1],colors[i]];}edges=augEdges;}// First round: remove duplicate edges and points\nvar modified=preRound(points,edges,!!colors);// Run snap rounding until convergence\nwhile(snapRound(points,edges,!!colors)){modified=true;}// Strip color tags\nif(!!colors&&modified){prevEdges.length=0;colors.length=0;for(var i=0;i<edges.length;++i){var e=edges[i];prevEdges.push([e[0],e[1]]);colors.push(e[2]);}}return modified;}},{\"./lib/rat-seg-intersect\":52,\"big-rat\":18,\"big-rat/cmp\":16,\"big-rat/to-float\":30,\"box-intersect\":34,\"nextafter\":194,\"rat-vec\":235,\"robust-segment-intersect\":248,\"union-find\":271}],52:[function(_dereq_,module,exports){'use strict';module.exports=solveIntersection;var ratMul=_dereq_('big-rat/mul');var ratDiv=_dereq_('big-rat/div');var ratSub=_dereq_('big-rat/sub');var ratSign=_dereq_('big-rat/sign');var rvSub=_dereq_('rat-vec/sub');var rvAdd=_dereq_('rat-vec/add');var rvMuls=_dereq_('rat-vec/muls');function ratPerp(a,b){return ratSub(ratMul(a[0],b[1]),ratMul(a[1],b[0]));}// Solve for intersection\n//  x = a + t (b-a)\n//  (x - c) ^ (d-c) = 0\n//  (t * (b-a) + (a-c) ) ^ (d-c) = 0\n//  t * (b-a)^(d-c) = (d-c)^(a-c)\n//  t = (d-c)^(a-c) / (b-a)^(d-c)\nfunction solveIntersection(a,b,c,d){var ba=rvSub(b,a);var dc=rvSub(d,c);var baXdc=ratPerp(ba,dc);if(ratSign(baXdc)===0){return null;}var ac=rvSub(a,c);var dcXac=ratPerp(dc,ac);var t=ratDiv(dcXac,baXdc);var s=rvMuls(ba,t);var r=rvAdd(a,s);return r;}},{\"big-rat/div\":17,\"big-rat/mul\":27,\"big-rat/sign\":28,\"big-rat/sub\":29,\"rat-vec/add\":234,\"rat-vec/muls\":236,\"rat-vec/sub\":237}],53:[function(_dereq_,module,exports){'use strict';module.exports={\"aliceblue\":[240,248,255],\"antiquewhite\":[250,235,215],\"aqua\":[0,255,255],\"aquamarine\":[127,255,212],\"azure\":[240,255,255],\"beige\":[245,245,220],\"bisque\":[255,228,196],\"black\":[0,0,0],\"blanchedalmond\":[255,235,205],\"blue\":[0,0,255],\"blueviolet\":[138,43,226],\"brown\":[165,42,42],\"burlywood\":[222,184,135],\"cadetblue\":[95,158,160],\"chartreuse\":[127,255,0],\"chocolate\":[210,105,30],\"coral\":[255,127,80],\"cornflowerblue\":[100,149,237],\"cornsilk\":[255,248,220],\"crimson\":[220,20,60],\"cyan\":[0,255,255],\"darkblue\":[0,0,139],\"darkcyan\":[0,139,139],\"darkgoldenrod\":[184,134,11],\"darkgray\":[169,169,169],\"darkgreen\":[0,100,0],\"darkgrey\":[169,169,169],\"darkkhaki\":[189,183,107],\"darkmagenta\":[139,0,139],\"darkolivegreen\":[85,107,47],\"darkorange\":[255,140,0],\"darkorchid\":[153,50,204],\"darkred\":[139,0,0],\"darksalmon\":[233,150,122],\"darkseagreen\":[143,188,143],\"darkslateblue\":[72,61,139],\"darkslategray\":[47,79,79],\"darkslategrey\":[47,79,79],\"darkturquoise\":[0,206,209],\"darkviolet\":[148,0,211],\"deeppink\":[255,20,147],\"deepskyblue\":[0,191,255],\"dimgray\":[105,105,105],\"dimgrey\":[105,105,105],\"dodgerblue\":[30,144,255],\"firebrick\":[178,34,34],\"floralwhite\":[255,250,240],\"forestgreen\":[34,139,34],\"fuchsia\":[255,0,255],\"gainsboro\":[220,220,220],\"ghostwhite\":[248,248,255],\"gold\":[255,215,0],\"goldenrod\":[218,165,32],\"gray\":[128,128,128],\"green\":[0,128,0],\"greenyellow\":[173,255,47],\"grey\":[128,128,128],\"honeydew\":[240,255,240],\"hotpink\":[255,105,180],\"indianred\":[205,92,92],\"indigo\":[75,0,130],\"ivory\":[255,255,240],\"khaki\":[240,230,140],\"lavender\":[230,230,250],\"lavenderblush\":[255,240,245],\"lawngreen\":[124,252,0],\"lemonchiffon\":[255,250,205],\"lightblue\":[173,216,230],\"lightcoral\":[240,128,128],\"lightcyan\":[224,255,255],\"lightgoldenrodyellow\":[250,250,210],\"lightgray\":[211,211,211],\"lightgreen\":[144,238,144],\"lightgrey\":[211,211,211],\"lightpink\":[255,182,193],\"lightsalmon\":[255,160,122],\"lightseagreen\":[32,178,170],\"lightskyblue\":[135,206,250],\"lightslategray\":[119,136,153],\"lightslategrey\":[119,136,153],\"lightsteelblue\":[176,196,222],\"lightyellow\":[255,255,224],\"lime\":[0,255,0],\"limegreen\":[50,205,50],\"linen\":[250,240,230],\"magenta\":[255,0,255],\"maroon\":[128,0,0],\"mediumaquamarine\":[102,205,170],\"mediumblue\":[0,0,205],\"mediumorchid\":[186,85,211],\"mediumpurple\":[147,112,219],\"mediumseagreen\":[60,179,113],\"mediumslateblue\":[123,104,238],\"mediumspringgreen\":[0,250,154],\"mediumturquoise\":[72,209,204],\"mediumvioletred\":[199,21,133],\"midnightblue\":[25,25,112],\"mintcream\":[245,255,250],\"mistyrose\":[255,228,225],\"moccasin\":[255,228,181],\"navajowhite\":[255,222,173],\"navy\":[0,0,128],\"oldlace\":[253,245,230],\"olive\":[128,128,0],\"olivedrab\":[107,142,35],\"orange\":[255,165,0],\"orangered\":[255,69,0],\"orchid\":[218,112,214],\"palegoldenrod\":[238,232,170],\"palegreen\":[152,251,152],\"paleturquoise\":[175,238,238],\"palevioletred\":[219,112,147],\"papayawhip\":[255,239,213],\"peachpuff\":[255,218,185],\"peru\":[205,133,63],\"pink\":[255,192,203],\"plum\":[221,160,221],\"powderblue\":[176,224,230],\"purple\":[128,0,128],\"rebeccapurple\":[102,51,153],\"red\":[255,0,0],\"rosybrown\":[188,143,143],\"royalblue\":[65,105,225],\"saddlebrown\":[139,69,19],\"salmon\":[250,128,114],\"sandybrown\":[244,164,96],\"seagreen\":[46,139,87],\"seashell\":[255,245,238],\"sienna\":[160,82,45],\"silver\":[192,192,192],\"skyblue\":[135,206,235],\"slateblue\":[106,90,205],\"slategray\":[112,128,144],\"slategrey\":[112,128,144],\"snow\":[255,250,250],\"springgreen\":[0,255,127],\"steelblue\":[70,130,180],\"tan\":[210,180,140],\"teal\":[0,128,128],\"thistle\":[216,191,216],\"tomato\":[255,99,71],\"turquoise\":[64,224,208],\"violet\":[238,130,238],\"wheat\":[245,222,179],\"white\":[255,255,255],\"whitesmoke\":[245,245,245],\"yellow\":[255,255,0],\"yellowgreen\":[154,205,50]};},{}],54:[function(_dereq_,module,exports){/** @module  color-normalize */'use strict';var rgba=_dereq_('color-rgba');var clamp=_dereq_('clamp');var dtype=_dereq_('dtype');module.exports=function normalize(color,type){if(type==='float'||!type)type='array';if(type==='uint')type='uint8';if(type==='uint_clamped')type='uint8_clamped';var Ctor=dtype(type);var output=new Ctor(4);var normalize=type!=='uint8'&&type!=='uint8_clamped';// attempt to parse non-array arguments\nif(!color.length||typeof color==='string'){color=rgba(color);color[0]/=255;color[1]/=255;color[2]/=255;}// 0, 1 are possible contradictory values for Arrays:\n// [1,1,1] input gives [1,1,1] output instead of [1/255,1/255,1/255], which may be collision if input is meant to be uint.\n// converting [1,1,1] to [1/255,1/255,1/255] in case of float input gives larger mistake since [1,1,1] float is frequent edge value, whereas [0,1,1], [1,1,1] etc. uint inputs are relatively rare\nif(isInt(color)){output[0]=color[0];output[1]=color[1];output[2]=color[2];output[3]=color[3]!=null?color[3]:255;if(normalize){output[0]/=255;output[1]/=255;output[2]/=255;output[3]/=255;}return output;}if(!normalize){output[0]=clamp(Math.floor(color[0]*255),0,255);output[1]=clamp(Math.floor(color[1]*255),0,255);output[2]=clamp(Math.floor(color[2]*255),0,255);output[3]=color[3]==null?255:clamp(Math.floor(color[3]*255),0,255);}else{output[0]=color[0];output[1]=color[1];output[2]=color[2];output[3]=color[3]!=null?color[3]:1;}return output;};function isInt(color){if(color instanceof Uint8Array||color instanceof Uint8ClampedArray)return true;if(Array.isArray(color)&&(color[0]>1||color[0]===0)&&(color[1]>1||color[1]===0)&&(color[2]>1||color[2]===0)&&(!color[3]||color[3]>1))return true;return false;}},{\"clamp\":50,\"color-rgba\":56,\"dtype\":75}],55:[function(_dereq_,module,exports){(function(global){/**\r\n * @module color-parse\r\n */'use strict';var names=_dereq_('color-name');var isObject=_dereq_('is-plain-obj');var defined=_dereq_('defined');module.exports=parse;/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */ //FIXME: use external hue detector\nvar baseHues={red:0,orange:60,yellow:120,green:180,blue:240,purple:300/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */};function parse(cstr){var m,parts=[],alpha=1,space;if(typeof cstr==='string'){//keyword\nif(names[cstr]){parts=names[cstr].slice();space='rgb';}//reserved words\nelse if(cstr==='transparent'){alpha=0;space='rgb';parts=[0,0,0];}//hex\nelse if(/^#[A-Fa-f0-9]+$/.test(cstr)){var base=cstr.slice(1);var size=base.length;var isShort=size<=4;alpha=1;if(isShort){parts=[parseInt(base[0]+base[0],16),parseInt(base[1]+base[1],16),parseInt(base[2]+base[2],16)];if(size===4){alpha=parseInt(base[3]+base[3],16)/255;}}else{parts=[parseInt(base[0]+base[1],16),parseInt(base[2]+base[3],16),parseInt(base[4]+base[5],16)];if(size===8){alpha=parseInt(base[6]+base[7],16)/255;}}if(!parts[0])parts[0]=0;if(!parts[1])parts[1]=0;if(!parts[2])parts[2]=0;space='rgb';}//color space\nelse if(m=/^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)){var name=m[1];var base=name.replace(/a$/,'');space=base;var size=base==='cmyk'?4:base==='gray'?1:3;parts=m[2].trim().split(/\\s*,\\s*/).map(function(x,i){//<percentage>\nif(/%$/.test(x)){//alpha\nif(i===size)return parseFloat(x)/100;//rgb\nif(base==='rgb')return parseFloat(x)*255/100;return parseFloat(x);}//hue\nelse if(base[i]==='h'){//<deg>\nif(/deg$/.test(x)){return parseFloat(x);}//<base-hue>\nelse if(baseHues[x]!==undefined){return baseHues[x];}}return parseFloat(x);});if(name===base)parts.push(1);alpha=parts[size]===undefined?1:parts[size];parts=parts.slice(0,size);}//named channels case\nelse if(cstr.length>10&&/[0-9](?:\\s|\\/)/.test(cstr)){parts=cstr.match(/([0-9]+)/g).map(function(value){return parseFloat(value);});space=cstr.match(/([a-z])/ig).join('').toLowerCase();}}//numeric case\nelse if(!isNaN(cstr)){space='rgb';parts=[cstr>>>16,(cstr&0x00ff00)>>>8,cstr&0x0000ff];}//object case - detects css cases of rgb and hsl\nelse if(isObject(cstr)){var r=defined(cstr.r,cstr.red,cstr.R,null);if(r!==null){space='rgb';parts=[r,defined(cstr.g,cstr.green,cstr.G),defined(cstr.b,cstr.blue,cstr.B)];}else{space='hsl';parts=[defined(cstr.h,cstr.hue,cstr.H),defined(cstr.s,cstr.saturation,cstr.S),defined(cstr.l,cstr.lightness,cstr.L,cstr.b,cstr.brightness)];}alpha=defined(cstr.a,cstr.alpha,cstr.opacity,1);if(cstr.opacity!=null)alpha/=100;}//array\nelse if(Array.isArray(cstr)||global.ArrayBuffer&&ArrayBuffer.isView&&ArrayBuffer.isView(cstr)){parts=[cstr[0],cstr[1],cstr[2]];space='rgb';alpha=cstr.length===4?cstr[3]:1;}return{space:space,values:parts,alpha:alpha};}}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});},{\"color-name\":53,\"defined\":72,\"is-plain-obj\":173}],56:[function(_dereq_,module,exports){/** @module  color-rgba */'use strict';var parse=_dereq_('color-parse');var hsl=_dereq_('color-space/hsl');var clamp=_dereq_('clamp');module.exports=function rgba(color){var values,i,l;//attempt to parse non-array arguments\nvar parsed=parse(color);if(!parsed.space)return[];values=Array(3);values[0]=clamp(parsed.values[0],0,255);values[1]=clamp(parsed.values[1],0,255);values[2]=clamp(parsed.values[2],0,255);if(parsed.space[0]==='h'){values=hsl.rgb(values);}values.push(clamp(parsed.alpha,0,1));return values;};},{\"clamp\":50,\"color-parse\":55,\"color-space/hsl\":57}],57:[function(_dereq_,module,exports){/**\n * @module color-space/hsl\n */'use strict';var rgb=_dereq_('./rgb');module.exports={name:'hsl',min:[0,0,0],max:[360,100,100],channel:['hue','saturation','lightness'],alias:['HSL'],rgb:function rgb(hsl){var h=hsl[0]/360,s=hsl[1]/100,l=hsl[2]/100,t1,t2,t3,rgb,val;if(s===0){val=l*255;return[val,val,val];}if(l<0.5){t2=l*(1+s);}else{t2=l+s-l*s;}t1=2*l-t2;rgb=[0,0,0];for(var i=0;i<3;i++){t3=h+1/3*-(i-1);if(t3<0){t3++;}else if(t3>1){t3--;}if(6*t3<1){val=t1+(t2-t1)*6*t3;}else if(2*t3<1){val=t2;}else if(3*t3<2){val=t1+(t2-t1)*(2/3-t3)*6;}else{val=t1;}rgb[i]=val*255;}return rgb;}};//extend rgb\nrgb.hsl=function(rgb){var r=rgb[0]/255,g=rgb[1]/255,b=rgb[2]/255,min=Math.min(r,g,b),max=Math.max(r,g,b),delta=max-min,h,s,l;if(max===min){h=0;}else if(r===max){h=(g-b)/delta;}else if(g===max){h=2+(b-r)/delta;}else if(b===max){h=4+(r-g)/delta;}h=Math.min(h*60,360);if(h<0){h+=360;}l=(min+max)/2;if(max===min){s=0;}else if(l<=0.5){s=delta/(max+min);}else{s=delta/(2-max-min);}return[h,s*100,l*100];};},{\"./rgb\":58}],58:[function(_dereq_,module,exports){/**\n * RGB space.\n *\n * @module  color-space/rgb\n */'use strict';module.exports={name:'rgb',min:[0,0,0],max:[255,255,255],channel:['red','green','blue'],alias:['RGB']};},{}],59:[function(_dereq_,module,exports){var _module$exports;module.exports=(_module$exports={\"jet\":[{\"index\":0,\"rgb\":[0,0,131]},{\"index\":0.125,\"rgb\":[0,60,170]},{\"index\":0.375,\"rgb\":[5,255,255]},{\"index\":0.625,\"rgb\":[255,255,0]},{\"index\":0.875,\"rgb\":[250,0,0]},{\"index\":1,\"rgb\":[128,0,0]}],\"hsv\":[{\"index\":0,\"rgb\":[255,0,0]},{\"index\":0.169,\"rgb\":[253,255,2]},{\"index\":0.173,\"rgb\":[247,255,2]},{\"index\":0.337,\"rgb\":[0,252,4]},{\"index\":0.341,\"rgb\":[0,252,10]},{\"index\":0.506,\"rgb\":[1,249,255]},{\"index\":0.671,\"rgb\":[2,0,253]},{\"index\":0.675,\"rgb\":[8,0,253]},{\"index\":0.839,\"rgb\":[255,0,251]},{\"index\":0.843,\"rgb\":[255,0,245]},{\"index\":1,\"rgb\":[255,0,6]}],\"hot\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.3,\"rgb\":[230,0,0]},{\"index\":0.6,\"rgb\":[255,210,0]},{\"index\":1,\"rgb\":[255,255,255]}],\"cool\":[{\"index\":0,\"rgb\":[0,255,255]},{\"index\":1,\"rgb\":[255,0,255]}],\"spring\":[{\"index\":0,\"rgb\":[255,0,255]},{\"index\":1,\"rgb\":[255,255,0]}],\"summer\":[{\"index\":0,\"rgb\":[0,128,102]},{\"index\":1,\"rgb\":[255,255,102]}],\"autumn\":[{\"index\":0,\"rgb\":[255,0,0]},{\"index\":1,\"rgb\":[255,255,0]}],\"winter\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":1,\"rgb\":[0,255,128]}],\"bone\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.376,\"rgb\":[84,84,116]},{\"index\":0.753,\"rgb\":[169,200,200]},{\"index\":1,\"rgb\":[255,255,255]}],\"copper\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.804,\"rgb\":[255,160,102]},{\"index\":1,\"rgb\":[255,199,127]}],\"greys\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":1,\"rgb\":[255,255,255]}],\"yignbu\":[{\"index\":0,\"rgb\":[8,29,88]},{\"index\":0.125,\"rgb\":[37,52,148]},{\"index\":0.25,\"rgb\":[34,94,168]},{\"index\":0.375,\"rgb\":[29,145,192]},{\"index\":0.5,\"rgb\":[65,182,196]},{\"index\":0.625,\"rgb\":[127,205,187]},{\"index\":0.75,\"rgb\":[199,233,180]},{\"index\":0.875,\"rgb\":[237,248,217]},{\"index\":1,\"rgb\":[255,255,217]}],\"greens\":[{\"index\":0,\"rgb\":[0,68,27]},{\"index\":0.125,\"rgb\":[0,109,44]},{\"index\":0.25,\"rgb\":[35,139,69]},{\"index\":0.375,\"rgb\":[65,171,93]},{\"index\":0.5,\"rgb\":[116,196,118]},{\"index\":0.625,\"rgb\":[161,217,155]},{\"index\":0.75,\"rgb\":[199,233,192]},{\"index\":0.875,\"rgb\":[229,245,224]},{\"index\":1,\"rgb\":[247,252,245]}],\"yiorrd\":[{\"index\":0,\"rgb\":[128,0,38]},{\"index\":0.125,\"rgb\":[189,0,38]},{\"index\":0.25,\"rgb\":[227,26,28]},{\"index\":0.375,\"rgb\":[252,78,42]},{\"index\":0.5,\"rgb\":[253,141,60]},{\"index\":0.625,\"rgb\":[254,178,76]},{\"index\":0.75,\"rgb\":[254,217,118]},{\"index\":0.875,\"rgb\":[255,237,160]},{\"index\":1,\"rgb\":[255,255,204]}],\"bluered\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":1,\"rgb\":[255,0,0]}],\"rdbu\":[{\"index\":0,\"rgb\":[5,10,172]},{\"index\":0.35,\"rgb\":[106,137,247]},{\"index\":0.5,\"rgb\":[190,190,190]},{\"index\":0.6,\"rgb\":[220,170,132]},{\"index\":0.7,\"rgb\":[230,145,90]},{\"index\":1,\"rgb\":[178,10,28]}],\"picnic\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":0.1,\"rgb\":[51,153,255]},{\"index\":0.2,\"rgb\":[102,204,255]},{\"index\":0.3,\"rgb\":[153,204,255]},{\"index\":0.4,\"rgb\":[204,204,255]},{\"index\":0.5,\"rgb\":[255,255,255]},{\"index\":0.6,\"rgb\":[255,204,255]},{\"index\":0.7,\"rgb\":[255,153,255]},{\"index\":0.8,\"rgb\":[255,102,204]},{\"index\":0.9,\"rgb\":[255,102,102]},{\"index\":1,\"rgb\":[255,0,0]}],\"rainbow\":[{\"index\":0,\"rgb\":[150,0,90]},{\"index\":0.125,\"rgb\":[0,0,200]},{\"index\":0.25,\"rgb\":[0,25,255]},{\"index\":0.375,\"rgb\":[0,152,255]},{\"index\":0.5,\"rgb\":[44,255,150]},{\"index\":0.625,\"rgb\":[151,255,0]},{\"index\":0.75,\"rgb\":[255,234,0]},{\"index\":0.875,\"rgb\":[255,111,0]},{\"index\":1,\"rgb\":[255,0,0]}],\"portland\":[{\"index\":0,\"rgb\":[12,51,131]},{\"index\":0.25,\"rgb\":[10,136,186]},{\"index\":0.5,\"rgb\":[242,211,56]},{\"index\":0.75,\"rgb\":[242,143,56]},{\"index\":1,\"rgb\":[217,30,30]}],\"blackbody\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.2,\"rgb\":[230,0,0]},{\"index\":0.4,\"rgb\":[230,210,0]},{\"index\":0.7,\"rgb\":[255,255,255]},{\"index\":1,\"rgb\":[160,200,255]}],\"earth\":[{\"index\":0,\"rgb\":[0,0,130]},{\"index\":0.1,\"rgb\":[0,180,180]},{\"index\":0.2,\"rgb\":[40,210,40]},{\"index\":0.4,\"rgb\":[230,230,50]},{\"index\":0.6,\"rgb\":[120,70,20]},{\"index\":1,\"rgb\":[255,255,255]}],\"electric\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.15,\"rgb\":[30,0,100]},{\"index\":0.4,\"rgb\":[120,0,100]},{\"index\":0.6,\"rgb\":[160,90,0]},{\"index\":0.8,\"rgb\":[230,200,0]},{\"index\":1,\"rgb\":[255,250,220]}],\"alpha\":[{\"index\":0,\"rgb\":[255,255,255,0]},{\"index\":1,\"rgb\":[255,255,255,1]}],\"viridis\":[{\"index\":0,\"rgb\":[68,1,84]},{\"index\":0.13,\"rgb\":[71,44,122]},{\"index\":0.25,\"rgb\":[59,81,139]},{\"index\":0.38,\"rgb\":[44,113,142]},{\"index\":0.5,\"rgb\":[33,144,141]},{\"index\":0.63,\"rgb\":[39,173,129]},{\"index\":0.75,\"rgb\":[92,200,99]},{\"index\":0.88,\"rgb\":[170,220,50]},{\"index\":1,\"rgb\":[253,231,37]}],\"inferno\":[{\"index\":0,\"rgb\":[0,0,4]},{\"index\":0.13,\"rgb\":[31,12,72]},{\"index\":0.25,\"rgb\":[85,15,109]},{\"index\":0.38,\"rgb\":[136,34,106]},{\"index\":0.5,\"rgb\":[186,54,85]},{\"index\":0.63,\"rgb\":[227,89,51]},{\"index\":0.75,\"rgb\":[249,140,10]},{\"index\":0.88,\"rgb\":[249,201,50]},{\"index\":1,\"rgb\":[252,255,164]}],\"magma\":[{\"index\":0,\"rgb\":[0,0,4]},{\"index\":0.13,\"rgb\":[28,16,68]},{\"index\":0.25,\"rgb\":[79,18,123]},{\"index\":0.38,\"rgb\":[129,37,129]},{\"index\":0.5,\"rgb\":[181,54,122]},{\"index\":0.63,\"rgb\":[229,80,100]},{\"index\":0.75,\"rgb\":[251,135,97]},{\"index\":0.88,\"rgb\":[254,194,135]},{\"index\":1,\"rgb\":[252,253,191]}],\"plasma\":[{\"index\":0,\"rgb\":[13,8,135]},{\"index\":0.13,\"rgb\":[75,3,161]},{\"index\":0.25,\"rgb\":[125,3,168]},{\"index\":0.38,\"rgb\":[168,34,150]},{\"index\":0.5,\"rgb\":[203,70,121]},{\"index\":0.63,\"rgb\":[229,107,93]},{\"index\":0.75,\"rgb\":[248,148,65]},{\"index\":0.88,\"rgb\":[253,195,40]},{\"index\":1,\"rgb\":[240,249,33]}],\"warm\":[{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.13,\"rgb\":[172,0,187]},{\"index\":0.25,\"rgb\":[219,0,170]},{\"index\":0.38,\"rgb\":[255,0,130]},{\"index\":0.5,\"rgb\":[255,63,74]},{\"index\":0.63,\"rgb\":[255,123,0]},{\"index\":0.75,\"rgb\":[234,176,0]},{\"index\":0.88,\"rgb\":[190,228,0]},{\"index\":1,\"rgb\":[147,255,0]}]},_defineProperty(_module$exports,\"cool\",[{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.13,\"rgb\":[116,0,218]},{\"index\":0.25,\"rgb\":[98,74,237]},{\"index\":0.38,\"rgb\":[68,146,231]},{\"index\":0.5,\"rgb\":[0,204,197]},{\"index\":0.63,\"rgb\":[0,247,146]},{\"index\":0.75,\"rgb\":[0,255,88]},{\"index\":0.88,\"rgb\":[40,255,8]},{\"index\":1,\"rgb\":[147,255,0]}]),_defineProperty(_module$exports,\"rainbow-soft\",[{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.1,\"rgb\":[199,0,180]},{\"index\":0.2,\"rgb\":[255,0,121]},{\"index\":0.3,\"rgb\":[255,108,0]},{\"index\":0.4,\"rgb\":[222,194,0]},{\"index\":0.5,\"rgb\":[150,255,0]},{\"index\":0.6,\"rgb\":[0,255,55]},{\"index\":0.7,\"rgb\":[0,246,150]},{\"index\":0.8,\"rgb\":[50,167,222]},{\"index\":0.9,\"rgb\":[103,51,235]},{\"index\":1,\"rgb\":[124,0,186]}]),_defineProperty(_module$exports,\"bathymetry\",[{\"index\":0,\"rgb\":[40,26,44]},{\"index\":0.13,\"rgb\":[59,49,90]},{\"index\":0.25,\"rgb\":[64,76,139]},{\"index\":0.38,\"rgb\":[63,110,151]},{\"index\":0.5,\"rgb\":[72,142,158]},{\"index\":0.63,\"rgb\":[85,174,163]},{\"index\":0.75,\"rgb\":[120,206,163]},{\"index\":0.88,\"rgb\":[187,230,172]},{\"index\":1,\"rgb\":[253,254,204]}]),_defineProperty(_module$exports,\"cdom\",[{\"index\":0,\"rgb\":[47,15,62]},{\"index\":0.13,\"rgb\":[87,23,86]},{\"index\":0.25,\"rgb\":[130,28,99]},{\"index\":0.38,\"rgb\":[171,41,96]},{\"index\":0.5,\"rgb\":[206,67,86]},{\"index\":0.63,\"rgb\":[230,106,84]},{\"index\":0.75,\"rgb\":[242,149,103]},{\"index\":0.88,\"rgb\":[249,193,135]},{\"index\":1,\"rgb\":[254,237,176]}]),_defineProperty(_module$exports,\"chlorophyll\",[{\"index\":0,\"rgb\":[18,36,20]},{\"index\":0.13,\"rgb\":[25,63,41]},{\"index\":0.25,\"rgb\":[24,91,59]},{\"index\":0.38,\"rgb\":[13,119,72]},{\"index\":0.5,\"rgb\":[18,148,80]},{\"index\":0.63,\"rgb\":[80,173,89]},{\"index\":0.75,\"rgb\":[132,196,122]},{\"index\":0.88,\"rgb\":[175,221,162]},{\"index\":1,\"rgb\":[215,249,208]}]),_defineProperty(_module$exports,\"density\",[{\"index\":0,\"rgb\":[54,14,36]},{\"index\":0.13,\"rgb\":[89,23,80]},{\"index\":0.25,\"rgb\":[110,45,132]},{\"index\":0.38,\"rgb\":[120,77,178]},{\"index\":0.5,\"rgb\":[120,113,213]},{\"index\":0.63,\"rgb\":[115,151,228]},{\"index\":0.75,\"rgb\":[134,185,227]},{\"index\":0.88,\"rgb\":[177,214,227]},{\"index\":1,\"rgb\":[230,241,241]}]),_defineProperty(_module$exports,\"freesurface-blue\",[{\"index\":0,\"rgb\":[30,4,110]},{\"index\":0.13,\"rgb\":[47,14,176]},{\"index\":0.25,\"rgb\":[41,45,236]},{\"index\":0.38,\"rgb\":[25,99,212]},{\"index\":0.5,\"rgb\":[68,131,200]},{\"index\":0.63,\"rgb\":[114,156,197]},{\"index\":0.75,\"rgb\":[157,181,203]},{\"index\":0.88,\"rgb\":[200,208,216]},{\"index\":1,\"rgb\":[241,237,236]}]),_defineProperty(_module$exports,\"freesurface-red\",[{\"index\":0,\"rgb\":[60,9,18]},{\"index\":0.13,\"rgb\":[100,17,27]},{\"index\":0.25,\"rgb\":[142,20,29]},{\"index\":0.38,\"rgb\":[177,43,27]},{\"index\":0.5,\"rgb\":[192,87,63]},{\"index\":0.63,\"rgb\":[205,125,105]},{\"index\":0.75,\"rgb\":[216,162,148]},{\"index\":0.88,\"rgb\":[227,199,193]},{\"index\":1,\"rgb\":[241,237,236]}]),_defineProperty(_module$exports,\"oxygen\",[{\"index\":0,\"rgb\":[64,5,5]},{\"index\":0.13,\"rgb\":[106,6,15]},{\"index\":0.25,\"rgb\":[144,26,7]},{\"index\":0.38,\"rgb\":[168,64,3]},{\"index\":0.5,\"rgb\":[188,100,4]},{\"index\":0.63,\"rgb\":[206,136,11]},{\"index\":0.75,\"rgb\":[220,174,25]},{\"index\":0.88,\"rgb\":[231,215,44]},{\"index\":1,\"rgb\":[248,254,105]}]),_defineProperty(_module$exports,\"par\",[{\"index\":0,\"rgb\":[51,20,24]},{\"index\":0.13,\"rgb\":[90,32,35]},{\"index\":0.25,\"rgb\":[129,44,34]},{\"index\":0.38,\"rgb\":[159,68,25]},{\"index\":0.5,\"rgb\":[182,99,19]},{\"index\":0.63,\"rgb\":[199,134,22]},{\"index\":0.75,\"rgb\":[212,171,35]},{\"index\":0.88,\"rgb\":[221,210,54]},{\"index\":1,\"rgb\":[225,253,75]}]),_defineProperty(_module$exports,\"phase\",[{\"index\":0,\"rgb\":[145,105,18]},{\"index\":0.13,\"rgb\":[184,71,38]},{\"index\":0.25,\"rgb\":[186,58,115]},{\"index\":0.38,\"rgb\":[160,71,185]},{\"index\":0.5,\"rgb\":[110,97,218]},{\"index\":0.63,\"rgb\":[50,123,164]},{\"index\":0.75,\"rgb\":[31,131,110]},{\"index\":0.88,\"rgb\":[77,129,34]},{\"index\":1,\"rgb\":[145,105,18]}]),_defineProperty(_module$exports,\"salinity\",[{\"index\":0,\"rgb\":[42,24,108]},{\"index\":0.13,\"rgb\":[33,50,162]},{\"index\":0.25,\"rgb\":[15,90,145]},{\"index\":0.38,\"rgb\":[40,118,137]},{\"index\":0.5,\"rgb\":[59,146,135]},{\"index\":0.63,\"rgb\":[79,175,126]},{\"index\":0.75,\"rgb\":[120,203,104]},{\"index\":0.88,\"rgb\":[193,221,100]},{\"index\":1,\"rgb\":[253,239,154]}]),_defineProperty(_module$exports,\"temperature\",[{\"index\":0,\"rgb\":[4,35,51]},{\"index\":0.13,\"rgb\":[23,51,122]},{\"index\":0.25,\"rgb\":[85,59,157]},{\"index\":0.38,\"rgb\":[129,79,143]},{\"index\":0.5,\"rgb\":[175,95,130]},{\"index\":0.63,\"rgb\":[222,112,101]},{\"index\":0.75,\"rgb\":[249,146,66]},{\"index\":0.88,\"rgb\":[249,196,65]},{\"index\":1,\"rgb\":[232,250,91]}]),_defineProperty(_module$exports,\"turbidity\",[{\"index\":0,\"rgb\":[34,31,27]},{\"index\":0.13,\"rgb\":[65,50,41]},{\"index\":0.25,\"rgb\":[98,69,52]},{\"index\":0.38,\"rgb\":[131,89,57]},{\"index\":0.5,\"rgb\":[161,112,59]},{\"index\":0.63,\"rgb\":[185,140,66]},{\"index\":0.75,\"rgb\":[202,174,88]},{\"index\":0.88,\"rgb\":[216,209,126]},{\"index\":1,\"rgb\":[233,246,171]}]),_defineProperty(_module$exports,\"velocity-blue\",[{\"index\":0,\"rgb\":[17,32,64]},{\"index\":0.13,\"rgb\":[35,52,116]},{\"index\":0.25,\"rgb\":[29,81,156]},{\"index\":0.38,\"rgb\":[31,113,162]},{\"index\":0.5,\"rgb\":[50,144,169]},{\"index\":0.63,\"rgb\":[87,173,176]},{\"index\":0.75,\"rgb\":[149,196,189]},{\"index\":0.88,\"rgb\":[203,221,211]},{\"index\":1,\"rgb\":[254,251,230]}]),_defineProperty(_module$exports,\"velocity-green\",[{\"index\":0,\"rgb\":[23,35,19]},{\"index\":0.13,\"rgb\":[24,64,38]},{\"index\":0.25,\"rgb\":[11,95,45]},{\"index\":0.38,\"rgb\":[39,123,35]},{\"index\":0.5,\"rgb\":[95,146,12]},{\"index\":0.63,\"rgb\":[152,165,18]},{\"index\":0.75,\"rgb\":[201,186,69]},{\"index\":0.88,\"rgb\":[233,216,137]},{\"index\":1,\"rgb\":[255,253,205]}]),_defineProperty(_module$exports,\"cubehelix\",[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.07,\"rgb\":[22,5,59]},{\"index\":0.13,\"rgb\":[60,4,105]},{\"index\":0.2,\"rgb\":[109,1,135]},{\"index\":0.27,\"rgb\":[161,0,147]},{\"index\":0.33,\"rgb\":[210,2,142]},{\"index\":0.4,\"rgb\":[251,11,123]},{\"index\":0.47,\"rgb\":[255,29,97]},{\"index\":0.53,\"rgb\":[255,54,69]},{\"index\":0.6,\"rgb\":[255,85,46]},{\"index\":0.67,\"rgb\":[255,120,34]},{\"index\":0.73,\"rgb\":[255,157,37]},{\"index\":0.8,\"rgb\":[241,191,57]},{\"index\":0.87,\"rgb\":[224,220,93]},{\"index\":0.93,\"rgb\":[218,241,142]},{\"index\":1,\"rgb\":[227,253,198]}]),_module$exports);},{}],60:[function(_dereq_,module,exports){/*\n * Ben Postlethwaite\n * January 2013\n * License MIT\n */'use strict';var colorScale=_dereq_('./colorScale');var lerp=_dereq_('lerp');module.exports=createColormap;function createColormap(spec){/*\n     * Default Options\n     */var indicies,rgba,fromrgba,torgba,nsteps,cmap,colormap,format,nshades,colors,alpha,index,i,r=[],g=[],b=[],a=[];if(!spec)spec={};nshades=(spec.nshades||72)-1;format=spec.format||'hex';colormap=spec.colormap;if(!colormap)colormap='jet';if(typeof colormap==='string'){colormap=colormap.toLowerCase();if(!colorScale[colormap]){throw Error(colormap+' not a supported colorscale');}cmap=colorScale[colormap];}else if(Array.isArray(colormap)){cmap=colormap.slice();}else{throw Error('unsupported colormap option',colormap);}if(cmap.length>nshades){throw new Error(colormap+' map requires nshades to be at least size '+cmap.length);}if(!Array.isArray(spec.alpha)){if(typeof spec.alpha==='number'){alpha=[spec.alpha,spec.alpha];}else{alpha=[1,1];}}else if(spec.alpha.length!==2){alpha=[1,1];}else{alpha=spec.alpha.slice();}// map index points from 0..1 to 0..n-1\nindicies=cmap.map(function(c){return Math.round(c.index*nshades);});// Add alpha channel to the map\nalpha[0]=Math.min(Math.max(alpha[0],0),1);alpha[1]=Math.min(Math.max(alpha[1],0),1);var steps=cmap.map(function(c,i){var index=cmap[i].index;var rgba=cmap[i].rgb.slice();// if user supplies their own map use it\nif(rgba.length===4&&rgba[3]>=0&&rgba[3]<=1){return rgba;}rgba[3]=alpha[0]+(alpha[1]-alpha[0])*index;return rgba;});/*\n     * map increasing linear values between indicies to\n     * linear steps in colorvalues\n     */var colors=[];for(i=0;i<indicies.length-1;++i){nsteps=indicies[i+1]-indicies[i];fromrgba=steps[i];torgba=steps[i+1];for(var j=0;j<nsteps;j++){var amt=j/nsteps;colors.push([Math.round(lerp(fromrgba[0],torgba[0],amt)),Math.round(lerp(fromrgba[1],torgba[1],amt)),Math.round(lerp(fromrgba[2],torgba[2],amt)),lerp(fromrgba[3],torgba[3],amt)]);}}//add 1 step as last value\ncolors.push(cmap[cmap.length-1].rgb.concat(alpha[1]));if(format==='hex')colors=colors.map(rgb2hex);else if(format==='rgbaString')colors=colors.map(rgbaStr);else if(format==='float')colors=colors.map(rgb2float);return colors;};function rgb2float(rgba){return[rgba[0]/255,rgba[1]/255,rgba[2]/255,rgba[3]];}function rgb2hex(rgba){var dig,hex='#';for(var i=0;i<3;++i){dig=rgba[i];dig=dig.toString(16);hex+=('00'+dig).substr(dig.length);}return hex;}function rgbaStr(rgba){return'rgba('+rgba.join(',')+')';}},{\"./colorScale\":59,\"lerp\":176}],61:[function(_dereq_,module,exports){\"use strict\";module.exports=compareAngle;var orient=_dereq_(\"robust-orientation\");var sgn=_dereq_(\"signum\");var twoSum=_dereq_(\"two-sum\");var robustProduct=_dereq_(\"robust-product\");var robustSum=_dereq_(\"robust-sum\");function testInterior(a,b,c){var x0=twoSum(a[0],-b[0]);var y0=twoSum(a[1],-b[1]);var x1=twoSum(c[0],-b[0]);var y1=twoSum(c[1],-b[1]);var d=robustSum(robustProduct(x0,x1),robustProduct(y0,y1));return d[d.length-1]>=0;}function compareAngle(a,b,c,d){var bcd=orient(b,c,d);if(bcd===0){//Handle degenerate cases\nvar sabc=sgn(orient(a,b,c));var sabd=sgn(orient(a,b,d));if(sabc===sabd){if(sabc===0){var ic=testInterior(a,b,c);var id=testInterior(a,b,d);if(ic===id){return 0;}else if(ic){return 1;}else{return-1;}}return 0;}else if(sabd===0){if(sabc>0){return-1;}else if(testInterior(a,b,d)){return-1;}else{return 1;}}else if(sabc===0){if(sabd>0){return 1;}else if(testInterior(a,b,c)){return 1;}else{return-1;}}return sgn(sabd-sabc);}var abc=orient(a,b,c);if(abc>0){if(bcd>0&&orient(a,b,d)>0){return 1;}return-1;}else if(abc<0){if(bcd>0||orient(a,b,d)>0){return 1;}return-1;}else{var abd=orient(a,b,d);if(abd>0){return 1;}else{if(testInterior(a,b,c)){return 1;}else{return-1;}}}}},{\"robust-orientation\":245,\"robust-product\":246,\"robust-sum\":250,\"signum\":251,\"two-sum\":269}],62:[function(_dereq_,module,exports){\"use strict\";var convexHull1d=_dereq_('./lib/ch1d');var convexHull2d=_dereq_('./lib/ch2d');var convexHullnd=_dereq_('./lib/chnd');module.exports=convexHull;function convexHull(points){var n=points.length;if(n===0){return[];}else if(n===1){return[[0]];}var d=points[0].length;if(d===0){return[];}else if(d===1){return convexHull1d(points);}else if(d===2){return convexHull2d(points);}return convexHullnd(points,d);}},{\"./lib/ch1d\":63,\"./lib/ch2d\":64,\"./lib/chnd\":65}],63:[function(_dereq_,module,exports){\"use strict\";module.exports=convexHull1d;function convexHull1d(points){var lo=0;var hi=0;for(var i=1;i<points.length;++i){if(points[i][0]<points[lo][0]){lo=i;}if(points[i][0]>points[hi][0]){hi=i;}}if(lo<hi){return[[lo],[hi]];}else if(lo>hi){return[[hi],[lo]];}else{return[[lo]];}}},{}],64:[function(_dereq_,module,exports){'use strict';module.exports=convexHull2D;var monotoneHull=_dereq_('monotone-convex-hull-2d');function convexHull2D(points){var hull=monotoneHull(points);var h=hull.length;if(h<=2){return[];}var edges=new Array(h);var a=hull[h-1];for(var i=0;i<h;++i){var b=hull[i];edges[i]=[a,b];a=b;}return edges;}},{\"monotone-convex-hull-2d\":183}],65:[function(_dereq_,module,exports){'use strict';module.exports=convexHullnD;var ich=_dereq_('incremental-convex-hull');var aff=_dereq_('affine-hull');function permute(points,front){var n=points.length;var npoints=new Array(n);for(var i=0;i<front.length;++i){npoints[i]=points[front[i]];}var ptr=front.length;for(var i=0;i<n;++i){if(front.indexOf(i)<0){npoints[ptr++]=points[i];}}return npoints;}function invPermute(cells,front){var nc=cells.length;var nf=front.length;for(var i=0;i<nc;++i){var c=cells[i];for(var j=0;j<c.length;++j){var x=c[j];if(x<nf){c[j]=front[x];}else{x=x-nf;for(var k=0;k<nf;++k){if(x>=front[k]){x+=1;}}c[j]=x;}}}return cells;}function convexHullnD(points,d){try{return ich(points,true);}catch(e){//If point set is degenerate, try to find a basis and rerun it\nvar ah=aff(points);if(ah.length<=d){//No basis, no try\nreturn[];}var npoints=permute(points,ah);var nhull=ich(npoints,true);return invPermute(nhull,ah);}}},{\"affine-hull\":11,\"incremental-convex-hull\":166}],66:[function(_dereq_,module,exports){\"use strict\";function dcubicHermite(p0,v0,p1,v1,t,f){var dh00=6*t*t-6*t,dh10=3*t*t-4*t+1,dh01=-6*t*t+6*t,dh11=3*t*t-2*t;if(p0.length){if(!f){f=new Array(p0.length);}for(var i=p0.length-1;i>=0;--i){f[i]=dh00*p0[i]+dh10*v0[i]+dh01*p1[i]+dh11*v1[i];}return f;}return dh00*p0+dh10*v0+dh01*p1[i]+dh11*v1;}function cubicHermite(p0,v0,p1,v1,t,f){var ti=t-1,t2=t*t,ti2=ti*ti,h00=(1+2*t)*ti2,h10=t*ti2,h01=t2*(3-2*t),h11=t2*ti;if(p0.length){if(!f){f=new Array(p0.length);}for(var i=p0.length-1;i>=0;--i){f[i]=h00*p0[i]+h10*v0[i]+h01*p1[i]+h11*v1[i];}return f;}return h00*p0+h10*v0+h01*p1+h11*v1;}module.exports=cubicHermite;module.exports.derivative=dcubicHermite;},{}],67:[function(_dereq_,module,exports){\"use strict\";var createThunk=_dereq_(\"./lib/thunk.js\");function Procedure(){this.argTypes=[];this.shimArgs=[];this.arrayArgs=[];this.arrayBlockIndices=[];this.scalarArgs=[];this.offsetArgs=[];this.offsetArgIndex=[];this.indexArgs=[];this.shapeArgs=[];this.funcName=\"\";this.pre=null;this.body=null;this.post=null;this.debug=false;}function compileCwise(user_args){//Create procedure\nvar proc=new Procedure();//Parse blocks\nproc.pre=user_args.pre;proc.body=user_args.body;proc.post=user_args.post;//Parse arguments\nvar proc_args=user_args.args.slice(0);proc.argTypes=proc_args;for(var i=0;i<proc_args.length;++i){var arg_type=proc_args[i];if(arg_type===\"array\"||_typeof(arg_type)===\"object\"&&arg_type.blockIndices){proc.argTypes[i]=\"array\";proc.arrayArgs.push(i);proc.arrayBlockIndices.push(arg_type.blockIndices?arg_type.blockIndices:0);proc.shimArgs.push(\"array\"+i);if(i<proc.pre.args.length&&proc.pre.args[i].count>0){throw new Error(\"cwise: pre() block may not reference array args\");}if(i<proc.post.args.length&&proc.post.args[i].count>0){throw new Error(\"cwise: post() block may not reference array args\");}}else if(arg_type===\"scalar\"){proc.scalarArgs.push(i);proc.shimArgs.push(\"scalar\"+i);}else if(arg_type===\"index\"){proc.indexArgs.push(i);if(i<proc.pre.args.length&&proc.pre.args[i].count>0){throw new Error(\"cwise: pre() block may not reference array index\");}if(i<proc.body.args.length&&proc.body.args[i].lvalue){throw new Error(\"cwise: body() block may not write to array index\");}if(i<proc.post.args.length&&proc.post.args[i].count>0){throw new Error(\"cwise: post() block may not reference array index\");}}else if(arg_type===\"shape\"){proc.shapeArgs.push(i);if(i<proc.pre.args.length&&proc.pre.args[i].lvalue){throw new Error(\"cwise: pre() block may not write to array shape\");}if(i<proc.body.args.length&&proc.body.args[i].lvalue){throw new Error(\"cwise: body() block may not write to array shape\");}if(i<proc.post.args.length&&proc.post.args[i].lvalue){throw new Error(\"cwise: post() block may not write to array shape\");}}else if(_typeof(arg_type)===\"object\"&&arg_type.offset){proc.argTypes[i]=\"offset\";proc.offsetArgs.push({array:arg_type.array,offset:arg_type.offset});proc.offsetArgIndex.push(i);}else{throw new Error(\"cwise: Unknown argument type \"+proc_args[i]);}}//Make sure at least one array argument was specified\nif(proc.arrayArgs.length<=0){throw new Error(\"cwise: No array arguments specified\");}//Make sure arguments are correct\nif(proc.pre.args.length>proc_args.length){throw new Error(\"cwise: Too many arguments in pre() block\");}if(proc.body.args.length>proc_args.length){throw new Error(\"cwise: Too many arguments in body() block\");}if(proc.post.args.length>proc_args.length){throw new Error(\"cwise: Too many arguments in post() block\");}//Check debug flag\nproc.debug=!!user_args.printCode||!!user_args.debug;//Retrieve name\nproc.funcName=user_args.funcName||\"cwise\";//Read in block size\nproc.blockSize=user_args.blockSize||64;return createThunk(proc);}module.exports=compileCwise;},{\"./lib/thunk.js\":69}],68:[function(_dereq_,module,exports){\"use strict\";var uniq=_dereq_(\"uniq\");// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\n// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\nfunction innerFill(order,proc,body){var dimension=order.length,nargs=proc.arrayArgs.length,has_index=proc.indexArgs.length>0,code=[],vars=[],idx=0,pidx=0,i,j;for(i=0;i<dimension;++i){// Iteration variables\nvars.push([\"i\",i,\"=0\"].join(\"\"));}//Compute scan deltas\nfor(j=0;j<nargs;++j){for(i=0;i<dimension;++i){pidx=idx;idx=order[i];if(i===0){// The innermost/fastest dimension's delta is simply its stride\nvars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"));}else{// For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\nvars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"));}}}if(vars.length>0){code.push(\"var \"+vars.join(\",\"));}//Scan loop\nfor(i=dimension-1;i>=0;--i){// Start at largest stride and work your way inwards\nidx=order[i];code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"));}//Push body of inner loop\ncode.push(body);//Advance scan pointers\nfor(i=0;i<dimension;++i){pidx=idx;idx=order[i];for(j=0;j<nargs;++j){code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"));}if(has_index){if(i>0){code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"));}code.push([\"++index[\",idx,\"]\"].join(\"\"));}code.push(\"}\");}return code.join(\"\\n\");}// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\n// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\n//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\nfunction outerFill(matched,order,proc,body){var dimension=order.length,nargs=proc.arrayArgs.length,blockSize=proc.blockSize,has_index=proc.indexArgs.length>0,code=[];for(var i=0;i<nargs;++i){code.push([\"var offset\",i,\"=p\",i].join(\"\"));}//Generate loops for unmatched dimensions\n// The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\n// TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\nfor(var i=matched;i<dimension;++i){code.push([\"for(var j\"+i+\"=SS[\",order[i],\"]|0;j\",i,\">0;){\"].join(\"\"));// Iterate back to front\ncode.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\"));// Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\ncode.push([\"s\",order[i],\"=j\",i].join(\"\"));code.push([\"j\",i,\"=0\"].join(\"\"));code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"));code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"));if(has_index){code.push([\"index[\",order[i],\"]=j\",i].join(\"\"));}}for(var i=0;i<nargs;++i){var indexStr=[\"offset\"+i];for(var j=matched;j<dimension;++j){indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"));}code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"));}code.push(innerFill(order,proc,body));for(var i=matched;i<dimension;++i){code.push(\"}\");}return code.join(\"\\n\");}//Count the number of compatible inner orders\n// This is the length of the longest common prefix of the arrays in orders.\n// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\n// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\nfunction countMatches(orders){var matched=0,dimension=orders[0].length;while(matched<dimension){for(var j=1;j<orders.length;++j){if(orders[j][matched]!==orders[0][matched]){return matched;}}++matched;}return matched;}//Processes a block according to the given data types\n// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\nfunction processBlock(block,proc,dtypes){var code=block.body;var pre=[];var post=[];for(var i=0;i<block.args.length;++i){var carg=block.args[i];if(carg.count<=0){continue;}var re=new RegExp(carg.name,\"g\");var ptrStr=\"\";var arrNum=proc.arrayArgs.indexOf(i);switch(proc.argTypes[i]){case\"offset\":var offArgIndex=proc.offsetArgIndex.indexOf(i);var offArg=proc.offsetArgs[offArgIndex];arrNum=offArg.array;ptrStr=\"+q\"+offArgIndex;// Adds offset to the \"pointer\" in the array\ncase\"array\":ptrStr=\"p\"+arrNum+ptrStr;var localStr=\"l\"+i;var arrStr=\"a\"+arrNum;if(proc.arrayBlockIndices[arrNum]===0){// Argument to body is just a single value from this array\nif(carg.count===1){// Argument/array used only once(?)\nif(dtypes[arrNum]===\"generic\"){if(carg.lvalue){pre.push([\"var \",localStr,\"=\",arrStr,\".get(\",ptrStr,\")\"].join(\"\"));// Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\ncode=code.replace(re,localStr);post.push([arrStr,\".set(\",ptrStr,\",\",localStr,\")\"].join(\"\"));}else{code=code.replace(re,[arrStr,\".get(\",ptrStr,\")\"].join(\"\"));}}else{code=code.replace(re,[arrStr,\"[\",ptrStr,\"]\"].join(\"\"));}}else if(dtypes[arrNum]===\"generic\"){pre.push([\"var \",localStr,\"=\",arrStr,\".get(\",ptrStr,\")\"].join(\"\"));// TODO: Could we optimize by checking for carg.rvalue?\ncode=code.replace(re,localStr);if(carg.lvalue){post.push([arrStr,\".set(\",ptrStr,\",\",localStr,\")\"].join(\"\"));}}else{pre.push([\"var \",localStr,\"=\",arrStr,\"[\",ptrStr,\"]\"].join(\"\"));// TODO: Could we optimize by checking for carg.rvalue?\ncode=code.replace(re,localStr);if(carg.lvalue){post.push([arrStr,\"[\",ptrStr,\"]=\",localStr].join(\"\"));}}}else{// Argument to body is a \"block\"\nvar reStrArr=[carg.name],ptrStrArr=[ptrStr];for(var j=0;j<Math.abs(proc.arrayBlockIndices[arrNum]);j++){reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\");ptrStrArr.push(\"$\"+(j+1)+\"*t\"+arrNum+\"b\"+j);// Matched index times stride\n}re=new RegExp(reStrArr.join(\"\"),\"g\");ptrStr=ptrStrArr.join(\"+\");if(dtypes[arrNum]===\"generic\"){/*if(carg.lvalue) {\n              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n              code = code.replace(re, localStr)\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            } else {\n              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n            }*/throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\");}else{// This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\ncode=code.replace(re,[arrStr,\"[\",ptrStr,\"]\"].join(\"\"));}}break;case\"scalar\":code=code.replace(re,\"Y\"+proc.scalarArgs.indexOf(i));break;case\"index\":code=code.replace(re,\"index\");break;case\"shape\":code=code.replace(re,\"shape\");break;}}return[pre.join(\"\\n\"),code,post.join(\"\\n\")].join(\"\\n\").trim();}function typeSummary(dtypes){var summary=new Array(dtypes.length);var allEqual=true;for(var i=0;i<dtypes.length;++i){var t=dtypes[i];var digits=t.match(/\\d+/);if(!digits){digits=\"\";}else{digits=digits[0];}if(t.charAt(0)===0){summary[i]=\"u\"+t.charAt(1)+digits;}else{summary[i]=t.charAt(0)+digits;}if(i>0){allEqual=allEqual&&summary[i]===summary[i-1];}}if(allEqual){return summary[0];}return summary.join(\"\");}//Generates a cwise operator\nfunction generateCWiseOp(proc,typesig){//Compute dimension\n// Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\nvar dimension=typesig[1].length-Math.abs(proc.arrayBlockIndices[0])|0;var orders=new Array(proc.arrayArgs.length);var dtypes=new Array(proc.arrayArgs.length);for(var i=0;i<proc.arrayArgs.length;++i){dtypes[i]=typesig[2*i];orders[i]=typesig[2*i+1];}//Determine where block and loop indices start and end\nvar blockBegin=[],blockEnd=[];// These indices are exposed as blocks\nvar loopBegin=[],loopEnd=[];// These indices are iterated over\nvar loopOrders=[];// orders restricted to the loop indices\nfor(var i=0;i<proc.arrayArgs.length;++i){if(proc.arrayBlockIndices[i]<0){loopBegin.push(0);loopEnd.push(dimension);blockBegin.push(dimension);blockEnd.push(dimension+proc.arrayBlockIndices[i]);}else{loopBegin.push(proc.arrayBlockIndices[i]);// Non-negative\nloopEnd.push(proc.arrayBlockIndices[i]+dimension);blockBegin.push(0);blockEnd.push(proc.arrayBlockIndices[i]);}var newOrder=[];for(var j=0;j<orders[i].length;j++){if(loopBegin[i]<=orders[i][j]&&orders[i][j]<loopEnd[i]){newOrder.push(orders[i][j]-loopBegin[i]);// If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\n}}loopOrders.push(newOrder);}//First create arguments for procedure\nvar arglist=[\"SS\"];// SS is the overall shape over which we iterate\nvar code=[\"'use strict'\"];var vars=[];for(var j=0;j<dimension;++j){vars.push([\"s\",j,\"=SS[\",j,\"]\"].join(\"\"));// The limits for each dimension.\n}for(var i=0;i<proc.arrayArgs.length;++i){arglist.push(\"a\"+i);// Actual data array\narglist.push(\"t\"+i);// Strides\narglist.push(\"p\"+i);// Offset in the array at which the data starts (also used for iterating over the data)\nfor(var j=0;j<dimension;++j){// Unpack the strides into vars for looping\nvars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"));}for(var j=0;j<Math.abs(proc.arrayBlockIndices[i]);++j){// Unpack the strides into vars for block iteration\nvars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"));}}for(var i=0;i<proc.scalarArgs.length;++i){arglist.push(\"Y\"+i);}if(proc.shapeArgs.length>0){vars.push(\"shape=SS.slice(0)\");// Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\n}if(proc.indexArgs.length>0){// Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\nvar zeros=new Array(dimension);for(var i=0;i<dimension;++i){zeros[i]=\"0\";}vars.push([\"index=[\",zeros.join(\",\"),\"]\"].join(\"\"));}for(var i=0;i<proc.offsetArgs.length;++i){// Offset arguments used for stencil operations\nvar off_arg=proc.offsetArgs[i];var init_string=[];for(var j=0;j<off_arg.offset.length;++j){if(off_arg.offset[j]===0){continue;}else if(off_arg.offset[j]===1){init_string.push([\"t\",off_arg.array,\"p\",j].join(\"\"));}else{init_string.push([off_arg.offset[j],\"*t\",off_arg.array,\"p\",j].join(\"\"));}}if(init_string.length===0){vars.push(\"q\"+i+\"=0\");}else{vars.push([\"q\",i,\"=\",init_string.join(\"+\")].join(\"\"));}}//Prepare this variables\nvar thisVars=uniq([].concat(proc.pre.thisVars).concat(proc.body.thisVars).concat(proc.post.thisVars));vars=vars.concat(thisVars);if(vars.length>0){code.push(\"var \"+vars.join(\",\"));}for(var i=0;i<proc.arrayArgs.length;++i){code.push(\"p\"+i+\"|=0\");}//Inline prelude\nif(proc.pre.body.length>3){code.push(processBlock(proc.pre,proc,dtypes));}//Process body\nvar body=processBlock(proc.body,proc,dtypes);var matched=countMatches(loopOrders);if(matched<dimension){code.push(outerFill(matched,loopOrders[0],proc,body));// TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\n}else{code.push(innerFill(loopOrders[0],proc,body));}//Inline epilog\nif(proc.post.body.length>3){code.push(processBlock(proc.post,proc,dtypes));}if(proc.debug){console.log(\"-----Generated cwise routine for \",typesig,\":\\n\"+code.join(\"\\n\")+\"\\n----------\");}var loopName=[proc.funcName||\"unnamed\",\"_cwise_loop_\",orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\");var f=new Function([\"function \",loopName,\"(\",arglist.join(\",\"),\"){\",code.join(\"\\n\"),\"} return \",loopName].join(\"\"));return f();}module.exports=generateCWiseOp;},{\"uniq\":272}],69:[function(_dereq_,module,exports){\"use strict\";// The function below is called when constructing a cwise function object, and does the following:\n// A function object is constructed which accepts as argument a compilation function and returns another function.\n// It is this other function that is eventually returned by createThunk, and this function is the one that actually\n// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\n// The compilation passed to the first function object is used for compiling new functions.\n// Once this function object is created, it is called with compile as argument, where the first argument of compile\n// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\n// So createThunk roughly works like this:\n// function createThunk(proc) {\n//   var thunk = function(compileBound) {\n//     var CACHED = {}\n//     return function(arrays and scalars) {\n//       if (dtype and order of arrays in CACHED) {\n//         var func = CACHED[dtype and order of arrays]\n//       } else {\n//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\n//       }\n//       return func(arrays and scalars)\n//     }\n//   }\n//   return thunk(compile.bind1(proc))\n// }\nvar compile=_dereq_(\"./compile.js\");function createThunk(proc){var code=[\"'use strict'\",\"var CACHED={}\"];var vars=[];var thunkName=proc.funcName+\"_cwise_thunk\";//Build thunk\ncode.push([\"return function \",thunkName,\"(\",proc.shimArgs.join(\",\"),\"){\"].join(\"\"));var typesig=[];var string_typesig=[];var proc_args=[[\"array\",proc.arrayArgs[0],\".shape.slice(\",// Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\nMath.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?\",\"+proc.arrayBlockIndices[0]+\")\":\")\"].join(\"\")];var shapeLengthConditions=[],shapeConditions=[];// Process array arguments\nfor(var i=0;i<proc.arrayArgs.length;++i){var j=proc.arrayArgs[i];vars.push([\"t\",j,\"=array\",j,\".dtype,\",\"r\",j,\"=array\",j,\".order\"].join(\"\"));typesig.push(\"t\"+j);typesig.push(\"r\"+j);string_typesig.push(\"t\"+j);string_typesig.push(\"r\"+j+\".join()\");proc_args.push(\"array\"+j+\".data\");proc_args.push(\"array\"+j+\".stride\");proc_args.push(\"array\"+j+\".offset|0\");if(i>0){// Gather conditions to check for shape equality (ignoring block indices)\nshapeLengthConditions.push(\"array\"+proc.arrayArgs[0]+\".shape.length===array\"+j+\".shape.length+\"+(Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])));shapeConditions.push(\"array\"+proc.arrayArgs[0]+\".shape[shapeIndex+\"+Math.max(0,proc.arrayBlockIndices[0])+\"]===array\"+j+\".shape[shapeIndex+\"+Math.max(0,proc.arrayBlockIndices[i])+\"]\");}}// Check for shape equality\nif(proc.arrayArgs.length>1){code.push(\"if (!(\"+shapeLengthConditions.join(\" && \")+\")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\");code.push(\"for(var shapeIndex=array\"+proc.arrayArgs[0]+\".shape.length-\"+Math.abs(proc.arrayBlockIndices[0])+\"; shapeIndex--\x3e0;) {\");code.push(\"if (!(\"+shapeConditions.join(\" && \")+\")) throw new Error('cwise: Arrays do not all have the same shape!')\");code.push(\"}\");}// Process scalar arguments\nfor(var i=0;i<proc.scalarArgs.length;++i){proc_args.push(\"scalar\"+proc.scalarArgs[i]);}// Check for cached function (and if not present, generate it)\nvars.push([\"type=[\",string_typesig.join(\",\"),\"].join()\"].join(\"\"));vars.push(\"proc=CACHED[type]\");code.push(\"var \"+vars.join(\",\"));code.push([\"if(!proc){\",\"CACHED[type]=proc=compile([\",typesig.join(\",\"),\"])}\",\"return proc(\",proc_args.join(\",\"),\")}\"].join(\"\"));if(proc.debug){console.log(\"-----Generated thunk:\\n\"+code.join(\"\\n\")+\"\\n----------\");}//Compile thunk\nvar thunk=new Function(\"compile\",code.join(\"\\n\"));return thunk(compile.bind(undefined,proc));}module.exports=createThunk;},{\"./compile.js\":68}],70:[function(_dereq_,module,exports){module.exports=_dereq_(\"cwise-compiler\");},{\"cwise-compiler\":67}],71:[function(_dereq_,module,exports){!function(){var d3={version:\"3.5.17\"};var d3_arraySlice=[].slice,d3_array=function d3_array(list){return d3_arraySlice.call(list);};var d3_document=this.document;function d3_documentElement(node){return node&&(node.ownerDocument||node.document||node).documentElement;}function d3_window(node){return node&&(node.ownerDocument&&node.ownerDocument.defaultView||node.document&&node||node.defaultView);}if(d3_document){try{d3_array(d3_document.documentElement.childNodes)[0].nodeType;}catch(e){d3_array=function d3_array(list){var i=list.length,array=new Array(i);while(i--){array[i]=list[i];}return array;};}}if(!Date.now)Date.now=function(){return+new Date();};if(d3_document){try{d3_document.createElement(\"DIV\").style.setProperty(\"opacity\",0,\"\");}catch(error){var d3_element_prototype=this.Element.prototype,d3_element_setAttribute=d3_element_prototype.setAttribute,d3_element_setAttributeNS=d3_element_prototype.setAttributeNS,d3_style_prototype=this.CSSStyleDeclaration.prototype,d3_style_setProperty=d3_style_prototype.setProperty;d3_element_prototype.setAttribute=function(name,value){d3_element_setAttribute.call(this,name,value+\"\");};d3_element_prototype.setAttributeNS=function(space,local,value){d3_element_setAttributeNS.call(this,space,local,value+\"\");};d3_style_prototype.setProperty=function(name,value,priority){d3_style_setProperty.call(this,name,value+\"\",priority);};}}d3.ascending=d3_ascending;function d3_ascending(a,b){return a<b?-1:a>b?1:a>=b?0:NaN;}d3.descending=function(a,b){return b<a?-1:b>a?1:b>=a?0:NaN;};d3.min=function(array,f){var i=-1,n=array.length,a,b;if(arguments.length===1){while(++i<n){if((b=array[i])!=null&&b>=b){a=b;break;}}while(++i<n){if((b=array[i])!=null&&a>b)a=b;}}else{while(++i<n){if((b=f.call(array,array[i],i))!=null&&b>=b){a=b;break;}}while(++i<n){if((b=f.call(array,array[i],i))!=null&&a>b)a=b;}}return a;};d3.max=function(array,f){var i=-1,n=array.length,a,b;if(arguments.length===1){while(++i<n){if((b=array[i])!=null&&b>=b){a=b;break;}}while(++i<n){if((b=array[i])!=null&&b>a)a=b;}}else{while(++i<n){if((b=f.call(array,array[i],i))!=null&&b>=b){a=b;break;}}while(++i<n){if((b=f.call(array,array[i],i))!=null&&b>a)a=b;}}return a;};d3.extent=function(array,f){var i=-1,n=array.length,a,b,c;if(arguments.length===1){while(++i<n){if((b=array[i])!=null&&b>=b){a=c=b;break;}}while(++i<n){if((b=array[i])!=null){if(a>b)a=b;if(c<b)c=b;}}}else{while(++i<n){if((b=f.call(array,array[i],i))!=null&&b>=b){a=c=b;break;}}while(++i<n){if((b=f.call(array,array[i],i))!=null){if(a>b)a=b;if(c<b)c=b;}}}return[a,c];};function d3_number(x){return x===null?NaN:+x;}function d3_numeric(x){return!isNaN(x);}d3.sum=function(array,f){var s=0,n=array.length,a,i=-1;if(arguments.length===1){while(++i<n){if(d3_numeric(a=+array[i]))s+=a;}}else{while(++i<n){if(d3_numeric(a=+f.call(array,array[i],i)))s+=a;}}return s;};d3.mean=function(array,f){var s=0,n=array.length,a,i=-1,j=n;if(arguments.length===1){while(++i<n){if(d3_numeric(a=d3_number(array[i])))s+=a;else--j;}}else{while(++i<n){if(d3_numeric(a=d3_number(f.call(array,array[i],i))))s+=a;else--j;}}if(j)return s/j;};d3.quantile=function(values,p){var H=(values.length-1)*p+1,h=Math.floor(H),v=+values[h-1],e=H-h;return e?v+e*(values[h]-v):v;};d3.median=function(array,f){var numbers=[],n=array.length,a,i=-1;if(arguments.length===1){while(++i<n){if(d3_numeric(a=d3_number(array[i])))numbers.push(a);}}else{while(++i<n){if(d3_numeric(a=d3_number(f.call(array,array[i],i))))numbers.push(a);}}if(numbers.length)return d3.quantile(numbers.sort(d3_ascending),.5);};d3.variance=function(array,f){var n=array.length,m=0,a,d,s=0,i=-1,j=0;if(arguments.length===1){while(++i<n){if(d3_numeric(a=d3_number(array[i]))){d=a-m;m+=d/++j;s+=d*(a-m);}}}else{while(++i<n){if(d3_numeric(a=d3_number(f.call(array,array[i],i)))){d=a-m;m+=d/++j;s+=d*(a-m);}}}if(j>1)return s/(j-1);};d3.deviation=function(){var v=d3.variance.apply(this,arguments);return v?Math.sqrt(v):v;};function d3_bisector(compare){return{left:function left(a,x,lo,hi){if(arguments.length<3)lo=0;if(arguments.length<4)hi=a.length;while(lo<hi){var mid=lo+hi>>>1;if(compare(a[mid],x)<0)lo=mid+1;else hi=mid;}return lo;},right:function right(a,x,lo,hi){if(arguments.length<3)lo=0;if(arguments.length<4)hi=a.length;while(lo<hi){var mid=lo+hi>>>1;if(compare(a[mid],x)>0)hi=mid;else lo=mid+1;}return lo;}};}var d3_bisect=d3_bisector(d3_ascending);d3.bisectLeft=d3_bisect.left;d3.bisect=d3.bisectRight=d3_bisect.right;d3.bisector=function(f){return d3_bisector(f.length===1?function(d,x){return d3_ascending(f(d),x);}:f);};d3.shuffle=function(array,i0,i1){if((m=arguments.length)<3){i1=array.length;if(m<2)i0=0;}var m=i1-i0,t,i;while(m){i=Math.random()*m--|0;t=array[m+i0],array[m+i0]=array[i+i0],array[i+i0]=t;}return array;};d3.permute=function(array,indexes){var i=indexes.length,permutes=new Array(i);while(i--){permutes[i]=array[indexes[i]];}return permutes;};d3.pairs=function(array){var i=0,n=array.length-1,p0,p1=array[0],pairs=new Array(n<0?0:n);while(i<n){pairs[i]=[p0=p1,p1=array[++i]];}return pairs;};d3.transpose=function(matrix){if(!(n=matrix.length))return[];for(var i=-1,m=d3.min(matrix,d3_transposeLength),transpose=new Array(m);++i<m;){for(var j=-1,n,row=transpose[i]=new Array(n);++j<n;){row[j]=matrix[j][i];}}return transpose;};function d3_transposeLength(d){return d.length;}d3.zip=function(){return d3.transpose(arguments);};d3.keys=function(map){var keys=[];for(var key in map){keys.push(key);}return keys;};d3.values=function(map){var values=[];for(var key in map){values.push(map[key]);}return values;};d3.entries=function(map){var entries=[];for(var key in map){entries.push({key:key,value:map[key]});}return entries;};d3.merge=function(arrays){var n=arrays.length,m,i=-1,j=0,merged,array;while(++i<n){j+=arrays[i].length;}merged=new Array(j);while(--n>=0){array=arrays[n];m=array.length;while(--m>=0){merged[--j]=array[m];}}return merged;};var abs=Math.abs;d3.range=function(start,stop,step){if(arguments.length<3){step=1;if(arguments.length<2){stop=start;start=0;}}if((stop-start)/step===Infinity)throw new Error(\"infinite range\");var range=[],k=d3_range_integerScale(abs(step)),i=-1,j;start*=k,stop*=k,step*=k;if(step<0)while((j=start+step*++i)>stop){range.push(j/k);}else while((j=start+step*++i)<stop){range.push(j/k);}return range;};function d3_range_integerScale(x){var k=1;while(x*k%1){k*=10;}return k;}function d3_class(ctor,properties){for(var key in properties){Object.defineProperty(ctor.prototype,key,{value:properties[key],enumerable:false});}}d3.map=function(object,f){var map=new d3_Map();if(object instanceof d3_Map){object.forEach(function(key,value){map.set(key,value);});}else if(Array.isArray(object)){var i=-1,n=object.length,o;if(arguments.length===1)while(++i<n){map.set(i,object[i]);}else while(++i<n){map.set(f.call(object,o=object[i],i),o);}}else{for(var key in object){map.set(key,object[key]);}}return map;};function d3_Map(){this._=Object.create(null);}var d3_map_proto=\"__proto__\",d3_map_zero=\"\\x00\";d3_class(d3_Map,{has:d3_map_has,get:function get(key){return this._[d3_map_escape(key)];},set:function set(key,value){return this._[d3_map_escape(key)]=value;},remove:d3_map_remove,keys:d3_map_keys,values:function values(){var values=[];for(var key in this._){values.push(this._[key]);}return values;},entries:function entries(){var entries=[];for(var key in this._){entries.push({key:d3_map_unescape(key),value:this._[key]});}return entries;},size:d3_map_size,empty:d3_map_empty,forEach:function forEach(f){for(var key in this._){f.call(this,d3_map_unescape(key),this._[key]);}}});function d3_map_escape(key){return(key+=\"\")===d3_map_proto||key[0]===d3_map_zero?d3_map_zero+key:key;}function d3_map_unescape(key){return(key+=\"\")[0]===d3_map_zero?key.slice(1):key;}function d3_map_has(key){return d3_map_escape(key)in this._;}function d3_map_remove(key){return(key=d3_map_escape(key))in this._&&delete this._[key];}function d3_map_keys(){var keys=[];for(var key in this._){keys.push(d3_map_unescape(key));}return keys;}function d3_map_size(){var size=0;for(var key in this._){++size;}return size;}function d3_map_empty(){for(var key in this._){return false;}return true;}d3.nest=function(){var nest={},keys=[],sortKeys=[],sortValues,rollup;function map(mapType,array,depth){if(depth>=keys.length)return rollup?rollup.call(nest,array):sortValues?array.sort(sortValues):array;var i=-1,n=array.length,key=keys[depth++],keyValue,object,setter,valuesByKey=new d3_Map(),values;while(++i<n){if(values=valuesByKey.get(keyValue=key(object=array[i]))){values.push(object);}else{valuesByKey.set(keyValue,[object]);}}if(mapType){object=mapType();setter=function setter(keyValue,values){object.set(keyValue,map(mapType,values,depth));};}else{object={};setter=function setter(keyValue,values){object[keyValue]=map(mapType,values,depth);};}valuesByKey.forEach(setter);return object;}function entries(map,depth){if(depth>=keys.length)return map;var array=[],sortKey=sortKeys[depth++];map.forEach(function(key,keyMap){array.push({key:key,values:entries(keyMap,depth)});});return sortKey?array.sort(function(a,b){return sortKey(a.key,b.key);}):array;}nest.map=function(array,mapType){return map(mapType,array,0);};nest.entries=function(array){return entries(map(d3.map,array,0),0);};nest.key=function(d){keys.push(d);return nest;};nest.sortKeys=function(order){sortKeys[keys.length-1]=order;return nest;};nest.sortValues=function(order){sortValues=order;return nest;};nest.rollup=function(f){rollup=f;return nest;};return nest;};d3.set=function(array){var set=new d3_Set();if(array)for(var i=0,n=array.length;i<n;++i){set.add(array[i]);}return set;};function d3_Set(){this._=Object.create(null);}d3_class(d3_Set,{has:d3_map_has,add:function add(key){this._[d3_map_escape(key+=\"\")]=true;return key;},remove:d3_map_remove,values:d3_map_keys,size:d3_map_size,empty:d3_map_empty,forEach:function forEach(f){for(var key in this._){f.call(this,d3_map_unescape(key));}}});d3.behavior={};function d3_identity(d){return d;}d3.rebind=function(target,source){var i=1,n=arguments.length,method;while(++i<n){target[method=arguments[i]]=d3_rebind(target,source,source[method]);}return target;};function d3_rebind(target,source,method){return function(){var value=method.apply(source,arguments);return value===source?target:value;};}function d3_vendorSymbol(object,name){if(name in object)return name;name=name.charAt(0).toUpperCase()+name.slice(1);for(var i=0,n=d3_vendorPrefixes.length;i<n;++i){var prefixName=d3_vendorPrefixes[i]+name;if(prefixName in object)return prefixName;}}var d3_vendorPrefixes=[\"webkit\",\"ms\",\"moz\",\"Moz\",\"o\",\"O\"];function d3_noop(){}d3.dispatch=function(){var dispatch=new d3_dispatch(),i=-1,n=arguments.length;while(++i<n){dispatch[arguments[i]]=d3_dispatch_event(dispatch);}return dispatch;};function d3_dispatch(){}d3_dispatch.prototype.on=function(type,listener){var i=type.indexOf(\".\"),name=\"\";if(i>=0){name=type.slice(i+1);type=type.slice(0,i);}if(type)return arguments.length<2?this[type].on(name):this[type].on(name,listener);if(arguments.length===2){if(listener==null)for(type in this){if(this.hasOwnProperty(type))this[type].on(name,null);}return this;}};function d3_dispatch_event(dispatch){var listeners=[],listenerByName=new d3_Map();function event(){var z=listeners,i=-1,n=z.length,l;while(++i<n){if(l=z[i].on)l.apply(this,arguments);}return dispatch;}event.on=function(name,listener){var l=listenerByName.get(name),i;if(arguments.length<2)return l&&l.on;if(l){l.on=null;listeners=listeners.slice(0,i=listeners.indexOf(l)).concat(listeners.slice(i+1));listenerByName.remove(name);}if(listener)listeners.push(listenerByName.set(name,{on:listener}));return dispatch;};return event;}d3.event=null;function d3_eventPreventDefault(){d3.event.preventDefault();}function d3_eventSource(){var e=d3.event,s;while(s=e.sourceEvent){e=s;}return e;}function d3_eventDispatch(target){var dispatch=new d3_dispatch(),i=0,n=arguments.length;while(++i<n){dispatch[arguments[i]]=d3_dispatch_event(dispatch);}dispatch.of=function(thiz,argumentz){return function(e1){try{var e0=e1.sourceEvent=d3.event;e1.target=target;d3.event=e1;dispatch[e1.type].apply(thiz,argumentz);}finally{d3.event=e0;}};};return dispatch;}d3.requote=function(s){return s.replace(d3_requote_re,\"\\\\$&\");};var d3_requote_re=/[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;var d3_subclass={}.__proto__?function(object,prototype){object.__proto__=prototype;}:function(object,prototype){for(var property in prototype){object[property]=prototype[property];}};function d3_selection(groups){d3_subclass(groups,d3_selectionPrototype);return groups;}var d3_select=function d3_select(s,n){return n.querySelector(s);},d3_selectAll=function d3_selectAll(s,n){return n.querySelectorAll(s);},_d3_selectMatches=function d3_selectMatches(n,s){var d3_selectMatcher=n.matches||n[d3_vendorSymbol(n,\"matchesSelector\")];_d3_selectMatches=function d3_selectMatches(n,s){return d3_selectMatcher.call(n,s);};return _d3_selectMatches(n,s);};if(typeof Sizzle===\"function\"){d3_select=function d3_select(s,n){return Sizzle(s,n)[0]||null;};d3_selectAll=Sizzle;_d3_selectMatches=Sizzle.matchesSelector;}d3.selection=function(){return d3.select(d3_document.documentElement);};var d3_selectionPrototype=d3.selection.prototype=[];d3_selectionPrototype.select=function(selector){var subgroups=[],subgroup,subnode,group,node;selector=d3_selection_selector(selector);for(var j=-1,m=this.length;++j<m;){subgroups.push(subgroup=[]);subgroup.parentNode=(group=this[j]).parentNode;for(var i=-1,n=group.length;++i<n;){if(node=group[i]){subgroup.push(subnode=selector.call(node,node.__data__,i,j));if(subnode&&\"__data__\"in node)subnode.__data__=node.__data__;}else{subgroup.push(null);}}}return d3_selection(subgroups);};function d3_selection_selector(selector){return typeof selector===\"function\"?selector:function(){return d3_select(selector,this);};}d3_selectionPrototype.selectAll=function(selector){var subgroups=[],subgroup,node;selector=d3_selection_selectorAll(selector);for(var j=-1,m=this.length;++j<m;){for(var group=this[j],i=-1,n=group.length;++i<n;){if(node=group[i]){subgroups.push(subgroup=d3_array(selector.call(node,node.__data__,i,j)));subgroup.parentNode=node;}}}return d3_selection(subgroups);};function d3_selection_selectorAll(selector){return typeof selector===\"function\"?selector:function(){return d3_selectAll(selector,this);};}var d3_nsXhtml=\"http://www.w3.org/1999/xhtml\";var d3_nsPrefix={svg:\"http://www.w3.org/2000/svg\",xhtml:d3_nsXhtml,xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\",xmlns:\"http://www.w3.org/2000/xmlns/\"};d3.ns={prefix:d3_nsPrefix,qualify:function qualify(name){var i=name.indexOf(\":\"),prefix=name;if(i>=0&&(prefix=name.slice(0,i))!==\"xmlns\")name=name.slice(i+1);return d3_nsPrefix.hasOwnProperty(prefix)?{space:d3_nsPrefix[prefix],local:name}:name;}};d3_selectionPrototype.attr=function(name,value){if(arguments.length<2){if(typeof name===\"string\"){var node=this.node();name=d3.ns.qualify(name);return name.local?node.getAttributeNS(name.space,name.local):node.getAttribute(name);}for(value in name){this.each(d3_selection_attr(value,name[value]));}return this;}return this.each(d3_selection_attr(name,value));};function d3_selection_attr(name,value){name=d3.ns.qualify(name);function attrNull(){this.removeAttribute(name);}function attrNullNS(){this.removeAttributeNS(name.space,name.local);}function attrConstant(){this.setAttribute(name,value);}function attrConstantNS(){this.setAttributeNS(name.space,name.local,value);}function attrFunction(){var x=value.apply(this,arguments);if(x==null)this.removeAttribute(name);else this.setAttribute(name,x);}function attrFunctionNS(){var x=value.apply(this,arguments);if(x==null)this.removeAttributeNS(name.space,name.local);else this.setAttributeNS(name.space,name.local,x);}return value==null?name.local?attrNullNS:attrNull:typeof value===\"function\"?name.local?attrFunctionNS:attrFunction:name.local?attrConstantNS:attrConstant;}function d3_collapse(s){return s.trim().replace(/\\s+/g,\" \");}d3_selectionPrototype.classed=function(name,value){if(arguments.length<2){if(typeof name===\"string\"){var node=this.node(),n=(name=d3_selection_classes(name)).length,i=-1;if(value=node.classList){while(++i<n){if(!value.contains(name[i]))return false;}}else{value=node.getAttribute(\"class\");while(++i<n){if(!d3_selection_classedRe(name[i]).test(value))return false;}}return true;}for(value in name){this.each(d3_selection_classed(value,name[value]));}return this;}return this.each(d3_selection_classed(name,value));};function d3_selection_classedRe(name){return new RegExp(\"(?:^|\\\\s+)\"+d3.requote(name)+\"(?:\\\\s+|$)\",\"g\");}function d3_selection_classes(name){return(name+\"\").trim().split(/^|\\s+/);}function d3_selection_classed(name,value){name=d3_selection_classes(name).map(d3_selection_classedName);var n=name.length;function classedConstant(){var i=-1;while(++i<n){name[i](this,value);}}function classedFunction(){var i=-1,x=value.apply(this,arguments);while(++i<n){name[i](this,x);}}return typeof value===\"function\"?classedFunction:classedConstant;}function d3_selection_classedName(name){var re=d3_selection_classedRe(name);return function(node,value){if(c=node.classList)return value?c.add(name):c.remove(name);var c=node.getAttribute(\"class\")||\"\";if(value){re.lastIndex=0;if(!re.test(c))node.setAttribute(\"class\",d3_collapse(c+\" \"+name));}else{node.setAttribute(\"class\",d3_collapse(c.replace(re,\" \")));}};}d3_selectionPrototype.style=function(name,value,priority){var n=arguments.length;if(n<3){if(typeof name!==\"string\"){if(n<2)value=\"\";for(priority in name){this.each(d3_selection_style(priority,name[priority],value));}return this;}if(n<2){var node=this.node();return d3_window(node).getComputedStyle(node,null).getPropertyValue(name);}priority=\"\";}return this.each(d3_selection_style(name,value,priority));};function d3_selection_style(name,value,priority){function styleNull(){this.style.removeProperty(name);}function styleConstant(){this.style.setProperty(name,value,priority);}function styleFunction(){var x=value.apply(this,arguments);if(x==null)this.style.removeProperty(name);else this.style.setProperty(name,x,priority);}return value==null?styleNull:typeof value===\"function\"?styleFunction:styleConstant;}d3_selectionPrototype.property=function(name,value){if(arguments.length<2){if(typeof name===\"string\")return this.node()[name];for(value in name){this.each(d3_selection_property(value,name[value]));}return this;}return this.each(d3_selection_property(name,value));};function d3_selection_property(name,value){function propertyNull(){delete this[name];}function propertyConstant(){this[name]=value;}function propertyFunction(){var x=value.apply(this,arguments);if(x==null)delete this[name];else this[name]=x;}return value==null?propertyNull:typeof value===\"function\"?propertyFunction:propertyConstant;}d3_selectionPrototype.text=function(value){return arguments.length?this.each(typeof value===\"function\"?function(){var v=value.apply(this,arguments);this.textContent=v==null?\"\":v;}:value==null?function(){this.textContent=\"\";}:function(){this.textContent=value;}):this.node().textContent;};d3_selectionPrototype.html=function(value){return arguments.length?this.each(typeof value===\"function\"?function(){var v=value.apply(this,arguments);this.innerHTML=v==null?\"\":v;}:value==null?function(){this.innerHTML=\"\";}:function(){this.innerHTML=value;}):this.node().innerHTML;};d3_selectionPrototype.append=function(name){name=d3_selection_creator(name);return this.select(function(){return this.appendChild(name.apply(this,arguments));});};function d3_selection_creator(name){function create(){var document=this.ownerDocument,namespace=this.namespaceURI;return namespace===d3_nsXhtml&&document.documentElement.namespaceURI===d3_nsXhtml?document.createElement(name):document.createElementNS(namespace,name);}function createNS(){return this.ownerDocument.createElementNS(name.space,name.local);}return typeof name===\"function\"?name:(name=d3.ns.qualify(name)).local?createNS:create;}d3_selectionPrototype.insert=function(name,before){name=d3_selection_creator(name);before=d3_selection_selector(before);return this.select(function(){return this.insertBefore(name.apply(this,arguments),before.apply(this,arguments)||null);});};d3_selectionPrototype.remove=function(){return this.each(d3_selectionRemove);};function d3_selectionRemove(){var parent=this.parentNode;if(parent)parent.removeChild(this);}d3_selectionPrototype.data=function(value,key){var i=-1,n=this.length,group,node;if(!arguments.length){value=new Array(n=(group=this[0]).length);while(++i<n){if(node=group[i]){value[i]=node.__data__;}}return value;}function bind(group,groupData){var i,n=group.length,m=groupData.length,n0=Math.min(n,m),updateNodes=new Array(m),enterNodes=new Array(m),exitNodes=new Array(n),node,nodeData;if(key){var nodeByKeyValue=new d3_Map(),keyValues=new Array(n),keyValue;for(i=-1;++i<n;){if(node=group[i]){if(nodeByKeyValue.has(keyValue=key.call(node,node.__data__,i))){exitNodes[i]=node;}else{nodeByKeyValue.set(keyValue,node);}keyValues[i]=keyValue;}}for(i=-1;++i<m;){if(!(node=nodeByKeyValue.get(keyValue=key.call(groupData,nodeData=groupData[i],i)))){enterNodes[i]=d3_selection_dataNode(nodeData);}else if(node!==true){updateNodes[i]=node;node.__data__=nodeData;}nodeByKeyValue.set(keyValue,true);}for(i=-1;++i<n;){if(i in keyValues&&nodeByKeyValue.get(keyValues[i])!==true){exitNodes[i]=group[i];}}}else{for(i=-1;++i<n0;){node=group[i];nodeData=groupData[i];if(node){node.__data__=nodeData;updateNodes[i]=node;}else{enterNodes[i]=d3_selection_dataNode(nodeData);}}for(;i<m;++i){enterNodes[i]=d3_selection_dataNode(groupData[i]);}for(;i<n;++i){exitNodes[i]=group[i];}}enterNodes.update=updateNodes;enterNodes.parentNode=updateNodes.parentNode=exitNodes.parentNode=group.parentNode;enter.push(enterNodes);update.push(updateNodes);exit.push(exitNodes);}var enter=d3_selection_enter([]),update=d3_selection([]),exit=d3_selection([]);if(typeof value===\"function\"){while(++i<n){bind(group=this[i],value.call(group,group.parentNode.__data__,i));}}else{while(++i<n){bind(group=this[i],value);}}update.enter=function(){return enter;};update.exit=function(){return exit;};return update;};function d3_selection_dataNode(data){return{__data__:data};}d3_selectionPrototype.datum=function(value){return arguments.length?this.property(\"__data__\",value):this.property(\"__data__\");};d3_selectionPrototype.filter=function(filter){var subgroups=[],subgroup,group,node;if(typeof filter!==\"function\")filter=d3_selection_filter(filter);for(var j=0,m=this.length;j<m;j++){subgroups.push(subgroup=[]);subgroup.parentNode=(group=this[j]).parentNode;for(var i=0,n=group.length;i<n;i++){if((node=group[i])&&filter.call(node,node.__data__,i,j)){subgroup.push(node);}}}return d3_selection(subgroups);};function d3_selection_filter(selector){return function(){return _d3_selectMatches(this,selector);};}d3_selectionPrototype.order=function(){for(var j=-1,m=this.length;++j<m;){for(var group=this[j],i=group.length-1,next=group[i],node;--i>=0;){if(node=group[i]){if(next&&next!==node.nextSibling)next.parentNode.insertBefore(node,next);next=node;}}}return this;};d3_selectionPrototype.sort=function(comparator){comparator=d3_selection_sortComparator.apply(this,arguments);for(var j=-1,m=this.length;++j<m;){this[j].sort(comparator);}return this.order();};function d3_selection_sortComparator(comparator){if(!arguments.length)comparator=d3_ascending;return function(a,b){return a&&b?comparator(a.__data__,b.__data__):!a-!b;};}d3_selectionPrototype.each=function(callback){return d3_selection_each(this,function(node,i,j){callback.call(node,node.__data__,i,j);});};function d3_selection_each(groups,callback){for(var j=0,m=groups.length;j<m;j++){for(var group=groups[j],i=0,n=group.length,node;i<n;i++){if(node=group[i])callback(node,i,j);}}return groups;}d3_selectionPrototype.call=function(callback){var args=d3_array(arguments);callback.apply(args[0]=this,args);return this;};d3_selectionPrototype.empty=function(){return!this.node();};d3_selectionPrototype.node=function(){for(var j=0,m=this.length;j<m;j++){for(var group=this[j],i=0,n=group.length;i<n;i++){var node=group[i];if(node)return node;}}return null;};d3_selectionPrototype.size=function(){var n=0;d3_selection_each(this,function(){++n;});return n;};function d3_selection_enter(selection){d3_subclass(selection,d3_selection_enterPrototype);return selection;}var d3_selection_enterPrototype=[];d3.selection.enter=d3_selection_enter;d3.selection.enter.prototype=d3_selection_enterPrototype;d3_selection_enterPrototype.append=d3_selectionPrototype.append;d3_selection_enterPrototype.empty=d3_selectionPrototype.empty;d3_selection_enterPrototype.node=d3_selectionPrototype.node;d3_selection_enterPrototype.call=d3_selectionPrototype.call;d3_selection_enterPrototype.size=d3_selectionPrototype.size;d3_selection_enterPrototype.select=function(selector){var subgroups=[],subgroup,subnode,upgroup,group,node;for(var j=-1,m=this.length;++j<m;){upgroup=(group=this[j]).update;subgroups.push(subgroup=[]);subgroup.parentNode=group.parentNode;for(var i=-1,n=group.length;++i<n;){if(node=group[i]){subgroup.push(upgroup[i]=subnode=selector.call(group.parentNode,node.__data__,i,j));subnode.__data__=node.__data__;}else{subgroup.push(null);}}}return d3_selection(subgroups);};d3_selection_enterPrototype.insert=function(name,before){if(arguments.length<2)before=d3_selection_enterInsertBefore(this);return d3_selectionPrototype.insert.call(this,name,before);};function d3_selection_enterInsertBefore(enter){var i0,j0;return function(d,i,j){var group=enter[j].update,n=group.length,node;if(j!=j0)j0=j,i0=0;if(i>=i0)i0=i+1;while(!(node=group[i0])&&++i0<n){;}return node;};}d3.select=function(node){var group;if(typeof node===\"string\"){group=[d3_select(node,d3_document)];group.parentNode=d3_document.documentElement;}else{group=[node];group.parentNode=d3_documentElement(node);}return d3_selection([group]);};d3.selectAll=function(nodes){var group;if(typeof nodes===\"string\"){group=d3_array(d3_selectAll(nodes,d3_document));group.parentNode=d3_document.documentElement;}else{group=d3_array(nodes);group.parentNode=null;}return d3_selection([group]);};d3_selectionPrototype.on=function(type,listener,capture){var n=arguments.length;if(n<3){if(typeof type!==\"string\"){if(n<2)listener=false;for(capture in type){this.each(d3_selection_on(capture,type[capture],listener));}return this;}if(n<2)return(n=this.node()[\"__on\"+type])&&n._;capture=false;}return this.each(d3_selection_on(type,listener,capture));};function d3_selection_on(type,listener,capture){var name=\"__on\"+type,i=type.indexOf(\".\"),wrap=d3_selection_onListener;if(i>0)type=type.slice(0,i);var filter=d3_selection_onFilters.get(type);if(filter)type=filter,wrap=d3_selection_onFilter;function onRemove(){var l=this[name];if(l){this.removeEventListener(type,l,l.$);delete this[name];}}function onAdd(){var l=wrap(listener,d3_array(arguments));onRemove.call(this);this.addEventListener(type,this[name]=l,l.$=capture);l._=listener;}function removeAll(){var re=new RegExp(\"^__on([^.]+)\"+d3.requote(type)+\"$\"),match;for(var name in this){if(match=name.match(re)){var l=this[name];this.removeEventListener(match[1],l,l.$);delete this[name];}}}return i?listener?onAdd:onRemove:listener?d3_noop:removeAll;}var d3_selection_onFilters=d3.map({mouseenter:\"mouseover\",mouseleave:\"mouseout\"});if(d3_document){d3_selection_onFilters.forEach(function(k){if(\"on\"+k in d3_document)d3_selection_onFilters.remove(k);});}function d3_selection_onListener(listener,argumentz){return function(e){var o=d3.event;d3.event=e;argumentz[0]=this.__data__;try{listener.apply(this,argumentz);}finally{d3.event=o;}};}function d3_selection_onFilter(listener,argumentz){var l=d3_selection_onListener(listener,argumentz);return function(e){var target=this,related=e.relatedTarget;if(!related||related!==target&&!(related.compareDocumentPosition(target)&8)){l.call(target,e);}};}var d3_event_dragSelect,d3_event_dragId=0;function d3_event_dragSuppress(node){var name=\".dragsuppress-\"+ ++d3_event_dragId,click=\"click\"+name,w=d3.select(d3_window(node)).on(\"touchmove\"+name,d3_eventPreventDefault).on(\"dragstart\"+name,d3_eventPreventDefault).on(\"selectstart\"+name,d3_eventPreventDefault);if(d3_event_dragSelect==null){d3_event_dragSelect=\"onselectstart\"in node?false:d3_vendorSymbol(node.style,\"userSelect\");}if(d3_event_dragSelect){var style=d3_documentElement(node).style,select=style[d3_event_dragSelect];style[d3_event_dragSelect]=\"none\";}return function(suppressClick){w.on(name,null);if(d3_event_dragSelect)style[d3_event_dragSelect]=select;if(suppressClick){var off=function off(){w.on(click,null);};w.on(click,function(){d3_eventPreventDefault();off();},true);setTimeout(off,0);}};}d3.mouse=function(container){return d3_mousePoint(container,d3_eventSource());};var d3_mouse_bug44083=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;function d3_mousePoint(container,e){if(e.changedTouches)e=e.changedTouches[0];var svg=container.ownerSVGElement||container;if(svg.createSVGPoint){var point=svg.createSVGPoint();if(d3_mouse_bug44083<0){var window=d3_window(container);if(window.scrollX||window.scrollY){svg=d3.select(\"body\").append(\"svg\").style({position:\"absolute\",top:0,left:0,margin:0,padding:0,border:\"none\"},\"important\");var ctm=svg[0][0].getScreenCTM();d3_mouse_bug44083=!(ctm.f||ctm.e);svg.remove();}}if(d3_mouse_bug44083)point.x=e.pageX,point.y=e.pageY;else point.x=e.clientX,point.y=e.clientY;point=point.matrixTransform(container.getScreenCTM().inverse());return[point.x,point.y];}var rect=container.getBoundingClientRect();return[e.clientX-rect.left-container.clientLeft,e.clientY-rect.top-container.clientTop];}d3.touch=function(container,touches,identifier){if(arguments.length<3)identifier=touches,touches=d3_eventSource().changedTouches;if(touches)for(var i=0,n=touches.length,touch;i<n;++i){if((touch=touches[i]).identifier===identifier){return d3_mousePoint(container,touch);}}};d3.behavior.drag=function(){var event=d3_eventDispatch(drag,\"drag\",\"dragstart\",\"dragend\"),origin=null,mousedown=dragstart(d3_noop,d3.mouse,d3_window,\"mousemove\",\"mouseup\"),touchstart=dragstart(d3_behavior_dragTouchId,d3.touch,d3_identity,\"touchmove\",\"touchend\");function drag(){this.on(\"mousedown.drag\",mousedown).on(\"touchstart.drag\",touchstart);}function dragstart(id,position,subject,move,end){return function(){var that=this,target=d3.event.target.correspondingElement||d3.event.target,parent=that.parentNode,dispatch=event.of(that,arguments),dragged=0,dragId=id(),dragName=\".drag\"+(dragId==null?\"\":\"-\"+dragId),dragOffset,dragSubject=d3.select(subject(target)).on(move+dragName,moved).on(end+dragName,ended),dragRestore=d3_event_dragSuppress(target),position0=position(parent,dragId);if(origin){dragOffset=origin.apply(that,arguments);dragOffset=[dragOffset.x-position0[0],dragOffset.y-position0[1]];}else{dragOffset=[0,0];}dispatch({type:\"dragstart\"});function moved(){var position1=position(parent,dragId),dx,dy;if(!position1)return;dx=position1[0]-position0[0];dy=position1[1]-position0[1];dragged|=dx|dy;position0=position1;dispatch({type:\"drag\",x:position1[0]+dragOffset[0],y:position1[1]+dragOffset[1],dx:dx,dy:dy});}function ended(){if(!position(parent,dragId))return;dragSubject.on(move+dragName,null).on(end+dragName,null);dragRestore(dragged);dispatch({type:\"dragend\"});}};}drag.origin=function(x){if(!arguments.length)return origin;origin=x;return drag;};return d3.rebind(drag,event,\"on\");};function d3_behavior_dragTouchId(){return d3.event.changedTouches[0].identifier;}d3.touches=function(container,touches){if(arguments.length<2)touches=d3_eventSource().touches;return touches?d3_array(touches).map(function(touch){var point=d3_mousePoint(container,touch);point.identifier=touch.identifier;return point;}):[];};var ε=1e-6,ε2=ε*ε,π=Math.PI,τ=2*π,τε=τ-ε,halfπ=π/2,d3_radians=π/180,d3_degrees=180/π;function d3_sgn(x){return x>0?1:x<0?-1:0;}function d3_cross2d(a,b,c){return(b[0]-a[0])*(c[1]-a[1])-(b[1]-a[1])*(c[0]-a[0]);}function d3_acos(x){return x>1?0:x<-1?π:Math.acos(x);}function d3_asin(x){return x>1?halfπ:x<-1?-halfπ:Math.asin(x);}function d3_sinh(x){return((x=Math.exp(x))-1/x)/2;}function d3_cosh(x){return((x=Math.exp(x))+1/x)/2;}function d3_tanh(x){return((x=Math.exp(2*x))-1)/(x+1);}function d3_haversin(x){return(x=Math.sin(x/2))*x;}var ρ=Math.SQRT2,ρ2=2,ρ4=4;d3.interpolateZoom=function(p0,p1){var ux0=p0[0],uy0=p0[1],w0=p0[2],ux1=p1[0],uy1=p1[1],w1=p1[2],dx=ux1-ux0,dy=uy1-uy0,d2=dx*dx+dy*dy,i,S;if(d2<ε2){S=Math.log(w1/w0)/ρ;i=function i(t){return[ux0+t*dx,uy0+t*dy,w0*Math.exp(ρ*t*S)];};}else{var d1=Math.sqrt(d2),b0=(w1*w1-w0*w0+ρ4*d2)/(2*w0*ρ2*d1),b1=(w1*w1-w0*w0-ρ4*d2)/(2*w1*ρ2*d1),r0=Math.log(Math.sqrt(b0*b0+1)-b0),r1=Math.log(Math.sqrt(b1*b1+1)-b1);S=(r1-r0)/ρ;i=function i(t){var s=t*S,coshr0=d3_cosh(r0),u=w0/(ρ2*d1)*(coshr0*d3_tanh(ρ*s+r0)-d3_sinh(r0));return[ux0+u*dx,uy0+u*dy,w0*coshr0/d3_cosh(ρ*s+r0)];};}i.duration=S*1e3;return i;};d3.behavior.zoom=function(){var view={x:0,y:0,k:1},translate0,center0,center,size=[960,500],scaleExtent=d3_behavior_zoomInfinity,duration=250,zooming=0,mousedown=\"mousedown.zoom\",mousemove=\"mousemove.zoom\",mouseup=\"mouseup.zoom\",mousewheelTimer,touchstart=\"touchstart.zoom\",touchtime,event=d3_eventDispatch(zoom,\"zoomstart\",\"zoom\",\"zoomend\"),x0,x1,y0,y1;if(!d3_behavior_zoomWheel){d3_behavior_zoomWheel=\"onwheel\"in d3_document?(d3_behavior_zoomDelta=function d3_behavior_zoomDelta(){return-d3.event.deltaY*(d3.event.deltaMode?120:1);},\"wheel\"):\"onmousewheel\"in d3_document?(d3_behavior_zoomDelta=function d3_behavior_zoomDelta(){return d3.event.wheelDelta;},\"mousewheel\"):(d3_behavior_zoomDelta=function d3_behavior_zoomDelta(){return-d3.event.detail;},\"MozMousePixelScroll\");}function zoom(g){g.on(mousedown,mousedowned).on(d3_behavior_zoomWheel+\".zoom\",mousewheeled).on(\"dblclick.zoom\",dblclicked).on(touchstart,touchstarted);}zoom.event=function(g){g.each(function(){var dispatch=event.of(this,arguments),view1=view;if(d3_transitionInheritId){d3.select(this).transition().each(\"start.zoom\",function(){view=this.__chart__||{x:0,y:0,k:1};zoomstarted(dispatch);}).tween(\"zoom:zoom\",function(){var dx=size[0],dy=size[1],cx=center0?center0[0]:dx/2,cy=center0?center0[1]:dy/2,i=d3.interpolateZoom([(cx-view.x)/view.k,(cy-view.y)/view.k,dx/view.k],[(cx-view1.x)/view1.k,(cy-view1.y)/view1.k,dx/view1.k]);return function(t){var l=i(t),k=dx/l[2];this.__chart__=view={x:cx-l[0]*k,y:cy-l[1]*k,k:k};zoomed(dispatch);};}).each(\"interrupt.zoom\",function(){zoomended(dispatch);}).each(\"end.zoom\",function(){zoomended(dispatch);});}else{this.__chart__=view;zoomstarted(dispatch);zoomed(dispatch);zoomended(dispatch);}});};zoom.translate=function(_){if(!arguments.length)return[view.x,view.y];view={x:+_[0],y:+_[1],k:view.k};rescale();return zoom;};zoom.scale=function(_){if(!arguments.length)return view.k;view={x:view.x,y:view.y,k:null};scaleTo(+_);rescale();return zoom;};zoom.scaleExtent=function(_){if(!arguments.length)return scaleExtent;scaleExtent=_==null?d3_behavior_zoomInfinity:[+_[0],+_[1]];return zoom;};zoom.center=function(_){if(!arguments.length)return center;center=_&&[+_[0],+_[1]];return zoom;};zoom.size=function(_){if(!arguments.length)return size;size=_&&[+_[0],+_[1]];return zoom;};zoom.duration=function(_){if(!arguments.length)return duration;duration=+_;return zoom;};zoom.x=function(z){if(!arguments.length)return x1;x1=z;x0=z.copy();view={x:0,y:0,k:1};return zoom;};zoom.y=function(z){if(!arguments.length)return y1;y1=z;y0=z.copy();view={x:0,y:0,k:1};return zoom;};function location(p){return[(p[0]-view.x)/view.k,(p[1]-view.y)/view.k];}function point(l){return[l[0]*view.k+view.x,l[1]*view.k+view.y];}function scaleTo(s){view.k=Math.max(scaleExtent[0],Math.min(scaleExtent[1],s));}function translateTo(p,l){l=point(l);view.x+=p[0]-l[0];view.y+=p[1]-l[1];}function zoomTo(that,p,l,k){that.__chart__={x:view.x,y:view.y,k:view.k};scaleTo(Math.pow(2,k));translateTo(center0=p,l);that=d3.select(that);if(duration>0)that=that.transition().duration(duration);that.call(zoom.event);}function rescale(){if(x1)x1.domain(x0.range().map(function(x){return(x-view.x)/view.k;}).map(x0.invert));if(y1)y1.domain(y0.range().map(function(y){return(y-view.y)/view.k;}).map(y0.invert));}function zoomstarted(dispatch){if(!zooming++)dispatch({type:\"zoomstart\"});}function zoomed(dispatch){rescale();dispatch({type:\"zoom\",scale:view.k,translate:[view.x,view.y]});}function zoomended(dispatch){if(! --zooming)dispatch({type:\"zoomend\"}),center0=null;}function mousedowned(){var that=this,dispatch=event.of(that,arguments),dragged=0,subject=d3.select(d3_window(that)).on(mousemove,moved).on(mouseup,ended),location0=location(d3.mouse(that)),dragRestore=d3_event_dragSuppress(that);d3_selection_interrupt.call(that);zoomstarted(dispatch);function moved(){dragged=1;translateTo(d3.mouse(that),location0);zoomed(dispatch);}function ended(){subject.on(mousemove,null).on(mouseup,null);dragRestore(dragged);zoomended(dispatch);}}function touchstarted(){var that=this,dispatch=event.of(that,arguments),locations0={},distance0=0,scale0,zoomName=\".zoom-\"+d3.event.changedTouches[0].identifier,touchmove=\"touchmove\"+zoomName,touchend=\"touchend\"+zoomName,targets=[],subject=d3.select(that),dragRestore=d3_event_dragSuppress(that);started();zoomstarted(dispatch);subject.on(mousedown,null).on(touchstart,started);function relocate(){var touches=d3.touches(that);scale0=view.k;touches.forEach(function(t){if(t.identifier in locations0)locations0[t.identifier]=location(t);});return touches;}function started(){var target=d3.event.target;d3.select(target).on(touchmove,moved).on(touchend,ended);targets.push(target);var changed=d3.event.changedTouches;for(var i=0,n=changed.length;i<n;++i){locations0[changed[i].identifier]=null;}var touches=relocate(),now=Date.now();if(touches.length===1){if(now-touchtime<500){var p=touches[0];zoomTo(that,p,locations0[p.identifier],Math.floor(Math.log(view.k)/Math.LN2)+1);d3_eventPreventDefault();}touchtime=now;}else if(touches.length>1){var p=touches[0],q=touches[1],dx=p[0]-q[0],dy=p[1]-q[1];distance0=dx*dx+dy*dy;}}function moved(){var touches=d3.touches(that),p0,l0,p1,l1;d3_selection_interrupt.call(that);for(var i=0,n=touches.length;i<n;++i,l1=null){p1=touches[i];if(l1=locations0[p1.identifier]){if(l0)break;p0=p1,l0=l1;}}if(l1){var distance1=(distance1=p1[0]-p0[0])*distance1+(distance1=p1[1]-p0[1])*distance1,scale1=distance0&&Math.sqrt(distance1/distance0);p0=[(p0[0]+p1[0])/2,(p0[1]+p1[1])/2];l0=[(l0[0]+l1[0])/2,(l0[1]+l1[1])/2];scaleTo(scale1*scale0);}touchtime=null;translateTo(p0,l0);zoomed(dispatch);}function ended(){if(d3.event.touches.length){var changed=d3.event.changedTouches;for(var i=0,n=changed.length;i<n;++i){delete locations0[changed[i].identifier];}for(var identifier in locations0){return void relocate();}}d3.selectAll(targets).on(zoomName,null);subject.on(mousedown,mousedowned).on(touchstart,touchstarted);dragRestore();zoomended(dispatch);}}function mousewheeled(){var dispatch=event.of(this,arguments);if(mousewheelTimer)clearTimeout(mousewheelTimer);else d3_selection_interrupt.call(this),translate0=location(center0=center||d3.mouse(this)),zoomstarted(dispatch);mousewheelTimer=setTimeout(function(){mousewheelTimer=null;zoomended(dispatch);},50);d3_eventPreventDefault();scaleTo(Math.pow(2,d3_behavior_zoomDelta()*.002)*view.k);translateTo(center0,translate0);zoomed(dispatch);}function dblclicked(){var p=d3.mouse(this),k=Math.log(view.k)/Math.LN2;zoomTo(this,p,location(p),d3.event.shiftKey?Math.ceil(k)-1:Math.floor(k)+1);}return d3.rebind(zoom,event,\"on\");};var d3_behavior_zoomInfinity=[0,Infinity],d3_behavior_zoomDelta,d3_behavior_zoomWheel;d3.color=d3_color;function d3_color(){}d3_color.prototype.toString=function(){return this.rgb()+\"\";};d3.hsl=d3_hsl;function d3_hsl(h,s,l){return this instanceof d3_hsl?void(this.h=+h,this.s=+s,this.l=+l):arguments.length<2?h instanceof d3_hsl?new d3_hsl(h.h,h.s,h.l):d3_rgb_parse(\"\"+h,d3_rgb_hsl,d3_hsl):new d3_hsl(h,s,l);}var d3_hslPrototype=d3_hsl.prototype=new d3_color();d3_hslPrototype.brighter=function(k){k=Math.pow(.7,arguments.length?k:1);return new d3_hsl(this.h,this.s,this.l/k);};d3_hslPrototype.darker=function(k){k=Math.pow(.7,arguments.length?k:1);return new d3_hsl(this.h,this.s,k*this.l);};d3_hslPrototype.rgb=function(){return d3_hsl_rgb(this.h,this.s,this.l);};function d3_hsl_rgb(h,s,l){var m1,m2;h=isNaN(h)?0:(h%=360)<0?h+360:h;s=isNaN(s)?0:s<0?0:s>1?1:s;l=l<0?0:l>1?1:l;m2=l<=.5?l*(1+s):l+s-l*s;m1=2*l-m2;function v(h){if(h>360)h-=360;else if(h<0)h+=360;if(h<60)return m1+(m2-m1)*h/60;if(h<180)return m2;if(h<240)return m1+(m2-m1)*(240-h)/60;return m1;}function vv(h){return Math.round(v(h)*255);}return new d3_rgb(vv(h+120),vv(h),vv(h-120));}d3.hcl=d3_hcl;function d3_hcl(h,c,l){return this instanceof d3_hcl?void(this.h=+h,this.c=+c,this.l=+l):arguments.length<2?h instanceof d3_hcl?new d3_hcl(h.h,h.c,h.l):h instanceof d3_lab?d3_lab_hcl(h.l,h.a,h.b):d3_lab_hcl((h=d3_rgb_lab((h=d3.rgb(h)).r,h.g,h.b)).l,h.a,h.b):new d3_hcl(h,c,l);}var d3_hclPrototype=d3_hcl.prototype=new d3_color();d3_hclPrototype.brighter=function(k){return new d3_hcl(this.h,this.c,Math.min(100,this.l+d3_lab_K*(arguments.length?k:1)));};d3_hclPrototype.darker=function(k){return new d3_hcl(this.h,this.c,Math.max(0,this.l-d3_lab_K*(arguments.length?k:1)));};d3_hclPrototype.rgb=function(){return d3_hcl_lab(this.h,this.c,this.l).rgb();};function d3_hcl_lab(h,c,l){if(isNaN(h))h=0;if(isNaN(c))c=0;return new d3_lab(l,Math.cos(h*=d3_radians)*c,Math.sin(h)*c);}d3.lab=d3_lab;function d3_lab(l,a,b){return this instanceof d3_lab?void(this.l=+l,this.a=+a,this.b=+b):arguments.length<2?l instanceof d3_lab?new d3_lab(l.l,l.a,l.b):l instanceof d3_hcl?d3_hcl_lab(l.h,l.c,l.l):d3_rgb_lab((l=d3_rgb(l)).r,l.g,l.b):new d3_lab(l,a,b);}var d3_lab_K=18;var d3_lab_X=.95047,d3_lab_Y=1,d3_lab_Z=1.08883;var d3_labPrototype=d3_lab.prototype=new d3_color();d3_labPrototype.brighter=function(k){return new d3_lab(Math.min(100,this.l+d3_lab_K*(arguments.length?k:1)),this.a,this.b);};d3_labPrototype.darker=function(k){return new d3_lab(Math.max(0,this.l-d3_lab_K*(arguments.length?k:1)),this.a,this.b);};d3_labPrototype.rgb=function(){return d3_lab_rgb(this.l,this.a,this.b);};function d3_lab_rgb(l,a,b){var y=(l+16)/116,x=y+a/500,z=y-b/200;x=d3_lab_xyz(x)*d3_lab_X;y=d3_lab_xyz(y)*d3_lab_Y;z=d3_lab_xyz(z)*d3_lab_Z;return new d3_rgb(d3_xyz_rgb(3.2404542*x-1.5371385*y-.4985314*z),d3_xyz_rgb(-.969266*x+1.8760108*y+.041556*z),d3_xyz_rgb(.0556434*x-.2040259*y+1.0572252*z));}function d3_lab_hcl(l,a,b){return l>0?new d3_hcl(Math.atan2(b,a)*d3_degrees,Math.sqrt(a*a+b*b),l):new d3_hcl(NaN,NaN,l);}function d3_lab_xyz(x){return x>.206893034?x*x*x:(x-4/29)/7.787037;}function d3_xyz_lab(x){return x>.008856?Math.pow(x,1/3):7.787037*x+4/29;}function d3_xyz_rgb(r){return Math.round(255*(r<=.00304?12.92*r:1.055*Math.pow(r,1/2.4)-.055));}d3.rgb=d3_rgb;function d3_rgb(r,g,b){return this instanceof d3_rgb?void(this.r=~~r,this.g=~~g,this.b=~~b):arguments.length<2?r instanceof d3_rgb?new d3_rgb(r.r,r.g,r.b):d3_rgb_parse(\"\"+r,d3_rgb,d3_hsl_rgb):new d3_rgb(r,g,b);}function d3_rgbNumber(value){return new d3_rgb(value>>16,value>>8&255,value&255);}function d3_rgbString(value){return d3_rgbNumber(value)+\"\";}var d3_rgbPrototype=d3_rgb.prototype=new d3_color();d3_rgbPrototype.brighter=function(k){k=Math.pow(.7,arguments.length?k:1);var r=this.r,g=this.g,b=this.b,i=30;if(!r&&!g&&!b)return new d3_rgb(i,i,i);if(r&&r<i)r=i;if(g&&g<i)g=i;if(b&&b<i)b=i;return new d3_rgb(Math.min(255,r/k),Math.min(255,g/k),Math.min(255,b/k));};d3_rgbPrototype.darker=function(k){k=Math.pow(.7,arguments.length?k:1);return new d3_rgb(k*this.r,k*this.g,k*this.b);};d3_rgbPrototype.hsl=function(){return d3_rgb_hsl(this.r,this.g,this.b);};d3_rgbPrototype.toString=function(){return\"#\"+d3_rgb_hex(this.r)+d3_rgb_hex(this.g)+d3_rgb_hex(this.b);};function d3_rgb_hex(v){return v<16?\"0\"+Math.max(0,v).toString(16):Math.min(255,v).toString(16);}function d3_rgb_parse(format,rgb,hsl){var r=0,g=0,b=0,m1,m2,color;m1=/([a-z]+)\\((.*)\\)/.exec(format=format.toLowerCase());if(m1){m2=m1[2].split(\",\");switch(m1[1]){case\"hsl\":{return hsl(parseFloat(m2[0]),parseFloat(m2[1])/100,parseFloat(m2[2])/100);}case\"rgb\":{return rgb(d3_rgb_parseNumber(m2[0]),d3_rgb_parseNumber(m2[1]),d3_rgb_parseNumber(m2[2]));}}}if(color=d3_rgb_names.get(format)){return rgb(color.r,color.g,color.b);}if(format!=null&&format.charAt(0)===\"#\"&&!isNaN(color=parseInt(format.slice(1),16))){if(format.length===4){r=(color&3840)>>4;r=r>>4|r;g=color&240;g=g>>4|g;b=color&15;b=b<<4|b;}else if(format.length===7){r=(color&16711680)>>16;g=(color&65280)>>8;b=color&255;}}return rgb(r,g,b);}function d3_rgb_hsl(r,g,b){var min=Math.min(r/=255,g/=255,b/=255),max=Math.max(r,g,b),d=max-min,h,s,l=(max+min)/2;if(d){s=l<.5?d/(max+min):d/(2-max-min);if(r==max)h=(g-b)/d+(g<b?6:0);else if(g==max)h=(b-r)/d+2;else h=(r-g)/d+4;h*=60;}else{h=NaN;s=l>0&&l<1?0:h;}return new d3_hsl(h,s,l);}function d3_rgb_lab(r,g,b){r=d3_rgb_xyz(r);g=d3_rgb_xyz(g);b=d3_rgb_xyz(b);var x=d3_xyz_lab((.4124564*r+.3575761*g+.1804375*b)/d3_lab_X),y=d3_xyz_lab((.2126729*r+.7151522*g+.072175*b)/d3_lab_Y),z=d3_xyz_lab((.0193339*r+.119192*g+.9503041*b)/d3_lab_Z);return d3_lab(116*y-16,500*(x-y),200*(y-z));}function d3_rgb_xyz(r){return(r/=255)<=.04045?r/12.92:Math.pow((r+.055)/1.055,2.4);}function d3_rgb_parseNumber(c){var f=parseFloat(c);return c.charAt(c.length-1)===\"%\"?Math.round(f*2.55):f;}var d3_rgb_names=d3.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});d3_rgb_names.forEach(function(key,value){d3_rgb_names.set(key,d3_rgbNumber(value));});function d3_functor(v){return typeof v===\"function\"?v:function(){return v;};}d3.functor=d3_functor;d3.xhr=d3_xhrType(d3_identity);function d3_xhrType(response){return function(url,mimeType,callback){if(arguments.length===2&&typeof mimeType===\"function\")callback=mimeType,mimeType=null;return d3_xhr(url,mimeType,response,callback);};}function d3_xhr(url,mimeType,response,callback){var xhr={},dispatch=d3.dispatch(\"beforesend\",\"progress\",\"load\",\"error\"),headers={},request=new XMLHttpRequest(),responseType=null;if(this.XDomainRequest&&!(\"withCredentials\"in request)&&/^(http(s)?:)?\\/\\//.test(url))request=new XDomainRequest();\"onload\"in request?request.onload=request.onerror=respond:request.onreadystatechange=function(){request.readyState>3&&respond();};function respond(){var status=request.status,result;if(!status&&d3_xhrHasResponse(request)||status>=200&&status<300||status===304){try{result=response.call(xhr,request);}catch(e){dispatch.error.call(xhr,e);return;}dispatch.load.call(xhr,result);}else{dispatch.error.call(xhr,request);}}request.onprogress=function(event){var o=d3.event;d3.event=event;try{dispatch.progress.call(xhr,request);}finally{d3.event=o;}};xhr.header=function(name,value){name=(name+\"\").toLowerCase();if(arguments.length<2)return headers[name];if(value==null)delete headers[name];else headers[name]=value+\"\";return xhr;};xhr.mimeType=function(value){if(!arguments.length)return mimeType;mimeType=value==null?null:value+\"\";return xhr;};xhr.responseType=function(value){if(!arguments.length)return responseType;responseType=value;return xhr;};xhr.response=function(value){response=value;return xhr;};[\"get\",\"post\"].forEach(function(method){xhr[method]=function(){return xhr.send.apply(xhr,[method].concat(d3_array(arguments)));};});xhr.send=function(method,data,callback){if(arguments.length===2&&typeof data===\"function\")callback=data,data=null;request.open(method,url,true);if(mimeType!=null&&!(\"accept\"in headers))headers[\"accept\"]=mimeType+\",*/*\";if(request.setRequestHeader)for(var name in headers){request.setRequestHeader(name,headers[name]);}if(mimeType!=null&&request.overrideMimeType)request.overrideMimeType(mimeType);if(responseType!=null)request.responseType=responseType;if(callback!=null)xhr.on(\"error\",callback).on(\"load\",function(request){callback(null,request);});dispatch.beforesend.call(xhr,request);request.send(data==null?null:data);return xhr;};xhr.abort=function(){request.abort();return xhr;};d3.rebind(xhr,dispatch,\"on\");return callback==null?xhr:xhr.get(d3_xhr_fixCallback(callback));}function d3_xhr_fixCallback(callback){return callback.length===1?function(error,request){callback(error==null?request:null);}:callback;}function d3_xhrHasResponse(request){var type=request.responseType;return type&&type!==\"text\"?request.response:request.responseText;}d3.dsv=function(delimiter,mimeType){var reFormat=new RegExp('[\"'+delimiter+\"\\n]\"),delimiterCode=delimiter.charCodeAt(0);function dsv(url,row,callback){if(arguments.length<3)callback=row,row=null;var xhr=d3_xhr(url,mimeType,row==null?response:typedResponse(row),callback);xhr.row=function(_){return arguments.length?xhr.response((row=_)==null?response:typedResponse(_)):row;};return xhr;}function response(request){return dsv.parse(request.responseText);}function typedResponse(f){return function(request){return dsv.parse(request.responseText,f);};}dsv.parse=function(text,f){var o;return dsv.parseRows(text,function(row,i){if(o)return o(row,i-1);var a=new Function(\"d\",\"return {\"+row.map(function(name,i){return JSON.stringify(name)+\": d[\"+i+\"]\";}).join(\",\")+\"}\");o=f?function(row,i){return f(a(row),i);}:a;});};dsv.parseRows=function(text,f){var EOL={},EOF={},rows=[],N=text.length,I=0,n=0,t,eol;function token(){if(I>=N)return EOF;if(eol)return eol=false,EOL;var j=I;if(text.charCodeAt(j)===34){var i=j;while(i++<N){if(text.charCodeAt(i)===34){if(text.charCodeAt(i+1)!==34)break;++i;}}I=i+2;var c=text.charCodeAt(i+1);if(c===13){eol=true;if(text.charCodeAt(i+2)===10)++I;}else if(c===10){eol=true;}return text.slice(j+1,i).replace(/\"\"/g,'\"');}while(I<N){var c=text.charCodeAt(I++),k=1;if(c===10)eol=true;else if(c===13){eol=true;if(text.charCodeAt(I)===10)++I,++k;}else if(c!==delimiterCode)continue;return text.slice(j,I-k);}return text.slice(j);}while((t=token())!==EOF){var a=[];while(t!==EOL&&t!==EOF){a.push(t);t=token();}if(f&&(a=f(a,n++))==null)continue;rows.push(a);}return rows;};dsv.format=function(rows){if(Array.isArray(rows[0]))return dsv.formatRows(rows);var fieldSet=new d3_Set(),fields=[];rows.forEach(function(row){for(var field in row){if(!fieldSet.has(field)){fields.push(fieldSet.add(field));}}});return[fields.map(formatValue).join(delimiter)].concat(rows.map(function(row){return fields.map(function(field){return formatValue(row[field]);}).join(delimiter);})).join(\"\\n\");};dsv.formatRows=function(rows){return rows.map(formatRow).join(\"\\n\");};function formatRow(row){return row.map(formatValue).join(delimiter);}function formatValue(text){return reFormat.test(text)?'\"'+text.replace(/\\\"/g,'\"\"')+'\"':text;}return dsv;};d3.csv=d3.dsv(\",\",\"text/csv\");d3.tsv=d3.dsv(\"\t\",\"text/tab-separated-values\");var d3_timer_queueHead,d3_timer_queueTail,d3_timer_interval,d3_timer_timeout,d3_timer_frame=this[d3_vendorSymbol(this,\"requestAnimationFrame\")]||function(callback){setTimeout(callback,17);};d3.timer=function(){d3_timer.apply(this,arguments);};function d3_timer(callback,delay,then){var n=arguments.length;if(n<2)delay=0;if(n<3)then=Date.now();var time=then+delay,timer={c:callback,t:time,n:null};if(d3_timer_queueTail)d3_timer_queueTail.n=timer;else d3_timer_queueHead=timer;d3_timer_queueTail=timer;if(!d3_timer_interval){d3_timer_timeout=clearTimeout(d3_timer_timeout);d3_timer_interval=1;d3_timer_frame(d3_timer_step);}return timer;}function d3_timer_step(){var now=d3_timer_mark(),delay=d3_timer_sweep()-now;if(delay>24){if(isFinite(delay)){clearTimeout(d3_timer_timeout);d3_timer_timeout=setTimeout(d3_timer_step,delay);}d3_timer_interval=0;}else{d3_timer_interval=1;d3_timer_frame(d3_timer_step);}}d3.timer.flush=function(){d3_timer_mark();d3_timer_sweep();};function d3_timer_mark(){var now=Date.now(),timer=d3_timer_queueHead;while(timer){if(now>=timer.t&&timer.c(now-timer.t))timer.c=null;timer=timer.n;}return now;}function d3_timer_sweep(){var t0,t1=d3_timer_queueHead,time=Infinity;while(t1){if(t1.c){if(t1.t<time)time=t1.t;t1=(t0=t1).n;}else{t1=t0?t0.n=t1.n:d3_timer_queueHead=t1.n;}}d3_timer_queueTail=t0;return time;}function d3_format_precision(x,p){return p-(x?Math.ceil(Math.log(x)/Math.LN10):1);}d3.round=function(x,n){return n?Math.round(x*(n=Math.pow(10,n)))/n:Math.round(x);};var d3_formatPrefixes=[\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"].map(d3_formatPrefix);d3.formatPrefix=function(value,precision){var i=0;if(value=+value){if(value<0)value*=-1;if(precision)value=d3.round(value,d3_format_precision(value,precision));i=1+Math.floor(1e-12+Math.log(value)/Math.LN10);i=Math.max(-24,Math.min(24,Math.floor((i-1)/3)*3));}return d3_formatPrefixes[8+i/3];};function d3_formatPrefix(d,i){var k=Math.pow(10,abs(8-i)*3);return{scale:i>8?function(d){return d/k;}:function(d){return d*k;},symbol:d};}function d3_locale_numberFormat(locale){var locale_decimal=locale.decimal,locale_thousands=locale.thousands,locale_grouping=locale.grouping,locale_currency=locale.currency,formatGroup=locale_grouping&&locale_thousands?function(value,width){var i=value.length,t=[],j=0,g=locale_grouping[0],length=0;while(i>0&&g>0){if(length+g+1>width)g=Math.max(1,width-length);t.push(value.substring(i-=g,i+g));if((length+=g+1)>width)break;g=locale_grouping[j=(j+1)%locale_grouping.length];}return t.reverse().join(locale_thousands);}:d3_identity;return function(specifier){var match=d3_format_re.exec(specifier),fill=match[1]||\" \",align=match[2]||\">\",sign=match[3]||\"-\",symbol=match[4]||\"\",zfill=match[5],width=+match[6],comma=match[7],precision=match[8],type=match[9],scale=1,prefix=\"\",suffix=\"\",integer=false,exponent=true;if(precision)precision=+precision.substring(1);if(zfill||fill===\"0\"&&align===\"=\"){zfill=fill=\"0\";align=\"=\";}switch(type){case\"n\":comma=true;type=\"g\";break;case\"%\":scale=100;suffix=\"%\";type=\"f\";break;case\"p\":scale=100;suffix=\"%\";type=\"r\";break;case\"b\":case\"o\":case\"x\":case\"X\":if(symbol===\"#\")prefix=\"0\"+type.toLowerCase();case\"c\":exponent=false;case\"d\":integer=true;precision=0;break;case\"s\":scale=-1;type=\"r\";break;}if(symbol===\"$\")prefix=locale_currency[0],suffix=locale_currency[1];if(type==\"r\"&&!precision)type=\"g\";if(precision!=null){if(type==\"g\")precision=Math.max(1,Math.min(21,precision));else if(type==\"e\"||type==\"f\")precision=Math.max(0,Math.min(20,precision));}type=d3_format_types.get(type)||d3_format_typeDefault;var zcomma=zfill&&comma;return function(value){var fullSuffix=suffix;if(integer&&value%1)return\"\";var negative=value<0||value===0&&1/value<0?(value=-value,\"-\"):sign===\"-\"?\"\":sign;if(scale<0){var unit=d3.formatPrefix(value,precision);value=unit.scale(value);fullSuffix=unit.symbol+suffix;}else{value*=scale;}value=type(value,precision);var i=value.lastIndexOf(\".\"),before,after;if(i<0){var j=exponent?value.lastIndexOf(\"e\"):-1;if(j<0)before=value,after=\"\";else before=value.substring(0,j),after=value.substring(j);}else{before=value.substring(0,i);after=locale_decimal+value.substring(i+1);}if(!zfill&&comma)before=formatGroup(before,Infinity);var length=prefix.length+before.length+after.length+(zcomma?0:negative.length),padding=length<width?new Array(length=width-length+1).join(fill):\"\";if(zcomma)before=formatGroup(padding+before,padding.length?width-after.length:Infinity);negative+=prefix;value=before+after;return(align===\"<\"?negative+value+padding:align===\">\"?padding+negative+value:align===\"^\"?padding.substring(0,length>>=1)+negative+value+padding.substring(length):negative+(zcomma?value:padding+value))+fullSuffix;};};}var d3_format_re=/(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;var d3_format_types=d3.map({b:function b(x){return x.toString(2);},c:function c(x){return String.fromCharCode(x);},o:function o(x){return x.toString(8);},x:function x(_x2){return _x2.toString(16);},X:function X(x){return x.toString(16).toUpperCase();},g:function g(x,p){return x.toPrecision(p);},e:function e(x,p){return x.toExponential(p);},f:function f(x,p){return x.toFixed(p);},r:function r(x,p){return(x=d3.round(x,d3_format_precision(x,p))).toFixed(Math.max(0,Math.min(20,d3_format_precision(x*(1+1e-15),p))));}});function d3_format_typeDefault(x){return x+\"\";}var d3_time=d3.time={},d3_date=Date;function d3_date_utc(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0]);}d3_date_utc.prototype={getDate:function getDate(){return this._.getUTCDate();},getDay:function getDay(){return this._.getUTCDay();},getFullYear:function getFullYear(){return this._.getUTCFullYear();},getHours:function getHours(){return this._.getUTCHours();},getMilliseconds:function getMilliseconds(){return this._.getUTCMilliseconds();},getMinutes:function getMinutes(){return this._.getUTCMinutes();},getMonth:function getMonth(){return this._.getUTCMonth();},getSeconds:function getSeconds(){return this._.getUTCSeconds();},getTime:function getTime(){return this._.getTime();},getTimezoneOffset:function getTimezoneOffset(){return 0;},valueOf:function valueOf(){return this._.valueOf();},setDate:function setDate(){d3_time_prototype.setUTCDate.apply(this._,arguments);},setDay:function setDay(){d3_time_prototype.setUTCDay.apply(this._,arguments);},setFullYear:function setFullYear(){d3_time_prototype.setUTCFullYear.apply(this._,arguments);},setHours:function setHours(){d3_time_prototype.setUTCHours.apply(this._,arguments);},setMilliseconds:function setMilliseconds(){d3_time_prototype.setUTCMilliseconds.apply(this._,arguments);},setMinutes:function setMinutes(){d3_time_prototype.setUTCMinutes.apply(this._,arguments);},setMonth:function setMonth(){d3_time_prototype.setUTCMonth.apply(this._,arguments);},setSeconds:function setSeconds(){d3_time_prototype.setUTCSeconds.apply(this._,arguments);},setTime:function setTime(){d3_time_prototype.setTime.apply(this._,arguments);}};var d3_time_prototype=Date.prototype;function d3_time_interval(local,step,number){function round(date){var d0=local(date),d1=offset(d0,1);return date-d0<d1-date?d0:d1;}function ceil(date){step(date=local(new d3_date(date-1)),1);return date;}function offset(date,k){step(date=new d3_date(+date),k);return date;}function range(t0,t1,dt){var time=ceil(t0),times=[];if(dt>1){while(time<t1){if(!(number(time)%dt))times.push(new Date(+time));step(time,1);}}else{while(time<t1){times.push(new Date(+time)),step(time,1);}}return times;}function range_utc(t0,t1,dt){try{d3_date=d3_date_utc;var utc=new d3_date_utc();utc._=t0;return range(utc,t1,dt);}finally{d3_date=Date;}}local.floor=local;local.round=round;local.ceil=ceil;local.offset=offset;local.range=range;var utc=local.utc=d3_time_interval_utc(local);utc.floor=utc;utc.round=d3_time_interval_utc(round);utc.ceil=d3_time_interval_utc(ceil);utc.offset=d3_time_interval_utc(offset);utc.range=range_utc;return local;}function d3_time_interval_utc(method){return function(date,k){try{d3_date=d3_date_utc;var utc=new d3_date_utc();utc._=date;return method(utc,k)._;}finally{d3_date=Date;}};}d3_time.year=d3_time_interval(function(date){date=d3_time.day(date);date.setMonth(0,1);return date;},function(date,offset){date.setFullYear(date.getFullYear()+offset);},function(date){return date.getFullYear();});d3_time.years=d3_time.year.range;d3_time.years.utc=d3_time.year.utc.range;d3_time.day=d3_time_interval(function(date){var day=new d3_date(2e3,0);day.setFullYear(date.getFullYear(),date.getMonth(),date.getDate());return day;},function(date,offset){date.setDate(date.getDate()+offset);},function(date){return date.getDate()-1;});d3_time.days=d3_time.day.range;d3_time.days.utc=d3_time.day.utc.range;d3_time.dayOfYear=function(date){var year=d3_time.year(date);return Math.floor((date-year-(date.getTimezoneOffset()-year.getTimezoneOffset())*6e4)/864e5);};[\"sunday\",\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\"].forEach(function(day,i){i=7-i;var interval=d3_time[day]=d3_time_interval(function(date){(date=d3_time.day(date)).setDate(date.getDate()-(date.getDay()+i)%7);return date;},function(date,offset){date.setDate(date.getDate()+Math.floor(offset)*7);},function(date){var day=d3_time.year(date).getDay();return Math.floor((d3_time.dayOfYear(date)+(day+i)%7)/7)-(day!==i);});d3_time[day+\"s\"]=interval.range;d3_time[day+\"s\"].utc=interval.utc.range;d3_time[day+\"OfYear\"]=function(date){var day=d3_time.year(date).getDay();return Math.floor((d3_time.dayOfYear(date)+(day+i)%7)/7);};});d3_time.week=d3_time.sunday;d3_time.weeks=d3_time.sunday.range;d3_time.weeks.utc=d3_time.sunday.utc.range;d3_time.weekOfYear=d3_time.sundayOfYear;function d3_locale_timeFormat(locale){var locale_dateTime=locale.dateTime,locale_date=locale.date,locale_time=locale.time,locale_periods=locale.periods,locale_days=locale.days,locale_shortDays=locale.shortDays,locale_months=locale.months,locale_shortMonths=locale.shortMonths;function d3_time_format(template){var n=template.length;function format(date){var string=[],i=-1,j=0,c,p,f;while(++i<n){if(template.charCodeAt(i)===37){string.push(template.slice(j,i));if((p=d3_time_formatPads[c=template.charAt(++i)])!=null)c=template.charAt(++i);if(f=d3_time_formats[c])c=f(date,p==null?c===\"e\"?\" \":\"0\":p);string.push(c);j=i+1;}}string.push(template.slice(j,i));return string.join(\"\");}format.parse=function(string){var d={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null},i=d3_time_parse(d,template,string,0);if(i!=string.length)return null;if(\"p\"in d)d.H=d.H%12+d.p*12;var localZ=d.Z!=null&&d3_date!==d3_date_utc,date=new(localZ?d3_date_utc:d3_date)();if(\"j\"in d)date.setFullYear(d.y,0,d.j);else if(\"W\"in d||\"U\"in d){if(!(\"w\"in d))d.w=\"W\"in d?1:0;date.setFullYear(d.y,0,1);date.setFullYear(d.y,0,\"W\"in d?(d.w+6)%7+d.W*7-(date.getDay()+5)%7:d.w+d.U*7-(date.getDay()+6)%7);}else date.setFullYear(d.y,d.m,d.d);date.setHours(d.H+(d.Z/100|0),d.M+d.Z%100,d.S,d.L);return localZ?date._:date;};format.toString=function(){return template;};return format;}function d3_time_parse(date,template,string,j){var c,p,t,i=0,n=template.length,m=string.length;while(i<n){if(j>=m)return-1;c=template.charCodeAt(i++);if(c===37){t=template.charAt(i++);p=d3_time_parsers[t in d3_time_formatPads?template.charAt(i++):t];if(!p||(j=p(date,string,j))<0)return-1;}else if(c!=string.charCodeAt(j++)){return-1;}}return j;}d3_time_format.utc=function(template){var local=d3_time_format(template);function format(date){try{d3_date=d3_date_utc;var utc=new d3_date();utc._=date;return local(utc);}finally{d3_date=Date;}}format.parse=function(string){try{d3_date=d3_date_utc;var date=local.parse(string);return date&&date._;}finally{d3_date=Date;}};format.toString=local.toString;return format;};d3_time_format.multi=d3_time_format.utc.multi=d3_time_formatMulti;var d3_time_periodLookup=d3.map(),d3_time_dayRe=d3_time_formatRe(locale_days),d3_time_dayLookup=d3_time_formatLookup(locale_days),d3_time_dayAbbrevRe=d3_time_formatRe(locale_shortDays),d3_time_dayAbbrevLookup=d3_time_formatLookup(locale_shortDays),d3_time_monthRe=d3_time_formatRe(locale_months),d3_time_monthLookup=d3_time_formatLookup(locale_months),d3_time_monthAbbrevRe=d3_time_formatRe(locale_shortMonths),d3_time_monthAbbrevLookup=d3_time_formatLookup(locale_shortMonths);locale_periods.forEach(function(p,i){d3_time_periodLookup.set(p.toLowerCase(),i);});var d3_time_formats={a:function a(d){return locale_shortDays[d.getDay()];},A:function A(d){return locale_days[d.getDay()];},b:function b(d){return locale_shortMonths[d.getMonth()];},B:function B(d){return locale_months[d.getMonth()];},c:d3_time_format(locale_dateTime),d:function d(_d,p){return d3_time_formatPad(_d.getDate(),p,2);},e:function e(d,p){return d3_time_formatPad(d.getDate(),p,2);},H:function H(d,p){return d3_time_formatPad(d.getHours(),p,2);},I:function I(d,p){return d3_time_formatPad(d.getHours()%12||12,p,2);},j:function j(d,p){return d3_time_formatPad(1+d3_time.dayOfYear(d),p,3);},L:function L(d,p){return d3_time_formatPad(d.getMilliseconds(),p,3);},m:function m(d,p){return d3_time_formatPad(d.getMonth()+1,p,2);},M:function M(d,p){return d3_time_formatPad(d.getMinutes(),p,2);},p:function p(d){return locale_periods[+(d.getHours()>=12)];},S:function S(d,p){return d3_time_formatPad(d.getSeconds(),p,2);},U:function U(d,p){return d3_time_formatPad(d3_time.sundayOfYear(d),p,2);},w:function w(d){return d.getDay();},W:function W(d,p){return d3_time_formatPad(d3_time.mondayOfYear(d),p,2);},x:d3_time_format(locale_date),X:d3_time_format(locale_time),y:function y(d,p){return d3_time_formatPad(d.getFullYear()%100,p,2);},Y:function Y(d,p){return d3_time_formatPad(d.getFullYear()%1e4,p,4);},Z:d3_time_zone,\"%\":function _(){return\"%\";}};var d3_time_parsers={a:d3_time_parseWeekdayAbbrev,A:d3_time_parseWeekday,b:d3_time_parseMonthAbbrev,B:d3_time_parseMonth,c:d3_time_parseLocaleFull,d:d3_time_parseDay,e:d3_time_parseDay,H:d3_time_parseHour24,I:d3_time_parseHour24,j:d3_time_parseDayOfYear,L:d3_time_parseMilliseconds,m:d3_time_parseMonthNumber,M:d3_time_parseMinutes,p:d3_time_parseAmPm,S:d3_time_parseSeconds,U:d3_time_parseWeekNumberSunday,w:d3_time_parseWeekdayNumber,W:d3_time_parseWeekNumberMonday,x:d3_time_parseLocaleDate,X:d3_time_parseLocaleTime,y:d3_time_parseYear,Y:d3_time_parseFullYear,Z:d3_time_parseZone,\"%\":d3_time_parseLiteralPercent};function d3_time_parseWeekdayAbbrev(date,string,i){d3_time_dayAbbrevRe.lastIndex=0;var n=d3_time_dayAbbrevRe.exec(string.slice(i));return n?(date.w=d3_time_dayAbbrevLookup.get(n[0].toLowerCase()),i+n[0].length):-1;}function d3_time_parseWeekday(date,string,i){d3_time_dayRe.lastIndex=0;var n=d3_time_dayRe.exec(string.slice(i));return n?(date.w=d3_time_dayLookup.get(n[0].toLowerCase()),i+n[0].length):-1;}function d3_time_parseMonthAbbrev(date,string,i){d3_time_monthAbbrevRe.lastIndex=0;var n=d3_time_monthAbbrevRe.exec(string.slice(i));return n?(date.m=d3_time_monthAbbrevLookup.get(n[0].toLowerCase()),i+n[0].length):-1;}function d3_time_parseMonth(date,string,i){d3_time_monthRe.lastIndex=0;var n=d3_time_monthRe.exec(string.slice(i));return n?(date.m=d3_time_monthLookup.get(n[0].toLowerCase()),i+n[0].length):-1;}function d3_time_parseLocaleFull(date,string,i){return d3_time_parse(date,d3_time_formats.c.toString(),string,i);}function d3_time_parseLocaleDate(date,string,i){return d3_time_parse(date,d3_time_formats.x.toString(),string,i);}function d3_time_parseLocaleTime(date,string,i){return d3_time_parse(date,d3_time_formats.X.toString(),string,i);}function d3_time_parseAmPm(date,string,i){var n=d3_time_periodLookup.get(string.slice(i,i+=2).toLowerCase());return n==null?-1:(date.p=n,i);}return d3_time_format;}var d3_time_formatPads={\"-\":\"\",_:\" \",\"0\":\"0\"},d3_time_numberRe=/^\\s*\\d+/,d3_time_percentRe=/^%/;function d3_time_formatPad(value,fill,width){var sign=value<0?\"-\":\"\",string=(sign?-value:value)+\"\",length=string.length;return sign+(length<width?new Array(width-length+1).join(fill)+string:string);}function d3_time_formatRe(names){return new RegExp(\"^(?:\"+names.map(d3.requote).join(\"|\")+\")\",\"i\");}function d3_time_formatLookup(names){var map=new d3_Map(),i=-1,n=names.length;while(++i<n){map.set(names[i].toLowerCase(),i);}return map;}function d3_time_parseWeekdayNumber(date,string,i){d3_time_numberRe.lastIndex=0;var n=d3_time_numberRe.exec(string.slice(i,i+1));return n?(date.w=+n[0],i+n[0].length):-1;}function d3_time_parseWeekNumberSunday(date,string,i){d3_time_numberRe.lastIndex=0;var n=d3_time_numberRe.exec(string.slice(i));return n?(date.U=+n[0],i+n[0].length):-1;}function d3_time_parseWeekNumberMonday(date,string,i){d3_time_numberRe.lastIndex=0;var n=d3_time_numberRe.exec(string.slice(i));return n?(date.W=+n[0],i+n[0].length):-1;}function d3_time_parseFullYear(date,string,i){d3_time_numberRe.lastIndex=0;var n=d3_time_numberRe.exec(string.slice(i,i+4));return n?(date.y=+n[0],i+n[0].length):-1;}function d3_time_parseYear(date,string,i){d3_time_numberRe.lastIndex=0;var n=d3_time_numberRe.exec(string.slice(i,i+2));return n?(date.y=d3_time_expandYear(+n[0]),i+n[0].length):-1;}function d3_time_parseZone(date,string,i){return /^[+-]\\d{4}$/.test(string=string.slice(i,i+5))?(date.Z=-string,i+5):-1;}function d3_time_expandYear(d){return d+(d>68?1900:2e3);}function d3_time_parseMonthNumber(date,string,i){d3_time_numberRe.lastIndex=0;var n=d3_time_numberRe.exec(string.slice(i,i+2));return n?(date.m=n[0]-1,i+n[0].length):-1;}function d3_time_parseDay(date,string,i){d3_time_numberRe.lastIndex=0;var n=d3_time_numberRe.exec(string.slice(i,i+2));return n?(date.d=+n[0],i+n[0].length):-1;}function d3_time_parseDayOfYear(date,string,i){d3_time_numberRe.lastIndex=0;var n=d3_time_numberRe.exec(string.slice(i,i+3));return n?(date.j=+n[0],i+n[0].length):-1;}function d3_time_parseHour24(date,string,i){d3_time_numberRe.lastIndex=0;var n=d3_time_numberRe.exec(string.slice(i,i+2));return n?(date.H=+n[0],i+n[0].length):-1;}function d3_time_parseMinutes(date,string,i){d3_time_numberRe.lastIndex=0;var n=d3_time_numberRe.exec(string.slice(i,i+2));return n?(date.M=+n[0],i+n[0].length):-1;}function d3_time_parseSeconds(date,string,i){d3_time_numberRe.lastIndex=0;var n=d3_time_numberRe.exec(string.slice(i,i+2));return n?(date.S=+n[0],i+n[0].length):-1;}function d3_time_parseMilliseconds(date,string,i){d3_time_numberRe.lastIndex=0;var n=d3_time_numberRe.exec(string.slice(i,i+3));return n?(date.L=+n[0],i+n[0].length):-1;}function d3_time_zone(d){var z=d.getTimezoneOffset(),zs=z>0?\"-\":\"+\",zh=abs(z)/60|0,zm=abs(z)%60;return zs+d3_time_formatPad(zh,\"0\",2)+d3_time_formatPad(zm,\"0\",2);}function d3_time_parseLiteralPercent(date,string,i){d3_time_percentRe.lastIndex=0;var n=d3_time_percentRe.exec(string.slice(i,i+1));return n?i+n[0].length:-1;}function d3_time_formatMulti(formats){var n=formats.length,i=-1;while(++i<n){formats[i][0]=this(formats[i][0]);}return function(date){var i=0,f=formats[i];while(!f[1](date)){f=formats[++i];}return f[0](date);};}d3.locale=function(locale){return{numberFormat:d3_locale_numberFormat(locale),timeFormat:d3_locale_timeFormat(locale)};};var d3_locale_enUS=d3.locale({decimal:\".\",thousands:\",\",grouping:[3],currency:[\"$\",\"\"],dateTime:\"%a %b %e %X %Y\",date:\"%m/%d/%Y\",time:\"%H:%M:%S\",periods:[\"AM\",\"PM\"],days:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],shortDays:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],shortMonths:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]});d3.format=d3_locale_enUS.numberFormat;d3.geo={};function d3_adder(){}d3_adder.prototype={s:0,t:0,add:function add(y){d3_adderSum(y,this.t,d3_adderTemp);d3_adderSum(d3_adderTemp.s,this.s,this);if(this.s)this.t+=d3_adderTemp.t;else this.s=d3_adderTemp.t;},reset:function reset(){this.s=this.t=0;},valueOf:function valueOf(){return this.s;}};var d3_adderTemp=new d3_adder();function d3_adderSum(a,b,o){var x=o.s=a+b,bv=x-a,av=x-bv;o.t=a-av+(b-bv);}d3.geo.stream=function(object,listener){if(object&&d3_geo_streamObjectType.hasOwnProperty(object.type)){d3_geo_streamObjectType[object.type](object,listener);}else{d3_geo_streamGeometry(object,listener);}};function d3_geo_streamGeometry(geometry,listener){if(geometry&&d3_geo_streamGeometryType.hasOwnProperty(geometry.type)){d3_geo_streamGeometryType[geometry.type](geometry,listener);}}var d3_geo_streamObjectType={Feature:function Feature(feature,listener){d3_geo_streamGeometry(feature.geometry,listener);},FeatureCollection:function FeatureCollection(object,listener){var features=object.features,i=-1,n=features.length;while(++i<n){d3_geo_streamGeometry(features[i].geometry,listener);}}};var d3_geo_streamGeometryType={Sphere:function Sphere(object,listener){listener.sphere();},Point:function Point(object,listener){object=object.coordinates;listener.point(object[0],object[1],object[2]);},MultiPoint:function MultiPoint(object,listener){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n){object=coordinates[i],listener.point(object[0],object[1],object[2]);}},LineString:function LineString(object,listener){d3_geo_streamLine(object.coordinates,listener,0);},MultiLineString:function MultiLineString(object,listener){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n){d3_geo_streamLine(coordinates[i],listener,0);}},Polygon:function Polygon(object,listener){d3_geo_streamPolygon(object.coordinates,listener);},MultiPolygon:function MultiPolygon(object,listener){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n){d3_geo_streamPolygon(coordinates[i],listener);}},GeometryCollection:function GeometryCollection(object,listener){var geometries=object.geometries,i=-1,n=geometries.length;while(++i<n){d3_geo_streamGeometry(geometries[i],listener);}}};function d3_geo_streamLine(coordinates,listener,closed){var i=-1,n=coordinates.length-closed,coordinate;listener.lineStart();while(++i<n){coordinate=coordinates[i],listener.point(coordinate[0],coordinate[1],coordinate[2]);}listener.lineEnd();}function d3_geo_streamPolygon(coordinates,listener){var i=-1,n=coordinates.length;listener.polygonStart();while(++i<n){d3_geo_streamLine(coordinates[i],listener,1);}listener.polygonEnd();}d3.geo.area=function(object){d3_geo_areaSum=0;d3.geo.stream(object,d3_geo_area);return d3_geo_areaSum;};var d3_geo_areaSum,d3_geo_areaRingSum=new d3_adder();var d3_geo_area={sphere:function sphere(){d3_geo_areaSum+=4*π;},point:d3_noop,lineStart:d3_noop,lineEnd:d3_noop,polygonStart:function polygonStart(){d3_geo_areaRingSum.reset();d3_geo_area.lineStart=d3_geo_areaRingStart;},polygonEnd:function polygonEnd(){var area=2*d3_geo_areaRingSum;d3_geo_areaSum+=area<0?4*π+area:area;d3_geo_area.lineStart=d3_geo_area.lineEnd=d3_geo_area.point=d3_noop;}};function d3_geo_areaRingStart(){var λ00,φ00,λ0,cosφ0,sinφ0;d3_geo_area.point=function(λ,φ){d3_geo_area.point=nextPoint;λ0=(λ00=λ)*d3_radians,cosφ0=Math.cos(φ=(φ00=φ)*d3_radians/2+π/4),sinφ0=Math.sin(φ);};function nextPoint(λ,φ){λ*=d3_radians;φ=φ*d3_radians/2+π/4;var dλ=λ-λ0,sdλ=dλ>=0?1:-1,adλ=sdλ*dλ,cosφ=Math.cos(φ),sinφ=Math.sin(φ),k=sinφ0*sinφ,u=cosφ0*cosφ+k*Math.cos(adλ),v=k*sdλ*Math.sin(adλ);d3_geo_areaRingSum.add(Math.atan2(v,u));λ0=λ,cosφ0=cosφ,sinφ0=sinφ;}d3_geo_area.lineEnd=function(){nextPoint(λ00,φ00);};}function d3_geo_cartesian(spherical){var λ=spherical[0],φ=spherical[1],cosφ=Math.cos(φ);return[cosφ*Math.cos(λ),cosφ*Math.sin(λ),Math.sin(φ)];}function d3_geo_cartesianDot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2];}function d3_geo_cartesianCross(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]];}function d3_geo_cartesianAdd(a,b){a[0]+=b[0];a[1]+=b[1];a[2]+=b[2];}function d3_geo_cartesianScale(vector,k){return[vector[0]*k,vector[1]*k,vector[2]*k];}function d3_geo_cartesianNormalize(d){var l=Math.sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);d[0]/=l;d[1]/=l;d[2]/=l;}function d3_geo_spherical(cartesian){return[Math.atan2(cartesian[1],cartesian[0]),d3_asin(cartesian[2])];}function d3_geo_sphericalEqual(a,b){return abs(a[0]-b[0])<ε&&abs(a[1]-b[1])<ε;}d3.geo.bounds=function(){var λ0,φ0,λ1,φ1,λ_,λ__,φ__,p0,dλSum,ranges,range;var bound={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function polygonStart(){bound.point=ringPoint;bound.lineStart=ringStart;bound.lineEnd=ringEnd;dλSum=0;d3_geo_area.polygonStart();},polygonEnd:function polygonEnd(){d3_geo_area.polygonEnd();bound.point=point;bound.lineStart=lineStart;bound.lineEnd=lineEnd;if(d3_geo_areaRingSum<0)λ0=-(λ1=180),φ0=-(φ1=90);else if(dλSum>ε)φ1=90;else if(dλSum<-ε)φ0=-90;range[0]=λ0,range[1]=λ1;}};function point(λ,φ){ranges.push(range=[λ0=λ,λ1=λ]);if(φ<φ0)φ0=φ;if(φ>φ1)φ1=φ;}function linePoint(λ,φ){var p=d3_geo_cartesian([λ*d3_radians,φ*d3_radians]);if(p0){var normal=d3_geo_cartesianCross(p0,p),equatorial=[normal[1],-normal[0],0],inflection=d3_geo_cartesianCross(equatorial,normal);d3_geo_cartesianNormalize(inflection);inflection=d3_geo_spherical(inflection);var dλ=λ-λ_,s=dλ>0?1:-1,λi=inflection[0]*d3_degrees*s,antimeridian=abs(dλ)>180;if(antimeridian^(s*λ_<λi&&λi<s*λ)){var φi=inflection[1]*d3_degrees;if(φi>φ1)φ1=φi;}else if(λi=(λi+360)%360-180,antimeridian^(s*λ_<λi&&λi<s*λ)){var φi=-inflection[1]*d3_degrees;if(φi<φ0)φ0=φi;}else{if(φ<φ0)φ0=φ;if(φ>φ1)φ1=φ;}if(antimeridian){if(λ<λ_){if(angle(λ0,λ)>angle(λ0,λ1))λ1=λ;}else{if(angle(λ,λ1)>angle(λ0,λ1))λ0=λ;}}else{if(λ1>=λ0){if(λ<λ0)λ0=λ;if(λ>λ1)λ1=λ;}else{if(λ>λ_){if(angle(λ0,λ)>angle(λ0,λ1))λ1=λ;}else{if(angle(λ,λ1)>angle(λ0,λ1))λ0=λ;}}}}else{point(λ,φ);}p0=p,λ_=λ;}function lineStart(){bound.point=linePoint;}function lineEnd(){range[0]=λ0,range[1]=λ1;bound.point=point;p0=null;}function ringPoint(λ,φ){if(p0){var dλ=λ-λ_;dλSum+=abs(dλ)>180?dλ+(dλ>0?360:-360):dλ;}else λ__=λ,φ__=φ;d3_geo_area.point(λ,φ);linePoint(λ,φ);}function ringStart(){d3_geo_area.lineStart();}function ringEnd(){ringPoint(λ__,φ__);d3_geo_area.lineEnd();if(abs(dλSum)>ε)λ0=-(λ1=180);range[0]=λ0,range[1]=λ1;p0=null;}function angle(λ0,λ1){return(λ1-=λ0)<0?λ1+360:λ1;}function compareRanges(a,b){return a[0]-b[0];}function withinRange(x,range){return range[0]<=range[1]?range[0]<=x&&x<=range[1]:x<range[0]||range[1]<x;}return function(feature){φ1=λ1=-(λ0=φ0=Infinity);ranges=[];d3.geo.stream(feature,bound);var n=ranges.length;if(n){ranges.sort(compareRanges);for(var i=1,a=ranges[0],b,merged=[a];i<n;++i){b=ranges[i];if(withinRange(b[0],a)||withinRange(b[1],a)){if(angle(a[0],b[1])>angle(a[0],a[1]))a[1]=b[1];if(angle(b[0],a[1])>angle(a[0],a[1]))a[0]=b[0];}else{merged.push(a=b);}}var best=-Infinity,dλ;for(var n=merged.length-1,i=0,a=merged[n],b;i<=n;a=b,++i){b=merged[i];if((dλ=angle(a[1],b[0]))>best)best=dλ,λ0=b[0],λ1=a[1];}}ranges=range=null;return λ0===Infinity||φ0===Infinity?[[NaN,NaN],[NaN,NaN]]:[[λ0,φ0],[λ1,φ1]];};}();d3.geo.centroid=function(object){d3_geo_centroidW0=d3_geo_centroidW1=d3_geo_centroidX0=d3_geo_centroidY0=d3_geo_centroidZ0=d3_geo_centroidX1=d3_geo_centroidY1=d3_geo_centroidZ1=d3_geo_centroidX2=d3_geo_centroidY2=d3_geo_centroidZ2=0;d3.geo.stream(object,d3_geo_centroid);var x=d3_geo_centroidX2,y=d3_geo_centroidY2,z=d3_geo_centroidZ2,m=x*x+y*y+z*z;if(m<ε2){x=d3_geo_centroidX1,y=d3_geo_centroidY1,z=d3_geo_centroidZ1;if(d3_geo_centroidW1<ε)x=d3_geo_centroidX0,y=d3_geo_centroidY0,z=d3_geo_centroidZ0;m=x*x+y*y+z*z;if(m<ε2)return[NaN,NaN];}return[Math.atan2(y,x)*d3_degrees,d3_asin(z/Math.sqrt(m))*d3_degrees];};var d3_geo_centroidW0,d3_geo_centroidW1,d3_geo_centroidX0,d3_geo_centroidY0,d3_geo_centroidZ0,d3_geo_centroidX1,d3_geo_centroidY1,d3_geo_centroidZ1,d3_geo_centroidX2,d3_geo_centroidY2,d3_geo_centroidZ2;var d3_geo_centroid={sphere:d3_noop,point:d3_geo_centroidPoint,lineStart:d3_geo_centroidLineStart,lineEnd:d3_geo_centroidLineEnd,polygonStart:function polygonStart(){d3_geo_centroid.lineStart=d3_geo_centroidRingStart;},polygonEnd:function polygonEnd(){d3_geo_centroid.lineStart=d3_geo_centroidLineStart;}};function d3_geo_centroidPoint(λ,φ){λ*=d3_radians;var cosφ=Math.cos(φ*=d3_radians);d3_geo_centroidPointXYZ(cosφ*Math.cos(λ),cosφ*Math.sin(λ),Math.sin(φ));}function d3_geo_centroidPointXYZ(x,y,z){++d3_geo_centroidW0;d3_geo_centroidX0+=(x-d3_geo_centroidX0)/d3_geo_centroidW0;d3_geo_centroidY0+=(y-d3_geo_centroidY0)/d3_geo_centroidW0;d3_geo_centroidZ0+=(z-d3_geo_centroidZ0)/d3_geo_centroidW0;}function d3_geo_centroidLineStart(){var x0,y0,z0;d3_geo_centroid.point=function(λ,φ){λ*=d3_radians;var cosφ=Math.cos(φ*=d3_radians);x0=cosφ*Math.cos(λ);y0=cosφ*Math.sin(λ);z0=Math.sin(φ);d3_geo_centroid.point=nextPoint;d3_geo_centroidPointXYZ(x0,y0,z0);};function nextPoint(λ,φ){λ*=d3_radians;var cosφ=Math.cos(φ*=d3_radians),x=cosφ*Math.cos(λ),y=cosφ*Math.sin(λ),z=Math.sin(φ),w=Math.atan2(Math.sqrt((w=y0*z-z0*y)*w+(w=z0*x-x0*z)*w+(w=x0*y-y0*x)*w),x0*x+y0*y+z0*z);d3_geo_centroidW1+=w;d3_geo_centroidX1+=w*(x0+(x0=x));d3_geo_centroidY1+=w*(y0+(y0=y));d3_geo_centroidZ1+=w*(z0+(z0=z));d3_geo_centroidPointXYZ(x0,y0,z0);}}function d3_geo_centroidLineEnd(){d3_geo_centroid.point=d3_geo_centroidPoint;}function d3_geo_centroidRingStart(){var λ00,φ00,x0,y0,z0;d3_geo_centroid.point=function(λ,φ){λ00=λ,φ00=φ;d3_geo_centroid.point=nextPoint;λ*=d3_radians;var cosφ=Math.cos(φ*=d3_radians);x0=cosφ*Math.cos(λ);y0=cosφ*Math.sin(λ);z0=Math.sin(φ);d3_geo_centroidPointXYZ(x0,y0,z0);};d3_geo_centroid.lineEnd=function(){nextPoint(λ00,φ00);d3_geo_centroid.lineEnd=d3_geo_centroidLineEnd;d3_geo_centroid.point=d3_geo_centroidPoint;};function nextPoint(λ,φ){λ*=d3_radians;var cosφ=Math.cos(φ*=d3_radians),x=cosφ*Math.cos(λ),y=cosφ*Math.sin(λ),z=Math.sin(φ),cx=y0*z-z0*y,cy=z0*x-x0*z,cz=x0*y-y0*x,m=Math.sqrt(cx*cx+cy*cy+cz*cz),u=x0*x+y0*y+z0*z,v=m&&-d3_acos(u)/m,w=Math.atan2(m,u);d3_geo_centroidX2+=v*cx;d3_geo_centroidY2+=v*cy;d3_geo_centroidZ2+=v*cz;d3_geo_centroidW1+=w;d3_geo_centroidX1+=w*(x0+(x0=x));d3_geo_centroidY1+=w*(y0+(y0=y));d3_geo_centroidZ1+=w*(z0+(z0=z));d3_geo_centroidPointXYZ(x0,y0,z0);}}function d3_geo_compose(a,b){function compose(x,y){return x=a(x,y),b(x[0],x[1]);}if(a.invert&&b.invert)compose.invert=function(x,y){return x=b.invert(x,y),x&&a.invert(x[0],x[1]);};return compose;}function d3_true(){return true;}function d3_geo_clipPolygon(segments,compare,clipStartInside,interpolate,listener){var subject=[],clip=[];segments.forEach(function(segment){if((n=segment.length-1)<=0)return;var n,p0=segment[0],p1=segment[n];if(d3_geo_sphericalEqual(p0,p1)){listener.lineStart();for(var i=0;i<n;++i){listener.point((p0=segment[i])[0],p0[1]);}listener.lineEnd();return;}var a=new d3_geo_clipPolygonIntersection(p0,segment,null,true),b=new d3_geo_clipPolygonIntersection(p0,null,a,false);a.o=b;subject.push(a);clip.push(b);a=new d3_geo_clipPolygonIntersection(p1,segment,null,false);b=new d3_geo_clipPolygonIntersection(p1,null,a,true);a.o=b;subject.push(a);clip.push(b);});clip.sort(compare);d3_geo_clipPolygonLinkCircular(subject);d3_geo_clipPolygonLinkCircular(clip);if(!subject.length)return;for(var i=0,entry=clipStartInside,n=clip.length;i<n;++i){clip[i].e=entry=!entry;}var start=subject[0],points,point;while(1){var current=start,isSubject=true;while(current.v){if((current=current.n)===start)return;}points=current.z;listener.lineStart();do{current.v=current.o.v=true;if(current.e){if(isSubject){for(var i=0,n=points.length;i<n;++i){listener.point((point=points[i])[0],point[1]);}}else{interpolate(current.x,current.n.x,1,listener);}current=current.n;}else{if(isSubject){points=current.p.z;for(var i=points.length-1;i>=0;--i){listener.point((point=points[i])[0],point[1]);}}else{interpolate(current.x,current.p.x,-1,listener);}current=current.p;}current=current.o;points=current.z;isSubject=!isSubject;}while(!current.v);listener.lineEnd();}}function d3_geo_clipPolygonLinkCircular(array){if(!(n=array.length))return;var n,i=0,a=array[0],b;while(++i<n){a.n=b=array[i];b.p=a;a=b;}a.n=b=array[0];b.p=a;}function d3_geo_clipPolygonIntersection(point,points,other,entry){this.x=point;this.z=points;this.o=other;this.e=entry;this.v=false;this.n=this.p=null;}function d3_geo_clip(pointVisible,clipLine,interpolate,clipStart){return function(rotate,listener){var line=clipLine(listener),rotatedClipStart=rotate.invert(clipStart[0],clipStart[1]);var clip={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function polygonStart(){clip.point=pointRing;clip.lineStart=ringStart;clip.lineEnd=ringEnd;segments=[];polygon=[];},polygonEnd:function polygonEnd(){clip.point=point;clip.lineStart=lineStart;clip.lineEnd=lineEnd;segments=d3.merge(segments);var clipStartInside=d3_geo_pointInPolygon(rotatedClipStart,polygon);if(segments.length){if(!polygonStarted)listener.polygonStart(),polygonStarted=true;d3_geo_clipPolygon(segments,d3_geo_clipSort,clipStartInside,interpolate,listener);}else if(clipStartInside){if(!polygonStarted)listener.polygonStart(),polygonStarted=true;listener.lineStart();interpolate(null,null,1,listener);listener.lineEnd();}if(polygonStarted)listener.polygonEnd(),polygonStarted=false;segments=polygon=null;},sphere:function sphere(){listener.polygonStart();listener.lineStart();interpolate(null,null,1,listener);listener.lineEnd();listener.polygonEnd();}};function point(λ,φ){var point=rotate(λ,φ);if(pointVisible(λ=point[0],φ=point[1]))listener.point(λ,φ);}function pointLine(λ,φ){var point=rotate(λ,φ);line.point(point[0],point[1]);}function lineStart(){clip.point=pointLine;line.lineStart();}function lineEnd(){clip.point=point;line.lineEnd();}var segments;var buffer=d3_geo_clipBufferListener(),ringListener=clipLine(buffer),polygonStarted=false,polygon,ring;function pointRing(λ,φ){ring.push([λ,φ]);var point=rotate(λ,φ);ringListener.point(point[0],point[1]);}function ringStart(){ringListener.lineStart();ring=[];}function ringEnd(){pointRing(ring[0][0],ring[0][1]);ringListener.lineEnd();var clean=ringListener.clean(),ringSegments=buffer.buffer(),segment,n=ringSegments.length;ring.pop();polygon.push(ring);ring=null;if(!n)return;if(clean&1){segment=ringSegments[0];var n=segment.length-1,i=-1,point;if(n>0){if(!polygonStarted)listener.polygonStart(),polygonStarted=true;listener.lineStart();while(++i<n){listener.point((point=segment[i])[0],point[1]);}listener.lineEnd();}return;}if(n>1&&clean&2)ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));}return clip;};}function d3_geo_clipSegmentLength1(segment){return segment.length>1;}function d3_geo_clipBufferListener(){var lines=[],line;return{lineStart:function lineStart(){lines.push(line=[]);},point:function point(λ,φ){line.push([λ,φ]);},lineEnd:d3_noop,buffer:function buffer(){var buffer=lines;lines=[];line=null;return buffer;},rejoin:function rejoin(){if(lines.length>1)lines.push(lines.pop().concat(lines.shift()));}};}function d3_geo_clipSort(a,b){return((a=a.x)[0]<0?a[1]-halfπ-ε:halfπ-a[1])-((b=b.x)[0]<0?b[1]-halfπ-ε:halfπ-b[1]);}var d3_geo_clipAntimeridian=d3_geo_clip(d3_true,d3_geo_clipAntimeridianLine,d3_geo_clipAntimeridianInterpolate,[-π,-π/2]);function d3_geo_clipAntimeridianLine(listener){var λ0=NaN,φ0=NaN,sλ0=NaN,_clean;return{lineStart:function lineStart(){listener.lineStart();_clean=1;},point:function point(λ1,φ1){var sλ1=λ1>0?π:-π,dλ=abs(λ1-λ0);if(abs(dλ-π)<ε){listener.point(λ0,φ0=(φ0+φ1)/2>0?halfπ:-halfπ);listener.point(sλ0,φ0);listener.lineEnd();listener.lineStart();listener.point(sλ1,φ0);listener.point(λ1,φ0);_clean=0;}else if(sλ0!==sλ1&&dλ>=π){if(abs(λ0-sλ0)<ε)λ0-=sλ0*ε;if(abs(λ1-sλ1)<ε)λ1-=sλ1*ε;φ0=d3_geo_clipAntimeridianIntersect(λ0,φ0,λ1,φ1);listener.point(sλ0,φ0);listener.lineEnd();listener.lineStart();listener.point(sλ1,φ0);_clean=0;}listener.point(λ0=λ1,φ0=φ1);sλ0=sλ1;},lineEnd:function lineEnd(){listener.lineEnd();λ0=φ0=NaN;},clean:function clean(){return 2-_clean;}};}function d3_geo_clipAntimeridianIntersect(λ0,φ0,λ1,φ1){var cosφ0,cosφ1,sinλ0_λ1=Math.sin(λ0-λ1);return abs(sinλ0_λ1)>ε?Math.atan((Math.sin(φ0)*(cosφ1=Math.cos(φ1))*Math.sin(λ1)-Math.sin(φ1)*(cosφ0=Math.cos(φ0))*Math.sin(λ0))/(cosφ0*cosφ1*sinλ0_λ1)):(φ0+φ1)/2;}function d3_geo_clipAntimeridianInterpolate(from,to,direction,listener){var φ;if(from==null){φ=direction*halfπ;listener.point(-π,φ);listener.point(0,φ);listener.point(π,φ);listener.point(π,0);listener.point(π,-φ);listener.point(0,-φ);listener.point(-π,-φ);listener.point(-π,0);listener.point(-π,φ);}else if(abs(from[0]-to[0])>ε){var s=from[0]<to[0]?π:-π;φ=direction*s/2;listener.point(-s,φ);listener.point(0,φ);listener.point(s,φ);}else{listener.point(to[0],to[1]);}}function d3_geo_pointInPolygon(point,polygon){var meridian=point[0],parallel=point[1],meridianNormal=[Math.sin(meridian),-Math.cos(meridian),0],polarAngle=0,winding=0;d3_geo_areaRingSum.reset();for(var i=0,n=polygon.length;i<n;++i){var ring=polygon[i],m=ring.length;if(!m)continue;var point0=ring[0],λ0=point0[0],φ0=point0[1]/2+π/4,sinφ0=Math.sin(φ0),cosφ0=Math.cos(φ0),j=1;while(true){if(j===m)j=0;point=ring[j];var λ=point[0],φ=point[1]/2+π/4,sinφ=Math.sin(φ),cosφ=Math.cos(φ),dλ=λ-λ0,sdλ=dλ>=0?1:-1,adλ=sdλ*dλ,antimeridian=adλ>π,k=sinφ0*sinφ;d3_geo_areaRingSum.add(Math.atan2(k*sdλ*Math.sin(adλ),cosφ0*cosφ+k*Math.cos(adλ)));polarAngle+=antimeridian?dλ+sdλ*τ:dλ;if(antimeridian^λ0>=meridian^λ>=meridian){var arc=d3_geo_cartesianCross(d3_geo_cartesian(point0),d3_geo_cartesian(point));d3_geo_cartesianNormalize(arc);var intersection=d3_geo_cartesianCross(meridianNormal,arc);d3_geo_cartesianNormalize(intersection);var φarc=(antimeridian^dλ>=0?-1:1)*d3_asin(intersection[2]);if(parallel>φarc||parallel===φarc&&(arc[0]||arc[1])){winding+=antimeridian^dλ>=0?1:-1;}}if(!j++)break;λ0=λ,sinφ0=sinφ,cosφ0=cosφ,point0=point;}}return(polarAngle<-ε||polarAngle<ε&&d3_geo_areaRingSum<-ε)^winding&1;}function d3_geo_clipCircle(radius){var cr=Math.cos(radius),smallRadius=cr>0,notHemisphere=abs(cr)>ε,interpolate=d3_geo_circleInterpolate(radius,6*d3_radians);return d3_geo_clip(visible,clipLine,interpolate,smallRadius?[0,-radius]:[-π,radius-π]);function visible(λ,φ){return Math.cos(λ)*Math.cos(φ)>cr;}function clipLine(listener){var point0,c0,v0,v00,_clean2;return{lineStart:function lineStart(){v00=v0=false;_clean2=1;},point:function point(λ,φ){var point1=[λ,φ],point2,v=visible(λ,φ),c=smallRadius?v?0:code(λ,φ):v?code(λ+(λ<0?π:-π),φ):0;if(!point0&&(v00=v0=v))listener.lineStart();if(v!==v0){point2=intersect(point0,point1);if(d3_geo_sphericalEqual(point0,point2)||d3_geo_sphericalEqual(point1,point2)){point1[0]+=ε;point1[1]+=ε;v=visible(point1[0],point1[1]);}}if(v!==v0){_clean2=0;if(v){listener.lineStart();point2=intersect(point1,point0);listener.point(point2[0],point2[1]);}else{point2=intersect(point0,point1);listener.point(point2[0],point2[1]);listener.lineEnd();}point0=point2;}else if(notHemisphere&&point0&&smallRadius^v){var t;if(!(c&c0)&&(t=intersect(point1,point0,true))){_clean2=0;if(smallRadius){listener.lineStart();listener.point(t[0][0],t[0][1]);listener.point(t[1][0],t[1][1]);listener.lineEnd();}else{listener.point(t[1][0],t[1][1]);listener.lineEnd();listener.lineStart();listener.point(t[0][0],t[0][1]);}}}if(v&&(!point0||!d3_geo_sphericalEqual(point0,point1))){listener.point(point1[0],point1[1]);}point0=point1,v0=v,c0=c;},lineEnd:function lineEnd(){if(v0)listener.lineEnd();point0=null;},clean:function clean(){return _clean2|(v00&&v0)<<1;}};}function intersect(a,b,two){var pa=d3_geo_cartesian(a),pb=d3_geo_cartesian(b);var n1=[1,0,0],n2=d3_geo_cartesianCross(pa,pb),n2n2=d3_geo_cartesianDot(n2,n2),n1n2=n2[0],determinant=n2n2-n1n2*n1n2;if(!determinant)return!two&&a;var c1=cr*n2n2/determinant,c2=-cr*n1n2/determinant,n1xn2=d3_geo_cartesianCross(n1,n2),A=d3_geo_cartesianScale(n1,c1),B=d3_geo_cartesianScale(n2,c2);d3_geo_cartesianAdd(A,B);var u=n1xn2,w=d3_geo_cartesianDot(A,u),uu=d3_geo_cartesianDot(u,u),t2=w*w-uu*(d3_geo_cartesianDot(A,A)-1);if(t2<0)return;var t=Math.sqrt(t2),q=d3_geo_cartesianScale(u,(-w-t)/uu);d3_geo_cartesianAdd(q,A);q=d3_geo_spherical(q);if(!two)return q;var λ0=a[0],λ1=b[0],φ0=a[1],φ1=b[1],z;if(λ1<λ0)z=λ0,λ0=λ1,λ1=z;var δλ=λ1-λ0,polar=abs(δλ-π)<ε,meridian=polar||δλ<ε;if(!polar&&φ1<φ0)z=φ0,φ0=φ1,φ1=z;if(meridian?polar?φ0+φ1>0^q[1]<(abs(q[0]-λ0)<ε?φ0:φ1):φ0<=q[1]&&q[1]<=φ1:δλ>π^(λ0<=q[0]&&q[0]<=λ1)){var q1=d3_geo_cartesianScale(u,(-w+t)/uu);d3_geo_cartesianAdd(q1,A);return[q,d3_geo_spherical(q1)];}}function code(λ,φ){var r=smallRadius?radius:π-radius,code=0;if(λ<-r)code|=1;else if(λ>r)code|=2;if(φ<-r)code|=4;else if(φ>r)code|=8;return code;}}function d3_geom_clipLine(x0,y0,x1,y1){return function(line){var a=line.a,b=line.b,ax=a.x,ay=a.y,bx=b.x,by=b.y,t0=0,t1=1,dx=bx-ax,dy=by-ay,r;r=x0-ax;if(!dx&&r>0)return;r/=dx;if(dx<0){if(r<t0)return;if(r<t1)t1=r;}else if(dx>0){if(r>t1)return;if(r>t0)t0=r;}r=x1-ax;if(!dx&&r<0)return;r/=dx;if(dx<0){if(r>t1)return;if(r>t0)t0=r;}else if(dx>0){if(r<t0)return;if(r<t1)t1=r;}r=y0-ay;if(!dy&&r>0)return;r/=dy;if(dy<0){if(r<t0)return;if(r<t1)t1=r;}else if(dy>0){if(r>t1)return;if(r>t0)t0=r;}r=y1-ay;if(!dy&&r<0)return;r/=dy;if(dy<0){if(r>t1)return;if(r>t0)t0=r;}else if(dy>0){if(r<t0)return;if(r<t1)t1=r;}if(t0>0)line.a={x:ax+t0*dx,y:ay+t0*dy};if(t1<1)line.b={x:ax+t1*dx,y:ay+t1*dy};return line;};}var d3_geo_clipExtentMAX=1e9;d3.geo.clipExtent=function(){var x0,y0,x1,y1,_stream,clip,clipExtent={stream:function stream(output){if(_stream)_stream.valid=false;_stream=clip(output);_stream.valid=true;return _stream;},extent:function extent(_){if(!arguments.length)return[[x0,y0],[x1,y1]];clip=d3_geo_clipExtent(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]);if(_stream)_stream.valid=false,_stream=null;return clipExtent;}};return clipExtent.extent([[0,0],[960,500]]);};function d3_geo_clipExtent(x0,y0,x1,y1){return function(listener){var listener_=listener,bufferListener=d3_geo_clipBufferListener(),clipLine=d3_geom_clipLine(x0,y0,x1,y1),segments,polygon,ring;var clip={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function polygonStart(){listener=bufferListener;segments=[];polygon=[];clean=true;},polygonEnd:function polygonEnd(){listener=listener_;segments=d3.merge(segments);var clipStartInside=insidePolygon([x0,y1]),inside=clean&&clipStartInside,visible=segments.length;if(inside||visible){listener.polygonStart();if(inside){listener.lineStart();interpolate(null,null,1,listener);listener.lineEnd();}if(visible){d3_geo_clipPolygon(segments,compare,clipStartInside,interpolate,listener);}listener.polygonEnd();}segments=polygon=ring=null;}};function insidePolygon(p){var wn=0,n=polygon.length,y=p[1];for(var i=0;i<n;++i){for(var j=1,v=polygon[i],m=v.length,a=v[0],b;j<m;++j){b=v[j];if(a[1]<=y){if(b[1]>y&&d3_cross2d(a,b,p)>0)++wn;}else{if(b[1]<=y&&d3_cross2d(a,b,p)<0)--wn;}a=b;}}return wn!==0;}function interpolate(from,to,direction,listener){var a=0,a1=0;if(from==null||(a=corner(from,direction))!==(a1=corner(to,direction))||comparePoints(from,to)<0^direction>0){do{listener.point(a===0||a===3?x0:x1,a>1?y1:y0);}while((a=(a+direction+4)%4)!==a1);}else{listener.point(to[0],to[1]);}}function pointVisible(x,y){return x0<=x&&x<=x1&&y0<=y&&y<=y1;}function point(x,y){if(pointVisible(x,y))listener.point(x,y);}var x__,y__,v__,x_,y_,v_,first,clean;function lineStart(){clip.point=linePoint;if(polygon)polygon.push(ring=[]);first=true;v_=false;x_=y_=NaN;}function lineEnd(){if(segments){linePoint(x__,y__);if(v__&&v_)bufferListener.rejoin();segments.push(bufferListener.buffer());}clip.point=point;if(v_)listener.lineEnd();}function linePoint(x,y){x=Math.max(-d3_geo_clipExtentMAX,Math.min(d3_geo_clipExtentMAX,x));y=Math.max(-d3_geo_clipExtentMAX,Math.min(d3_geo_clipExtentMAX,y));var v=pointVisible(x,y);if(polygon)ring.push([x,y]);if(first){x__=x,y__=y,v__=v;first=false;if(v){listener.lineStart();listener.point(x,y);}}else{if(v&&v_)listener.point(x,y);else{var l={a:{x:x_,y:y_},b:{x:x,y:y}};if(clipLine(l)){if(!v_){listener.lineStart();listener.point(l.a.x,l.a.y);}listener.point(l.b.x,l.b.y);if(!v)listener.lineEnd();clean=false;}else if(v){listener.lineStart();listener.point(x,y);clean=false;}}}x_=x,y_=y,v_=v;}return clip;};function corner(p,direction){return abs(p[0]-x0)<ε?direction>0?0:3:abs(p[0]-x1)<ε?direction>0?2:1:abs(p[1]-y0)<ε?direction>0?1:0:direction>0?3:2;}function compare(a,b){return comparePoints(a.x,b.x);}function comparePoints(a,b){var ca=corner(a,1),cb=corner(b,1);return ca!==cb?ca-cb:ca===0?b[1]-a[1]:ca===1?a[0]-b[0]:ca===2?a[1]-b[1]:b[0]-a[0];}}function d3_geo_conic(projectAt){var φ0=0,φ1=π/3,m=d3_geo_projectionMutator(projectAt),p=m(φ0,φ1);p.parallels=function(_){if(!arguments.length)return[φ0/π*180,φ1/π*180];return m(φ0=_[0]*π/180,φ1=_[1]*π/180);};return p;}function d3_geo_conicEqualArea(φ0,φ1){var sinφ0=Math.sin(φ0),n=(sinφ0+Math.sin(φ1))/2,C=1+sinφ0*(2*n-sinφ0),ρ0=Math.sqrt(C)/n;function forward(λ,φ){var ρ=Math.sqrt(C-2*n*Math.sin(φ))/n;return[ρ*Math.sin(λ*=n),ρ0-ρ*Math.cos(λ)];}forward.invert=function(x,y){var ρ0_y=ρ0-y;return[Math.atan2(x,ρ0_y)/n,d3_asin((C-(x*x+ρ0_y*ρ0_y)*n*n)/(2*n))];};return forward;}(d3.geo.conicEqualArea=function(){return d3_geo_conic(d3_geo_conicEqualArea);}).raw=d3_geo_conicEqualArea;d3.geo.albers=function(){return d3.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070);};d3.geo.albersUsa=function(){var lower48=d3.geo.albers();var alaska=d3.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]);var hawaii=d3.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]);var _point,pointStream={point:function point(x,y){_point=[x,y];}},lower48Point,alaskaPoint,hawaiiPoint;function albersUsa(coordinates){var x=coordinates[0],y=coordinates[1];_point=null;(lower48Point(x,y),_point)||(alaskaPoint(x,y),_point)||hawaiiPoint(x,y);return _point;}albersUsa.invert=function(coordinates){var k=lower48.scale(),t=lower48.translate(),x=(coordinates[0]-t[0])/k,y=(coordinates[1]-t[1])/k;return(y>=.12&&y<.234&&x>=-.425&&x<-.214?alaska:y>=.166&&y<.234&&x>=-.214&&x<-.115?hawaii:lower48).invert(coordinates);};albersUsa.stream=function(stream){var lower48Stream=lower48.stream(stream),alaskaStream=alaska.stream(stream),hawaiiStream=hawaii.stream(stream);return{point:function point(x,y){lower48Stream.point(x,y);alaskaStream.point(x,y);hawaiiStream.point(x,y);},sphere:function sphere(){lower48Stream.sphere();alaskaStream.sphere();hawaiiStream.sphere();},lineStart:function lineStart(){lower48Stream.lineStart();alaskaStream.lineStart();hawaiiStream.lineStart();},lineEnd:function lineEnd(){lower48Stream.lineEnd();alaskaStream.lineEnd();hawaiiStream.lineEnd();},polygonStart:function polygonStart(){lower48Stream.polygonStart();alaskaStream.polygonStart();hawaiiStream.polygonStart();},polygonEnd:function polygonEnd(){lower48Stream.polygonEnd();alaskaStream.polygonEnd();hawaiiStream.polygonEnd();}};};albersUsa.precision=function(_){if(!arguments.length)return lower48.precision();lower48.precision(_);alaska.precision(_);hawaii.precision(_);return albersUsa;};albersUsa.scale=function(_){if(!arguments.length)return lower48.scale();lower48.scale(_);alaska.scale(_*.35);hawaii.scale(_);return albersUsa.translate(lower48.translate());};albersUsa.translate=function(_){if(!arguments.length)return lower48.translate();var k=lower48.scale(),x=+_[0],y=+_[1];lower48Point=lower48.translate(_).clipExtent([[x-.455*k,y-.238*k],[x+.455*k,y+.238*k]]).stream(pointStream).point;alaskaPoint=alaska.translate([x-.307*k,y+.201*k]).clipExtent([[x-.425*k+ε,y+.12*k+ε],[x-.214*k-ε,y+.234*k-ε]]).stream(pointStream).point;hawaiiPoint=hawaii.translate([x-.205*k,y+.212*k]).clipExtent([[x-.214*k+ε,y+.166*k+ε],[x-.115*k-ε,y+.234*k-ε]]).stream(pointStream).point;return albersUsa;};return albersUsa.scale(1070);};var d3_geo_pathAreaSum,d3_geo_pathAreaPolygon,d3_geo_pathArea={point:d3_noop,lineStart:d3_noop,lineEnd:d3_noop,polygonStart:function polygonStart(){d3_geo_pathAreaPolygon=0;d3_geo_pathArea.lineStart=d3_geo_pathAreaRingStart;},polygonEnd:function polygonEnd(){d3_geo_pathArea.lineStart=d3_geo_pathArea.lineEnd=d3_geo_pathArea.point=d3_noop;d3_geo_pathAreaSum+=abs(d3_geo_pathAreaPolygon/2);}};function d3_geo_pathAreaRingStart(){var x00,y00,x0,y0;d3_geo_pathArea.point=function(x,y){d3_geo_pathArea.point=nextPoint;x00=x0=x,y00=y0=y;};function nextPoint(x,y){d3_geo_pathAreaPolygon+=y0*x-x0*y;x0=x,y0=y;}d3_geo_pathArea.lineEnd=function(){nextPoint(x00,y00);};}var d3_geo_pathBoundsX0,d3_geo_pathBoundsY0,d3_geo_pathBoundsX1,d3_geo_pathBoundsY1;var d3_geo_pathBounds={point:d3_geo_pathBoundsPoint,lineStart:d3_noop,lineEnd:d3_noop,polygonStart:d3_noop,polygonEnd:d3_noop};function d3_geo_pathBoundsPoint(x,y){if(x<d3_geo_pathBoundsX0)d3_geo_pathBoundsX0=x;if(x>d3_geo_pathBoundsX1)d3_geo_pathBoundsX1=x;if(y<d3_geo_pathBoundsY0)d3_geo_pathBoundsY0=y;if(y>d3_geo_pathBoundsY1)d3_geo_pathBoundsY1=y;}function d3_geo_pathBuffer(){var pointCircle=d3_geo_pathBufferCircle(4.5),buffer=[];var stream={point:point,lineStart:function lineStart(){stream.point=pointLineStart;},lineEnd:lineEnd,polygonStart:function polygonStart(){stream.lineEnd=lineEndPolygon;},polygonEnd:function polygonEnd(){stream.lineEnd=lineEnd;stream.point=point;},pointRadius:function pointRadius(_){pointCircle=d3_geo_pathBufferCircle(_);return stream;},result:function result(){if(buffer.length){var result=buffer.join(\"\");buffer=[];return result;}}};function point(x,y){buffer.push(\"M\",x,\",\",y,pointCircle);}function pointLineStart(x,y){buffer.push(\"M\",x,\",\",y);stream.point=pointLine;}function pointLine(x,y){buffer.push(\"L\",x,\",\",y);}function lineEnd(){stream.point=point;}function lineEndPolygon(){buffer.push(\"Z\");}return stream;}function d3_geo_pathBufferCircle(radius){return\"m0,\"+radius+\"a\"+radius+\",\"+radius+\" 0 1,1 0,\"+-2*radius+\"a\"+radius+\",\"+radius+\" 0 1,1 0,\"+2*radius+\"z\";}var d3_geo_pathCentroid={point:d3_geo_pathCentroidPoint,lineStart:d3_geo_pathCentroidLineStart,lineEnd:d3_geo_pathCentroidLineEnd,polygonStart:function polygonStart(){d3_geo_pathCentroid.lineStart=d3_geo_pathCentroidRingStart;},polygonEnd:function polygonEnd(){d3_geo_pathCentroid.point=d3_geo_pathCentroidPoint;d3_geo_pathCentroid.lineStart=d3_geo_pathCentroidLineStart;d3_geo_pathCentroid.lineEnd=d3_geo_pathCentroidLineEnd;}};function d3_geo_pathCentroidPoint(x,y){d3_geo_centroidX0+=x;d3_geo_centroidY0+=y;++d3_geo_centroidZ0;}function d3_geo_pathCentroidLineStart(){var x0,y0;d3_geo_pathCentroid.point=function(x,y){d3_geo_pathCentroid.point=nextPoint;d3_geo_pathCentroidPoint(x0=x,y0=y);};function nextPoint(x,y){var dx=x-x0,dy=y-y0,z=Math.sqrt(dx*dx+dy*dy);d3_geo_centroidX1+=z*(x0+x)/2;d3_geo_centroidY1+=z*(y0+y)/2;d3_geo_centroidZ1+=z;d3_geo_pathCentroidPoint(x0=x,y0=y);}}function d3_geo_pathCentroidLineEnd(){d3_geo_pathCentroid.point=d3_geo_pathCentroidPoint;}function d3_geo_pathCentroidRingStart(){var x00,y00,x0,y0;d3_geo_pathCentroid.point=function(x,y){d3_geo_pathCentroid.point=nextPoint;d3_geo_pathCentroidPoint(x00=x0=x,y00=y0=y);};function nextPoint(x,y){var dx=x-x0,dy=y-y0,z=Math.sqrt(dx*dx+dy*dy);d3_geo_centroidX1+=z*(x0+x)/2;d3_geo_centroidY1+=z*(y0+y)/2;d3_geo_centroidZ1+=z;z=y0*x-x0*y;d3_geo_centroidX2+=z*(x0+x);d3_geo_centroidY2+=z*(y0+y);d3_geo_centroidZ2+=z*3;d3_geo_pathCentroidPoint(x0=x,y0=y);}d3_geo_pathCentroid.lineEnd=function(){nextPoint(x00,y00);};}function d3_geo_pathContext(context){var _pointRadius=4.5;var stream={point:point,lineStart:function lineStart(){stream.point=pointLineStart;},lineEnd:lineEnd,polygonStart:function polygonStart(){stream.lineEnd=lineEndPolygon;},polygonEnd:function polygonEnd(){stream.lineEnd=lineEnd;stream.point=point;},pointRadius:function pointRadius(_){_pointRadius=_;return stream;},result:d3_noop};function point(x,y){context.moveTo(x+_pointRadius,y);context.arc(x,y,_pointRadius,0,τ);}function pointLineStart(x,y){context.moveTo(x,y);stream.point=pointLine;}function pointLine(x,y){context.lineTo(x,y);}function lineEnd(){stream.point=point;}function lineEndPolygon(){context.closePath();}return stream;}function d3_geo_resample(project){var δ2=.5,cosMinDistance=Math.cos(30*d3_radians),maxDepth=16;function resample(stream){return(maxDepth?resampleRecursive:resampleNone)(stream);}function resampleNone(stream){return d3_geo_transformPoint(stream,function(x,y){x=project(x,y);stream.point(x[0],x[1]);});}function resampleRecursive(stream){var λ00,φ00,x00,y00,a00,b00,c00,λ0,x0,y0,a0,b0,c0;var resample={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function polygonStart(){stream.polygonStart();resample.lineStart=ringStart;},polygonEnd:function polygonEnd(){stream.polygonEnd();resample.lineStart=lineStart;}};function point(x,y){x=project(x,y);stream.point(x[0],x[1]);}function lineStart(){x0=NaN;resample.point=linePoint;stream.lineStart();}function linePoint(λ,φ){var c=d3_geo_cartesian([λ,φ]),p=project(λ,φ);resampleLineTo(x0,y0,λ0,a0,b0,c0,x0=p[0],y0=p[1],λ0=λ,a0=c[0],b0=c[1],c0=c[2],maxDepth,stream);stream.point(x0,y0);}function lineEnd(){resample.point=point;stream.lineEnd();}function ringStart(){lineStart();resample.point=ringPoint;resample.lineEnd=ringEnd;}function ringPoint(λ,φ){linePoint(λ00=λ,φ00=φ),x00=x0,y00=y0,a00=a0,b00=b0,c00=c0;resample.point=linePoint;}function ringEnd(){resampleLineTo(x0,y0,λ0,a0,b0,c0,x00,y00,λ00,a00,b00,c00,maxDepth,stream);resample.lineEnd=lineEnd;lineEnd();}return resample;}function resampleLineTo(x0,y0,λ0,a0,b0,c0,x1,y1,λ1,a1,b1,c1,depth,stream){var dx=x1-x0,dy=y1-y0,d2=dx*dx+dy*dy;if(d2>4*δ2&&depth--){var a=a0+a1,b=b0+b1,c=c0+c1,m=Math.sqrt(a*a+b*b+c*c),φ2=Math.asin(c/=m),λ2=abs(abs(c)-1)<ε||abs(λ0-λ1)<ε?(λ0+λ1)/2:Math.atan2(b,a),p=project(λ2,φ2),x2=p[0],y2=p[1],dx2=x2-x0,dy2=y2-y0,dz=dy*dx2-dx*dy2;if(dz*dz/d2>δ2||abs((dx*dx2+dy*dy2)/d2-.5)>.3||a0*a1+b0*b1+c0*c1<cosMinDistance){resampleLineTo(x0,y0,λ0,a0,b0,c0,x2,y2,λ2,a/=m,b/=m,c,depth,stream);stream.point(x2,y2);resampleLineTo(x2,y2,λ2,a,b,c,x1,y1,λ1,a1,b1,c1,depth,stream);}}}resample.precision=function(_){if(!arguments.length)return Math.sqrt(δ2);maxDepth=(δ2=_*_)>0&&16;return resample;};return resample;}d3.geo.path=function(){var pointRadius=4.5,projection,context,projectStream,contextStream,cacheStream;function path(object){if(object){if(typeof pointRadius===\"function\")contextStream.pointRadius(+pointRadius.apply(this,arguments));if(!cacheStream||!cacheStream.valid)cacheStream=projectStream(contextStream);d3.geo.stream(object,cacheStream);}return contextStream.result();}path.area=function(object){d3_geo_pathAreaSum=0;d3.geo.stream(object,projectStream(d3_geo_pathArea));return d3_geo_pathAreaSum;};path.centroid=function(object){d3_geo_centroidX0=d3_geo_centroidY0=d3_geo_centroidZ0=d3_geo_centroidX1=d3_geo_centroidY1=d3_geo_centroidZ1=d3_geo_centroidX2=d3_geo_centroidY2=d3_geo_centroidZ2=0;d3.geo.stream(object,projectStream(d3_geo_pathCentroid));return d3_geo_centroidZ2?[d3_geo_centroidX2/d3_geo_centroidZ2,d3_geo_centroidY2/d3_geo_centroidZ2]:d3_geo_centroidZ1?[d3_geo_centroidX1/d3_geo_centroidZ1,d3_geo_centroidY1/d3_geo_centroidZ1]:d3_geo_centroidZ0?[d3_geo_centroidX0/d3_geo_centroidZ0,d3_geo_centroidY0/d3_geo_centroidZ0]:[NaN,NaN];};path.bounds=function(object){d3_geo_pathBoundsX1=d3_geo_pathBoundsY1=-(d3_geo_pathBoundsX0=d3_geo_pathBoundsY0=Infinity);d3.geo.stream(object,projectStream(d3_geo_pathBounds));return[[d3_geo_pathBoundsX0,d3_geo_pathBoundsY0],[d3_geo_pathBoundsX1,d3_geo_pathBoundsY1]];};path.projection=function(_){if(!arguments.length)return projection;projectStream=(projection=_)?_.stream||d3_geo_pathProjectStream(_):d3_identity;return reset();};path.context=function(_){if(!arguments.length)return context;contextStream=(context=_)==null?new d3_geo_pathBuffer():new d3_geo_pathContext(_);if(typeof pointRadius!==\"function\")contextStream.pointRadius(pointRadius);return reset();};path.pointRadius=function(_){if(!arguments.length)return pointRadius;pointRadius=typeof _===\"function\"?_:(contextStream.pointRadius(+_),+_);return path;};function reset(){cacheStream=null;return path;}return path.projection(d3.geo.albersUsa()).context(null);};function d3_geo_pathProjectStream(project){var resample=d3_geo_resample(function(x,y){return project([x*d3_degrees,y*d3_degrees]);});return function(stream){return d3_geo_projectionRadians(resample(stream));};}d3.geo.transform=function(methods){return{stream:function stream(_stream2){var transform=new d3_geo_transform(_stream2);for(var k in methods){transform[k]=methods[k];}return transform;}};};function d3_geo_transform(stream){this.stream=stream;}d3_geo_transform.prototype={point:function point(x,y){this.stream.point(x,y);},sphere:function sphere(){this.stream.sphere();},lineStart:function lineStart(){this.stream.lineStart();},lineEnd:function lineEnd(){this.stream.lineEnd();},polygonStart:function polygonStart(){this.stream.polygonStart();},polygonEnd:function polygonEnd(){this.stream.polygonEnd();}};function d3_geo_transformPoint(stream,point){return{point:point,sphere:function sphere(){stream.sphere();},lineStart:function lineStart(){stream.lineStart();},lineEnd:function lineEnd(){stream.lineEnd();},polygonStart:function polygonStart(){stream.polygonStart();},polygonEnd:function polygonEnd(){stream.polygonEnd();}};}d3.geo.projection=d3_geo_projection;d3.geo.projectionMutator=d3_geo_projectionMutator;function d3_geo_projection(project){return d3_geo_projectionMutator(function(){return project;})();}function d3_geo_projectionMutator(projectAt){var project,rotate,projectRotate,projectResample=d3_geo_resample(function(x,y){x=project(x,y);return[x[0]*k+δx,δy-x[1]*k];}),k=150,x=480,y=250,λ=0,φ=0,δλ=0,δφ=0,δγ=0,δx,δy,preclip=d3_geo_clipAntimeridian,postclip=d3_identity,clipAngle=null,clipExtent=null,stream;function projection(point){point=projectRotate(point[0]*d3_radians,point[1]*d3_radians);return[point[0]*k+δx,δy-point[1]*k];}function invert(point){point=projectRotate.invert((point[0]-δx)/k,(δy-point[1])/k);return point&&[point[0]*d3_degrees,point[1]*d3_degrees];}projection.stream=function(output){if(stream)stream.valid=false;stream=d3_geo_projectionRadians(preclip(rotate,projectResample(postclip(output))));stream.valid=true;return stream;};projection.clipAngle=function(_){if(!arguments.length)return clipAngle;preclip=_==null?(clipAngle=_,d3_geo_clipAntimeridian):d3_geo_clipCircle((clipAngle=+_)*d3_radians);return invalidate();};projection.clipExtent=function(_){if(!arguments.length)return clipExtent;clipExtent=_;postclip=_?d3_geo_clipExtent(_[0][0],_[0][1],_[1][0],_[1][1]):d3_identity;return invalidate();};projection.scale=function(_){if(!arguments.length)return k;k=+_;return reset();};projection.translate=function(_){if(!arguments.length)return[x,y];x=+_[0];y=+_[1];return reset();};projection.center=function(_){if(!arguments.length)return[λ*d3_degrees,φ*d3_degrees];λ=_[0]%360*d3_radians;φ=_[1]%360*d3_radians;return reset();};projection.rotate=function(_){if(!arguments.length)return[δλ*d3_degrees,δφ*d3_degrees,δγ*d3_degrees];δλ=_[0]%360*d3_radians;δφ=_[1]%360*d3_radians;δγ=_.length>2?_[2]%360*d3_radians:0;return reset();};d3.rebind(projection,projectResample,\"precision\");function reset(){projectRotate=d3_geo_compose(rotate=d3_geo_rotation(δλ,δφ,δγ),project);var center=project(λ,φ);δx=x-center[0]*k;δy=y+center[1]*k;return invalidate();}function invalidate(){if(stream)stream.valid=false,stream=null;return projection;}return function(){project=projectAt.apply(this,arguments);projection.invert=project.invert&&invert;return reset();};}function d3_geo_projectionRadians(stream){return d3_geo_transformPoint(stream,function(x,y){stream.point(x*d3_radians,y*d3_radians);});}function d3_geo_equirectangular(λ,φ){return[λ,φ];}(d3.geo.equirectangular=function(){return d3_geo_projection(d3_geo_equirectangular);}).raw=d3_geo_equirectangular.invert=d3_geo_equirectangular;d3.geo.rotation=function(rotate){rotate=d3_geo_rotation(rotate[0]%360*d3_radians,rotate[1]*d3_radians,rotate.length>2?rotate[2]*d3_radians:0);function forward(coordinates){coordinates=rotate(coordinates[0]*d3_radians,coordinates[1]*d3_radians);return coordinates[0]*=d3_degrees,coordinates[1]*=d3_degrees,coordinates;}forward.invert=function(coordinates){coordinates=rotate.invert(coordinates[0]*d3_radians,coordinates[1]*d3_radians);return coordinates[0]*=d3_degrees,coordinates[1]*=d3_degrees,coordinates;};return forward;};function d3_geo_identityRotation(λ,φ){return[λ>π?λ-τ:λ<-π?λ+τ:λ,φ];}d3_geo_identityRotation.invert=d3_geo_equirectangular;function d3_geo_rotation(δλ,δφ,δγ){return δλ?δφ||δγ?d3_geo_compose(d3_geo_rotationλ(δλ),d3_geo_rotationφγ(δφ,δγ)):d3_geo_rotationλ(δλ):δφ||δγ?d3_geo_rotationφγ(δφ,δγ):d3_geo_identityRotation;}function d3_geo_forwardRotationλ(δλ){return function(λ,φ){return λ+=δλ,[λ>π?λ-τ:λ<-π?λ+τ:λ,φ];};}function d3_geo_rotationλ(δλ){var rotation=d3_geo_forwardRotationλ(δλ);rotation.invert=d3_geo_forwardRotationλ(-δλ);return rotation;}function d3_geo_rotationφγ(δφ,δγ){var cosδφ=Math.cos(δφ),sinδφ=Math.sin(δφ),cosδγ=Math.cos(δγ),sinδγ=Math.sin(δγ);function rotation(λ,φ){var cosφ=Math.cos(φ),x=Math.cos(λ)*cosφ,y=Math.sin(λ)*cosφ,z=Math.sin(φ),k=z*cosδφ+x*sinδφ;return[Math.atan2(y*cosδγ-k*sinδγ,x*cosδφ-z*sinδφ),d3_asin(k*cosδγ+y*sinδγ)];}rotation.invert=function(λ,φ){var cosφ=Math.cos(φ),x=Math.cos(λ)*cosφ,y=Math.sin(λ)*cosφ,z=Math.sin(φ),k=z*cosδγ-y*sinδγ;return[Math.atan2(y*cosδγ+z*sinδγ,x*cosδφ+k*sinδφ),d3_asin(k*cosδφ-x*sinδφ)];};return rotation;}d3.geo.circle=function(){var origin=[0,0],angle,precision=6,interpolate;function circle(){var center=typeof origin===\"function\"?origin.apply(this,arguments):origin,rotate=d3_geo_rotation(-center[0]*d3_radians,-center[1]*d3_radians,0).invert,ring=[];interpolate(null,null,1,{point:function point(x,y){ring.push(x=rotate(x,y));x[0]*=d3_degrees,x[1]*=d3_degrees;}});return{type:\"Polygon\",coordinates:[ring]};}circle.origin=function(x){if(!arguments.length)return origin;origin=x;return circle;};circle.angle=function(x){if(!arguments.length)return angle;interpolate=d3_geo_circleInterpolate((angle=+x)*d3_radians,precision*d3_radians);return circle;};circle.precision=function(_){if(!arguments.length)return precision;interpolate=d3_geo_circleInterpolate(angle*d3_radians,(precision=+_)*d3_radians);return circle;};return circle.angle(90);};function d3_geo_circleInterpolate(radius,precision){var cr=Math.cos(radius),sr=Math.sin(radius);return function(from,to,direction,listener){var step=direction*precision;if(from!=null){from=d3_geo_circleAngle(cr,from);to=d3_geo_circleAngle(cr,to);if(direction>0?from<to:from>to)from+=direction*τ;}else{from=radius+direction*τ;to=radius-.5*step;}for(var point,t=from;direction>0?t>to:t<to;t-=step){listener.point((point=d3_geo_spherical([cr,-sr*Math.cos(t),-sr*Math.sin(t)]))[0],point[1]);}};}function d3_geo_circleAngle(cr,point){var a=d3_geo_cartesian(point);a[0]-=cr;d3_geo_cartesianNormalize(a);var angle=d3_acos(-a[1]);return((-a[2]<0?-angle:angle)+2*Math.PI-ε)%(2*Math.PI);}d3.geo.distance=function(a,b){var Δλ=(b[0]-a[0])*d3_radians,φ0=a[1]*d3_radians,φ1=b[1]*d3_radians,sinΔλ=Math.sin(Δλ),cosΔλ=Math.cos(Δλ),sinφ0=Math.sin(φ0),cosφ0=Math.cos(φ0),sinφ1=Math.sin(φ1),cosφ1=Math.cos(φ1),t;return Math.atan2(Math.sqrt((t=cosφ1*sinΔλ)*t+(t=cosφ0*sinφ1-sinφ0*cosφ1*cosΔλ)*t),sinφ0*sinφ1+cosφ0*cosφ1*cosΔλ);};d3.geo.graticule=function(){var x1,x0,X1,X0,y1,y0,Y1,Y0,dx=10,dy=dx,DX=90,DY=360,x,y,X,Y,precision=2.5;function graticule(){return{type:\"MultiLineString\",coordinates:lines()};}function lines(){return d3.range(Math.ceil(X0/DX)*DX,X1,DX).map(X).concat(d3.range(Math.ceil(Y0/DY)*DY,Y1,DY).map(Y)).concat(d3.range(Math.ceil(x0/dx)*dx,x1,dx).filter(function(x){return abs(x%DX)>ε;}).map(x)).concat(d3.range(Math.ceil(y0/dy)*dy,y1,dy).filter(function(y){return abs(y%DY)>ε;}).map(y));}graticule.lines=function(){return lines().map(function(coordinates){return{type:\"LineString\",coordinates:coordinates};});};graticule.outline=function(){return{type:\"Polygon\",coordinates:[X(X0).concat(Y(Y1).slice(1),X(X1).reverse().slice(1),Y(Y0).reverse().slice(1))]};};graticule.extent=function(_){if(!arguments.length)return graticule.minorExtent();return graticule.majorExtent(_).minorExtent(_);};graticule.majorExtent=function(_){if(!arguments.length)return[[X0,Y0],[X1,Y1]];X0=+_[0][0],X1=+_[1][0];Y0=+_[0][1],Y1=+_[1][1];if(X0>X1)_=X0,X0=X1,X1=_;if(Y0>Y1)_=Y0,Y0=Y1,Y1=_;return graticule.precision(precision);};graticule.minorExtent=function(_){if(!arguments.length)return[[x0,y0],[x1,y1]];x0=+_[0][0],x1=+_[1][0];y0=+_[0][1],y1=+_[1][1];if(x0>x1)_=x0,x0=x1,x1=_;if(y0>y1)_=y0,y0=y1,y1=_;return graticule.precision(precision);};graticule.step=function(_){if(!arguments.length)return graticule.minorStep();return graticule.majorStep(_).minorStep(_);};graticule.majorStep=function(_){if(!arguments.length)return[DX,DY];DX=+_[0],DY=+_[1];return graticule;};graticule.minorStep=function(_){if(!arguments.length)return[dx,dy];dx=+_[0],dy=+_[1];return graticule;};graticule.precision=function(_){if(!arguments.length)return precision;precision=+_;x=d3_geo_graticuleX(y0,y1,90);y=d3_geo_graticuleY(x0,x1,precision);X=d3_geo_graticuleX(Y0,Y1,90);Y=d3_geo_graticuleY(X0,X1,precision);return graticule;};return graticule.majorExtent([[-180,-90+ε],[180,90-ε]]).minorExtent([[-180,-80-ε],[180,80+ε]]);};function d3_geo_graticuleX(y0,y1,dy){var y=d3.range(y0,y1-ε,dy).concat(y1);return function(x){return y.map(function(y){return[x,y];});};}function d3_geo_graticuleY(x0,x1,dx){var x=d3.range(x0,x1-ε,dx).concat(x1);return function(y){return x.map(function(x){return[x,y];});};}function d3_source(d){return d.source;}function d3_target(d){return d.target;}d3.geo.greatArc=function(){var source=d3_source,source_,target=d3_target,target_;function greatArc(){return{type:\"LineString\",coordinates:[source_||source.apply(this,arguments),target_||target.apply(this,arguments)]};}greatArc.distance=function(){return d3.geo.distance(source_||source.apply(this,arguments),target_||target.apply(this,arguments));};greatArc.source=function(_){if(!arguments.length)return source;source=_,source_=typeof _===\"function\"?null:_;return greatArc;};greatArc.target=function(_){if(!arguments.length)return target;target=_,target_=typeof _===\"function\"?null:_;return greatArc;};greatArc.precision=function(){return arguments.length?greatArc:0;};return greatArc;};d3.geo.interpolate=function(source,target){return d3_geo_interpolate(source[0]*d3_radians,source[1]*d3_radians,target[0]*d3_radians,target[1]*d3_radians);};function d3_geo_interpolate(x0,y0,x1,y1){var cy0=Math.cos(y0),sy0=Math.sin(y0),cy1=Math.cos(y1),sy1=Math.sin(y1),kx0=cy0*Math.cos(x0),ky0=cy0*Math.sin(x0),kx1=cy1*Math.cos(x1),ky1=cy1*Math.sin(x1),d=2*Math.asin(Math.sqrt(d3_haversin(y1-y0)+cy0*cy1*d3_haversin(x1-x0))),k=1/Math.sin(d);var interpolate=d?function(t){var B=Math.sin(t*=d)*k,A=Math.sin(d-t)*k,x=A*kx0+B*kx1,y=A*ky0+B*ky1,z=A*sy0+B*sy1;return[Math.atan2(y,x)*d3_degrees,Math.atan2(z,Math.sqrt(x*x+y*y))*d3_degrees];}:function(){return[x0*d3_degrees,y0*d3_degrees];};interpolate.distance=d;return interpolate;}d3.geo.length=function(object){d3_geo_lengthSum=0;d3.geo.stream(object,d3_geo_length);return d3_geo_lengthSum;};var d3_geo_lengthSum;var d3_geo_length={sphere:d3_noop,point:d3_noop,lineStart:d3_geo_lengthLineStart,lineEnd:d3_noop,polygonStart:d3_noop,polygonEnd:d3_noop};function d3_geo_lengthLineStart(){var λ0,sinφ0,cosφ0;d3_geo_length.point=function(λ,φ){λ0=λ*d3_radians,sinφ0=Math.sin(φ*=d3_radians),cosφ0=Math.cos(φ);d3_geo_length.point=nextPoint;};d3_geo_length.lineEnd=function(){d3_geo_length.point=d3_geo_length.lineEnd=d3_noop;};function nextPoint(λ,φ){var sinφ=Math.sin(φ*=d3_radians),cosφ=Math.cos(φ),t=abs((λ*=d3_radians)-λ0),cosΔλ=Math.cos(t);d3_geo_lengthSum+=Math.atan2(Math.sqrt((t=cosφ*Math.sin(t))*t+(t=cosφ0*sinφ-sinφ0*cosφ*cosΔλ)*t),sinφ0*sinφ+cosφ0*cosφ*cosΔλ);λ0=λ,sinφ0=sinφ,cosφ0=cosφ;}}function d3_geo_azimuthal(scale,angle){function azimuthal(λ,φ){var cosλ=Math.cos(λ),cosφ=Math.cos(φ),k=scale(cosλ*cosφ);return[k*cosφ*Math.sin(λ),k*Math.sin(φ)];}azimuthal.invert=function(x,y){var ρ=Math.sqrt(x*x+y*y),c=angle(ρ),sinc=Math.sin(c),cosc=Math.cos(c);return[Math.atan2(x*sinc,ρ*cosc),Math.asin(ρ&&y*sinc/ρ)];};return azimuthal;}var d3_geo_azimuthalEqualArea=d3_geo_azimuthal(function(cosλcosφ){return Math.sqrt(2/(1+cosλcosφ));},function(ρ){return 2*Math.asin(ρ/2);});(d3.geo.azimuthalEqualArea=function(){return d3_geo_projection(d3_geo_azimuthalEqualArea);}).raw=d3_geo_azimuthalEqualArea;var d3_geo_azimuthalEquidistant=d3_geo_azimuthal(function(cosλcosφ){var c=Math.acos(cosλcosφ);return c&&c/Math.sin(c);},d3_identity);(d3.geo.azimuthalEquidistant=function(){return d3_geo_projection(d3_geo_azimuthalEquidistant);}).raw=d3_geo_azimuthalEquidistant;function d3_geo_conicConformal(φ0,φ1){var cosφ0=Math.cos(φ0),t=function t(φ){return Math.tan(π/4+φ/2);},n=φ0===φ1?Math.sin(φ0):Math.log(cosφ0/Math.cos(φ1))/Math.log(t(φ1)/t(φ0)),F=cosφ0*Math.pow(t(φ0),n)/n;if(!n)return d3_geo_mercator;function forward(λ,φ){if(F>0){if(φ<-halfπ+ε)φ=-halfπ+ε;}else{if(φ>halfπ-ε)φ=halfπ-ε;}var ρ=F/Math.pow(t(φ),n);return[ρ*Math.sin(n*λ),F-ρ*Math.cos(n*λ)];}forward.invert=function(x,y){var ρ0_y=F-y,ρ=d3_sgn(n)*Math.sqrt(x*x+ρ0_y*ρ0_y);return[Math.atan2(x,ρ0_y)/n,2*Math.atan(Math.pow(F/ρ,1/n))-halfπ];};return forward;}(d3.geo.conicConformal=function(){return d3_geo_conic(d3_geo_conicConformal);}).raw=d3_geo_conicConformal;function d3_geo_conicEquidistant(φ0,φ1){var cosφ0=Math.cos(φ0),n=φ0===φ1?Math.sin(φ0):(cosφ0-Math.cos(φ1))/(φ1-φ0),G=cosφ0/n+φ0;if(abs(n)<ε)return d3_geo_equirectangular;function forward(λ,φ){var ρ=G-φ;return[ρ*Math.sin(n*λ),G-ρ*Math.cos(n*λ)];}forward.invert=function(x,y){var ρ0_y=G-y;return[Math.atan2(x,ρ0_y)/n,G-d3_sgn(n)*Math.sqrt(x*x+ρ0_y*ρ0_y)];};return forward;}(d3.geo.conicEquidistant=function(){return d3_geo_conic(d3_geo_conicEquidistant);}).raw=d3_geo_conicEquidistant;var d3_geo_gnomonic=d3_geo_azimuthal(function(cosλcosφ){return 1/cosλcosφ;},Math.atan);(d3.geo.gnomonic=function(){return d3_geo_projection(d3_geo_gnomonic);}).raw=d3_geo_gnomonic;function d3_geo_mercator(λ,φ){return[λ,Math.log(Math.tan(π/4+φ/2))];}d3_geo_mercator.invert=function(x,y){return[x,2*Math.atan(Math.exp(y))-halfπ];};function d3_geo_mercatorProjection(project){var m=d3_geo_projection(project),scale=m.scale,translate=m.translate,clipExtent=m.clipExtent,clipAuto;m.scale=function(){var v=scale.apply(m,arguments);return v===m?clipAuto?m.clipExtent(null):m:v;};m.translate=function(){var v=translate.apply(m,arguments);return v===m?clipAuto?m.clipExtent(null):m:v;};m.clipExtent=function(_){var v=clipExtent.apply(m,arguments);if(v===m){if(clipAuto=_==null){var k=π*scale(),t=translate();clipExtent([[t[0]-k,t[1]-k],[t[0]+k,t[1]+k]]);}}else if(clipAuto){v=null;}return v;};return m.clipExtent(null);}(d3.geo.mercator=function(){return d3_geo_mercatorProjection(d3_geo_mercator);}).raw=d3_geo_mercator;var d3_geo_orthographic=d3_geo_azimuthal(function(){return 1;},Math.asin);(d3.geo.orthographic=function(){return d3_geo_projection(d3_geo_orthographic);}).raw=d3_geo_orthographic;var d3_geo_stereographic=d3_geo_azimuthal(function(cosλcosφ){return 1/(1+cosλcosφ);},function(ρ){return 2*Math.atan(ρ);});(d3.geo.stereographic=function(){return d3_geo_projection(d3_geo_stereographic);}).raw=d3_geo_stereographic;function d3_geo_transverseMercator(λ,φ){return[Math.log(Math.tan(π/4+φ/2)),-λ];}d3_geo_transverseMercator.invert=function(x,y){return[-y,2*Math.atan(Math.exp(x))-halfπ];};(d3.geo.transverseMercator=function(){var projection=d3_geo_mercatorProjection(d3_geo_transverseMercator),center=projection.center,rotate=projection.rotate;projection.center=function(_){return _?center([-_[1],_[0]]):(_=center(),[_[1],-_[0]]);};projection.rotate=function(_){return _?rotate([_[0],_[1],_.length>2?_[2]+90:90]):(_=rotate(),[_[0],_[1],_[2]-90]);};return rotate([0,0,90]);}).raw=d3_geo_transverseMercator;d3.geom={};function d3_geom_pointX(d){return d[0];}function d3_geom_pointY(d){return d[1];}d3.geom.hull=function(vertices){var x=d3_geom_pointX,y=d3_geom_pointY;if(arguments.length)return hull(vertices);function hull(data){if(data.length<3)return[];var fx=d3_functor(x),fy=d3_functor(y),i,n=data.length,points=[],flippedPoints=[];for(i=0;i<n;i++){points.push([+fx.call(this,data[i],i),+fy.call(this,data[i],i),i]);}points.sort(d3_geom_hullOrder);for(i=0;i<n;i++){flippedPoints.push([points[i][0],-points[i][1]]);}var upper=d3_geom_hullUpper(points),lower=d3_geom_hullUpper(flippedPoints);var skipLeft=lower[0]===upper[0],skipRight=lower[lower.length-1]===upper[upper.length-1],polygon=[];for(i=upper.length-1;i>=0;--i){polygon.push(data[points[upper[i]][2]]);}for(i=+skipLeft;i<lower.length-skipRight;++i){polygon.push(data[points[lower[i]][2]]);}return polygon;}hull.x=function(_){return arguments.length?(x=_,hull):x;};hull.y=function(_){return arguments.length?(y=_,hull):y;};return hull;};function d3_geom_hullUpper(points){var n=points.length,hull=[0,1],hs=2;for(var i=2;i<n;i++){while(hs>1&&d3_cross2d(points[hull[hs-2]],points[hull[hs-1]],points[i])<=0){--hs;}hull[hs++]=i;}return hull.slice(0,hs);}function d3_geom_hullOrder(a,b){return a[0]-b[0]||a[1]-b[1];}d3.geom.polygon=function(coordinates){d3_subclass(coordinates,d3_geom_polygonPrototype);return coordinates;};var d3_geom_polygonPrototype=d3.geom.polygon.prototype=[];d3_geom_polygonPrototype.area=function(){var i=-1,n=this.length,a,b=this[n-1],area=0;while(++i<n){a=b;b=this[i];area+=a[1]*b[0]-a[0]*b[1];}return area*.5;};d3_geom_polygonPrototype.centroid=function(k){var i=-1,n=this.length,x=0,y=0,a,b=this[n-1],c;if(!arguments.length)k=-1/(6*this.area());while(++i<n){a=b;b=this[i];c=a[0]*b[1]-b[0]*a[1];x+=(a[0]+b[0])*c;y+=(a[1]+b[1])*c;}return[x*k,y*k];};d3_geom_polygonPrototype.clip=function(subject){var input,closed=d3_geom_polygonClosed(subject),i=-1,n=this.length-d3_geom_polygonClosed(this),j,m,a=this[n-1],b,c,d;while(++i<n){input=subject.slice();subject.length=0;b=this[i];c=input[(m=input.length-closed)-1];j=-1;while(++j<m){d=input[j];if(d3_geom_polygonInside(d,a,b)){if(!d3_geom_polygonInside(c,a,b)){subject.push(d3_geom_polygonIntersect(c,d,a,b));}subject.push(d);}else if(d3_geom_polygonInside(c,a,b)){subject.push(d3_geom_polygonIntersect(c,d,a,b));}c=d;}if(closed)subject.push(subject[0]);a=b;}return subject;};function d3_geom_polygonInside(p,a,b){return(b[0]-a[0])*(p[1]-a[1])<(b[1]-a[1])*(p[0]-a[0]);}function d3_geom_polygonIntersect(c,d,a,b){var x1=c[0],x3=a[0],x21=d[0]-x1,x43=b[0]-x3,y1=c[1],y3=a[1],y21=d[1]-y1,y43=b[1]-y3,ua=(x43*(y1-y3)-y43*(x1-x3))/(y43*x21-x43*y21);return[x1+ua*x21,y1+ua*y21];}function d3_geom_polygonClosed(coordinates){var a=coordinates[0],b=coordinates[coordinates.length-1];return!(a[0]-b[0]||a[1]-b[1]);}var d3_geom_voronoiEdges,d3_geom_voronoiCells,d3_geom_voronoiBeaches,d3_geom_voronoiBeachPool=[],d3_geom_voronoiFirstCircle,d3_geom_voronoiCircles,d3_geom_voronoiCirclePool=[];function d3_geom_voronoiBeach(){d3_geom_voronoiRedBlackNode(this);this.edge=this.site=this.circle=null;}function d3_geom_voronoiCreateBeach(site){var beach=d3_geom_voronoiBeachPool.pop()||new d3_geom_voronoiBeach();beach.site=site;return beach;}function d3_geom_voronoiDetachBeach(beach){d3_geom_voronoiDetachCircle(beach);d3_geom_voronoiBeaches.remove(beach);d3_geom_voronoiBeachPool.push(beach);d3_geom_voronoiRedBlackNode(beach);}function d3_geom_voronoiRemoveBeach(beach){var circle=beach.circle,x=circle.x,y=circle.cy,vertex={x:x,y:y},previous=beach.P,next=beach.N,disappearing=[beach];d3_geom_voronoiDetachBeach(beach);var lArc=previous;while(lArc.circle&&abs(x-lArc.circle.x)<ε&&abs(y-lArc.circle.cy)<ε){previous=lArc.P;disappearing.unshift(lArc);d3_geom_voronoiDetachBeach(lArc);lArc=previous;}disappearing.unshift(lArc);d3_geom_voronoiDetachCircle(lArc);var rArc=next;while(rArc.circle&&abs(x-rArc.circle.x)<ε&&abs(y-rArc.circle.cy)<ε){next=rArc.N;disappearing.push(rArc);d3_geom_voronoiDetachBeach(rArc);rArc=next;}disappearing.push(rArc);d3_geom_voronoiDetachCircle(rArc);var nArcs=disappearing.length,iArc;for(iArc=1;iArc<nArcs;++iArc){rArc=disappearing[iArc];lArc=disappearing[iArc-1];d3_geom_voronoiSetEdgeEnd(rArc.edge,lArc.site,rArc.site,vertex);}lArc=disappearing[0];rArc=disappearing[nArcs-1];rArc.edge=d3_geom_voronoiCreateEdge(lArc.site,rArc.site,null,vertex);d3_geom_voronoiAttachCircle(lArc);d3_geom_voronoiAttachCircle(rArc);}function d3_geom_voronoiAddBeach(site){var x=site.x,directrix=site.y,lArc,rArc,dxl,dxr,node=d3_geom_voronoiBeaches._;while(node){dxl=d3_geom_voronoiLeftBreakPoint(node,directrix)-x;if(dxl>ε)node=node.L;else{dxr=x-d3_geom_voronoiRightBreakPoint(node,directrix);if(dxr>ε){if(!node.R){lArc=node;break;}node=node.R;}else{if(dxl>-ε){lArc=node.P;rArc=node;}else if(dxr>-ε){lArc=node;rArc=node.N;}else{lArc=rArc=node;}break;}}}var newArc=d3_geom_voronoiCreateBeach(site);d3_geom_voronoiBeaches.insert(lArc,newArc);if(!lArc&&!rArc)return;if(lArc===rArc){d3_geom_voronoiDetachCircle(lArc);rArc=d3_geom_voronoiCreateBeach(lArc.site);d3_geom_voronoiBeaches.insert(newArc,rArc);newArc.edge=rArc.edge=d3_geom_voronoiCreateEdge(lArc.site,newArc.site);d3_geom_voronoiAttachCircle(lArc);d3_geom_voronoiAttachCircle(rArc);return;}if(!rArc){newArc.edge=d3_geom_voronoiCreateEdge(lArc.site,newArc.site);return;}d3_geom_voronoiDetachCircle(lArc);d3_geom_voronoiDetachCircle(rArc);var lSite=lArc.site,ax=lSite.x,ay=lSite.y,bx=site.x-ax,by=site.y-ay,rSite=rArc.site,cx=rSite.x-ax,cy=rSite.y-ay,d=2*(bx*cy-by*cx),hb=bx*bx+by*by,hc=cx*cx+cy*cy,vertex={x:(cy*hb-by*hc)/d+ax,y:(bx*hc-cx*hb)/d+ay};d3_geom_voronoiSetEdgeEnd(rArc.edge,lSite,rSite,vertex);newArc.edge=d3_geom_voronoiCreateEdge(lSite,site,null,vertex);rArc.edge=d3_geom_voronoiCreateEdge(site,rSite,null,vertex);d3_geom_voronoiAttachCircle(lArc);d3_geom_voronoiAttachCircle(rArc);}function d3_geom_voronoiLeftBreakPoint(arc,directrix){var site=arc.site,rfocx=site.x,rfocy=site.y,pby2=rfocy-directrix;if(!pby2)return rfocx;var lArc=arc.P;if(!lArc)return-Infinity;site=lArc.site;var lfocx=site.x,lfocy=site.y,plby2=lfocy-directrix;if(!plby2)return lfocx;var hl=lfocx-rfocx,aby2=1/pby2-1/plby2,b=hl/plby2;if(aby2)return(-b+Math.sqrt(b*b-2*aby2*(hl*hl/(-2*plby2)-lfocy+plby2/2+rfocy-pby2/2)))/aby2+rfocx;return(rfocx+lfocx)/2;}function d3_geom_voronoiRightBreakPoint(arc,directrix){var rArc=arc.N;if(rArc)return d3_geom_voronoiLeftBreakPoint(rArc,directrix);var site=arc.site;return site.y===directrix?site.x:Infinity;}function d3_geom_voronoiCell(site){this.site=site;this.edges=[];}d3_geom_voronoiCell.prototype.prepare=function(){var halfEdges=this.edges,iHalfEdge=halfEdges.length,edge;while(iHalfEdge--){edge=halfEdges[iHalfEdge].edge;if(!edge.b||!edge.a)halfEdges.splice(iHalfEdge,1);}halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);return halfEdges.length;};function d3_geom_voronoiCloseCells(extent){var x0=extent[0][0],x1=extent[1][0],y0=extent[0][1],y1=extent[1][1],x2,y2,x3,y3,cells=d3_geom_voronoiCells,iCell=cells.length,cell,iHalfEdge,halfEdges,nHalfEdges,start,end;while(iCell--){cell=cells[iCell];if(!cell||!cell.prepare())continue;halfEdges=cell.edges;nHalfEdges=halfEdges.length;iHalfEdge=0;while(iHalfEdge<nHalfEdges){end=halfEdges[iHalfEdge].end(),x3=end.x,y3=end.y;start=halfEdges[++iHalfEdge%nHalfEdges].start(),x2=start.x,y2=start.y;if(abs(x3-x2)>ε||abs(y3-y2)>ε){halfEdges.splice(iHalfEdge,0,new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site,end,abs(x3-x0)<ε&&y1-y3>ε?{x:x0,y:abs(x2-x0)<ε?y2:y1}:abs(y3-y1)<ε&&x1-x3>ε?{x:abs(y2-y1)<ε?x2:x1,y:y1}:abs(x3-x1)<ε&&y3-y0>ε?{x:x1,y:abs(x2-x1)<ε?y2:y0}:abs(y3-y0)<ε&&x3-x0>ε?{x:abs(y2-y0)<ε?x2:x0,y:y0}:null),cell.site,null));++nHalfEdges;}}}}function d3_geom_voronoiHalfEdgeOrder(a,b){return b.angle-a.angle;}function d3_geom_voronoiCircle(){d3_geom_voronoiRedBlackNode(this);this.x=this.y=this.arc=this.site=this.cy=null;}function d3_geom_voronoiAttachCircle(arc){var lArc=arc.P,rArc=arc.N;if(!lArc||!rArc)return;var lSite=lArc.site,cSite=arc.site,rSite=rArc.site;if(lSite===rSite)return;var bx=cSite.x,by=cSite.y,ax=lSite.x-bx,ay=lSite.y-by,cx=rSite.x-bx,cy=rSite.y-by;var d=2*(ax*cy-ay*cx);if(d>=-ε2)return;var ha=ax*ax+ay*ay,hc=cx*cx+cy*cy,x=(cy*ha-ay*hc)/d,y=(ax*hc-cx*ha)/d,cy=y+by;var circle=d3_geom_voronoiCirclePool.pop()||new d3_geom_voronoiCircle();circle.arc=arc;circle.site=cSite;circle.x=x+bx;circle.y=cy+Math.sqrt(x*x+y*y);circle.cy=cy;arc.circle=circle;var before=null,node=d3_geom_voronoiCircles._;while(node){if(circle.y<node.y||circle.y===node.y&&circle.x<=node.x){if(node.L)node=node.L;else{before=node.P;break;}}else{if(node.R)node=node.R;else{before=node;break;}}}d3_geom_voronoiCircles.insert(before,circle);if(!before)d3_geom_voronoiFirstCircle=circle;}function d3_geom_voronoiDetachCircle(arc){var circle=arc.circle;if(circle){if(!circle.P)d3_geom_voronoiFirstCircle=circle.N;d3_geom_voronoiCircles.remove(circle);d3_geom_voronoiCirclePool.push(circle);d3_geom_voronoiRedBlackNode(circle);arc.circle=null;}}function d3_geom_voronoiClipEdges(extent){var edges=d3_geom_voronoiEdges,clip=d3_geom_clipLine(extent[0][0],extent[0][1],extent[1][0],extent[1][1]),i=edges.length,e;while(i--){e=edges[i];if(!d3_geom_voronoiConnectEdge(e,extent)||!clip(e)||abs(e.a.x-e.b.x)<ε&&abs(e.a.y-e.b.y)<ε){e.a=e.b=null;edges.splice(i,1);}}}function d3_geom_voronoiConnectEdge(edge,extent){var vb=edge.b;if(vb)return true;var va=edge.a,x0=extent[0][0],x1=extent[1][0],y0=extent[0][1],y1=extent[1][1],lSite=edge.l,rSite=edge.r,lx=lSite.x,ly=lSite.y,rx=rSite.x,ry=rSite.y,fx=(lx+rx)/2,fy=(ly+ry)/2,fm,fb;if(ry===ly){if(fx<x0||fx>=x1)return;if(lx>rx){if(!va)va={x:fx,y:y0};else if(va.y>=y1)return;vb={x:fx,y:y1};}else{if(!va)va={x:fx,y:y1};else if(va.y<y0)return;vb={x:fx,y:y0};}}else{fm=(lx-rx)/(ry-ly);fb=fy-fm*fx;if(fm<-1||fm>1){if(lx>rx){if(!va)va={x:(y0-fb)/fm,y:y0};else if(va.y>=y1)return;vb={x:(y1-fb)/fm,y:y1};}else{if(!va)va={x:(y1-fb)/fm,y:y1};else if(va.y<y0)return;vb={x:(y0-fb)/fm,y:y0};}}else{if(ly<ry){if(!va)va={x:x0,y:fm*x0+fb};else if(va.x>=x1)return;vb={x:x1,y:fm*x1+fb};}else{if(!va)va={x:x1,y:fm*x1+fb};else if(va.x<x0)return;vb={x:x0,y:fm*x0+fb};}}}edge.a=va;edge.b=vb;return true;}function d3_geom_voronoiEdge(lSite,rSite){this.l=lSite;this.r=rSite;this.a=this.b=null;}function d3_geom_voronoiCreateEdge(lSite,rSite,va,vb){var edge=new d3_geom_voronoiEdge(lSite,rSite);d3_geom_voronoiEdges.push(edge);if(va)d3_geom_voronoiSetEdgeEnd(edge,lSite,rSite,va);if(vb)d3_geom_voronoiSetEdgeEnd(edge,rSite,lSite,vb);d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge,lSite,rSite));d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge,rSite,lSite));return edge;}function d3_geom_voronoiCreateBorderEdge(lSite,va,vb){var edge=new d3_geom_voronoiEdge(lSite,null);edge.a=va;edge.b=vb;d3_geom_voronoiEdges.push(edge);return edge;}function d3_geom_voronoiSetEdgeEnd(edge,lSite,rSite,vertex){if(!edge.a&&!edge.b){edge.a=vertex;edge.l=lSite;edge.r=rSite;}else if(edge.l===rSite){edge.b=vertex;}else{edge.a=vertex;}}function d3_geom_voronoiHalfEdge(edge,lSite,rSite){var va=edge.a,vb=edge.b;this.edge=edge;this.site=lSite;this.angle=rSite?Math.atan2(rSite.y-lSite.y,rSite.x-lSite.x):edge.l===lSite?Math.atan2(vb.x-va.x,va.y-vb.y):Math.atan2(va.x-vb.x,vb.y-va.y);}d3_geom_voronoiHalfEdge.prototype={start:function start(){return this.edge.l===this.site?this.edge.a:this.edge.b;},end:function end(){return this.edge.l===this.site?this.edge.b:this.edge.a;}};function d3_geom_voronoiRedBlackTree(){this._=null;}function d3_geom_voronoiRedBlackNode(node){node.U=node.C=node.L=node.R=node.P=node.N=null;}d3_geom_voronoiRedBlackTree.prototype={insert:function insert(after,node){var parent,grandpa,uncle;if(after){node.P=after;node.N=after.N;if(after.N)after.N.P=node;after.N=node;if(after.R){after=after.R;while(after.L){after=after.L;}after.L=node;}else{after.R=node;}parent=after;}else if(this._){after=d3_geom_voronoiRedBlackFirst(this._);node.P=null;node.N=after;after.P=after.L=node;parent=after;}else{node.P=node.N=null;this._=node;parent=null;}node.L=node.R=null;node.U=parent;node.C=true;after=node;while(parent&&parent.C){grandpa=parent.U;if(parent===grandpa.L){uncle=grandpa.R;if(uncle&&uncle.C){parent.C=uncle.C=false;grandpa.C=true;after=grandpa;}else{if(after===parent.R){d3_geom_voronoiRedBlackRotateLeft(this,parent);after=parent;parent=after.U;}parent.C=false;grandpa.C=true;d3_geom_voronoiRedBlackRotateRight(this,grandpa);}}else{uncle=grandpa.L;if(uncle&&uncle.C){parent.C=uncle.C=false;grandpa.C=true;after=grandpa;}else{if(after===parent.L){d3_geom_voronoiRedBlackRotateRight(this,parent);after=parent;parent=after.U;}parent.C=false;grandpa.C=true;d3_geom_voronoiRedBlackRotateLeft(this,grandpa);}}parent=after.U;}this._.C=false;},remove:function remove(node){if(node.N)node.N.P=node.P;if(node.P)node.P.N=node.N;node.N=node.P=null;var parent=node.U,sibling,left=node.L,right=node.R,next,red;if(!left)next=right;else if(!right)next=left;else next=d3_geom_voronoiRedBlackFirst(right);if(parent){if(parent.L===node)parent.L=next;else parent.R=next;}else{this._=next;}if(left&&right){red=next.C;next.C=node.C;next.L=left;left.U=next;if(next!==right){parent=next.U;next.U=node.U;node=next.R;parent.L=node;next.R=right;right.U=next;}else{next.U=parent;parent=next;node=next.R;}}else{red=node.C;node=next;}if(node)node.U=parent;if(red)return;if(node&&node.C){node.C=false;return;}do{if(node===this._)break;if(node===parent.L){sibling=parent.R;if(sibling.C){sibling.C=false;parent.C=true;d3_geom_voronoiRedBlackRotateLeft(this,parent);sibling=parent.R;}if(sibling.L&&sibling.L.C||sibling.R&&sibling.R.C){if(!sibling.R||!sibling.R.C){sibling.L.C=false;sibling.C=true;d3_geom_voronoiRedBlackRotateRight(this,sibling);sibling=parent.R;}sibling.C=parent.C;parent.C=sibling.R.C=false;d3_geom_voronoiRedBlackRotateLeft(this,parent);node=this._;break;}}else{sibling=parent.L;if(sibling.C){sibling.C=false;parent.C=true;d3_geom_voronoiRedBlackRotateRight(this,parent);sibling=parent.L;}if(sibling.L&&sibling.L.C||sibling.R&&sibling.R.C){if(!sibling.L||!sibling.L.C){sibling.R.C=false;sibling.C=true;d3_geom_voronoiRedBlackRotateLeft(this,sibling);sibling=parent.L;}sibling.C=parent.C;parent.C=sibling.L.C=false;d3_geom_voronoiRedBlackRotateRight(this,parent);node=this._;break;}}sibling.C=true;node=parent;parent=parent.U;}while(!node.C);if(node)node.C=false;}};function d3_geom_voronoiRedBlackRotateLeft(tree,node){var p=node,q=node.R,parent=p.U;if(parent){if(parent.L===p)parent.L=q;else parent.R=q;}else{tree._=q;}q.U=parent;p.U=q;p.R=q.L;if(p.R)p.R.U=p;q.L=p;}function d3_geom_voronoiRedBlackRotateRight(tree,node){var p=node,q=node.L,parent=p.U;if(parent){if(parent.L===p)parent.L=q;else parent.R=q;}else{tree._=q;}q.U=parent;p.U=q;p.L=q.R;if(p.L)p.L.U=p;q.R=p;}function d3_geom_voronoiRedBlackFirst(node){while(node.L){node=node.L;}return node;}function d3_geom_voronoi(sites,bbox){var site=sites.sort(d3_geom_voronoiVertexOrder).pop(),x0,y0,circle;d3_geom_voronoiEdges=[];d3_geom_voronoiCells=new Array(sites.length);d3_geom_voronoiBeaches=new d3_geom_voronoiRedBlackTree();d3_geom_voronoiCircles=new d3_geom_voronoiRedBlackTree();while(true){circle=d3_geom_voronoiFirstCircle;if(site&&(!circle||site.y<circle.y||site.y===circle.y&&site.x<circle.x)){if(site.x!==x0||site.y!==y0){d3_geom_voronoiCells[site.i]=new d3_geom_voronoiCell(site);d3_geom_voronoiAddBeach(site);x0=site.x,y0=site.y;}site=sites.pop();}else if(circle){d3_geom_voronoiRemoveBeach(circle.arc);}else{break;}}if(bbox)d3_geom_voronoiClipEdges(bbox),d3_geom_voronoiCloseCells(bbox);var diagram={cells:d3_geom_voronoiCells,edges:d3_geom_voronoiEdges};d3_geom_voronoiBeaches=d3_geom_voronoiCircles=d3_geom_voronoiEdges=d3_geom_voronoiCells=null;return diagram;}function d3_geom_voronoiVertexOrder(a,b){return b.y-a.y||b.x-a.x;}d3.geom.voronoi=function(points){var x=d3_geom_pointX,y=d3_geom_pointY,fx=x,fy=y,clipExtent=d3_geom_voronoiClipExtent;if(points)return voronoi(points);function voronoi(data){var polygons=new Array(data.length),x0=clipExtent[0][0],y0=clipExtent[0][1],x1=clipExtent[1][0],y1=clipExtent[1][1];d3_geom_voronoi(sites(data),clipExtent).cells.forEach(function(cell,i){var edges=cell.edges,site=cell.site,polygon=polygons[i]=edges.length?edges.map(function(e){var s=e.start();return[s.x,s.y];}):site.x>=x0&&site.x<=x1&&site.y>=y0&&site.y<=y1?[[x0,y1],[x1,y1],[x1,y0],[x0,y0]]:[];polygon.point=data[i];});return polygons;}function sites(data){return data.map(function(d,i){return{x:Math.round(fx(d,i)/ε)*ε,y:Math.round(fy(d,i)/ε)*ε,i:i};});}voronoi.links=function(data){return d3_geom_voronoi(sites(data)).edges.filter(function(edge){return edge.l&&edge.r;}).map(function(edge){return{source:data[edge.l.i],target:data[edge.r.i]};});};voronoi.triangles=function(data){var triangles=[];d3_geom_voronoi(sites(data)).cells.forEach(function(cell,i){var site=cell.site,edges=cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),j=-1,m=edges.length,e0,s0,e1=edges[m-1].edge,s1=e1.l===site?e1.r:e1.l;while(++j<m){e0=e1;s0=s1;e1=edges[j].edge;s1=e1.l===site?e1.r:e1.l;if(i<s0.i&&i<s1.i&&d3_geom_voronoiTriangleArea(site,s0,s1)<0){triangles.push([data[i],data[s0.i],data[s1.i]]);}}});return triangles;};voronoi.x=function(_){return arguments.length?(fx=d3_functor(x=_),voronoi):x;};voronoi.y=function(_){return arguments.length?(fy=d3_functor(y=_),voronoi):y;};voronoi.clipExtent=function(_){if(!arguments.length)return clipExtent===d3_geom_voronoiClipExtent?null:clipExtent;clipExtent=_==null?d3_geom_voronoiClipExtent:_;return voronoi;};voronoi.size=function(_){if(!arguments.length)return clipExtent===d3_geom_voronoiClipExtent?null:clipExtent&&clipExtent[1];return voronoi.clipExtent(_&&[[0,0],_]);};return voronoi;};var d3_geom_voronoiClipExtent=[[-1e6,-1e6],[1e6,1e6]];function d3_geom_voronoiTriangleArea(a,b,c){return(a.x-c.x)*(b.y-a.y)-(a.x-b.x)*(c.y-a.y);}d3.geom.delaunay=function(vertices){return d3.geom.voronoi().triangles(vertices);};d3.geom.quadtree=function(points,x1,y1,x2,y2){var x=d3_geom_pointX,y=d3_geom_pointY,compat;if(compat=arguments.length){x=d3_geom_quadtreeCompatX;y=d3_geom_quadtreeCompatY;if(compat===3){y2=y1;x2=x1;y1=x1=0;}return quadtree(points);}function quadtree(data){var d,fx=d3_functor(x),fy=d3_functor(y),xs,ys,i,n,x1_,y1_,x2_,y2_;if(x1!=null){x1_=x1,y1_=y1,x2_=x2,y2_=y2;}else{x2_=y2_=-(x1_=y1_=Infinity);xs=[],ys=[];n=data.length;if(compat)for(i=0;i<n;++i){d=data[i];if(d.x<x1_)x1_=d.x;if(d.y<y1_)y1_=d.y;if(d.x>x2_)x2_=d.x;if(d.y>y2_)y2_=d.y;xs.push(d.x);ys.push(d.y);}else for(i=0;i<n;++i){var x_=+fx(d=data[i],i),y_=+fy(d,i);if(x_<x1_)x1_=x_;if(y_<y1_)y1_=y_;if(x_>x2_)x2_=x_;if(y_>y2_)y2_=y_;xs.push(x_);ys.push(y_);}}var dx=x2_-x1_,dy=y2_-y1_;if(dx>dy)y2_=y1_+dx;else x2_=x1_+dy;function insert(n,d,x,y,x1,y1,x2,y2){if(isNaN(x)||isNaN(y))return;if(n.leaf){var nx=n.x,ny=n.y;if(nx!=null){if(abs(nx-x)+abs(ny-y)<.01){insertChild(n,d,x,y,x1,y1,x2,y2);}else{var nPoint=n.point;n.x=n.y=n.point=null;insertChild(n,nPoint,nx,ny,x1,y1,x2,y2);insertChild(n,d,x,y,x1,y1,x2,y2);}}else{n.x=x,n.y=y,n.point=d;}}else{insertChild(n,d,x,y,x1,y1,x2,y2);}}function insertChild(n,d,x,y,x1,y1,x2,y2){var xm=(x1+x2)*.5,ym=(y1+y2)*.5,right=x>=xm,below=y>=ym,i=below<<1|right;n.leaf=false;n=n.nodes[i]||(n.nodes[i]=d3_geom_quadtreeNode());if(right)x1=xm;else x2=xm;if(below)y1=ym;else y2=ym;insert(n,d,x,y,x1,y1,x2,y2);}var root=d3_geom_quadtreeNode();root.add=function(d){insert(root,d,+fx(d,++i),+fy(d,i),x1_,y1_,x2_,y2_);};root.visit=function(f){d3_geom_quadtreeVisit(f,root,x1_,y1_,x2_,y2_);};root.find=function(point){return d3_geom_quadtreeFind(root,point[0],point[1],x1_,y1_,x2_,y2_);};i=-1;if(x1==null){while(++i<n){insert(root,data[i],xs[i],ys[i],x1_,y1_,x2_,y2_);}--i;}else data.forEach(root.add);xs=ys=data=d=null;return root;}quadtree.x=function(_){return arguments.length?(x=_,quadtree):x;};quadtree.y=function(_){return arguments.length?(y=_,quadtree):y;};quadtree.extent=function(_){if(!arguments.length)return x1==null?null:[[x1,y1],[x2,y2]];if(_==null)x1=y1=x2=y2=null;else x1=+_[0][0],y1=+_[0][1],x2=+_[1][0],y2=+_[1][1];return quadtree;};quadtree.size=function(_){if(!arguments.length)return x1==null?null:[x2-x1,y2-y1];if(_==null)x1=y1=x2=y2=null;else x1=y1=0,x2=+_[0],y2=+_[1];return quadtree;};return quadtree;};function d3_geom_quadtreeCompatX(d){return d.x;}function d3_geom_quadtreeCompatY(d){return d.y;}function d3_geom_quadtreeNode(){return{leaf:true,nodes:[],point:null,x:null,y:null};}function d3_geom_quadtreeVisit(f,node,x1,y1,x2,y2){if(!f(node,x1,y1,x2,y2)){var sx=(x1+x2)*.5,sy=(y1+y2)*.5,children=node.nodes;if(children[0])d3_geom_quadtreeVisit(f,children[0],x1,y1,sx,sy);if(children[1])d3_geom_quadtreeVisit(f,children[1],sx,y1,x2,sy);if(children[2])d3_geom_quadtreeVisit(f,children[2],x1,sy,sx,y2);if(children[3])d3_geom_quadtreeVisit(f,children[3],sx,sy,x2,y2);}}function d3_geom_quadtreeFind(root,x,y,x0,y0,x3,y3){var minDistance2=Infinity,closestPoint;(function find(node,x1,y1,x2,y2){if(x1>x3||y1>y3||x2<x0||y2<y0)return;if(point=node.point){var point,dx=x-node.x,dy=y-node.y,distance2=dx*dx+dy*dy;if(distance2<minDistance2){var distance=Math.sqrt(minDistance2=distance2);x0=x-distance,y0=y-distance;x3=x+distance,y3=y+distance;closestPoint=point;}}var children=node.nodes,xm=(x1+x2)*.5,ym=(y1+y2)*.5,right=x>=xm,below=y>=ym;for(var i=below<<1|right,j=i+4;i<j;++i){if(node=children[i&3])switch(i&3){case 0:find(node,x1,y1,xm,ym);break;case 1:find(node,xm,y1,x2,ym);break;case 2:find(node,x1,ym,xm,y2);break;case 3:find(node,xm,ym,x2,y2);break;}}})(root,x0,y0,x3,y3);return closestPoint;}d3.interpolateRgb=d3_interpolateRgb;function d3_interpolateRgb(a,b){a=d3.rgb(a);b=d3.rgb(b);var ar=a.r,ag=a.g,ab=a.b,br=b.r-ar,bg=b.g-ag,bb=b.b-ab;return function(t){return\"#\"+d3_rgb_hex(Math.round(ar+br*t))+d3_rgb_hex(Math.round(ag+bg*t))+d3_rgb_hex(Math.round(ab+bb*t));};}d3.interpolateObject=d3_interpolateObject;function d3_interpolateObject(a,b){var i={},c={},k;for(k in a){if(k in b){i[k]=d3_interpolate(a[k],b[k]);}else{c[k]=a[k];}}for(k in b){if(!(k in a)){c[k]=b[k];}}return function(t){for(k in i){c[k]=i[k](t);}return c;};}d3.interpolateNumber=d3_interpolateNumber;function d3_interpolateNumber(a,b){a=+a,b=+b;return function(t){return a*(1-t)+b*t;};}d3.interpolateString=d3_interpolateString;function d3_interpolateString(a,b){var bi=d3_interpolate_numberA.lastIndex=d3_interpolate_numberB.lastIndex=0,am,bm,bs,i=-1,s=[],q=[];a=a+\"\",b=b+\"\";while((am=d3_interpolate_numberA.exec(a))&&(bm=d3_interpolate_numberB.exec(b))){if((bs=bm.index)>bi){bs=b.slice(bi,bs);if(s[i])s[i]+=bs;else s[++i]=bs;}if((am=am[0])===(bm=bm[0])){if(s[i])s[i]+=bm;else s[++i]=bm;}else{s[++i]=null;q.push({i:i,x:d3_interpolateNumber(am,bm)});}bi=d3_interpolate_numberB.lastIndex;}if(bi<b.length){bs=b.slice(bi);if(s[i])s[i]+=bs;else s[++i]=bs;}return s.length<2?q[0]?(b=q[0].x,function(t){return b(t)+\"\";}):function(){return b;}:(b=q.length,function(t){for(var i=0,o;i<b;++i){s[(o=q[i]).i]=o.x(t);}return s.join(\"\");});}var d3_interpolate_numberA=/[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,d3_interpolate_numberB=new RegExp(d3_interpolate_numberA.source,\"g\");d3.interpolate=d3_interpolate;function d3_interpolate(a,b){var i=d3.interpolators.length,f;while(--i>=0&&!(f=d3.interpolators[i](a,b))){;}return f;}d3.interpolators=[function(a,b){var t=_typeof(b);return(t===\"string\"?d3_rgb_names.has(b.toLowerCase())||/^(#|rgb\\(|hsl\\()/i.test(b)?d3_interpolateRgb:d3_interpolateString:b instanceof d3_color?d3_interpolateRgb:Array.isArray(b)?d3_interpolateArray:t===\"object\"&&isNaN(b)?d3_interpolateObject:d3_interpolateNumber)(a,b);}];d3.interpolateArray=d3_interpolateArray;function d3_interpolateArray(a,b){var x=[],c=[],na=a.length,nb=b.length,n0=Math.min(a.length,b.length),i;for(i=0;i<n0;++i){x.push(d3_interpolate(a[i],b[i]));}for(;i<na;++i){c[i]=a[i];}for(;i<nb;++i){c[i]=b[i];}return function(t){for(i=0;i<n0;++i){c[i]=x[i](t);}return c;};}var d3_ease_default=function d3_ease_default(){return d3_identity;};var d3_ease=d3.map({linear:d3_ease_default,poly:d3_ease_poly,quad:function quad(){return d3_ease_quad;},cubic:function cubic(){return d3_ease_cubic;},sin:function sin(){return d3_ease_sin;},exp:function exp(){return d3_ease_exp;},circle:function circle(){return d3_ease_circle;},elastic:d3_ease_elastic,back:d3_ease_back,bounce:function bounce(){return d3_ease_bounce;}});var d3_ease_mode=d3.map({\"in\":d3_identity,out:d3_ease_reverse,\"in-out\":d3_ease_reflect,\"out-in\":function outIn(f){return d3_ease_reflect(d3_ease_reverse(f));}});d3.ease=function(name){var i=name.indexOf(\"-\"),t=i>=0?name.slice(0,i):name,m=i>=0?name.slice(i+1):\"in\";t=d3_ease.get(t)||d3_ease_default;m=d3_ease_mode.get(m)||d3_identity;return d3_ease_clamp(m(t.apply(null,d3_arraySlice.call(arguments,1))));};function d3_ease_clamp(f){return function(t){return t<=0?0:t>=1?1:f(t);};}function d3_ease_reverse(f){return function(t){return 1-f(1-t);};}function d3_ease_reflect(f){return function(t){return .5*(t<.5?f(2*t):2-f(2-2*t));};}function d3_ease_quad(t){return t*t;}function d3_ease_cubic(t){return t*t*t;}function d3_ease_cubicInOut(t){if(t<=0)return 0;if(t>=1)return 1;var t2=t*t,t3=t2*t;return 4*(t<.5?t3:3*(t-t2)+t3-.75);}function d3_ease_poly(e){return function(t){return Math.pow(t,e);};}function d3_ease_sin(t){return 1-Math.cos(t*halfπ);}function d3_ease_exp(t){return Math.pow(2,10*(t-1));}function d3_ease_circle(t){return 1-Math.sqrt(1-t*t);}function d3_ease_elastic(a,p){var s;if(arguments.length<2)p=.45;if(arguments.length)s=p/τ*Math.asin(1/a);else a=1,s=p/4;return function(t){return 1+a*Math.pow(2,-10*t)*Math.sin((t-s)*τ/p);};}function d3_ease_back(s){if(!s)s=1.70158;return function(t){return t*t*((s+1)*t-s);};}function d3_ease_bounce(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375;}d3.interpolateHcl=d3_interpolateHcl;function d3_interpolateHcl(a,b){a=d3.hcl(a);b=d3.hcl(b);var ah=a.h,ac=a.c,al=a.l,bh=b.h-ah,bc=b.c-ac,bl=b.l-al;if(isNaN(bc))bc=0,ac=isNaN(ac)?b.c:ac;if(isNaN(bh))bh=0,ah=isNaN(ah)?b.h:ah;else if(bh>180)bh-=360;else if(bh<-180)bh+=360;return function(t){return d3_hcl_lab(ah+bh*t,ac+bc*t,al+bl*t)+\"\";};}d3.interpolateHsl=d3_interpolateHsl;function d3_interpolateHsl(a,b){a=d3.hsl(a);b=d3.hsl(b);var ah=a.h,as=a.s,al=a.l,bh=b.h-ah,bs=b.s-as,bl=b.l-al;if(isNaN(bs))bs=0,as=isNaN(as)?b.s:as;if(isNaN(bh))bh=0,ah=isNaN(ah)?b.h:ah;else if(bh>180)bh-=360;else if(bh<-180)bh+=360;return function(t){return d3_hsl_rgb(ah+bh*t,as+bs*t,al+bl*t)+\"\";};}d3.interpolateLab=d3_interpolateLab;function d3_interpolateLab(a,b){a=d3.lab(a);b=d3.lab(b);var al=a.l,aa=a.a,ab=a.b,bl=b.l-al,ba=b.a-aa,bb=b.b-ab;return function(t){return d3_lab_rgb(al+bl*t,aa+ba*t,ab+bb*t)+\"\";};}d3.interpolateRound=d3_interpolateRound;function d3_interpolateRound(a,b){b-=a;return function(t){return Math.round(a+b*t);};}d3.transform=function(string){var g=d3_document.createElementNS(d3.ns.prefix.svg,\"g\");return(d3.transform=function(string){if(string!=null){g.setAttribute(\"transform\",string);var t=g.transform.baseVal.consolidate();}return new d3_transform(t?t.matrix:d3_transformIdentity);})(string);};function d3_transform(m){var r0=[m.a,m.b],r1=[m.c,m.d],kx=d3_transformNormalize(r0),kz=d3_transformDot(r0,r1),ky=d3_transformNormalize(d3_transformCombine(r1,r0,-kz))||0;if(r0[0]*r1[1]<r1[0]*r0[1]){r0[0]*=-1;r0[1]*=-1;kx*=-1;kz*=-1;}this.rotate=(kx?Math.atan2(r0[1],r0[0]):Math.atan2(-r1[0],r1[1]))*d3_degrees;this.translate=[m.e,m.f];this.scale=[kx,ky];this.skew=ky?Math.atan2(kz,ky)*d3_degrees:0;}d3_transform.prototype.toString=function(){return\"translate(\"+this.translate+\")rotate(\"+this.rotate+\")skewX(\"+this.skew+\")scale(\"+this.scale+\")\";};function d3_transformDot(a,b){return a[0]*b[0]+a[1]*b[1];}function d3_transformNormalize(a){var k=Math.sqrt(d3_transformDot(a,a));if(k){a[0]/=k;a[1]/=k;}return k;}function d3_transformCombine(a,b,k){a[0]+=k*b[0];a[1]+=k*b[1];return a;}var d3_transformIdentity={a:1,b:0,c:0,d:1,e:0,f:0};d3.interpolateTransform=d3_interpolateTransform;function d3_interpolateTransformPop(s){return s.length?s.pop()+\",\":\"\";}function d3_interpolateTranslate(ta,tb,s,q){if(ta[0]!==tb[0]||ta[1]!==tb[1]){var i=s.push(\"translate(\",null,\",\",null,\")\");q.push({i:i-4,x:d3_interpolateNumber(ta[0],tb[0])},{i:i-2,x:d3_interpolateNumber(ta[1],tb[1])});}else if(tb[0]||tb[1]){s.push(\"translate(\"+tb+\")\");}}function d3_interpolateRotate(ra,rb,s,q){if(ra!==rb){if(ra-rb>180)rb+=360;else if(rb-ra>180)ra+=360;q.push({i:s.push(d3_interpolateTransformPop(s)+\"rotate(\",null,\")\")-2,x:d3_interpolateNumber(ra,rb)});}else if(rb){s.push(d3_interpolateTransformPop(s)+\"rotate(\"+rb+\")\");}}function d3_interpolateSkew(wa,wb,s,q){if(wa!==wb){q.push({i:s.push(d3_interpolateTransformPop(s)+\"skewX(\",null,\")\")-2,x:d3_interpolateNumber(wa,wb)});}else if(wb){s.push(d3_interpolateTransformPop(s)+\"skewX(\"+wb+\")\");}}function d3_interpolateScale(ka,kb,s,q){if(ka[0]!==kb[0]||ka[1]!==kb[1]){var i=s.push(d3_interpolateTransformPop(s)+\"scale(\",null,\",\",null,\")\");q.push({i:i-4,x:d3_interpolateNumber(ka[0],kb[0])},{i:i-2,x:d3_interpolateNumber(ka[1],kb[1])});}else if(kb[0]!==1||kb[1]!==1){s.push(d3_interpolateTransformPop(s)+\"scale(\"+kb+\")\");}}function d3_interpolateTransform(a,b){var s=[],q=[];a=d3.transform(a),b=d3.transform(b);d3_interpolateTranslate(a.translate,b.translate,s,q);d3_interpolateRotate(a.rotate,b.rotate,s,q);d3_interpolateSkew(a.skew,b.skew,s,q);d3_interpolateScale(a.scale,b.scale,s,q);a=b=null;return function(t){var i=-1,n=q.length,o;while(++i<n){s[(o=q[i]).i]=o.x(t);}return s.join(\"\");};}function d3_uninterpolateNumber(a,b){b=(b-=a=+a)||1/b;return function(x){return(x-a)/b;};}function d3_uninterpolateClamp(a,b){b=(b-=a=+a)||1/b;return function(x){return Math.max(0,Math.min(1,(x-a)/b));};}d3.layout={};d3.layout.bundle=function(){return function(links){var paths=[],i=-1,n=links.length;while(++i<n){paths.push(d3_layout_bundlePath(links[i]));}return paths;};};function d3_layout_bundlePath(link){var start=link.source,end=link.target,lca=d3_layout_bundleLeastCommonAncestor(start,end),points=[start];while(start!==lca){start=start.parent;points.push(start);}var k=points.length;while(end!==lca){points.splice(k,0,end);end=end.parent;}return points;}function d3_layout_bundleAncestors(node){var ancestors=[],parent=node.parent;while(parent!=null){ancestors.push(node);node=parent;parent=parent.parent;}ancestors.push(node);return ancestors;}function d3_layout_bundleLeastCommonAncestor(a,b){if(a===b)return a;var aNodes=d3_layout_bundleAncestors(a),bNodes=d3_layout_bundleAncestors(b),aNode=aNodes.pop(),bNode=bNodes.pop(),sharedNode=null;while(aNode===bNode){sharedNode=aNode;aNode=aNodes.pop();bNode=bNodes.pop();}return sharedNode;}d3.layout.chord=function(){var chord={},chords,groups,matrix,n,padding=0,sortGroups,sortSubgroups,sortChords;function relayout(){var subgroups={},groupSums=[],groupIndex=d3.range(n),subgroupIndex=[],k,x,x0,i,j;chords=[];groups=[];k=0,i=-1;while(++i<n){x=0,j=-1;while(++j<n){x+=matrix[i][j];}groupSums.push(x);subgroupIndex.push(d3.range(n));k+=x;}if(sortGroups){groupIndex.sort(function(a,b){return sortGroups(groupSums[a],groupSums[b]);});}if(sortSubgroups){subgroupIndex.forEach(function(d,i){d.sort(function(a,b){return sortSubgroups(matrix[i][a],matrix[i][b]);});});}k=(τ-padding*n)/k;x=0,i=-1;while(++i<n){x0=x,j=-1;while(++j<n){var di=groupIndex[i],dj=subgroupIndex[di][j],v=matrix[di][dj],a0=x,a1=x+=v*k;subgroups[di+\"-\"+dj]={index:di,subindex:dj,startAngle:a0,endAngle:a1,value:v};}groups[di]={index:di,startAngle:x0,endAngle:x,value:groupSums[di]};x+=padding;}i=-1;while(++i<n){j=i-1;while(++j<n){var source=subgroups[i+\"-\"+j],target=subgroups[j+\"-\"+i];if(source.value||target.value){chords.push(source.value<target.value?{source:target,target:source}:{source:source,target:target});}}}if(sortChords)resort();}function resort(){chords.sort(function(a,b){return sortChords((a.source.value+a.target.value)/2,(b.source.value+b.target.value)/2);});}chord.matrix=function(x){if(!arguments.length)return matrix;n=(matrix=x)&&matrix.length;chords=groups=null;return chord;};chord.padding=function(x){if(!arguments.length)return padding;padding=x;chords=groups=null;return chord;};chord.sortGroups=function(x){if(!arguments.length)return sortGroups;sortGroups=x;chords=groups=null;return chord;};chord.sortSubgroups=function(x){if(!arguments.length)return sortSubgroups;sortSubgroups=x;chords=null;return chord;};chord.sortChords=function(x){if(!arguments.length)return sortChords;sortChords=x;if(chords)resort();return chord;};chord.chords=function(){if(!chords)relayout();return chords;};chord.groups=function(){if(!groups)relayout();return groups;};return chord;};d3.layout.force=function(){var force={},event=d3.dispatch(\"start\",\"tick\",\"end\"),timer,size=[1,1],drag,alpha,friction=.9,linkDistance=d3_layout_forceLinkDistance,linkStrength=d3_layout_forceLinkStrength,charge=-30,chargeDistance2=d3_layout_forceChargeDistance2,gravity=.1,theta2=.64,nodes=[],links=[],distances,strengths,charges;function repulse(node){return function(quad,x1,_,x2){if(quad.point!==node){var dx=quad.cx-node.x,dy=quad.cy-node.y,dw=x2-x1,dn=dx*dx+dy*dy;if(dw*dw/theta2<dn){if(dn<chargeDistance2){var k=quad.charge/dn;node.px-=dx*k;node.py-=dy*k;}return true;}if(quad.point&&dn&&dn<chargeDistance2){var k=quad.pointCharge/dn;node.px-=dx*k;node.py-=dy*k;}}return!quad.charge;};}force.tick=function(){if((alpha*=.99)<.005){timer=null;event.end({type:\"end\",alpha:alpha=0});return true;}var n=nodes.length,m=links.length,q,i,o,s,t,l,k,x,y;for(i=0;i<m;++i){o=links[i];s=o.source;t=o.target;x=t.x-s.x;y=t.y-s.y;if(l=x*x+y*y){l=alpha*strengths[i]*((l=Math.sqrt(l))-distances[i])/l;x*=l;y*=l;t.x-=x*(k=s.weight+t.weight?s.weight/(s.weight+t.weight):.5);t.y-=y*k;s.x+=x*(k=1-k);s.y+=y*k;}}if(k=alpha*gravity){x=size[0]/2;y=size[1]/2;i=-1;if(k)while(++i<n){o=nodes[i];o.x+=(x-o.x)*k;o.y+=(y-o.y)*k;}}if(charge){d3_layout_forceAccumulate(q=d3.geom.quadtree(nodes),alpha,charges);i=-1;while(++i<n){if(!(o=nodes[i]).fixed){q.visit(repulse(o));}}}i=-1;while(++i<n){o=nodes[i];if(o.fixed){o.x=o.px;o.y=o.py;}else{o.x-=(o.px-(o.px=o.x))*friction;o.y-=(o.py-(o.py=o.y))*friction;}}event.tick({type:\"tick\",alpha:alpha});};force.nodes=function(x){if(!arguments.length)return nodes;nodes=x;return force;};force.links=function(x){if(!arguments.length)return links;links=x;return force;};force.size=function(x){if(!arguments.length)return size;size=x;return force;};force.linkDistance=function(x){if(!arguments.length)return linkDistance;linkDistance=typeof x===\"function\"?x:+x;return force;};force.distance=force.linkDistance;force.linkStrength=function(x){if(!arguments.length)return linkStrength;linkStrength=typeof x===\"function\"?x:+x;return force;};force.friction=function(x){if(!arguments.length)return friction;friction=+x;return force;};force.charge=function(x){if(!arguments.length)return charge;charge=typeof x===\"function\"?x:+x;return force;};force.chargeDistance=function(x){if(!arguments.length)return Math.sqrt(chargeDistance2);chargeDistance2=x*x;return force;};force.gravity=function(x){if(!arguments.length)return gravity;gravity=+x;return force;};force.theta=function(x){if(!arguments.length)return Math.sqrt(theta2);theta2=x*x;return force;};force.alpha=function(x){if(!arguments.length)return alpha;x=+x;if(alpha){if(x>0){alpha=x;}else{timer.c=null,timer.t=NaN,timer=null;event.end({type:\"end\",alpha:alpha=0});}}else if(x>0){event.start({type:\"start\",alpha:alpha=x});timer=d3_timer(force.tick);}return force;};force.start=function(){var i,n=nodes.length,m=links.length,w=size[0],h=size[1],neighbors,o;for(i=0;i<n;++i){(o=nodes[i]).index=i;o.weight=0;}for(i=0;i<m;++i){o=links[i];if(typeof o.source==\"number\")o.source=nodes[o.source];if(typeof o.target==\"number\")o.target=nodes[o.target];++o.source.weight;++o.target.weight;}for(i=0;i<n;++i){o=nodes[i];if(isNaN(o.x))o.x=position(\"x\",w);if(isNaN(o.y))o.y=position(\"y\",h);if(isNaN(o.px))o.px=o.x;if(isNaN(o.py))o.py=o.y;}distances=[];if(typeof linkDistance===\"function\")for(i=0;i<m;++i){distances[i]=+linkDistance.call(this,links[i],i);}else for(i=0;i<m;++i){distances[i]=linkDistance;}strengths=[];if(typeof linkStrength===\"function\")for(i=0;i<m;++i){strengths[i]=+linkStrength.call(this,links[i],i);}else for(i=0;i<m;++i){strengths[i]=linkStrength;}charges=[];if(typeof charge===\"function\")for(i=0;i<n;++i){charges[i]=+charge.call(this,nodes[i],i);}else for(i=0;i<n;++i){charges[i]=charge;}function position(dimension,size){if(!neighbors){neighbors=new Array(n);for(j=0;j<n;++j){neighbors[j]=[];}for(j=0;j<m;++j){var o=links[j];neighbors[o.source.index].push(o.target);neighbors[o.target.index].push(o.source);}}var candidates=neighbors[i],j=-1,l=candidates.length,x;while(++j<l){if(!isNaN(x=candidates[j][dimension]))return x;}return Math.random()*size;}return force.resume();};force.resume=function(){return force.alpha(.1);};force.stop=function(){return force.alpha(0);};force.drag=function(){if(!drag)drag=d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\",d3_layout_forceDragstart).on(\"drag.force\",dragmove).on(\"dragend.force\",d3_layout_forceDragend);if(!arguments.length)return drag;this.on(\"mouseover.force\",d3_layout_forceMouseover).on(\"mouseout.force\",d3_layout_forceMouseout).call(drag);};function dragmove(d){d.px=d3.event.x,d.py=d3.event.y;force.resume();}return d3.rebind(force,event,\"on\");};function d3_layout_forceDragstart(d){d.fixed|=2;}function d3_layout_forceDragend(d){d.fixed&=~6;}function d3_layout_forceMouseover(d){d.fixed|=4;d.px=d.x,d.py=d.y;}function d3_layout_forceMouseout(d){d.fixed&=~4;}function d3_layout_forceAccumulate(quad,alpha,charges){var cx=0,cy=0;quad.charge=0;if(!quad.leaf){var nodes=quad.nodes,n=nodes.length,i=-1,c;while(++i<n){c=nodes[i];if(c==null)continue;d3_layout_forceAccumulate(c,alpha,charges);quad.charge+=c.charge;cx+=c.charge*c.cx;cy+=c.charge*c.cy;}}if(quad.point){if(!quad.leaf){quad.point.x+=Math.random()-.5;quad.point.y+=Math.random()-.5;}var k=alpha*charges[quad.point.index];quad.charge+=quad.pointCharge=k;cx+=k*quad.point.x;cy+=k*quad.point.y;}quad.cx=cx/quad.charge;quad.cy=cy/quad.charge;}var d3_layout_forceLinkDistance=20,d3_layout_forceLinkStrength=1,d3_layout_forceChargeDistance2=Infinity;d3.layout.hierarchy=function(){var sort=d3_layout_hierarchySort,children=d3_layout_hierarchyChildren,value=d3_layout_hierarchyValue;function hierarchy(root){var stack=[root],nodes=[],node;root.depth=0;while((node=stack.pop())!=null){nodes.push(node);if((childs=children.call(hierarchy,node,node.depth))&&(n=childs.length)){var n,childs,child;while(--n>=0){stack.push(child=childs[n]);child.parent=node;child.depth=node.depth+1;}if(value)node.value=0;node.children=childs;}else{if(value)node.value=+value.call(hierarchy,node,node.depth)||0;delete node.children;}}d3_layout_hierarchyVisitAfter(root,function(node){var childs,parent;if(sort&&(childs=node.children))childs.sort(sort);if(value&&(parent=node.parent))parent.value+=node.value;});return nodes;}hierarchy.sort=function(x){if(!arguments.length)return sort;sort=x;return hierarchy;};hierarchy.children=function(x){if(!arguments.length)return children;children=x;return hierarchy;};hierarchy.value=function(x){if(!arguments.length)return value;value=x;return hierarchy;};hierarchy.revalue=function(root){if(value){d3_layout_hierarchyVisitBefore(root,function(node){if(node.children)node.value=0;});d3_layout_hierarchyVisitAfter(root,function(node){var parent;if(!node.children)node.value=+value.call(hierarchy,node,node.depth)||0;if(parent=node.parent)parent.value+=node.value;});}return root;};return hierarchy;};function d3_layout_hierarchyRebind(object,hierarchy){d3.rebind(object,hierarchy,\"sort\",\"children\",\"value\");object.nodes=object;object.links=d3_layout_hierarchyLinks;return object;}function d3_layout_hierarchyVisitBefore(node,callback){var nodes=[node];while((node=nodes.pop())!=null){callback(node);if((children=node.children)&&(n=children.length)){var n,children;while(--n>=0){nodes.push(children[n]);}}}}function d3_layout_hierarchyVisitAfter(node,callback){var nodes=[node],nodes2=[];while((node=nodes.pop())!=null){nodes2.push(node);if((children=node.children)&&(n=children.length)){var i=-1,n,children;while(++i<n){nodes.push(children[i]);}}}while((node=nodes2.pop())!=null){callback(node);}}function d3_layout_hierarchyChildren(d){return d.children;}function d3_layout_hierarchyValue(d){return d.value;}function d3_layout_hierarchySort(a,b){return b.value-a.value;}function d3_layout_hierarchyLinks(nodes){return d3.merge(nodes.map(function(parent){return(parent.children||[]).map(function(child){return{source:parent,target:child};});}));}d3.layout.partition=function(){var hierarchy=d3.layout.hierarchy(),size=[1,1];function position(node,x,dx,dy){var children=node.children;node.x=x;node.y=node.depth*dy;node.dx=dx;node.dy=dy;if(children&&(n=children.length)){var i=-1,n,c,d;dx=node.value?dx/node.value:0;while(++i<n){position(c=children[i],x,d=c.value*dx,dy);x+=d;}}}function depth(node){var children=node.children,d=0;if(children&&(n=children.length)){var i=-1,n;while(++i<n){d=Math.max(d,depth(children[i]));}}return 1+d;}function partition(d,i){var nodes=hierarchy.call(this,d,i);position(nodes[0],0,size[0],size[1]/depth(nodes[0]));return nodes;}partition.size=function(x){if(!arguments.length)return size;size=x;return partition;};return d3_layout_hierarchyRebind(partition,hierarchy);};d3.layout.pie=function(){var value=Number,sort=d3_layout_pieSortByValue,startAngle=0,endAngle=τ,padAngle=0;function pie(data){var n=data.length,values=data.map(function(d,i){return+value.call(pie,d,i);}),a=+(typeof startAngle===\"function\"?startAngle.apply(this,arguments):startAngle),da=(typeof endAngle===\"function\"?endAngle.apply(this,arguments):endAngle)-a,p=Math.min(Math.abs(da)/n,+(typeof padAngle===\"function\"?padAngle.apply(this,arguments):padAngle)),pa=p*(da<0?-1:1),sum=d3.sum(values),k=sum?(da-n*pa)/sum:0,index=d3.range(n),arcs=[],v;if(sort!=null)index.sort(sort===d3_layout_pieSortByValue?function(i,j){return values[j]-values[i];}:function(i,j){return sort(data[i],data[j]);});index.forEach(function(i){arcs[i]={data:data[i],value:v=values[i],startAngle:a,endAngle:a+=v*k+pa,padAngle:p};});return arcs;}pie.value=function(_){if(!arguments.length)return value;value=_;return pie;};pie.sort=function(_){if(!arguments.length)return sort;sort=_;return pie;};pie.startAngle=function(_){if(!arguments.length)return startAngle;startAngle=_;return pie;};pie.endAngle=function(_){if(!arguments.length)return endAngle;endAngle=_;return pie;};pie.padAngle=function(_){if(!arguments.length)return padAngle;padAngle=_;return pie;};return pie;};var d3_layout_pieSortByValue={};d3.layout.stack=function(){var values=d3_identity,order=d3_layout_stackOrderDefault,offset=d3_layout_stackOffsetZero,out=d3_layout_stackOut,x=d3_layout_stackX,y=d3_layout_stackY;function stack(data,index){if(!(n=data.length))return data;var series=data.map(function(d,i){return values.call(stack,d,i);});var points=series.map(function(d){return d.map(function(v,i){return[x.call(stack,v,i),y.call(stack,v,i)];});});var orders=order.call(stack,points,index);series=d3.permute(series,orders);points=d3.permute(points,orders);var offsets=offset.call(stack,points,index);var m=series[0].length,n,i,j,o;for(j=0;j<m;++j){out.call(stack,series[0][j],o=offsets[j],points[0][j][1]);for(i=1;i<n;++i){out.call(stack,series[i][j],o+=points[i-1][j][1],points[i][j][1]);}}return data;}stack.values=function(x){if(!arguments.length)return values;values=x;return stack;};stack.order=function(x){if(!arguments.length)return order;order=typeof x===\"function\"?x:d3_layout_stackOrders.get(x)||d3_layout_stackOrderDefault;return stack;};stack.offset=function(x){if(!arguments.length)return offset;offset=typeof x===\"function\"?x:d3_layout_stackOffsets.get(x)||d3_layout_stackOffsetZero;return stack;};stack.x=function(z){if(!arguments.length)return x;x=z;return stack;};stack.y=function(z){if(!arguments.length)return y;y=z;return stack;};stack.out=function(z){if(!arguments.length)return out;out=z;return stack;};return stack;};function d3_layout_stackX(d){return d.x;}function d3_layout_stackY(d){return d.y;}function d3_layout_stackOut(d,y0,y){d.y0=y0;d.y=y;}var d3_layout_stackOrders=d3.map({\"inside-out\":function insideOut(data){var n=data.length,i,j,max=data.map(d3_layout_stackMaxIndex),sums=data.map(d3_layout_stackReduceSum),index=d3.range(n).sort(function(a,b){return max[a]-max[b];}),top=0,bottom=0,tops=[],bottoms=[];for(i=0;i<n;++i){j=index[i];if(top<bottom){top+=sums[j];tops.push(j);}else{bottom+=sums[j];bottoms.push(j);}}return bottoms.reverse().concat(tops);},reverse:function reverse(data){return d3.range(data.length).reverse();},\"default\":d3_layout_stackOrderDefault});var d3_layout_stackOffsets=d3.map({silhouette:function silhouette(data){var n=data.length,m=data[0].length,sums=[],max=0,i,j,o,y0=[];for(j=0;j<m;++j){for(i=0,o=0;i<n;i++){o+=data[i][j][1];}if(o>max)max=o;sums.push(o);}for(j=0;j<m;++j){y0[j]=(max-sums[j])/2;}return y0;},wiggle:function wiggle(data){var n=data.length,x=data[0],m=x.length,i,j,k,s1,s2,s3,dx,o,o0,y0=[];y0[0]=o=o0=0;for(j=1;j<m;++j){for(i=0,s1=0;i<n;++i){s1+=data[i][j][1];}for(i=0,s2=0,dx=x[j][0]-x[j-1][0];i<n;++i){for(k=0,s3=(data[i][j][1]-data[i][j-1][1])/(2*dx);k<i;++k){s3+=(data[k][j][1]-data[k][j-1][1])/dx;}s2+=s3*data[i][j][1];}y0[j]=o-=s1?s2/s1*dx:0;if(o<o0)o0=o;}for(j=0;j<m;++j){y0[j]-=o0;}return y0;},expand:function expand(data){var n=data.length,m=data[0].length,k=1/n,i,j,o,y0=[];for(j=0;j<m;++j){for(i=0,o=0;i<n;i++){o+=data[i][j][1];}if(o)for(i=0;i<n;i++){data[i][j][1]/=o;}else for(i=0;i<n;i++){data[i][j][1]=k;}}for(j=0;j<m;++j){y0[j]=0;}return y0;},zero:d3_layout_stackOffsetZero});function d3_layout_stackOrderDefault(data){return d3.range(data.length);}function d3_layout_stackOffsetZero(data){var j=-1,m=data[0].length,y0=[];while(++j<m){y0[j]=0;}return y0;}function d3_layout_stackMaxIndex(array){var i=1,j=0,v=array[0][1],k,n=array.length;for(;i<n;++i){if((k=array[i][1])>v){j=i;v=k;}}return j;}function d3_layout_stackReduceSum(d){return d.reduce(d3_layout_stackSum,0);}function d3_layout_stackSum(p,d){return p+d[1];}d3.layout.histogram=function(){var frequency=true,valuer=Number,ranger=d3_layout_histogramRange,binner=d3_layout_histogramBinSturges;function histogram(data,i){var bins=[],values=data.map(valuer,this),range=ranger.call(this,values,i),thresholds=binner.call(this,range,values,i),bin,i=-1,n=values.length,m=thresholds.length-1,k=frequency?1:1/n,x;while(++i<m){bin=bins[i]=[];bin.dx=thresholds[i+1]-(bin.x=thresholds[i]);bin.y=0;}if(m>0){i=-1;while(++i<n){x=values[i];if(x>=range[0]&&x<=range[1]){bin=bins[d3.bisect(thresholds,x,1,m)-1];bin.y+=k;bin.push(data[i]);}}}return bins;}histogram.value=function(x){if(!arguments.length)return valuer;valuer=x;return histogram;};histogram.range=function(x){if(!arguments.length)return ranger;ranger=d3_functor(x);return histogram;};histogram.bins=function(x){if(!arguments.length)return binner;binner=typeof x===\"number\"?function(range){return d3_layout_histogramBinFixed(range,x);}:d3_functor(x);return histogram;};histogram.frequency=function(x){if(!arguments.length)return frequency;frequency=!!x;return histogram;};return histogram;};function d3_layout_histogramBinSturges(range,values){return d3_layout_histogramBinFixed(range,Math.ceil(Math.log(values.length)/Math.LN2+1));}function d3_layout_histogramBinFixed(range,n){var x=-1,b=+range[0],m=(range[1]-b)/n,f=[];while(++x<=n){f[x]=m*x+b;}return f;}function d3_layout_histogramRange(values){return[d3.min(values),d3.max(values)];}d3.layout.pack=function(){var hierarchy=d3.layout.hierarchy().sort(d3_layout_packSort),padding=0,size=[1,1],radius;function pack(d,i){var nodes=hierarchy.call(this,d,i),root=nodes[0],w=size[0],h=size[1],r=radius==null?Math.sqrt:typeof radius===\"function\"?radius:function(){return radius;};root.x=root.y=0;d3_layout_hierarchyVisitAfter(root,function(d){d.r=+r(d.value);});d3_layout_hierarchyVisitAfter(root,d3_layout_packSiblings);if(padding){var dr=padding*(radius?1:Math.max(2*root.r/w,2*root.r/h))/2;d3_layout_hierarchyVisitAfter(root,function(d){d.r+=dr;});d3_layout_hierarchyVisitAfter(root,d3_layout_packSiblings);d3_layout_hierarchyVisitAfter(root,function(d){d.r-=dr;});}d3_layout_packTransform(root,w/2,h/2,radius?1:1/Math.max(2*root.r/w,2*root.r/h));return nodes;}pack.size=function(_){if(!arguments.length)return size;size=_;return pack;};pack.radius=function(_){if(!arguments.length)return radius;radius=_==null||typeof _===\"function\"?_:+_;return pack;};pack.padding=function(_){if(!arguments.length)return padding;padding=+_;return pack;};return d3_layout_hierarchyRebind(pack,hierarchy);};function d3_layout_packSort(a,b){return a.value-b.value;}function d3_layout_packInsert(a,b){var c=a._pack_next;a._pack_next=b;b._pack_prev=a;b._pack_next=c;c._pack_prev=b;}function d3_layout_packSplice(a,b){a._pack_next=b;b._pack_prev=a;}function d3_layout_packIntersects(a,b){var dx=b.x-a.x,dy=b.y-a.y,dr=a.r+b.r;return .999*dr*dr>dx*dx+dy*dy;}function d3_layout_packSiblings(node){if(!(nodes=node.children)||!(n=nodes.length))return;var nodes,xMin=Infinity,xMax=-Infinity,yMin=Infinity,yMax=-Infinity,a,b,c,i,j,k,n;function bound(node){xMin=Math.min(node.x-node.r,xMin);xMax=Math.max(node.x+node.r,xMax);yMin=Math.min(node.y-node.r,yMin);yMax=Math.max(node.y+node.r,yMax);}nodes.forEach(d3_layout_packLink);a=nodes[0];a.x=-a.r;a.y=0;bound(a);if(n>1){b=nodes[1];b.x=b.r;b.y=0;bound(b);if(n>2){c=nodes[2];d3_layout_packPlace(a,b,c);bound(c);d3_layout_packInsert(a,c);a._pack_prev=c;d3_layout_packInsert(c,b);b=a._pack_next;for(i=3;i<n;i++){d3_layout_packPlace(a,b,c=nodes[i]);var isect=0,s1=1,s2=1;for(j=b._pack_next;j!==b;j=j._pack_next,s1++){if(d3_layout_packIntersects(j,c)){isect=1;break;}}if(isect==1){for(k=a._pack_prev;k!==j._pack_prev;k=k._pack_prev,s2++){if(d3_layout_packIntersects(k,c)){break;}}}if(isect){if(s1<s2||s1==s2&&b.r<a.r)d3_layout_packSplice(a,b=j);else d3_layout_packSplice(a=k,b);i--;}else{d3_layout_packInsert(a,c);b=c;bound(c);}}}}var cx=(xMin+xMax)/2,cy=(yMin+yMax)/2,cr=0;for(i=0;i<n;i++){c=nodes[i];c.x-=cx;c.y-=cy;cr=Math.max(cr,c.r+Math.sqrt(c.x*c.x+c.y*c.y));}node.r=cr;nodes.forEach(d3_layout_packUnlink);}function d3_layout_packLink(node){node._pack_next=node._pack_prev=node;}function d3_layout_packUnlink(node){delete node._pack_next;delete node._pack_prev;}function d3_layout_packTransform(node,x,y,k){var children=node.children;node.x=x+=k*node.x;node.y=y+=k*node.y;node.r*=k;if(children){var i=-1,n=children.length;while(++i<n){d3_layout_packTransform(children[i],x,y,k);}}}function d3_layout_packPlace(a,b,c){var db=a.r+c.r,dx=b.x-a.x,dy=b.y-a.y;if(db&&(dx||dy)){var da=b.r+c.r,dc=dx*dx+dy*dy;da*=da;db*=db;var x=.5+(db-da)/(2*dc),y=Math.sqrt(Math.max(0,2*da*(db+dc)-(db-=dc)*db-da*da))/(2*dc);c.x=a.x+x*dx+y*dy;c.y=a.y+x*dy-y*dx;}else{c.x=a.x+db;c.y=a.y;}}d3.layout.tree=function(){var hierarchy=d3.layout.hierarchy().sort(null).value(null),separation=d3_layout_treeSeparation,size=[1,1],nodeSize=null;function tree(d,i){var nodes=hierarchy.call(this,d,i),root0=nodes[0],root1=wrapTree(root0);d3_layout_hierarchyVisitAfter(root1,firstWalk),root1.parent.m=-root1.z;d3_layout_hierarchyVisitBefore(root1,secondWalk);if(nodeSize)d3_layout_hierarchyVisitBefore(root0,sizeNode);else{var left=root0,right=root0,bottom=root0;d3_layout_hierarchyVisitBefore(root0,function(node){if(node.x<left.x)left=node;if(node.x>right.x)right=node;if(node.depth>bottom.depth)bottom=node;});var tx=separation(left,right)/2-left.x,kx=size[0]/(right.x+separation(right,left)/2+tx),ky=size[1]/(bottom.depth||1);d3_layout_hierarchyVisitBefore(root0,function(node){node.x=(node.x+tx)*kx;node.y=node.depth*ky;});}return nodes;}function wrapTree(root0){var root1={A:null,children:[root0]},queue=[root1],node1;while((node1=queue.pop())!=null){for(var children=node1.children,child,i=0,n=children.length;i<n;++i){queue.push((children[i]=child={_:children[i],parent:node1,children:(child=children[i].children)&&child.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:i}).a=child);}}return root1.children[0];}function firstWalk(v){var children=v.children,siblings=v.parent.children,w=v.i?siblings[v.i-1]:null;if(children.length){d3_layout_treeShift(v);var midpoint=(children[0].z+children[children.length-1].z)/2;if(w){v.z=w.z+separation(v._,w._);v.m=v.z-midpoint;}else{v.z=midpoint;}}else if(w){v.z=w.z+separation(v._,w._);}v.parent.A=apportion(v,w,v.parent.A||siblings[0]);}function secondWalk(v){v._.x=v.z+v.parent.m;v.m+=v.parent.m;}function apportion(v,w,ancestor){if(w){var vip=v,vop=v,vim=w,vom=vip.parent.children[0],sip=vip.m,sop=vop.m,sim=vim.m,som=vom.m,shift;while(vim=d3_layout_treeRight(vim),vip=d3_layout_treeLeft(vip),vim&&vip){vom=d3_layout_treeLeft(vom);vop=d3_layout_treeRight(vop);vop.a=v;shift=vim.z+sim-vip.z-sip+separation(vim._,vip._);if(shift>0){d3_layout_treeMove(d3_layout_treeAncestor(vim,v,ancestor),v,shift);sip+=shift;sop+=shift;}sim+=vim.m;sip+=vip.m;som+=vom.m;sop+=vop.m;}if(vim&&!d3_layout_treeRight(vop)){vop.t=vim;vop.m+=sim-sop;}if(vip&&!d3_layout_treeLeft(vom)){vom.t=vip;vom.m+=sip-som;ancestor=v;}}return ancestor;}function sizeNode(node){node.x*=size[0];node.y=node.depth*size[1];}tree.separation=function(x){if(!arguments.length)return separation;separation=x;return tree;};tree.size=function(x){if(!arguments.length)return nodeSize?null:size;nodeSize=(size=x)==null?sizeNode:null;return tree;};tree.nodeSize=function(x){if(!arguments.length)return nodeSize?size:null;nodeSize=(size=x)==null?null:sizeNode;return tree;};return d3_layout_hierarchyRebind(tree,hierarchy);};function d3_layout_treeSeparation(a,b){return a.parent==b.parent?1:2;}function d3_layout_treeLeft(v){var children=v.children;return children.length?children[0]:v.t;}function d3_layout_treeRight(v){var children=v.children,n;return(n=children.length)?children[n-1]:v.t;}function d3_layout_treeMove(wm,wp,shift){var change=shift/(wp.i-wm.i);wp.c-=change;wp.s+=shift;wm.c+=change;wp.z+=shift;wp.m+=shift;}function d3_layout_treeShift(v){var shift=0,change=0,children=v.children,i=children.length,w;while(--i>=0){w=children[i];w.z+=shift;w.m+=shift;shift+=w.s+(change+=w.c);}}function d3_layout_treeAncestor(vim,v,ancestor){return vim.a.parent===v.parent?vim.a:ancestor;}d3.layout.cluster=function(){var hierarchy=d3.layout.hierarchy().sort(null).value(null),separation=d3_layout_treeSeparation,size=[1,1],nodeSize=false;function cluster(d,i){var nodes=hierarchy.call(this,d,i),root=nodes[0],previousNode,x=0;d3_layout_hierarchyVisitAfter(root,function(node){var children=node.children;if(children&&children.length){node.x=d3_layout_clusterX(children);node.y=d3_layout_clusterY(children);}else{node.x=previousNode?x+=separation(node,previousNode):0;node.y=0;previousNode=node;}});var left=d3_layout_clusterLeft(root),right=d3_layout_clusterRight(root),x0=left.x-separation(left,right)/2,x1=right.x+separation(right,left)/2;d3_layout_hierarchyVisitAfter(root,nodeSize?function(node){node.x=(node.x-root.x)*size[0];node.y=(root.y-node.y)*size[1];}:function(node){node.x=(node.x-x0)/(x1-x0)*size[0];node.y=(1-(root.y?node.y/root.y:1))*size[1];});return nodes;}cluster.separation=function(x){if(!arguments.length)return separation;separation=x;return cluster;};cluster.size=function(x){if(!arguments.length)return nodeSize?null:size;nodeSize=(size=x)==null;return cluster;};cluster.nodeSize=function(x){if(!arguments.length)return nodeSize?size:null;nodeSize=(size=x)!=null;return cluster;};return d3_layout_hierarchyRebind(cluster,hierarchy);};function d3_layout_clusterY(children){return 1+d3.max(children,function(child){return child.y;});}function d3_layout_clusterX(children){return children.reduce(function(x,child){return x+child.x;},0)/children.length;}function d3_layout_clusterLeft(node){var children=node.children;return children&&children.length?d3_layout_clusterLeft(children[0]):node;}function d3_layout_clusterRight(node){var children=node.children,n;return children&&(n=children.length)?d3_layout_clusterRight(children[n-1]):node;}d3.layout.treemap=function(){var hierarchy=d3.layout.hierarchy(),round=Math.round,size=[1,1],padding=null,pad=d3_layout_treemapPadNull,sticky=false,stickies,mode=\"squarify\",ratio=.5*(1+Math.sqrt(5));function scale(children,k){var i=-1,n=children.length,child,area;while(++i<n){area=(child=children[i]).value*(k<0?0:k);child.area=isNaN(area)||area<=0?0:area;}}function squarify(node){var children=node.children;if(children&&children.length){var rect=pad(node),row=[],remaining=children.slice(),child,best=Infinity,score,u=mode===\"slice\"?rect.dx:mode===\"dice\"?rect.dy:mode===\"slice-dice\"?node.depth&1?rect.dy:rect.dx:Math.min(rect.dx,rect.dy),n;scale(remaining,rect.dx*rect.dy/node.value);row.area=0;while((n=remaining.length)>0){row.push(child=remaining[n-1]);row.area+=child.area;if(mode!==\"squarify\"||(score=worst(row,u))<=best){remaining.pop();best=score;}else{row.area-=row.pop().area;position(row,u,rect,false);u=Math.min(rect.dx,rect.dy);row.length=row.area=0;best=Infinity;}}if(row.length){position(row,u,rect,true);row.length=row.area=0;}children.forEach(squarify);}}function stickify(node){var children=node.children;if(children&&children.length){var rect=pad(node),remaining=children.slice(),child,row=[];scale(remaining,rect.dx*rect.dy/node.value);row.area=0;while(child=remaining.pop()){row.push(child);row.area+=child.area;if(child.z!=null){position(row,child.z?rect.dx:rect.dy,rect,!remaining.length);row.length=row.area=0;}}children.forEach(stickify);}}function worst(row,u){var s=row.area,r,rmax=0,rmin=Infinity,i=-1,n=row.length;while(++i<n){if(!(r=row[i].area))continue;if(r<rmin)rmin=r;if(r>rmax)rmax=r;}s*=s;u*=u;return s?Math.max(u*rmax*ratio/s,s/(u*rmin*ratio)):Infinity;}function position(row,u,rect,flush){var i=-1,n=row.length,x=rect.x,y=rect.y,v=u?round(row.area/u):0,o;if(u==rect.dx){if(flush||v>rect.dy)v=rect.dy;while(++i<n){o=row[i];o.x=x;o.y=y;o.dy=v;x+=o.dx=Math.min(rect.x+rect.dx-x,v?round(o.area/v):0);}o.z=true;o.dx+=rect.x+rect.dx-x;rect.y+=v;rect.dy-=v;}else{if(flush||v>rect.dx)v=rect.dx;while(++i<n){o=row[i];o.x=x;o.y=y;o.dx=v;y+=o.dy=Math.min(rect.y+rect.dy-y,v?round(o.area/v):0);}o.z=false;o.dy+=rect.y+rect.dy-y;rect.x+=v;rect.dx-=v;}}function treemap(d){var nodes=stickies||hierarchy(d),root=nodes[0];root.x=root.y=0;if(root.value)root.dx=size[0],root.dy=size[1];else root.dx=root.dy=0;if(stickies)hierarchy.revalue(root);scale([root],root.dx*root.dy/root.value);(stickies?stickify:squarify)(root);if(sticky)stickies=nodes;return nodes;}treemap.size=function(x){if(!arguments.length)return size;size=x;return treemap;};treemap.padding=function(x){if(!arguments.length)return padding;function padFunction(node){var p=x.call(treemap,node,node.depth);return p==null?d3_layout_treemapPadNull(node):d3_layout_treemapPad(node,typeof p===\"number\"?[p,p,p,p]:p);}function padConstant(node){return d3_layout_treemapPad(node,x);}var type;pad=(padding=x)==null?d3_layout_treemapPadNull:(type=_typeof(x))===\"function\"?padFunction:type===\"number\"?(x=[x,x,x,x],padConstant):padConstant;return treemap;};treemap.round=function(x){if(!arguments.length)return round!=Number;round=x?Math.round:Number;return treemap;};treemap.sticky=function(x){if(!arguments.length)return sticky;sticky=x;stickies=null;return treemap;};treemap.ratio=function(x){if(!arguments.length)return ratio;ratio=x;return treemap;};treemap.mode=function(x){if(!arguments.length)return mode;mode=x+\"\";return treemap;};return d3_layout_hierarchyRebind(treemap,hierarchy);};function d3_layout_treemapPadNull(node){return{x:node.x,y:node.y,dx:node.dx,dy:node.dy};}function d3_layout_treemapPad(node,padding){var x=node.x+padding[3],y=node.y+padding[0],dx=node.dx-padding[1]-padding[3],dy=node.dy-padding[0]-padding[2];if(dx<0){x+=dx/2;dx=0;}if(dy<0){y+=dy/2;dy=0;}return{x:x,y:y,dx:dx,dy:dy};}d3.random={normal:function normal(µ,σ){var n=arguments.length;if(n<2)σ=1;if(n<1)µ=0;return function(){var x,y,r;do{x=Math.random()*2-1;y=Math.random()*2-1;r=x*x+y*y;}while(!r||r>1);return µ+σ*x*Math.sqrt(-2*Math.log(r)/r);};},logNormal:function logNormal(){var random=d3.random.normal.apply(d3,arguments);return function(){return Math.exp(random());};},bates:function bates(m){var random=d3.random.irwinHall(m);return function(){return random()/m;};},irwinHall:function irwinHall(m){return function(){for(var s=0,j=0;j<m;j++){s+=Math.random();}return s;};}};d3.scale={};function d3_scaleExtent(domain){var start=domain[0],stop=domain[domain.length-1];return start<stop?[start,stop]:[stop,start];}function d3_scaleRange(scale){return scale.rangeExtent?scale.rangeExtent():d3_scaleExtent(scale.range());}function d3_scale_bilinear(domain,range,uninterpolate,interpolate){var u=uninterpolate(domain[0],domain[1]),i=interpolate(range[0],range[1]);return function(x){return i(u(x));};}function d3_scale_nice(domain,nice){var i0=0,i1=domain.length-1,x0=domain[i0],x1=domain[i1],dx;if(x1<x0){dx=i0,i0=i1,i1=dx;dx=x0,x0=x1,x1=dx;}domain[i0]=nice.floor(x0);domain[i1]=nice.ceil(x1);return domain;}function d3_scale_niceStep(step){return step?{floor:function floor(x){return Math.floor(x/step)*step;},ceil:function ceil(x){return Math.ceil(x/step)*step;}}:d3_scale_niceIdentity;}var d3_scale_niceIdentity={floor:d3_identity,ceil:d3_identity};function d3_scale_polylinear(domain,range,uninterpolate,interpolate){var u=[],i=[],j=0,k=Math.min(domain.length,range.length)-1;if(domain[k]<domain[0]){domain=domain.slice().reverse();range=range.slice().reverse();}while(++j<=k){u.push(uninterpolate(domain[j-1],domain[j]));i.push(interpolate(range[j-1],range[j]));}return function(x){var j=d3.bisect(domain,x,1,k)-1;return i[j](u[j](x));};}d3.scale.linear=function(){return d3_scale_linear([0,1],[0,1],d3_interpolate,false);};function d3_scale_linear(domain,range,interpolate,clamp){var output,input;function rescale(){var linear=Math.min(domain.length,range.length)>2?d3_scale_polylinear:d3_scale_bilinear,uninterpolate=clamp?d3_uninterpolateClamp:d3_uninterpolateNumber;output=linear(domain,range,uninterpolate,interpolate);input=linear(range,domain,uninterpolate,d3_interpolate);return scale;}function scale(x){return output(x);}scale.invert=function(y){return input(y);};scale.domain=function(x){if(!arguments.length)return domain;domain=x.map(Number);return rescale();};scale.range=function(x){if(!arguments.length)return range;range=x;return rescale();};scale.rangeRound=function(x){return scale.range(x).interpolate(d3_interpolateRound);};scale.clamp=function(x){if(!arguments.length)return clamp;clamp=x;return rescale();};scale.interpolate=function(x){if(!arguments.length)return interpolate;interpolate=x;return rescale();};scale.ticks=function(m){return d3_scale_linearTicks(domain,m);};scale.tickFormat=function(m,format){return d3_scale_linearTickFormat(domain,m,format);};scale.nice=function(m){d3_scale_linearNice(domain,m);return rescale();};scale.copy=function(){return d3_scale_linear(domain,range,interpolate,clamp);};return rescale();}function d3_scale_linearRebind(scale,linear){return d3.rebind(scale,linear,\"range\",\"rangeRound\",\"interpolate\",\"clamp\");}function d3_scale_linearNice(domain,m){d3_scale_nice(domain,d3_scale_niceStep(d3_scale_linearTickRange(domain,m)[2]));d3_scale_nice(domain,d3_scale_niceStep(d3_scale_linearTickRange(domain,m)[2]));return domain;}function d3_scale_linearTickRange(domain,m){if(m==null)m=10;var extent=d3_scaleExtent(domain),span=extent[1]-extent[0],step=Math.pow(10,Math.floor(Math.log(span/m)/Math.LN10)),err=m/span*step;if(err<=.15)step*=10;else if(err<=.35)step*=5;else if(err<=.75)step*=2;extent[0]=Math.ceil(extent[0]/step)*step;extent[1]=Math.floor(extent[1]/step)*step+step*.5;extent[2]=step;return extent;}function d3_scale_linearTicks(domain,m){return d3.range.apply(d3,d3_scale_linearTickRange(domain,m));}function d3_scale_linearTickFormat(domain,m,format){var range=d3_scale_linearTickRange(domain,m);if(format){var match=d3_format_re.exec(format);match.shift();if(match[8]===\"s\"){var prefix=d3.formatPrefix(Math.max(abs(range[0]),abs(range[1])));if(!match[7])match[7]=\".\"+d3_scale_linearPrecision(prefix.scale(range[2]));match[8]=\"f\";format=d3.format(match.join(\"\"));return function(d){return format(prefix.scale(d))+prefix.symbol;};}if(!match[7])match[7]=\".\"+d3_scale_linearFormatPrecision(match[8],range);format=match.join(\"\");}else{format=\",.\"+d3_scale_linearPrecision(range[2])+\"f\";}return d3.format(format);}var d3_scale_linearFormatSignificant={s:1,g:1,p:1,r:1,e:1};function d3_scale_linearPrecision(value){return-Math.floor(Math.log(value)/Math.LN10+.01);}function d3_scale_linearFormatPrecision(type,range){var p=d3_scale_linearPrecision(range[2]);return type in d3_scale_linearFormatSignificant?Math.abs(p-d3_scale_linearPrecision(Math.max(abs(range[0]),abs(range[1]))))+ +(type!==\"e\"):p-(type===\"%\")*2;}d3.scale.log=function(){return d3_scale_log(d3.scale.linear().domain([0,1]),10,true,[1,10]);};function d3_scale_log(linear,base,positive,domain){function log(x){return(positive?Math.log(x<0?0:x):-Math.log(x>0?0:-x))/Math.log(base);}function pow(x){return positive?Math.pow(base,x):-Math.pow(base,-x);}function scale(x){return linear(log(x));}scale.invert=function(x){return pow(linear.invert(x));};scale.domain=function(x){if(!arguments.length)return domain;positive=x[0]>=0;linear.domain((domain=x.map(Number)).map(log));return scale;};scale.base=function(_){if(!arguments.length)return base;base=+_;linear.domain(domain.map(log));return scale;};scale.nice=function(){var niced=d3_scale_nice(domain.map(log),positive?Math:d3_scale_logNiceNegative);linear.domain(niced);domain=niced.map(pow);return scale;};scale.ticks=function(){var extent=d3_scaleExtent(domain),ticks=[],u=extent[0],v=extent[1],i=Math.floor(log(u)),j=Math.ceil(log(v)),n=base%1?2:base;if(isFinite(j-i)){if(positive){for(;i<j;i++){for(var k=1;k<n;k++){ticks.push(pow(i)*k);}}ticks.push(pow(i));}else{ticks.push(pow(i));for(;i++<j;){for(var k=n-1;k>0;k--){ticks.push(pow(i)*k);}}}for(i=0;ticks[i]<u;i++){}for(j=ticks.length;ticks[j-1]>v;j--){}ticks=ticks.slice(i,j);}return ticks;};scale.tickFormat=function(n,format){if(!arguments.length)return d3_scale_logFormat;if(arguments.length<2)format=d3_scale_logFormat;else if(typeof format!==\"function\")format=d3.format(format);var k=Math.max(1,base*n/scale.ticks().length);return function(d){var i=d/pow(Math.round(log(d)));if(i*base<base-.5)i*=base;return i<=k?format(d):\"\";};};scale.copy=function(){return d3_scale_log(linear.copy(),base,positive,domain);};return d3_scale_linearRebind(scale,linear);}var d3_scale_logFormat=d3.format(\".0e\"),d3_scale_logNiceNegative={floor:function floor(x){return-Math.ceil(-x);},ceil:function ceil(x){return-Math.floor(-x);}};d3.scale.pow=function(){return d3_scale_pow(d3.scale.linear(),1,[0,1]);};function d3_scale_pow(linear,exponent,domain){var powp=d3_scale_powPow(exponent),powb=d3_scale_powPow(1/exponent);function scale(x){return linear(powp(x));}scale.invert=function(x){return powb(linear.invert(x));};scale.domain=function(x){if(!arguments.length)return domain;linear.domain((domain=x.map(Number)).map(powp));return scale;};scale.ticks=function(m){return d3_scale_linearTicks(domain,m);};scale.tickFormat=function(m,format){return d3_scale_linearTickFormat(domain,m,format);};scale.nice=function(m){return scale.domain(d3_scale_linearNice(domain,m));};scale.exponent=function(x){if(!arguments.length)return exponent;powp=d3_scale_powPow(exponent=x);powb=d3_scale_powPow(1/exponent);linear.domain(domain.map(powp));return scale;};scale.copy=function(){return d3_scale_pow(linear.copy(),exponent,domain);};return d3_scale_linearRebind(scale,linear);}function d3_scale_powPow(e){return function(x){return x<0?-Math.pow(-x,e):Math.pow(x,e);};}d3.scale.sqrt=function(){return d3.scale.pow().exponent(.5);};d3.scale.ordinal=function(){return d3_scale_ordinal([],{t:\"range\",a:[[]]});};function d3_scale_ordinal(domain,ranger){var index,range,rangeBand;function scale(x){return range[((index.get(x)||(ranger.t===\"range\"?index.set(x,domain.push(x)):NaN))-1)%range.length];}function steps(start,step){return d3.range(domain.length).map(function(i){return start+step*i;});}scale.domain=function(x){if(!arguments.length)return domain;domain=[];index=new d3_Map();var i=-1,n=x.length,xi;while(++i<n){if(!index.has(xi=x[i]))index.set(xi,domain.push(xi));}return scale[ranger.t].apply(scale,ranger.a);};scale.range=function(x){if(!arguments.length)return range;range=x;rangeBand=0;ranger={t:\"range\",a:arguments};return scale;};scale.rangePoints=function(x,padding){if(arguments.length<2)padding=0;var start=x[0],stop=x[1],step=domain.length<2?(start=(start+stop)/2,0):(stop-start)/(domain.length-1+padding);range=steps(start+step*padding/2,step);rangeBand=0;ranger={t:\"rangePoints\",a:arguments};return scale;};scale.rangeRoundPoints=function(x,padding){if(arguments.length<2)padding=0;var start=x[0],stop=x[1],step=domain.length<2?(start=stop=Math.round((start+stop)/2),0):(stop-start)/(domain.length-1+padding)|0;range=steps(start+Math.round(step*padding/2+(stop-start-(domain.length-1+padding)*step)/2),step);rangeBand=0;ranger={t:\"rangeRoundPoints\",a:arguments};return scale;};scale.rangeBands=function(x,padding,outerPadding){if(arguments.length<2)padding=0;if(arguments.length<3)outerPadding=padding;var reverse=x[1]<x[0],start=x[reverse-0],stop=x[1-reverse],step=(stop-start)/(domain.length-padding+2*outerPadding);range=steps(start+step*outerPadding,step);if(reverse)range.reverse();rangeBand=step*(1-padding);ranger={t:\"rangeBands\",a:arguments};return scale;};scale.rangeRoundBands=function(x,padding,outerPadding){if(arguments.length<2)padding=0;if(arguments.length<3)outerPadding=padding;var reverse=x[1]<x[0],start=x[reverse-0],stop=x[1-reverse],step=Math.floor((stop-start)/(domain.length-padding+2*outerPadding));range=steps(start+Math.round((stop-start-(domain.length-padding)*step)/2),step);if(reverse)range.reverse();rangeBand=Math.round(step*(1-padding));ranger={t:\"rangeRoundBands\",a:arguments};return scale;};scale.rangeBand=function(){return rangeBand;};scale.rangeExtent=function(){return d3_scaleExtent(ranger.a[0]);};scale.copy=function(){return d3_scale_ordinal(domain,ranger);};return scale.domain(domain);}d3.scale.category10=function(){return d3.scale.ordinal().range(d3_category10);};d3.scale.category20=function(){return d3.scale.ordinal().range(d3_category20);};d3.scale.category20b=function(){return d3.scale.ordinal().range(d3_category20b);};d3.scale.category20c=function(){return d3.scale.ordinal().range(d3_category20c);};var d3_category10=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(d3_rgbString);var d3_category20=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(d3_rgbString);var d3_category20b=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(d3_rgbString);var d3_category20c=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(d3_rgbString);d3.scale.quantile=function(){return d3_scale_quantile([],[]);};function d3_scale_quantile(domain,range){var thresholds;function rescale(){var k=0,q=range.length;thresholds=[];while(++k<q){thresholds[k-1]=d3.quantile(domain,k/q);}return scale;}function scale(x){if(!isNaN(x=+x))return range[d3.bisect(thresholds,x)];}scale.domain=function(x){if(!arguments.length)return domain;domain=x.map(d3_number).filter(d3_numeric).sort(d3_ascending);return rescale();};scale.range=function(x){if(!arguments.length)return range;range=x;return rescale();};scale.quantiles=function(){return thresholds;};scale.invertExtent=function(y){y=range.indexOf(y);return y<0?[NaN,NaN]:[y>0?thresholds[y-1]:domain[0],y<thresholds.length?thresholds[y]:domain[domain.length-1]];};scale.copy=function(){return d3_scale_quantile(domain,range);};return rescale();}d3.scale.quantize=function(){return d3_scale_quantize(0,1,[0,1]);};function d3_scale_quantize(x0,x1,range){var kx,i;function scale(x){return range[Math.max(0,Math.min(i,Math.floor(kx*(x-x0))))];}function rescale(){kx=range.length/(x1-x0);i=range.length-1;return scale;}scale.domain=function(x){if(!arguments.length)return[x0,x1];x0=+x[0];x1=+x[x.length-1];return rescale();};scale.range=function(x){if(!arguments.length)return range;range=x;return rescale();};scale.invertExtent=function(y){y=range.indexOf(y);y=y<0?NaN:y/kx+x0;return[y,y+1/kx];};scale.copy=function(){return d3_scale_quantize(x0,x1,range);};return rescale();}d3.scale.threshold=function(){return d3_scale_threshold([.5],[0,1]);};function d3_scale_threshold(domain,range){function scale(x){if(x<=x)return range[d3.bisect(domain,x)];}scale.domain=function(_){if(!arguments.length)return domain;domain=_;return scale;};scale.range=function(_){if(!arguments.length)return range;range=_;return scale;};scale.invertExtent=function(y){y=range.indexOf(y);return[domain[y-1],domain[y]];};scale.copy=function(){return d3_scale_threshold(domain,range);};return scale;}d3.scale.identity=function(){return d3_scale_identity([0,1]);};function d3_scale_identity(domain){function identity(x){return+x;}identity.invert=identity;identity.domain=identity.range=function(x){if(!arguments.length)return domain;domain=x.map(identity);return identity;};identity.ticks=function(m){return d3_scale_linearTicks(domain,m);};identity.tickFormat=function(m,format){return d3_scale_linearTickFormat(domain,m,format);};identity.copy=function(){return d3_scale_identity(domain);};return identity;}d3.svg={};function d3_zero(){return 0;}d3.svg.arc=function(){var innerRadius=d3_svg_arcInnerRadius,outerRadius=d3_svg_arcOuterRadius,cornerRadius=d3_zero,padRadius=d3_svg_arcAuto,startAngle=d3_svg_arcStartAngle,endAngle=d3_svg_arcEndAngle,padAngle=d3_svg_arcPadAngle;function arc(){var r0=Math.max(0,+innerRadius.apply(this,arguments)),r1=Math.max(0,+outerRadius.apply(this,arguments)),a0=startAngle.apply(this,arguments)-halfπ,a1=endAngle.apply(this,arguments)-halfπ,da=Math.abs(a1-a0),cw=a0>a1?0:1;if(r1<r0)rc=r1,r1=r0,r0=rc;if(da>=τε)return circleSegment(r1,cw)+(r0?circleSegment(r0,1-cw):\"\")+\"Z\";var rc,cr,rp,ap,p0=0,p1=0,x0,y0,x1,y1,x2,y2,x3,y3,path=[];if(ap=(+padAngle.apply(this,arguments)||0)/2){rp=padRadius===d3_svg_arcAuto?Math.sqrt(r0*r0+r1*r1):+padRadius.apply(this,arguments);if(!cw)p1*=-1;if(r1)p1=d3_asin(rp/r1*Math.sin(ap));if(r0)p0=d3_asin(rp/r0*Math.sin(ap));}if(r1){x0=r1*Math.cos(a0+p1);y0=r1*Math.sin(a0+p1);x1=r1*Math.cos(a1-p1);y1=r1*Math.sin(a1-p1);var l1=Math.abs(a1-a0-2*p1)<=π?0:1;if(p1&&d3_svg_arcSweep(x0,y0,x1,y1)===cw^l1){var h1=(a0+a1)/2;x0=r1*Math.cos(h1);y0=r1*Math.sin(h1);x1=y1=null;}}else{x0=y0=0;}if(r0){x2=r0*Math.cos(a1-p0);y2=r0*Math.sin(a1-p0);x3=r0*Math.cos(a0+p0);y3=r0*Math.sin(a0+p0);var l0=Math.abs(a0-a1+2*p0)<=π?0:1;if(p0&&d3_svg_arcSweep(x2,y2,x3,y3)===1-cw^l0){var h0=(a0+a1)/2;x2=r0*Math.cos(h0);y2=r0*Math.sin(h0);x3=y3=null;}}else{x2=y2=0;}if(da>ε&&(rc=Math.min(Math.abs(r1-r0)/2,+cornerRadius.apply(this,arguments)))>.001){cr=r0<r1^cw?0:1;var rc1=rc,rc0=rc;if(da<π){var oc=x3==null?[x2,y2]:x1==null?[x0,y0]:d3_geom_polygonIntersect([x0,y0],[x3,y3],[x1,y1],[x2,y2]),ax=x0-oc[0],ay=y0-oc[1],bx=x1-oc[0],by=y1-oc[1],kc=1/Math.sin(Math.acos((ax*bx+ay*by)/(Math.sqrt(ax*ax+ay*ay)*Math.sqrt(bx*bx+by*by)))/2),lc=Math.sqrt(oc[0]*oc[0]+oc[1]*oc[1]);rc0=Math.min(rc,(r0-lc)/(kc-1));rc1=Math.min(rc,(r1-lc)/(kc+1));}if(x1!=null){var t30=d3_svg_arcCornerTangents(x3==null?[x2,y2]:[x3,y3],[x0,y0],r1,rc1,cw),t12=d3_svg_arcCornerTangents([x1,y1],[x2,y2],r1,rc1,cw);if(rc===rc1){path.push(\"M\",t30[0],\"A\",rc1,\",\",rc1,\" 0 0,\",cr,\" \",t30[1],\"A\",r1,\",\",r1,\" 0 \",1-cw^d3_svg_arcSweep(t30[1][0],t30[1][1],t12[1][0],t12[1][1]),\",\",cw,\" \",t12[1],\"A\",rc1,\",\",rc1,\" 0 0,\",cr,\" \",t12[0]);}else{path.push(\"M\",t30[0],\"A\",rc1,\",\",rc1,\" 0 1,\",cr,\" \",t12[0]);}}else{path.push(\"M\",x0,\",\",y0);}if(x3!=null){var t03=d3_svg_arcCornerTangents([x0,y0],[x3,y3],r0,-rc0,cw),t21=d3_svg_arcCornerTangents([x2,y2],x1==null?[x0,y0]:[x1,y1],r0,-rc0,cw);if(rc===rc0){path.push(\"L\",t21[0],\"A\",rc0,\",\",rc0,\" 0 0,\",cr,\" \",t21[1],\"A\",r0,\",\",r0,\" 0 \",cw^d3_svg_arcSweep(t21[1][0],t21[1][1],t03[1][0],t03[1][1]),\",\",1-cw,\" \",t03[1],\"A\",rc0,\",\",rc0,\" 0 0,\",cr,\" \",t03[0]);}else{path.push(\"L\",t21[0],\"A\",rc0,\",\",rc0,\" 0 0,\",cr,\" \",t03[0]);}}else{path.push(\"L\",x2,\",\",y2);}}else{path.push(\"M\",x0,\",\",y0);if(x1!=null)path.push(\"A\",r1,\",\",r1,\" 0 \",l1,\",\",cw,\" \",x1,\",\",y1);path.push(\"L\",x2,\",\",y2);if(x3!=null)path.push(\"A\",r0,\",\",r0,\" 0 \",l0,\",\",1-cw,\" \",x3,\",\",y3);}path.push(\"Z\");return path.join(\"\");}function circleSegment(r1,cw){return\"M0,\"+r1+\"A\"+r1+\",\"+r1+\" 0 1,\"+cw+\" 0,\"+-r1+\"A\"+r1+\",\"+r1+\" 0 1,\"+cw+\" 0,\"+r1;}arc.innerRadius=function(v){if(!arguments.length)return innerRadius;innerRadius=d3_functor(v);return arc;};arc.outerRadius=function(v){if(!arguments.length)return outerRadius;outerRadius=d3_functor(v);return arc;};arc.cornerRadius=function(v){if(!arguments.length)return cornerRadius;cornerRadius=d3_functor(v);return arc;};arc.padRadius=function(v){if(!arguments.length)return padRadius;padRadius=v==d3_svg_arcAuto?d3_svg_arcAuto:d3_functor(v);return arc;};arc.startAngle=function(v){if(!arguments.length)return startAngle;startAngle=d3_functor(v);return arc;};arc.endAngle=function(v){if(!arguments.length)return endAngle;endAngle=d3_functor(v);return arc;};arc.padAngle=function(v){if(!arguments.length)return padAngle;padAngle=d3_functor(v);return arc;};arc.centroid=function(){var r=(+innerRadius.apply(this,arguments)+ +outerRadius.apply(this,arguments))/2,a=(+startAngle.apply(this,arguments)+ +endAngle.apply(this,arguments))/2-halfπ;return[Math.cos(a)*r,Math.sin(a)*r];};return arc;};var d3_svg_arcAuto=\"auto\";function d3_svg_arcInnerRadius(d){return d.innerRadius;}function d3_svg_arcOuterRadius(d){return d.outerRadius;}function d3_svg_arcStartAngle(d){return d.startAngle;}function d3_svg_arcEndAngle(d){return d.endAngle;}function d3_svg_arcPadAngle(d){return d&&d.padAngle;}function d3_svg_arcSweep(x0,y0,x1,y1){return(x0-x1)*y0-(y0-y1)*x0>0?0:1;}function d3_svg_arcCornerTangents(p0,p1,r1,rc,cw){var x01=p0[0]-p1[0],y01=p0[1]-p1[1],lo=(cw?rc:-rc)/Math.sqrt(x01*x01+y01*y01),ox=lo*y01,oy=-lo*x01,x1=p0[0]+ox,y1=p0[1]+oy,x2=p1[0]+ox,y2=p1[1]+oy,x3=(x1+x2)/2,y3=(y1+y2)/2,dx=x2-x1,dy=y2-y1,d2=dx*dx+dy*dy,r=r1-rc,D=x1*y2-x2*y1,d=(dy<0?-1:1)*Math.sqrt(Math.max(0,r*r*d2-D*D)),cx0=(D*dy-dx*d)/d2,cy0=(-D*dx-dy*d)/d2,cx1=(D*dy+dx*d)/d2,cy1=(-D*dx+dy*d)/d2,dx0=cx0-x3,dy0=cy0-y3,dx1=cx1-x3,dy1=cy1-y3;if(dx0*dx0+dy0*dy0>dx1*dx1+dy1*dy1)cx0=cx1,cy0=cy1;return[[cx0-ox,cy0-oy],[cx0*r1/r,cy0*r1/r]];}function d3_svg_line(projection){var x=d3_geom_pointX,y=d3_geom_pointY,defined=d3_true,interpolate=d3_svg_lineLinear,interpolateKey=interpolate.key,tension=.7;function line(data){var segments=[],points=[],i=-1,n=data.length,d,fx=d3_functor(x),fy=d3_functor(y);function segment(){segments.push(\"M\",interpolate(projection(points),tension));}while(++i<n){if(defined.call(this,d=data[i],i)){points.push([+fx.call(this,d,i),+fy.call(this,d,i)]);}else if(points.length){segment();points=[];}}if(points.length)segment();return segments.length?segments.join(\"\"):null;}line.x=function(_){if(!arguments.length)return x;x=_;return line;};line.y=function(_){if(!arguments.length)return y;y=_;return line;};line.defined=function(_){if(!arguments.length)return defined;defined=_;return line;};line.interpolate=function(_){if(!arguments.length)return interpolateKey;if(typeof _===\"function\")interpolateKey=interpolate=_;else interpolateKey=(interpolate=d3_svg_lineInterpolators.get(_)||d3_svg_lineLinear).key;return line;};line.tension=function(_){if(!arguments.length)return tension;tension=_;return line;};return line;}d3.svg.line=function(){return d3_svg_line(d3_identity);};var d3_svg_lineInterpolators=d3.map({linear:d3_svg_lineLinear,\"linear-closed\":d3_svg_lineLinearClosed,step:d3_svg_lineStep,\"step-before\":d3_svg_lineStepBefore,\"step-after\":d3_svg_lineStepAfter,basis:d3_svg_lineBasis,\"basis-open\":d3_svg_lineBasisOpen,\"basis-closed\":d3_svg_lineBasisClosed,bundle:d3_svg_lineBundle,cardinal:d3_svg_lineCardinal,\"cardinal-open\":d3_svg_lineCardinalOpen,\"cardinal-closed\":d3_svg_lineCardinalClosed,monotone:d3_svg_lineMonotone});d3_svg_lineInterpolators.forEach(function(key,value){value.key=key;value.closed=/-closed$/.test(key);});function d3_svg_lineLinear(points){return points.length>1?points.join(\"L\"):points+\"Z\";}function d3_svg_lineLinearClosed(points){return points.join(\"L\")+\"Z\";}function d3_svg_lineStep(points){var i=0,n=points.length,p=points[0],path=[p[0],\",\",p[1]];while(++i<n){path.push(\"H\",(p[0]+(p=points[i])[0])/2,\"V\",p[1]);}if(n>1)path.push(\"H\",p[0]);return path.join(\"\");}function d3_svg_lineStepBefore(points){var i=0,n=points.length,p=points[0],path=[p[0],\",\",p[1]];while(++i<n){path.push(\"V\",(p=points[i])[1],\"H\",p[0]);}return path.join(\"\");}function d3_svg_lineStepAfter(points){var i=0,n=points.length,p=points[0],path=[p[0],\",\",p[1]];while(++i<n){path.push(\"H\",(p=points[i])[0],\"V\",p[1]);}return path.join(\"\");}function d3_svg_lineCardinalOpen(points,tension){return points.length<4?d3_svg_lineLinear(points):points[1]+d3_svg_lineHermite(points.slice(1,-1),d3_svg_lineCardinalTangents(points,tension));}function d3_svg_lineCardinalClosed(points,tension){return points.length<3?d3_svg_lineLinearClosed(points):points[0]+d3_svg_lineHermite((points.push(points[0]),points),d3_svg_lineCardinalTangents([points[points.length-2]].concat(points,[points[1]]),tension));}function d3_svg_lineCardinal(points,tension){return points.length<3?d3_svg_lineLinear(points):points[0]+d3_svg_lineHermite(points,d3_svg_lineCardinalTangents(points,tension));}function d3_svg_lineHermite(points,tangents){if(tangents.length<1||points.length!=tangents.length&&points.length!=tangents.length+2){return d3_svg_lineLinear(points);}var quad=points.length!=tangents.length,path=\"\",p0=points[0],p=points[1],t0=tangents[0],t=t0,pi=1;if(quad){path+=\"Q\"+(p[0]-t0[0]*2/3)+\",\"+(p[1]-t0[1]*2/3)+\",\"+p[0]+\",\"+p[1];p0=points[1];pi=2;}if(tangents.length>1){t=tangents[1];p=points[pi];pi++;path+=\"C\"+(p0[0]+t0[0])+\",\"+(p0[1]+t0[1])+\",\"+(p[0]-t[0])+\",\"+(p[1]-t[1])+\",\"+p[0]+\",\"+p[1];for(var i=2;i<tangents.length;i++,pi++){p=points[pi];t=tangents[i];path+=\"S\"+(p[0]-t[0])+\",\"+(p[1]-t[1])+\",\"+p[0]+\",\"+p[1];}}if(quad){var lp=points[pi];path+=\"Q\"+(p[0]+t[0]*2/3)+\",\"+(p[1]+t[1]*2/3)+\",\"+lp[0]+\",\"+lp[1];}return path;}function d3_svg_lineCardinalTangents(points,tension){var tangents=[],a=(1-tension)/2,p0,p1=points[0],p2=points[1],i=1,n=points.length;while(++i<n){p0=p1;p1=p2;p2=points[i];tangents.push([a*(p2[0]-p0[0]),a*(p2[1]-p0[1])]);}return tangents;}function d3_svg_lineBasis(points){if(points.length<3)return d3_svg_lineLinear(points);var i=1,n=points.length,pi=points[0],x0=pi[0],y0=pi[1],px=[x0,x0,x0,(pi=points[1])[0]],py=[y0,y0,y0,pi[1]],path=[x0,\",\",y0,\"L\",d3_svg_lineDot4(d3_svg_lineBasisBezier3,px),\",\",d3_svg_lineDot4(d3_svg_lineBasisBezier3,py)];points.push(points[n-1]);while(++i<=n){pi=points[i];px.shift();px.push(pi[0]);py.shift();py.push(pi[1]);d3_svg_lineBasisBezier(path,px,py);}points.pop();path.push(\"L\",pi);return path.join(\"\");}function d3_svg_lineBasisOpen(points){if(points.length<4)return d3_svg_lineLinear(points);var path=[],i=-1,n=points.length,pi,px=[0],py=[0];while(++i<3){pi=points[i];px.push(pi[0]);py.push(pi[1]);}path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3,px)+\",\"+d3_svg_lineDot4(d3_svg_lineBasisBezier3,py));--i;while(++i<n){pi=points[i];px.shift();px.push(pi[0]);py.shift();py.push(pi[1]);d3_svg_lineBasisBezier(path,px,py);}return path.join(\"\");}function d3_svg_lineBasisClosed(points){var path,i=-1,n=points.length,m=n+4,pi,px=[],py=[];while(++i<4){pi=points[i%n];px.push(pi[0]);py.push(pi[1]);}path=[d3_svg_lineDot4(d3_svg_lineBasisBezier3,px),\",\",d3_svg_lineDot4(d3_svg_lineBasisBezier3,py)];--i;while(++i<m){pi=points[i%n];px.shift();px.push(pi[0]);py.shift();py.push(pi[1]);d3_svg_lineBasisBezier(path,px,py);}return path.join(\"\");}function d3_svg_lineBundle(points,tension){var n=points.length-1;if(n){var x0=points[0][0],y0=points[0][1],dx=points[n][0]-x0,dy=points[n][1]-y0,i=-1,p,t;while(++i<=n){p=points[i];t=i/n;p[0]=tension*p[0]+(1-tension)*(x0+t*dx);p[1]=tension*p[1]+(1-tension)*(y0+t*dy);}}return d3_svg_lineBasis(points);}function d3_svg_lineDot4(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3];}var d3_svg_lineBasisBezier1=[0,2/3,1/3,0],d3_svg_lineBasisBezier2=[0,1/3,2/3,0],d3_svg_lineBasisBezier3=[0,1/6,2/3,1/6];function d3_svg_lineBasisBezier(path,x,y){path.push(\"C\",d3_svg_lineDot4(d3_svg_lineBasisBezier1,x),\",\",d3_svg_lineDot4(d3_svg_lineBasisBezier1,y),\",\",d3_svg_lineDot4(d3_svg_lineBasisBezier2,x),\",\",d3_svg_lineDot4(d3_svg_lineBasisBezier2,y),\",\",d3_svg_lineDot4(d3_svg_lineBasisBezier3,x),\",\",d3_svg_lineDot4(d3_svg_lineBasisBezier3,y));}function d3_svg_lineSlope(p0,p1){return(p1[1]-p0[1])/(p1[0]-p0[0]);}function d3_svg_lineFiniteDifferences(points){var i=0,j=points.length-1,m=[],p0=points[0],p1=points[1],d=m[0]=d3_svg_lineSlope(p0,p1);while(++i<j){m[i]=(d+(d=d3_svg_lineSlope(p0=p1,p1=points[i+1])))/2;}m[i]=d;return m;}function d3_svg_lineMonotoneTangents(points){var tangents=[],d,a,b,s,m=d3_svg_lineFiniteDifferences(points),i=-1,j=points.length-1;while(++i<j){d=d3_svg_lineSlope(points[i],points[i+1]);if(abs(d)<ε){m[i]=m[i+1]=0;}else{a=m[i]/d;b=m[i+1]/d;s=a*a+b*b;if(s>9){s=d*3/Math.sqrt(s);m[i]=s*a;m[i+1]=s*b;}}}i=-1;while(++i<=j){s=(points[Math.min(j,i+1)][0]-points[Math.max(0,i-1)][0])/(6*(1+m[i]*m[i]));tangents.push([s||0,m[i]*s||0]);}return tangents;}function d3_svg_lineMonotone(points){return points.length<3?d3_svg_lineLinear(points):points[0]+d3_svg_lineHermite(points,d3_svg_lineMonotoneTangents(points));}d3.svg.line.radial=function(){var line=d3_svg_line(d3_svg_lineRadial);line.radius=line.x,delete line.x;line.angle=line.y,delete line.y;return line;};function d3_svg_lineRadial(points){var point,i=-1,n=points.length,r,a;while(++i<n){point=points[i];r=point[0];a=point[1]-halfπ;point[0]=r*Math.cos(a);point[1]=r*Math.sin(a);}return points;}function d3_svg_area(projection){var x0=d3_geom_pointX,x1=d3_geom_pointX,y0=0,y1=d3_geom_pointY,defined=d3_true,interpolate=d3_svg_lineLinear,interpolateKey=interpolate.key,interpolateReverse=interpolate,L=\"L\",tension=.7;function area(data){var segments=[],points0=[],points1=[],i=-1,n=data.length,d,fx0=d3_functor(x0),fy0=d3_functor(y0),fx1=x0===x1?function(){return x;}:d3_functor(x1),fy1=y0===y1?function(){return y;}:d3_functor(y1),x,y;function segment(){segments.push(\"M\",interpolate(projection(points1),tension),L,interpolateReverse(projection(points0.reverse()),tension),\"Z\");}while(++i<n){if(defined.call(this,d=data[i],i)){points0.push([x=+fx0.call(this,d,i),y=+fy0.call(this,d,i)]);points1.push([+fx1.call(this,d,i),+fy1.call(this,d,i)]);}else if(points0.length){segment();points0=[];points1=[];}}if(points0.length)segment();return segments.length?segments.join(\"\"):null;}area.x=function(_){if(!arguments.length)return x1;x0=x1=_;return area;};area.x0=function(_){if(!arguments.length)return x0;x0=_;return area;};area.x1=function(_){if(!arguments.length)return x1;x1=_;return area;};area.y=function(_){if(!arguments.length)return y1;y0=y1=_;return area;};area.y0=function(_){if(!arguments.length)return y0;y0=_;return area;};area.y1=function(_){if(!arguments.length)return y1;y1=_;return area;};area.defined=function(_){if(!arguments.length)return defined;defined=_;return area;};area.interpolate=function(_){if(!arguments.length)return interpolateKey;if(typeof _===\"function\")interpolateKey=interpolate=_;else interpolateKey=(interpolate=d3_svg_lineInterpolators.get(_)||d3_svg_lineLinear).key;interpolateReverse=interpolate.reverse||interpolate;L=interpolate.closed?\"M\":\"L\";return area;};area.tension=function(_){if(!arguments.length)return tension;tension=_;return area;};return area;}d3_svg_lineStepBefore.reverse=d3_svg_lineStepAfter;d3_svg_lineStepAfter.reverse=d3_svg_lineStepBefore;d3.svg.area=function(){return d3_svg_area(d3_identity);};d3.svg.area.radial=function(){var area=d3_svg_area(d3_svg_lineRadial);area.radius=area.x,delete area.x;area.innerRadius=area.x0,delete area.x0;area.outerRadius=area.x1,delete area.x1;area.angle=area.y,delete area.y;area.startAngle=area.y0,delete area.y0;area.endAngle=area.y1,delete area.y1;return area;};d3.svg.chord=function(){var source=d3_source,target=d3_target,radius=d3_svg_chordRadius,startAngle=d3_svg_arcStartAngle,endAngle=d3_svg_arcEndAngle;function chord(d,i){var s=subgroup(this,source,d,i),t=subgroup(this,target,d,i);return\"M\"+s.p0+arc(s.r,s.p1,s.a1-s.a0)+(equals(s,t)?curve(s.r,s.p1,s.r,s.p0):curve(s.r,s.p1,t.r,t.p0)+arc(t.r,t.p1,t.a1-t.a0)+curve(t.r,t.p1,s.r,s.p0))+\"Z\";}function subgroup(self,f,d,i){var subgroup=f.call(self,d,i),r=radius.call(self,subgroup,i),a0=startAngle.call(self,subgroup,i)-halfπ,a1=endAngle.call(self,subgroup,i)-halfπ;return{r:r,a0:a0,a1:a1,p0:[r*Math.cos(a0),r*Math.sin(a0)],p1:[r*Math.cos(a1),r*Math.sin(a1)]};}function equals(a,b){return a.a0==b.a0&&a.a1==b.a1;}function arc(r,p,a){return\"A\"+r+\",\"+r+\" 0 \"+ +(a>π)+\",1 \"+p;}function curve(r0,p0,r1,p1){return\"Q 0,0 \"+p1;}chord.radius=function(v){if(!arguments.length)return radius;radius=d3_functor(v);return chord;};chord.source=function(v){if(!arguments.length)return source;source=d3_functor(v);return chord;};chord.target=function(v){if(!arguments.length)return target;target=d3_functor(v);return chord;};chord.startAngle=function(v){if(!arguments.length)return startAngle;startAngle=d3_functor(v);return chord;};chord.endAngle=function(v){if(!arguments.length)return endAngle;endAngle=d3_functor(v);return chord;};return chord;};function d3_svg_chordRadius(d){return d.radius;}d3.svg.diagonal=function(){var source=d3_source,target=d3_target,projection=d3_svg_diagonalProjection;function diagonal(d,i){var p0=source.call(this,d,i),p3=target.call(this,d,i),m=(p0.y+p3.y)/2,p=[p0,{x:p0.x,y:m},{x:p3.x,y:m},p3];p=p.map(projection);return\"M\"+p[0]+\"C\"+p[1]+\" \"+p[2]+\" \"+p[3];}diagonal.source=function(x){if(!arguments.length)return source;source=d3_functor(x);return diagonal;};diagonal.target=function(x){if(!arguments.length)return target;target=d3_functor(x);return diagonal;};diagonal.projection=function(x){if(!arguments.length)return projection;projection=x;return diagonal;};return diagonal;};function d3_svg_diagonalProjection(d){return[d.x,d.y];}d3.svg.diagonal.radial=function(){var diagonal=d3.svg.diagonal(),projection=d3_svg_diagonalProjection,projection_=diagonal.projection;diagonal.projection=function(x){return arguments.length?projection_(d3_svg_diagonalRadialProjection(projection=x)):projection;};return diagonal;};function d3_svg_diagonalRadialProjection(projection){return function(){var d=projection.apply(this,arguments),r=d[0],a=d[1]-halfπ;return[r*Math.cos(a),r*Math.sin(a)];};}d3.svg.symbol=function(){var type=d3_svg_symbolType,size=d3_svg_symbolSize;function symbol(d,i){return(d3_svg_symbols.get(type.call(this,d,i))||d3_svg_symbolCircle)(size.call(this,d,i));}symbol.type=function(x){if(!arguments.length)return type;type=d3_functor(x);return symbol;};symbol.size=function(x){if(!arguments.length)return size;size=d3_functor(x);return symbol;};return symbol;};function d3_svg_symbolSize(){return 64;}function d3_svg_symbolType(){return\"circle\";}function d3_svg_symbolCircle(size){var r=Math.sqrt(size/π);return\"M0,\"+r+\"A\"+r+\",\"+r+\" 0 1,1 0,\"+-r+\"A\"+r+\",\"+r+\" 0 1,1 0,\"+r+\"Z\";}var d3_svg_symbols=d3.map({circle:d3_svg_symbolCircle,cross:function cross(size){var r=Math.sqrt(size/5)/2;return\"M\"+-3*r+\",\"+-r+\"H\"+-r+\"V\"+-3*r+\"H\"+r+\"V\"+-r+\"H\"+3*r+\"V\"+r+\"H\"+r+\"V\"+3*r+\"H\"+-r+\"V\"+r+\"H\"+-3*r+\"Z\";},diamond:function diamond(size){var ry=Math.sqrt(size/(2*d3_svg_symbolTan30)),rx=ry*d3_svg_symbolTan30;return\"M0,\"+-ry+\"L\"+rx+\",0\"+\" 0,\"+ry+\" \"+-rx+\",0\"+\"Z\";},square:function square(size){var r=Math.sqrt(size)/2;return\"M\"+-r+\",\"+-r+\"L\"+r+\",\"+-r+\" \"+r+\",\"+r+\" \"+-r+\",\"+r+\"Z\";},\"triangle-down\":function triangleDown(size){var rx=Math.sqrt(size/d3_svg_symbolSqrt3),ry=rx*d3_svg_symbolSqrt3/2;return\"M0,\"+ry+\"L\"+rx+\",\"+-ry+\" \"+-rx+\",\"+-ry+\"Z\";},\"triangle-up\":function triangleUp(size){var rx=Math.sqrt(size/d3_svg_symbolSqrt3),ry=rx*d3_svg_symbolSqrt3/2;return\"M0,\"+-ry+\"L\"+rx+\",\"+ry+\" \"+-rx+\",\"+ry+\"Z\";}});d3.svg.symbolTypes=d3_svg_symbols.keys();var d3_svg_symbolSqrt3=Math.sqrt(3),d3_svg_symbolTan30=Math.tan(30*d3_radians);d3_selectionPrototype.transition=function(name){var id=d3_transitionInheritId||++d3_transitionId,ns=d3_transitionNamespace(name),subgroups=[],subgroup,node,transition=d3_transitionInherit||{time:Date.now(),ease:d3_ease_cubicInOut,delay:0,duration:250};for(var j=-1,m=this.length;++j<m;){subgroups.push(subgroup=[]);for(var group=this[j],i=-1,n=group.length;++i<n;){if(node=group[i])d3_transitionNode(node,i,ns,id,transition);subgroup.push(node);}}return d3_transition(subgroups,ns,id);};d3_selectionPrototype.interrupt=function(name){return this.each(name==null?d3_selection_interrupt:d3_selection_interruptNS(d3_transitionNamespace(name)));};var d3_selection_interrupt=d3_selection_interruptNS(d3_transitionNamespace());function d3_selection_interruptNS(ns){return function(){var lock,activeId,active;if((lock=this[ns])&&(active=lock[activeId=lock.active])){active.timer.c=null;active.timer.t=NaN;if(--lock.count)delete lock[activeId];else delete this[ns];lock.active+=.5;active.event&&active.event.interrupt.call(this,this.__data__,active.index);}};}function d3_transition(groups,ns,id){d3_subclass(groups,d3_transitionPrototype);groups.namespace=ns;groups.id=id;return groups;}var d3_transitionPrototype=[],d3_transitionId=0,d3_transitionInheritId,d3_transitionInherit;d3_transitionPrototype.call=d3_selectionPrototype.call;d3_transitionPrototype.empty=d3_selectionPrototype.empty;d3_transitionPrototype.node=d3_selectionPrototype.node;d3_transitionPrototype.size=d3_selectionPrototype.size;d3.transition=function(selection,name){return selection&&selection.transition?d3_transitionInheritId?selection.transition(name):selection:d3.selection().transition(selection);};d3.transition.prototype=d3_transitionPrototype;d3_transitionPrototype.select=function(selector){var id=this.id,ns=this.namespace,subgroups=[],subgroup,subnode,node;selector=d3_selection_selector(selector);for(var j=-1,m=this.length;++j<m;){subgroups.push(subgroup=[]);for(var group=this[j],i=-1,n=group.length;++i<n;){if((node=group[i])&&(subnode=selector.call(node,node.__data__,i,j))){if(\"__data__\"in node)subnode.__data__=node.__data__;d3_transitionNode(subnode,i,ns,id,node[ns][id]);subgroup.push(subnode);}else{subgroup.push(null);}}}return d3_transition(subgroups,ns,id);};d3_transitionPrototype.selectAll=function(selector){var id=this.id,ns=this.namespace,subgroups=[],subgroup,subnodes,node,subnode,transition;selector=d3_selection_selectorAll(selector);for(var j=-1,m=this.length;++j<m;){for(var group=this[j],i=-1,n=group.length;++i<n;){if(node=group[i]){transition=node[ns][id];subnodes=selector.call(node,node.__data__,i,j);subgroups.push(subgroup=[]);for(var k=-1,o=subnodes.length;++k<o;){if(subnode=subnodes[k])d3_transitionNode(subnode,k,ns,id,transition);subgroup.push(subnode);}}}}return d3_transition(subgroups,ns,id);};d3_transitionPrototype.filter=function(filter){var subgroups=[],subgroup,group,node;if(typeof filter!==\"function\")filter=d3_selection_filter(filter);for(var j=0,m=this.length;j<m;j++){subgroups.push(subgroup=[]);for(var group=this[j],i=0,n=group.length;i<n;i++){if((node=group[i])&&filter.call(node,node.__data__,i,j)){subgroup.push(node);}}}return d3_transition(subgroups,this.namespace,this.id);};d3_transitionPrototype.tween=function(name,tween){var id=this.id,ns=this.namespace;if(arguments.length<2)return this.node()[ns][id].tween.get(name);return d3_selection_each(this,tween==null?function(node){node[ns][id].tween.remove(name);}:function(node){node[ns][id].tween.set(name,tween);});};function d3_transition_tween(groups,name,value,tween){var id=groups.id,ns=groups.namespace;return d3_selection_each(groups,typeof value===\"function\"?function(node,i,j){node[ns][id].tween.set(name,tween(value.call(node,node.__data__,i,j)));}:(value=tween(value),function(node){node[ns][id].tween.set(name,value);}));}d3_transitionPrototype.attr=function(nameNS,value){if(arguments.length<2){for(value in nameNS){this.attr(value,nameNS[value]);}return this;}var interpolate=nameNS==\"transform\"?d3_interpolateTransform:d3_interpolate,name=d3.ns.qualify(nameNS);function attrNull(){this.removeAttribute(name);}function attrNullNS(){this.removeAttributeNS(name.space,name.local);}function attrTween(b){return b==null?attrNull:(b+=\"\",function(){var a=this.getAttribute(name),i;return a!==b&&(i=interpolate(a,b),function(t){this.setAttribute(name,i(t));});});}function attrTweenNS(b){return b==null?attrNullNS:(b+=\"\",function(){var a=this.getAttributeNS(name.space,name.local),i;return a!==b&&(i=interpolate(a,b),function(t){this.setAttributeNS(name.space,name.local,i(t));});});}return d3_transition_tween(this,\"attr.\"+nameNS,value,name.local?attrTweenNS:attrTween);};d3_transitionPrototype.attrTween=function(nameNS,tween){var name=d3.ns.qualify(nameNS);function attrTween(d,i){var f=tween.call(this,d,i,this.getAttribute(name));return f&&function(t){this.setAttribute(name,f(t));};}function attrTweenNS(d,i){var f=tween.call(this,d,i,this.getAttributeNS(name.space,name.local));return f&&function(t){this.setAttributeNS(name.space,name.local,f(t));};}return this.tween(\"attr.\"+nameNS,name.local?attrTweenNS:attrTween);};d3_transitionPrototype.style=function(name,value,priority){var n=arguments.length;if(n<3){if(typeof name!==\"string\"){if(n<2)value=\"\";for(priority in name){this.style(priority,name[priority],value);}return this;}priority=\"\";}function styleNull(){this.style.removeProperty(name);}function styleString(b){return b==null?styleNull:(b+=\"\",function(){var a=d3_window(this).getComputedStyle(this,null).getPropertyValue(name),i;return a!==b&&(i=d3_interpolate(a,b),function(t){this.style.setProperty(name,i(t),priority);});});}return d3_transition_tween(this,\"style.\"+name,value,styleString);};d3_transitionPrototype.styleTween=function(name,tween,priority){if(arguments.length<3)priority=\"\";function styleTween(d,i){var f=tween.call(this,d,i,d3_window(this).getComputedStyle(this,null).getPropertyValue(name));return f&&function(t){this.style.setProperty(name,f(t),priority);};}return this.tween(\"style.\"+name,styleTween);};d3_transitionPrototype.text=function(value){return d3_transition_tween(this,\"text\",value,d3_transition_text);};function d3_transition_text(b){if(b==null)b=\"\";return function(){this.textContent=b;};}d3_transitionPrototype.remove=function(){var ns=this.namespace;return this.each(\"end.transition\",function(){var p;if(this[ns].count<2&&(p=this.parentNode))p.removeChild(this);});};d3_transitionPrototype.ease=function(value){var id=this.id,ns=this.namespace;if(arguments.length<1)return this.node()[ns][id].ease;if(typeof value!==\"function\")value=d3.ease.apply(d3,arguments);return d3_selection_each(this,function(node){node[ns][id].ease=value;});};d3_transitionPrototype.delay=function(value){var id=this.id,ns=this.namespace;if(arguments.length<1)return this.node()[ns][id].delay;return d3_selection_each(this,typeof value===\"function\"?function(node,i,j){node[ns][id].delay=+value.call(node,node.__data__,i,j);}:(value=+value,function(node){node[ns][id].delay=value;}));};d3_transitionPrototype.duration=function(value){var id=this.id,ns=this.namespace;if(arguments.length<1)return this.node()[ns][id].duration;return d3_selection_each(this,typeof value===\"function\"?function(node,i,j){node[ns][id].duration=Math.max(1,value.call(node,node.__data__,i,j));}:(value=Math.max(1,value),function(node){node[ns][id].duration=value;}));};d3_transitionPrototype.each=function(type,listener){var id=this.id,ns=this.namespace;if(arguments.length<2){var inherit=d3_transitionInherit,inheritId=d3_transitionInheritId;try{d3_transitionInheritId=id;d3_selection_each(this,function(node,i,j){d3_transitionInherit=node[ns][id];type.call(node,node.__data__,i,j);});}finally{d3_transitionInherit=inherit;d3_transitionInheritId=inheritId;}}else{d3_selection_each(this,function(node){var transition=node[ns][id];(transition.event||(transition.event=d3.dispatch(\"start\",\"end\",\"interrupt\"))).on(type,listener);});}return this;};d3_transitionPrototype.transition=function(){var id0=this.id,id1=++d3_transitionId,ns=this.namespace,subgroups=[],subgroup,group,node,transition;for(var j=0,m=this.length;j<m;j++){subgroups.push(subgroup=[]);for(var group=this[j],i=0,n=group.length;i<n;i++){if(node=group[i]){transition=node[ns][id0];d3_transitionNode(node,i,ns,id1,{time:transition.time,ease:transition.ease,delay:transition.delay+transition.duration,duration:transition.duration});}subgroup.push(node);}}return d3_transition(subgroups,ns,id1);};function d3_transitionNamespace(name){return name==null?\"__transition__\":\"__transition_\"+name+\"__\";}function d3_transitionNode(node,i,ns,id,inherit){var lock=node[ns]||(node[ns]={active:0,count:0}),transition=lock[id],time,timer,duration,ease,tweens;function schedule(elapsed){var delay=transition.delay;timer.t=delay+time;if(delay<=elapsed)return start(elapsed-delay);timer.c=start;}function start(elapsed){var activeId=lock.active,active=lock[activeId];if(active){active.timer.c=null;active.timer.t=NaN;--lock.count;delete lock[activeId];active.event&&active.event.interrupt.call(node,node.__data__,active.index);}for(var cancelId in lock){if(+cancelId<id){var cancel=lock[cancelId];cancel.timer.c=null;cancel.timer.t=NaN;--lock.count;delete lock[cancelId];}}timer.c=tick;d3_timer(function(){if(timer.c&&tick(elapsed||1)){timer.c=null;timer.t=NaN;}return 1;},0,time);lock.active=id;transition.event&&transition.event.start.call(node,node.__data__,i);tweens=[];transition.tween.forEach(function(key,value){if(value=value.call(node,node.__data__,i)){tweens.push(value);}});ease=transition.ease;duration=transition.duration;}function tick(elapsed){var t=elapsed/duration,e=ease(t),n=tweens.length;while(n>0){tweens[--n].call(node,e);}if(t>=1){transition.event&&transition.event.end.call(node,node.__data__,i);if(--lock.count)delete lock[id];else delete node[ns];return 1;}}if(!transition){time=inherit.time;timer=d3_timer(schedule,0,time);transition=lock[id]={tween:new d3_Map(),time:time,timer:timer,delay:inherit.delay,duration:inherit.duration,ease:inherit.ease,index:i};inherit=null;++lock.count;}}d3.svg.axis=function(){var scale=d3.scale.linear(),orient=d3_svg_axisDefaultOrient,innerTickSize=6,outerTickSize=6,tickPadding=3,tickArguments_=[10],tickValues=null,tickFormat_;function axis(g){g.each(function(){var g=d3.select(this);var scale0=this.__chart__||scale,scale1=this.__chart__=scale.copy();var ticks=tickValues==null?scale1.ticks?scale1.ticks.apply(scale1,tickArguments_):scale1.domain():tickValues,tickFormat=tickFormat_==null?scale1.tickFormat?scale1.tickFormat.apply(scale1,tickArguments_):d3_identity:tickFormat_,tick=g.selectAll(\".tick\").data(ticks,scale1),tickEnter=tick.enter().insert(\"g\",\".domain\").attr(\"class\",\"tick\").style(\"opacity\",ε),tickExit=d3.transition(tick.exit()).style(\"opacity\",ε).remove(),tickUpdate=d3.transition(tick.order()).style(\"opacity\",1),tickSpacing=Math.max(innerTickSize,0)+tickPadding,tickTransform;var range=d3_scaleRange(scale1),path=g.selectAll(\".domain\").data([0]),pathUpdate=(path.enter().append(\"path\").attr(\"class\",\"domain\"),d3.transition(path));tickEnter.append(\"line\");tickEnter.append(\"text\");var lineEnter=tickEnter.select(\"line\"),lineUpdate=tickUpdate.select(\"line\"),text=tick.select(\"text\").text(tickFormat),textEnter=tickEnter.select(\"text\"),textUpdate=tickUpdate.select(\"text\"),sign=orient===\"top\"||orient===\"left\"?-1:1,x1,x2,y1,y2;if(orient===\"bottom\"||orient===\"top\"){tickTransform=d3_svg_axisX,x1=\"x\",y1=\"y\",x2=\"x2\",y2=\"y2\";text.attr(\"dy\",sign<0?\"0em\":\".71em\").style(\"text-anchor\",\"middle\");pathUpdate.attr(\"d\",\"M\"+range[0]+\",\"+sign*outerTickSize+\"V0H\"+range[1]+\"V\"+sign*outerTickSize);}else{tickTransform=d3_svg_axisY,x1=\"y\",y1=\"x\",x2=\"y2\",y2=\"x2\";text.attr(\"dy\",\".32em\").style(\"text-anchor\",sign<0?\"end\":\"start\");pathUpdate.attr(\"d\",\"M\"+sign*outerTickSize+\",\"+range[0]+\"H0V\"+range[1]+\"H\"+sign*outerTickSize);}lineEnter.attr(y2,sign*innerTickSize);textEnter.attr(y1,sign*tickSpacing);lineUpdate.attr(x2,0).attr(y2,sign*innerTickSize);textUpdate.attr(x1,0).attr(y1,sign*tickSpacing);if(scale1.rangeBand){var x=scale1,dx=x.rangeBand()/2;scale0=scale1=function scale1(d){return x(d)+dx;};}else if(scale0.rangeBand){scale0=scale1;}else{tickExit.call(tickTransform,scale1,scale0);}tickEnter.call(tickTransform,scale0,scale1);tickUpdate.call(tickTransform,scale1,scale1);});}axis.scale=function(x){if(!arguments.length)return scale;scale=x;return axis;};axis.orient=function(x){if(!arguments.length)return orient;orient=x in d3_svg_axisOrients?x+\"\":d3_svg_axisDefaultOrient;return axis;};axis.ticks=function(){if(!arguments.length)return tickArguments_;tickArguments_=d3_array(arguments);return axis;};axis.tickValues=function(x){if(!arguments.length)return tickValues;tickValues=x;return axis;};axis.tickFormat=function(x){if(!arguments.length)return tickFormat_;tickFormat_=x;return axis;};axis.tickSize=function(x){var n=arguments.length;if(!n)return innerTickSize;innerTickSize=+x;outerTickSize=+arguments[n-1];return axis;};axis.innerTickSize=function(x){if(!arguments.length)return innerTickSize;innerTickSize=+x;return axis;};axis.outerTickSize=function(x){if(!arguments.length)return outerTickSize;outerTickSize=+x;return axis;};axis.tickPadding=function(x){if(!arguments.length)return tickPadding;tickPadding=+x;return axis;};axis.tickSubdivide=function(){return arguments.length&&axis;};return axis;};var d3_svg_axisDefaultOrient=\"bottom\",d3_svg_axisOrients={top:1,right:1,bottom:1,left:1};function d3_svg_axisX(selection,x0,x1){selection.attr(\"transform\",function(d){var v0=x0(d);return\"translate(\"+(isFinite(v0)?v0:x1(d))+\",0)\";});}function d3_svg_axisY(selection,y0,y1){selection.attr(\"transform\",function(d){var v0=y0(d);return\"translate(0,\"+(isFinite(v0)?v0:y1(d))+\")\";});}d3.svg.brush=function(){var event=d3_eventDispatch(brush,\"brushstart\",\"brush\",\"brushend\"),x=null,y=null,xExtent=[0,0],yExtent=[0,0],xExtentDomain,yExtentDomain,xClamp=true,yClamp=true,resizes=d3_svg_brushResizes[0];function brush(g){g.each(function(){var g=d3.select(this).style(\"pointer-events\",\"all\").style(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\").on(\"mousedown.brush\",brushstart).on(\"touchstart.brush\",brushstart);var background=g.selectAll(\".background\").data([0]);background.enter().append(\"rect\").attr(\"class\",\"background\").style(\"visibility\",\"hidden\").style(\"cursor\",\"crosshair\");g.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\",\"extent\").style(\"cursor\",\"move\");var resize=g.selectAll(\".resize\").data(resizes,d3_identity);resize.exit().remove();resize.enter().append(\"g\").attr(\"class\",function(d){return\"resize \"+d;}).style(\"cursor\",function(d){return d3_svg_brushCursor[d];}).append(\"rect\").attr(\"x\",function(d){return /[ew]$/.test(d)?-3:null;}).attr(\"y\",function(d){return /^[ns]/.test(d)?-3:null;}).attr(\"width\",6).attr(\"height\",6).style(\"visibility\",\"hidden\");resize.style(\"display\",brush.empty()?\"none\":null);var gUpdate=d3.transition(g),backgroundUpdate=d3.transition(background),range;if(x){range=d3_scaleRange(x);backgroundUpdate.attr(\"x\",range[0]).attr(\"width\",range[1]-range[0]);redrawX(gUpdate);}if(y){range=d3_scaleRange(y);backgroundUpdate.attr(\"y\",range[0]).attr(\"height\",range[1]-range[0]);redrawY(gUpdate);}redraw(gUpdate);});}brush.event=function(g){g.each(function(){var event_=event.of(this,arguments),extent1={x:xExtent,y:yExtent,i:xExtentDomain,j:yExtentDomain},extent0=this.__chart__||extent1;this.__chart__=extent1;if(d3_transitionInheritId){d3.select(this).transition().each(\"start.brush\",function(){xExtentDomain=extent0.i;yExtentDomain=extent0.j;xExtent=extent0.x;yExtent=extent0.y;event_({type:\"brushstart\"});}).tween(\"brush:brush\",function(){var xi=d3_interpolateArray(xExtent,extent1.x),yi=d3_interpolateArray(yExtent,extent1.y);xExtentDomain=yExtentDomain=null;return function(t){xExtent=extent1.x=xi(t);yExtent=extent1.y=yi(t);event_({type:\"brush\",mode:\"resize\"});};}).each(\"end.brush\",function(){xExtentDomain=extent1.i;yExtentDomain=extent1.j;event_({type:\"brush\",mode:\"resize\"});event_({type:\"brushend\"});});}else{event_({type:\"brushstart\"});event_({type:\"brush\",mode:\"resize\"});event_({type:\"brushend\"});}});};function redraw(g){g.selectAll(\".resize\").attr(\"transform\",function(d){return\"translate(\"+xExtent[+/e$/.test(d)]+\",\"+yExtent[+/^s/.test(d)]+\")\";});}function redrawX(g){g.select(\".extent\").attr(\"x\",xExtent[0]);g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\",xExtent[1]-xExtent[0]);}function redrawY(g){g.select(\".extent\").attr(\"y\",yExtent[0]);g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\",yExtent[1]-yExtent[0]);}function brushstart(){var target=this,eventTarget=d3.select(d3.event.target),event_=event.of(target,arguments),g=d3.select(target),resizing=eventTarget.datum(),resizingX=!/^(n|s)$/.test(resizing)&&x,resizingY=!/^(e|w)$/.test(resizing)&&y,dragging=eventTarget.classed(\"extent\"),dragRestore=d3_event_dragSuppress(target),center,origin=d3.mouse(target),offset;var w=d3.select(d3_window(target)).on(\"keydown.brush\",keydown).on(\"keyup.brush\",keyup);if(d3.event.changedTouches){w.on(\"touchmove.brush\",brushmove).on(\"touchend.brush\",brushend);}else{w.on(\"mousemove.brush\",brushmove).on(\"mouseup.brush\",brushend);}g.interrupt().selectAll(\"*\").interrupt();if(dragging){origin[0]=xExtent[0]-origin[0];origin[1]=yExtent[0]-origin[1];}else if(resizing){var ex=+/w$/.test(resizing),ey=+/^n/.test(resizing);offset=[xExtent[1-ex]-origin[0],yExtent[1-ey]-origin[1]];origin[0]=xExtent[ex];origin[1]=yExtent[ey];}else if(d3.event.altKey)center=origin.slice();g.style(\"pointer-events\",\"none\").selectAll(\".resize\").style(\"display\",null);d3.select(\"body\").style(\"cursor\",eventTarget.style(\"cursor\"));event_({type:\"brushstart\"});brushmove();function keydown(){if(d3.event.keyCode==32){if(!dragging){center=null;origin[0]-=xExtent[1];origin[1]-=yExtent[1];dragging=2;}d3_eventPreventDefault();}}function keyup(){if(d3.event.keyCode==32&&dragging==2){origin[0]+=xExtent[1];origin[1]+=yExtent[1];dragging=0;d3_eventPreventDefault();}}function brushmove(){var point=d3.mouse(target),moved=false;if(offset){point[0]+=offset[0];point[1]+=offset[1];}if(!dragging){if(d3.event.altKey){if(!center)center=[(xExtent[0]+xExtent[1])/2,(yExtent[0]+yExtent[1])/2];origin[0]=xExtent[+(point[0]<center[0])];origin[1]=yExtent[+(point[1]<center[1])];}else center=null;}if(resizingX&&move1(point,x,0)){redrawX(g);moved=true;}if(resizingY&&move1(point,y,1)){redrawY(g);moved=true;}if(moved){redraw(g);event_({type:\"brush\",mode:dragging?\"move\":\"resize\"});}}function move1(point,scale,i){var range=d3_scaleRange(scale),r0=range[0],r1=range[1],position=origin[i],extent=i?yExtent:xExtent,size=extent[1]-extent[0],min,max;if(dragging){r0-=position;r1-=size+position;}min=(i?yClamp:xClamp)?Math.max(r0,Math.min(r1,point[i])):point[i];if(dragging){max=(min+=position)+size;}else{if(center)position=Math.max(r0,Math.min(r1,2*center[i]-min));if(position<min){max=min;min=position;}else{max=position;}}if(extent[0]!=min||extent[1]!=max){if(i)yExtentDomain=null;else xExtentDomain=null;extent[0]=min;extent[1]=max;return true;}}function brushend(){brushmove();g.style(\"pointer-events\",\"all\").selectAll(\".resize\").style(\"display\",brush.empty()?\"none\":null);d3.select(\"body\").style(\"cursor\",null);w.on(\"mousemove.brush\",null).on(\"mouseup.brush\",null).on(\"touchmove.brush\",null).on(\"touchend.brush\",null).on(\"keydown.brush\",null).on(\"keyup.brush\",null);dragRestore();event_({type:\"brushend\"});}}brush.x=function(z){if(!arguments.length)return x;x=z;resizes=d3_svg_brushResizes[!x<<1|!y];return brush;};brush.y=function(z){if(!arguments.length)return y;y=z;resizes=d3_svg_brushResizes[!x<<1|!y];return brush;};brush.clamp=function(z){if(!arguments.length)return x&&y?[xClamp,yClamp]:x?xClamp:y?yClamp:null;if(x&&y)xClamp=!!z[0],yClamp=!!z[1];else if(x)xClamp=!!z;else if(y)yClamp=!!z;return brush;};brush.extent=function(z){var x0,x1,y0,y1,t;if(!arguments.length){if(x){if(xExtentDomain){x0=xExtentDomain[0],x1=xExtentDomain[1];}else{x0=xExtent[0],x1=xExtent[1];if(x.invert)x0=x.invert(x0),x1=x.invert(x1);if(x1<x0)t=x0,x0=x1,x1=t;}}if(y){if(yExtentDomain){y0=yExtentDomain[0],y1=yExtentDomain[1];}else{y0=yExtent[0],y1=yExtent[1];if(y.invert)y0=y.invert(y0),y1=y.invert(y1);if(y1<y0)t=y0,y0=y1,y1=t;}}return x&&y?[[x0,y0],[x1,y1]]:x?[x0,x1]:y&&[y0,y1];}if(x){x0=z[0],x1=z[1];if(y)x0=x0[0],x1=x1[0];xExtentDomain=[x0,x1];if(x.invert)x0=x(x0),x1=x(x1);if(x1<x0)t=x0,x0=x1,x1=t;if(x0!=xExtent[0]||x1!=xExtent[1])xExtent=[x0,x1];}if(y){y0=z[0],y1=z[1];if(x)y0=y0[1],y1=y1[1];yExtentDomain=[y0,y1];if(y.invert)y0=y(y0),y1=y(y1);if(y1<y0)t=y0,y0=y1,y1=t;if(y0!=yExtent[0]||y1!=yExtent[1])yExtent=[y0,y1];}return brush;};brush.clear=function(){if(!brush.empty()){xExtent=[0,0],yExtent=[0,0];xExtentDomain=yExtentDomain=null;}return brush;};brush.empty=function(){return!!x&&xExtent[0]==xExtent[1]||!!y&&yExtent[0]==yExtent[1];};return d3.rebind(brush,event,\"on\");};var d3_svg_brushCursor={n:\"ns-resize\",e:\"ew-resize\",s:\"ns-resize\",w:\"ew-resize\",nw:\"nwse-resize\",ne:\"nesw-resize\",se:\"nwse-resize\",sw:\"nesw-resize\"};var d3_svg_brushResizes=[[\"n\",\"e\",\"s\",\"w\",\"nw\",\"ne\",\"se\",\"sw\"],[\"e\",\"w\"],[\"n\",\"s\"],[]];var d3_time_format=d3_time.format=d3_locale_enUS.timeFormat;var d3_time_formatUtc=d3_time_format.utc;var d3_time_formatIso=d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");d3_time_format.iso=Date.prototype.toISOString&&+new Date(\"2000-01-01T00:00:00.000Z\")?d3_time_formatIsoNative:d3_time_formatIso;function d3_time_formatIsoNative(date){return date.toISOString();}d3_time_formatIsoNative.parse=function(string){var date=new Date(string);return isNaN(date)?null:date;};d3_time_formatIsoNative.toString=d3_time_formatIso.toString;d3_time.second=d3_time_interval(function(date){return new d3_date(Math.floor(date/1e3)*1e3);},function(date,offset){date.setTime(date.getTime()+Math.floor(offset)*1e3);},function(date){return date.getSeconds();});d3_time.seconds=d3_time.second.range;d3_time.seconds.utc=d3_time.second.utc.range;d3_time.minute=d3_time_interval(function(date){return new d3_date(Math.floor(date/6e4)*6e4);},function(date,offset){date.setTime(date.getTime()+Math.floor(offset)*6e4);},function(date){return date.getMinutes();});d3_time.minutes=d3_time.minute.range;d3_time.minutes.utc=d3_time.minute.utc.range;d3_time.hour=d3_time_interval(function(date){var timezone=date.getTimezoneOffset()/60;return new d3_date((Math.floor(date/36e5-timezone)+timezone)*36e5);},function(date,offset){date.setTime(date.getTime()+Math.floor(offset)*36e5);},function(date){return date.getHours();});d3_time.hours=d3_time.hour.range;d3_time.hours.utc=d3_time.hour.utc.range;d3_time.month=d3_time_interval(function(date){date=d3_time.day(date);date.setDate(1);return date;},function(date,offset){date.setMonth(date.getMonth()+offset);},function(date){return date.getMonth();});d3_time.months=d3_time.month.range;d3_time.months.utc=d3_time.month.utc.range;function d3_time_scale(linear,methods,format){function scale(x){return linear(x);}scale.invert=function(x){return d3_time_scaleDate(linear.invert(x));};scale.domain=function(x){if(!arguments.length)return linear.domain().map(d3_time_scaleDate);linear.domain(x);return scale;};function tickMethod(extent,count){var span=extent[1]-extent[0],target=span/count,i=d3.bisect(d3_time_scaleSteps,target);return i==d3_time_scaleSteps.length?[methods.year,d3_scale_linearTickRange(extent.map(function(d){return d/31536e6;}),count)[2]]:!i?[d3_time_scaleMilliseconds,d3_scale_linearTickRange(extent,count)[2]]:methods[target/d3_time_scaleSteps[i-1]<d3_time_scaleSteps[i]/target?i-1:i];}scale.nice=function(interval,skip){var domain=scale.domain(),extent=d3_scaleExtent(domain),method=interval==null?tickMethod(extent,10):typeof interval===\"number\"&&tickMethod(extent,interval);if(method)interval=method[0],skip=method[1];function skipped(date){return!isNaN(date)&&!interval.range(date,d3_time_scaleDate(+date+1),skip).length;}return scale.domain(d3_scale_nice(domain,skip>1?{floor:function floor(date){while(skipped(date=interval.floor(date))){date=d3_time_scaleDate(date-1);}return date;},ceil:function ceil(date){while(skipped(date=interval.ceil(date))){date=d3_time_scaleDate(+date+1);}return date;}}:interval));};scale.ticks=function(interval,skip){var extent=d3_scaleExtent(scale.domain()),method=interval==null?tickMethod(extent,10):typeof interval===\"number\"?tickMethod(extent,interval):!interval.range&&[{range:interval},skip];if(method)interval=method[0],skip=method[1];return interval.range(extent[0],d3_time_scaleDate(+extent[1]+1),skip<1?1:skip);};scale.tickFormat=function(){return format;};scale.copy=function(){return d3_time_scale(linear.copy(),methods,format);};return d3_scale_linearRebind(scale,linear);}function d3_time_scaleDate(t){return new Date(t);}var d3_time_scaleSteps=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6];var d3_time_scaleLocalMethods=[[d3_time.second,1],[d3_time.second,5],[d3_time.second,15],[d3_time.second,30],[d3_time.minute,1],[d3_time.minute,5],[d3_time.minute,15],[d3_time.minute,30],[d3_time.hour,1],[d3_time.hour,3],[d3_time.hour,6],[d3_time.hour,12],[d3_time.day,1],[d3_time.day,2],[d3_time.week,1],[d3_time.month,1],[d3_time.month,3],[d3_time.year,1]];var d3_time_scaleLocalFormat=d3_time_format.multi([[\".%L\",function(d){return d.getMilliseconds();}],[\":%S\",function(d){return d.getSeconds();}],[\"%I:%M\",function(d){return d.getMinutes();}],[\"%I %p\",function(d){return d.getHours();}],[\"%a %d\",function(d){return d.getDay()&&d.getDate()!=1;}],[\"%b %d\",function(d){return d.getDate()!=1;}],[\"%B\",function(d){return d.getMonth();}],[\"%Y\",d3_true]]);var d3_time_scaleMilliseconds={range:function range(start,stop,step){return d3.range(Math.ceil(start/step)*step,+stop,step).map(d3_time_scaleDate);},floor:d3_identity,ceil:d3_identity};d3_time_scaleLocalMethods.year=d3_time.year;d3_time.scale=function(){return d3_time_scale(d3.scale.linear(),d3_time_scaleLocalMethods,d3_time_scaleLocalFormat);};var d3_time_scaleUtcMethods=d3_time_scaleLocalMethods.map(function(m){return[m[0].utc,m[1]];});var d3_time_scaleUtcFormat=d3_time_formatUtc.multi([[\".%L\",function(d){return d.getUTCMilliseconds();}],[\":%S\",function(d){return d.getUTCSeconds();}],[\"%I:%M\",function(d){return d.getUTCMinutes();}],[\"%I %p\",function(d){return d.getUTCHours();}],[\"%a %d\",function(d){return d.getUTCDay()&&d.getUTCDate()!=1;}],[\"%b %d\",function(d){return d.getUTCDate()!=1;}],[\"%B\",function(d){return d.getUTCMonth();}],[\"%Y\",d3_true]]);d3_time_scaleUtcMethods.year=d3_time.year.utc;d3_time.scale.utc=function(){return d3_time_scale(d3.scale.linear(),d3_time_scaleUtcMethods,d3_time_scaleUtcFormat);};d3.text=d3_xhrType(function(request){return request.responseText;});d3.json=function(url,callback){return d3_xhr(url,\"application/json\",d3_json,callback);};function d3_json(request){return JSON.parse(request.responseText);}d3.html=function(url,callback){return d3_xhr(url,\"text/html\",d3_html,callback);};function d3_html(request){var range=d3_document.createRange();range.selectNode(d3_document.body);return range.createContextualFragment(request.responseText);}d3.xml=d3_xhrType(function(request){return request.responseXML;});if(typeof define===\"function\"&&define.amd)this.d3=d3,define(d3);else if(_typeof(module)===\"object\"&&module.exports)module.exports=d3;else this.d3=d3;}();},{}],72:[function(_dereq_,module,exports){module.exports=function(){for(var i=0;i<arguments.length;i++){if(arguments[i]!==undefined)return arguments[i];}};},{}],73:[function(_dereq_,module,exports){\"use strict\";var ch=_dereq_(\"incremental-convex-hull\");var uniq=_dereq_(\"uniq\");module.exports=triangulate;function LiftedPoint(p,i){this.point=p;this.index=i;}function compareLifted(a,b){var ap=a.point;var bp=b.point;var d=ap.length;for(var i=0;i<d;++i){var s=bp[i]-ap[i];if(s){return s;}}return 0;}function triangulate1D(n,points,includePointAtInfinity){if(n===1){if(includePointAtInfinity){return[[-1,0]];}else{return[];}}var lifted=points.map(function(p,i){return[p[0],i];});lifted.sort(function(a,b){return a[0]-b[0];});var cells=new Array(n-1);for(var i=1;i<n;++i){var a=lifted[i-1];var b=lifted[i];cells[i-1]=[a[1],b[1]];}if(includePointAtInfinity){cells.push([-1,cells[0][1]],[cells[n-1][1],-1]);}return cells;}function triangulate(points,includePointAtInfinity){var n=points.length;if(n===0){return[];}var d=points[0].length;if(d<1){return[];}//Special case:  For 1D we can just sort the points\nif(d===1){return triangulate1D(n,points,includePointAtInfinity);}//Lift points, sort\nvar lifted=new Array(n);var upper=1.0;for(var i=0;i<n;++i){var p=points[i];var x=new Array(d+1);var l=0.0;for(var j=0;j<d;++j){var v=p[j];x[j]=v;l+=v*v;}x[d]=l;lifted[i]=new LiftedPoint(x,i);upper=Math.max(l,upper);}uniq(lifted,compareLifted);//Double points\nn=lifted.length;//Create new list of points\nvar dpoints=new Array(n+d+1);var dindex=new Array(n+d+1);//Add steiner points at top\nvar u=(d+1)*(d+1)*upper;var y=new Array(d+1);for(var i=0;i<=d;++i){y[i]=0.0;}y[d]=u;dpoints[0]=y.slice();dindex[0]=-1;for(var i=0;i<=d;++i){var x=y.slice();x[i]=1;dpoints[i+1]=x;dindex[i+1]=-1;}//Copy rest of the points over\nfor(var i=0;i<n;++i){var h=lifted[i];dpoints[i+d+1]=h.point;dindex[i+d+1]=h.index;}//Construct convex hull\nvar hull=ch(dpoints,false);if(includePointAtInfinity){hull=hull.filter(function(cell){var count=0;for(var j=0;j<=d;++j){var v=dindex[cell[j]];if(v<0){if(++count>=2){return false;}}cell[j]=v;}return true;});}else{hull=hull.filter(function(cell){for(var i=0;i<=d;++i){var v=dindex[cell[i]];if(v<0){return false;}cell[i]=v;}return true;});}if(d&1){for(var i=0;i<hull.length;++i){var h=hull[i];var x=h[0];h[0]=h[1];h[1]=x;}}return hull;}},{\"incremental-convex-hull\":166,\"uniq\":272}],74:[function(_dereq_,module,exports){(function(Buffer){var hasTypedArrays=false;if(typeof Float64Array!==\"undefined\"){var DOUBLE_VIEW=new Float64Array(1),UINT_VIEW=new Uint32Array(DOUBLE_VIEW.buffer);DOUBLE_VIEW[0]=1.0;hasTypedArrays=true;if(UINT_VIEW[1]===0x3ff00000){var toDoubleLE=function toDoubleLE(lo,hi){UINT_VIEW[0]=lo;UINT_VIEW[1]=hi;return DOUBLE_VIEW[0];};var lowUintLE=function lowUintLE(n){DOUBLE_VIEW[0]=n;return UINT_VIEW[0];};var highUintLE=function highUintLE(n){DOUBLE_VIEW[0]=n;return UINT_VIEW[1];};//Use little endian\nmodule.exports=function doubleBitsLE(n){DOUBLE_VIEW[0]=n;return[UINT_VIEW[0],UINT_VIEW[1]];};module.exports.pack=toDoubleLE;module.exports.lo=lowUintLE;module.exports.hi=highUintLE;}else if(UINT_VIEW[0]===0x3ff00000){var toDoubleBE=function toDoubleBE(lo,hi){UINT_VIEW[1]=lo;UINT_VIEW[0]=hi;return DOUBLE_VIEW[0];};var lowUintBE=function lowUintBE(n){DOUBLE_VIEW[0]=n;return UINT_VIEW[1];};var highUintBE=function highUintBE(n){DOUBLE_VIEW[0]=n;return UINT_VIEW[0];};//Use big endian\nmodule.exports=function doubleBitsBE(n){DOUBLE_VIEW[0]=n;return[UINT_VIEW[1],UINT_VIEW[0]];};module.exports.pack=toDoubleBE;module.exports.lo=lowUintBE;module.exports.hi=highUintBE;}else{hasTypedArrays=false;}}if(!hasTypedArrays){var toDouble=function toDouble(lo,hi){buffer.writeUInt32LE(lo,0,true);buffer.writeUInt32LE(hi,4,true);return buffer.readDoubleLE(0,true);};var lowUint=function lowUint(n){buffer.writeDoubleLE(n,0,true);return buffer.readUInt32LE(0,true);};var highUint=function highUint(n){buffer.writeDoubleLE(n,0,true);return buffer.readUInt32LE(4,true);};var buffer=new Buffer(8);module.exports=function doubleBits(n){buffer.writeDoubleLE(n,0,true);return[buffer.readUInt32LE(0,true),buffer.readUInt32LE(4,true)];};module.exports.pack=toDouble;module.exports.lo=lowUint;module.exports.hi=highUint;}module.exports.sign=function(n){return module.exports.hi(n)>>>31;};module.exports.exponent=function(n){var b=module.exports.hi(n);return(b<<1>>>21)-1023;};module.exports.fraction=function(n){var lo=module.exports.lo(n);var hi=module.exports.hi(n);var b=hi&(1<<20)-1;if(hi&0x7ff00000){b+=1<<20;}return[lo,b];};module.exports.denormalized=function(n){var hi=module.exports.hi(n);return!(hi&0x7ff00000);};}).call(this,_dereq_(\"buffer\").Buffer);},{\"buffer\":43}],75:[function(_dereq_,module,exports){module.exports=function(dtype){switch(dtype){case'int8':return Int8Array;case'int16':return Int16Array;case'int32':return Int32Array;case'uint8':return Uint8Array;case'uint16':return Uint16Array;case'uint32':return Uint32Array;case'float32':return Float32Array;case'float64':return Float64Array;case'array':return Array;case'uint8_clamped':return Uint8ClampedArray;}};},{}],76:[function(_dereq_,module,exports){\"use strict\";function dupe_array(count,value,i){var c=count[i]|0;if(c<=0){return[];}var result=new Array(c),j;if(i===count.length-1){for(j=0;j<c;++j){result[j]=value;}}else{for(j=0;j<c;++j){result[j]=dupe_array(count,value,i+1);}}return result;}function dupe_number(count,value){var result,i;result=new Array(count);for(i=0;i<count;++i){result[i]=value;}return result;}function dupe(count,value){if(typeof value===\"undefined\"){value=0;}switch(_typeof(count)){case\"number\":if(count>0){return dupe_number(count|0,value);}break;case\"object\":if(typeof count.length===\"number\"){return dupe_array(count,value,0);}break;}return[];}module.exports=dupe;},{}],77:[function(_dereq_,module,exports){\"use strict\";module.exports=edgeToAdjacency;var uniq=_dereq_(\"uniq\");function edgeToAdjacency(edges,numVertices){var numEdges=edges.length;if(typeof numVertices!==\"number\"){numVertices=0;for(var i=0;i<numEdges;++i){var e=edges[i];numVertices=Math.max(numVertices,e[0],e[1]);}numVertices=(numVertices|0)+1;}numVertices=numVertices|0;var adj=new Array(numVertices);for(var i=0;i<numVertices;++i){adj[i]=[];}for(var i=0;i<numEdges;++i){var e=edges[i];adj[e[0]].push(e[1]);adj[e[1]].push(e[0]);}for(var j=0;j<numVertices;++j){uniq(adj[j],function(a,b){return a-b;});}return adj;}},{\"uniq\":272}],78:[function(_dereq_,module,exports){(function(process,global){/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   3.3.1\n */(function(global,factory){_typeof(exports)==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):global.ES6Promise=factory();})(this,function(){'use strict';function objectOrFunction(x){return typeof x==='function'||_typeof(x)==='object'&&x!==null;}function isFunction(x){return typeof x==='function';}var _isArray=undefined;if(!Array.isArray){_isArray=function _isArray(x){return Object.prototype.toString.call(x)==='[object Array]';};}else{_isArray=Array.isArray;}var isArray=_isArray;var len=0;var vertxNext=undefined;var customSchedulerFn=undefined;var asap=function asap(callback,arg){queue[len]=callback;queue[len+1]=arg;len+=2;if(len===2){// If len is 2, that means that we need to schedule an async flush.\n// If additional callbacks are queued before the queue is flushed, they\n// will be processed by this flush that we are scheduling.\nif(customSchedulerFn){customSchedulerFn(flush);}else{scheduleFlush();}}};function setScheduler(scheduleFn){customSchedulerFn=scheduleFn;}function setAsap(asapFn){asap=asapFn;}var browserWindow=typeof window!=='undefined'?window:undefined;var browserGlobal=browserWindow||{};var BrowserMutationObserver=browserGlobal.MutationObserver||browserGlobal.WebKitMutationObserver;var isNode=typeof self==='undefined'&&typeof process!=='undefined'&&{}.toString.call(process)==='[object process]';// test for web worker but not in IE10\nvar isWorker=typeof Uint8ClampedArray!=='undefined'&&typeof importScripts!=='undefined'&&typeof MessageChannel!=='undefined';// node\nfunction useNextTick(){// node version 0.10.x displays a deprecation warning when nextTick is used recursively\n// see https://github.com/cujojs/when/issues/410 for details\nreturn function(){return process.nextTick(flush);};}// vertx\nfunction useVertxTimer(){return function(){vertxNext(flush);};}function useMutationObserver(){var iterations=0;var observer=new BrowserMutationObserver(flush);var node=document.createTextNode('');observer.observe(node,{characterData:true});return function(){node.data=iterations=++iterations%2;};}// web worker\nfunction useMessageChannel(){var channel=new MessageChannel();channel.port1.onmessage=flush;return function(){return channel.port2.postMessage(0);};}function useSetTimeout(){// Store setTimeout reference so es6-promise will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar globalSetTimeout=setTimeout;return function(){return globalSetTimeout(flush,1);};}var queue=new Array(1000);function flush(){for(var i=0;i<len;i+=2){var callback=queue[i];var arg=queue[i+1];callback(arg);queue[i]=undefined;queue[i+1]=undefined;}len=0;}function attemptVertx(){try{var r=_dereq_;var vertx=r('vertx');vertxNext=vertx.runOnLoop||vertx.runOnContext;return useVertxTimer();}catch(e){return useSetTimeout();}}var scheduleFlush=undefined;// Decide what async method to use to triggering processing of queued callbacks:\nif(isNode){scheduleFlush=useNextTick();}else if(BrowserMutationObserver){scheduleFlush=useMutationObserver();}else if(isWorker){scheduleFlush=useMessageChannel();}else if(browserWindow===undefined&&typeof _dereq_==='function'){scheduleFlush=attemptVertx();}else{scheduleFlush=useSetTimeout();}function then(onFulfillment,onRejection){var _arguments=arguments;var parent=this;var child=new this.constructor(noop);if(child[PROMISE_ID]===undefined){makePromise(child);}var _state=parent._state;if(_state){(function(){var callback=_arguments[_state-1];asap(function(){return invokeCallback(_state,child,callback,parent._result);});})();}else{subscribe(parent,child,onFulfillment,onRejection);}return child;}/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/function resolve(object){/*jshint validthis:true */var Constructor=this;if(object&&_typeof(object)==='object'&&object.constructor===Constructor){return object;}var promise=new Constructor(noop);_resolve(promise,object);return promise;}var PROMISE_ID=Math.random().toString(36).substring(16);function noop(){}var PENDING=void 0;var FULFILLED=1;var REJECTED=2;var GET_THEN_ERROR=new ErrorObject();function selfFulfillment(){return new TypeError(\"You cannot resolve a promise with itself\");}function cannotReturnOwn(){return new TypeError('A promises callback cannot return that same promise.');}function getThen(promise){try{return promise.then;}catch(error){GET_THEN_ERROR.error=error;return GET_THEN_ERROR;}}function tryThen(then,value,fulfillmentHandler,rejectionHandler){try{then.call(value,fulfillmentHandler,rejectionHandler);}catch(e){return e;}}function handleForeignThenable(promise,thenable,then){asap(function(promise){var sealed=false;var error=tryThen(then,thenable,function(value){if(sealed){return;}sealed=true;if(thenable!==value){_resolve(promise,value);}else{fulfill(promise,value);}},function(reason){if(sealed){return;}sealed=true;_reject(promise,reason);},'Settle: '+(promise._label||' unknown promise'));if(!sealed&&error){sealed=true;_reject(promise,error);}},promise);}function handleOwnThenable(promise,thenable){if(thenable._state===FULFILLED){fulfill(promise,thenable._result);}else if(thenable._state===REJECTED){_reject(promise,thenable._result);}else{subscribe(thenable,undefined,function(value){return _resolve(promise,value);},function(reason){return _reject(promise,reason);});}}function handleMaybeThenable(promise,maybeThenable,then$$){if(maybeThenable.constructor===promise.constructor&&then$$===then&&maybeThenable.constructor.resolve===resolve){handleOwnThenable(promise,maybeThenable);}else{if(then$$===GET_THEN_ERROR){_reject(promise,GET_THEN_ERROR.error);}else if(then$$===undefined){fulfill(promise,maybeThenable);}else if(isFunction(then$$)){handleForeignThenable(promise,maybeThenable,then$$);}else{fulfill(promise,maybeThenable);}}}function _resolve(promise,value){if(promise===value){_reject(promise,selfFulfillment());}else if(objectOrFunction(value)){handleMaybeThenable(promise,value,getThen(value));}else{fulfill(promise,value);}}function publishRejection(promise){if(promise._onerror){promise._onerror(promise._result);}publish(promise);}function fulfill(promise,value){if(promise._state!==PENDING){return;}promise._result=value;promise._state=FULFILLED;if(promise._subscribers.length!==0){asap(publish,promise);}}function _reject(promise,reason){if(promise._state!==PENDING){return;}promise._state=REJECTED;promise._result=reason;asap(publishRejection,promise);}function subscribe(parent,child,onFulfillment,onRejection){var _subscribers=parent._subscribers;var length=_subscribers.length;parent._onerror=null;_subscribers[length]=child;_subscribers[length+FULFILLED]=onFulfillment;_subscribers[length+REJECTED]=onRejection;if(length===0&&parent._state){asap(publish,parent);}}function publish(promise){var subscribers=promise._subscribers;var settled=promise._state;if(subscribers.length===0){return;}var child=undefined,callback=undefined,detail=promise._result;for(var i=0;i<subscribers.length;i+=3){child=subscribers[i];callback=subscribers[i+settled];if(child){invokeCallback(settled,child,callback,detail);}else{callback(detail);}}promise._subscribers.length=0;}function ErrorObject(){this.error=null;}var TRY_CATCH_ERROR=new ErrorObject();function tryCatch(callback,detail){try{return callback(detail);}catch(e){TRY_CATCH_ERROR.error=e;return TRY_CATCH_ERROR;}}function invokeCallback(settled,promise,callback,detail){var hasCallback=isFunction(callback),value=undefined,error=undefined,succeeded=undefined,failed=undefined;if(hasCallback){value=tryCatch(callback,detail);if(value===TRY_CATCH_ERROR){failed=true;error=value.error;value=null;}else{succeeded=true;}if(promise===value){_reject(promise,cannotReturnOwn());return;}}else{value=detail;succeeded=true;}if(promise._state!==PENDING){// noop\n}else if(hasCallback&&succeeded){_resolve(promise,value);}else if(failed){_reject(promise,error);}else if(settled===FULFILLED){fulfill(promise,value);}else if(settled===REJECTED){_reject(promise,value);}}function initializePromise(promise,resolver){try{resolver(function resolvePromise(value){_resolve(promise,value);},function rejectPromise(reason){_reject(promise,reason);});}catch(e){_reject(promise,e);}}var id=0;function nextId(){return id++;}function makePromise(promise){promise[PROMISE_ID]=id++;promise._state=undefined;promise._result=undefined;promise._subscribers=[];}function Enumerator(Constructor,input){this._instanceConstructor=Constructor;this.promise=new Constructor(noop);if(!this.promise[PROMISE_ID]){makePromise(this.promise);}if(isArray(input)){this._input=input;this.length=input.length;this._remaining=input.length;this._result=new Array(this.length);if(this.length===0){fulfill(this.promise,this._result);}else{this.length=this.length||0;this._enumerate();if(this._remaining===0){fulfill(this.promise,this._result);}}}else{_reject(this.promise,validationError());}}function validationError(){return new Error('Array Methods must be provided an Array');};Enumerator.prototype._enumerate=function(){var length=this.length;var _input=this._input;for(var i=0;this._state===PENDING&&i<length;i++){this._eachEntry(_input[i],i);}};Enumerator.prototype._eachEntry=function(entry,i){var c=this._instanceConstructor;var resolve$$=c.resolve;if(resolve$$===resolve){var _then=getThen(entry);if(_then===then&&entry._state!==PENDING){this._settledAt(entry._state,i,entry._result);}else if(typeof _then!=='function'){this._remaining--;this._result[i]=entry;}else if(c===Promise){var promise=new c(noop);handleMaybeThenable(promise,entry,_then);this._willSettleAt(promise,i);}else{this._willSettleAt(new c(function(resolve$$){return resolve$$(entry);}),i);}}else{this._willSettleAt(resolve$$(entry),i);}};Enumerator.prototype._settledAt=function(state,i,value){var promise=this.promise;if(promise._state===PENDING){this._remaining--;if(state===REJECTED){_reject(promise,value);}else{this._result[i]=value;}}if(this._remaining===0){fulfill(promise,this._result);}};Enumerator.prototype._willSettleAt=function(promise,i){var enumerator=this;subscribe(promise,undefined,function(value){return enumerator._settledAt(FULFILLED,i,value);},function(reason){return enumerator._settledAt(REJECTED,i,reason);});};/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/function all(entries){return new Enumerator(this,entries).promise;}/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/function race(entries){/*jshint validthis:true */var Constructor=this;if(!isArray(entries)){return new Constructor(function(_,reject){return reject(new TypeError('You must pass an array to race.'));});}else{return new Constructor(function(resolve,reject){var length=entries.length;for(var i=0;i<length;i++){Constructor.resolve(entries[i]).then(resolve,reject);}});}}/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/function reject(reason){/*jshint validthis:true */var Constructor=this;var promise=new Constructor(noop);_reject(promise,reason);return promise;}function needsResolver(){throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');}function needsNew(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");}/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/function Promise(resolver){this[PROMISE_ID]=nextId();this._result=this._state=undefined;this._subscribers=[];if(noop!==resolver){typeof resolver!=='function'&&needsResolver();this instanceof Promise?initializePromise(this,resolver):needsNew();}}Promise.all=all;Promise.race=race;Promise.resolve=resolve;Promise.reject=reject;Promise._setScheduler=setScheduler;Promise._setAsap=setAsap;Promise._asap=asap;Promise.prototype={constructor:Promise,/**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */then:then,/**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */'catch':function _catch(onRejection){return this.then(null,onRejection);}};function polyfill(){var local=undefined;if(typeof global!=='undefined'){local=global;}else if(typeof self!=='undefined'){local=self;}else{try{local=Function('return this')();}catch(e){throw new Error('polyfill failed because global object is unavailable in this environment');}}var P=local.Promise;if(P){var promiseToString=null;try{promiseToString=Object.prototype.toString.call(P.resolve());}catch(e){// silently ignored\n}if(promiseToString==='[object Promise]'&&!P.cast){return;}}local.Promise=Promise;}polyfill();// Strange compat..\nPromise.polyfill=polyfill;Promise.Promise=Promise;return Promise;});}).call(this,_dereq_('_process'),typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});},{\"_process\":232}],79:[function(_dereq_,module,exports){\"use strict\";module.exports=extractPlanes;function extractPlanes(M,zNear,zFar){var z=zNear||0.0;var zf=zFar||1.0;return[[M[12]+M[0],M[13]+M[1],M[14]+M[2],M[15]+M[3]],[M[12]-M[0],M[13]-M[1],M[14]-M[2],M[15]-M[3]],[M[12]+M[4],M[13]+M[5],M[14]+M[6],M[15]+M[7]],[M[12]-M[4],M[13]-M[5],M[14]-M[6],M[15]-M[7]],[z*M[12]+M[8],z*M[13]+M[9],z*M[14]+M[10],z*M[15]+M[11]],[zf*M[12]-M[8],zf*M[13]-M[9],zf*M[14]-M[10],zf*M[15]-M[11]]];}},{}],80:[function(_dereq_,module,exports){/**\r\n * inspired by is-number <https://github.com/jonschlinkert/is-number>\r\n * but significantly simplified and sped up by ignoring number and string constructors\r\n * ie these return false:\r\n *   new Number(1)\r\n *   new String('1')\r\n */'use strict';var allBlankCharCodes=_dereq_('is-string-blank');module.exports=function(n){var type=_typeof(n);if(type==='string'){var original=n;n=+n;// whitespace strings cast to zero - filter them out\nif(n===0&&allBlankCharCodes(original))return false;}else if(type!=='number')return false;return n-n<1;};},{\"is-string-blank\":174}],81:[function(_dereq_,module,exports){'use strict';module.exports=createFilteredVector;var cubicHermite=_dereq_('cubic-hermite');var bsearch=_dereq_('binary-search-bounds');function clamp(lo,hi,x){return Math.min(hi,Math.max(lo,x));}function FilteredVector(state0,velocity0,t0){this.dimension=state0.length;this.bounds=[new Array(this.dimension),new Array(this.dimension)];for(var i=0;i<this.dimension;++i){this.bounds[0][i]=-Infinity;this.bounds[1][i]=Infinity;}this._state=state0.slice().reverse();this._velocity=velocity0.slice().reverse();this._time=[t0];this._scratch=[state0.slice(),state0.slice(),state0.slice(),state0.slice(),state0.slice()];}var proto=FilteredVector.prototype;proto.flush=function(t){var idx=bsearch.gt(this._time,t)-1;if(idx<=0){return;}this._time.splice(0,idx);this._state.splice(0,idx*this.dimension);this._velocity.splice(0,idx*this.dimension);};proto.curve=function(t){var time=this._time;var n=time.length;var idx=bsearch.le(time,t);var result=this._scratch[0];var state=this._state;var velocity=this._velocity;var d=this.dimension;var bounds=this.bounds;if(idx<0){var ptr=d-1;for(var i=0;i<d;++i,--ptr){result[i]=state[ptr];}}else if(idx>=n-1){var ptr=state.length-1;var tf=t-time[n-1];for(var i=0;i<d;++i,--ptr){result[i]=state[ptr]+tf*velocity[ptr];}}else{var ptr=d*(idx+1)-1;var t0=time[idx];var t1=time[idx+1];var dt=t1-t0||1.0;var x0=this._scratch[1];var x1=this._scratch[2];var v0=this._scratch[3];var v1=this._scratch[4];var steady=true;for(var i=0;i<d;++i,--ptr){x0[i]=state[ptr];v0[i]=velocity[ptr]*dt;x1[i]=state[ptr+d];v1[i]=velocity[ptr+d]*dt;steady=steady&&x0[i]===x1[i]&&v0[i]===v1[i]&&v0[i]===0.0;}if(steady){for(var i=0;i<d;++i){result[i]=x0[i];}}else{cubicHermite(x0,v0,x1,v1,(t-t0)/dt,result);}}var lo=bounds[0];var hi=bounds[1];for(var i=0;i<d;++i){result[i]=clamp(lo[i],hi[i],result[i]);}return result;};proto.dcurve=function(t){var time=this._time;var n=time.length;var idx=bsearch.le(time,t);var result=this._scratch[0];var state=this._state;var velocity=this._velocity;var d=this.dimension;if(idx>=n-1){var ptr=state.length-1;var tf=t-time[n-1];for(var i=0;i<d;++i,--ptr){result[i]=velocity[ptr];}}else{var ptr=d*(idx+1)-1;var t0=time[idx];var t1=time[idx+1];var dt=t1-t0||1.0;var x0=this._scratch[1];var x1=this._scratch[2];var v0=this._scratch[3];var v1=this._scratch[4];var steady=true;for(var i=0;i<d;++i,--ptr){x0[i]=state[ptr];v0[i]=velocity[ptr]*dt;x1[i]=state[ptr+d];v1[i]=velocity[ptr+d]*dt;steady=steady&&x0[i]===x1[i]&&v0[i]===v1[i]&&v0[i]===0.0;}if(steady){for(var i=0;i<d;++i){result[i]=0.0;}}else{cubicHermite.derivative(x0,v0,x1,v1,(t-t0)/dt,result);for(var i=0;i<d;++i){result[i]/=dt;}}}return result;};proto.lastT=function(){var time=this._time;return time[time.length-1];};proto.stable=function(){var velocity=this._velocity;var ptr=velocity.length;for(var i=this.dimension-1;i>=0;--i){if(velocity[--ptr]){return false;}}return true;};proto.jump=function(t){var t0=this.lastT();var d=this.dimension;if(t<t0||arguments.length!==d+1){return;}var state=this._state;var velocity=this._velocity;var ptr=state.length-this.dimension;var bounds=this.bounds;var lo=bounds[0];var hi=bounds[1];this._time.push(t0,t);for(var j=0;j<2;++j){for(var i=0;i<d;++i){state.push(state[ptr++]);velocity.push(0);}}this._time.push(t);for(var i=d;i>0;--i){state.push(clamp(lo[i-1],hi[i-1],arguments[i]));velocity.push(0);}};proto.push=function(t){var t0=this.lastT();var d=this.dimension;if(t<t0||arguments.length!==d+1){return;}var state=this._state;var velocity=this._velocity;var ptr=state.length-this.dimension;var dt=t-t0;var bounds=this.bounds;var lo=bounds[0];var hi=bounds[1];var sf=dt>1e-6?1/dt:0;this._time.push(t);for(var i=d;i>0;--i){var xc=clamp(lo[i-1],hi[i-1],arguments[i]);state.push(xc);velocity.push((xc-state[ptr++])*sf);}};proto.set=function(t){var d=this.dimension;if(t<this.lastT()||arguments.length!==d+1){return;}var state=this._state;var velocity=this._velocity;var bounds=this.bounds;var lo=bounds[0];var hi=bounds[1];this._time.push(t);for(var i=d;i>0;--i){state.push(clamp(lo[i-1],hi[i-1],arguments[i]));velocity.push(0);}};proto.move=function(t){var t0=this.lastT();var d=this.dimension;if(t<=t0||arguments.length!==d+1){return;}var state=this._state;var velocity=this._velocity;var statePtr=state.length-this.dimension;var bounds=this.bounds;var lo=bounds[0];var hi=bounds[1];var dt=t-t0;var sf=dt>1e-6?1/dt:0.0;this._time.push(t);for(var i=d;i>0;--i){var dx=arguments[i];state.push(clamp(lo[i-1],hi[i-1],state[statePtr++]+dx));velocity.push(dx*sf);}};proto.idle=function(t){var t0=this.lastT();if(t<t0){return;}var d=this.dimension;var state=this._state;var velocity=this._velocity;var statePtr=state.length-d;var bounds=this.bounds;var lo=bounds[0];var hi=bounds[1];var dt=t-t0;this._time.push(t);for(var i=d-1;i>=0;--i){state.push(clamp(lo[i],hi[i],state[statePtr]+dt*velocity[statePtr]));velocity.push(0);statePtr+=1;}};function getZero(d){var result=new Array(d);for(var i=0;i<d;++i){result[i]=0.0;}return result;}function createFilteredVector(initState,initVelocity,initTime){switch(arguments.length){case 0:return new FilteredVector([0],[0],0);case 1:if(typeof initState==='number'){var zero=getZero(initState);return new FilteredVector(zero,zero,0);}else{return new FilteredVector(initState,getZero(initState.length),0);}case 2:if(typeof initVelocity==='number'){var zero=getZero(initState.length);return new FilteredVector(initState,zero,+initVelocity);}else{initTime=0;}case 3:if(initState.length!==initVelocity.length){throw new Error('state and velocity lengths must match');}return new FilteredVector(initState,initVelocity,initTime);}}},{\"binary-search-bounds\":31,\"cubic-hermite\":66}],82:[function(_dereq_,module,exports){\"use strict\";module.exports=createRBTree;var RED=0;var BLACK=1;function RBNode(color,key,value,left,right,count){this._color=color;this.key=key;this.value=value;this.left=left;this.right=right;this._count=count;}function cloneNode(node){return new RBNode(node._color,node.key,node.value,node.left,node.right,node._count);}function repaint(color,node){return new RBNode(color,node.key,node.value,node.left,node.right,node._count);}function recount(node){node._count=1+(node.left?node.left._count:0)+(node.right?node.right._count:0);}function RedBlackTree(compare,root){this._compare=compare;this.root=root;}var proto=RedBlackTree.prototype;Object.defineProperty(proto,\"keys\",{get:function get(){var result=[];this.forEach(function(k,v){result.push(k);});return result;}});Object.defineProperty(proto,\"values\",{get:function get(){var result=[];this.forEach(function(k,v){result.push(v);});return result;}});//Returns the number of nodes in the tree\nObject.defineProperty(proto,\"length\",{get:function get(){if(this.root){return this.root._count;}return 0;}});//Insert a new item into the tree\nproto.insert=function(key,value){var cmp=this._compare;//Find point to insert new node at\nvar n=this.root;var n_stack=[];var d_stack=[];while(n){var d=cmp(key,n.key);n_stack.push(n);d_stack.push(d);if(d<=0){n=n.left;}else{n=n.right;}}//Rebuild path to leaf node\nn_stack.push(new RBNode(RED,key,value,null,null,1));for(var s=n_stack.length-2;s>=0;--s){var n=n_stack[s];if(d_stack[s]<=0){n_stack[s]=new RBNode(n._color,n.key,n.value,n_stack[s+1],n.right,n._count+1);}else{n_stack[s]=new RBNode(n._color,n.key,n.value,n.left,n_stack[s+1],n._count+1);}}//Rebalance tree using rotations\n//console.log(\"start insert\", key, d_stack)\nfor(var s=n_stack.length-1;s>1;--s){var p=n_stack[s-1];var n=n_stack[s];if(p._color===BLACK||n._color===BLACK){break;}var pp=n_stack[s-2];if(pp.left===p){if(p.left===n){var y=pp.right;if(y&&y._color===RED){//console.log(\"LLr\")\np._color=BLACK;pp.right=repaint(BLACK,y);pp._color=RED;s-=1;}else{//console.log(\"LLb\")\npp._color=RED;pp.left=p.right;p._color=BLACK;p.right=pp;n_stack[s-2]=p;n_stack[s-1]=n;recount(pp);recount(p);if(s>=3){var ppp=n_stack[s-3];if(ppp.left===pp){ppp.left=p;}else{ppp.right=p;}}break;}}else{var y=pp.right;if(y&&y._color===RED){//console.log(\"LRr\")\np._color=BLACK;pp.right=repaint(BLACK,y);pp._color=RED;s-=1;}else{//console.log(\"LRb\")\np.right=n.left;pp._color=RED;pp.left=n.right;n._color=BLACK;n.left=p;n.right=pp;n_stack[s-2]=n;n_stack[s-1]=p;recount(pp);recount(p);recount(n);if(s>=3){var ppp=n_stack[s-3];if(ppp.left===pp){ppp.left=n;}else{ppp.right=n;}}break;}}}else{if(p.right===n){var y=pp.left;if(y&&y._color===RED){//console.log(\"RRr\", y.key)\np._color=BLACK;pp.left=repaint(BLACK,y);pp._color=RED;s-=1;}else{//console.log(\"RRb\")\npp._color=RED;pp.right=p.left;p._color=BLACK;p.left=pp;n_stack[s-2]=p;n_stack[s-1]=n;recount(pp);recount(p);if(s>=3){var ppp=n_stack[s-3];if(ppp.right===pp){ppp.right=p;}else{ppp.left=p;}}break;}}else{var y=pp.left;if(y&&y._color===RED){//console.log(\"RLr\")\np._color=BLACK;pp.left=repaint(BLACK,y);pp._color=RED;s-=1;}else{//console.log(\"RLb\")\np.left=n.right;pp._color=RED;pp.right=n.left;n._color=BLACK;n.right=p;n.left=pp;n_stack[s-2]=n;n_stack[s-1]=p;recount(pp);recount(p);recount(n);if(s>=3){var ppp=n_stack[s-3];if(ppp.right===pp){ppp.right=n;}else{ppp.left=n;}}break;}}}}//Return new tree\nn_stack[0]._color=BLACK;return new RedBlackTree(cmp,n_stack[0]);};//Visit all nodes inorder\nfunction doVisitFull(visit,node){if(node.left){var v=doVisitFull(visit,node.left);if(v){return v;}}var v=visit(node.key,node.value);if(v){return v;}if(node.right){return doVisitFull(visit,node.right);}}//Visit half nodes in order\nfunction doVisitHalf(lo,compare,visit,node){var l=compare(lo,node.key);if(l<=0){if(node.left){var v=doVisitHalf(lo,compare,visit,node.left);if(v){return v;}}var v=visit(node.key,node.value);if(v){return v;}}if(node.right){return doVisitHalf(lo,compare,visit,node.right);}}//Visit all nodes within a range\nfunction doVisit(lo,hi,compare,visit,node){var l=compare(lo,node.key);var h=compare(hi,node.key);var v;if(l<=0){if(node.left){v=doVisit(lo,hi,compare,visit,node.left);if(v){return v;}}if(h>0){v=visit(node.key,node.value);if(v){return v;}}}if(h>0&&node.right){return doVisit(lo,hi,compare,visit,node.right);}}proto.forEach=function rbTreeForEach(visit,lo,hi){if(!this.root){return;}switch(arguments.length){case 1:return doVisitFull(visit,this.root);break;case 2:return doVisitHalf(lo,this._compare,visit,this.root);break;case 3:if(this._compare(lo,hi)>=0){return;}return doVisit(lo,hi,this._compare,visit,this.root);break;}};//First item in list\nObject.defineProperty(proto,\"begin\",{get:function get(){var stack=[];var n=this.root;while(n){stack.push(n);n=n.left;}return new RedBlackTreeIterator(this,stack);}});//Last item in list\nObject.defineProperty(proto,\"end\",{get:function get(){var stack=[];var n=this.root;while(n){stack.push(n);n=n.right;}return new RedBlackTreeIterator(this,stack);}});//Find the ith item in the tree\nproto.at=function(idx){if(idx<0){return new RedBlackTreeIterator(this,[]);}var n=this.root;var stack=[];while(true){stack.push(n);if(n.left){if(idx<n.left._count){n=n.left;continue;}idx-=n.left._count;}if(!idx){return new RedBlackTreeIterator(this,stack);}idx-=1;if(n.right){if(idx>=n.right._count){break;}n=n.right;}else{break;}}return new RedBlackTreeIterator(this,[]);};proto.ge=function(key){var cmp=this._compare;var n=this.root;var stack=[];var last_ptr=0;while(n){var d=cmp(key,n.key);stack.push(n);if(d<=0){last_ptr=stack.length;}if(d<=0){n=n.left;}else{n=n.right;}}stack.length=last_ptr;return new RedBlackTreeIterator(this,stack);};proto.gt=function(key){var cmp=this._compare;var n=this.root;var stack=[];var last_ptr=0;while(n){var d=cmp(key,n.key);stack.push(n);if(d<0){last_ptr=stack.length;}if(d<0){n=n.left;}else{n=n.right;}}stack.length=last_ptr;return new RedBlackTreeIterator(this,stack);};proto.lt=function(key){var cmp=this._compare;var n=this.root;var stack=[];var last_ptr=0;while(n){var d=cmp(key,n.key);stack.push(n);if(d>0){last_ptr=stack.length;}if(d<=0){n=n.left;}else{n=n.right;}}stack.length=last_ptr;return new RedBlackTreeIterator(this,stack);};proto.le=function(key){var cmp=this._compare;var n=this.root;var stack=[];var last_ptr=0;while(n){var d=cmp(key,n.key);stack.push(n);if(d>=0){last_ptr=stack.length;}if(d<0){n=n.left;}else{n=n.right;}}stack.length=last_ptr;return new RedBlackTreeIterator(this,stack);};//Finds the item with key if it exists\nproto.find=function(key){var cmp=this._compare;var n=this.root;var stack=[];while(n){var d=cmp(key,n.key);stack.push(n);if(d===0){return new RedBlackTreeIterator(this,stack);}if(d<=0){n=n.left;}else{n=n.right;}}return new RedBlackTreeIterator(this,[]);};//Removes item with key from tree\nproto.remove=function(key){var iter=this.find(key);if(iter){return iter.remove();}return this;};//Returns the item at `key`\nproto.get=function(key){var cmp=this._compare;var n=this.root;while(n){var d=cmp(key,n.key);if(d===0){return n.value;}if(d<=0){n=n.left;}else{n=n.right;}}return;};//Iterator for red black tree\nfunction RedBlackTreeIterator(tree,stack){this.tree=tree;this._stack=stack;}var iproto=RedBlackTreeIterator.prototype;//Test if iterator is valid\nObject.defineProperty(iproto,\"valid\",{get:function get(){return this._stack.length>0;}});//Node of the iterator\nObject.defineProperty(iproto,\"node\",{get:function get(){if(this._stack.length>0){return this._stack[this._stack.length-1];}return null;},enumerable:true});//Makes a copy of an iterator\niproto.clone=function(){return new RedBlackTreeIterator(this.tree,this._stack.slice());};//Swaps two nodes\nfunction swapNode(n,v){n.key=v.key;n.value=v.value;n.left=v.left;n.right=v.right;n._color=v._color;n._count=v._count;}//Fix up a double black node in a tree\nfunction fixDoubleBlack(stack){var n,p,s,z;for(var i=stack.length-1;i>=0;--i){n=stack[i];if(i===0){n._color=BLACK;return;}//console.log(\"visit node:\", n.key, i, stack[i].key, stack[i-1].key)\np=stack[i-1];if(p.left===n){//console.log(\"left child\")\ns=p.right;if(s.right&&s.right._color===RED){//console.log(\"case 1: right sibling child red\")\ns=p.right=cloneNode(s);z=s.right=cloneNode(s.right);p.right=s.left;s.left=p;s.right=z;s._color=p._color;n._color=BLACK;p._color=BLACK;z._color=BLACK;recount(p);recount(s);if(i>1){var pp=stack[i-2];if(pp.left===p){pp.left=s;}else{pp.right=s;}}stack[i-1]=s;return;}else if(s.left&&s.left._color===RED){//console.log(\"case 1: left sibling child red\")\ns=p.right=cloneNode(s);z=s.left=cloneNode(s.left);p.right=z.left;s.left=z.right;z.left=p;z.right=s;z._color=p._color;p._color=BLACK;s._color=BLACK;n._color=BLACK;recount(p);recount(s);recount(z);if(i>1){var pp=stack[i-2];if(pp.left===p){pp.left=z;}else{pp.right=z;}}stack[i-1]=z;return;}if(s._color===BLACK){if(p._color===RED){//console.log(\"case 2: black sibling, red parent\", p.right.value)\np._color=BLACK;p.right=repaint(RED,s);return;}else{//console.log(\"case 2: black sibling, black parent\", p.right.value)\np.right=repaint(RED,s);continue;}}else{//console.log(\"case 3: red sibling\")\ns=cloneNode(s);p.right=s.left;s.left=p;s._color=p._color;p._color=RED;recount(p);recount(s);if(i>1){var pp=stack[i-2];if(pp.left===p){pp.left=s;}else{pp.right=s;}}stack[i-1]=s;stack[i]=p;if(i+1<stack.length){stack[i+1]=n;}else{stack.push(n);}i=i+2;}}else{//console.log(\"right child\")\ns=p.left;if(s.left&&s.left._color===RED){//console.log(\"case 1: left sibling child red\", p.value, p._color)\ns=p.left=cloneNode(s);z=s.left=cloneNode(s.left);p.left=s.right;s.right=p;s.left=z;s._color=p._color;n._color=BLACK;p._color=BLACK;z._color=BLACK;recount(p);recount(s);if(i>1){var pp=stack[i-2];if(pp.right===p){pp.right=s;}else{pp.left=s;}}stack[i-1]=s;return;}else if(s.right&&s.right._color===RED){//console.log(\"case 1: right sibling child red\")\ns=p.left=cloneNode(s);z=s.right=cloneNode(s.right);p.left=z.right;s.right=z.left;z.right=p;z.left=s;z._color=p._color;p._color=BLACK;s._color=BLACK;n._color=BLACK;recount(p);recount(s);recount(z);if(i>1){var pp=stack[i-2];if(pp.right===p){pp.right=z;}else{pp.left=z;}}stack[i-1]=z;return;}if(s._color===BLACK){if(p._color===RED){//console.log(\"case 2: black sibling, red parent\")\np._color=BLACK;p.left=repaint(RED,s);return;}else{//console.log(\"case 2: black sibling, black parent\")\np.left=repaint(RED,s);continue;}}else{//console.log(\"case 3: red sibling\")\ns=cloneNode(s);p.left=s.right;s.right=p;s._color=p._color;p._color=RED;recount(p);recount(s);if(i>1){var pp=stack[i-2];if(pp.right===p){pp.right=s;}else{pp.left=s;}}stack[i-1]=s;stack[i]=p;if(i+1<stack.length){stack[i+1]=n;}else{stack.push(n);}i=i+2;}}}}//Removes item at iterator from tree\niproto.remove=function(){var stack=this._stack;if(stack.length===0){return this.tree;}//First copy path to node\nvar cstack=new Array(stack.length);var n=stack[stack.length-1];cstack[cstack.length-1]=new RBNode(n._color,n.key,n.value,n.left,n.right,n._count);for(var i=stack.length-2;i>=0;--i){var n=stack[i];if(n.left===stack[i+1]){cstack[i]=new RBNode(n._color,n.key,n.value,cstack[i+1],n.right,n._count);}else{cstack[i]=new RBNode(n._color,n.key,n.value,n.left,cstack[i+1],n._count);}}//Get node\nn=cstack[cstack.length-1];//console.log(\"start remove: \", n.value)\n//If not leaf, then swap with previous node\nif(n.left&&n.right){//console.log(\"moving to leaf\")\n//First walk to previous leaf\nvar split=cstack.length;n=n.left;while(n.right){cstack.push(n);n=n.right;}//Copy path to leaf\nvar v=cstack[split-1];cstack.push(new RBNode(n._color,v.key,v.value,n.left,n.right,n._count));cstack[split-1].key=n.key;cstack[split-1].value=n.value;//Fix up stack\nfor(var i=cstack.length-2;i>=split;--i){n=cstack[i];cstack[i]=new RBNode(n._color,n.key,n.value,n.left,cstack[i+1],n._count);}cstack[split-1].left=cstack[split];}//console.log(\"stack=\", cstack.map(function(v) { return v.value }))\n//Remove leaf node\nn=cstack[cstack.length-1];if(n._color===RED){//Easy case: removing red leaf\n//console.log(\"RED leaf\")\nvar p=cstack[cstack.length-2];if(p.left===n){p.left=null;}else if(p.right===n){p.right=null;}cstack.pop();for(var i=0;i<cstack.length;++i){cstack[i]._count--;}return new RedBlackTree(this.tree._compare,cstack[0]);}else{if(n.left||n.right){//Second easy case:  Single child black parent\n//console.log(\"BLACK single child\")\nif(n.left){swapNode(n,n.left);}else if(n.right){swapNode(n,n.right);}//Child must be red, so repaint it black to balance color\nn._color=BLACK;for(var i=0;i<cstack.length-1;++i){cstack[i]._count--;}return new RedBlackTree(this.tree._compare,cstack[0]);}else if(cstack.length===1){//Third easy case: root\n//console.log(\"ROOT\")\nreturn new RedBlackTree(this.tree._compare,null);}else{//Hard case: Repaint n, and then do some nasty stuff\n//console.log(\"BLACK leaf no children\")\nfor(var i=0;i<cstack.length;++i){cstack[i]._count--;}var parent=cstack[cstack.length-2];fixDoubleBlack(cstack);//Fix up links\nif(parent.left===n){parent.left=null;}else{parent.right=null;}}}return new RedBlackTree(this.tree._compare,cstack[0]);};//Returns key\nObject.defineProperty(iproto,\"key\",{get:function get(){if(this._stack.length>0){return this._stack[this._stack.length-1].key;}return;},enumerable:true});//Returns value\nObject.defineProperty(iproto,\"value\",{get:function get(){if(this._stack.length>0){return this._stack[this._stack.length-1].value;}return;},enumerable:true});//Returns the position of this iterator in the sorted list\nObject.defineProperty(iproto,\"index\",{get:function get(){var idx=0;var stack=this._stack;if(stack.length===0){var r=this.tree.root;if(r){return r._count;}return 0;}else if(stack[stack.length-1].left){idx=stack[stack.length-1].left._count;}for(var s=stack.length-2;s>=0;--s){if(stack[s+1]===stack[s].right){++idx;if(stack[s].left){idx+=stack[s].left._count;}}}return idx;},enumerable:true});//Advances iterator to next element in list\niproto.next=function(){var stack=this._stack;if(stack.length===0){return;}var n=stack[stack.length-1];if(n.right){n=n.right;while(n){stack.push(n);n=n.left;}}else{stack.pop();while(stack.length>0&&stack[stack.length-1].right===n){n=stack[stack.length-1];stack.pop();}}};//Checks if iterator is at end of tree\nObject.defineProperty(iproto,\"hasNext\",{get:function get(){var stack=this._stack;if(stack.length===0){return false;}if(stack[stack.length-1].right){return true;}for(var s=stack.length-1;s>0;--s){if(stack[s-1].left===stack[s]){return true;}}return false;}});//Update value\niproto.update=function(value){var stack=this._stack;if(stack.length===0){throw new Error(\"Can't update empty node!\");}var cstack=new Array(stack.length);var n=stack[stack.length-1];cstack[cstack.length-1]=new RBNode(n._color,n.key,value,n.left,n.right,n._count);for(var i=stack.length-2;i>=0;--i){n=stack[i];if(n.left===stack[i+1]){cstack[i]=new RBNode(n._color,n.key,n.value,cstack[i+1],n.right,n._count);}else{cstack[i]=new RBNode(n._color,n.key,n.value,n.left,cstack[i+1],n._count);}}return new RedBlackTree(this.tree._compare,cstack[0]);};//Moves iterator backward one element\niproto.prev=function(){var stack=this._stack;if(stack.length===0){return;}var n=stack[stack.length-1];if(n.left){n=n.left;while(n){stack.push(n);n=n.right;}}else{stack.pop();while(stack.length>0&&stack[stack.length-1].left===n){n=stack[stack.length-1];stack.pop();}}};//Checks if iterator is at start of tree\nObject.defineProperty(iproto,\"hasPrev\",{get:function get(){var stack=this._stack;if(stack.length===0){return false;}if(stack[stack.length-1].left){return true;}for(var s=stack.length-1;s>0;--s){if(stack[s-1].right===stack[s]){return true;}}return false;}});//Default comparison function\nfunction defaultCompare(a,b){if(a<b){return-1;}if(a>b){return 1;}return 0;}//Build a tree\nfunction createRBTree(compare){return new RedBlackTree(compare||defaultCompare,null);}},{}],83:[function(_dereq_,module,exports){// transliterated from the python snippet here:\n// http://en.wikipedia.org/wiki/Lanczos_approximation\nvar g=7;var p=[0.99999999999980993,676.5203681218851,-1259.1392167224028,771.32342877765313,-176.61502916214059,12.507343278686905,-0.13857109526572012,9.9843695780195716e-6,1.5056327351493116e-7];var g_ln=607/128;var p_ln=[0.99999999999999709182,57.156235665862923517,-59.597960355475491248,14.136097974741747174,-0.49191381609762019978,0.33994649984811888699e-4,0.46523628927048575665e-4,-0.98374475304879564677e-4,0.15808870322491248884e-3,-0.21026444172410488319e-3,0.21743961811521264320e-3,-0.16431810653676389022e-3,0.84418223983852743293e-4,-0.26190838401581408670e-4,0.36899182659531622704e-5];// Spouge approximation (suitable for large arguments)\nfunction lngamma(z){if(z<0)return Number('0/0');var x=p_ln[0];for(var i=p_ln.length-1;i>0;--i){x+=p_ln[i]/(z+i);}var t=z+g_ln+0.5;return .5*Math.log(2*Math.PI)+(z+.5)*Math.log(t)-t+Math.log(x)-Math.log(z);}module.exports=function gamma(z){if(z<0.5){return Math.PI/(Math.sin(Math.PI*z)*gamma(1-z));}else if(z>100)return Math.exp(lngamma(z));else{z-=1;var x=p[0];for(var i=1;i<g+2;i++){x+=p[i]/(z+i);}var t=z+g+0.5;return Math.sqrt(2*Math.PI)*Math.pow(t,z+0.5)*Math.exp(-t)*x;}};module.exports.log=lngamma;},{}],84:[function(_dereq_,module,exports){module.exports=getCanvasContext;function getCanvasContext(type,opts){if(typeof type!=='string'){throw new TypeError('must specify type string');}opts=opts||{};if(typeof document==='undefined'&&!opts.canvas){return null;// check for Node\n}var canvas=opts.canvas||document.createElement('canvas');if(typeof opts.width==='number'){canvas.width=opts.width;}if(typeof opts.height==='number'){canvas.height=opts.height;}var attribs=opts;var gl;try{var names=[type];// prefix GL contexts\nif(type.indexOf('webgl')===0){names.push('experimental-'+type);}for(var i=0;i<names.length;i++){gl=canvas.getContext(names[i],attribs);if(gl)return gl;}}catch(e){gl=null;}return gl||null;// ensure null on fail\n}},{}],85:[function(_dereq_,module,exports){'use strict';module.exports=createAxes;var createText=_dereq_('./lib/text.js');var createLines=_dereq_('./lib/lines.js');var createBackground=_dereq_('./lib/background.js');var getCubeProperties=_dereq_('./lib/cube.js');var Ticks=_dereq_('./lib/ticks.js');var identity=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);function copyVec3(a,b){a[0]=b[0];a[1]=b[1];a[2]=b[2];return a;}function Axes(gl){this.gl=gl;this.pixelRatio=1;this.bounds=[[-10,-10,-10],[10,10,10]];this.ticks=[[],[],[]];this.autoTicks=true;this.tickSpacing=[1,1,1];this.tickEnable=[true,true,true];this.tickFont=['sans-serif','sans-serif','sans-serif'];this.tickSize=[12,12,12];this.tickAngle=[0,0,0];this._tickAlign=['auto','auto','auto'];this.tickColor=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.tickPad=[10,10,10];this.lastCubeProps={cubeEdges:[0,0,0],axis:[0,0,0]};this.labels=['x','y','z'];this.labelEnable=[true,true,true];this.labelFont='sans-serif';this.labelSize=[20,20,20];this.labelAngle=[0,0,0];this.labelAlign=['auto','auto','auto'];this.labelColor=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.labelPad=[10,10,10];this.lineEnable=[true,true,true];this.lineMirror=[false,false,false];this.lineWidth=[1,1,1];this.lineColor=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.lineTickEnable=[true,true,true];this.lineTickMirror=[false,false,false];this.lineTickLength=[0,0,0];this.lineTickWidth=[1,1,1];this.lineTickColor=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.gridEnable=[true,true,true];this.gridWidth=[1,1,1];this.gridColor=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.zeroEnable=[true,true,true];this.zeroLineColor=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.zeroLineWidth=[2,2,2];this.backgroundEnable=[false,false,false];this.backgroundColor=[[0.8,0.8,0.8,0.5],[0.8,0.8,0.8,0.5],[0.8,0.8,0.8,0.5]];this._firstInit=true;this._text=null;this._lines=null;this._background=createBackground(gl);}var proto=Axes.prototype;proto.update=function(options){options=options||{};//Option parsing helper functions\nfunction parseOption(nest,cons,name){if(name in options){var opt=options[name];var prev=this[name];var next;if(nest?Array.isArray(opt)&&Array.isArray(opt[0]):Array.isArray(opt)){this[name]=next=[cons(opt[0]),cons(opt[1]),cons(opt[2])];}else{this[name]=next=[cons(opt),cons(opt),cons(opt)];}for(var i=0;i<3;++i){if(next[i]!==prev[i]){return true;}}}return false;}var NUMBER=parseOption.bind(this,false,Number);var BOOLEAN=parseOption.bind(this,false,Boolean);var STRING=parseOption.bind(this,false,String);var COLOR=parseOption.bind(this,true,function(v){if(Array.isArray(v)){if(v.length===3){return[+v[0],+v[1],+v[2],1.0];}else if(v.length===4){return[+v[0],+v[1],+v[2],+v[3]];}}return[0,0,0,1];});//Tick marks and bounds\nvar nextTicks;var ticksUpdate=false;var boundsChanged=false;if('bounds'in options){var bounds=options.bounds;i_loop:for(var i=0;i<2;++i){for(var j=0;j<3;++j){if(bounds[i][j]!==this.bounds[i][j]){boundsChanged=true;}this.bounds[i][j]=bounds[i][j];}}}if('ticks'in options){nextTicks=options.ticks;ticksUpdate=true;this.autoTicks=false;for(var i=0;i<3;++i){this.tickSpacing[i]=0.0;}}else if(NUMBER('tickSpacing')){this.autoTicks=true;boundsChanged=true;}if(this._firstInit){if(!('ticks'in options||'tickSpacing'in options)){this.autoTicks=true;}//Force tick recomputation on first update\nboundsChanged=true;ticksUpdate=true;this._firstInit=false;}if(boundsChanged&&this.autoTicks){nextTicks=Ticks.create(this.bounds,this.tickSpacing);ticksUpdate=true;}//Compare next ticks to previous ticks, only update if needed\nif(ticksUpdate){for(var i=0;i<3;++i){nextTicks[i].sort(function(a,b){return a.x-b.x;});}if(Ticks.equal(nextTicks,this.ticks)){ticksUpdate=false;}else{this.ticks=nextTicks;}}//Parse tick properties\nBOOLEAN('tickEnable');if(STRING('tickFont')){ticksUpdate=true;//If font changes, must rebuild vbo\n}NUMBER('tickSize');NUMBER('tickAngle');NUMBER('tickPad');COLOR('tickColor');//Axis labels\nvar labelUpdate=STRING('labels');if(STRING('labelFont')){labelUpdate=true;}BOOLEAN('labelEnable');NUMBER('labelSize');NUMBER('labelPad');COLOR('labelColor');//Axis lines\nBOOLEAN('lineEnable');BOOLEAN('lineMirror');NUMBER('lineWidth');COLOR('lineColor');//Axis line ticks\nBOOLEAN('lineTickEnable');BOOLEAN('lineTickMirror');NUMBER('lineTickLength');NUMBER('lineTickWidth');COLOR('lineTickColor');//Grid lines\nBOOLEAN('gridEnable');NUMBER('gridWidth');COLOR('gridColor');//Zero line\nBOOLEAN('zeroEnable');COLOR('zeroLineColor');NUMBER('zeroLineWidth');//Background\nBOOLEAN('backgroundEnable');COLOR('backgroundColor');//Update text if necessary\nif(!this._text){this._text=createText(this.gl,this.bounds,this.labels,this.labelFont,this.ticks,this.tickFont);}else if(this._text&&(labelUpdate||ticksUpdate)){this._text.update(this.bounds,this.labels,this.labelFont,this.ticks,this.tickFont);}//Update lines if necessary\nif(this._lines&&ticksUpdate){this._lines.dispose();this._lines=null;}if(!this._lines){this._lines=createLines(this.gl,this.bounds,this.ticks);}};function OffsetInfo(){this.primalOffset=[0,0,0];this.primalMinor=[0,0,0];this.mirrorOffset=[0,0,0];this.mirrorMinor=[0,0,0];}var LINE_OFFSET=[new OffsetInfo(),new OffsetInfo(),new OffsetInfo()];function computeLineOffset(result,i,bounds,cubeEdges,cubeAxis){var primalOffset=result.primalOffset;var primalMinor=result.primalMinor;var dualOffset=result.mirrorOffset;var dualMinor=result.mirrorMinor;var e=cubeEdges[i];//Calculate offsets\nfor(var j=0;j<3;++j){if(i===j){continue;}var a=primalOffset,b=dualOffset,c=primalMinor,d=dualMinor;if(e&1<<j){a=dualOffset;b=primalOffset;c=dualMinor;d=primalMinor;}a[j]=bounds[0][j];b[j]=bounds[1][j];if(cubeAxis[j]>0){c[j]=-1;d[j]=0;}else{c[j]=0;d[j]=+1;}}}var CUBE_ENABLE=[0,0,0];var DEFAULT_PARAMS={model:identity,view:identity,projection:identity};proto.isOpaque=function(){return true;};proto.isTransparent=function(){return false;};proto.drawTransparent=function(params){};var ALIGN_OPTION_AUTO=0;// i.e. as defined in the shader the text would rotate to stay upwards range: [-90,90]\nvar PRIMAL_MINOR=[0,0,0];var MIRROR_MINOR=[0,0,0];var PRIMAL_OFFSET=[0,0,0];proto.draw=function(params){params=params||DEFAULT_PARAMS;var gl=this.gl;//Geometry for camera and axes\nvar model=params.model||identity;var view=params.view||identity;var projection=params.projection||identity;var bounds=this.bounds;//Unpack axis info\nvar cubeParams=getCubeProperties(model,view,projection,bounds);var cubeEdges=cubeParams.cubeEdges;var cubeAxis=cubeParams.axis;var cx=view[12];var cy=view[13];var cz=view[14];var cw=view[15];var pixelScaleF=this.pixelRatio*(projection[3]*cx+projection[7]*cy+projection[11]*cz+projection[15]*cw)/gl.drawingBufferHeight;for(var i=0;i<3;++i){this.lastCubeProps.cubeEdges[i]=cubeEdges[i];this.lastCubeProps.axis[i]=cubeAxis[i];}//Compute axis info\nvar lineOffset=LINE_OFFSET;for(var i=0;i<3;++i){computeLineOffset(LINE_OFFSET[i],i,this.bounds,cubeEdges,cubeAxis);}//Set up state parameters\nvar gl=this.gl;//Draw background first\nvar cubeEnable=CUBE_ENABLE;for(var i=0;i<3;++i){if(this.backgroundEnable[i]){cubeEnable[i]=cubeAxis[i];}else{cubeEnable[i]=0;}}this._background.draw(model,view,projection,bounds,cubeEnable,this.backgroundColor);//Draw lines\nthis._lines.bind(model,view,projection,this);//First draw grid lines and zero lines\nfor(var i=0;i<3;++i){var x=[0,0,0];if(cubeAxis[i]>0){x[i]=bounds[1][i];}else{x[i]=bounds[0][i];}//Draw grid lines\nfor(var j=0;j<2;++j){var u=(i+1+j)%3;var v=(i+1+(j^1))%3;if(this.gridEnable[u]){this._lines.drawGrid(u,v,this.bounds,x,this.gridColor[u],this.gridWidth[u]*this.pixelRatio);}}//Draw zero lines (need to do this AFTER all grid lines are drawn)\nfor(var j=0;j<2;++j){var u=(i+1+j)%3;var v=(i+1+(j^1))%3;if(this.zeroEnable[v]){//Check if zero line in bounds\nif(Math.min(bounds[0][v],bounds[1][v])<=0&&Math.max(bounds[0][v],bounds[1][v])>=0){this._lines.drawZero(u,v,this.bounds,x,this.zeroLineColor[v],this.zeroLineWidth[v]*this.pixelRatio);}}}}//Then draw axis lines and tick marks\nfor(var i=0;i<3;++i){//Draw axis lines\nif(this.lineEnable[i]){this._lines.drawAxisLine(i,this.bounds,lineOffset[i].primalOffset,this.lineColor[i],this.lineWidth[i]*this.pixelRatio);}if(this.lineMirror[i]){this._lines.drawAxisLine(i,this.bounds,lineOffset[i].mirrorOffset,this.lineColor[i],this.lineWidth[i]*this.pixelRatio);}//Compute minor axes\nvar primalMinor=copyVec3(PRIMAL_MINOR,lineOffset[i].primalMinor);var mirrorMinor=copyVec3(MIRROR_MINOR,lineOffset[i].mirrorMinor);var tickLength=this.lineTickLength;var op=0;for(var j=0;j<3;++j){var scaleFactor=pixelScaleF/model[5*j];primalMinor[j]*=tickLength[j]*scaleFactor;mirrorMinor[j]*=tickLength[j]*scaleFactor;}//Draw axis line ticks\nif(this.lineTickEnable[i]){this._lines.drawAxisTicks(i,lineOffset[i].primalOffset,primalMinor,this.lineTickColor[i],this.lineTickWidth[i]*this.pixelRatio);}if(this.lineTickMirror[i]){this._lines.drawAxisTicks(i,lineOffset[i].mirrorOffset,mirrorMinor,this.lineTickColor[i],this.lineTickWidth[i]*this.pixelRatio);}}this._lines.unbind();//Draw text sprites\nthis._text.bind(model,view,projection,this.pixelRatio);var alignOpt;// options in shader are from this list {-1, 0, 1, 2, 3, ..., n}\n// -1: backward compatible\n//  0: raw data\n//  1: auto align, free angles\n//  2: auto align, horizontal or vertical\n//3-n: auto align, round to n directions e.g. 12 -> round to angles with 30-degree steps\nvar hv_ratio=0.5;// can have an effect on the ratio between horizontals and verticals when using option 2\nvar enableAlign;var alignDir;function alignTo(i){alignDir=[0,0,0];alignDir[i]=1;}function solveTickAlignments(i,minor,major){var i1=(i+1)%3;var i2=(i+2)%3;var A=minor[i1];var B=minor[i2];var C=major[i1];var D=major[i2];if(A>0&&D>0){alignTo(i1);return;}else if(A>0&&D<0){alignTo(i1);return;}else if(A<0&&D>0){alignTo(i1);return;}else if(A<0&&D<0){alignTo(i1);return;}else if(B>0&&C>0){alignTo(i2);return;}else if(B>0&&C<0){alignTo(i2);return;}else if(B<0&&C>0){alignTo(i2);return;}else if(B<0&&C<0){alignTo(i2);return;}}for(var i=0;i<3;++i){var minor=lineOffset[i].primalMinor;var major=lineOffset[i].mirrorMinor;var offset=copyVec3(PRIMAL_OFFSET,lineOffset[i].primalOffset);for(var j=0;j<3;++j){if(this.lineTickEnable[i]){offset[j]+=pixelScaleF*minor[j]*Math.max(this.lineTickLength[j],0)/model[5*j];}}var axis=[0,0,0];axis[i]=1;//Draw tick text\nif(this.tickEnable[i]){if(this.tickAngle[i]===-3600){this.tickAngle[i]=0;this._tickAlign[i]='auto';}else{this._tickAlign[i]=-1;}enableAlign=1;alignOpt=[this._tickAlign[i],hv_ratio,enableAlign];if(alignOpt[0]==='auto')alignOpt[0]=ALIGN_OPTION_AUTO;else alignOpt[0]=parseInt(''+alignOpt[0]);alignDir=[0,0,0];solveTickAlignments(i,minor,major);//Add tick padding\nfor(var j=0;j<3;++j){offset[j]+=pixelScaleF*minor[j]*this.tickPad[j]/model[5*j];}//Draw axis\nthis._text.drawTicks(i,this.tickSize[i],this.tickAngle[i],offset,this.tickColor[i],axis,alignDir,alignOpt);}//Draw labels\nif(this.labelEnable[i]){enableAlign=0;alignDir=[0,0,0];if(this.labels[i].length>4){// for large label axis enable alignDir to axis\nalignTo(i);enableAlign=1;}alignOpt=[this.labelAlign[i],hv_ratio,enableAlign];if(alignOpt[0]==='auto')alignOpt[0]=ALIGN_OPTION_AUTO;else alignOpt[0]=parseInt(''+alignOpt[0]);//Add label padding\nfor(var j=0;j<3;++j){offset[j]+=pixelScaleF*minor[j]*this.labelPad[j]/model[5*j];}offset[i]+=0.5*(bounds[0][i]+bounds[1][i]);//Draw axis\nthis._text.drawLabel(i,this.labelSize[i],this.labelAngle[i],offset,this.labelColor[i],[0,0,0],alignDir,alignOpt);}}this._text.unbind();};proto.dispose=function(){this._text.dispose();this._lines.dispose();this._background.dispose();this._lines=null;this._text=null;this._background=null;this.gl=null;};function createAxes(gl,options){var axes=new Axes(gl);axes.update(options);return axes;}},{\"./lib/background.js\":86,\"./lib/cube.js\":87,\"./lib/lines.js\":88,\"./lib/text.js\":90,\"./lib/ticks.js\":91}],86:[function(_dereq_,module,exports){'use strict';module.exports=createBackgroundCube;var createBuffer=_dereq_('gl-buffer');var createVAO=_dereq_('gl-vao');var createShader=_dereq_('./shaders').bg;function BackgroundCube(gl,buffer,vao,shader){this.gl=gl;this.buffer=buffer;this.vao=vao;this.shader=shader;}var proto=BackgroundCube.prototype;proto.draw=function(model,view,projection,bounds,enable,colors){var needsBG=false;for(var i=0;i<3;++i){needsBG=needsBG||enable[i];}if(!needsBG){return;}var gl=this.gl;gl.enable(gl.POLYGON_OFFSET_FILL);gl.polygonOffset(1,2);this.shader.bind();this.shader.uniforms={model:model,view:view,projection:projection,bounds:bounds,enable:enable,colors:colors};this.vao.bind();this.vao.draw(this.gl.TRIANGLES,36);this.vao.unbind();gl.disable(gl.POLYGON_OFFSET_FILL);};proto.dispose=function(){this.vao.dispose();this.buffer.dispose();this.shader.dispose();};function createBackgroundCube(gl){//Create cube vertices\nvar vertices=[];var indices=[];var ptr=0;for(var d=0;d<3;++d){var u=(d+1)%3;var v=(d+2)%3;var x=[0,0,0];var c=[0,0,0];for(var s=-1;s<=1;s+=2){indices.push(ptr,ptr+2,ptr+1,ptr+1,ptr+2,ptr+3);x[d]=s;c[d]=s;for(var i=-1;i<=1;i+=2){x[u]=i;for(var j=-1;j<=1;j+=2){x[v]=j;vertices.push(x[0],x[1],x[2],c[0],c[1],c[2]);ptr+=1;}}//Swap u and v\nvar tt=u;u=v;v=tt;}}//Allocate buffer and vertex array\nvar buffer=createBuffer(gl,new Float32Array(vertices));var elements=createBuffer(gl,new Uint16Array(indices),gl.ELEMENT_ARRAY_BUFFER);var vao=createVAO(gl,[{buffer:buffer,type:gl.FLOAT,size:3,offset:0,stride:24},{buffer:buffer,type:gl.FLOAT,size:3,offset:12,stride:24}],elements);//Create shader object\nvar shader=createShader(gl);shader.attributes.position.location=0;shader.attributes.normal.location=1;return new BackgroundCube(gl,buffer,vao,shader);}},{\"./shaders\":89,\"gl-buffer\":93,\"gl-vao\":146}],87:[function(_dereq_,module,exports){\"use strict\";module.exports=getCubeEdges;var bits=_dereq_('bit-twiddle');var multiply=_dereq_('gl-mat4/multiply');var splitPoly=_dereq_('split-polygon');var orient=_dereq_('robust-orientation');var mvp=new Array(16);var pCubeVerts=new Array(8);var cubeVerts=new Array(8);var x=new Array(3);var zero3=[0,0,0];(function(){for(var i=0;i<8;++i){pCubeVerts[i]=[1,1,1,1];cubeVerts[i]=[1,1,1];}})();function transformHg(result,x,mat){for(var i=0;i<4;++i){result[i]=mat[12+i];for(var j=0;j<3;++j){result[i]+=x[j]*mat[4*j+i];}}}var FRUSTUM_PLANES=[[0,0,1,0,0],[0,0,-1,1,0],[0,-1,0,1,0],[0,1,0,1,0],[-1,0,0,1,0],[1,0,0,1,0]];function polygonArea(p){for(var i=0;i<FRUSTUM_PLANES.length;++i){p=splitPoly.positive(p,FRUSTUM_PLANES[i]);if(p.length<3){return 0;}}var base=p[0];var ax=base[0]/base[3];var ay=base[1]/base[3];var area=0.0;for(var i=1;i+1<p.length;++i){var b=p[i];var c=p[i+1];var bx=b[0]/b[3];var by=b[1]/b[3];var cx=c[0]/c[3];var cy=c[1]/c[3];var ux=bx-ax;var uy=by-ay;var vx=cx-ax;var vy=cy-ay;area+=Math.abs(ux*vy-uy*vx);}return area;}var CUBE_EDGES=[1,1,1];var CUBE_AXIS=[0,0,0];var CUBE_RESULT={cubeEdges:CUBE_EDGES,axis:CUBE_AXIS};function getCubeEdges(model,view,projection,bounds){//Concatenate matrices\nmultiply(mvp,view,model);multiply(mvp,projection,mvp);//First project cube vertices\nvar ptr=0;for(var i=0;i<2;++i){x[2]=bounds[i][2];for(var j=0;j<2;++j){x[1]=bounds[j][1];for(var k=0;k<2;++k){x[0]=bounds[k][0];transformHg(pCubeVerts[ptr],x,mvp);ptr+=1;}}}//Classify camera against cube faces\nvar closest=-1;for(var i=0;i<8;++i){var w=pCubeVerts[i][3];for(var l=0;l<3;++l){cubeVerts[i][l]=pCubeVerts[i][l]/w;}if(w<0){if(closest<0){closest=i;}else if(cubeVerts[i][2]<cubeVerts[closest][2]){closest=i;}}}if(closest<0){closest=0;for(var d=0;d<3;++d){var u=(d+2)%3;var v=(d+1)%3;var o0=-1;var o1=-1;for(var s=0;s<2;++s){var f0=s<<d;var f1=f0+(s<<u)+(1-s<<v);var f2=f0+(1-s<<u)+(s<<v);if(orient(cubeVerts[f0],cubeVerts[f1],cubeVerts[f2],zero3)<0){continue;}if(s){o0=1;}else{o1=1;}}if(o0<0||o1<0){if(o1>o0){closest|=1<<d;}continue;}for(var s=0;s<2;++s){var f0=s<<d;var f1=f0+(s<<u)+(1-s<<v);var f2=f0+(1-s<<u)+(s<<v);var o=polygonArea([pCubeVerts[f0],pCubeVerts[f1],pCubeVerts[f2],pCubeVerts[f0+(1<<u)+(1<<v)]]);if(s){o0=o;}else{o1=o;}}if(o1>o0){closest|=1<<d;continue;}}}var farthest=7^closest;//Find lowest vertex which is not closest closest\nvar bottom=-1;for(var i=0;i<8;++i){if(i===closest||i===farthest){continue;}if(bottom<0){bottom=i;}else if(cubeVerts[bottom][1]>cubeVerts[i][1]){bottom=i;}}//Find left/right neighbors of bottom vertex\nvar left=-1;for(var i=0;i<3;++i){var idx=bottom^1<<i;if(idx===closest||idx===farthest){continue;}if(left<0){left=idx;}var v=cubeVerts[idx];if(v[0]<cubeVerts[left][0]){left=idx;}}var right=-1;for(var i=0;i<3;++i){var idx=bottom^1<<i;if(idx===closest||idx===farthest||idx===left){continue;}if(right<0){right=idx;}var v=cubeVerts[idx];if(v[0]>cubeVerts[right][0]){right=idx;}}//Determine edge axis coordinates\nvar cubeEdges=CUBE_EDGES;cubeEdges[0]=cubeEdges[1]=cubeEdges[2]=0;cubeEdges[bits.log2(left^bottom)]=bottom&left;cubeEdges[bits.log2(bottom^right)]=bottom&right;var top=right^7;if(top===closest||top===farthest){top=left^7;cubeEdges[bits.log2(right^top)]=top&right;}else{cubeEdges[bits.log2(left^top)]=top&left;}//Determine visible faces\nvar axis=CUBE_AXIS;var cutCorner=closest;for(var d=0;d<3;++d){if(cutCorner&1<<d){axis[d]=-1;}else{axis[d]=1;}}//Return result\nreturn CUBE_RESULT;}},{\"bit-twiddle\":32,\"gl-mat4/multiply\":113,\"robust-orientation\":245,\"split-polygon\":261}],88:[function(_dereq_,module,exports){'use strict';module.exports=createLines;var createBuffer=_dereq_('gl-buffer');var createVAO=_dereq_('gl-vao');var createShader=_dereq_('./shaders').line;var MAJOR_AXIS=[0,0,0];var MINOR_AXIS=[0,0,0];var SCREEN_AXIS=[0,0,0];var OFFSET_VEC=[0,0,0];var SHAPE=[1,1];function zeroVec(a){a[0]=a[1]=a[2]=0;return a;}function copyVec(a,b){a[0]=b[0];a[1]=b[1];a[2]=b[2];return a;}function Lines(gl,vertBuffer,vao,shader,tickCount,tickOffset,gridCount,gridOffset){this.gl=gl;this.vertBuffer=vertBuffer;this.vao=vao;this.shader=shader;this.tickCount=tickCount;this.tickOffset=tickOffset;this.gridCount=gridCount;this.gridOffset=gridOffset;}var proto=Lines.prototype;proto.bind=function(model,view,projection){this.shader.bind();this.shader.uniforms.model=model;this.shader.uniforms.view=view;this.shader.uniforms.projection=projection;SHAPE[0]=this.gl.drawingBufferWidth;SHAPE[1]=this.gl.drawingBufferHeight;this.shader.uniforms.screenShape=SHAPE;this.vao.bind();};proto.unbind=function(){this.vao.unbind();};proto.drawAxisLine=function(j,bounds,offset,color,lineWidth){var minorAxis=zeroVec(MINOR_AXIS);this.shader.uniforms.majorAxis=MINOR_AXIS;minorAxis[j]=bounds[1][j]-bounds[0][j];this.shader.uniforms.minorAxis=minorAxis;var noffset=copyVec(OFFSET_VEC,offset);noffset[j]+=bounds[0][j];this.shader.uniforms.offset=noffset;this.shader.uniforms.lineWidth=lineWidth;this.shader.uniforms.color=color;var screenAxis=zeroVec(SCREEN_AXIS);screenAxis[(j+2)%3]=1;this.shader.uniforms.screenAxis=screenAxis;this.vao.draw(this.gl.TRIANGLES,6);var screenAxis=zeroVec(SCREEN_AXIS);screenAxis[(j+1)%3]=1;this.shader.uniforms.screenAxis=screenAxis;this.vao.draw(this.gl.TRIANGLES,6);};proto.drawAxisTicks=function(j,offset,minorAxis,color,lineWidth){if(!this.tickCount[j]){return;}var majorAxis=zeroVec(MAJOR_AXIS);majorAxis[j]=1;this.shader.uniforms.majorAxis=majorAxis;this.shader.uniforms.offset=offset;this.shader.uniforms.minorAxis=minorAxis;this.shader.uniforms.color=color;this.shader.uniforms.lineWidth=lineWidth;var screenAxis=zeroVec(SCREEN_AXIS);screenAxis[j]=1;this.shader.uniforms.screenAxis=screenAxis;this.vao.draw(this.gl.TRIANGLES,this.tickCount[j],this.tickOffset[j]);};proto.drawGrid=function(i,j,bounds,offset,color,lineWidth){if(!this.gridCount[i]){return;}var minorAxis=zeroVec(MINOR_AXIS);minorAxis[j]=bounds[1][j]-bounds[0][j];this.shader.uniforms.minorAxis=minorAxis;var noffset=copyVec(OFFSET_VEC,offset);noffset[j]+=bounds[0][j];this.shader.uniforms.offset=noffset;var majorAxis=zeroVec(MAJOR_AXIS);majorAxis[i]=1;this.shader.uniforms.majorAxis=majorAxis;var screenAxis=zeroVec(SCREEN_AXIS);screenAxis[i]=1;this.shader.uniforms.screenAxis=screenAxis;this.shader.uniforms.lineWidth=lineWidth;this.shader.uniforms.color=color;this.vao.draw(this.gl.TRIANGLES,this.gridCount[i],this.gridOffset[i]);};proto.drawZero=function(j,i,bounds,offset,color,lineWidth){var minorAxis=zeroVec(MINOR_AXIS);this.shader.uniforms.majorAxis=minorAxis;minorAxis[j]=bounds[1][j]-bounds[0][j];this.shader.uniforms.minorAxis=minorAxis;var noffset=copyVec(OFFSET_VEC,offset);noffset[j]+=bounds[0][j];this.shader.uniforms.offset=noffset;var screenAxis=zeroVec(SCREEN_AXIS);screenAxis[i]=1;this.shader.uniforms.screenAxis=screenAxis;this.shader.uniforms.lineWidth=lineWidth;this.shader.uniforms.color=color;this.vao.draw(this.gl.TRIANGLES,6);};proto.dispose=function(){this.vao.dispose();this.vertBuffer.dispose();this.shader.dispose();};function createLines(gl,bounds,ticks){var vertices=[];var tickOffset=[0,0,0];var tickCount=[0,0,0];//Create grid lines for each axis/direction\nvar gridOffset=[0,0,0];var gridCount=[0,0,0];//Add zero line\nvertices.push(0,0,1,0,1,1,0,0,-1,0,0,-1,0,1,1,0,1,-1);for(var i=0;i<3;++i){//Axis tick marks\nvar start=vertices.length/3|0;for(var j=0;j<ticks[i].length;++j){var x=+ticks[i][j].x;vertices.push(x,0,1,x,1,1,x,0,-1,x,0,-1,x,1,1,x,1,-1);}var end=vertices.length/3|0;tickOffset[i]=start;tickCount[i]=end-start;//Grid lines\nvar start=vertices.length/3|0;for(var k=0;k<ticks[i].length;++k){var x=+ticks[i][k].x;vertices.push(x,0,1,x,1,1,x,0,-1,x,0,-1,x,1,1,x,1,-1);}var end=vertices.length/3|0;gridOffset[i]=start;gridCount[i]=end-start;}//Create cube VAO\nvar vertBuf=createBuffer(gl,new Float32Array(vertices));var vao=createVAO(gl,[{\"buffer\":vertBuf,\"type\":gl.FLOAT,\"size\":3,\"stride\":0,\"offset\":0}]);var shader=createShader(gl);shader.attributes.position.location=0;return new Lines(gl,vertBuf,vao,shader,tickCount,tickOffset,gridCount,gridOffset);}},{\"./shaders\":89,\"gl-buffer\":93,\"gl-vao\":146}],89:[function(_dereq_,module,exports){'use strict';var glslify=_dereq_('glslify');var createShader=_dereq_('gl-shader');var lineVert=glslify([\"#define GLSLIFY 1\\nattribute vec3 position;\\n\\nuniform mat4 model, view, projection;\\nuniform vec3 offset, majorAxis, minorAxis, screenAxis;\\nuniform float lineWidth;\\nuniform vec2 screenShape;\\n\\nvec3 project(vec3 p) {\\n  vec4 pp = projection * view * model * vec4(p, 1.0);\\n  return pp.xyz / max(pp.w, 0.0001);\\n}\\n\\nvoid main() {\\n  vec3 major = position.x * majorAxis;\\n  vec3 minor = position.y * minorAxis;\\n\\n  vec3 vPosition = major + minor + offset;\\n  vec3 pPosition = project(vPosition);\\n  vec3 offset = project(vPosition + screenAxis * position.z);\\n\\n  vec2 screen = normalize((offset - pPosition).xy * screenShape) / screenShape;\\n\\n  gl_Position = vec4(pPosition + vec3(0.5 * screen * lineWidth, 0), 1.0);\\n}\\n\"]);var lineFrag=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\nuniform vec4 color;\\nvoid main() {\\n  gl_FragColor = color;\\n}\"]);exports.line=function(gl){return createShader(gl,lineVert,lineFrag,null,[{name:'position',type:'vec3'}]);};var textVert=glslify([\"#define GLSLIFY 1\\nattribute vec3 position;\\n\\nuniform mat4 model, view, projection;\\nuniform vec3 offset, axis, alignDir, alignOpt;\\nuniform float scale, angle, pixelScale;\\nuniform vec2 resolution;\\n\\nvec3 project(vec3 p) {\\n  vec4 pp = projection * view * model * vec4(p, 1.0);\\n  return pp.xyz / max(pp.w, 0.0001);\\n}\\n\\nfloat computeViewAngle(vec3 a, vec3 b) {\\n  vec3 A = project(a);\\n  vec3 B = project(b);\\n\\n  return atan(\\n    (B.y - A.y) * resolution.y,\\n    (B.x - A.x) * resolution.x\\n  );\\n}\\n\\nconst float PI = 3.141592;\\nconst float TWO_PI = 2.0 * PI;\\nconst float HALF_PI = 0.5 * PI;\\nconst float ONE_AND_HALF_PI = 1.5 * PI;\\n\\nint option = int(floor(alignOpt.x + 0.001));\\nfloat hv_ratio =       alignOpt.y;\\nbool enableAlign =    (alignOpt.z != 0.0);\\n\\nfloat mod_angle(float a) {\\n  return mod(a, PI);\\n}\\n\\nfloat positive_angle(float a) {\\n  return mod_angle((a < 0.0) ?\\n    a + TWO_PI :\\n    a\\n  );\\n}\\n\\nfloat look_upwards(float a) {\\n  float b = positive_angle(a);\\n  return ((b > HALF_PI) && (b <= ONE_AND_HALF_PI)) ?\\n    b - PI :\\n    b;\\n}\\n\\nfloat look_horizontal_or_vertical(float a, float ratio) {\\n  // ratio controls the ratio between being horizontal to (vertical + horizontal)\\n  // if ratio is set to 0.5 then it is 50%, 50%.\\n  // when using a higher ratio e.g. 0.75 the result would\\n  // likely be more horizontal than vertical.\\n\\n  float b = positive_angle(a);\\n\\n  return\\n    (b < (      ratio) * HALF_PI) ? 0.0 :\\n    (b < (2.0 - ratio) * HALF_PI) ? -HALF_PI :\\n    (b < (2.0 + ratio) * HALF_PI) ? 0.0 :\\n    (b < (4.0 - ratio) * HALF_PI) ? HALF_PI :\\n                                    0.0;\\n}\\n\\nfloat roundTo(float a, float b) {\\n  return float(b * floor((a + 0.5 * b) / b));\\n}\\n\\nfloat look_round_n_directions(float a, int n) {\\n  float b = positive_angle(a);\\n  float div = TWO_PI / float(n);\\n  float c = roundTo(b, div);\\n  return look_upwards(c);\\n}\\n\\nfloat applyAlignOption(float rawAngle, float delta) {\\n  return\\n    (option >  2) ? look_round_n_directions(rawAngle + delta, option) :       // option 3-n: round to n directions\\n    (option == 2) ? look_horizontal_or_vertical(rawAngle + delta, hv_ratio) : // horizontal or vertical\\n    (option == 1) ? rawAngle + delta :       // use free angle, and flip to align with one direction of the axis\\n    (option == 0) ? look_upwards(rawAngle) : // use free angle, and stay upwards\\n    (option ==-1) ? 0.0 :                    // useful for backward compatibility, all texts remains horizontal\\n                    rawAngle;                // otherwise return back raw input angle\\n}\\n\\nbool isAxisTitle = (axis.x == 0.0) &&\\n                   (axis.y == 0.0) &&\\n                   (axis.z == 0.0);\\n\\nvoid main() {\\n  //Compute world offset\\n  float axisDistance = position.z;\\n  vec3 dataPosition = axisDistance * axis + offset;\\n\\n  float beta = angle; // i.e. user defined attributes for each tick\\n\\n  float axisAngle;\\n  float clipAngle;\\n  float flip;\\n\\n  if (enableAlign) {\\n    axisAngle = (isAxisTitle) ? HALF_PI :\\n                      computeViewAngle(dataPosition, dataPosition + axis);\\n    clipAngle = computeViewAngle(dataPosition, dataPosition + alignDir);\\n\\n    axisAngle += (sin(axisAngle) < 0.0) ? PI : 0.0;\\n    clipAngle += (sin(clipAngle) < 0.0) ? PI : 0.0;\\n\\n    flip = (dot(vec2(cos(axisAngle), sin(axisAngle)),\\n                vec2(sin(clipAngle),-cos(clipAngle))) > 0.0) ? 1.0 : 0.0;\\n\\n    beta += applyAlignOption(clipAngle, flip * PI);\\n  }\\n\\n  //Compute plane offset\\n  vec2 planeCoord = position.xy * pixelScale;\\n\\n  mat2 planeXform = scale * mat2(\\n     cos(beta), sin(beta),\\n    -sin(beta), cos(beta)\\n  );\\n\\n  vec2 viewOffset = 2.0 * planeXform * planeCoord / resolution;\\n\\n  //Compute clip position\\n  vec3 clipPosition = project(dataPosition);\\n\\n  //Apply text offset in clip coordinates\\n  clipPosition += vec3(viewOffset, 0.0);\\n\\n  //Done\\n  gl_Position = vec4(clipPosition, 1.0);\\n}\"]);var textFrag=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\nuniform vec4 color;\\nvoid main() {\\n  gl_FragColor = color;\\n}\"]);exports.text=function(gl){return createShader(gl,textVert,textFrag,null,[{name:'position',type:'vec3'}]);};var bgVert=glslify([\"#define GLSLIFY 1\\nattribute vec3 position;\\nattribute vec3 normal;\\n\\nuniform mat4 model, view, projection;\\nuniform vec3 enable;\\nuniform vec3 bounds[2];\\n\\nvarying vec3 colorChannel;\\n\\nvoid main() {\\n\\n  vec3 signAxis = sign(bounds[1] - bounds[0]);\\n\\n  vec3 realNormal = signAxis * normal;\\n\\n  if(dot(realNormal, enable) > 0.0) {\\n    vec3 minRange = min(bounds[0], bounds[1]);\\n    vec3 maxRange = max(bounds[0], bounds[1]);\\n    vec3 nPosition = mix(minRange, maxRange, 0.5 * (position + 1.0));\\n    gl_Position = projection * view * model * vec4(nPosition, 1.0);\\n  } else {\\n    gl_Position = vec4(0,0,0,0);\\n  }\\n\\n  colorChannel = abs(realNormal);\\n}\"]);var bgFrag=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform vec4 colors[3];\\n\\nvarying vec3 colorChannel;\\n\\nvoid main() {\\n  gl_FragColor = colorChannel.x * colors[0] +\\n                 colorChannel.y * colors[1] +\\n                 colorChannel.z * colors[2];\\n}\"]);exports.bg=function(gl){return createShader(gl,bgVert,bgFrag,null,[{name:'position',type:'vec3'},{name:'normal',type:'vec3'}]);};},{\"gl-shader\":133,\"glslify\":162}],90:[function(_dereq_,module,exports){(function(process){\"use strict\";module.exports=createTextSprites;var createBuffer=_dereq_('gl-buffer');var createVAO=_dereq_('gl-vao');var vectorizeText=_dereq_('vectorize-text');var createShader=_dereq_('./shaders').text;var globals=window||process.global||{};var __TEXT_CACHE=globals.__TEXT_CACHE||{};globals.__TEXT_CACHE={};//Vertex buffer format for text is:\n//\n/// [x,y,z] = Spatial coordinate\n//\nvar VERTEX_SIZE=3;function TextSprites(gl,shader,buffer,vao){this.gl=gl;this.shader=shader;this.buffer=buffer;this.vao=vao;this.tickOffset=this.tickCount=this.labelOffset=this.labelCount=null;}var proto=TextSprites.prototype;//Bind textures for rendering\nvar SHAPE=[0,0];proto.bind=function(model,view,projection,pixelScale){this.vao.bind();this.shader.bind();var uniforms=this.shader.uniforms;uniforms.model=model;uniforms.view=view;uniforms.projection=projection;uniforms.pixelScale=pixelScale;SHAPE[0]=this.gl.drawingBufferWidth;SHAPE[1]=this.gl.drawingBufferHeight;this.shader.uniforms.resolution=SHAPE;};proto.unbind=function(){this.vao.unbind();};proto.update=function(bounds,labels,labelFont,ticks,tickFont){var data=[];function addItem(t,text,font,size,lineSpacing,styletags){var fontcache=__TEXT_CACHE[font];if(!fontcache){fontcache=__TEXT_CACHE[font]={};}var mesh=fontcache[text];if(!mesh){mesh=fontcache[text]=tryVectorizeText(text,{triangles:true,font:font,textAlign:'center',textBaseline:'middle',lineSpacing:lineSpacing,styletags:styletags});}var scale=(size||12)/12;var positions=mesh.positions;var cells=mesh.cells;for(var i=0,nc=cells.length;i<nc;++i){var c=cells[i];for(var j=2;j>=0;--j){var p=positions[c[j]];data.push(scale*p[0],-scale*p[1],t);}}}//Generate sprites for all 3 axes, store data in texture atlases\nvar tickOffset=[0,0,0];var tickCount=[0,0,0];var labelOffset=[0,0,0];var labelCount=[0,0,0];var lineSpacing=1.25;var styletags={breaklines:true,bolds:true,italics:true,subscripts:true,superscripts:true};for(var d=0;d<3;++d){//Generate label\nlabelOffset[d]=data.length/VERTEX_SIZE|0;addItem(0.5*(bounds[0][d]+bounds[1][d]),labels[d],labelFont[d],12,// labelFontSize\nlineSpacing,styletags);labelCount[d]=(data.length/VERTEX_SIZE|0)-labelOffset[d];//Generate sprites for tick marks\ntickOffset[d]=data.length/VERTEX_SIZE|0;for(var i=0;i<ticks[d].length;++i){if(!ticks[d][i].text){continue;}addItem(ticks[d][i].x,ticks[d][i].text,ticks[d][i].font||tickFont,ticks[d][i].fontSize||12,lineSpacing,styletags);}tickCount[d]=(data.length/VERTEX_SIZE|0)-tickOffset[d];}this.buffer.update(data);this.tickOffset=tickOffset;this.tickCount=tickCount;this.labelOffset=labelOffset;this.labelCount=labelCount;};//Draws the tick marks for an axis\nproto.drawTicks=function(d,scale,angle,offset,color,axis,alignDir,alignOpt){if(!this.tickCount[d]){return;}this.shader.uniforms.axis=axis;this.shader.uniforms.color=color;this.shader.uniforms.angle=angle;this.shader.uniforms.scale=scale;this.shader.uniforms.offset=offset;this.shader.uniforms.alignDir=alignDir;this.shader.uniforms.alignOpt=alignOpt;this.vao.draw(this.gl.TRIANGLES,this.tickCount[d],this.tickOffset[d]);};//Draws the text label for an axis\nproto.drawLabel=function(d,scale,angle,offset,color,axis,alignDir,alignOpt){if(!this.labelCount[d]){return;}this.shader.uniforms.axis=axis;this.shader.uniforms.color=color;this.shader.uniforms.angle=angle;this.shader.uniforms.scale=scale;this.shader.uniforms.offset=offset;this.shader.uniforms.alignDir=alignDir;this.shader.uniforms.alignOpt=alignOpt;this.vao.draw(this.gl.TRIANGLES,this.labelCount[d],this.labelOffset[d]);};//Releases all resources attached to this object\nproto.dispose=function(){this.shader.dispose();this.vao.dispose();this.buffer.dispose();};function tryVectorizeText(text,options){try{return vectorizeText(text,options);}catch(e){console.warn('error vectorizing text:\"'+text+'\" error:',e);return{cells:[],positions:[]};}}function createTextSprites(gl,bounds,labels,labelFont,ticks,tickFont){var buffer=createBuffer(gl);var vao=createVAO(gl,[{\"buffer\":buffer,\"size\":3}]);var shader=createShader(gl);shader.attributes.position.location=0;var result=new TextSprites(gl,shader,buffer,vao);result.update(bounds,labels,labelFont,ticks,tickFont);return result;}}).call(this,_dereq_('_process'));},{\"./shaders\":89,\"_process\":232,\"gl-buffer\":93,\"gl-vao\":146,\"vectorize-text\":273}],91:[function(_dereq_,module,exports){'use strict';exports.create=defaultTicks;exports.equal=ticksEqual;function prettyPrint(spacing,i){var stepStr=spacing+\"\";var u=stepStr.indexOf(\".\");var sigFigs=0;if(u>=0){sigFigs=stepStr.length-u-1;}var shift=Math.pow(10,sigFigs);var x=Math.round(spacing*i*shift);var xstr=x+\"\";if(xstr.indexOf(\"e\")>=0){return xstr;}var xi=x/shift,xf=x%shift;if(x<0){xi=-Math.ceil(xi)|0;xf=-xf|0;}else{xi=Math.floor(xi)|0;xf=xf|0;}var xis=\"\"+xi;if(x<0){xis=\"-\"+xis;}if(sigFigs){var xs=\"\"+xf;while(xs.length<sigFigs){xs=\"0\"+xs;}return xis+\".\"+xs;}else{return xis;}}function defaultTicks(bounds,tickSpacing){var array=[];for(var d=0;d<3;++d){var ticks=[];var m=0.5*(bounds[0][d]+bounds[1][d]);for(var t=0;t*tickSpacing[d]<=bounds[1][d];++t){ticks.push({x:t*tickSpacing[d],text:prettyPrint(tickSpacing[d],t)});}for(var t=-1;t*tickSpacing[d]>=bounds[0][d];--t){ticks.push({x:t*tickSpacing[d],text:prettyPrint(tickSpacing[d],t)});}array.push(ticks);}return array;}function ticksEqual(ticksA,ticksB){for(var i=0;i<3;++i){if(ticksA[i].length!==ticksB[i].length){return false;}for(var j=0;j<ticksA[i].length;++j){var a=ticksA[i][j];var b=ticksB[i][j];if(a.x!==b.x||a.text!==b.text||a.font!==b.font||a.fontColor!==b.fontColor||a.fontSize!==b.fontSize||a.dx!==b.dx||a.dy!==b.dy){return false;}}}return true;}},{}],92:[function(_dereq_,module,exports){\"use strict\";module.exports=axesProperties;var getPlanes=_dereq_(\"extract-frustum-planes\");var splitPoly=_dereq_(\"split-polygon\");var cubeParams=_dereq_(\"./lib/cube.js\");var m4mul=_dereq_(\"gl-mat4/multiply\");var m4transpose=_dereq_(\"gl-mat4/transpose\");var v4transformMat4=_dereq_(\"gl-vec4/transformMat4\");var identity=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);var mvp=new Float32Array(16);function AxesRange3D(lo,hi,pixelsPerDataUnit){this.lo=lo;this.hi=hi;this.pixelsPerDataUnit=pixelsPerDataUnit;}var SCRATCH_P=[0,0,0,1];var SCRATCH_Q=[0,0,0,1];function gradient(result,M,v,width,height){for(var i=0;i<3;++i){var p=SCRATCH_P;var q=SCRATCH_Q;for(var j=0;j<3;++j){q[j]=p[j]=v[j];}q[3]=p[3]=1;q[i]+=1;v4transformMat4(q,q,M);if(q[3]<0){result[i]=Infinity;}p[i]-=1;v4transformMat4(p,p,M);if(p[3]<0){result[i]=Infinity;}var dx=(p[0]/p[3]-q[0]/q[3])*width;var dy=(p[1]/p[3]-q[1]/q[3])*height;result[i]=0.25*Math.sqrt(dx*dx+dy*dy);}return result;}var RANGES=[new AxesRange3D(Infinity,-Infinity,Infinity),new AxesRange3D(Infinity,-Infinity,Infinity),new AxesRange3D(Infinity,-Infinity,Infinity)];var SCRATCH_X=[0,0,0];function axesProperties(axes,camera,width,height,params){var model=camera.model||identity;var view=camera.view||identity;var projection=camera.projection||identity;var bounds=axes.bounds;var params=params||cubeParams(model,view,projection,bounds);var axis=params.axis;var edges=params.edges;m4mul(mvp,view,model);m4mul(mvp,projection,mvp);//Calculate the following properties for each axis:\n//\n// * lo - start of visible range for each axis in tick coordinates\n// * hi - end of visible range for each axis in tick coordinates\n// * ticksPerPixel - pixel density of tick marks for the axis\n//\nvar ranges=RANGES;for(var i=0;i<3;++i){ranges[i].lo=Infinity;ranges[i].hi=-Infinity;ranges[i].pixelsPerDataUnit=Infinity;}//Compute frustum planes, intersect with box\nvar frustum=getPlanes(m4transpose(mvp,mvp));m4transpose(mvp,mvp);//Loop over vertices of viewable box\nfor(var d=0;d<3;++d){var u=(d+1)%3;var v=(d+2)%3;var x=SCRATCH_X;i_loop:for(var i=0;i<2;++i){var poly=[];if(axis[d]<0===!!i){continue;}x[d]=bounds[i][d];for(var j=0;j<2;++j){x[u]=bounds[j^i][u];for(var k=0;k<2;++k){x[v]=bounds[k^j^i][v];poly.push(x.slice());}}for(var j=4;j===4;++j){// Note: using only near plane here.\nif(poly.length===0){continue i_loop;}poly=splitPoly.positive(poly,frustum[j]);}//Loop over vertices of polygon to find extremal points\nfor(var j=0;j<poly.length;++j){var v=poly[j];var grad=gradient(SCRATCH_X,mvp,v,width,height);for(var k=0;k<3;++k){ranges[k].lo=Math.min(ranges[k].lo,v[k]);ranges[k].hi=Math.max(ranges[k].hi,v[k]);if(k!==d){ranges[k].pixelsPerDataUnit=Math.min(ranges[k].pixelsPerDataUnit,Math.abs(grad[k]));}}}}}return ranges;}},{\"./lib/cube.js\":87,\"extract-frustum-planes\":79,\"gl-mat4/multiply\":113,\"gl-mat4/transpose\":121,\"gl-vec4/transformMat4\":152,\"split-polygon\":261}],93:[function(_dereq_,module,exports){\"use strict\";var pool=_dereq_(\"typedarray-pool\");var ops=_dereq_(\"ndarray-ops\");var ndarray=_dereq_(\"ndarray\");var SUPPORTED_TYPES=[\"uint8\",\"uint8_clamped\",\"uint16\",\"uint32\",\"int8\",\"int16\",\"int32\",\"float32\"];function GLBuffer(gl,type,handle,length,usage){this.gl=gl;this.type=type;this.handle=handle;this.length=length;this.usage=usage;}var proto=GLBuffer.prototype;proto.bind=function(){this.gl.bindBuffer(this.type,this.handle);};proto.unbind=function(){this.gl.bindBuffer(this.type,null);};proto.dispose=function(){this.gl.deleteBuffer(this.handle);};function updateTypeArray(gl,type,len,usage,data,offset){var dataLen=data.length*data.BYTES_PER_ELEMENT;if(offset<0){gl.bufferData(type,data,usage);return dataLen;}if(dataLen+offset>len){throw new Error(\"gl-buffer: If resizing buffer, must not specify offset\");}gl.bufferSubData(type,offset,data);return len;}function makeScratchTypeArray(array,dtype){var res=pool.malloc(array.length,dtype);var n=array.length;for(var i=0;i<n;++i){res[i]=array[i];}return res;}function isPacked(shape,stride){var n=1;for(var i=stride.length-1;i>=0;--i){if(stride[i]!==n){return false;}n*=shape[i];}return true;}proto.update=function(array,offset){if(typeof offset!==\"number\"){offset=-1;}this.bind();if(_typeof(array)===\"object\"&&typeof array.shape!==\"undefined\"){//ndarray\nvar dtype=array.dtype;if(SUPPORTED_TYPES.indexOf(dtype)<0){dtype=\"float32\";}if(this.type===this.gl.ELEMENT_ARRAY_BUFFER){var ext=gl.getExtension('OES_element_index_uint');if(ext&&dtype!==\"uint16\"){dtype=\"uint32\";}else{dtype=\"uint16\";}}if(dtype===array.dtype&&isPacked(array.shape,array.stride)){if(array.offset===0&&array.data.length===array.shape[0]){this.length=updateTypeArray(this.gl,this.type,this.length,this.usage,array.data,offset);}else{this.length=updateTypeArray(this.gl,this.type,this.length,this.usage,array.data.subarray(array.offset,array.shape[0]),offset);}}else{var tmp=pool.malloc(array.size,dtype);var ndt=ndarray(tmp,array.shape);ops.assign(ndt,array);if(offset<0){this.length=updateTypeArray(this.gl,this.type,this.length,this.usage,tmp,offset);}else{this.length=updateTypeArray(this.gl,this.type,this.length,this.usage,tmp.subarray(0,array.size),offset);}pool.free(tmp);}}else if(Array.isArray(array)){//Vanilla array\nvar t;if(this.type===this.gl.ELEMENT_ARRAY_BUFFER){t=makeScratchTypeArray(array,\"uint16\");}else{t=makeScratchTypeArray(array,\"float32\");}if(offset<0){this.length=updateTypeArray(this.gl,this.type,this.length,this.usage,t,offset);}else{this.length=updateTypeArray(this.gl,this.type,this.length,this.usage,t.subarray(0,array.length),offset);}pool.free(t);}else if(_typeof(array)===\"object\"&&typeof array.length===\"number\"){//Typed array\nthis.length=updateTypeArray(this.gl,this.type,this.length,this.usage,array,offset);}else if(typeof array===\"number\"||array===undefined){//Number/default\nif(offset>=0){throw new Error(\"gl-buffer: Cannot specify offset when resizing buffer\");}array=array|0;if(array<=0){array=1;}this.gl.bufferData(this.type,array|0,this.usage);this.length=array;}else{//Error, case should not happen\nthrow new Error(\"gl-buffer: Invalid data type\");}};function createBuffer(gl,data,type,usage){type=type||gl.ARRAY_BUFFER;usage=usage||gl.DYNAMIC_DRAW;if(type!==gl.ARRAY_BUFFER&&type!==gl.ELEMENT_ARRAY_BUFFER){throw new Error(\"gl-buffer: Invalid type for webgl buffer, must be either gl.ARRAY_BUFFER or gl.ELEMENT_ARRAY_BUFFER\");}if(usage!==gl.DYNAMIC_DRAW&&usage!==gl.STATIC_DRAW&&usage!==gl.STREAM_DRAW){throw new Error(\"gl-buffer: Invalid usage for buffer, must be either gl.DYNAMIC_DRAW, gl.STATIC_DRAW or gl.STREAM_DRAW\");}var handle=gl.createBuffer();var result=new GLBuffer(gl,type,handle,0,usage);result.update(data);return result;}module.exports=createBuffer;},{\"ndarray\":192,\"ndarray-ops\":189,\"typedarray-pool\":270}],94:[function(_dereq_,module,exports){module.exports={0:'NONE',1:'ONE',2:'LINE_LOOP',3:'LINE_STRIP',4:'TRIANGLES',5:'TRIANGLE_STRIP',6:'TRIANGLE_FAN',256:'DEPTH_BUFFER_BIT',512:'NEVER',513:'LESS',514:'EQUAL',515:'LEQUAL',516:'GREATER',517:'NOTEQUAL',518:'GEQUAL',519:'ALWAYS',768:'SRC_COLOR',769:'ONE_MINUS_SRC_COLOR',770:'SRC_ALPHA',771:'ONE_MINUS_SRC_ALPHA',772:'DST_ALPHA',773:'ONE_MINUS_DST_ALPHA',774:'DST_COLOR',775:'ONE_MINUS_DST_COLOR',776:'SRC_ALPHA_SATURATE',1024:'STENCIL_BUFFER_BIT',1028:'FRONT',1029:'BACK',1032:'FRONT_AND_BACK',1280:'INVALID_ENUM',1281:'INVALID_VALUE',1282:'INVALID_OPERATION',1285:'OUT_OF_MEMORY',1286:'INVALID_FRAMEBUFFER_OPERATION',2304:'CW',2305:'CCW',2849:'LINE_WIDTH',2884:'CULL_FACE',2885:'CULL_FACE_MODE',2886:'FRONT_FACE',2928:'DEPTH_RANGE',2929:'DEPTH_TEST',2930:'DEPTH_WRITEMASK',2931:'DEPTH_CLEAR_VALUE',2932:'DEPTH_FUNC',2960:'STENCIL_TEST',2961:'STENCIL_CLEAR_VALUE',2962:'STENCIL_FUNC',2963:'STENCIL_VALUE_MASK',2964:'STENCIL_FAIL',2965:'STENCIL_PASS_DEPTH_FAIL',2966:'STENCIL_PASS_DEPTH_PASS',2967:'STENCIL_REF',2968:'STENCIL_WRITEMASK',2978:'VIEWPORT',3024:'DITHER',3042:'BLEND',3088:'SCISSOR_BOX',3089:'SCISSOR_TEST',3106:'COLOR_CLEAR_VALUE',3107:'COLOR_WRITEMASK',3317:'UNPACK_ALIGNMENT',3333:'PACK_ALIGNMENT',3379:'MAX_TEXTURE_SIZE',3386:'MAX_VIEWPORT_DIMS',3408:'SUBPIXEL_BITS',3410:'RED_BITS',3411:'GREEN_BITS',3412:'BLUE_BITS',3413:'ALPHA_BITS',3414:'DEPTH_BITS',3415:'STENCIL_BITS',3553:'TEXTURE_2D',4352:'DONT_CARE',4353:'FASTEST',4354:'NICEST',5120:'BYTE',5121:'UNSIGNED_BYTE',5122:'SHORT',5123:'UNSIGNED_SHORT',5124:'INT',5125:'UNSIGNED_INT',5126:'FLOAT',5386:'INVERT',5890:'TEXTURE',6401:'STENCIL_INDEX',6402:'DEPTH_COMPONENT',6406:'ALPHA',6407:'RGB',6408:'RGBA',6409:'LUMINANCE',6410:'LUMINANCE_ALPHA',7680:'KEEP',7681:'REPLACE',7682:'INCR',7683:'DECR',7936:'VENDOR',7937:'RENDERER',7938:'VERSION',9728:'NEAREST',9729:'LINEAR',9984:'NEAREST_MIPMAP_NEAREST',9985:'LINEAR_MIPMAP_NEAREST',9986:'NEAREST_MIPMAP_LINEAR',9987:'LINEAR_MIPMAP_LINEAR',10240:'TEXTURE_MAG_FILTER',10241:'TEXTURE_MIN_FILTER',10242:'TEXTURE_WRAP_S',10243:'TEXTURE_WRAP_T',10497:'REPEAT',10752:'POLYGON_OFFSET_UNITS',16384:'COLOR_BUFFER_BIT',32769:'CONSTANT_COLOR',32770:'ONE_MINUS_CONSTANT_COLOR',32771:'CONSTANT_ALPHA',32772:'ONE_MINUS_CONSTANT_ALPHA',32773:'BLEND_COLOR',32774:'FUNC_ADD',32777:'BLEND_EQUATION_RGB',32778:'FUNC_SUBTRACT',32779:'FUNC_REVERSE_SUBTRACT',32819:'UNSIGNED_SHORT_4_4_4_4',32820:'UNSIGNED_SHORT_5_5_5_1',32823:'POLYGON_OFFSET_FILL',32824:'POLYGON_OFFSET_FACTOR',32854:'RGBA4',32855:'RGB5_A1',32873:'TEXTURE_BINDING_2D',32926:'SAMPLE_ALPHA_TO_COVERAGE',32928:'SAMPLE_COVERAGE',32936:'SAMPLE_BUFFERS',32937:'SAMPLES',32938:'SAMPLE_COVERAGE_VALUE',32939:'SAMPLE_COVERAGE_INVERT',32968:'BLEND_DST_RGB',32969:'BLEND_SRC_RGB',32970:'BLEND_DST_ALPHA',32971:'BLEND_SRC_ALPHA',33071:'CLAMP_TO_EDGE',33170:'GENERATE_MIPMAP_HINT',33189:'DEPTH_COMPONENT16',33306:'DEPTH_STENCIL_ATTACHMENT',33635:'UNSIGNED_SHORT_5_6_5',33648:'MIRRORED_REPEAT',33901:'ALIASED_POINT_SIZE_RANGE',33902:'ALIASED_LINE_WIDTH_RANGE',33984:'TEXTURE0',33985:'TEXTURE1',33986:'TEXTURE2',33987:'TEXTURE3',33988:'TEXTURE4',33989:'TEXTURE5',33990:'TEXTURE6',33991:'TEXTURE7',33992:'TEXTURE8',33993:'TEXTURE9',33994:'TEXTURE10',33995:'TEXTURE11',33996:'TEXTURE12',33997:'TEXTURE13',33998:'TEXTURE14',33999:'TEXTURE15',34000:'TEXTURE16',34001:'TEXTURE17',34002:'TEXTURE18',34003:'TEXTURE19',34004:'TEXTURE20',34005:'TEXTURE21',34006:'TEXTURE22',34007:'TEXTURE23',34008:'TEXTURE24',34009:'TEXTURE25',34010:'TEXTURE26',34011:'TEXTURE27',34012:'TEXTURE28',34013:'TEXTURE29',34014:'TEXTURE30',34015:'TEXTURE31',34016:'ACTIVE_TEXTURE',34024:'MAX_RENDERBUFFER_SIZE',34041:'DEPTH_STENCIL',34055:'INCR_WRAP',34056:'DECR_WRAP',34067:'TEXTURE_CUBE_MAP',34068:'TEXTURE_BINDING_CUBE_MAP',34069:'TEXTURE_CUBE_MAP_POSITIVE_X',34070:'TEXTURE_CUBE_MAP_NEGATIVE_X',34071:'TEXTURE_CUBE_MAP_POSITIVE_Y',34072:'TEXTURE_CUBE_MAP_NEGATIVE_Y',34073:'TEXTURE_CUBE_MAP_POSITIVE_Z',34074:'TEXTURE_CUBE_MAP_NEGATIVE_Z',34076:'MAX_CUBE_MAP_TEXTURE_SIZE',34338:'VERTEX_ATTRIB_ARRAY_ENABLED',34339:'VERTEX_ATTRIB_ARRAY_SIZE',34340:'VERTEX_ATTRIB_ARRAY_STRIDE',34341:'VERTEX_ATTRIB_ARRAY_TYPE',34342:'CURRENT_VERTEX_ATTRIB',34373:'VERTEX_ATTRIB_ARRAY_POINTER',34466:'NUM_COMPRESSED_TEXTURE_FORMATS',34467:'COMPRESSED_TEXTURE_FORMATS',34660:'BUFFER_SIZE',34661:'BUFFER_USAGE',34816:'STENCIL_BACK_FUNC',34817:'STENCIL_BACK_FAIL',34818:'STENCIL_BACK_PASS_DEPTH_FAIL',34819:'STENCIL_BACK_PASS_DEPTH_PASS',34877:'BLEND_EQUATION_ALPHA',34921:'MAX_VERTEX_ATTRIBS',34922:'VERTEX_ATTRIB_ARRAY_NORMALIZED',34930:'MAX_TEXTURE_IMAGE_UNITS',34962:'ARRAY_BUFFER',34963:'ELEMENT_ARRAY_BUFFER',34964:'ARRAY_BUFFER_BINDING',34965:'ELEMENT_ARRAY_BUFFER_BINDING',34975:'VERTEX_ATTRIB_ARRAY_BUFFER_BINDING',35040:'STREAM_DRAW',35044:'STATIC_DRAW',35048:'DYNAMIC_DRAW',35632:'FRAGMENT_SHADER',35633:'VERTEX_SHADER',35660:'MAX_VERTEX_TEXTURE_IMAGE_UNITS',35661:'MAX_COMBINED_TEXTURE_IMAGE_UNITS',35663:'SHADER_TYPE',35664:'FLOAT_VEC2',35665:'FLOAT_VEC3',35666:'FLOAT_VEC4',35667:'INT_VEC2',35668:'INT_VEC3',35669:'INT_VEC4',35670:'BOOL',35671:'BOOL_VEC2',35672:'BOOL_VEC3',35673:'BOOL_VEC4',35674:'FLOAT_MAT2',35675:'FLOAT_MAT3',35676:'FLOAT_MAT4',35678:'SAMPLER_2D',35680:'SAMPLER_CUBE',35712:'DELETE_STATUS',35713:'COMPILE_STATUS',35714:'LINK_STATUS',35715:'VALIDATE_STATUS',35716:'INFO_LOG_LENGTH',35717:'ATTACHED_SHADERS',35718:'ACTIVE_UNIFORMS',35719:'ACTIVE_UNIFORM_MAX_LENGTH',35720:'SHADER_SOURCE_LENGTH',35721:'ACTIVE_ATTRIBUTES',35722:'ACTIVE_ATTRIBUTE_MAX_LENGTH',35724:'SHADING_LANGUAGE_VERSION',35725:'CURRENT_PROGRAM',36003:'STENCIL_BACK_REF',36004:'STENCIL_BACK_VALUE_MASK',36005:'STENCIL_BACK_WRITEMASK',36006:'FRAMEBUFFER_BINDING',36007:'RENDERBUFFER_BINDING',36048:'FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE',36049:'FRAMEBUFFER_ATTACHMENT_OBJECT_NAME',36050:'FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL',36051:'FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE',36053:'FRAMEBUFFER_COMPLETE',36054:'FRAMEBUFFER_INCOMPLETE_ATTACHMENT',36055:'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT',36057:'FRAMEBUFFER_INCOMPLETE_DIMENSIONS',36061:'FRAMEBUFFER_UNSUPPORTED',36064:'COLOR_ATTACHMENT0',36096:'DEPTH_ATTACHMENT',36128:'STENCIL_ATTACHMENT',36160:'FRAMEBUFFER',36161:'RENDERBUFFER',36162:'RENDERBUFFER_WIDTH',36163:'RENDERBUFFER_HEIGHT',36164:'RENDERBUFFER_INTERNAL_FORMAT',36168:'STENCIL_INDEX8',36176:'RENDERBUFFER_RED_SIZE',36177:'RENDERBUFFER_GREEN_SIZE',36178:'RENDERBUFFER_BLUE_SIZE',36179:'RENDERBUFFER_ALPHA_SIZE',36180:'RENDERBUFFER_DEPTH_SIZE',36181:'RENDERBUFFER_STENCIL_SIZE',36194:'RGB565',36336:'LOW_FLOAT',36337:'MEDIUM_FLOAT',36338:'HIGH_FLOAT',36339:'LOW_INT',36340:'MEDIUM_INT',36341:'HIGH_INT',36346:'SHADER_COMPILER',36347:'MAX_VERTEX_UNIFORM_VECTORS',36348:'MAX_VARYING_VECTORS',36349:'MAX_FRAGMENT_UNIFORM_VECTORS',37440:'UNPACK_FLIP_Y_WEBGL',37441:'UNPACK_PREMULTIPLY_ALPHA_WEBGL',37442:'CONTEXT_LOST_WEBGL',37443:'UNPACK_COLORSPACE_CONVERSION_WEBGL',37444:'BROWSER_DEFAULT_WEBGL'};},{}],95:[function(_dereq_,module,exports){var gl10=_dereq_('./1.0/numbers');module.exports=function lookupConstant(number){return gl10[number];};},{\"./1.0/numbers\":94}],96:[function(_dereq_,module,exports){'use strict';module.exports=createErrorBars;var createBuffer=_dereq_('gl-buffer');var createVAO=_dereq_('gl-vao');var createShader=_dereq_('./shaders/index');var IDENTITY=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];function ErrorBars(gl,buffer,vao,shader){this.gl=gl;this.shader=shader;this.buffer=buffer;this.vao=vao;this.pixelRatio=1;this.bounds=[[Infinity,Infinity,Infinity],[-Infinity,-Infinity,-Infinity]];this.clipBounds=[[-Infinity,-Infinity,-Infinity],[Infinity,Infinity,Infinity]];this.lineWidth=[1,1,1];this.capSize=[10,10,10];this.lineCount=[0,0,0];this.lineOffset=[0,0,0];this.opacity=1;}var proto=ErrorBars.prototype;proto.isOpaque=function(){return this.opacity>=1;};proto.isTransparent=function(){return this.opacity<1;};proto.drawTransparent=proto.draw=function(cameraParams){var gl=this.gl;var uniforms=this.shader.uniforms;this.shader.bind();var view=uniforms.view=cameraParams.view||IDENTITY;var projection=uniforms.projection=cameraParams.projection||IDENTITY;uniforms.model=cameraParams.model||IDENTITY;uniforms.clipBounds=this.clipBounds;uniforms.opacity=this.opacity;var cx=view[12];var cy=view[13];var cz=view[14];var cw=view[15];var pixelScaleF=this.pixelRatio*(projection[3]*cx+projection[7]*cy+projection[11]*cz+projection[15]*cw)/gl.drawingBufferHeight;this.vao.bind();for(var i=0;i<3;++i){gl.lineWidth(this.lineWidth[i]);uniforms.capSize=this.capSize[i]*pixelScaleF;if(this.lineCount[i]){gl.drawArrays(gl.LINES,this.lineOffset[i],this.lineCount[i]);}}this.vao.unbind();};function updateBounds(bounds,point){for(var i=0;i<3;++i){bounds[0][i]=Math.min(bounds[0][i],point[i]);bounds[1][i]=Math.max(bounds[1][i],point[i]);}}var FACE_TABLE=function(){var table=new Array(3);for(var d=0;d<3;++d){var row=[];for(var j=1;j<=2;++j){for(var s=-1;s<=1;s+=2){var u=(j+d)%3;var y=[0,0,0];y[u]=s;row.push(y);}}table[d]=row;}return table;}();function emitFace(verts,x,c,d){var offsets=FACE_TABLE[d];for(var i=0;i<offsets.length;++i){var o=offsets[i];verts.push(x[0],x[1],x[2],c[0],c[1],c[2],c[3],o[0],o[1],o[2]);}return offsets.length;}proto.update=function(options){options=options||{};if('lineWidth'in options){this.lineWidth=options.lineWidth;if(!Array.isArray(this.lineWidth)){this.lineWidth=[this.lineWidth,this.lineWidth,this.lineWidth];}}if('capSize'in options){this.capSize=options.capSize;if(!Array.isArray(this.capSize)){this.capSize=[this.capSize,this.capSize,this.capSize];}}if('opacity'in options){this.opacity=options.opacity;}var color=options.color||[[0,0,0],[0,0,0],[0,0,0]];var position=options.position;var error=options.error;if(!Array.isArray(color[0])){color=[color,color,color];}if(position&&error){var verts=[];var n=position.length;var vertexCount=0;this.bounds=[[Infinity,Infinity,Infinity],[-Infinity,-Infinity,-Infinity]];this.lineCount=[0,0,0];//Build geometry for lines\nfor(var j=0;j<3;++j){this.lineOffset[j]=vertexCount;i_loop:for(var i=0;i<n;++i){var p=position[i];for(var k=0;k<3;++k){if(isNaN(p[k])||!isFinite(p[k])){continue i_loop;}}var e=error[i];var c=color[j];if(Array.isArray(c[0])){c=color[i];}if(c.length===3){c=[c[0],c[1],c[2],1];}if(isNaN(e[0][j])||isNaN(e[1][j])){continue;}if(e[0][j]<0){var x=p.slice();x[j]+=e[0][j];verts.push(p[0],p[1],p[2],c[0],c[1],c[2],c[3],0,0,0,x[0],x[1],x[2],c[0],c[1],c[2],c[3],0,0,0);updateBounds(this.bounds,x);vertexCount+=2+emitFace(verts,x,c,j);}if(e[1][j]>0){var x=p.slice();x[j]+=e[1][j];verts.push(p[0],p[1],p[2],c[0],c[1],c[2],c[3],0,0,0,x[0],x[1],x[2],c[0],c[1],c[2],c[3],0,0,0);updateBounds(this.bounds,x);vertexCount+=2+emitFace(verts,x,c,j);}}this.lineCount[j]=vertexCount-this.lineOffset[j];}this.buffer.update(verts);}};proto.dispose=function(){this.shader.dispose();this.buffer.dispose();this.vao.dispose();};function createErrorBars(options){var gl=options.gl;var buffer=createBuffer(gl);var vao=createVAO(gl,[{buffer:buffer,type:gl.FLOAT,size:3,offset:0,stride:40},{buffer:buffer,type:gl.FLOAT,size:4,offset:12,stride:40},{buffer:buffer,type:gl.FLOAT,size:3,offset:28,stride:40}]);var shader=createShader(gl);shader.attributes.position.location=0;shader.attributes.color.location=1;shader.attributes.offset.location=2;var result=new ErrorBars(gl,buffer,vao,shader);result.update(options);return result;}},{\"./shaders/index\":97,\"gl-buffer\":93,\"gl-vao\":146}],97:[function(_dereq_,module,exports){'use strict';var glslify=_dereq_('glslify');var createShader=_dereq_('gl-shader');var vertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nattribute vec3 position, offset;\\nattribute vec4 color;\\nuniform mat4 model, view, projection;\\nuniform float capSize;\\nvarying vec4 fragColor;\\nvarying vec3 fragPosition;\\n\\nvoid main() {\\n  vec4 worldPosition  = model * vec4(position, 1.0);\\n  worldPosition       = (worldPosition / worldPosition.w) + vec4(capSize * offset, 0.0);\\n  gl_Position         = projection * view * worldPosition;\\n  fragColor           = color;\\n  fragPosition        = position;\\n}\"]);var fragSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nuniform vec3 clipBounds[2];\\nuniform float opacity;\\nvarying vec3 fragPosition;\\nvarying vec4 fragColor;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], fragPosition)) discard;\\n\\n  gl_FragColor = opacity * fragColor;\\n}\"]);module.exports=function(gl){return createShader(gl,vertSrc,fragSrc,null,[{name:'position',type:'vec3'},{name:'color',type:'vec4'},{name:'offset',type:'vec3'}]);};},{\"gl-shader\":133,\"glslify\":162}],98:[function(_dereq_,module,exports){var isGL2=_dereq_('is-webgl2-context');var promoted=_dereq_('webgl2-core-extensions');var interfaces=_dereq_('./lib/interfaces');var noInterfaces=_dereq_('./lib/no-interfaces');module.exports=getExtension;module.exports.patch=patch;function patch(gl){var glGetExtension=gl.getExtension;gl.getExtension=function(ext){if(shouldGenerate(gl,ext)){return generate(gl,ext);}else{return glGetExtension.call(this,ext);}};}function getExtension(gl,ext){if(shouldGenerate(gl,ext)){return generate(gl,ext);}else{return gl.getExtension(ext);}}function shouldGenerate(gl,ext){return isGL2(gl)&&promoted.indexOf(ext)>=0;}function trimEnd(name){return name.replace(/\\_?(EXT|OES|WEBGL|ANGLE)$/,'');}function generate(gl,name){// dummy interface, no features\nif(name in noInterfaces){return new noInterfaces[name]();}// interface with some constants / functions\nvar data=interfaces[name];if(!data){// found a \"core\" extension but no interfaces\n// yet defined for it\nthrow new Error('found a \"core\" extension '+name+' but no interface exists yet to wrap it');}var Ctor=data[0];var constants=data[1];var funcs=data[2];var obj=new Ctor();if(constants){constants.forEach(function(k){var constant=gl[trimEnd(k)];Object.defineProperty(obj,k,{enumerable:true,configurable:false,writable:false,value:constant});});}if(funcs){funcs.forEach(function(k){var name=trimEnd(k);obj[k]=gl[name].bind(gl);});}return obj;}},{\"./lib/interfaces\":99,\"./lib/no-interfaces\":100,\"is-webgl2-context\":175,\"webgl2-core-extensions\":280}],99:[function(_dereq_,module,exports){/* format: [ constructor, constants, functions ]  */var depthTexture=[function DepthTexture(){},['UNSIGNED_INT_24_8_WEBGL']];module.exports={EXT_sRGB:[function sRGB(){},['SRGB_EXT','SRGB_ALPHA_EXT','SRGB8_ALPHA8_EXT','FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT']],EXT_blend_minmax:[function BlendMinMax(){},['MIN_EXT','MAX_EXT']],ANGLE_instanced_arrays:[function InstancedArrays(){},['VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE'],['drawArraysInstancedANGLE','drawElementsInstancedANGLE','vertexAttribDivisorANGLE']],OES_standard_derivatives:[function StandardDerivatives(){},['FRAGMENT_SHADER_DERIVATIVE_HINT_OES']],OES_texture_half_float:[function TextureHalfFloat(){},['HALF_FLOAT_OES']],OES_vertex_array_object:[function VertexArrayObject(){},['VERTEX_ARRAY_BINDING_OES'],['createVertexArrayOES','deleteVertexArrayOES','isVertexArrayOES','bindVertexArrayOES']],WEBGL_depth_texture:depthTexture,WEBKIT_WEBGL_depth_texture:depthTexture,WEBGL_draw_buffers:[function DrawBuffers(){},['MAX_COLOR_ATTACHMENTS_WEBGL','MAX_DRAW_BUFFERS_WEBGL'].concat(getColorAttachments(16)),['drawBuffersWEBGL']]};function getColorAttachments(n){var a=[],b=[];for(var i=0;i<n;i++){a.push('DRAW_BUFFER'+i+'_WEBGL');b.push('COLOR_ATTACHMENT'+i+'_WEBGL');}return a.concat(b);}},{}],100:[function(_dereq_,module,exports){module.exports={EXT_frag_depth:function FragDepth(){},EXT_shader_texture_lod:function ShaderTextureLOD(){},OES_element_index_uint:function ElementIndexUint(){},OES_texture_float:function TextureFloat(){},OES_texture_half_float_linear:function TextureHalfFloatLinear(){},OES_fbo_render_mipmap:function FBORenderMipMap(){}};},{}],101:[function(_dereq_,module,exports){'use strict';var createTexture=_dereq_('gl-texture2d');module.exports=createFBO;var colorAttachmentArrays=null;var FRAMEBUFFER_UNSUPPORTED;var FRAMEBUFFER_INCOMPLETE_ATTACHMENT;var FRAMEBUFFER_INCOMPLETE_DIMENSIONS;var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;function saveFBOState(gl){var fbo=gl.getParameter(gl.FRAMEBUFFER_BINDING);var rbo=gl.getParameter(gl.RENDERBUFFER_BINDING);var tex=gl.getParameter(gl.TEXTURE_BINDING_2D);return[fbo,rbo,tex];}function restoreFBOState(gl,data){gl.bindFramebuffer(gl.FRAMEBUFFER,data[0]);gl.bindRenderbuffer(gl.RENDERBUFFER,data[1]);gl.bindTexture(gl.TEXTURE_2D,data[2]);}function lazyInitColorAttachments(gl,ext){var maxColorAttachments=gl.getParameter(ext.MAX_COLOR_ATTACHMENTS_WEBGL);colorAttachmentArrays=new Array(maxColorAttachments+1);for(var i=0;i<=maxColorAttachments;++i){var x=new Array(maxColorAttachments);for(var j=0;j<i;++j){x[j]=gl.COLOR_ATTACHMENT0+j;}for(var j=i;j<maxColorAttachments;++j){x[j]=gl.NONE;}colorAttachmentArrays[i]=x;}}//Throw an appropriate error\nfunction throwFBOError(status){switch(status){case FRAMEBUFFER_UNSUPPORTED:throw new Error('gl-fbo: Framebuffer unsupported');case FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw new Error('gl-fbo: Framebuffer incomplete attachment');case FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw new Error('gl-fbo: Framebuffer incomplete dimensions');case FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw new Error('gl-fbo: Framebuffer incomplete missing attachment');default:throw new Error('gl-fbo: Framebuffer failed for unspecified reason');}}//Initialize a texture object\nfunction initTexture(gl,width,height,type,format,attachment){if(!type){return null;}var result=createTexture(gl,width,height,format,type);result.magFilter=gl.NEAREST;result.minFilter=gl.NEAREST;result.mipSamples=1;result.bind();gl.framebufferTexture2D(gl.FRAMEBUFFER,attachment,gl.TEXTURE_2D,result.handle,0);return result;}//Initialize a render buffer object\nfunction initRenderBuffer(gl,width,height,component,attachment){var result=gl.createRenderbuffer();gl.bindRenderbuffer(gl.RENDERBUFFER,result);gl.renderbufferStorage(gl.RENDERBUFFER,component,width,height);gl.framebufferRenderbuffer(gl.FRAMEBUFFER,attachment,gl.RENDERBUFFER,result);return result;}//Rebuild the frame buffer\nfunction rebuildFBO(fbo){//Save FBO state\nvar state=saveFBOState(fbo.gl);var gl=fbo.gl;var handle=fbo.handle=gl.createFramebuffer();var width=fbo._shape[0];var height=fbo._shape[1];var numColors=fbo.color.length;var ext=fbo._ext;var useStencil=fbo._useStencil;var useDepth=fbo._useDepth;var colorType=fbo._colorType;//Bind the fbo\ngl.bindFramebuffer(gl.FRAMEBUFFER,handle);//Allocate color buffers\nfor(var i=0;i<numColors;++i){fbo.color[i]=initTexture(gl,width,height,colorType,gl.RGBA,gl.COLOR_ATTACHMENT0+i);}if(numColors===0){fbo._color_rb=initRenderBuffer(gl,width,height,gl.RGBA4,gl.COLOR_ATTACHMENT0);if(ext){ext.drawBuffersWEBGL(colorAttachmentArrays[0]);}}else if(numColors>1){ext.drawBuffersWEBGL(colorAttachmentArrays[numColors]);}//Allocate depth/stencil buffers\nvar WEBGL_depth_texture=gl.getExtension('WEBGL_depth_texture');if(WEBGL_depth_texture){if(useStencil){fbo.depth=initTexture(gl,width,height,WEBGL_depth_texture.UNSIGNED_INT_24_8_WEBGL,gl.DEPTH_STENCIL,gl.DEPTH_STENCIL_ATTACHMENT);}else if(useDepth){fbo.depth=initTexture(gl,width,height,gl.UNSIGNED_SHORT,gl.DEPTH_COMPONENT,gl.DEPTH_ATTACHMENT);}}else{if(useDepth&&useStencil){fbo._depth_rb=initRenderBuffer(gl,width,height,gl.DEPTH_STENCIL,gl.DEPTH_STENCIL_ATTACHMENT);}else if(useDepth){fbo._depth_rb=initRenderBuffer(gl,width,height,gl.DEPTH_COMPONENT16,gl.DEPTH_ATTACHMENT);}else if(useStencil){fbo._depth_rb=initRenderBuffer(gl,width,height,gl.STENCIL_INDEX,gl.STENCIL_ATTACHMENT);}}//Check frame buffer state\nvar status=gl.checkFramebufferStatus(gl.FRAMEBUFFER);if(status!==gl.FRAMEBUFFER_COMPLETE){//Release all partially allocated resources\nfbo._destroyed=true;//Release all resources\ngl.bindFramebuffer(gl.FRAMEBUFFER,null);gl.deleteFramebuffer(fbo.handle);fbo.handle=null;if(fbo.depth){fbo.depth.dispose();fbo.depth=null;}if(fbo._depth_rb){gl.deleteRenderbuffer(fbo._depth_rb);fbo._depth_rb=null;}for(var i=0;i<fbo.color.length;++i){fbo.color[i].dispose();fbo.color[i]=null;}if(fbo._color_rb){gl.deleteRenderbuffer(fbo._color_rb);fbo._color_rb=null;}restoreFBOState(gl,state);//Throw the frame buffer error\nthrowFBOError(status);}//Everything ok, let's get on with life\nrestoreFBOState(gl,state);}function Framebuffer(gl,width,height,colorType,numColors,useDepth,useStencil,ext){//Handle and set properties\nthis.gl=gl;this._shape=[width|0,height|0];this._destroyed=false;this._ext=ext;//Allocate buffers\nthis.color=new Array(numColors);for(var i=0;i<numColors;++i){this.color[i]=null;}this._color_rb=null;this.depth=null;this._depth_rb=null;//Save depth and stencil flags\nthis._colorType=colorType;this._useDepth=useDepth;this._useStencil=useStencil;//Shape vector for resizing\nvar parent=this;var shapeVector=[width|0,height|0];Object.defineProperties(shapeVector,{0:{get:function get(){return parent._shape[0];},set:function set(w){return parent.width=w;}},1:{get:function get(){return parent._shape[1];},set:function set(h){return parent.height=h;}}});this._shapeVector=shapeVector;//Initialize all attachments\nrebuildFBO(this);}var proto=Framebuffer.prototype;function reshapeFBO(fbo,w,h){//If fbo is invalid, just skip this\nif(fbo._destroyed){throw new Error('gl-fbo: Can\\'t resize destroyed FBO');}//Don't resize if no change in shape\nif(fbo._shape[0]===w&&fbo._shape[1]===h){return;}var gl=fbo.gl;//Check parameter ranges\nvar maxFBOSize=gl.getParameter(gl.MAX_RENDERBUFFER_SIZE);if(w<0||w>maxFBOSize||h<0||h>maxFBOSize){throw new Error('gl-fbo: Can\\'t resize FBO, invalid dimensions');}//Update shape\nfbo._shape[0]=w;fbo._shape[1]=h;//Save framebuffer state\nvar state=saveFBOState(gl);//Resize framebuffer attachments\nfor(var i=0;i<fbo.color.length;++i){fbo.color[i].shape=fbo._shape;}if(fbo._color_rb){gl.bindRenderbuffer(gl.RENDERBUFFER,fbo._color_rb);gl.renderbufferStorage(gl.RENDERBUFFER,gl.RGBA4,fbo._shape[0],fbo._shape[1]);}if(fbo.depth){fbo.depth.shape=fbo._shape;}if(fbo._depth_rb){gl.bindRenderbuffer(gl.RENDERBUFFER,fbo._depth_rb);if(fbo._useDepth&&fbo._useStencil){gl.renderbufferStorage(gl.RENDERBUFFER,gl.DEPTH_STENCIL,fbo._shape[0],fbo._shape[1]);}else if(fbo._useDepth){gl.renderbufferStorage(gl.RENDERBUFFER,gl.DEPTH_COMPONENT16,fbo._shape[0],fbo._shape[1]);}else if(fbo._useStencil){gl.renderbufferStorage(gl.RENDERBUFFER,gl.STENCIL_INDEX,fbo._shape[0],fbo._shape[1]);}}//Check FBO status after resize, if something broke then die in a fire\ngl.bindFramebuffer(gl.FRAMEBUFFER,fbo.handle);var status=gl.checkFramebufferStatus(gl.FRAMEBUFFER);if(status!==gl.FRAMEBUFFER_COMPLETE){fbo.dispose();restoreFBOState(gl,state);throwFBOError(status);}//Restore framebuffer state\nrestoreFBOState(gl,state);}Object.defineProperties(proto,{'shape':{get:function get(){if(this._destroyed){return[0,0];}return this._shapeVector;},set:function set(x){if(!Array.isArray(x)){x=[x|0,x|0];}if(x.length!==2){throw new Error('gl-fbo: Shape vector must be length 2');}var w=x[0]|0;var h=x[1]|0;reshapeFBO(this,w,h);return[w,h];},enumerable:false},'width':{get:function get(){if(this._destroyed){return 0;}return this._shape[0];},set:function set(w){w=w|0;reshapeFBO(this,w,this._shape[1]);return w;},enumerable:false},'height':{get:function get(){if(this._destroyed){return 0;}return this._shape[1];},set:function set(h){h=h|0;reshapeFBO(this,this._shape[0],h);return h;},enumerable:false}});proto.bind=function(){if(this._destroyed){return;}var gl=this.gl;gl.bindFramebuffer(gl.FRAMEBUFFER,this.handle);gl.viewport(0,0,this._shape[0],this._shape[1]);};proto.dispose=function(){if(this._destroyed){return;}this._destroyed=true;var gl=this.gl;gl.deleteFramebuffer(this.handle);this.handle=null;if(this.depth){this.depth.dispose();this.depth=null;}if(this._depth_rb){gl.deleteRenderbuffer(this._depth_rb);this._depth_rb=null;}for(var i=0;i<this.color.length;++i){this.color[i].dispose();this.color[i]=null;}if(this._color_rb){gl.deleteRenderbuffer(this._color_rb);this._color_rb=null;}};function createFBO(gl,width,height,options){//Update frame buffer error code values\nif(!FRAMEBUFFER_UNSUPPORTED){FRAMEBUFFER_UNSUPPORTED=gl.FRAMEBUFFER_UNSUPPORTED;FRAMEBUFFER_INCOMPLETE_ATTACHMENT=gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT;FRAMEBUFFER_INCOMPLETE_DIMENSIONS=gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS;FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;}//Lazily initialize color attachment arrays\nvar WEBGL_draw_buffers=gl.getExtension('WEBGL_draw_buffers');if(!colorAttachmentArrays&&WEBGL_draw_buffers){lazyInitColorAttachments(gl,WEBGL_draw_buffers);}//Special case: Can accept an array as argument\nif(Array.isArray(width)){options=height;height=width[1]|0;width=width[0]|0;}if(typeof width!=='number'){throw new Error('gl-fbo: Missing shape parameter');}//Validate width/height properties\nvar maxFBOSize=gl.getParameter(gl.MAX_RENDERBUFFER_SIZE);if(width<0||width>maxFBOSize||height<0||height>maxFBOSize){throw new Error('gl-fbo: Parameters are too large for FBO');}//Handle each option type\noptions=options||{};//Figure out number of color buffers to use\nvar numColors=1;if('color'in options){numColors=Math.max(options.color|0,0);if(numColors<0){throw new Error('gl-fbo: Must specify a nonnegative number of colors');}if(numColors>1){//Check if multiple render targets supported\nif(!WEBGL_draw_buffers){throw new Error('gl-fbo: Multiple draw buffer extension not supported');}else if(numColors>gl.getParameter(WEBGL_draw_buffers.MAX_COLOR_ATTACHMENTS_WEBGL)){throw new Error('gl-fbo: Context does not support '+numColors+' draw buffers');}}}//Determine whether to use floating point textures\nvar colorType=gl.UNSIGNED_BYTE;var OES_texture_float=gl.getExtension('OES_texture_float');if(options.float&&numColors>0){if(!OES_texture_float){throw new Error('gl-fbo: Context does not support floating point textures');}colorType=gl.FLOAT;}else if(options.preferFloat&&numColors>0){if(OES_texture_float){colorType=gl.FLOAT;}}//Check if we should use depth buffer\nvar useDepth=true;if('depth'in options){useDepth=!!options.depth;}//Check if we should use a stencil buffer\nvar useStencil=false;if('stencil'in options){useStencil=!!options.stencil;}return new Framebuffer(gl,width,height,colorType,numColors,useDepth,useStencil,WEBGL_draw_buffers);}},{\"gl-texture2d\":142}],102:[function(_dereq_,module,exports){var sprintf=_dereq_('sprintf-js').sprintf;var glConstants=_dereq_('gl-constants/lookup');var shaderName=_dereq_('glsl-shader-name');var addLineNumbers=_dereq_('add-line-numbers');module.exports=formatCompilerError;function formatCompilerError(errLog,src,type){\"use strict\";var name=shaderName(src)||'of unknown name (see npm glsl-shader-name)';var typeName='unknown type';if(type!==undefined){typeName=type===glConstants.FRAGMENT_SHADER?'fragment':'vertex';}var longForm=sprintf('Error compiling %s shader %s:\\n',typeName,name);var shortForm=sprintf(\"%s%s\",longForm,errLog);var errorStrings=errLog.split('\\n');var errors={};for(var i=0;i<errorStrings.length;i++){var errorString=errorStrings[i];if(errorString===''||errorString===\"\\0\")continue;var lineNo=parseInt(errorString.split(':')[2]);if(isNaN(lineNo)){throw new Error(sprintf('Could not parse error: %s',errorString));}errors[lineNo]=errorString;}var lines=addLineNumbers(src).split('\\n');for(var i=0;i<lines.length;i++){if(!errors[i+3]&&!errors[i+2]&&!errors[i+1])continue;var line=lines[i];longForm+=line+'\\n';if(errors[i+1]){var e=errors[i+1];e=e.substr(e.split(':',3).join(':').length+1).trim();longForm+=sprintf('^^^ %s\\n\\n',e);}}return{long:longForm.trim(),short:shortForm.trim()};}},{\"add-line-numbers\":10,\"gl-constants/lookup\":95,\"glsl-shader-name\":154,\"sprintf-js\":262}],103:[function(_dereq_,module,exports){var glslify=_dereq_('glslify');var createShader=_dereq_('gl-shader');var vertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nattribute vec3 position, nextPosition;\\nattribute float arcLength, lineWidth;\\nattribute vec4 color;\\n\\nuniform vec2 screenShape;\\nuniform float pixelRatio;\\nuniform mat4 model, view, projection;\\n\\nvarying vec4 fragColor;\\nvarying vec3 worldPosition;\\nvarying float pixelArcLength;\\n\\nvec4 project(vec3 p) {\\n  return projection * view * model * vec4(p, 1.0);\\n}\\n\\nvoid main() {\\n  vec4 startPoint = project(position);\\n  vec4 endPoint   = project(nextPosition);\\n\\n  vec2 A = startPoint.xy / startPoint.w;\\n  vec2 B =   endPoint.xy /   endPoint.w;\\n\\n  float clipAngle = atan(\\n    (B.y - A.y) * screenShape.y,\\n    (B.x - A.x) * screenShape.x\\n  );\\n\\n  vec2 offset = 0.5 * pixelRatio * lineWidth * vec2(\\n    sin(clipAngle),\\n    -cos(clipAngle)\\n  ) / screenShape;\\n\\n  gl_Position = vec4(startPoint.xy + startPoint.w * offset, startPoint.zw);\\n\\n  worldPosition = position;\\n  pixelArcLength = arcLength;\\n  fragColor = color;\\n}\\n\"]);var forwardFrag=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nuniform vec3      clipBounds[2];\\nuniform sampler2D dashTexture;\\nuniform float     dashScale;\\nuniform float     opacity;\\n\\nvarying vec3    worldPosition;\\nvarying float   pixelArcLength;\\nvarying vec4    fragColor;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], worldPosition)) discard;\\n\\n  float dashWeight = texture2D(dashTexture, vec2(dashScale * pixelArcLength, 0)).r;\\n  if(dashWeight < 0.5) {\\n    discard;\\n  }\\n  gl_FragColor = fragColor * opacity;\\n}\\n\"]);var pickFrag=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\n#define FLOAT_MAX  1.70141184e38\\n#define FLOAT_MIN  1.17549435e-38\\n\\nlowp vec4 encode_float_1540259130(highp float v) {\\n  highp float av = abs(v);\\n\\n  //Handle special cases\\n  if(av < FLOAT_MIN) {\\n    return vec4(0.0, 0.0, 0.0, 0.0);\\n  } else if(v > FLOAT_MAX) {\\n    return vec4(127.0, 128.0, 0.0, 0.0) / 255.0;\\n  } else if(v < -FLOAT_MAX) {\\n    return vec4(255.0, 128.0, 0.0, 0.0) / 255.0;\\n  }\\n\\n  highp vec4 c = vec4(0,0,0,0);\\n\\n  //Compute exponent and mantissa\\n  highp float e = floor(log2(av));\\n  highp float m = av * pow(2.0, -e) - 1.0;\\n  \\n  //Unpack mantissa\\n  c[1] = floor(128.0 * m);\\n  m -= c[1] / 128.0;\\n  c[2] = floor(32768.0 * m);\\n  m -= c[2] / 32768.0;\\n  c[3] = floor(8388608.0 * m);\\n  \\n  //Unpack exponent\\n  highp float ebias = e + 127.0;\\n  c[0] = floor(ebias / 2.0);\\n  ebias -= c[0] * 2.0;\\n  c[1] += floor(ebias) * 128.0; \\n\\n  //Unpack sign bit\\n  c[0] += 128.0 * step(0.0, -v);\\n\\n  //Scale back to range\\n  return c / 255.0;\\n}\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nuniform float pickId;\\nuniform vec3 clipBounds[2];\\n\\nvarying vec3 worldPosition;\\nvarying float pixelArcLength;\\nvarying vec4 fragColor;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], worldPosition)) discard;\\n\\n  gl_FragColor = vec4(pickId/255.0, encode_float_1540259130(pixelArcLength).xyz);\\n}\"]);var ATTRIBUTES=[{name:'position',type:'vec3'},{name:'nextPosition',type:'vec3'},{name:'arcLength',type:'float'},{name:'lineWidth',type:'float'},{name:'color',type:'vec4'}];exports.createShader=function(gl){return createShader(gl,vertSrc,forwardFrag,null,ATTRIBUTES);};exports.createPickShader=function(gl){return createShader(gl,vertSrc,pickFrag,null,ATTRIBUTES);};},{\"gl-shader\":133,\"glslify\":162}],104:[function(_dereq_,module,exports){'use strict';module.exports=createLinePlot;var createBuffer=_dereq_('gl-buffer');var createVAO=_dereq_('gl-vao');var createTexture=_dereq_('gl-texture2d');var unpackFloat=_dereq_('glsl-read-float');var bsearch=_dereq_('binary-search-bounds');var ndarray=_dereq_('ndarray');var shaders=_dereq_('./lib/shaders');var createShader=shaders.createShader;var createPickShader=shaders.createPickShader;var identity=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];function distance(a,b){var s=0.0;for(var i=0;i<3;++i){var d=a[i]-b[i];s+=d*d;}return Math.sqrt(s);}function filterClipBounds(bounds){var result=[[-1e6,-1e6,-1e6],[1e6,1e6,1e6]];for(var i=0;i<3;++i){result[0][i]=Math.max(bounds[0][i],result[0][i]);result[1][i]=Math.min(bounds[1][i],result[1][i]);}return result;}function PickResult(tau,position,index,dataCoordinate){this.arcLength=tau;this.position=position;this.index=index;this.dataCoordinate=dataCoordinate;}function LinePlot(gl,shader,pickShader,buffer,vao,texture){this.gl=gl;this.shader=shader;this.pickShader=pickShader;this.buffer=buffer;this.vao=vao;this.clipBounds=[[-Infinity,-Infinity,-Infinity],[Infinity,Infinity,Infinity]];this.points=[];this.arcLength=[];this.vertexCount=0;this.bounds=[[0,0,0],[0,0,0]];this.pickId=0;this.lineWidth=1;this.texture=texture;this.dashScale=1;this.opacity=1;this.dirty=true;this.pixelRatio=1;}var proto=LinePlot.prototype;proto.isTransparent=function(){return this.opacity<1;};proto.isOpaque=function(){return this.opacity>=1;};proto.pickSlots=1;proto.setPickBase=function(id){this.pickId=id;};proto.drawTransparent=proto.draw=function(camera){if(!this.vertexCount)return;var gl=this.gl;var shader=this.shader;var vao=this.vao;shader.bind();shader.uniforms={model:camera.model||identity,view:camera.view||identity,projection:camera.projection||identity,clipBounds:filterClipBounds(this.clipBounds),dashTexture:this.texture.bind(),dashScale:this.dashScale/this.arcLength[this.arcLength.length-1],opacity:this.opacity,screenShape:[gl.drawingBufferWidth,gl.drawingBufferHeight],pixelRatio:this.pixelRatio};vao.bind();vao.draw(gl.TRIANGLE_STRIP,this.vertexCount);vao.unbind();};proto.drawPick=function(camera){if(!this.vertexCount)return;var gl=this.gl;var shader=this.pickShader;var vao=this.vao;shader.bind();shader.uniforms={model:camera.model||identity,view:camera.view||identity,projection:camera.projection||identity,pickId:this.pickId,clipBounds:filterClipBounds(this.clipBounds),screenShape:[gl.drawingBufferWidth,gl.drawingBufferHeight],pixelRatio:this.pixelRatio};vao.bind();vao.draw(gl.TRIANGLE_STRIP,this.vertexCount);vao.unbind();};proto.update=function(options){var i,j;this.dirty=true;var connectGaps=!!options.connectGaps;if('dashScale'in options){this.dashScale=options.dashScale;}if('opacity'in options){this.opacity=+options.opacity;}// Recalculate buffer data\nvar buffer=[];var arcLengthArray=[];var pointArray=[];var arcLength=0.0;var vertexCount=0;var bounds=[[Infinity,Infinity,Infinity],[-Infinity,-Infinity,-Infinity]];var positions=options.position||options.positions;if(positions){// Default color\nvar colors=options.color||options.colors||[0,0,0,1];var lineWidth=options.lineWidth||1;var hadGap=false;fill_loop:for(i=1;i<positions.length;++i){var a=positions[i-1];var b=positions[i];arcLengthArray.push(arcLength);pointArray.push(a.slice());for(j=0;j<3;++j){if(isNaN(a[j])||isNaN(b[j])||!isFinite(a[j])||!isFinite(b[j])){if(!connectGaps&&buffer.length>0){for(var k=0;k<24;++k){buffer.push(buffer[buffer.length-12]);}vertexCount+=2;hadGap=true;}continue fill_loop;}bounds[0][j]=Math.min(bounds[0][j],a[j],b[j]);bounds[1][j]=Math.max(bounds[1][j],a[j],b[j]);}var acolor,bcolor;if(Array.isArray(colors[0])){acolor=colors.length>i-1?colors[i-1]:// using index value\ncolors.length>0?colors[colors.length-1]:// using last item\n[0,0,0,1];// using black\nbcolor=colors.length>i?colors[i]:// using index value\ncolors.length>0?colors[colors.length-1]:// using last item\n[0,0,0,1];// using black\n}else{acolor=bcolor=colors;}if(acolor.length===3){acolor=[acolor[0],acolor[1],acolor[2],1];}if(bcolor.length===3){bcolor=[bcolor[0],bcolor[1],bcolor[2],1];}var w0;if(Array.isArray(lineWidth)){w0=lineWidth.length>i-1?lineWidth[i-1]:// using index value\nlineWidth.length>0?lineWidth[lineWidth.length-1]:// using last item\n[0,0,0,1];// using black\n}else{w0=lineWidth;}var t0=arcLength;arcLength+=distance(a,b);if(hadGap){for(j=0;j<2;++j){buffer.push(a[0],a[1],a[2],b[0],b[1],b[2],t0,w0,acolor[0],acolor[1],acolor[2],acolor[3]);}vertexCount+=2;hadGap=false;}buffer.push(a[0],a[1],a[2],b[0],b[1],b[2],t0,w0,acolor[0],acolor[1],acolor[2],acolor[3],a[0],a[1],a[2],b[0],b[1],b[2],t0,-w0,acolor[0],acolor[1],acolor[2],acolor[3],b[0],b[1],b[2],a[0],a[1],a[2],arcLength,-w0,bcolor[0],bcolor[1],bcolor[2],bcolor[3],b[0],b[1],b[2],a[0],a[1],a[2],arcLength,w0,bcolor[0],bcolor[1],bcolor[2],bcolor[3]);vertexCount+=4;}}this.buffer.update(buffer);arcLengthArray.push(arcLength);pointArray.push(positions[positions.length-1].slice());this.bounds=bounds;this.vertexCount=vertexCount;this.points=pointArray;this.arcLength=arcLengthArray;if('dashes'in options){var dashArray=options.dashes;// Calculate prefix sum\nvar prefixSum=dashArray.slice();prefixSum.unshift(0);for(i=1;i<prefixSum.length;++i){prefixSum[i]=prefixSum[i-1]+prefixSum[i];}var dashTexture=ndarray(new Array(256*4),[256,1,4]);for(i=0;i<256;++i){for(j=0;j<4;++j){dashTexture.set(i,0,j,0);}if(bsearch.le(prefixSum,prefixSum[prefixSum.length-1]*i/255.0)&1){dashTexture.set(i,0,0,0);}else{dashTexture.set(i,0,0,255);}}this.texture.setPixels(dashTexture);}};proto.dispose=function(){this.shader.dispose();this.vao.dispose();this.buffer.dispose();};proto.pick=function(selection){if(!selection){return null;}if(selection.id!==this.pickId){return null;}var tau=unpackFloat(selection.value[0],selection.value[1],selection.value[2],0);var index=bsearch.le(this.arcLength,tau);if(index<0){return null;}if(index===this.arcLength.length-1){return new PickResult(this.arcLength[this.arcLength.length-1],this.points[this.points.length-1].slice(),index);}var a=this.points[index];var b=this.points[Math.min(index+1,this.points.length-1)];var t=(tau-this.arcLength[index])/(this.arcLength[index+1]-this.arcLength[index]);var ti=1.0-t;var x=[0,0,0];for(var i=0;i<3;++i){x[i]=ti*a[i]+t*b[i];}var dataIndex=Math.min(t<0.5?index:index+1,this.points.length-1);return new PickResult(tau,x,dataIndex,this.points[dataIndex]);};function createLinePlot(options){var gl=options.gl||options.scene&&options.scene.gl;var shader=createShader(gl);shader.attributes.position.location=0;shader.attributes.nextPosition.location=1;shader.attributes.arcLength.location=2;shader.attributes.lineWidth.location=3;shader.attributes.color.location=4;var pickShader=createPickShader(gl);pickShader.attributes.position.location=0;pickShader.attributes.nextPosition.location=1;pickShader.attributes.arcLength.location=2;pickShader.attributes.lineWidth.location=3;pickShader.attributes.color.location=4;var buffer=createBuffer(gl);var vao=createVAO(gl,[{'buffer':buffer,'size':3,'offset':0,'stride':48},{'buffer':buffer,'size':3,'offset':12,'stride':48},{'buffer':buffer,'size':1,'offset':24,'stride':48},{'buffer':buffer,'size':1,'offset':28,'stride':48},{'buffer':buffer,'size':4,'offset':32,'stride':48}]);// Create texture for dash pattern\nvar defaultTexture=ndarray(new Array(256*4),[256,1,4]);for(var i=0;i<256*4;++i){defaultTexture.data[i]=255;}var texture=createTexture(gl,defaultTexture);texture.wrap=gl.REPEAT;var linePlot=new LinePlot(gl,shader,pickShader,buffer,vao,texture);linePlot.update(options);return linePlot;}},{\"./lib/shaders\":103,\"binary-search-bounds\":31,\"gl-buffer\":93,\"gl-texture2d\":142,\"gl-vao\":146,\"glsl-read-float\":153,\"ndarray\":192}],105:[function(_dereq_,module,exports){module.exports=clone;/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */function clone(a){var out=new Float32Array(16);out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];out[4]=a[4];out[5]=a[5];out[6]=a[6];out[7]=a[7];out[8]=a[8];out[9]=a[9];out[10]=a[10];out[11]=a[11];out[12]=a[12];out[13]=a[13];out[14]=a[14];out[15]=a[15];return out;};},{}],106:[function(_dereq_,module,exports){module.exports=create;/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */function create(){var out=new Float32Array(16);out[0]=1;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=1;out[6]=0;out[7]=0;out[8]=0;out[9]=0;out[10]=1;out[11]=0;out[12]=0;out[13]=0;out[14]=0;out[15]=1;return out;};},{}],107:[function(_dereq_,module,exports){module.exports=determinant;/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */function determinant(a){var a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15],b00=a00*a11-a01*a10,b01=a00*a12-a02*a10,b02=a00*a13-a03*a10,b03=a01*a12-a02*a11,b04=a01*a13-a03*a11,b05=a02*a13-a03*a12,b06=a20*a31-a21*a30,b07=a20*a32-a22*a30,b08=a20*a33-a23*a30,b09=a21*a32-a22*a31,b10=a21*a33-a23*a31,b11=a22*a33-a23*a32;// Calculate the determinant\nreturn b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;};},{}],108:[function(_dereq_,module,exports){module.exports=fromQuat;/**\n * Creates a matrix from a quaternion rotation.\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @returns {mat4} out\n */function fromQuat(out,q){var x=q[0],y=q[1],z=q[2],w=q[3],x2=x+x,y2=y+y,z2=z+z,xx=x*x2,yx=y*x2,yy=y*y2,zx=z*x2,zy=z*y2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2;out[0]=1-yy-zz;out[1]=yx+wz;out[2]=zx-wy;out[3]=0;out[4]=yx-wz;out[5]=1-xx-zz;out[6]=zy+wx;out[7]=0;out[8]=zx+wy;out[9]=zy-wx;out[10]=1-xx-yy;out[11]=0;out[12]=0;out[13]=0;out[14]=0;out[15]=1;return out;};},{}],109:[function(_dereq_,module,exports){module.exports=fromRotationTranslation;/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */function fromRotationTranslation(out,q,v){// Quaternion math\nvar x=q[0],y=q[1],z=q[2],w=q[3],x2=x+x,y2=y+y,z2=z+z,xx=x*x2,xy=x*y2,xz=x*z2,yy=y*y2,yz=y*z2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2;out[0]=1-(yy+zz);out[1]=xy+wz;out[2]=xz-wy;out[3]=0;out[4]=xy-wz;out[5]=1-(xx+zz);out[6]=yz+wx;out[7]=0;out[8]=xz+wy;out[9]=yz-wx;out[10]=1-(xx+yy);out[11]=0;out[12]=v[0];out[13]=v[1];out[14]=v[2];out[15]=1;return out;};},{}],110:[function(_dereq_,module,exports){module.exports=identity;/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */function identity(out){out[0]=1;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=1;out[6]=0;out[7]=0;out[8]=0;out[9]=0;out[10]=1;out[11]=0;out[12]=0;out[13]=0;out[14]=0;out[15]=1;return out;};},{}],111:[function(_dereq_,module,exports){module.exports=invert;/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */function invert(out,a){var a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15],b00=a00*a11-a01*a10,b01=a00*a12-a02*a10,b02=a00*a13-a03*a10,b03=a01*a12-a02*a11,b04=a01*a13-a03*a11,b05=a02*a13-a03*a12,b06=a20*a31-a21*a30,b07=a20*a32-a22*a30,b08=a20*a33-a23*a30,b09=a21*a32-a22*a31,b10=a21*a33-a23*a31,b11=a22*a33-a23*a32,// Calculate the determinant\ndet=b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;if(!det){return null;}det=1.0/det;out[0]=(a11*b11-a12*b10+a13*b09)*det;out[1]=(a02*b10-a01*b11-a03*b09)*det;out[2]=(a31*b05-a32*b04+a33*b03)*det;out[3]=(a22*b04-a21*b05-a23*b03)*det;out[4]=(a12*b08-a10*b11-a13*b07)*det;out[5]=(a00*b11-a02*b08+a03*b07)*det;out[6]=(a32*b02-a30*b05-a33*b01)*det;out[7]=(a20*b05-a22*b02+a23*b01)*det;out[8]=(a10*b10-a11*b08+a13*b06)*det;out[9]=(a01*b08-a00*b10-a03*b06)*det;out[10]=(a30*b04-a31*b02+a33*b00)*det;out[11]=(a21*b02-a20*b04-a23*b00)*det;out[12]=(a11*b07-a10*b09-a12*b06)*det;out[13]=(a00*b09-a01*b07+a02*b06)*det;out[14]=(a31*b01-a30*b03-a32*b00)*det;out[15]=(a20*b03-a21*b01+a22*b00)*det;return out;};},{}],112:[function(_dereq_,module,exports){var identity=_dereq_('./identity');module.exports=lookAt;/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */function lookAt(out,eye,center,up){var x0,x1,x2,y0,y1,y2,z0,z1,z2,len,eyex=eye[0],eyey=eye[1],eyez=eye[2],upx=up[0],upy=up[1],upz=up[2],centerx=center[0],centery=center[1],centerz=center[2];if(Math.abs(eyex-centerx)<0.000001&&Math.abs(eyey-centery)<0.000001&&Math.abs(eyez-centerz)<0.000001){return identity(out);}z0=eyex-centerx;z1=eyey-centery;z2=eyez-centerz;len=1/Math.sqrt(z0*z0+z1*z1+z2*z2);z0*=len;z1*=len;z2*=len;x0=upy*z2-upz*z1;x1=upz*z0-upx*z2;x2=upx*z1-upy*z0;len=Math.sqrt(x0*x0+x1*x1+x2*x2);if(!len){x0=0;x1=0;x2=0;}else{len=1/len;x0*=len;x1*=len;x2*=len;}y0=z1*x2-z2*x1;y1=z2*x0-z0*x2;y2=z0*x1-z1*x0;len=Math.sqrt(y0*y0+y1*y1+y2*y2);if(!len){y0=0;y1=0;y2=0;}else{len=1/len;y0*=len;y1*=len;y2*=len;}out[0]=x0;out[1]=y0;out[2]=z0;out[3]=0;out[4]=x1;out[5]=y1;out[6]=z1;out[7]=0;out[8]=x2;out[9]=y2;out[10]=z2;out[11]=0;out[12]=-(x0*eyex+x1*eyey+x2*eyez);out[13]=-(y0*eyex+y1*eyey+y2*eyez);out[14]=-(z0*eyex+z1*eyey+z2*eyez);out[15]=1;return out;};},{\"./identity\":110}],113:[function(_dereq_,module,exports){module.exports=multiply;/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */function multiply(out,a,b){var a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15];// Cache only the current line of the second matrix\nvar b0=b[0],b1=b[1],b2=b[2],b3=b[3];out[0]=b0*a00+b1*a10+b2*a20+b3*a30;out[1]=b0*a01+b1*a11+b2*a21+b3*a31;out[2]=b0*a02+b1*a12+b2*a22+b3*a32;out[3]=b0*a03+b1*a13+b2*a23+b3*a33;b0=b[4];b1=b[5];b2=b[6];b3=b[7];out[4]=b0*a00+b1*a10+b2*a20+b3*a30;out[5]=b0*a01+b1*a11+b2*a21+b3*a31;out[6]=b0*a02+b1*a12+b2*a22+b3*a32;out[7]=b0*a03+b1*a13+b2*a23+b3*a33;b0=b[8];b1=b[9];b2=b[10];b3=b[11];out[8]=b0*a00+b1*a10+b2*a20+b3*a30;out[9]=b0*a01+b1*a11+b2*a21+b3*a31;out[10]=b0*a02+b1*a12+b2*a22+b3*a32;out[11]=b0*a03+b1*a13+b2*a23+b3*a33;b0=b[12];b1=b[13];b2=b[14];b3=b[15];out[12]=b0*a00+b1*a10+b2*a20+b3*a30;out[13]=b0*a01+b1*a11+b2*a21+b3*a31;out[14]=b0*a02+b1*a12+b2*a22+b3*a32;out[15]=b0*a03+b1*a13+b2*a23+b3*a33;return out;};},{}],114:[function(_dereq_,module,exports){module.exports=perspective;/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */function perspective(out,fovy,aspect,near,far){var f=1.0/Math.tan(fovy/2),nf=1/(near-far);out[0]=f/aspect;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=f;out[6]=0;out[7]=0;out[8]=0;out[9]=0;out[10]=(far+near)*nf;out[11]=-1;out[12]=0;out[13]=0;out[14]=2*far*near*nf;out[15]=0;return out;};},{}],115:[function(_dereq_,module,exports){module.exports=rotate;/**\n * Rotates a mat4 by the given angle\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */function rotate(out,a,rad,axis){var x=axis[0],y=axis[1],z=axis[2],len=Math.sqrt(x*x+y*y+z*z),s,c,t,a00,a01,a02,a03,a10,a11,a12,a13,a20,a21,a22,a23,b00,b01,b02,b10,b11,b12,b20,b21,b22;if(Math.abs(len)<0.000001){return null;}len=1/len;x*=len;y*=len;z*=len;s=Math.sin(rad);c=Math.cos(rad);t=1-c;a00=a[0];a01=a[1];a02=a[2];a03=a[3];a10=a[4];a11=a[5];a12=a[6];a13=a[7];a20=a[8];a21=a[9];a22=a[10];a23=a[11];// Construct the elements of the rotation matrix\nb00=x*x*t+c;b01=y*x*t+z*s;b02=z*x*t-y*s;b10=x*y*t-z*s;b11=y*y*t+c;b12=z*y*t+x*s;b20=x*z*t+y*s;b21=y*z*t-x*s;b22=z*z*t+c;// Perform rotation-specific matrix multiplication\nout[0]=a00*b00+a10*b01+a20*b02;out[1]=a01*b00+a11*b01+a21*b02;out[2]=a02*b00+a12*b01+a22*b02;out[3]=a03*b00+a13*b01+a23*b02;out[4]=a00*b10+a10*b11+a20*b12;out[5]=a01*b10+a11*b11+a21*b12;out[6]=a02*b10+a12*b11+a22*b12;out[7]=a03*b10+a13*b11+a23*b12;out[8]=a00*b20+a10*b21+a20*b22;out[9]=a01*b20+a11*b21+a21*b22;out[10]=a02*b20+a12*b21+a22*b22;out[11]=a03*b20+a13*b21+a23*b22;if(a!==out){// If the source and destination differ, copy the unchanged last row\nout[12]=a[12];out[13]=a[13];out[14]=a[14];out[15]=a[15];}return out;};},{}],116:[function(_dereq_,module,exports){module.exports=rotateX;/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */function rotateX(out,a,rad){var s=Math.sin(rad),c=Math.cos(rad),a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11];if(a!==out){// If the source and destination differ, copy the unchanged rows\nout[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];out[12]=a[12];out[13]=a[13];out[14]=a[14];out[15]=a[15];}// Perform axis-specific matrix multiplication\nout[4]=a10*c+a20*s;out[5]=a11*c+a21*s;out[6]=a12*c+a22*s;out[7]=a13*c+a23*s;out[8]=a20*c-a10*s;out[9]=a21*c-a11*s;out[10]=a22*c-a12*s;out[11]=a23*c-a13*s;return out;};},{}],117:[function(_dereq_,module,exports){module.exports=rotateY;/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */function rotateY(out,a,rad){var s=Math.sin(rad),c=Math.cos(rad),a00=a[0],a01=a[1],a02=a[2],a03=a[3],a20=a[8],a21=a[9],a22=a[10],a23=a[11];if(a!==out){// If the source and destination differ, copy the unchanged rows\nout[4]=a[4];out[5]=a[5];out[6]=a[6];out[7]=a[7];out[12]=a[12];out[13]=a[13];out[14]=a[14];out[15]=a[15];}// Perform axis-specific matrix multiplication\nout[0]=a00*c-a20*s;out[1]=a01*c-a21*s;out[2]=a02*c-a22*s;out[3]=a03*c-a23*s;out[8]=a00*s+a20*c;out[9]=a01*s+a21*c;out[10]=a02*s+a22*c;out[11]=a03*s+a23*c;return out;};},{}],118:[function(_dereq_,module,exports){module.exports=rotateZ;/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */function rotateZ(out,a,rad){var s=Math.sin(rad),c=Math.cos(rad),a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7];if(a!==out){// If the source and destination differ, copy the unchanged last row\nout[8]=a[8];out[9]=a[9];out[10]=a[10];out[11]=a[11];out[12]=a[12];out[13]=a[13];out[14]=a[14];out[15]=a[15];}// Perform axis-specific matrix multiplication\nout[0]=a00*c+a10*s;out[1]=a01*c+a11*s;out[2]=a02*c+a12*s;out[3]=a03*c+a13*s;out[4]=a10*c-a00*s;out[5]=a11*c-a01*s;out[6]=a12*c-a02*s;out[7]=a13*c-a03*s;return out;};},{}],119:[function(_dereq_,module,exports){module.exports=scale;/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/function scale(out,a,v){var x=v[0],y=v[1],z=v[2];out[0]=a[0]*x;out[1]=a[1]*x;out[2]=a[2]*x;out[3]=a[3]*x;out[4]=a[4]*y;out[5]=a[5]*y;out[6]=a[6]*y;out[7]=a[7]*y;out[8]=a[8]*z;out[9]=a[9]*z;out[10]=a[10]*z;out[11]=a[11]*z;out[12]=a[12];out[13]=a[13];out[14]=a[14];out[15]=a[15];return out;};},{}],120:[function(_dereq_,module,exports){module.exports=translate;/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */function translate(out,a,v){var x=v[0],y=v[1],z=v[2],a00,a01,a02,a03,a10,a11,a12,a13,a20,a21,a22,a23;if(a===out){out[12]=a[0]*x+a[4]*y+a[8]*z+a[12];out[13]=a[1]*x+a[5]*y+a[9]*z+a[13];out[14]=a[2]*x+a[6]*y+a[10]*z+a[14];out[15]=a[3]*x+a[7]*y+a[11]*z+a[15];}else{a00=a[0];a01=a[1];a02=a[2];a03=a[3];a10=a[4];a11=a[5];a12=a[6];a13=a[7];a20=a[8];a21=a[9];a22=a[10];a23=a[11];out[0]=a00;out[1]=a01;out[2]=a02;out[3]=a03;out[4]=a10;out[5]=a11;out[6]=a12;out[7]=a13;out[8]=a20;out[9]=a21;out[10]=a22;out[11]=a23;out[12]=a00*x+a10*y+a20*z+a[12];out[13]=a01*x+a11*y+a21*z+a[13];out[14]=a02*x+a12*y+a22*z+a[14];out[15]=a03*x+a13*y+a23*z+a[15];}return out;};},{}],121:[function(_dereq_,module,exports){module.exports=transpose;/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */function transpose(out,a){// If we are transposing ourselves we can skip a few steps but have to cache some values\nif(out===a){var a01=a[1],a02=a[2],a03=a[3],a12=a[6],a13=a[7],a23=a[11];out[1]=a[4];out[2]=a[8];out[3]=a[12];out[4]=a01;out[6]=a[9];out[7]=a[13];out[8]=a02;out[9]=a12;out[11]=a[14];out[12]=a03;out[13]=a13;out[14]=a23;}else{out[0]=a[0];out[1]=a[4];out[2]=a[8];out[3]=a[12];out[4]=a[1];out[5]=a[5];out[6]=a[9];out[7]=a[13];out[8]=a[2];out[9]=a[6];out[10]=a[10];out[11]=a[14];out[12]=a[3];out[13]=a[7];out[14]=a[11];out[15]=a[15];}return out;};},{}],122:[function(_dereq_,module,exports){'use strict';var barycentric=_dereq_('barycentric');var closestPointToTriangle=_dereq_('polytope-closest-point/lib/closest_point_2d.js');module.exports=closestPointToPickLocation;function xformMatrix(m,v){var out=[0,0,0,0];for(var i=0;i<4;++i){for(var j=0;j<4;++j){out[j]+=m[4*i+j]*v[i];}}return out;}function projectVertex(v,model,view,projection,resolution){var p=xformMatrix(projection,xformMatrix(view,xformMatrix(model,[v[0],v[1],v[2],1])));for(var i=0;i<3;++i){p[i]/=p[3];}return[0.5*resolution[0]*(1.0+p[0]),0.5*resolution[1]*(1.0-p[1])];}function barycentricCoord(simplex,point){if(simplex.length===2){var d0=0.0;var d1=0.0;for(var i=0;i<2;++i){d0+=Math.pow(point[i]-simplex[0][i],2);d1+=Math.pow(point[i]-simplex[1][i],2);}d0=Math.sqrt(d0);d1=Math.sqrt(d1);if(d0+d1<1e-6){return[1,0];}return[d1/(d0+d1),d0/(d1+d0)];}else if(simplex.length===3){var closestPoint=[0,0];closestPointToTriangle(simplex[0],simplex[1],simplex[2],point,closestPoint);return barycentric(simplex,closestPoint);}return[];}function interpolate(simplex,weights){var result=[0,0,0];for(var i=0;i<simplex.length;++i){var p=simplex[i];var w=weights[i];for(var j=0;j<3;++j){result[j]+=w*p[j];}}return result;}function closestPointToPickLocation(simplex,pixelCoord,model,view,projection,resolution){if(simplex.length===1){return[0,simplex[0].slice()];}var simplex2D=new Array(simplex.length);for(var i=0;i<simplex.length;++i){simplex2D[i]=projectVertex(simplex[i],model,view,projection,resolution);}var closestIndex=0;var closestDist=Infinity;for(var i=0;i<simplex2D.length;++i){var d2=0.0;for(var j=0;j<2;++j){d2+=Math.pow(simplex2D[i][j]-pixelCoord[j],2);}if(d2<closestDist){closestDist=d2;closestIndex=i;}}var weights=barycentricCoord(simplex2D,pixelCoord);var s=0.0;for(var i=0;i<3;++i){if(weights[i]<-0.001||weights[i]>1.0001){return null;}s+=weights[i];}if(Math.abs(s-1.0)>0.001){return null;}return[closestIndex,interpolate(simplex,weights),weights];}},{\"barycentric\":13,\"polytope-closest-point/lib/closest_point_2d.js\":231}],123:[function(_dereq_,module,exports){var glslify=_dereq_('glslify');var triVertSrc=glslify([\"precision highp float;\\n#define GLSLIFY 1\\n\\nattribute vec3 position, normal;\\nattribute vec4 color;\\nattribute vec2 uv;\\n\\nuniform mat4 model\\n           , view\\n           , projection;\\nuniform vec3 eyePosition\\n           , lightPosition;\\n\\nvarying vec3 f_normal\\n           , f_lightDirection\\n           , f_eyeDirection\\n           , f_data;\\nvarying vec4 f_color;\\nvarying vec2 f_uv;\\n\\nvoid main() {\\n  vec4 m_position  = model * vec4(position, 1.0);\\n  vec4 t_position  = view * m_position;\\n  gl_Position      = projection * t_position;\\n  f_color          = color;\\n  f_normal         = normal;\\n  f_data           = position;\\n  f_eyeDirection   = eyePosition   - position;\\n  f_lightDirection = lightPosition - position;\\n  f_uv             = uv;\\n}\\n\"]);var triFragSrc=glslify([\"#extension GL_OES_standard_derivatives : enable\\n\\nprecision highp float;\\n#define GLSLIFY 1\\n\\nfloat beckmannDistribution(float x, float roughness) {\\n  float NdotH = max(x, 0.0001);\\n  float cos2Alpha = NdotH * NdotH;\\n  float tan2Alpha = (cos2Alpha - 1.0) / cos2Alpha;\\n  float roughness2 = roughness * roughness;\\n  float denom = 3.141592653589793 * roughness2 * cos2Alpha * cos2Alpha;\\n  return exp(tan2Alpha / roughness2) / denom;\\n}\\n\\nfloat cookTorranceSpecular(\\n  vec3 lightDirection,\\n  vec3 viewDirection,\\n  vec3 surfaceNormal,\\n  float roughness,\\n  float fresnel) {\\n\\n  float VdotN = max(dot(viewDirection, surfaceNormal), 0.0);\\n  float LdotN = max(dot(lightDirection, surfaceNormal), 0.0);\\n\\n  //Half angle vector\\n  vec3 H = normalize(lightDirection + viewDirection);\\n\\n  //Geometric term\\n  float NdotH = max(dot(surfaceNormal, H), 0.0);\\n  float VdotH = max(dot(viewDirection, H), 0.000001);\\n  float LdotH = max(dot(lightDirection, H), 0.000001);\\n  float G1 = (2.0 * NdotH * VdotN) / VdotH;\\n  float G2 = (2.0 * NdotH * LdotN) / LdotH;\\n  float G = min(1.0, min(G1, G2));\\n  \\n  //Distribution term\\n  float D = beckmannDistribution(NdotH, roughness);\\n\\n  //Fresnel term\\n  float F = pow(1.0 - VdotN, fresnel);\\n\\n  //Multiply terms and done\\n  return  G * F * D / max(3.14159265 * VdotN, 0.000001);\\n}\\n\\nvec3 normals(vec3 pos) {\\n  vec3 fdx = dFdx(pos);\\n  vec3 fdy = dFdy(pos);\\n  return normalize(cross(fdx, fdy));\\n}\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nuniform vec3 clipBounds[2];\\nuniform float roughness\\n            , fresnel\\n            , kambient\\n            , kdiffuse\\n            , kspecular\\n            , opacity;\\nuniform sampler2D texture;\\n\\nvarying vec3 f_normal\\n           , f_lightDirection\\n           , f_eyeDirection\\n           , f_data;\\nvarying vec4 f_color;\\nvarying vec2 f_uv;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], f_data)) discard;\\n\\n  vec3 N = normalize(f_normal);\\n  vec3 L = normalize(f_lightDirection);\\n  vec3 V = normalize(f_eyeDirection);\\n\\n  vec3 normal = normals(f_data);\\n\\n  if (dot(N, normal) < 0.0) {\\n    N = -N;\\n  }\\n\\n  float specular = cookTorranceSpecular(L, V, N, roughness, fresnel);\\n  float diffuse  = min(kambient + kdiffuse * max(dot(N, L), 0.0), 1.0);\\n\\n  vec4 surfaceColor = f_color * texture2D(texture, f_uv);\\n  vec4 litColor = surfaceColor.a * vec4(diffuse * surfaceColor.rgb + kspecular * vec3(1,1,1) * specular,  1.0);\\n\\n  gl_FragColor = litColor * opacity;\\n}\\n\"]);var edgeVertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nattribute vec3 position;\\nattribute vec4 color;\\nattribute vec2 uv;\\n\\nuniform mat4 model, view, projection;\\n\\nvarying vec4 f_color;\\nvarying vec3 f_data;\\nvarying vec2 f_uv;\\n\\nvoid main() {\\n  gl_Position = projection * view * model * vec4(position, 1.0);\\n  f_color = color;\\n  f_data  = position;\\n  f_uv    = uv;\\n}\"]);var edgeFragSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nuniform vec3 clipBounds[2];\\nuniform sampler2D texture;\\nuniform float opacity;\\n\\nvarying vec4 f_color;\\nvarying vec3 f_data;\\nvarying vec2 f_uv;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], f_data)) discard;\\n\\n  gl_FragColor = f_color * texture2D(texture, f_uv) * opacity;\\n}\"]);var pointVertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nattribute vec3 position;\\nattribute vec4 color;\\nattribute vec2 uv;\\nattribute float pointSize;\\n\\nuniform mat4 model, view, projection;\\nuniform vec3 clipBounds[2];\\n\\nvarying vec4 f_color;\\nvarying vec2 f_uv;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], position)) {\\n\\n    gl_Position = vec4(0,0,0,0);\\n  } else {\\n    gl_Position = projection * view * model * vec4(position, 1.0);\\n  }\\n  gl_PointSize = pointSize;\\n  f_color = color;\\n  f_uv = uv;\\n}\"]);var pointFragSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D texture;\\nuniform float opacity;\\n\\nvarying vec4 f_color;\\nvarying vec2 f_uv;\\n\\nvoid main() {\\n  vec2 pointR = gl_PointCoord.xy - vec2(0.5,0.5);\\n  if(dot(pointR, pointR) > 0.25) {\\n    discard;\\n  }\\n  gl_FragColor = f_color * texture2D(texture, f_uv) * opacity;\\n}\"]);var pickVertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nattribute vec3 position;\\nattribute vec4 id;\\n\\nuniform mat4 model, view, projection;\\n\\nvarying vec3 f_position;\\nvarying vec4 f_id;\\n\\nvoid main() {\\n  gl_Position = projection * view * model * vec4(position, 1.0);\\n  f_id        = id;\\n  f_position  = position;\\n}\"]);var pickFragSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nuniform vec3  clipBounds[2];\\nuniform float pickId;\\n\\nvarying vec3 f_position;\\nvarying vec4 f_id;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], f_position)) discard;\\n\\n  gl_FragColor = vec4(pickId, f_id.xyz);\\n}\"]);var pickPointVertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nattribute vec3  position;\\nattribute float pointSize;\\nattribute vec4  id;\\n\\nuniform mat4 model, view, projection;\\nuniform vec3 clipBounds[2];\\n\\nvarying vec3 f_position;\\nvarying vec4 f_id;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], position)) {\\n\\n    gl_Position = vec4(0,0,0,0);\\n  } else {\\n    gl_Position  = projection * view * model * vec4(position, 1.0);\\n    gl_PointSize = pointSize;\\n  }\\n  f_id         = id;\\n  f_position   = position;\\n}\"]);var contourVertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nattribute vec3 position;\\n\\nuniform mat4 model, view, projection;\\n\\nvoid main() {\\n  gl_Position = projection * view * model * vec4(position, 1.0);\\n}\"]);var contourFragSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform vec3 contourColor;\\n\\nvoid main() {\\n  gl_FragColor = vec4(contourColor,1);\\n}\\n\"]);exports.meshShader={vertex:triVertSrc,fragment:triFragSrc,attributes:[{name:'position',type:'vec3'},{name:'normal',type:'vec3'},{name:'color',type:'vec4'},{name:'uv',type:'vec2'}]};exports.wireShader={vertex:edgeVertSrc,fragment:edgeFragSrc,attributes:[{name:'position',type:'vec3'},{name:'color',type:'vec4'},{name:'uv',type:'vec2'}]};exports.pointShader={vertex:pointVertSrc,fragment:pointFragSrc,attributes:[{name:'position',type:'vec3'},{name:'color',type:'vec4'},{name:'uv',type:'vec2'},{name:'pointSize',type:'float'}]};exports.pickShader={vertex:pickVertSrc,fragment:pickFragSrc,attributes:[{name:'position',type:'vec3'},{name:'id',type:'vec4'}]};exports.pointPickShader={vertex:pickPointVertSrc,fragment:pickFragSrc,attributes:[{name:'position',type:'vec3'},{name:'pointSize',type:'float'},{name:'id',type:'vec4'}]};exports.contourShader={vertex:contourVertSrc,fragment:contourFragSrc,attributes:[{name:'position',type:'vec3'}]};},{\"glslify\":162}],124:[function(_dereq_,module,exports){'use strict';var DEFAULT_VERTEX_NORMALS_EPSILON=1e-6;// may be too large if triangles are very small\nvar DEFAULT_FACE_NORMALS_EPSILON=1e-6;var createShader=_dereq_('gl-shader');var createBuffer=_dereq_('gl-buffer');var createVAO=_dereq_('gl-vao');var createTexture=_dereq_('gl-texture2d');var normals=_dereq_('normals');var multiply=_dereq_('gl-mat4/multiply');var invert=_dereq_('gl-mat4/invert');var ndarray=_dereq_('ndarray');var colormap=_dereq_('colormap');var getContour=_dereq_('simplicial-complex-contour');var pool=_dereq_('typedarray-pool');var shaders=_dereq_('./lib/shaders');var closestPoint=_dereq_('./lib/closest-point');var meshShader=shaders.meshShader;var wireShader=shaders.wireShader;var pointShader=shaders.pointShader;var pickShader=shaders.pickShader;var pointPickShader=shaders.pointPickShader;var contourShader=shaders.contourShader;var identityMatrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];function SimplicialMesh(gl,texture,triShader,lineShader,pointShader,pickShader,pointPickShader,contourShader,trianglePositions,triangleIds,triangleColors,triangleUVs,triangleNormals,triangleVAO,edgePositions,edgeIds,edgeColors,edgeUVs,edgeVAO,pointPositions,pointIds,pointColors,pointUVs,pointSizes,pointVAO,contourPositions,contourVAO){this.gl=gl;this.cells=[];this.positions=[];this.intensity=[];this.texture=texture;this.dirty=true;this.triShader=triShader;this.lineShader=lineShader;this.pointShader=pointShader;this.pickShader=pickShader;this.pointPickShader=pointPickShader;this.contourShader=contourShader;this.trianglePositions=trianglePositions;this.triangleColors=triangleColors;this.triangleNormals=triangleNormals;this.triangleUVs=triangleUVs;this.triangleIds=triangleIds;this.triangleVAO=triangleVAO;this.triangleCount=0;this.lineWidth=1;this.edgePositions=edgePositions;this.edgeColors=edgeColors;this.edgeUVs=edgeUVs;this.edgeIds=edgeIds;this.edgeVAO=edgeVAO;this.edgeCount=0;this.pointPositions=pointPositions;this.pointColors=pointColors;this.pointUVs=pointUVs;this.pointSizes=pointSizes;this.pointIds=pointIds;this.pointVAO=pointVAO;this.pointCount=0;this.contourLineWidth=1;this.contourPositions=contourPositions;this.contourVAO=contourVAO;this.contourCount=0;this.contourColor=[0,0,0];this.contourEnable=true;this.pickId=1;this.bounds=[[Infinity,Infinity,Infinity],[-Infinity,-Infinity,-Infinity]];this.clipBounds=[[-Infinity,-Infinity,-Infinity],[Infinity,Infinity,Infinity]];this.lightPosition=[1e5,1e5,0];this.ambientLight=0.8;this.diffuseLight=0.8;this.specularLight=2.0;this.roughness=0.5;this.fresnel=1.5;this.opacity=1.0;this._model=identityMatrix;this._view=identityMatrix;this._projection=identityMatrix;this._resolution=[1,1];}var proto=SimplicialMesh.prototype;proto.isOpaque=function(){return this.opacity>=1;};proto.isTransparent=function(){return this.opacity<1;};proto.pickSlots=1;proto.setPickBase=function(id){this.pickId=id;};function genColormap(param){var colors=colormap({colormap:param,nshades:256,format:'rgba'});var result=new Uint8Array(256*4);for(var i=0;i<256;++i){var c=colors[i];for(var j=0;j<3;++j){result[4*i+j]=c[j];}result[4*i+3]=c[3]*255;}return ndarray(result,[256,256,4],[4,0,1]);}function unpackIntensity(cells,numVerts,cellIntensity){var result=new Array(numVerts);for(var i=0;i<numVerts;++i){result[i]=0;}var numCells=cells.length;for(var i=0;i<numCells;++i){var c=cells[i];for(var j=0;j<c.length;++j){result[c[j]]=cellIntensity[i];}}return result;}function takeZComponent(array){var n=array.length;var result=new Array(n);for(var i=0;i<n;++i){result[i]=array[i][2];}return result;}proto.highlight=function(selection){if(!selection||!this.contourEnable){this.contourCount=0;return;}var level=getContour(this.cells,this.intensity,selection.intensity);var cells=level.cells;var vertexIds=level.vertexIds;var vertexWeights=level.vertexWeights;var numCells=cells.length;var result=pool.mallocFloat32(2*3*numCells);var ptr=0;for(var i=0;i<numCells;++i){var c=cells[i];for(var j=0;j<2;++j){var v=c[0];if(c.length===2){v=c[j];}var a=vertexIds[v][0];var b=vertexIds[v][1];var w=vertexWeights[v];var wi=1.0-w;var pa=this.positions[a];var pb=this.positions[b];for(var k=0;k<3;++k){result[ptr++]=w*pa[k]+wi*pb[k];}}}this.contourCount=ptr/3|0;this.contourPositions.update(result.subarray(0,ptr));pool.free(result);};proto.update=function(params){params=params||{};var gl=this.gl;this.dirty=true;if('contourEnable'in params){this.contourEnable=params.contourEnable;}if('contourColor'in params){this.contourColor=params.contourColor;}if('lineWidth'in params){this.lineWidth=params.lineWidth;}if('lightPosition'in params){this.lightPosition=params.lightPosition;}if('opacity'in params){this.opacity=params.opacity;}if('ambient'in params){this.ambientLight=params.ambient;}if('diffuse'in params){this.diffuseLight=params.diffuse;}if('specular'in params){this.specularLight=params.specular;}if('roughness'in params){this.roughness=params.roughness;}if('fresnel'in params){this.fresnel=params.fresnel;}if(params.texture){this.texture.dispose();this.texture=createTexture(gl,params.texture);}else if(params.colormap){this.texture.shape=[256,256];this.texture.minFilter=gl.LINEAR_MIPMAP_LINEAR;this.texture.magFilter=gl.LINEAR;this.texture.setPixels(genColormap(params.colormap));this.texture.generateMipmap();}var cells=params.cells;var positions=params.positions;if(!positions||!cells){return;}var tPos=[];var tCol=[];var tNor=[];var tUVs=[];var tIds=[];var ePos=[];var eCol=[];var eUVs=[];var eIds=[];var pPos=[];var pCol=[];var pUVs=[];var pSiz=[];var pIds=[];//Save geometry data for picking calculations\nthis.cells=cells;this.positions=positions;//Compute normals\nvar vertexNormals=params.vertexNormals;var cellNormals=params.cellNormals;var vertexNormalsEpsilon=params.vertexNormalsEpsilon===void 0?DEFAULT_VERTEX_NORMALS_EPSILON:params.vertexNormalsEpsilon;var faceNormalsEpsilon=params.faceNormalsEpsilon===void 0?DEFAULT_FACE_NORMALS_EPSILON:params.faceNormalsEpsilon;if(params.useFacetNormals&&!cellNormals){cellNormals=normals.faceNormals(cells,positions,faceNormalsEpsilon);}if(!cellNormals&&!vertexNormals){vertexNormals=normals.vertexNormals(cells,positions,vertexNormalsEpsilon);}//Compute colors\nvar vertexColors=params.vertexColors;var cellColors=params.cellColors;var meshColor=params.meshColor||[1,1,1,1];//UVs\nvar vertexUVs=params.vertexUVs;var vertexIntensity=params.vertexIntensity;var cellUVs=params.cellUVs;var cellIntensity=params.cellIntensity;var intensityLo=Infinity;var intensityHi=-Infinity;if(!vertexUVs&&!cellUVs){if(vertexIntensity){if(params.vertexIntensityBounds){intensityLo=+params.vertexIntensityBounds[0];intensityHi=+params.vertexIntensityBounds[1];}else{for(var i=0;i<vertexIntensity.length;++i){var f=vertexIntensity[i];intensityLo=Math.min(intensityLo,f);intensityHi=Math.max(intensityHi,f);}}}else if(cellIntensity){for(var i=0;i<cellIntensity.length;++i){var f=cellIntensity[i];intensityLo=Math.min(intensityLo,f);intensityHi=Math.max(intensityHi,f);}}else{for(var i=0;i<positions.length;++i){var f=positions[i][2];intensityLo=Math.min(intensityLo,f);intensityHi=Math.max(intensityHi,f);}}}if(vertexIntensity){this.intensity=vertexIntensity;}else if(cellIntensity){this.intensity=unpackIntensity(cells,positions.length,cellIntensity);}else{this.intensity=takeZComponent(positions);}//Point size\nvar pointSizes=params.pointSizes;var meshPointSize=params.pointSize||1.0;//Update bounds\nthis.bounds=[[Infinity,Infinity,Infinity],[-Infinity,-Infinity,-Infinity]];for(var i=0;i<positions.length;++i){var p=positions[i];for(var j=0;j<3;++j){if(isNaN(p[j])||!isFinite(p[j])){continue;}this.bounds[0][j]=Math.min(this.bounds[0][j],p[j]);this.bounds[1][j]=Math.max(this.bounds[1][j],p[j]);}}//Pack cells into buffers\nvar triangleCount=0;var edgeCount=0;var pointCount=0;fill_loop:for(var i=0;i<cells.length;++i){var cell=cells[i];switch(cell.length){case 1:var v=cell[0];var p=positions[v];//Check NaNs\nfor(var j=0;j<3;++j){if(isNaN(p[j])||!isFinite(p[j])){continue fill_loop;}}pPos.push(p[0],p[1],p[2]);var c;if(vertexColors){c=vertexColors[v];}else if(cellColors){c=cellColors[i];}else{c=meshColor;}if(c.length===3){pCol.push(c[0],c[1],c[2],1);}else{pCol.push(c[0],c[1],c[2],c[3]);}var uv;if(vertexUVs){uv=vertexUVs[v];}else if(vertexIntensity){uv=[(vertexIntensity[v]-intensityLo)/(intensityHi-intensityLo),0];}else if(cellUVs){uv=cellUVs[i];}else if(cellIntensity){uv=[(cellIntensity[i]-intensityLo)/(intensityHi-intensityLo),0];}else{uv=[(p[2]-intensityLo)/(intensityHi-intensityLo),0];}pUVs.push(uv[0],uv[1]);if(pointSizes){pSiz.push(pointSizes[v]);}else{pSiz.push(meshPointSize);}pIds.push(i);pointCount+=1;break;case 2://Check NaNs\nfor(var j=0;j<2;++j){var v=cell[j];var p=positions[v];for(var k=0;k<3;++k){if(isNaN(p[k])||!isFinite(p[k])){continue fill_loop;}}}for(var j=0;j<2;++j){var v=cell[j];var p=positions[v];ePos.push(p[0],p[1],p[2]);var c;if(vertexColors){c=vertexColors[v];}else if(cellColors){c=cellColors[i];}else{c=meshColor;}if(c.length===3){eCol.push(c[0],c[1],c[2],1);}else{eCol.push(c[0],c[1],c[2],c[3]);}var uv;if(vertexUVs){uv=vertexUVs[v];}else if(vertexIntensity){uv=[(vertexIntensity[v]-intensityLo)/(intensityHi-intensityLo),0];}else if(cellUVs){uv=cellUVs[i];}else if(cellIntensity){uv=[(cellIntensity[i]-intensityLo)/(intensityHi-intensityLo),0];}else{uv=[(p[2]-intensityLo)/(intensityHi-intensityLo),0];}eUVs.push(uv[0],uv[1]);eIds.push(i);}edgeCount+=1;break;case 3://Check NaNs\nfor(var j=0;j<3;++j){var v=cell[j];var p=positions[v];for(var k=0;k<3;++k){if(isNaN(p[k])||!isFinite(p[k])){continue fill_loop;}}}for(var j=0;j<3;++j){var v=cell[j];var p=positions[v];tPos.push(p[0],p[1],p[2]);var c;if(vertexColors){c=vertexColors[v];}else if(cellColors){c=cellColors[i];}else{c=meshColor;}if(c.length===3){tCol.push(c[0],c[1],c[2],1);}else{tCol.push(c[0],c[1],c[2],c[3]);}var uv;if(vertexUVs){uv=vertexUVs[v];}else if(vertexIntensity){uv=[(vertexIntensity[v]-intensityLo)/(intensityHi-intensityLo),0];}else if(cellUVs){uv=cellUVs[i];}else if(cellIntensity){uv=[(cellIntensity[i]-intensityLo)/(intensityHi-intensityLo),0];}else{uv=[(p[2]-intensityLo)/(intensityHi-intensityLo),0];}tUVs.push(uv[0],uv[1]);var q;if(vertexNormals){q=vertexNormals[v];}else{q=cellNormals[i];}tNor.push(q[0],q[1],q[2]);tIds.push(i);}triangleCount+=1;break;default:break;}}this.pointCount=pointCount;this.edgeCount=edgeCount;this.triangleCount=triangleCount;this.pointPositions.update(pPos);this.pointColors.update(pCol);this.pointUVs.update(pUVs);this.pointSizes.update(pSiz);this.pointIds.update(new Uint32Array(pIds));this.edgePositions.update(ePos);this.edgeColors.update(eCol);this.edgeUVs.update(eUVs);this.edgeIds.update(new Uint32Array(eIds));this.trianglePositions.update(tPos);this.triangleColors.update(tCol);this.triangleUVs.update(tUVs);this.triangleNormals.update(tNor);this.triangleIds.update(new Uint32Array(tIds));};proto.drawTransparent=proto.draw=function(params){params=params||{};var gl=this.gl;var model=params.model||identityMatrix;var view=params.view||identityMatrix;var projection=params.projection||identityMatrix;var clipBounds=[[-1e6,-1e6,-1e6],[1e6,1e6,1e6]];for(var i=0;i<3;++i){clipBounds[0][i]=Math.max(clipBounds[0][i],this.clipBounds[0][i]);clipBounds[1][i]=Math.min(clipBounds[1][i],this.clipBounds[1][i]);}var uniforms={model:model,view:view,projection:projection,clipBounds:clipBounds,kambient:this.ambientLight,kdiffuse:this.diffuseLight,kspecular:this.specularLight,roughness:this.roughness,fresnel:this.fresnel,eyePosition:[0,0,0],lightPosition:[0,0,0],opacity:this.opacity,contourColor:this.contourColor,texture:0};this.texture.bind(0);var invCameraMatrix=new Array(16);multiply(invCameraMatrix,uniforms.view,uniforms.model);multiply(invCameraMatrix,uniforms.projection,invCameraMatrix);invert(invCameraMatrix,invCameraMatrix);for(var i=0;i<3;++i){uniforms.eyePosition[i]=invCameraMatrix[12+i]/invCameraMatrix[15];}var w=invCameraMatrix[15];for(var i=0;i<3;++i){w+=this.lightPosition[i]*invCameraMatrix[4*i+3];}for(var i=0;i<3;++i){var s=invCameraMatrix[12+i];for(var j=0;j<3;++j){s+=invCameraMatrix[4*j+i]*this.lightPosition[j];}uniforms.lightPosition[i]=s/w;}if(this.triangleCount>0){var shader=this.triShader;shader.bind();shader.uniforms=uniforms;this.triangleVAO.bind();gl.drawArrays(gl.TRIANGLES,0,this.triangleCount*3);this.triangleVAO.unbind();}if(this.edgeCount>0&&this.lineWidth>0){var shader=this.lineShader;shader.bind();shader.uniforms=uniforms;this.edgeVAO.bind();gl.lineWidth(this.lineWidth);gl.drawArrays(gl.LINES,0,this.edgeCount*2);this.edgeVAO.unbind();}if(this.pointCount>0){var shader=this.pointShader;shader.bind();shader.uniforms=uniforms;this.pointVAO.bind();gl.drawArrays(gl.POINTS,0,this.pointCount);this.pointVAO.unbind();}if(this.contourEnable&&this.contourCount>0&&this.contourLineWidth>0){var shader=this.contourShader;shader.bind();shader.uniforms=uniforms;this.contourVAO.bind();gl.drawArrays(gl.LINES,0,this.contourCount);this.contourVAO.unbind();}};proto.drawPick=function(params){params=params||{};var gl=this.gl;var model=params.model||identityMatrix;var view=params.view||identityMatrix;var projection=params.projection||identityMatrix;var clipBounds=[[-1e6,-1e6,-1e6],[1e6,1e6,1e6]];for(var i=0;i<3;++i){clipBounds[0][i]=Math.max(clipBounds[0][i],this.clipBounds[0][i]);clipBounds[1][i]=Math.min(clipBounds[1][i],this.clipBounds[1][i]);}//Save camera parameters\nthis._model=[].slice.call(model);this._view=[].slice.call(view);this._projection=[].slice.call(projection);this._resolution=[gl.drawingBufferWidth,gl.drawingBufferHeight];var uniforms={model:model,view:view,projection:projection,clipBounds:clipBounds,pickId:this.pickId/255.0};var shader=this.pickShader;shader.bind();shader.uniforms=uniforms;if(this.triangleCount>0){this.triangleVAO.bind();gl.drawArrays(gl.TRIANGLES,0,this.triangleCount*3);this.triangleVAO.unbind();}if(this.edgeCount>0){this.edgeVAO.bind();gl.lineWidth(this.lineWidth);gl.drawArrays(gl.LINES,0,this.edgeCount*2);this.edgeVAO.unbind();}if(this.pointCount>0){var shader=this.pointPickShader;shader.bind();shader.uniforms=uniforms;this.pointVAO.bind();gl.drawArrays(gl.POINTS,0,this.pointCount);this.pointVAO.unbind();}};proto.pick=function(pickData){if(!pickData){return null;}if(pickData.id!==this.pickId){return null;}var cellId=pickData.value[0]+256*pickData.value[1]+65536*pickData.value[2];var cell=this.cells[cellId];var positions=this.positions;var simplex=new Array(cell.length);for(var i=0;i<cell.length;++i){simplex[i]=positions[cell[i]];}var data=closestPoint(simplex,[pickData.coord[0],this._resolution[1]-pickData.coord[1]],this._model,this._view,this._projection,this._resolution);if(!data){return null;}var weights=data[2];var interpIntensity=0.0;for(var i=0;i<cell.length;++i){interpIntensity+=weights[i]*this.intensity[cell[i]];}return{position:data[1],index:cell[data[0]],cell:cell,cellId:cellId,intensity:interpIntensity,dataCoordinate:this.positions[cell[data[0]]]};};proto.dispose=function(){this.texture.dispose();this.triShader.dispose();this.lineShader.dispose();this.pointShader.dispose();this.pickShader.dispose();this.pointPickShader.dispose();this.triangleVAO.dispose();this.trianglePositions.dispose();this.triangleColors.dispose();this.triangleUVs.dispose();this.triangleNormals.dispose();this.triangleIds.dispose();this.edgeVAO.dispose();this.edgePositions.dispose();this.edgeColors.dispose();this.edgeUVs.dispose();this.edgeIds.dispose();this.pointVAO.dispose();this.pointPositions.dispose();this.pointColors.dispose();this.pointUVs.dispose();this.pointSizes.dispose();this.pointIds.dispose();this.contourVAO.dispose();this.contourPositions.dispose();this.contourShader.dispose();};function createMeshShader(gl){var shader=createShader(gl,meshShader.vertex,meshShader.fragment);shader.attributes.position.location=0;shader.attributes.color.location=2;shader.attributes.uv.location=3;shader.attributes.normal.location=4;return shader;}function createWireShader(gl){var shader=createShader(gl,wireShader.vertex,wireShader.fragment);shader.attributes.position.location=0;shader.attributes.color.location=2;shader.attributes.uv.location=3;return shader;}function createPointShader(gl){var shader=createShader(gl,pointShader.vertex,pointShader.fragment);shader.attributes.position.location=0;shader.attributes.color.location=2;shader.attributes.uv.location=3;shader.attributes.pointSize.location=4;return shader;}function createPickShader(gl){var shader=createShader(gl,pickShader.vertex,pickShader.fragment);shader.attributes.position.location=0;shader.attributes.id.location=1;return shader;}function createPointPickShader(gl){var shader=createShader(gl,pointPickShader.vertex,pointPickShader.fragment);shader.attributes.position.location=0;shader.attributes.id.location=1;shader.attributes.pointSize.location=4;return shader;}function createContourShader(gl){var shader=createShader(gl,contourShader.vertex,contourShader.fragment);shader.attributes.position.location=0;return shader;}function createSimplicialMesh(gl,params){if(arguments.length===1){params=gl;gl=params.gl;}//enable derivatives for face normals\nvar ext=gl.getExtension('OES_standard_derivatives')||gl.getExtension('MOZ_OES_standard_derivatives')||gl.getExtension('WEBKIT_OES_standard_derivatives');if(!ext)throw new Error('derivatives not supported');var triShader=createMeshShader(gl);var lineShader=createWireShader(gl);var pointShader=createPointShader(gl);var pickShader=createPickShader(gl);var pointPickShader=createPointPickShader(gl);var contourShader=createContourShader(gl);var meshTexture=createTexture(gl,ndarray(new Uint8Array([255,255,255,255]),[1,1,4]));meshTexture.generateMipmap();meshTexture.minFilter=gl.LINEAR_MIPMAP_LINEAR;meshTexture.magFilter=gl.LINEAR;var trianglePositions=createBuffer(gl);var triangleColors=createBuffer(gl);var triangleUVs=createBuffer(gl);var triangleNormals=createBuffer(gl);var triangleIds=createBuffer(gl);var triangleVAO=createVAO(gl,[{buffer:trianglePositions,type:gl.FLOAT,size:3},{buffer:triangleIds,type:gl.UNSIGNED_BYTE,size:4,normalized:true},{buffer:triangleColors,type:gl.FLOAT,size:4},{buffer:triangleUVs,type:gl.FLOAT,size:2},{buffer:triangleNormals,type:gl.FLOAT,size:3}]);var edgePositions=createBuffer(gl);var edgeColors=createBuffer(gl);var edgeUVs=createBuffer(gl);var edgeIds=createBuffer(gl);var edgeVAO=createVAO(gl,[{buffer:edgePositions,type:gl.FLOAT,size:3},{buffer:edgeIds,type:gl.UNSIGNED_BYTE,size:4,normalized:true},{buffer:edgeColors,type:gl.FLOAT,size:4},{buffer:edgeUVs,type:gl.FLOAT,size:2}]);var pointPositions=createBuffer(gl);var pointColors=createBuffer(gl);var pointUVs=createBuffer(gl);var pointSizes=createBuffer(gl);var pointIds=createBuffer(gl);var pointVAO=createVAO(gl,[{buffer:pointPositions,type:gl.FLOAT,size:3},{buffer:pointIds,type:gl.UNSIGNED_BYTE,size:4,normalized:true},{buffer:pointColors,type:gl.FLOAT,size:4},{buffer:pointUVs,type:gl.FLOAT,size:2},{buffer:pointSizes,type:gl.FLOAT,size:1}]);var contourPositions=createBuffer(gl);var contourVAO=createVAO(gl,[{buffer:contourPositions,type:gl.FLOAT,size:3}]);var mesh=new SimplicialMesh(gl,meshTexture,triShader,lineShader,pointShader,pickShader,pointPickShader,contourShader,trianglePositions,triangleIds,triangleColors,triangleUVs,triangleNormals,triangleVAO,edgePositions,edgeIds,edgeColors,edgeUVs,edgeVAO,pointPositions,pointIds,pointColors,pointUVs,pointSizes,pointVAO,contourPositions,contourVAO);mesh.update(params);return mesh;}module.exports=createSimplicialMesh;},{\"./lib/closest-point\":122,\"./lib/shaders\":123,\"colormap\":60,\"gl-buffer\":93,\"gl-mat4/invert\":111,\"gl-mat4/multiply\":113,\"gl-shader\":133,\"gl-texture2d\":142,\"gl-vao\":146,\"ndarray\":192,\"normals\":195,\"simplicial-complex-contour\":252,\"typedarray-pool\":270}],125:[function(_dereq_,module,exports){var glslify=_dereq_('glslify');var createShader=_dereq_('gl-shader');var vertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\nattribute vec2 position;\\nvarying vec2 uv;\\nvoid main() {\\n  uv = position;\\n  gl_Position = vec4(position, 0, 1);\\n}\"]);var fragSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D accumBuffer;\\nvarying vec2 uv;\\n\\nvoid main() {\\n  vec4 accum = texture2D(accumBuffer, 0.5 * (uv + 1.0));\\n  gl_FragColor = min(vec4(1,1,1,1), accum);\\n}\"]);module.exports=function(gl){return createShader(gl,vertSrc,fragSrc,null,[{name:'position',type:'vec2'}]);};},{\"gl-shader\":133,\"glslify\":162}],126:[function(_dereq_,module,exports){'use strict';module.exports=createScene;var createCamera=_dereq_('3d-view-controls');var createAxes=_dereq_('gl-axes3d');var axesRanges=_dereq_('gl-axes3d/properties');var createSpikes=_dereq_('gl-spikes3d');var createSelect=_dereq_('gl-select-static');var createFBO=_dereq_('gl-fbo');var drawTriangle=_dereq_('a-big-triangle');var mouseChange=_dereq_('mouse-change');var perspective=_dereq_('gl-mat4/perspective');var createShader=_dereq_('./lib/shader');var isMobile=_dereq_('is-mobile')({tablet:true});function MouseSelect(){this.mouse=[-1,-1];this.screen=null;this.distance=Infinity;this.index=null;this.dataCoordinate=null;this.dataPosition=null;this.object=null;this.data=null;}function getContext(canvas,options){var gl=null;try{gl=canvas.getContext('webgl',options);if(!gl){gl=canvas.getContext('experimental-webgl',options);}}catch(e){return null;}return gl;}function roundUpPow10(x){var y=Math.round(Math.log(Math.abs(x))/Math.log(10));if(y<0){var base=Math.round(Math.pow(10,-y));return Math.ceil(x*base)/base;}else if(y>0){var base=Math.round(Math.pow(10,y));return Math.ceil(x/base)*base;}return Math.ceil(x);}function defaultBool(x){if(typeof x==='boolean'){return x;}return true;}function createScene(options){options=options||{};var stopped=false;var pixelRatio=options.pixelRatio||parseFloat(window.devicePixelRatio);var canvas=options.canvas;if(!canvas){canvas=document.createElement('canvas');if(options.container){var container=options.container;container.appendChild(canvas);}else{document.body.appendChild(canvas);}}var gl=options.gl;if(!gl){gl=getContext(canvas,options.glOptions||{premultipliedAlpha:true,antialias:true,preserveDrawingBuffer:isMobile});}if(!gl){throw new Error('webgl not supported');}//Initial bounds\nvar bounds=options.bounds||[[-10,-10,-10],[10,10,10]];//Create selection\nvar selection=new MouseSelect();//Accumulation buffer\nvar accumBuffer=createFBO(gl,[gl.drawingBufferWidth,gl.drawingBufferHeight],{preferFloat:!isMobile});var accumShader=createShader(gl);//Create a camera\nvar cameraOptions=options.camera||{eye:[2,0,0],center:[0,0,0],up:[0,1,0],zoomMin:0.1,zoomMax:100,mode:'turntable'//Create axes\n};var axesOptions=options.axes||{};var axes=createAxes(gl,axesOptions);axes.enable=!axesOptions.disable;//Create spikes\nvar spikeOptions=options.spikes||{};var spikes=createSpikes(gl,spikeOptions);//Object list is empty initially\nvar objects=[];var pickBufferIds=[];var pickBufferCount=[];var pickBuffers=[];//Dirty flag, skip redraw if scene static\nvar dirty=true;var pickDirty=true;var projection=new Array(16);var model=new Array(16);var cameraParams={view:null,projection:projection,model:model};var pickDirty=true;var viewShape=[gl.drawingBufferWidth,gl.drawingBufferHeight];//Create scene object\nvar scene={gl:gl,contextLost:false,pixelRatio:options.pixelRatio||parseFloat(window.devicePixelRatio),canvas:canvas,selection:selection,camera:createCamera(canvas,cameraOptions),axes:axes,axesPixels:null,spikes:spikes,bounds:bounds,objects:objects,shape:viewShape,aspect:options.aspectRatio||[1,1,1],pickRadius:options.pickRadius||10,zNear:options.zNear||0.01,zFar:options.zFar||1000,fovy:options.fovy||Math.PI/4,clearColor:options.clearColor||[0,0,0,0],autoResize:defaultBool(options.autoResize),autoBounds:defaultBool(options.autoBounds),autoScale:!!options.autoScale,autoCenter:defaultBool(options.autoCenter),clipToBounds:defaultBool(options.clipToBounds),snapToData:!!options.snapToData,onselect:options.onselect||null,onrender:options.onrender||null,onclick:options.onclick||null,cameraParams:cameraParams,oncontextloss:null,mouseListener:null};var pickShape=[gl.drawingBufferWidth/scene.pixelRatio|0,gl.drawingBufferHeight/scene.pixelRatio|0];function resizeListener(){if(stopped){return;}if(!scene.autoResize){return;}var parent=canvas.parentNode;var width=1;var height=1;if(parent&&parent!==document.body){width=parent.clientWidth;height=parent.clientHeight;}else{width=window.innerWidth;height=window.innerHeight;}var nextWidth=Math.ceil(width*scene.pixelRatio)|0;var nextHeight=Math.ceil(height*scene.pixelRatio)|0;if(nextWidth!==canvas.width||nextHeight!==canvas.height){canvas.width=nextWidth;canvas.height=nextHeight;var style=canvas.style;style.position=style.position||'absolute';style.left='0px';style.top='0px';style.width=width+'px';style.height=height+'px';dirty=true;}}if(scene.autoResize){resizeListener();}window.addEventListener('resize',resizeListener);function reallocPickIds(){var numObjs=objects.length;var numPick=pickBuffers.length;for(var i=0;i<numPick;++i){pickBufferCount[i]=0;}obj_loop:for(var i=0;i<numObjs;++i){var obj=objects[i];var pickCount=obj.pickSlots;if(!pickCount){pickBufferIds[i]=-1;continue;}for(var j=0;j<numPick;++j){if(pickBufferCount[j]+pickCount<255){pickBufferIds[i]=j;obj.setPickBase(pickBufferCount[j]+1);pickBufferCount[j]+=pickCount;continue obj_loop;}}//Create new pick buffer\nvar nbuffer=createSelect(gl,viewShape);pickBufferIds[i]=numPick;pickBuffers.push(nbuffer);pickBufferCount.push(pickCount);obj.setPickBase(1);numPick+=1;}while(numPick>0&&pickBufferCount[numPick-1]===0){pickBufferCount.pop();pickBuffers.pop().dispose();}}scene.update=function(options){if(stopped){return;}options=options||{};dirty=true;pickDirty=true;};scene.add=function(obj){if(stopped){return;}obj.axes=axes;objects.push(obj);pickBufferIds.push(-1);dirty=true;pickDirty=true;reallocPickIds();};scene.remove=function(obj){if(stopped){return;}var idx=objects.indexOf(obj);if(idx<0){return;}objects.splice(idx,1);pickBufferIds.pop();dirty=true;pickDirty=true;reallocPickIds();};scene.dispose=function(){if(stopped){return;}stopped=true;window.removeEventListener('resize',resizeListener);canvas.removeEventListener('webglcontextlost',checkContextLoss);scene.mouseListener.enabled=false;if(scene.contextLost){return;}//Destroy objects\naxes.dispose();spikes.dispose();for(var i=0;i<objects.length;++i){objects[i].dispose();}//Clean up buffers\naccumBuffer.dispose();for(var i=0;i<pickBuffers.length;++i){pickBuffers[i].dispose();}//Clean up shaders\naccumShader.dispose();//Release all references\ngl=null;axes=null;spikes=null;objects=[];};//Update mouse position\nvar mouseRotating=false;var prevButtons=0;scene.mouseListener=mouseChange(canvas,function(buttons,x,y){if(stopped){return;}var numPick=pickBuffers.length;var numObjs=objects.length;var prevObj=selection.object;selection.distance=Infinity;selection.mouse[0]=x;selection.mouse[1]=y;selection.object=null;selection.screen=null;selection.dataCoordinate=selection.dataPosition=null;var change=false;if(buttons&&prevButtons){mouseRotating=true;}else{if(mouseRotating){pickDirty=true;}mouseRotating=false;for(var i=0;i<numPick;++i){var result=pickBuffers[i].query(x,pickShape[1]-y-1,scene.pickRadius);if(result){if(result.distance>selection.distance){continue;}for(var j=0;j<numObjs;++j){var obj=objects[j];if(pickBufferIds[j]!==i){continue;}var objPick=obj.pick(result);if(objPick){selection.buttons=buttons;selection.screen=result.coord;selection.distance=result.distance;selection.object=obj;selection.index=objPick.distance;selection.dataPosition=objPick.position;selection.dataCoordinate=objPick.dataCoordinate;selection.data=objPick;change=true;}}}}}if(prevObj&&prevObj!==selection.object){if(prevObj.highlight){prevObj.highlight(null);}dirty=true;}if(selection.object){if(selection.object.highlight){selection.object.highlight(selection.data);}dirty=true;}change=change||selection.object!==prevObj;if(change&&scene.onselect){scene.onselect(selection);}if(buttons&1&&!(prevButtons&1)&&scene.onclick){scene.onclick(selection);}prevButtons=buttons;});function checkContextLoss(){if(scene.contextLost){return true;}if(gl.isContextLost()){scene.contextLost=true;scene.mouseListener.enabled=false;scene.selection.object=null;if(scene.oncontextloss){scene.oncontextloss();}}}canvas.addEventListener('webglcontextlost',checkContextLoss);//Render the scene for mouse picking\nfunction renderPick(){if(checkContextLoss()){return;}gl.colorMask(true,true,true,true);gl.depthMask(true);gl.disable(gl.BLEND);gl.enable(gl.DEPTH_TEST);var numObjs=objects.length;var numPick=pickBuffers.length;for(var j=0;j<numPick;++j){var buf=pickBuffers[j];buf.shape=pickShape;buf.begin();for(var i=0;i<numObjs;++i){if(pickBufferIds[i]!==j){continue;}var obj=objects[i];if(obj.drawPick){obj.pixelRatio=1;obj.drawPick(cameraParams);}}buf.end();}}var nBounds=[[Infinity,Infinity,Infinity],[-Infinity,-Infinity,-Infinity]];var prevBounds=[nBounds[0].slice(),nBounds[1].slice()];function redraw(){if(checkContextLoss()){return;}resizeListener();//Tick camera\nvar cameraMoved=scene.camera.tick();cameraParams.view=scene.camera.matrix;dirty=dirty||cameraMoved;pickDirty=pickDirty||cameraMoved;//Set pixel ratio\naxes.pixelRatio=scene.pixelRatio;spikes.pixelRatio=scene.pixelRatio;//Check if any objects changed, recalculate bounds\nvar numObjs=objects.length;var lo=nBounds[0];var hi=nBounds[1];lo[0]=lo[1]=lo[2]=Infinity;hi[0]=hi[1]=hi[2]=-Infinity;for(var i=0;i<numObjs;++i){var obj=objects[i];//Set the axes properties for each object\nobj.pixelRatio=scene.pixelRatio;obj.axes=scene.axes;dirty=dirty||!!obj.dirty;pickDirty=pickDirty||!!obj.dirty;var obb=obj.bounds;if(obb){var olo=obb[0];var ohi=obb[1];for(var j=0;j<3;++j){lo[j]=Math.min(lo[j],olo[j]);hi[j]=Math.max(hi[j],ohi[j]);}}}//Recalculate bounds\nvar bounds=scene.bounds;if(scene.autoBounds){for(var j=0;j<3;++j){if(hi[j]<lo[j]){lo[j]=-1;hi[j]=1;}else{if(lo[j]===hi[j]){lo[j]-=1;hi[j]+=1;}var padding=0.05*(hi[j]-lo[j]);lo[j]=lo[j]-padding;hi[j]=hi[j]+padding;}bounds[0][j]=lo[j];bounds[1][j]=hi[j];}}var boundsChanged=false;for(var j=0;j<3;++j){boundsChanged=boundsChanged||prevBounds[0][j]!==bounds[0][j]||prevBounds[1][j]!==bounds[1][j];prevBounds[0][j]=bounds[0][j];prevBounds[1][j]=bounds[1][j];}//Recalculate bounds\npickDirty=pickDirty||boundsChanged;dirty=dirty||boundsChanged;if(!dirty){return;}if(boundsChanged){var tickSpacing=[0,0,0];for(var i=0;i<3;++i){tickSpacing[i]=roundUpPow10((bounds[1][i]-bounds[0][i])/10.0);}if(axes.autoTicks){axes.update({bounds:bounds,tickSpacing:tickSpacing});}else{axes.update({bounds:bounds});}}//Get scene\nvar width=gl.drawingBufferWidth;var height=gl.drawingBufferHeight;viewShape[0]=width;viewShape[1]=height;pickShape[0]=Math.max(width/scene.pixelRatio,1)|0;pickShape[1]=Math.max(height/scene.pixelRatio,1)|0;//Compute camera parameters\nperspective(projection,scene.fovy,width/height,scene.zNear,scene.zFar);//Compute model matrix\nfor(var i=0;i<16;++i){model[i]=0;}model[15]=1;var maxS=0;for(var i=0;i<3;++i){maxS=Math.max(maxS,bounds[1][i]-bounds[0][i]);}for(var i=0;i<3;++i){if(scene.autoScale){model[5*i]=scene.aspect[i]/(bounds[1][i]-bounds[0][i]);}else{model[5*i]=1/maxS;}if(scene.autoCenter){model[12+i]=-model[5*i]*0.5*(bounds[0][i]+bounds[1][i]);}}//Apply axes/clip bounds\nfor(var i=0;i<numObjs;++i){var obj=objects[i];//Set axes bounds\nobj.axesBounds=bounds;//Set clip bounds\nif(scene.clipToBounds){obj.clipBounds=bounds;}}//Set spike parameters\nif(selection.object){if(scene.snapToData){spikes.position=selection.dataCoordinate;}else{spikes.position=selection.dataPosition;}spikes.bounds=bounds;}//If state changed, then redraw pick buffers\nif(pickDirty){pickDirty=false;renderPick();}//Recalculate pixel data\nscene.axesPixels=axesRanges(scene.axes,cameraParams,width,height);//Call render callback\nif(scene.onrender){scene.onrender();}//Read value\ngl.bindFramebuffer(gl.FRAMEBUFFER,null);gl.viewport(0,0,width,height);//General strategy: 3 steps\n//  1. render non-transparent objects\n//  2. accumulate transparent objects into separate fbo\n//  3. composite final scene\n//Clear FBO\nvar clearColor=scene.clearColor;gl.clearColor(clearColor[0],clearColor[1],clearColor[2],clearColor[3]);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);gl.depthMask(true);gl.colorMask(true,true,true,true);gl.enable(gl.DEPTH_TEST);gl.depthFunc(gl.LEQUAL);gl.disable(gl.BLEND);gl.disable(gl.CULL_FACE);//most visualization surfaces are 2 sided\n//Render opaque pass\nvar hasTransparent=false;if(axes.enable){hasTransparent=hasTransparent||axes.isTransparent();axes.draw(cameraParams);}spikes.axes=axes;if(selection.object){spikes.draw(cameraParams);}gl.disable(gl.CULL_FACE);//most visualization surfaces are 2 sided\nfor(var i=0;i<numObjs;++i){var obj=objects[i];obj.axes=axes;obj.pixelRatio=scene.pixelRatio;if(obj.isOpaque&&obj.isOpaque()){obj.draw(cameraParams);}if(obj.isTransparent&&obj.isTransparent()){hasTransparent=true;}}if(hasTransparent){//Render transparent pass\naccumBuffer.shape=viewShape;accumBuffer.bind();gl.clear(gl.DEPTH_BUFFER_BIT);gl.colorMask(false,false,false,false);gl.depthMask(true);gl.depthFunc(gl.LESS);//Render forward facing objects\nif(axes.enable&&axes.isTransparent()){axes.drawTransparent(cameraParams);}for(var i=0;i<numObjs;++i){var obj=objects[i];if(obj.isOpaque&&obj.isOpaque()){obj.draw(cameraParams);}}//Render transparent pass\ngl.enable(gl.BLEND);gl.blendEquation(gl.FUNC_ADD);gl.blendFunc(gl.ONE,gl.ONE_MINUS_SRC_ALPHA);gl.colorMask(true,true,true,true);gl.depthMask(false);gl.clearColor(0,0,0,0);gl.clear(gl.COLOR_BUFFER_BIT);if(axes.isTransparent()){axes.drawTransparent(cameraParams);}for(var i=0;i<numObjs;++i){var obj=objects[i];if(obj.isTransparent&&obj.isTransparent()){obj.drawTransparent(cameraParams);}}//Unbind framebuffer\ngl.bindFramebuffer(gl.FRAMEBUFFER,null);//Draw composite pass\ngl.blendFunc(gl.ONE,gl.ONE_MINUS_SRC_ALPHA);gl.disable(gl.DEPTH_TEST);accumShader.bind();accumBuffer.color[0].bind(0);accumShader.uniforms.accumBuffer=0;drawTriangle(gl);//Turn off blending\ngl.disable(gl.BLEND);}//Clear dirty flags\ndirty=false;for(var i=0;i<numObjs;++i){objects[i].dirty=false;}}//Draw the whole scene\nfunction render(){if(stopped||scene.contextLost){return;}// this order is important: ios safari sometimes has sync raf\nredraw();requestAnimationFrame(render);}render();//Force redraw of whole scene\nscene.redraw=function(){if(stopped){return;}dirty=true;redraw();};return scene;}},{\"./lib/shader\":125,\"3d-view-controls\":7,\"a-big-triangle\":9,\"gl-axes3d\":85,\"gl-axes3d/properties\":92,\"gl-fbo\":101,\"gl-mat4/perspective\":114,\"gl-select-static\":132,\"gl-spikes3d\":141,\"is-mobile\":172,\"mouse-change\":184}],127:[function(_dereq_,module,exports){module.exports=slerp;/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */function slerp(out,a,b,t){// benchmarks:\n//    http://jsperf.com/quaternion-slerp-implementations\nvar ax=a[0],ay=a[1],az=a[2],aw=a[3],bx=b[0],by=b[1],bz=b[2],bw=b[3];var omega,cosom,sinom,scale0,scale1;// calc cosine\ncosom=ax*bx+ay*by+az*bz+aw*bw;// adjust signs (if necessary)\nif(cosom<0.0){cosom=-cosom;bx=-bx;by=-by;bz=-bz;bw=-bw;}// calculate coefficients\nif(1.0-cosom>0.000001){// standard case (slerp)\nomega=Math.acos(cosom);sinom=Math.sin(omega);scale0=Math.sin((1.0-t)*omega)/sinom;scale1=Math.sin(t*omega)/sinom;}else{// \"from\" and \"to\" quaternions are very close\n//  ... so we can do a linear interpolation\nscale0=1.0-t;scale1=t;}// calculate final values\nout[0]=scale0*ax+scale1*bx;out[1]=scale0*ay+scale1*by;out[2]=scale0*az+scale1*bz;out[3]=scale0*aw+scale1*bw;return out;}},{}],128:[function(_dereq_,module,exports){'use strict';module.exports=function(a){return!a&&a!==0?'':a.toString();};},{}],129:[function(_dereq_,module,exports){\"use strict\";var vectorizeText=_dereq_(\"vectorize-text\");module.exports=getGlyph;var GLYPH_CACHE={};function getGlyph(symbol,font){var fontCache=GLYPH_CACHE[font];if(!fontCache){fontCache=GLYPH_CACHE[font]={};}if(symbol in fontCache){return fontCache[symbol];}var config={textAlign:\"center\",textBaseline:\"middle\",lineHeight:1.0,font:font,lineSpacing:1.25,styletags:{breaklines:true,bolds:true,italics:true,subscripts:true,superscripts:true}//Get line and triangle meshes for glyph\n};config.triangles=true;var triSymbol=vectorizeText(symbol,config);config.triangles=false;var lineSymbol=vectorizeText(symbol,config);//Calculate bounding box\nvar bounds=[[Infinity,Infinity],[-Infinity,-Infinity]];var n=lineSymbol.positions.length;for(var i=0;i<n;++i){var p=lineSymbol.positions[i];for(var j=0;j<2;++j){bounds[0][j]=Math.min(bounds[0][j],p[j]);bounds[1][j]=Math.max(bounds[1][j],p[j]);}}//Save cached symbol\nreturn fontCache[symbol]=[triSymbol,lineSymbol,bounds];}},{\"vectorize-text\":273}],130:[function(_dereq_,module,exports){var createShaderWrapper=_dereq_('gl-shader');var glslify=_dereq_('glslify');var perspectiveVertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nattribute vec3 position;\\nattribute vec4 color;\\nattribute vec2 glyph;\\nattribute vec4 id;\\n\\nuniform vec4 highlightId;\\nuniform float highlightScale;\\nuniform mat4 model, view, projection;\\nuniform vec3 clipBounds[2];\\n\\nvarying vec4 interpColor;\\nvarying vec4 pickId;\\nvarying vec3 dataCoordinate;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], position)) {\\n\\n    gl_Position = vec4(0,0,0,0);\\n  } else {\\n    float scale = 1.0;\\n    if(distance(highlightId, id) < 0.0001) {\\n      scale = highlightScale;\\n    }\\n\\n    vec4 worldPosition = model * vec4(position, 1);\\n    vec4 viewPosition = view * worldPosition;\\n    viewPosition = viewPosition / viewPosition.w;\\n    vec4 clipPosition = projection * (viewPosition + scale * vec4(glyph.x, -glyph.y, 0, 0));\\n\\n    gl_Position = clipPosition;\\n    interpColor = color;\\n    pickId = id;\\n    dataCoordinate = position;\\n  }\\n}\"]);var orthographicVertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nattribute vec3 position;\\nattribute vec4 color;\\nattribute vec2 glyph;\\nattribute vec4 id;\\n\\nuniform mat4 model, view, projection;\\nuniform vec2 screenSize;\\nuniform vec3 clipBounds[2];\\nuniform float highlightScale, pixelRatio;\\nuniform vec4 highlightId;\\n\\nvarying vec4 interpColor;\\nvarying vec4 pickId;\\nvarying vec3 dataCoordinate;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], position)) {\\n\\n    gl_Position = vec4(0,0,0,0);\\n  } else {\\n    float scale = pixelRatio;\\n    if(distance(highlightId.bgr, id.bgr) < 0.001) {\\n      scale *= highlightScale;\\n    }\\n\\n    vec4 worldPosition = model * vec4(position, 1.0);\\n    vec4 viewPosition = view * worldPosition;\\n    vec4 clipPosition = projection * viewPosition;\\n    clipPosition /= clipPosition.w;\\n\\n    gl_Position = clipPosition + vec4(screenSize * scale * vec2(glyph.x, -glyph.y), 0.0, 0.0);\\n    interpColor = color;\\n    pickId = id;\\n    dataCoordinate = position;\\n  }\\n}\"]);var projectionVertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nattribute vec3 position;\\nattribute vec4 color;\\nattribute vec2 glyph;\\nattribute vec4 id;\\n\\nuniform float highlightScale;\\nuniform vec4 highlightId;\\nuniform vec3 axes[2];\\nuniform mat4 model, view, projection;\\nuniform vec2 screenSize;\\nuniform vec3 clipBounds[2];\\nuniform float scale, pixelRatio;\\n\\nvarying vec4 interpColor;\\nvarying vec4 pickId;\\nvarying vec3 dataCoordinate;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], position)) {\\n\\n    gl_Position = vec4(0,0,0,0);\\n  } else {\\n    float lscale = pixelRatio * scale;\\n    if(distance(highlightId, id) < 0.0001) {\\n      lscale *= highlightScale;\\n    }\\n\\n    vec4 clipCenter   = projection * view * model * vec4(position, 1);\\n    vec3 dataPosition = position + 0.5*lscale*(axes[0] * glyph.x + axes[1] * glyph.y) * clipCenter.w * screenSize.y;\\n    vec4 clipPosition = projection * view * model * vec4(dataPosition, 1);\\n\\n    gl_Position = clipPosition;\\n    interpColor = color;\\n    pickId = id;\\n    dataCoordinate = dataPosition;\\n  }\\n}\\n\"]);var drawFragSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nuniform vec3 fragClipBounds[2];\\nuniform float opacity;\\n\\nvarying vec4 interpColor;\\nvarying vec4 pickId;\\nvarying vec3 dataCoordinate;\\n\\nvoid main() {\\n  if (outOfRange(fragClipBounds[0], fragClipBounds[1], dataCoordinate)) discard;\\n\\n  gl_FragColor = interpColor * opacity;\\n}\\n\"]);var pickFragSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nuniform vec3 fragClipBounds[2];\\nuniform float pickGroup;\\n\\nvarying vec4 pickId;\\nvarying vec3 dataCoordinate;\\n\\nvoid main() {\\n  if (outOfRange(fragClipBounds[0], fragClipBounds[1], dataCoordinate)) discard;\\n\\n  gl_FragColor = vec4(pickGroup, pickId.bgr);\\n}\"]);var ATTRIBUTES=[{name:'position',type:'vec3'},{name:'color',type:'vec4'},{name:'glyph',type:'vec2'},{name:'id',type:'vec4'}];var perspective={vertex:perspectiveVertSrc,fragment:drawFragSrc,attributes:ATTRIBUTES},ortho={vertex:orthographicVertSrc,fragment:drawFragSrc,attributes:ATTRIBUTES},project={vertex:projectionVertSrc,fragment:drawFragSrc,attributes:ATTRIBUTES},pickPerspective={vertex:perspectiveVertSrc,fragment:pickFragSrc,attributes:ATTRIBUTES},pickOrtho={vertex:orthographicVertSrc,fragment:pickFragSrc,attributes:ATTRIBUTES},pickProject={vertex:projectionVertSrc,fragment:pickFragSrc,attributes:ATTRIBUTES};function createShader(gl,src){var shader=createShaderWrapper(gl,src);var attr=shader.attributes;attr.position.location=0;attr.color.location=1;attr.glyph.location=2;attr.id.location=3;return shader;}exports.createPerspective=function(gl){return createShader(gl,perspective);};exports.createOrtho=function(gl){return createShader(gl,ortho);};exports.createProject=function(gl){return createShader(gl,project);};exports.createPickPerspective=function(gl){return createShader(gl,pickPerspective);};exports.createPickOrtho=function(gl){return createShader(gl,pickOrtho);};exports.createPickProject=function(gl){return createShader(gl,pickProject);};},{\"gl-shader\":133,\"glslify\":162}],131:[function(_dereq_,module,exports){'use strict';var isAllBlank=_dereq_('is-string-blank');var createBuffer=_dereq_('gl-buffer');var createVAO=_dereq_('gl-vao');var pool=_dereq_('typedarray-pool');var mat4mult=_dereq_('gl-mat4/multiply');var shaders=_dereq_('./lib/shaders');var getGlyph=_dereq_('./lib/glyphs');var getSimpleString=_dereq_('./lib/get-simple-string');var IDENTITY=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];module.exports=createPointCloud;function transformMat4(x,m){var x0=x[0];var x1=x[1];var x2=x[2];var x3=x[3];x[0]=m[0]*x0+m[4]*x1+m[8]*x2+m[12]*x3;x[1]=m[1]*x0+m[5]*x1+m[9]*x2+m[13]*x3;x[2]=m[2]*x0+m[6]*x1+m[10]*x2+m[14]*x3;x[3]=m[3]*x0+m[7]*x1+m[11]*x2+m[15]*x3;return x;}function project(p,v,m,x){transformMat4(x,x,m);transformMat4(x,x,v);return transformMat4(x,x,p);}function clampVec(v){var result=new Array(3);for(var i=0;i<3;++i){result[i]=Math.min(Math.max(v[i],-1e8),1e8);}return result;}function ScatterPlotPickResult(index,position){this.index=index;this.dataCoordinate=this.position=position;}var MAX_OPACITY=1;function fixOpacity(a){if(a===true)return MAX_OPACITY;if(a>MAX_OPACITY)return MAX_OPACITY;return a;}function PointCloud(gl,shader,orthoShader,projectShader,pointBuffer,colorBuffer,glyphBuffer,idBuffer,vao,pickPerspectiveShader,pickOrthoShader,pickProjectShader){this.gl=gl;this.pixelRatio=1;this.shader=shader;this.orthoShader=orthoShader;this.projectShader=projectShader;this.pointBuffer=pointBuffer;this.colorBuffer=colorBuffer;this.glyphBuffer=glyphBuffer;this.idBuffer=idBuffer;this.vao=vao;this.vertexCount=0;this.lineVertexCount=0;this.opacity=MAX_OPACITY;this.lineWidth=0;this.projectScale=[2.0/3.0,2.0/3.0,2.0/3.0];this.projectOpacity=[MAX_OPACITY,MAX_OPACITY,MAX_OPACITY];this.pickId=0;this.pickPerspectiveShader=pickPerspectiveShader;this.pickOrthoShader=pickOrthoShader;this.pickProjectShader=pickProjectShader;this.points=[];this._selectResult=new ScatterPlotPickResult(0,[0,0,0]);this.useOrtho=true;this.bounds=[[Infinity,Infinity,Infinity],[-Infinity,-Infinity,-Infinity]];//Axes projections\nthis.axesProject=[true,true,true];this.axesBounds=[[-Infinity,-Infinity,-Infinity],[Infinity,Infinity,Infinity]];this.highlightId=[1,1,1,1];this.highlightScale=2;this.clipBounds=[[-Infinity,-Infinity,-Infinity],[Infinity,Infinity,Infinity]];this.dirty=true;}var proto=PointCloud.prototype;proto.pickSlots=1;proto.setPickBase=function(pickBase){this.pickId=pickBase;};proto.isTransparent=function(){if(this.opacity<MAX_OPACITY){return true;}for(var i=0;i<3;++i){if(this.axesProject[i]&&this.projectOpacity[i]<MAX_OPACITY){return true;}}return false;};proto.isOpaque=function(){if(this.opacity>=MAX_OPACITY){return true;}for(var i=0;i<3;++i){if(this.axesProject[i]&&this.projectOpacity[i]>=MAX_OPACITY){return true;}}return false;};var VIEW_SHAPE=[0,0];var U_VEC=[0,0,0];var V_VEC=[0,0,0];var MU_VEC=[0,0,0,1];var MV_VEC=[0,0,0,1];var SCRATCH_MATRIX=IDENTITY.slice();var SCRATCH_VEC=[0,0,0];var CLIP_BOUNDS=[[0,0,0],[0,0,0]];function zeroVec(a){a[0]=a[1]=a[2]=0;return a;}function augment(hg,af){hg[0]=af[0];hg[1]=af[1];hg[2]=af[2];hg[3]=1;return hg;}function setComponent(out,v,i,x){out[0]=v[0];out[1]=v[1];out[2]=v[2];out[i]=x;return out;}function getClipBounds(bounds){var result=CLIP_BOUNDS;for(var i=0;i<2;++i){for(var j=0;j<3;++j){result[i][j]=Math.max(Math.min(bounds[i][j],1e8),-1e8);}}return result;}function drawProject(shader,points,camera){var axesProject=points.axesProject;var gl=points.gl;var uniforms=shader.uniforms;var model=camera.model||IDENTITY;var view=camera.view||IDENTITY;var projection=camera.projection||IDENTITY;var bounds=points.axesBounds;var clipBounds=getClipBounds(points.clipBounds);var cubeAxis;if(points.axes&&points.axes.lastCubeProps){cubeAxis=points.axes.lastCubeProps.axis;}else{cubeAxis=[1,1,1];}VIEW_SHAPE[0]=2.0/gl.drawingBufferWidth;VIEW_SHAPE[1]=2.0/gl.drawingBufferHeight;shader.bind();uniforms.view=view;uniforms.projection=projection;uniforms.screenSize=VIEW_SHAPE;uniforms.highlightId=points.highlightId;uniforms.highlightScale=points.highlightScale;uniforms.clipBounds=clipBounds;uniforms.pickGroup=points.pickId/255.0;uniforms.pixelRatio=points.pixelRatio;for(var i=0;i<3;++i){if(!axesProject[i]){continue;}uniforms.scale=points.projectScale[i];uniforms.opacity=points.projectOpacity[i];//Project model matrix\nvar pmodel=SCRATCH_MATRIX;for(var j=0;j<16;++j){pmodel[j]=0;}for(var j=0;j<4;++j){pmodel[5*j]=1;}pmodel[5*i]=0;if(cubeAxis[i]<0){pmodel[12+i]=bounds[0][i];}else{pmodel[12+i]=bounds[1][i];}mat4mult(pmodel,model,pmodel);uniforms.model=pmodel;//Compute initial axes\nvar u=(i+1)%3;var v=(i+2)%3;var du=zeroVec(U_VEC);var dv=zeroVec(V_VEC);du[u]=1;dv[v]=1;//Align orientation relative to viewer\nvar mdu=project(projection,view,model,augment(MU_VEC,du));var mdv=project(projection,view,model,augment(MV_VEC,dv));if(Math.abs(mdu[1])>Math.abs(mdv[1])){var tmp=mdu;mdu=mdv;mdv=tmp;tmp=du;du=dv;dv=tmp;var t=u;u=v;v=t;}if(mdu[0]<0){du[u]=-1;}if(mdv[1]>0){dv[v]=-1;}var su=0.0;var sv=0.0;for(var j=0;j<4;++j){su+=Math.pow(model[4*u+j],2);sv+=Math.pow(model[4*v+j],2);}du[u]/=Math.sqrt(su);dv[v]/=Math.sqrt(sv);uniforms.axes[0]=du;uniforms.axes[1]=dv;//Update fragment clip bounds\nuniforms.fragClipBounds[0]=setComponent(SCRATCH_VEC,clipBounds[0],i,-1e8);uniforms.fragClipBounds[1]=setComponent(SCRATCH_VEC,clipBounds[1],i,1e8);points.vao.bind();//Draw interior\npoints.vao.draw(gl.TRIANGLES,points.vertexCount);//Draw edges\nif(points.lineWidth>0){gl.lineWidth(points.lineWidth);points.vao.draw(gl.LINES,points.lineVertexCount,points.vertexCount);}points.vao.unbind();}}var NEG_INFINITY3=[-1e8,-1e8,-1e8];var POS_INFINITY3=[1e8,1e8,1e8];var CLIP_GROUP=[NEG_INFINITY3,POS_INFINITY3];function drawFull(shader,pshader,points,camera,transparent,forceDraw){var gl=points.gl;if(transparent===points.projectOpacity<MAX_OPACITY||forceDraw){drawProject(pshader,points,camera);}if(transparent===points.opacity<MAX_OPACITY||forceDraw){shader.bind();var uniforms=shader.uniforms;uniforms.model=camera.model||IDENTITY;uniforms.view=camera.view||IDENTITY;uniforms.projection=camera.projection||IDENTITY;VIEW_SHAPE[0]=2.0/gl.drawingBufferWidth;VIEW_SHAPE[1]=2.0/gl.drawingBufferHeight;uniforms.screenSize=VIEW_SHAPE;uniforms.highlightId=points.highlightId;uniforms.highlightScale=points.highlightScale;uniforms.fragClipBounds=CLIP_GROUP;uniforms.clipBounds=points.axes.bounds;uniforms.opacity=points.opacity;uniforms.pickGroup=points.pickId/255.0;uniforms.pixelRatio=points.pixelRatio;points.vao.bind();//Draw interior\npoints.vao.draw(gl.TRIANGLES,points.vertexCount);//Draw edges\nif(points.lineWidth>0){gl.lineWidth(points.lineWidth);points.vao.draw(gl.LINES,points.lineVertexCount,points.vertexCount);}points.vao.unbind();}}proto.draw=function(camera){var shader=this.useOrtho?this.orthoShader:this.shader;drawFull(shader,this.projectShader,this,camera,false,false);};proto.drawTransparent=function(camera){var shader=this.useOrtho?this.orthoShader:this.shader;drawFull(shader,this.projectShader,this,camera,true,false);};proto.drawPick=function(camera){var shader=this.useOrtho?this.pickOrthoShader:this.pickPerspectiveShader;drawFull(shader,this.pickProjectShader,this,camera,true,true);};proto.pick=function(selected){if(!selected){return null;}if(selected.id!==this.pickId){return null;}var x=selected.value[2]+(selected.value[1]<<8)+(selected.value[0]<<16);if(x>=this.pointCount||x<0){return null;}//Unpack result\nvar coord=this.points[x];var result=this._selectResult;result.index=x;for(var i=0;i<3;++i){result.position[i]=result.dataCoordinate[i]=coord[i];}return result;};proto.highlight=function(selection){if(!selection){this.highlightId=[1,1,1,1];}else{var pointId=selection.index;var a0=pointId&0xff;var a1=pointId>>8&0xff;var a2=pointId>>16&0xff;this.highlightId=[a0/255.0,a1/255.0,a2/255.0,0];}};function get_glyphData(glyphs,index,font){var str;// use the data if presented in an array\nif(Array.isArray(glyphs)){if(index<glyphs.length){str=glyphs[index];}else{str=undefined;}}else{str=glyphs;}str=getSimpleString(str);// this would handle undefined cases\nvar visible=true;if(isAllBlank(str)){str='▼';// Note: this special character may have minimum number of surfaces\nvisible=false;}var glyph=getGlyph(str,font);return{mesh:glyph[0],lines:glyph[1],bounds:glyph[2],visible:visible};}proto.update=function(options){options=options||{};if('perspective'in options){this.useOrtho=!options.perspective;}if('orthographic'in options){this.useOrtho=!!options.orthographic;}if('lineWidth'in options){this.lineWidth=options.lineWidth;}if('project'in options){if(Array.isArray(options.project)){this.axesProject=options.project;}else{var v=!!options.project;this.axesProject=[v,v,v];}}if('projectScale'in options){if(Array.isArray(options.projectScale)){this.projectScale=options.projectScale.slice();}else{var s=+options.projectScale;this.projectScale=[s,s,s];}}if('projectOpacity'in options){if(Array.isArray(options.projectOpacity)){this.projectOpacity=options.projectOpacity.slice();}else{var s=+options.projectOpacity;this.projectOpacity=[s,s,s];}for(var i=0;i<3;++i){this.projectOpacity[i]=fixOpacity(this.projectOpacity[i]);}}if('opacity'in options){this.opacity=fixOpacity(options.opacity);}//Set dirty flag\nthis.dirty=true;//Create new buffers\nvar points=options.position;//Text font\nvar font=options.font||'normal';var alignment=options.alignment||[0,0];var alignmentX;var alignmentY;if(alignment.length===2){alignmentX=alignment[0];alignmentY=alignment[1];}else{alignmentX=[];alignmentY=[];for(var i=0;i<alignment.length;++i){alignmentX[i]=alignment[i][0];alignmentY[i]=alignment[i][1];}}//Bounds\nvar lowerBound=[Infinity,Infinity,Infinity];var upperBound=[-Infinity,-Infinity,-Infinity];//Unpack options\nvar glyphs=options.glyph;var colors=options.color;var sizes=options.size;var angles=options.angle;var lineColors=options.lineColor;//Picking geometry\nvar pickCounter=-1;//First do pass to compute buffer sizes\nvar triVertexCount=0;var lineVertexCount=0;var numPoints=0;if(points.length){//Count number of points and buffer size\nnumPoints=points.length;count_loop:for(var i=0;i<numPoints;++i){var x=points[i];for(var j=0;j<3;++j){if(isNaN(x[j])||!isFinite(x[j])){continue count_loop;}}var glyphData=get_glyphData(glyphs,i,font);var glyphMesh=glyphData.mesh;var glyphLines=glyphData.lines;var glyphBounds=glyphData.bounds;triVertexCount+=glyphMesh.cells.length*3;lineVertexCount+=glyphLines.edges.length*2;}}var vertexCount=triVertexCount+lineVertexCount;//Preallocate data\nvar positionArray=pool.mallocFloat(3*vertexCount);var colorArray=pool.mallocFloat(4*vertexCount);var glyphArray=pool.mallocFloat(2*vertexCount);var idArray=pool.mallocUint32(vertexCount);if(vertexCount>0){var triOffset=0;var lineOffset=triVertexCount;var color=[0,0,0,1];var lineColor=[0,0,0,1];var isColorArray=Array.isArray(colors)&&Array.isArray(colors[0]);var isLineColorArray=Array.isArray(lineColors)&&Array.isArray(lineColors[0]);fill_loop:for(var i=0;i<numPoints;++i){//Increment pickCounter\npickCounter+=1;var x=points[i];for(var j=0;j<3;++j){if(isNaN(x[j])||!isFinite(x[j])){continue fill_loop;}upperBound[j]=Math.max(upperBound[j],x[j]);lowerBound[j]=Math.min(lowerBound[j],x[j]);}var glyphData=get_glyphData(glyphs,i,font);var glyphMesh=glyphData.mesh;var glyphLines=glyphData.lines;var glyphBounds=glyphData.bounds;var glyphVisible=glyphData.visible;//Get color\nif(!glyphVisible)color=[1,1,1,0];else if(Array.isArray(colors)){var c;if(isColorArray){if(i<colors.length){c=colors[i];}else{c=[0,0,0,0];}}else{c=colors;}if(c.length===3){for(var j=0;j<3;++j){color[j]=c[j];}color[3]=1;}else if(c.length===4){for(var j=0;j<4;++j){color[j]=c[j];}}}else{color[0]=color[1]=color[2]=0;color[3]=1;}//Get lineColor\nif(!glyphVisible)lineColor=[1,1,1,0];else if(Array.isArray(lineColors)){var c;if(isLineColorArray){if(i<lineColors.length){c=lineColors[i];}else{c=[0,0,0,0];}}else{c=lineColors;}if(c.length===3){for(var j=0;j<3;++j){lineColor[j]=c[j];}lineColor[j]=1;}else if(c.length===4){for(var j=0;j<4;++j){lineColor[j]=c[j];}}}else{lineColor[0]=lineColor[1]=lineColor[2]=0;lineColor[3]=1;}var size=0.5;if(!glyphVisible)size=0.0;else if(Array.isArray(sizes)){if(i<sizes.length){size=+sizes[i];}else{size=12;}}else if(sizes){size=+sizes;}else if(this.useOrtho){size=12;}var angle=0;if(Array.isArray(angles)){if(i<angles.length){angle=+angles[i];}else{angle=0;}}else if(angles){angle=+angles;}//Loop through markers and append to buffers\nvar cos=Math.cos(angle);var sin=Math.sin(angle);var x=points[i];for(var j=0;j<3;++j){upperBound[j]=Math.max(upperBound[j],x[j]);lowerBound[j]=Math.min(lowerBound[j],x[j]);}//Calculate text offset\nvar textOffsetX=alignmentX;var textOffsetY=alignmentY;var textOffsetX=0;if(Array.isArray(alignmentX)){if(i<alignmentX.length){textOffsetX=alignmentX[i];}else{textOffsetX=0;}}else if(alignmentX){textOffsetX=alignmentX;}var textOffsetY=0;if(Array.isArray(alignmentY)){if(i<alignmentY.length){textOffsetY=alignmentY[i];}else{textOffsetY=0;}}else if(alignmentY){textOffsetY=alignmentY;}textOffsetX*=textOffsetX>0?1-glyphBounds[0][0]:textOffsetX<0?1+glyphBounds[1][0]:1;textOffsetY*=textOffsetY>0?1-glyphBounds[0][1]:textOffsetY<0?1+glyphBounds[1][1]:1;var textOffset=[textOffsetX,textOffsetY];//Write out inner marker\nvar cells=glyphMesh.cells||[];var verts=glyphMesh.positions||[];for(var j=0;j<cells.length;++j){var cell=cells[j];for(var k=0;k<3;++k){for(var l=0;l<3;++l){positionArray[3*triOffset+l]=x[l];}for(var l=0;l<4;++l){colorArray[4*triOffset+l]=color[l];}idArray[triOffset]=pickCounter;var p=verts[cell[k]];glyphArray[2*triOffset]=size*(cos*p[0]-sin*p[1]+textOffset[0]);glyphArray[2*triOffset+1]=size*(sin*p[0]+cos*p[1]+textOffset[1]);triOffset+=1;}}var cells=glyphLines.edges;var verts=glyphLines.positions;for(var j=0;j<cells.length;++j){var cell=cells[j];for(var k=0;k<2;++k){for(var l=0;l<3;++l){positionArray[3*lineOffset+l]=x[l];}for(var l=0;l<4;++l){colorArray[4*lineOffset+l]=lineColor[l];}idArray[lineOffset]=pickCounter;var p=verts[cell[k]];glyphArray[2*lineOffset]=size*(cos*p[0]-sin*p[1]+textOffset[0]);glyphArray[2*lineOffset+1]=size*(sin*p[0]+cos*p[1]+textOffset[1]);lineOffset+=1;}}}}//Update bounds\nthis.bounds=[lowerBound,upperBound];//Save points\nthis.points=points;//Save number of points\nthis.pointCount=points.length;//Update vertex counts\nthis.vertexCount=triVertexCount;this.lineVertexCount=lineVertexCount;this.pointBuffer.update(positionArray);this.colorBuffer.update(colorArray);this.glyphBuffer.update(glyphArray);//this.idBuffer.update(new Uint32Array(idArray))\nthis.idBuffer.update(idArray);pool.free(positionArray);pool.free(colorArray);pool.free(glyphArray);pool.free(idArray);};proto.dispose=function(){//Shaders\nthis.shader.dispose();this.orthoShader.dispose();this.pickPerspectiveShader.dispose();this.pickOrthoShader.dispose();//Vertex array\nthis.vao.dispose();//Buffers\nthis.pointBuffer.dispose();this.colorBuffer.dispose();this.glyphBuffer.dispose();this.idBuffer.dispose();};function createPointCloud(options){var gl=options.gl;var shader=shaders.createPerspective(gl);var orthoShader=shaders.createOrtho(gl);var projectShader=shaders.createProject(gl);var pickPerspectiveShader=shaders.createPickPerspective(gl);var pickOrthoShader=shaders.createPickOrtho(gl);var pickProjectShader=shaders.createPickProject(gl);var pointBuffer=createBuffer(gl);var colorBuffer=createBuffer(gl);var glyphBuffer=createBuffer(gl);var idBuffer=createBuffer(gl);var vao=createVAO(gl,[{buffer:pointBuffer,size:3,type:gl.FLOAT},{buffer:colorBuffer,size:4,type:gl.FLOAT},{buffer:glyphBuffer,size:2,type:gl.FLOAT},{buffer:idBuffer,size:4,type:gl.UNSIGNED_BYTE,normalized:true}]);var pointCloud=new PointCloud(gl,shader,orthoShader,projectShader,pointBuffer,colorBuffer,glyphBuffer,idBuffer,vao,pickPerspectiveShader,pickOrthoShader,pickProjectShader);pointCloud.update(options);return pointCloud;}},{\"./lib/get-simple-string\":128,\"./lib/glyphs\":129,\"./lib/shaders\":130,\"gl-buffer\":93,\"gl-mat4/multiply\":113,\"gl-vao\":146,\"is-string-blank\":174,\"typedarray-pool\":270}],132:[function(_dereq_,module,exports){'use strict';module.exports=createSelectBuffer;var createFBO=_dereq_('gl-fbo');var pool=_dereq_('typedarray-pool');var ndarray=_dereq_('ndarray');var nextPow2=_dereq_('bit-twiddle').nextPow2;var selectRange=_dereq_('cwise/lib/wrapper')({\"args\":[\"array\",{\"offset\":[0,0,1],\"array\":0},{\"offset\":[0,0,2],\"array\":0},{\"offset\":[0,0,3],\"array\":0},\"scalar\",\"scalar\",\"index\"],\"pre\":{\"body\":\"{this_closestD2=1e8,this_closestX=-1,this_closestY=-1}\",\"args\":[],\"thisVars\":[\"this_closestD2\",\"this_closestX\",\"this_closestY\"],\"localVars\":[]},\"body\":{\"body\":\"{if(_inline_37_arg0_<255||_inline_37_arg1_<255||_inline_37_arg2_<255||_inline_37_arg3_<255){var _inline_37_l=_inline_37_arg4_-_inline_37_arg6_[0],_inline_37_a=_inline_37_arg5_-_inline_37_arg6_[1],_inline_37_f=_inline_37_l*_inline_37_l+_inline_37_a*_inline_37_a;_inline_37_f<this_closestD2&&(this_closestD2=_inline_37_f,this_closestX=_inline_37_arg6_[0],this_closestY=_inline_37_arg6_[1])}}\",\"args\":[{\"name\":\"_inline_37_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_37_arg1_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_37_arg2_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_37_arg3_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_37_arg4_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_37_arg5_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_37_arg6_\",\"lvalue\":false,\"rvalue\":true,\"count\":4}],\"thisVars\":[\"this_closestD2\",\"this_closestX\",\"this_closestY\"],\"localVars\":[\"_inline_37_a\",\"_inline_37_f\",\"_inline_37_l\"]},\"post\":{\"body\":\"{return[this_closestX,this_closestY,this_closestD2]}\",\"args\":[],\"thisVars\":[\"this_closestD2\",\"this_closestX\",\"this_closestY\"],\"localVars\":[]},\"debug\":false,\"funcName\":\"cwise\",\"blockSize\":64});function SelectResult(x,y,id,value,distance){this.coord=[x,y];this.id=id;this.value=value;this.distance=distance;}function SelectBuffer(gl,fbo,buffer){this.gl=gl;this.fbo=fbo;this.buffer=buffer;this._readTimeout=null;var self=this;this._readCallback=function(){if(!self.gl){return;}fbo.bind();gl.readPixels(0,0,fbo.shape[0],fbo.shape[1],gl.RGBA,gl.UNSIGNED_BYTE,self.buffer);self._readTimeout=null;};}var proto=SelectBuffer.prototype;Object.defineProperty(proto,'shape',{get:function get(){if(!this.gl){return[0,0];}return this.fbo.shape.slice();},set:function set(v){if(!this.gl){return;}this.fbo.shape=v;var c=this.fbo.shape[0];var r=this.fbo.shape[1];if(r*c*4>this.buffer.length){pool.free(this.buffer);var buffer=this.buffer=pool.mallocUint8(nextPow2(r*c*4));for(var i=0;i<r*c*4;++i){buffer[i]=0xff;}}return v;}});proto.begin=function(){var gl=this.gl;var shape=this.shape;if(!gl){return;}this.fbo.bind();gl.clearColor(1,1,1,1);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);};proto.end=function(){var gl=this.gl;if(!gl){return;}gl.bindFramebuffer(gl.FRAMEBUFFER,null);if(!this._readTimeout){clearTimeout(this._readTimeout);}this._readTimeout=setTimeout(this._readCallback,1);};proto.query=function(x,y,radius){if(!this.gl){return null;}var shape=this.fbo.shape.slice();x=x|0;y=y|0;if(typeof radius!=='number'){radius=1.0;}var x0=Math.min(Math.max(x-radius,0),shape[0])|0;var x1=Math.min(Math.max(x+radius,0),shape[0])|0;var y0=Math.min(Math.max(y-radius,0),shape[1])|0;var y1=Math.min(Math.max(y+radius,0),shape[1])|0;if(x1<=x0||y1<=y0){return null;}var dims=[x1-x0,y1-y0];var region=ndarray(this.buffer,[dims[0],dims[1],4],[4,shape[0]*4,1],4*(x0+shape[0]*y0));var closest=selectRange(region.hi(dims[0],dims[1],1),radius,radius);var dx=closest[0];var dy=closest[1];if(dx<0||Math.pow(this.radius,2)<closest[2]){return null;}var c0=region.get(dx,dy,0);var c1=region.get(dx,dy,1);var c2=region.get(dx,dy,2);var c3=region.get(dx,dy,3);return new SelectResult(dx+x0|0,dy+y0|0,c0,[c1,c2,c3],Math.sqrt(closest[2]));};proto.dispose=function(){if(!this.gl){return;}this.fbo.dispose();pool.free(this.buffer);this.gl=null;if(this._readTimeout){clearTimeout(this._readTimeout);}};function createSelectBuffer(gl,shape){var fbo=createFBO(gl,shape);var buffer=pool.mallocUint8(shape[0]*shape[1]*4);return new SelectBuffer(gl,fbo,buffer);}},{\"bit-twiddle\":32,\"cwise/lib/wrapper\":70,\"gl-fbo\":101,\"ndarray\":192,\"typedarray-pool\":270}],133:[function(_dereq_,module,exports){'use strict';var createUniformWrapper=_dereq_('./lib/create-uniforms');var createAttributeWrapper=_dereq_('./lib/create-attributes');var makeReflect=_dereq_('./lib/reflect');var shaderCache=_dereq_('./lib/shader-cache');var runtime=_dereq_('./lib/runtime-reflect');var GLError=_dereq_(\"./lib/GLError\");//Shader object\nfunction Shader(gl){this.gl=gl;this.gl.lastAttribCount=0;// fixme where else should we store info, safe but not nice on the gl object\n//Default initialize these to null\nthis._vref=this._fref=this._relink=this.vertShader=this.fragShader=this.program=this.attributes=this.uniforms=this.types=null;}var proto=Shader.prototype;proto.bind=function(){if(!this.program){this._relink();}// ensuring that we have the right number of enabled vertex attributes\nvar i;var newAttribCount=this.gl.getProgramParameter(this.program,this.gl.ACTIVE_ATTRIBUTES);// more robust approach\n//var newAttribCount = Object.keys(this.attributes).length // avoids the probably immaterial introspection slowdown\nvar oldAttribCount=this.gl.lastAttribCount;if(newAttribCount>oldAttribCount){for(i=oldAttribCount;i<newAttribCount;i++){this.gl.enableVertexAttribArray(i);}}else if(oldAttribCount>newAttribCount){for(i=newAttribCount;i<oldAttribCount;i++){this.gl.disableVertexAttribArray(i);}}this.gl.lastAttribCount=newAttribCount;this.gl.useProgram(this.program);};proto.dispose=function(){// disabling vertex attributes so new shader starts with zero\n// and it's also useful if all shaders are disposed but the\n// gl context is reused for subsequent replotting\nvar oldAttribCount=this.gl.lastAttribCount;for(var i=0;i<oldAttribCount;i++){this.gl.disableVertexAttribArray(i);}this.gl.lastAttribCount=0;if(this._fref){this._fref.dispose();}if(this._vref){this._vref.dispose();}this.attributes=this.types=this.vertShader=this.fragShader=this.program=this._relink=this._fref=this._vref=null;};function compareAttributes(a,b){if(a.name<b.name){return-1;}return 1;}//Update export hook for glslify-live\nproto.update=function(vertSource,fragSource,uniforms,attributes){//If only one object passed, assume glslify style output\nif(!fragSource||arguments.length===1){var obj=vertSource;vertSource=obj.vertex;fragSource=obj.fragment;uniforms=obj.uniforms;attributes=obj.attributes;}var wrapper=this;var gl=wrapper.gl;//Compile vertex and fragment shaders\nvar pvref=wrapper._vref;wrapper._vref=shaderCache.shader(gl,gl.VERTEX_SHADER,vertSource);if(pvref){pvref.dispose();}wrapper.vertShader=wrapper._vref.shader;var pfref=this._fref;wrapper._fref=shaderCache.shader(gl,gl.FRAGMENT_SHADER,fragSource);if(pfref){pfref.dispose();}wrapper.fragShader=wrapper._fref.shader;//If uniforms/attributes is not specified, use RT reflection\nif(!uniforms||!attributes){//Create initial test program\nvar testProgram=gl.createProgram();gl.attachShader(testProgram,wrapper.fragShader);gl.attachShader(testProgram,wrapper.vertShader);gl.linkProgram(testProgram);if(!gl.getProgramParameter(testProgram,gl.LINK_STATUS)){var errLog=gl.getProgramInfoLog(testProgram);throw new GLError(errLog,'Error linking program:'+errLog);}//Load data from runtime\nuniforms=uniforms||runtime.uniforms(gl,testProgram);attributes=attributes||runtime.attributes(gl,testProgram);//Release test program\ngl.deleteProgram(testProgram);}//Sort attributes lexicographically\n// overrides undefined WebGL behavior for attribute locations\nattributes=attributes.slice();attributes.sort(compareAttributes);//Convert attribute types, read out locations\nvar attributeUnpacked=[];var attributeNames=[];var attributeLocations=[];var i;for(i=0;i<attributes.length;++i){var attr=attributes[i];if(attr.type.indexOf('mat')>=0){var size=attr.type.charAt(attr.type.length-1)|0;var locVector=new Array(size);for(var j=0;j<size;++j){locVector[j]=attributeLocations.length;attributeNames.push(attr.name+'['+j+']');if(typeof attr.location==='number'){attributeLocations.push(attr.location+j);}else if(Array.isArray(attr.location)&&attr.location.length===size&&typeof attr.location[j]==='number'){attributeLocations.push(attr.location[j]|0);}else{attributeLocations.push(-1);}}attributeUnpacked.push({name:attr.name,type:attr.type,locations:locVector});}else{attributeUnpacked.push({name:attr.name,type:attr.type,locations:[attributeLocations.length]});attributeNames.push(attr.name);if(typeof attr.location==='number'){attributeLocations.push(attr.location|0);}else{attributeLocations.push(-1);}}}//For all unspecified attributes, assign them lexicographically min attribute\nvar curLocation=0;for(i=0;i<attributeLocations.length;++i){if(attributeLocations[i]<0){while(attributeLocations.indexOf(curLocation)>=0){curLocation+=1;}attributeLocations[i]=curLocation;}}//Rebuild program and recompute all uniform locations\nvar uniformLocations=new Array(uniforms.length);function relink(){wrapper.program=shaderCache.program(gl,wrapper._vref,wrapper._fref,attributeNames,attributeLocations);for(var i=0;i<uniforms.length;++i){uniformLocations[i]=gl.getUniformLocation(wrapper.program,uniforms[i].name);}}//Perform initial linking, reuse program used for reflection\nrelink();//Save relinking procedure, defer until runtime\nwrapper._relink=relink;//Generate type info\nwrapper.types={uniforms:makeReflect(uniforms),attributes:makeReflect(attributes)//Generate attribute wrappers\n};wrapper.attributes=createAttributeWrapper(gl,wrapper,attributeUnpacked,attributeLocations);//Generate uniform wrappers\nObject.defineProperty(wrapper,'uniforms',createUniformWrapper(gl,wrapper,uniforms,uniformLocations));};//Compiles and links a shader program with the given attribute and vertex list\nfunction createShader(gl,vertSource,fragSource,uniforms,attributes){var shader=new Shader(gl);shader.update(vertSource,fragSource,uniforms,attributes);return shader;}module.exports=createShader;},{\"./lib/GLError\":134,\"./lib/create-attributes\":135,\"./lib/create-uniforms\":136,\"./lib/reflect\":137,\"./lib/runtime-reflect\":138,\"./lib/shader-cache\":139}],134:[function(_dereq_,module,exports){function GLError(rawError,shortMessage,longMessage){this.shortMessage=shortMessage||'';this.longMessage=longMessage||'';this.rawError=rawError||'';this.message='gl-shader: '+(shortMessage||rawError||'')+(longMessage?'\\n'+longMessage:'');this.stack=new Error().stack;}GLError.prototype=new Error();GLError.prototype.name='GLError';GLError.prototype.constructor=GLError;module.exports=GLError;},{}],135:[function(_dereq_,module,exports){'use strict';module.exports=createAttributeWrapper;var GLError=_dereq_(\"./GLError\");function ShaderAttribute(gl,wrapper,index,locations,dimension,constFunc){this._gl=gl;this._wrapper=wrapper;this._index=index;this._locations=locations;this._dimension=dimension;this._constFunc=constFunc;}var proto=ShaderAttribute.prototype;proto.pointer=function setAttribPointer(type,normalized,stride,offset){var self=this;var gl=self._gl;var location=self._locations[self._index];gl.vertexAttribPointer(location,self._dimension,type||gl.FLOAT,!!normalized,stride||0,offset||0);gl.enableVertexAttribArray(location);};proto.set=function(x0,x1,x2,x3){return this._constFunc(this._locations[this._index],x0,x1,x2,x3);};Object.defineProperty(proto,'location',{get:function get(){return this._locations[this._index];},set:function set(v){if(v!==this._locations[this._index]){this._locations[this._index]=v|0;this._wrapper.program=null;}return v|0;}});//Adds a vector attribute to obj\nfunction addVectorAttribute(gl,wrapper,index,locations,dimension,obj,name){//Construct constant function\nvar constFuncArgs=['gl','v'];var varNames=[];for(var i=0;i<dimension;++i){constFuncArgs.push('x'+i);varNames.push('x'+i);}constFuncArgs.push('if(x0.length===void 0){return gl.vertexAttrib'+dimension+'f(v,'+varNames.join()+')}else{return gl.vertexAttrib'+dimension+'fv(v,x0)}');var constFunc=Function.apply(null,constFuncArgs);//Create attribute wrapper\nvar attr=new ShaderAttribute(gl,wrapper,index,locations,dimension,constFunc);//Create accessor\nObject.defineProperty(obj,name,{set:function set(x){gl.disableVertexAttribArray(locations[index]);constFunc(gl,locations[index],x);return x;},get:function get(){return attr;},enumerable:true});}function addMatrixAttribute(gl,wrapper,index,locations,dimension,obj,name){var parts=new Array(dimension);var attrs=new Array(dimension);for(var i=0;i<dimension;++i){addVectorAttribute(gl,wrapper,index[i],locations,dimension,parts,i);attrs[i]=parts[i];}Object.defineProperty(parts,'location',{set:function set(v){if(Array.isArray(v)){for(var i=0;i<dimension;++i){attrs[i].location=v[i];}}else{for(var i=0;i<dimension;++i){attrs[i].location=v+i;}}return v;},get:function get(){var result=new Array(dimension);for(var i=0;i<dimension;++i){result[i]=locations[index[i]];}return result;},enumerable:true});parts.pointer=function(type,normalized,stride,offset){type=type||gl.FLOAT;normalized=!!normalized;stride=stride||dimension*dimension;offset=offset||0;for(var i=0;i<dimension;++i){var location=locations[index[i]];gl.vertexAttribPointer(location,dimension,type,normalized,stride,offset+i*dimension);gl.enableVertexAttribArray(location);}};var scratch=new Array(dimension);var vertexAttrib=gl['vertexAttrib'+dimension+'fv'];Object.defineProperty(obj,name,{set:function set(x){for(var i=0;i<dimension;++i){var loc=locations[index[i]];gl.disableVertexAttribArray(loc);if(Array.isArray(x[0])){vertexAttrib.call(gl,loc,x[i]);}else{for(var j=0;j<dimension;++j){scratch[j]=x[dimension*i+j];}vertexAttrib.call(gl,loc,scratch);}}return x;},get:function get(){return parts;},enumerable:true});}//Create shims for attributes\nfunction createAttributeWrapper(gl,wrapper,attributes,locations){var obj={};for(var i=0,n=attributes.length;i<n;++i){var a=attributes[i];var name=a.name;var type=a.type;var locs=a.locations;switch(type){case'bool':case'int':case'float':addVectorAttribute(gl,wrapper,locs[0],locations,1,obj,name);break;default:if(type.indexOf('vec')>=0){var d=type.charCodeAt(type.length-1)-48;if(d<2||d>4){throw new GLError('','Invalid data type for attribute '+name+': '+type);}addVectorAttribute(gl,wrapper,locs[0],locations,d,obj,name);}else if(type.indexOf('mat')>=0){var d=type.charCodeAt(type.length-1)-48;if(d<2||d>4){throw new GLError('','Invalid data type for attribute '+name+': '+type);}addMatrixAttribute(gl,wrapper,locs,locations,d,obj,name);}else{throw new GLError('','Unknown data type for attribute '+name+': '+type);}break;}}return obj;}},{\"./GLError\":134}],136:[function(_dereq_,module,exports){'use strict';var coallesceUniforms=_dereq_('./reflect');var GLError=_dereq_(\"./GLError\");module.exports=createUniformWrapper;//Binds a function and returns a value\nfunction identity(x){var c=new Function('y','return function(){return y}');return c(x);}function makeVector(length,fill){var result=new Array(length);for(var i=0;i<length;++i){result[i]=fill;}return result;}//Create shims for uniforms\nfunction createUniformWrapper(gl,wrapper,uniforms,locations){function makeGetter(index){var proc=new Function('gl','wrapper','locations','return function(){return gl.getUniform(wrapper.program,locations['+index+'])}');return proc(gl,wrapper,locations);}function makePropSetter(path,index,type){switch(type){case'bool':case'int':case'sampler2D':case'samplerCube':return'gl.uniform1i(locations['+index+'],obj'+path+')';case'float':return'gl.uniform1f(locations['+index+'],obj'+path+')';default:var vidx=type.indexOf('vec');if(0<=vidx&&vidx<=1&&type.length===4+vidx){var d=type.charCodeAt(type.length-1)-48;if(d<2||d>4){throw new GLError('','Invalid data type');}switch(type.charAt(0)){case'b':case'i':return'gl.uniform'+d+'iv(locations['+index+'],obj'+path+')';case'v':return'gl.uniform'+d+'fv(locations['+index+'],obj'+path+')';default:throw new GLError('','Unrecognized data type for vector '+name+': '+type);}}else if(type.indexOf('mat')===0&&type.length===4){var d=type.charCodeAt(type.length-1)-48;if(d<2||d>4){throw new GLError('','Invalid uniform dimension type for matrix '+name+': '+type);}return'gl.uniformMatrix'+d+'fv(locations['+index+'],false,obj'+path+')';}else{throw new GLError('','Unknown uniform data type for '+name+': '+type);}break;}}function enumerateIndices(prefix,type){if(_typeof(type)!=='object'){return[[prefix,type]];}var indices=[];for(var id in type){var prop=type[id];var tprefix=prefix;if(parseInt(id)+''===id){tprefix+='['+id+']';}else{tprefix+='.'+id;}if(_typeof(prop)==='object'){indices.push.apply(indices,enumerateIndices(tprefix,prop));}else{indices.push([tprefix,prop]);}}return indices;}function makeSetter(type){var code=['return function updateProperty(obj){'];var indices=enumerateIndices('',type);for(var i=0;i<indices.length;++i){var item=indices[i];var path=item[0];var idx=item[1];if(locations[idx]){code.push(makePropSetter(path,idx,uniforms[idx].type));}}code.push('return obj}');var proc=new Function('gl','locations',code.join('\\n'));return proc(gl,locations);}function defaultValue(type){switch(type){case'bool':return false;case'int':case'sampler2D':case'samplerCube':return 0;case'float':return 0.0;default:var vidx=type.indexOf('vec');if(0<=vidx&&vidx<=1&&type.length===4+vidx){var d=type.charCodeAt(type.length-1)-48;if(d<2||d>4){throw new GLError('','Invalid data type');}if(type.charAt(0)==='b'){return makeVector(d,false);}return makeVector(d,0);}else if(type.indexOf('mat')===0&&type.length===4){var d=type.charCodeAt(type.length-1)-48;if(d<2||d>4){throw new GLError('','Invalid uniform dimension type for matrix '+name+': '+type);}return makeVector(d*d,0);}else{throw new GLError('','Unknown uniform data type for '+name+': '+type);}break;}}function storeProperty(obj,prop,type){if(_typeof(type)==='object'){var child=processObject(type);Object.defineProperty(obj,prop,{get:identity(child),set:makeSetter(type),enumerable:true,configurable:false});}else{if(locations[type]){Object.defineProperty(obj,prop,{get:makeGetter(type),set:makeSetter(type),enumerable:true,configurable:false});}else{obj[prop]=defaultValue(uniforms[type].type);}}}function processObject(obj){var result;if(Array.isArray(obj)){result=new Array(obj.length);for(var i=0;i<obj.length;++i){storeProperty(result,i,obj[i]);}}else{result={};for(var id in obj){storeProperty(result,id,obj[id]);}}return result;}//Return data\nvar coallesced=coallesceUniforms(uniforms,true);return{get:identity(processObject(coallesced)),set:makeSetter(coallesced),enumerable:true,configurable:true};}},{\"./GLError\":134,\"./reflect\":137}],137:[function(_dereq_,module,exports){'use strict';module.exports=makeReflectTypes;//Construct type info for reflection.\n//\n// This iterates over the flattened list of uniform type values and smashes them into a JSON object.\n//\n// The leaves of the resulting object are either indices or type strings representing primitive glslify types\nfunction makeReflectTypes(uniforms,useIndex){var obj={};for(var i=0;i<uniforms.length;++i){var n=uniforms[i].name;var parts=n.split(\".\");var o=obj;for(var j=0;j<parts.length;++j){var x=parts[j].split(\"[\");if(x.length>1){if(!(x[0]in o)){o[x[0]]=[];}o=o[x[0]];for(var k=1;k<x.length;++k){var y=parseInt(x[k]);if(k<x.length-1||j<parts.length-1){if(!(y in o)){if(k<x.length-1){o[y]=[];}else{o[y]={};}}o=o[y];}else{if(useIndex){o[y]=i;}else{o[y]=uniforms[i].type;}}}}else if(j<parts.length-1){if(!(x[0]in o)){o[x[0]]={};}o=o[x[0]];}else{if(useIndex){o[x[0]]=i;}else{o[x[0]]=uniforms[i].type;}}}}return obj;}},{}],138:[function(_dereq_,module,exports){'use strict';exports.uniforms=runtimeUniforms;exports.attributes=runtimeAttributes;var GL_TO_GLSL_TYPES={'FLOAT':'float','FLOAT_VEC2':'vec2','FLOAT_VEC3':'vec3','FLOAT_VEC4':'vec4','INT':'int','INT_VEC2':'ivec2','INT_VEC3':'ivec3','INT_VEC4':'ivec4','BOOL':'bool','BOOL_VEC2':'bvec2','BOOL_VEC3':'bvec3','BOOL_VEC4':'bvec4','FLOAT_MAT2':'mat2','FLOAT_MAT3':'mat3','FLOAT_MAT4':'mat4','SAMPLER_2D':'sampler2D','SAMPLER_CUBE':'samplerCube'};var GL_TABLE=null;function getType(gl,type){if(!GL_TABLE){var typeNames=Object.keys(GL_TO_GLSL_TYPES);GL_TABLE={};for(var i=0;i<typeNames.length;++i){var tn=typeNames[i];GL_TABLE[gl[tn]]=GL_TO_GLSL_TYPES[tn];}}return GL_TABLE[type];}function runtimeUniforms(gl,program){var numUniforms=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS);var result=[];for(var i=0;i<numUniforms;++i){var info=gl.getActiveUniform(program,i);if(info){var type=getType(gl,info.type);if(info.size>1){for(var j=0;j<info.size;++j){result.push({name:info.name.replace('[0]','['+j+']'),type:type});}}else{result.push({name:info.name,type:type});}}}return result;}function runtimeAttributes(gl,program){var numAttributes=gl.getProgramParameter(program,gl.ACTIVE_ATTRIBUTES);var result=[];for(var i=0;i<numAttributes;++i){var info=gl.getActiveAttrib(program,i);if(info){result.push({name:info.name,type:getType(gl,info.type)});}}return result;}},{}],139:[function(_dereq_,module,exports){'use strict';exports.shader=getShaderReference;exports.program=createProgram;var GLError=_dereq_(\"./GLError\");var formatCompilerError=_dereq_('gl-format-compiler-error');var weakMap=typeof WeakMap==='undefined'?_dereq_('weakmap-shim'):WeakMap;var CACHE=new weakMap();var SHADER_COUNTER=0;function ShaderReference(id,src,type,shader,programs,count,cache){this.id=id;this.src=src;this.type=type;this.shader=shader;this.count=count;this.programs=[];this.cache=cache;}ShaderReference.prototype.dispose=function(){if(--this.count===0){var cache=this.cache;var gl=cache.gl;//Remove program references\nvar programs=this.programs;for(var i=0,n=programs.length;i<n;++i){var p=cache.programs[programs[i]];if(p){delete cache.programs[i];gl.deleteProgram(p);}}//Remove shader reference\ngl.deleteShader(this.shader);delete cache.shaders[this.type===gl.FRAGMENT_SHADER|0][this.src];}};function ContextCache(gl){this.gl=gl;this.shaders=[{},{}];this.programs={};}var proto=ContextCache.prototype;function compileShader(gl,type,src){var shader=gl.createShader(type);gl.shaderSource(shader,src);gl.compileShader(shader);if(!gl.getShaderParameter(shader,gl.COMPILE_STATUS)){var errLog=gl.getShaderInfoLog(shader);try{var fmt=formatCompilerError(errLog,src,type);}catch(e){console.warn('Failed to format compiler error: '+e);throw new GLError(errLog,'Error compiling shader:\\n'+errLog);}throw new GLError(errLog,fmt.short,fmt.long);}return shader;}proto.getShaderReference=function(type,src){var gl=this.gl;var shaders=this.shaders[type===gl.FRAGMENT_SHADER|0];var shader=shaders[src];if(!shader||!gl.isShader(shader.shader)){var shaderObj=compileShader(gl,type,src);shader=shaders[src]=new ShaderReference(SHADER_COUNTER++,src,type,shaderObj,[],1,this);}else{shader.count+=1;}return shader;};function linkProgram(gl,vshader,fshader,attribs,locations){var program=gl.createProgram();gl.attachShader(program,vshader);gl.attachShader(program,fshader);for(var i=0;i<attribs.length;++i){gl.bindAttribLocation(program,locations[i],attribs[i]);}gl.linkProgram(program);if(!gl.getProgramParameter(program,gl.LINK_STATUS)){var errLog=gl.getProgramInfoLog(program);throw new GLError(errLog,'Error linking program: '+errLog);}return program;}proto.getProgram=function(vref,fref,attribs,locations){var token=[vref.id,fref.id,attribs.join(':'),locations.join(':')].join('@');var prog=this.programs[token];if(!prog||!this.gl.isProgram(prog)){this.programs[token]=prog=linkProgram(this.gl,vref.shader,fref.shader,attribs,locations);vref.programs.push(token);fref.programs.push(token);}return prog;};function getCache(gl){var ctxCache=CACHE.get(gl);if(!ctxCache){ctxCache=new ContextCache(gl);CACHE.set(gl,ctxCache);}return ctxCache;}function getShaderReference(gl,type,src){return getCache(gl).getShaderReference(type,src);}function createProgram(gl,vref,fref,attribs,locations){return getCache(gl).getProgram(vref,fref,attribs,locations);}},{\"./GLError\":134,\"gl-format-compiler-error\":102,\"weakmap-shim\":278}],140:[function(_dereq_,module,exports){'use strict';var glslify=_dereq_('glslify');var createShader=_dereq_('gl-shader');var vertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nattribute vec3 position, color;\\nattribute float weight;\\n\\nuniform mat4 model, view, projection;\\nuniform vec3 coordinates[3];\\nuniform vec4 colors[3];\\nuniform vec2 screenShape;\\nuniform float lineWidth;\\n\\nvarying vec4 fragColor;\\n\\nvoid main() {\\n  vec3 vertexPosition = mix(coordinates[0],\\n    mix(coordinates[2], coordinates[1], 0.5 * (position + 1.0)), abs(position));\\n\\n  vec4 clipPos = projection * view * model * vec4(vertexPosition, 1.0);\\n  vec2 clipOffset = (projection * view * model * vec4(color, 0.0)).xy;\\n  vec2 delta = weight * clipOffset * screenShape;\\n  vec2 lineOffset = normalize(vec2(delta.y, -delta.x)) / screenShape;\\n\\n  gl_Position   = vec4(clipPos.xy + clipPos.w * 0.5 * lineWidth * lineOffset, clipPos.z, clipPos.w);\\n  fragColor     = color.x * colors[0] + color.y * colors[1] + color.z * colors[2];\\n}\\n\"]);var fragSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nvarying vec4 fragColor;\\n\\nvoid main() {\\n  gl_FragColor = fragColor;\\n}\"]);module.exports=function(gl){return createShader(gl,vertSrc,fragSrc,null,[{name:'position',type:'vec3'},{name:'color',type:'vec3'},{name:'weight',type:'float'}]);};},{\"gl-shader\":133,\"glslify\":162}],141:[function(_dereq_,module,exports){'use strict';var createBuffer=_dereq_('gl-buffer');var createVAO=_dereq_('gl-vao');var createShader=_dereq_('./shaders/index');module.exports=createSpikes;var identity=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];function AxisSpikes(gl,buffer,vao,shader){this.gl=gl;this.buffer=buffer;this.vao=vao;this.shader=shader;this.pixelRatio=1;this.bounds=[[-1000,-1000,-1000],[1000,1000,1000]];this.position=[0,0,0];this.lineWidth=[2,2,2];this.colors=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.enabled=[true,true,true];this.drawSides=[true,true,true];this.axes=null;}var proto=AxisSpikes.prototype;var OUTER_FACE=[0,0,0];var INNER_FACE=[0,0,0];var SHAPE=[0,0];proto.isTransparent=function(){return false;};proto.drawTransparent=function(camera){};proto.draw=function(camera){var gl=this.gl;var vao=this.vao;var shader=this.shader;vao.bind();shader.bind();var model=camera.model||identity;var view=camera.view||identity;var projection=camera.projection||identity;var axis;if(this.axes){axis=this.axes.lastCubeProps.axis;}var outerFace=OUTER_FACE;var innerFace=INNER_FACE;for(var i=0;i<3;++i){if(axis&&axis[i]<0){outerFace[i]=this.bounds[0][i];innerFace[i]=this.bounds[1][i];}else{outerFace[i]=this.bounds[1][i];innerFace[i]=this.bounds[0][i];}}SHAPE[0]=gl.drawingBufferWidth;SHAPE[1]=gl.drawingBufferHeight;shader.uniforms.model=model;shader.uniforms.view=view;shader.uniforms.projection=projection;shader.uniforms.coordinates=[this.position,outerFace,innerFace];shader.uniforms.colors=this.colors;shader.uniforms.screenShape=SHAPE;for(var i=0;i<3;++i){shader.uniforms.lineWidth=this.lineWidth[i]*this.pixelRatio;if(this.enabled[i]){vao.draw(gl.TRIANGLES,6,6*i);if(this.drawSides[i]){vao.draw(gl.TRIANGLES,12,18+12*i);}}}vao.unbind();};proto.update=function(options){if(!options){return;}if(\"bounds\"in options){this.bounds=options.bounds;}if(\"position\"in options){this.position=options.position;}if(\"lineWidth\"in options){this.lineWidth=options.lineWidth;}if(\"colors\"in options){this.colors=options.colors;}if(\"enabled\"in options){this.enabled=options.enabled;}if(\"drawSides\"in options){this.drawSides=options.drawSides;}};proto.dispose=function(){this.vao.dispose();this.buffer.dispose();this.shader.dispose();};function createSpikes(gl,options){//Create buffers\nvar data=[];function line(x,y,z,i,l,h){var row=[x,y,z,0,0,0,1];row[i+3]=1;row[i]=l;data.push.apply(data,row);row[6]=-1;data.push.apply(data,row);row[i]=h;data.push.apply(data,row);data.push.apply(data,row);row[6]=1;data.push.apply(data,row);row[i]=l;data.push.apply(data,row);}line(0,0,0,0,0,1);line(0,0,0,1,0,1);line(0,0,0,2,0,1);line(1,0,0,1,-1,1);line(1,0,0,2,-1,1);line(0,1,0,0,-1,1);line(0,1,0,2,-1,1);line(0,0,1,0,-1,1);line(0,0,1,1,-1,1);var buffer=createBuffer(gl,data);var vao=createVAO(gl,[{type:gl.FLOAT,buffer:buffer,size:3,offset:0,stride:28},{type:gl.FLOAT,buffer:buffer,size:3,offset:12,stride:28},{type:gl.FLOAT,buffer:buffer,size:1,offset:24,stride:28}]);//Create shader\nvar shader=createShader(gl);shader.attributes.position.location=0;shader.attributes.color.location=1;shader.attributes.weight.location=2;//Create spike object\nvar spikes=new AxisSpikes(gl,buffer,vao,shader);//Set parameters\nspikes.update(options);//Return resulting object\nreturn spikes;}},{\"./shaders/index\":140,\"gl-buffer\":93,\"gl-vao\":146}],142:[function(_dereq_,module,exports){'use strict';var ndarray=_dereq_('ndarray');var ops=_dereq_('ndarray-ops');var pool=_dereq_('typedarray-pool');module.exports=createTexture2D;var linearTypes=null;var filterTypes=null;var wrapTypes=null;function lazyInitLinearTypes(gl){linearTypes=[gl.LINEAR,gl.NEAREST_MIPMAP_LINEAR,gl.LINEAR_MIPMAP_NEAREST,gl.LINEAR_MIPMAP_NEAREST];filterTypes=[gl.NEAREST,gl.LINEAR,gl.NEAREST_MIPMAP_NEAREST,gl.NEAREST_MIPMAP_LINEAR,gl.LINEAR_MIPMAP_NEAREST,gl.LINEAR_MIPMAP_LINEAR];wrapTypes=[gl.REPEAT,gl.CLAMP_TO_EDGE,gl.MIRRORED_REPEAT];}function acceptTextureDOM(obj){return'undefined'!=typeof HTMLCanvasElement&&obj instanceof HTMLCanvasElement||'undefined'!=typeof HTMLImageElement&&obj instanceof HTMLImageElement||'undefined'!=typeof HTMLVideoElement&&obj instanceof HTMLVideoElement||'undefined'!=typeof ImageData&&obj instanceof ImageData;}var convertFloatToUint8=function convertFloatToUint8(out,inp){ops.muls(out,inp,255.0);};function reshapeTexture(tex,w,h){var gl=tex.gl;var maxSize=gl.getParameter(gl.MAX_TEXTURE_SIZE);if(w<0||w>maxSize||h<0||h>maxSize){throw new Error('gl-texture2d: Invalid texture size');}tex._shape=[w,h];tex.bind();gl.texImage2D(gl.TEXTURE_2D,0,tex.format,w,h,0,tex.format,tex.type,null);tex._mipLevels=[0];return tex;}function Texture2D(gl,handle,width,height,format,type){this.gl=gl;this.handle=handle;this.format=format;this.type=type;this._shape=[width,height];this._mipLevels=[0];this._magFilter=gl.NEAREST;this._minFilter=gl.NEAREST;this._wrapS=gl.CLAMP_TO_EDGE;this._wrapT=gl.CLAMP_TO_EDGE;this._anisoSamples=1;var parent=this;var wrapVector=[this._wrapS,this._wrapT];Object.defineProperties(wrapVector,[{get:function get(){return parent._wrapS;},set:function set(v){return parent.wrapS=v;}},{get:function get(){return parent._wrapT;},set:function set(v){return parent.wrapT=v;}}]);this._wrapVector=wrapVector;var shapeVector=[this._shape[0],this._shape[1]];Object.defineProperties(shapeVector,[{get:function get(){return parent._shape[0];},set:function set(v){return parent.width=v;}},{get:function get(){return parent._shape[1];},set:function set(v){return parent.height=v;}}]);this._shapeVector=shapeVector;}var proto=Texture2D.prototype;Object.defineProperties(proto,{minFilter:{get:function get(){return this._minFilter;},set:function set(v){this.bind();var gl=this.gl;if(this.type===gl.FLOAT&&linearTypes.indexOf(v)>=0){if(!gl.getExtension('OES_texture_float_linear')){v=gl.NEAREST;}}if(filterTypes.indexOf(v)<0){throw new Error('gl-texture2d: Unknown filter mode '+v);}gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,v);return this._minFilter=v;}},magFilter:{get:function get(){return this._magFilter;},set:function set(v){this.bind();var gl=this.gl;if(this.type===gl.FLOAT&&linearTypes.indexOf(v)>=0){if(!gl.getExtension('OES_texture_float_linear')){v=gl.NEAREST;}}if(filterTypes.indexOf(v)<0){throw new Error('gl-texture2d: Unknown filter mode '+v);}gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,v);return this._magFilter=v;}},mipSamples:{get:function get(){return this._anisoSamples;},set:function set(i){var psamples=this._anisoSamples;this._anisoSamples=Math.max(i,1)|0;if(psamples!==this._anisoSamples){var ext=this.gl.getExtension('EXT_texture_filter_anisotropic');if(ext){this.gl.texParameterf(this.gl.TEXTURE_2D,ext.TEXTURE_MAX_ANISOTROPY_EXT,this._anisoSamples);}}return this._anisoSamples;}},wrapS:{get:function get(){return this._wrapS;},set:function set(v){this.bind();if(wrapTypes.indexOf(v)<0){throw new Error('gl-texture2d: Unknown wrap mode '+v);}this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,v);return this._wrapS=v;}},wrapT:{get:function get(){return this._wrapT;},set:function set(v){this.bind();if(wrapTypes.indexOf(v)<0){throw new Error('gl-texture2d: Unknown wrap mode '+v);}this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,v);return this._wrapT=v;}},wrap:{get:function get(){return this._wrapVector;},set:function set(v){if(!Array.isArray(v)){v=[v,v];}if(v.length!==2){throw new Error('gl-texture2d: Must specify wrap mode for rows and columns');}for(var i=0;i<2;++i){if(wrapTypes.indexOf(v[i])<0){throw new Error('gl-texture2d: Unknown wrap mode '+v);}}this._wrapS=v[0];this._wrapT=v[1];var gl=this.gl;this.bind();gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,this._wrapS);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,this._wrapT);return v;}},shape:{get:function get(){return this._shapeVector;},set:function set(x){if(!Array.isArray(x)){x=[x|0,x|0];}else{if(x.length!==2){throw new Error('gl-texture2d: Invalid texture shape');}}reshapeTexture(this,x[0]|0,x[1]|0);return[x[0]|0,x[1]|0];}},width:{get:function get(){return this._shape[0];},set:function set(w){w=w|0;reshapeTexture(this,w,this._shape[1]);return w;}},height:{get:function get(){return this._shape[1];},set:function set(h){h=h|0;reshapeTexture(this,this._shape[0],h);return h;}}});proto.bind=function(unit){var gl=this.gl;if(unit!==undefined){gl.activeTexture(gl.TEXTURE0+(unit|0));}gl.bindTexture(gl.TEXTURE_2D,this.handle);if(unit!==undefined){return unit|0;}return gl.getParameter(gl.ACTIVE_TEXTURE)-gl.TEXTURE0;};proto.dispose=function(){this.gl.deleteTexture(this.handle);};proto.generateMipmap=function(){this.bind();this.gl.generateMipmap(this.gl.TEXTURE_2D);//Update mip levels\nvar l=Math.min(this._shape[0],this._shape[1]);for(var i=0;l>0;++i,l>>>=1){if(this._mipLevels.indexOf(i)<0){this._mipLevels.push(i);}}};proto.setPixels=function(data,x_off,y_off,mip_level){var gl=this.gl;this.bind();if(Array.isArray(x_off)){mip_level=y_off;y_off=x_off[1]|0;x_off=x_off[0]|0;}else{x_off=x_off||0;y_off=y_off||0;}mip_level=mip_level||0;var directData=acceptTextureDOM(data)?data:data.raw;if(directData){var needsMip=this._mipLevels.indexOf(mip_level)<0;if(needsMip){gl.texImage2D(gl.TEXTURE_2D,0,this.format,this.format,this.type,directData);this._mipLevels.push(mip_level);}else{gl.texSubImage2D(gl.TEXTURE_2D,mip_level,x_off,y_off,this.format,this.type,directData);}}else if(data.shape&&data.stride&&data.data){if(data.shape.length<2||x_off+data.shape[1]>this._shape[1]>>>mip_level||y_off+data.shape[0]>this._shape[0]>>>mip_level||x_off<0||y_off<0){throw new Error('gl-texture2d: Texture dimensions are out of bounds');}texSubImageArray(gl,x_off,y_off,mip_level,this.format,this.type,this._mipLevels,data);}else{throw new Error('gl-texture2d: Unsupported data type');}};function isPacked(shape,stride){if(shape.length===3){return stride[2]===1&&stride[1]===shape[0]*shape[2]&&stride[0]===shape[2];}return stride[0]===1&&stride[1]===shape[0];}function texSubImageArray(gl,x_off,y_off,mip_level,cformat,ctype,mipLevels,array){var dtype=array.dtype;var shape=array.shape.slice();if(shape.length<2||shape.length>3){throw new Error('gl-texture2d: Invalid ndarray, must be 2d or 3d');}var type=0,format=0;var packed=isPacked(shape,array.stride.slice());if(dtype==='float32'){type=gl.FLOAT;}else if(dtype==='float64'){type=gl.FLOAT;packed=false;dtype='float32';}else if(dtype==='uint8'){type=gl.UNSIGNED_BYTE;}else{type=gl.UNSIGNED_BYTE;packed=false;dtype='uint8';}var channels=1;if(shape.length===2){format=gl.LUMINANCE;shape=[shape[0],shape[1],1];array=ndarray(array.data,shape,[array.stride[0],array.stride[1],1],array.offset);}else if(shape.length===3){if(shape[2]===1){format=gl.ALPHA;}else if(shape[2]===2){format=gl.LUMINANCE_ALPHA;}else if(shape[2]===3){format=gl.RGB;}else if(shape[2]===4){format=gl.RGBA;}else{throw new Error('gl-texture2d: Invalid shape for pixel coords');}channels=shape[2];}else{throw new Error('gl-texture2d: Invalid shape for texture');}//For 1-channel textures allow conversion between formats\nif((format===gl.LUMINANCE||format===gl.ALPHA)&&(cformat===gl.LUMINANCE||cformat===gl.ALPHA)){format=cformat;}if(format!==cformat){throw new Error('gl-texture2d: Incompatible texture format for setPixels');}var size=array.size;var needsMip=mipLevels.indexOf(mip_level)<0;if(needsMip){mipLevels.push(mip_level);}if(type===ctype&&packed){//Array data types are compatible, can directly copy into texture\nif(array.offset===0&&array.data.length===size){if(needsMip){gl.texImage2D(gl.TEXTURE_2D,mip_level,cformat,shape[0],shape[1],0,cformat,ctype,array.data);}else{gl.texSubImage2D(gl.TEXTURE_2D,mip_level,x_off,y_off,shape[0],shape[1],cformat,ctype,array.data);}}else{if(needsMip){gl.texImage2D(gl.TEXTURE_2D,mip_level,cformat,shape[0],shape[1],0,cformat,ctype,array.data.subarray(array.offset,array.offset+size));}else{gl.texSubImage2D(gl.TEXTURE_2D,mip_level,x_off,y_off,shape[0],shape[1],cformat,ctype,array.data.subarray(array.offset,array.offset+size));}}}else{//Need to do type conversion to pack data into buffer\nvar pack_buffer;if(ctype===gl.FLOAT){pack_buffer=pool.mallocFloat32(size);}else{pack_buffer=pool.mallocUint8(size);}var pack_view=ndarray(pack_buffer,shape,[shape[2],shape[2]*shape[0],1]);if(type===gl.FLOAT&&ctype===gl.UNSIGNED_BYTE){convertFloatToUint8(pack_view,array);}else{ops.assign(pack_view,array);}if(needsMip){gl.texImage2D(gl.TEXTURE_2D,mip_level,cformat,shape[0],shape[1],0,cformat,ctype,pack_buffer.subarray(0,size));}else{gl.texSubImage2D(gl.TEXTURE_2D,mip_level,x_off,y_off,shape[0],shape[1],cformat,ctype,pack_buffer.subarray(0,size));}if(ctype===gl.FLOAT){pool.freeFloat32(pack_buffer);}else{pool.freeUint8(pack_buffer);}}}function initTexture(gl){var tex=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,tex);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);return tex;}function createTextureShape(gl,width,height,format,type){var maxTextureSize=gl.getParameter(gl.MAX_TEXTURE_SIZE);if(width<0||width>maxTextureSize||height<0||height>maxTextureSize){throw new Error('gl-texture2d: Invalid texture shape');}if(type===gl.FLOAT&&!gl.getExtension('OES_texture_float')){throw new Error('gl-texture2d: Floating point textures not supported on this platform');}var tex=initTexture(gl);gl.texImage2D(gl.TEXTURE_2D,0,format,width,height,0,format,type,null);return new Texture2D(gl,tex,width,height,format,type);}function createTextureDOM(gl,directData,width,height,format,type){var tex=initTexture(gl);gl.texImage2D(gl.TEXTURE_2D,0,format,format,type,directData);return new Texture2D(gl,tex,width,height,format,type);}//Creates a texture from an ndarray\nfunction createTextureArray(gl,array){var dtype=array.dtype;var shape=array.shape.slice();var maxSize=gl.getParameter(gl.MAX_TEXTURE_SIZE);if(shape[0]<0||shape[0]>maxSize||shape[1]<0||shape[1]>maxSize){throw new Error('gl-texture2d: Invalid texture size');}var packed=isPacked(shape,array.stride.slice());var type=0;if(dtype==='float32'){type=gl.FLOAT;}else if(dtype==='float64'){type=gl.FLOAT;packed=false;dtype='float32';}else if(dtype==='uint8'){type=gl.UNSIGNED_BYTE;}else{type=gl.UNSIGNED_BYTE;packed=false;dtype='uint8';}var format=0;if(shape.length===2){format=gl.LUMINANCE;shape=[shape[0],shape[1],1];array=ndarray(array.data,shape,[array.stride[0],array.stride[1],1],array.offset);}else if(shape.length===3){if(shape[2]===1){format=gl.ALPHA;}else if(shape[2]===2){format=gl.LUMINANCE_ALPHA;}else if(shape[2]===3){format=gl.RGB;}else if(shape[2]===4){format=gl.RGBA;}else{throw new Error('gl-texture2d: Invalid shape for pixel coords');}}else{throw new Error('gl-texture2d: Invalid shape for texture');}if(type===gl.FLOAT&&!gl.getExtension('OES_texture_float')){type=gl.UNSIGNED_BYTE;packed=false;}var buffer,buf_store;var size=array.size;if(!packed){var stride=[shape[2],shape[2]*shape[0],1];buf_store=pool.malloc(size,dtype);var buf_array=ndarray(buf_store,shape,stride,0);if((dtype==='float32'||dtype==='float64')&&type===gl.UNSIGNED_BYTE){convertFloatToUint8(buf_array,array);}else{ops.assign(buf_array,array);}buffer=buf_store.subarray(0,size);}else if(array.offset===0&&array.data.length===size){buffer=array.data;}else{buffer=array.data.subarray(array.offset,array.offset+size);}var tex=initTexture(gl);gl.texImage2D(gl.TEXTURE_2D,0,format,shape[0],shape[1],0,format,type,buffer);if(!packed){pool.free(buf_store);}return new Texture2D(gl,tex,shape[0],shape[1],format,type);}function createTexture2D(gl){if(arguments.length<=1){throw new Error('gl-texture2d: Missing arguments for texture2d constructor');}if(!linearTypes){lazyInitLinearTypes(gl);}if(typeof arguments[1]==='number'){return createTextureShape(gl,arguments[1],arguments[2],arguments[3]||gl.RGBA,arguments[4]||gl.UNSIGNED_BYTE);}if(Array.isArray(arguments[1])){return createTextureShape(gl,arguments[1][0]|0,arguments[1][1]|0,arguments[2]||gl.RGBA,arguments[3]||gl.UNSIGNED_BYTE);}if(_typeof(arguments[1])==='object'){var obj=arguments[1];var directData=acceptTextureDOM(obj)?obj:obj.raw;if(directData){return createTextureDOM(gl,directData,obj.width|0,obj.height|0,arguments[2]||gl.RGBA,arguments[3]||gl.UNSIGNED_BYTE);}else if(obj.shape&&obj.data&&obj.stride){return createTextureArray(gl,obj);}}throw new Error('gl-texture2d: Invalid arguments for texture2d constructor');}},{\"ndarray\":192,\"ndarray-ops\":189,\"typedarray-pool\":270}],143:[function(_dereq_,module,exports){\"use strict\";function doBind(gl,elements,attributes){if(elements){elements.bind();}else{gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,null);}var nattribs=gl.getParameter(gl.MAX_VERTEX_ATTRIBS)|0;if(attributes){if(attributes.length>nattribs){throw new Error(\"gl-vao: Too many vertex attributes\");}for(var i=0;i<attributes.length;++i){var attrib=attributes[i];if(attrib.buffer){var buffer=attrib.buffer;var size=attrib.size||4;var type=attrib.type||gl.FLOAT;var normalized=!!attrib.normalized;var stride=attrib.stride||0;var offset=attrib.offset||0;buffer.bind();gl.enableVertexAttribArray(i);gl.vertexAttribPointer(i,size,type,normalized,stride,offset);}else{if(typeof attrib===\"number\"){gl.vertexAttrib1f(i,attrib);}else if(attrib.length===1){gl.vertexAttrib1f(i,attrib[0]);}else if(attrib.length===2){gl.vertexAttrib2f(i,attrib[0],attrib[1]);}else if(attrib.length===3){gl.vertexAttrib3f(i,attrib[0],attrib[1],attrib[2]);}else if(attrib.length===4){gl.vertexAttrib4f(i,attrib[0],attrib[1],attrib[2],attrib[3]);}else{throw new Error(\"gl-vao: Invalid vertex attribute\");}gl.disableVertexAttribArray(i);}}for(;i<nattribs;++i){gl.disableVertexAttribArray(i);}}else{gl.bindBuffer(gl.ARRAY_BUFFER,null);for(var i=0;i<nattribs;++i){gl.disableVertexAttribArray(i);}}}module.exports=doBind;},{}],144:[function(_dereq_,module,exports){\"use strict\";var bindAttribs=_dereq_(\"./do-bind.js\");function VAOEmulated(gl){this.gl=gl;this._elements=null;this._attributes=null;this._elementsType=gl.UNSIGNED_SHORT;}VAOEmulated.prototype.bind=function(){bindAttribs(this.gl,this._elements,this._attributes);};VAOEmulated.prototype.update=function(attributes,elements,elementsType){this._elements=elements;this._attributes=attributes;this._elementsType=elementsType||this.gl.UNSIGNED_SHORT;};VAOEmulated.prototype.dispose=function(){};VAOEmulated.prototype.unbind=function(){};VAOEmulated.prototype.draw=function(mode,count,offset){offset=offset||0;var gl=this.gl;if(this._elements){gl.drawElements(mode,count,this._elementsType,offset);}else{gl.drawArrays(mode,offset,count);}};function createVAOEmulated(gl){return new VAOEmulated(gl);}module.exports=createVAOEmulated;},{\"./do-bind.js\":143}],145:[function(_dereq_,module,exports){\"use strict\";var bindAttribs=_dereq_(\"./do-bind.js\");function VertexAttribute(location,dimension,a,b,c,d){this.location=location;this.dimension=dimension;this.a=a;this.b=b;this.c=c;this.d=d;}VertexAttribute.prototype.bind=function(gl){switch(this.dimension){case 1:gl.vertexAttrib1f(this.location,this.a);break;case 2:gl.vertexAttrib2f(this.location,this.a,this.b);break;case 3:gl.vertexAttrib3f(this.location,this.a,this.b,this.c);break;case 4:gl.vertexAttrib4f(this.location,this.a,this.b,this.c,this.d);break;}};function VAONative(gl,ext,handle){this.gl=gl;this._ext=ext;this.handle=handle;this._attribs=[];this._useElements=false;this._elementsType=gl.UNSIGNED_SHORT;}VAONative.prototype.bind=function(){this._ext.bindVertexArrayOES(this.handle);for(var i=0;i<this._attribs.length;++i){this._attribs[i].bind(this.gl);}};VAONative.prototype.unbind=function(){this._ext.bindVertexArrayOES(null);};VAONative.prototype.dispose=function(){this._ext.deleteVertexArrayOES(this.handle);};VAONative.prototype.update=function(attributes,elements,elementsType){this.bind();bindAttribs(this.gl,elements,attributes);this.unbind();this._attribs.length=0;if(attributes)for(var i=0;i<attributes.length;++i){var a=attributes[i];if(typeof a===\"number\"){this._attribs.push(new VertexAttribute(i,1,a));}else if(Array.isArray(a)){this._attribs.push(new VertexAttribute(i,a.length,a[0],a[1],a[2],a[3]));}}this._useElements=!!elements;this._elementsType=elementsType||this.gl.UNSIGNED_SHORT;};VAONative.prototype.draw=function(mode,count,offset){offset=offset||0;var gl=this.gl;if(this._useElements){gl.drawElements(mode,count,this._elementsType,offset);}else{gl.drawArrays(mode,offset,count);}};function createVAONative(gl,ext){return new VAONative(gl,ext,ext.createVertexArrayOES());}module.exports=createVAONative;},{\"./do-bind.js\":143}],146:[function(_dereq_,module,exports){\"use strict\";var createVAONative=_dereq_(\"./lib/vao-native.js\");var createVAOEmulated=_dereq_(\"./lib/vao-emulated.js\");function ExtensionShim(gl){this.bindVertexArrayOES=gl.bindVertexArray.bind(gl);this.createVertexArrayOES=gl.createVertexArray.bind(gl);this.deleteVertexArrayOES=gl.deleteVertexArray.bind(gl);}function createVAO(gl,attributes,elements,elementsType){var ext=gl.createVertexArray?new ExtensionShim(gl):gl.getExtension('OES_vertex_array_object');var vao;if(ext){vao=createVAONative(gl,ext);}else{vao=createVAOEmulated(gl);}vao.update(attributes,elements,elementsType);return vao;}module.exports=createVAO;},{\"./lib/vao-emulated.js\":144,\"./lib/vao-native.js\":145}],147:[function(_dereq_,module,exports){module.exports=cross;/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */function cross(out,a,b){var ax=a[0],ay=a[1],az=a[2],bx=b[0],by=b[1],bz=b[2];out[0]=ay*bz-az*by;out[1]=az*bx-ax*bz;out[2]=ax*by-ay*bx;return out;}},{}],148:[function(_dereq_,module,exports){module.exports=dot;/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */function dot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2];}},{}],149:[function(_dereq_,module,exports){module.exports=length;/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */function length(a){var x=a[0],y=a[1],z=a[2];return Math.sqrt(x*x+y*y+z*z);}},{}],150:[function(_dereq_,module,exports){module.exports=lerp;/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */function lerp(out,a,b,t){var ax=a[0],ay=a[1],az=a[2];out[0]=ax+t*(b[0]-ax);out[1]=ay+t*(b[1]-ay);out[2]=az+t*(b[2]-az);return out;}},{}],151:[function(_dereq_,module,exports){module.exports=normalize;/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */function normalize(out,a){var x=a[0],y=a[1],z=a[2];var len=x*x+y*y+z*z;if(len>0){//TODO: evaluate use of glm_invsqrt here?\nlen=1/Math.sqrt(len);out[0]=a[0]*len;out[1]=a[1]*len;out[2]=a[2]*len;}return out;}},{}],152:[function(_dereq_,module,exports){module.exports=transformMat4;/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */function transformMat4(out,a,m){var x=a[0],y=a[1],z=a[2],w=a[3];out[0]=m[0]*x+m[4]*y+m[8]*z+m[12]*w;out[1]=m[1]*x+m[5]*y+m[9]*z+m[13]*w;out[2]=m[2]*x+m[6]*y+m[10]*z+m[14]*w;out[3]=m[3]*x+m[7]*y+m[11]*z+m[15]*w;return out;}},{}],153:[function(_dereq_,module,exports){module.exports=decodeFloat;var UINT8_VIEW=new Uint8Array(4);var FLOAT_VIEW=new Float32Array(UINT8_VIEW.buffer);function decodeFloat(x,y,z,w){UINT8_VIEW[0]=w;UINT8_VIEW[1]=z;UINT8_VIEW[2]=y;UINT8_VIEW[3]=x;return FLOAT_VIEW[0];}},{}],154:[function(_dereq_,module,exports){var tokenize=_dereq_('glsl-tokenizer');var atob=_dereq_('atob-lite');module.exports=getName;function getName(src){var tokens=Array.isArray(src)?src:tokenize(src);for(var i=0;i<tokens.length;i++){var token=tokens[i];if(token.type!=='preprocessor')continue;var match=token.data.match(/\\#define\\s+SHADER_NAME(_B64)?\\s+(.+)$/);if(!match)continue;if(!match[2])continue;var b64=match[1];var name=match[2];return(b64?atob(name):name).trim();}}},{\"atob-lite\":12,\"glsl-tokenizer\":161}],155:[function(_dereq_,module,exports){module.exports=tokenize;var literals100=_dereq_('./lib/literals'),operators=_dereq_('./lib/operators'),builtins100=_dereq_('./lib/builtins'),literals300es=_dereq_('./lib/literals-300es'),builtins300es=_dereq_('./lib/builtins-300es');var NORMAL=999// <-- never emitted\n,TOKEN=9999// <-- never emitted\n,BLOCK_COMMENT=0,LINE_COMMENT=1,PREPROCESSOR=2,OPERATOR=3,INTEGER=4,FLOAT=5,IDENT=6,BUILTIN=7,KEYWORD=8,WHITESPACE=9,EOF=10,HEX=11;var map=['block-comment','line-comment','preprocessor','operator','integer','float','ident','builtin','keyword','whitespace','eof','integer'];function tokenize(opt){var i=0,total=0,mode=NORMAL,c,last,content=[],tokens=[],token_idx=0,token_offs=0,line=1,col=0,start=0,isnum=false,isoperator=false,input='',len;opt=opt||{};var allBuiltins=builtins100;var allLiterals=literals100;if(opt.version==='300 es'){allBuiltins=builtins300es;allLiterals=literals300es;}return function(data){tokens=[];if(data!==null)return write(data.replace?data.replace(/\\r\\n/g,'\\n'):data);return end();};function token(data){if(data.length){tokens.push({type:map[mode],data:data,position:start,line:line,column:col});}}function write(chunk){i=0;input+=chunk;len=input.length;var last;while(c=input[i],i<len){last=i;switch(mode){case BLOCK_COMMENT:i=block_comment();break;case LINE_COMMENT:i=line_comment();break;case PREPROCESSOR:i=preprocessor();break;case OPERATOR:i=operator();break;case INTEGER:i=integer();break;case HEX:i=hex();break;case FLOAT:i=decimal();break;case TOKEN:i=readtoken();break;case WHITESPACE:i=whitespace();break;case NORMAL:i=normal();break;}if(last!==i){switch(input[last]){case'\\n':col=0;++line;break;default:++col;break;}}}total+=i;input=input.slice(i);return tokens;}function end(chunk){if(content.length){token(content.join(''));}mode=EOF;token('(eof)');return tokens;}function normal(){content=content.length?[]:content;if(last==='/'&&c==='*'){start=total+i-1;mode=BLOCK_COMMENT;last=c;return i+1;}if(last==='/'&&c==='/'){start=total+i-1;mode=LINE_COMMENT;last=c;return i+1;}if(c==='#'){mode=PREPROCESSOR;start=total+i;return i;}if(/\\s/.test(c)){mode=WHITESPACE;start=total+i;return i;}isnum=/\\d/.test(c);isoperator=/[^\\w_]/.test(c);start=total+i;mode=isnum?INTEGER:isoperator?OPERATOR:TOKEN;return i;}function whitespace(){if(/[^\\s]/g.test(c)){token(content.join(''));mode=NORMAL;return i;}content.push(c);last=c;return i+1;}function preprocessor(){if((c==='\\r'||c==='\\n')&&last!=='\\\\'){token(content.join(''));mode=NORMAL;return i;}content.push(c);last=c;return i+1;}function line_comment(){return preprocessor();}function block_comment(){if(c==='/'&&last==='*'){content.push(c);token(content.join(''));mode=NORMAL;return i+1;}content.push(c);last=c;return i+1;}function operator(){if(last==='.'&&/\\d/.test(c)){mode=FLOAT;return i;}if(last==='/'&&c==='*'){mode=BLOCK_COMMENT;return i;}if(last==='/'&&c==='/'){mode=LINE_COMMENT;return i;}if(c==='.'&&content.length){while(determine_operator(content)){;}mode=FLOAT;return i;}if(c===';'||c===')'||c==='('){if(content.length)while(determine_operator(content)){;}token(c);mode=NORMAL;return i+1;}var is_composite_operator=content.length===2&&c!=='=';if(/[\\w_\\d\\s]/.test(c)||is_composite_operator){while(determine_operator(content)){;}mode=NORMAL;return i;}content.push(c);last=c;return i+1;}function determine_operator(buf){var j=0,idx,res;do{idx=operators.indexOf(buf.slice(0,buf.length+j).join(''));res=operators[idx];if(idx===-1){if(j--+buf.length>0)continue;res=buf.slice(0,1).join('');}token(res);start+=res.length;content=content.slice(res.length);return content.length;}while(1);}function hex(){if(/[^a-fA-F0-9]/.test(c)){token(content.join(''));mode=NORMAL;return i;}content.push(c);last=c;return i+1;}function integer(){if(c==='.'){content.push(c);mode=FLOAT;last=c;return i+1;}if(/[eE]/.test(c)){content.push(c);mode=FLOAT;last=c;return i+1;}if(c==='x'&&content.length===1&&content[0]==='0'){mode=HEX;content.push(c);last=c;return i+1;}if(/[^\\d]/.test(c)){token(content.join(''));mode=NORMAL;return i;}content.push(c);last=c;return i+1;}function decimal(){if(c==='f'){content.push(c);last=c;i+=1;}if(/[eE]/.test(c)){content.push(c);last=c;return i+1;}if(c==='-'&&/[eE]/.test(last)){content.push(c);last=c;return i+1;}if(/[^\\d]/.test(c)){token(content.join(''));mode=NORMAL;return i;}content.push(c);last=c;return i+1;}function readtoken(){if(/[^\\d\\w_]/.test(c)){var contentstr=content.join('');if(allLiterals.indexOf(contentstr)>-1){mode=KEYWORD;}else if(allBuiltins.indexOf(contentstr)>-1){mode=BUILTIN;}else{mode=IDENT;}token(content.join(''));mode=NORMAL;return i;}content.push(c);last=c;return i+1;}}},{\"./lib/builtins\":157,\"./lib/builtins-300es\":156,\"./lib/literals\":159,\"./lib/literals-300es\":158,\"./lib/operators\":160}],156:[function(_dereq_,module,exports){// 300es builtins/reserved words that were previously valid in v100\nvar v100=_dereq_('./builtins');// The texture2D|Cube functions have been removed\n// And the gl_ features are updated\nv100=v100.slice().filter(function(b){return!/^(gl\\_|texture)/.test(b);});module.exports=v100.concat([// the updated gl_ constants\n'gl_VertexID','gl_InstanceID','gl_Position','gl_PointSize','gl_FragCoord','gl_FrontFacing','gl_FragDepth','gl_PointCoord','gl_MaxVertexAttribs','gl_MaxVertexUniformVectors','gl_MaxVertexOutputVectors','gl_MaxFragmentInputVectors','gl_MaxVertexTextureImageUnits','gl_MaxCombinedTextureImageUnits','gl_MaxTextureImageUnits','gl_MaxFragmentUniformVectors','gl_MaxDrawBuffers','gl_MinProgramTexelOffset','gl_MaxProgramTexelOffset','gl_DepthRangeParameters','gl_DepthRange'// other builtins\n,'trunc','round','roundEven','isnan','isinf','floatBitsToInt','floatBitsToUint','intBitsToFloat','uintBitsToFloat','packSnorm2x16','unpackSnorm2x16','packUnorm2x16','unpackUnorm2x16','packHalf2x16','unpackHalf2x16','outerProduct','transpose','determinant','inverse','texture','textureSize','textureProj','textureLod','textureOffset','texelFetch','texelFetchOffset','textureProjOffset','textureLodOffset','textureProjLod','textureProjLodOffset','textureGrad','textureGradOffset','textureProjGrad','textureProjGradOffset']);},{\"./builtins\":157}],157:[function(_dereq_,module,exports){module.exports=[// Keep this list sorted\n'abs','acos','all','any','asin','atan','ceil','clamp','cos','cross','dFdx','dFdy','degrees','distance','dot','equal','exp','exp2','faceforward','floor','fract','gl_BackColor','gl_BackLightModelProduct','gl_BackLightProduct','gl_BackMaterial','gl_BackSecondaryColor','gl_ClipPlane','gl_ClipVertex','gl_Color','gl_DepthRange','gl_DepthRangeParameters','gl_EyePlaneQ','gl_EyePlaneR','gl_EyePlaneS','gl_EyePlaneT','gl_Fog','gl_FogCoord','gl_FogFragCoord','gl_FogParameters','gl_FragColor','gl_FragCoord','gl_FragData','gl_FragDepth','gl_FragDepthEXT','gl_FrontColor','gl_FrontFacing','gl_FrontLightModelProduct','gl_FrontLightProduct','gl_FrontMaterial','gl_FrontSecondaryColor','gl_LightModel','gl_LightModelParameters','gl_LightModelProducts','gl_LightProducts','gl_LightSource','gl_LightSourceParameters','gl_MaterialParameters','gl_MaxClipPlanes','gl_MaxCombinedTextureImageUnits','gl_MaxDrawBuffers','gl_MaxFragmentUniformComponents','gl_MaxLights','gl_MaxTextureCoords','gl_MaxTextureImageUnits','gl_MaxTextureUnits','gl_MaxVaryingFloats','gl_MaxVertexAttribs','gl_MaxVertexTextureImageUnits','gl_MaxVertexUniformComponents','gl_ModelViewMatrix','gl_ModelViewMatrixInverse','gl_ModelViewMatrixInverseTranspose','gl_ModelViewMatrixTranspose','gl_ModelViewProjectionMatrix','gl_ModelViewProjectionMatrixInverse','gl_ModelViewProjectionMatrixInverseTranspose','gl_ModelViewProjectionMatrixTranspose','gl_MultiTexCoord0','gl_MultiTexCoord1','gl_MultiTexCoord2','gl_MultiTexCoord3','gl_MultiTexCoord4','gl_MultiTexCoord5','gl_MultiTexCoord6','gl_MultiTexCoord7','gl_Normal','gl_NormalMatrix','gl_NormalScale','gl_ObjectPlaneQ','gl_ObjectPlaneR','gl_ObjectPlaneS','gl_ObjectPlaneT','gl_Point','gl_PointCoord','gl_PointParameters','gl_PointSize','gl_Position','gl_ProjectionMatrix','gl_ProjectionMatrixInverse','gl_ProjectionMatrixInverseTranspose','gl_ProjectionMatrixTranspose','gl_SecondaryColor','gl_TexCoord','gl_TextureEnvColor','gl_TextureMatrix','gl_TextureMatrixInverse','gl_TextureMatrixInverseTranspose','gl_TextureMatrixTranspose','gl_Vertex','greaterThan','greaterThanEqual','inversesqrt','length','lessThan','lessThanEqual','log','log2','matrixCompMult','max','min','mix','mod','normalize','not','notEqual','pow','radians','reflect','refract','sign','sin','smoothstep','sqrt','step','tan','texture2D','texture2DLod','texture2DProj','texture2DProjLod','textureCube','textureCubeLod','texture2DLodEXT','texture2DProjLodEXT','textureCubeLodEXT','texture2DGradEXT','texture2DProjGradEXT','textureCubeGradEXT'];},{}],158:[function(_dereq_,module,exports){var v100=_dereq_('./literals');module.exports=v100.slice().concat(['layout','centroid','smooth','case','mat2x2','mat2x3','mat2x4','mat3x2','mat3x3','mat3x4','mat4x2','mat4x3','mat4x4','uint','uvec2','uvec3','uvec4','samplerCubeShadow','sampler2DArray','sampler2DArrayShadow','isampler2D','isampler3D','isamplerCube','isampler2DArray','usampler2D','usampler3D','usamplerCube','usampler2DArray','coherent','restrict','readonly','writeonly','resource','atomic_uint','noperspective','patch','sample','subroutine','common','partition','active','filter','image1D','image2D','image3D','imageCube','iimage1D','iimage2D','iimage3D','iimageCube','uimage1D','uimage2D','uimage3D','uimageCube','image1DArray','image2DArray','iimage1DArray','iimage2DArray','uimage1DArray','uimage2DArray','image1DShadow','image2DShadow','image1DArrayShadow','image2DArrayShadow','imageBuffer','iimageBuffer','uimageBuffer','sampler1DArray','sampler1DArrayShadow','isampler1D','isampler1DArray','usampler1D','usampler1DArray','isampler2DRect','usampler2DRect','samplerBuffer','isamplerBuffer','usamplerBuffer','sampler2DMS','isampler2DMS','usampler2DMS','sampler2DMSArray','isampler2DMSArray','usampler2DMSArray']);},{\"./literals\":159}],159:[function(_dereq_,module,exports){module.exports=[// current\n'precision','highp','mediump','lowp','attribute','const','uniform','varying','break','continue','do','for','while','if','else','in','out','inout','float','int','void','bool','true','false','discard','return','mat2','mat3','mat4','vec2','vec3','vec4','ivec2','ivec3','ivec4','bvec2','bvec3','bvec4','sampler1D','sampler2D','sampler3D','samplerCube','sampler1DShadow','sampler2DShadow','struct'// future\n,'asm','class','union','enum','typedef','template','this','packed','goto','switch','default','inline','noinline','volatile','public','static','extern','external','interface','long','short','double','half','fixed','unsigned','input','output','hvec2','hvec3','hvec4','dvec2','dvec3','dvec4','fvec2','fvec3','fvec4','sampler2DRect','sampler3DRect','sampler2DRectShadow','sizeof','cast','namespace','using'];},{}],160:[function(_dereq_,module,exports){module.exports=['<<=','>>=','++','--','<<','>>','<=','>=','==','!=','&&','||','+=','-=','*=','/=','%=','&=','^^','^=','|=','(',')','[',']','.','!','~','*','/','%','+','-','<','>','&','^','|','?',':','=',',',';','{','}'];},{}],161:[function(_dereq_,module,exports){var tokenize=_dereq_('./index');module.exports=tokenizeString;function tokenizeString(str,opt){var generator=tokenize(opt);var tokens=[];tokens=tokens.concat(generator(str));tokens=tokens.concat(generator(null));return tokens;}},{\"./index\":155}],162:[function(_dereq_,module,exports){module.exports=function(strings){if(typeof strings==='string')strings=[strings];var exprs=[].slice.call(arguments,1);var parts=[];for(var i=0;i<strings.length-1;i++){parts.push(strings[i],exprs[i]||'');}parts.push(strings[i]);return parts.join('');};},{}],163:[function(_dereq_,module,exports){(function(global){'use strict';var isBrowser=_dereq_('is-browser');var hasHover;if(typeof global.matchMedia==='function'){hasHover=!global.matchMedia('(hover: none)').matches;}else{hasHover=isBrowser;}module.exports=hasHover;}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});},{\"is-browser\":170}],164:[function(_dereq_,module,exports){'use strict';var isBrowser=_dereq_('is-browser');function detect(){var supported=false;try{var opts=Object.defineProperty({},'passive',{get:function get(){supported=true;}});window.addEventListener('test',null,opts);window.removeEventListener('test',null,opts);}catch(e){supported=false;}return supported;}module.exports=isBrowser&&detect();},{\"is-browser\":170}],165:[function(_dereq_,module,exports){exports.read=function(buffer,offset,isLE,mLen,nBytes){var e,m;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var nBits=-7;var i=isLE?nBytes-1:0;var d=isLE?-1:1;var s=buffer[offset+i];i+=d;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}if(e===0){e=1-eBias;}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity;}else{m=m+Math.pow(2,mLen);e=e-eBias;}return(s?-1:1)*m*Math.pow(2,e-mLen);};exports.write=function(buffer,value,offset,isLE,mLen,nBytes){var e,m,c;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;var i=isLE?0:nBytes-1;var d=isLE?1:-1;var s=value<0||value===0&&1/value<0?1:0;value=Math.abs(value);if(isNaN(value)||value===Infinity){m=isNaN(value)?1:0;e=eMax;}else{e=Math.floor(Math.log(value)/Math.LN2);if(value*(c=Math.pow(2,-e))<1){e--;c*=2;}if(e+eBias>=1){value+=rt/c;}else{value+=rt*Math.pow(2,1-eBias);}if(value*c>=2){e++;c/=2;}if(e+eBias>=eMax){m=0;e=eMax;}else if(e+eBias>=1){m=(value*c-1)*Math.pow(2,mLen);e=e+eBias;}else{m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0;}}for(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}buffer[offset+i-d]|=s*128;};},{}],166:[function(_dereq_,module,exports){\"use strict\";//High level idea:\n// 1. Use Clarkson's incremental construction to find convex hull\n// 2. Point location in triangulation by jump and walk\nmodule.exports=incrementalConvexHull;var orient=_dereq_(\"robust-orientation\");var compareCell=_dereq_(\"simplicial-complex\").compareCells;function compareInt(a,b){return a-b;}function Simplex(vertices,adjacent,boundary){this.vertices=vertices;this.adjacent=adjacent;this.boundary=boundary;this.lastVisited=-1;}Simplex.prototype.flip=function(){var t=this.vertices[0];this.vertices[0]=this.vertices[1];this.vertices[1]=t;var u=this.adjacent[0];this.adjacent[0]=this.adjacent[1];this.adjacent[1]=u;};function GlueFacet(vertices,cell,index){this.vertices=vertices;this.cell=cell;this.index=index;}function compareGlue(a,b){return compareCell(a.vertices,b.vertices);}function bakeOrient(d){var code=[\"function orient(){var tuple=this.tuple;return test(\"];for(var i=0;i<=d;++i){if(i>0){code.push(\",\");}code.push(\"tuple[\",i,\"]\");}code.push(\")}return orient\");var proc=new Function(\"test\",code.join(\"\"));var test=orient[d+1];if(!test){test=orient;}return proc(test);}var BAKED=[];function Triangulation(dimension,vertices,simplices){this.dimension=dimension;this.vertices=vertices;this.simplices=simplices;this.interior=simplices.filter(function(c){return!c.boundary;});this.tuple=new Array(dimension+1);for(var i=0;i<=dimension;++i){this.tuple[i]=this.vertices[i];}var o=BAKED[dimension];if(!o){o=BAKED[dimension]=bakeOrient(dimension);}this.orient=o;}var proto=Triangulation.prototype;//Degenerate situation where we are on boundary, but coplanar to face\nproto.handleBoundaryDegeneracy=function(cell,point){var d=this.dimension;var n=this.vertices.length-1;var tuple=this.tuple;var verts=this.vertices;//Dumb solution: Just do dfs from boundary cell until we find any peak, or terminate\nvar toVisit=[cell];cell.lastVisited=-n;while(toVisit.length>0){cell=toVisit.pop();var cellVerts=cell.vertices;var cellAdj=cell.adjacent;for(var i=0;i<=d;++i){var neighbor=cellAdj[i];if(!neighbor.boundary||neighbor.lastVisited<=-n){continue;}var nv=neighbor.vertices;for(var j=0;j<=d;++j){var vv=nv[j];if(vv<0){tuple[j]=point;}else{tuple[j]=verts[vv];}}var o=this.orient();if(o>0){return neighbor;}neighbor.lastVisited=-n;if(o===0){toVisit.push(neighbor);}}}return null;};proto.walk=function(point,random){//Alias local properties\nvar n=this.vertices.length-1;var d=this.dimension;var verts=this.vertices;var tuple=this.tuple;//Compute initial jump cell\nvar initIndex=random?this.interior.length*Math.random()|0:this.interior.length-1;var cell=this.interior[initIndex];//Start walking\nouterLoop:while(!cell.boundary){var cellVerts=cell.vertices;var cellAdj=cell.adjacent;for(var i=0;i<=d;++i){tuple[i]=verts[cellVerts[i]];}cell.lastVisited=n;//Find farthest adjacent cell\nfor(var i=0;i<=d;++i){var neighbor=cellAdj[i];if(neighbor.lastVisited>=n){continue;}var prev=tuple[i];tuple[i]=point;var o=this.orient();tuple[i]=prev;if(o<0){cell=neighbor;continue outerLoop;}else{if(!neighbor.boundary){neighbor.lastVisited=n;}else{neighbor.lastVisited=-n;}}}return;}return cell;};proto.addPeaks=function(point,cell){var n=this.vertices.length-1;var d=this.dimension;var verts=this.vertices;var tuple=this.tuple;var interior=this.interior;var simplices=this.simplices;//Walking finished at boundary, time to add peaks\nvar tovisit=[cell];//Stretch initial boundary cell into a peak\ncell.lastVisited=n;cell.vertices[cell.vertices.indexOf(-1)]=n;cell.boundary=false;interior.push(cell);//Record a list of all new boundaries created by added peaks so we can glue them together when we are all done\nvar glueFacets=[];//Do a traversal of the boundary walking outward from starting peak\nwhile(tovisit.length>0){//Pop off peak and walk over adjacent cells\nvar cell=tovisit.pop();var cellVerts=cell.vertices;var cellAdj=cell.adjacent;var indexOfN=cellVerts.indexOf(n);if(indexOfN<0){continue;}for(var i=0;i<=d;++i){if(i===indexOfN){continue;}//For each boundary neighbor of the cell\nvar neighbor=cellAdj[i];if(!neighbor.boundary||neighbor.lastVisited>=n){continue;}var nv=neighbor.vertices;//Test if neighbor is a peak\nif(neighbor.lastVisited!==-n){//Compute orientation of p relative to each boundary peak\nvar indexOfNeg1=0;for(var j=0;j<=d;++j){if(nv[j]<0){indexOfNeg1=j;tuple[j]=point;}else{tuple[j]=verts[nv[j]];}}var o=this.orient();//Test if neighbor cell is also a peak\nif(o>0){nv[indexOfNeg1]=n;neighbor.boundary=false;interior.push(neighbor);tovisit.push(neighbor);neighbor.lastVisited=n;continue;}else{neighbor.lastVisited=-n;}}var na=neighbor.adjacent;//Otherwise, replace neighbor with new face\nvar vverts=cellVerts.slice();var vadj=cellAdj.slice();var ncell=new Simplex(vverts,vadj,true);simplices.push(ncell);//Connect to neighbor\nvar opposite=na.indexOf(cell);if(opposite<0){continue;}na[opposite]=ncell;vadj[indexOfN]=neighbor;//Connect to cell\nvverts[i]=-1;vadj[i]=cell;cellAdj[i]=ncell;//Flip facet\nncell.flip();//Add to glue list\nfor(var j=0;j<=d;++j){var uu=vverts[j];if(uu<0||uu===n){continue;}var nface=new Array(d-1);var nptr=0;for(var k=0;k<=d;++k){var vv=vverts[k];if(vv<0||k===j){continue;}nface[nptr++]=vv;}glueFacets.push(new GlueFacet(nface,ncell,j));}}}//Glue boundary facets together\nglueFacets.sort(compareGlue);for(var i=0;i+1<glueFacets.length;i+=2){var a=glueFacets[i];var b=glueFacets[i+1];var ai=a.index;var bi=b.index;if(ai<0||bi<0){continue;}a.cell.adjacent[a.index]=b.cell;b.cell.adjacent[b.index]=a.cell;}};proto.insert=function(point,random){//Add point\nvar verts=this.vertices;verts.push(point);var cell=this.walk(point,random);if(!cell){return;}//Alias local properties\nvar d=this.dimension;var tuple=this.tuple;//Degenerate case: If point is coplanar to cell, then walk until we find a non-degenerate boundary\nfor(var i=0;i<=d;++i){var vv=cell.vertices[i];if(vv<0){tuple[i]=point;}else{tuple[i]=verts[vv];}}var o=this.orient(tuple);if(o<0){return;}else if(o===0){cell=this.handleBoundaryDegeneracy(cell,point);if(!cell){return;}}//Add peaks\nthis.addPeaks(point,cell);};//Extract all boundary cells\nproto.boundary=function(){var d=this.dimension;var boundary=[];var cells=this.simplices;var nc=cells.length;for(var i=0;i<nc;++i){var c=cells[i];if(c.boundary){var bcell=new Array(d);var cv=c.vertices;var ptr=0;var parity=0;for(var j=0;j<=d;++j){if(cv[j]>=0){bcell[ptr++]=cv[j];}else{parity=j&1;}}if(parity===(d&1)){var t=bcell[0];bcell[0]=bcell[1];bcell[1]=t;}boundary.push(bcell);}}return boundary;};function incrementalConvexHull(points,randomSearch){var n=points.length;if(n===0){throw new Error(\"Must have at least d+1 points\");}var d=points[0].length;if(n<=d){throw new Error(\"Must input at least d+1 points\");}//FIXME: This could be degenerate, but need to select d+1 non-coplanar points to bootstrap process\nvar initialSimplex=points.slice(0,d+1);//Make sure initial simplex is positively oriented\nvar o=orient.apply(void 0,initialSimplex);if(o===0){throw new Error(\"Input not in general position\");}var initialCoords=new Array(d+1);for(var i=0;i<=d;++i){initialCoords[i]=i;}if(o<0){initialCoords[0]=1;initialCoords[1]=0;}//Create initial topological index, glue pointers together (kind of messy)\nvar initialCell=new Simplex(initialCoords,new Array(d+1),false);var boundary=initialCell.adjacent;var list=new Array(d+2);for(var i=0;i<=d;++i){var verts=initialCoords.slice();for(var j=0;j<=d;++j){if(j===i){verts[j]=-1;}}var t=verts[0];verts[0]=verts[1];verts[1]=t;var cell=new Simplex(verts,new Array(d+1),true);boundary[i]=cell;list[i]=cell;}list[d+1]=initialCell;for(var i=0;i<=d;++i){var verts=boundary[i].vertices;var adj=boundary[i].adjacent;for(var j=0;j<=d;++j){var v=verts[j];if(v<0){adj[j]=initialCell;continue;}for(var k=0;k<=d;++k){if(boundary[k].vertices.indexOf(v)<0){adj[j]=boundary[k];}}}}//Initialize triangles\nvar triangles=new Triangulation(d,initialSimplex,list);//Insert remaining points\nvar useRandom=!!randomSearch;for(var i=d+1;i<n;++i){triangles.insert(points[i],useRandom);}//Extract boundary cells\nreturn triangles.boundary();}},{\"robust-orientation\":245,\"simplicial-complex\":254}],167:[function(_dereq_,module,exports){\"use strict\";var bounds=_dereq_(\"binary-search-bounds\");var NOT_FOUND=0;var SUCCESS=1;var EMPTY=2;module.exports=createWrapper;function IntervalTreeNode(mid,left,right,leftPoints,rightPoints){this.mid=mid;this.left=left;this.right=right;this.leftPoints=leftPoints;this.rightPoints=rightPoints;this.count=(left?left.count:0)+(right?right.count:0)+leftPoints.length;}var proto=IntervalTreeNode.prototype;function copy(a,b){a.mid=b.mid;a.left=b.left;a.right=b.right;a.leftPoints=b.leftPoints;a.rightPoints=b.rightPoints;a.count=b.count;}function rebuild(node,intervals){var ntree=createIntervalTree(intervals);node.mid=ntree.mid;node.left=ntree.left;node.right=ntree.right;node.leftPoints=ntree.leftPoints;node.rightPoints=ntree.rightPoints;node.count=ntree.count;}function rebuildWithInterval(node,interval){var intervals=node.intervals([]);intervals.push(interval);rebuild(node,intervals);}function rebuildWithoutInterval(node,interval){var intervals=node.intervals([]);var idx=intervals.indexOf(interval);if(idx<0){return NOT_FOUND;}intervals.splice(idx,1);rebuild(node,intervals);return SUCCESS;}proto.intervals=function(result){result.push.apply(result,this.leftPoints);if(this.left){this.left.intervals(result);}if(this.right){this.right.intervals(result);}return result;};proto.insert=function(interval){var weight=this.count-this.leftPoints.length;this.count+=1;if(interval[1]<this.mid){if(this.left){if(4*(this.left.count+1)>3*(weight+1)){rebuildWithInterval(this,interval);}else{this.left.insert(interval);}}else{this.left=createIntervalTree([interval]);}}else if(interval[0]>this.mid){if(this.right){if(4*(this.right.count+1)>3*(weight+1)){rebuildWithInterval(this,interval);}else{this.right.insert(interval);}}else{this.right=createIntervalTree([interval]);}}else{var l=bounds.ge(this.leftPoints,interval,compareBegin);var r=bounds.ge(this.rightPoints,interval,compareEnd);this.leftPoints.splice(l,0,interval);this.rightPoints.splice(r,0,interval);}};proto.remove=function(interval){var weight=this.count-this.leftPoints;if(interval[1]<this.mid){if(!this.left){return NOT_FOUND;}var rw=this.right?this.right.count:0;if(4*rw>3*(weight-1)){return rebuildWithoutInterval(this,interval);}var r=this.left.remove(interval);if(r===EMPTY){this.left=null;this.count-=1;return SUCCESS;}else if(r===SUCCESS){this.count-=1;}return r;}else if(interval[0]>this.mid){if(!this.right){return NOT_FOUND;}var lw=this.left?this.left.count:0;if(4*lw>3*(weight-1)){return rebuildWithoutInterval(this,interval);}var r=this.right.remove(interval);if(r===EMPTY){this.right=null;this.count-=1;return SUCCESS;}else if(r===SUCCESS){this.count-=1;}return r;}else{if(this.count===1){if(this.leftPoints[0]===interval){return EMPTY;}else{return NOT_FOUND;}}if(this.leftPoints.length===1&&this.leftPoints[0]===interval){if(this.left&&this.right){var p=this;var n=this.left;while(n.right){p=n;n=n.right;}if(p===this){n.right=this.right;}else{var l=this.left;var r=this.right;p.count-=n.count;p.right=n.left;n.left=l;n.right=r;}copy(this,n);this.count=(this.left?this.left.count:0)+(this.right?this.right.count:0)+this.leftPoints.length;}else if(this.left){copy(this,this.left);}else{copy(this,this.right);}return SUCCESS;}for(var l=bounds.ge(this.leftPoints,interval,compareBegin);l<this.leftPoints.length;++l){if(this.leftPoints[l][0]!==interval[0]){break;}if(this.leftPoints[l]===interval){this.count-=1;this.leftPoints.splice(l,1);for(var r=bounds.ge(this.rightPoints,interval,compareEnd);r<this.rightPoints.length;++r){if(this.rightPoints[r][1]!==interval[1]){break;}else if(this.rightPoints[r]===interval){this.rightPoints.splice(r,1);return SUCCESS;}}}}return NOT_FOUND;}};function reportLeftRange(arr,hi,cb){for(var i=0;i<arr.length&&arr[i][0]<=hi;++i){var r=cb(arr[i]);if(r){return r;}}}function reportRightRange(arr,lo,cb){for(var i=arr.length-1;i>=0&&arr[i][1]>=lo;--i){var r=cb(arr[i]);if(r){return r;}}}function reportRange(arr,cb){for(var i=0;i<arr.length;++i){var r=cb(arr[i]);if(r){return r;}}}proto.queryPoint=function(x,cb){if(x<this.mid){if(this.left){var r=this.left.queryPoint(x,cb);if(r){return r;}}return reportLeftRange(this.leftPoints,x,cb);}else if(x>this.mid){if(this.right){var r=this.right.queryPoint(x,cb);if(r){return r;}}return reportRightRange(this.rightPoints,x,cb);}else{return reportRange(this.leftPoints,cb);}};proto.queryInterval=function(lo,hi,cb){if(lo<this.mid&&this.left){var r=this.left.queryInterval(lo,hi,cb);if(r){return r;}}if(hi>this.mid&&this.right){var r=this.right.queryInterval(lo,hi,cb);if(r){return r;}}if(hi<this.mid){return reportLeftRange(this.leftPoints,hi,cb);}else if(lo>this.mid){return reportRightRange(this.rightPoints,lo,cb);}else{return reportRange(this.leftPoints,cb);}};function compareNumbers(a,b){return a-b;}function compareBegin(a,b){var d=a[0]-b[0];if(d){return d;}return a[1]-b[1];}function compareEnd(a,b){var d=a[1]-b[1];if(d){return d;}return a[0]-b[0];}function createIntervalTree(intervals){if(intervals.length===0){return null;}var pts=[];for(var i=0;i<intervals.length;++i){pts.push(intervals[i][0],intervals[i][1]);}pts.sort(compareNumbers);var mid=pts[pts.length>>1];var leftIntervals=[];var rightIntervals=[];var centerIntervals=[];for(var i=0;i<intervals.length;++i){var s=intervals[i];if(s[1]<mid){leftIntervals.push(s);}else if(mid<s[0]){rightIntervals.push(s);}else{centerIntervals.push(s);}}//Split center intervals\nvar leftPoints=centerIntervals;var rightPoints=centerIntervals.slice();leftPoints.sort(compareBegin);rightPoints.sort(compareEnd);return new IntervalTreeNode(mid,createIntervalTree(leftIntervals),createIntervalTree(rightIntervals),leftPoints,rightPoints);}//User friendly wrapper that makes it possible to support empty trees\nfunction IntervalTree(root){this.root=root;}var tproto=IntervalTree.prototype;tproto.insert=function(interval){if(this.root){this.root.insert(interval);}else{this.root=new IntervalTreeNode(interval[0],null,null,[interval],[interval]);}};tproto.remove=function(interval){if(this.root){var r=this.root.remove(interval);if(r===EMPTY){this.root=null;}return r!==NOT_FOUND;}return false;};tproto.queryPoint=function(p,cb){if(this.root){return this.root.queryPoint(p,cb);}};tproto.queryInterval=function(lo,hi,cb){if(lo<=hi&&this.root){return this.root.queryInterval(lo,hi,cb);}};Object.defineProperty(tproto,\"count\",{get:function get(){if(this.root){return this.root.count;}return 0;}});Object.defineProperty(tproto,\"intervals\",{get:function get(){if(this.root){return this.root.intervals([]);}return[];}});function createWrapper(intervals){if(!intervals||intervals.length===0){return new IntervalTree(null);}return new IntervalTree(createIntervalTree(intervals));}},{\"binary-search-bounds\":31}],168:[function(_dereq_,module,exports){\"use strict\";function invertPermutation(pi,result){result=result||new Array(pi.length);for(var i=0;i<pi.length;++i){result[pi[i]]=i;}return result;}module.exports=invertPermutation;},{}],169:[function(_dereq_,module,exports){\"use strict\";function iota(n){var result=new Array(n);for(var i=0;i<n;++i){result[i]=i;}return result;}module.exports=iota;},{}],170:[function(_dereq_,module,exports){module.exports=true;},{}],171:[function(_dereq_,module,exports){/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ // The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports=function(obj){return obj!=null&&(isBuffer(obj)||isSlowBuffer(obj)||!!obj._isBuffer);};function isBuffer(obj){return!!obj.constructor&&typeof obj.constructor.isBuffer==='function'&&obj.constructor.isBuffer(obj);}// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer(obj){return typeof obj.readFloatLE==='function'&&typeof obj.slice==='function'&&isBuffer(obj.slice(0,0));}},{}],172:[function(_dereq_,module,exports){'use strict';module.exports=isMobile;module.exports.isMobile=isMobile;var mobileRE=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i;var tabletRE=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino|android|ipad|playbook|silk/i;function isMobile(opts){if(!opts)opts={};var ua=opts.ua;if(!ua&&typeof navigator!=='undefined')ua=navigator.userAgent;if(ua&&ua.headers&&typeof ua.headers['user-agent']==='string'){ua=ua.headers['user-agent'];}if(typeof ua!=='string')return false;return opts.tablet?tabletRE.test(ua):mobileRE.test(ua);}},{}],173:[function(_dereq_,module,exports){'use strict';var toString=Object.prototype.toString;module.exports=function(x){var prototype;return toString.call(x)==='[object Object]'&&(prototype=Object.getPrototypeOf(x),prototype===null||prototype===Object.getPrototypeOf({}));};},{}],174:[function(_dereq_,module,exports){'use strict';/**\r\n * Is this string all whitespace?\r\n * This solution kind of makes my brain hurt, but it's significantly faster\r\n * than !str.trim() or any other solution I could find.\r\n *\r\n * whitespace codes from: http://en.wikipedia.org/wiki/Whitespace_character\r\n * and verified with:\r\n *\r\n *  for(var i = 0; i < 65536; i++) {\r\n *      var s = String.fromCharCode(i);\r\n *      if(+s===0 && !s.trim()) console.log(i, s);\r\n *  }\r\n *\r\n * which counts a couple of these as *not* whitespace, but finds nothing else\r\n * that *is* whitespace. Note that charCodeAt stops at 16 bits, but it appears\r\n * that there are no whitespace characters above this, and code points above\r\n * this do not map onto white space characters.\r\n */module.exports=function(str){var l=str.length,a;for(var i=0;i<l;i++){a=str.charCodeAt(i);if((a<9||a>13)&&a!==32&&a!==133&&a!==160&&a!==5760&&a!==6158&&(a<8192||a>8205)&&a!==8232&&a!==8233&&a!==8239&&a!==8287&&a!==8288&&a!==12288&&a!==65279){return false;}}return true;};},{}],175:[function(_dereq_,module,exports){module.exports=isWebGL2;function isWebGL2(gl){if(!gl)return false;return typeof WebGL2RenderingContext!=='undefined'&&gl instanceof WebGL2RenderingContext;}},{}],176:[function(_dereq_,module,exports){function lerp(v0,v1,t){return v0*(1-t)+v1*t;}module.exports=lerp;},{}],177:[function(_dereq_,module,exports){'use strict';module.exports=createTable;var chull=_dereq_('convex-hull');function constructVertex(d,a,b){var x=new Array(d);for(var i=0;i<d;++i){x[i]=0.0;if(i===a){x[i]+=0.5;}if(i===b){x[i]+=0.5;}}return x;}function constructCell(dimension,mask){if(mask===0||mask===(1<<dimension+1)-1){return[];}var points=[];var index=[];for(var i=0;i<=dimension;++i){if(mask&1<<i){points.push(constructVertex(dimension,i-1,i-1));index.push(null);for(var j=0;j<=dimension;++j){if(~mask&1<<j){points.push(constructVertex(dimension,i-1,j-1));index.push([i,j]);}}}}//Preprocess points so first d+1 points are linearly independent\nvar hull=chull(points);var faces=[];i_loop:for(var i=0;i<hull.length;++i){var face=hull[i];var nface=[];for(var j=0;j<face.length;++j){if(!index[face[j]]){continue i_loop;}nface.push(index[face[j]].slice());}faces.push(nface);}return faces;}function createTable(dimension){var numCells=1<<dimension+1;var result=new Array(numCells);for(var i=0;i<numCells;++i){result[i]=constructCell(dimension,i);}return result;}},{\"convex-hull\":62}],178:[function(_dereq_,module,exports){/*jshint unused:true*/ /*\nInput:  matrix      ; a 4x4 matrix\nOutput: translation ; a 3 component vector\n        scale       ; a 3 component vector\n        skew        ; skew factors XY,XZ,YZ represented as a 3 component vector\n        perspective ; a 4 component vector\n        quaternion  ; a 4 component vector\nReturns false if the matrix cannot be decomposed, true if it can\n\n\nReferences:\nhttps://github.com/kamicane/matrix3d/blob/master/lib/Matrix3d.js\nhttps://github.com/ChromiumWebApps/chromium/blob/master/ui/gfx/transform_util.cc\nhttp://www.w3.org/TR/css3-transforms/#decomposing-a-3d-matrix\n*/var normalize=_dereq_('./normalize');var create=_dereq_('gl-mat4/create');var clone=_dereq_('gl-mat4/clone');var determinant=_dereq_('gl-mat4/determinant');var invert=_dereq_('gl-mat4/invert');var transpose=_dereq_('gl-mat4/transpose');var vec3={length:_dereq_('gl-vec3/length'),normalize:_dereq_('gl-vec3/normalize'),dot:_dereq_('gl-vec3/dot'),cross:_dereq_('gl-vec3/cross')};var tmp=create();var perspectiveMatrix=create();var tmpVec4=[0,0,0,0];var row=[[0,0,0],[0,0,0],[0,0,0]];var pdum3=[0,0,0];module.exports=function decomposeMat4(matrix,translation,scale,skew,perspective,quaternion){if(!translation)translation=[0,0,0];if(!scale)scale=[0,0,0];if(!skew)skew=[0,0,0];if(!perspective)perspective=[0,0,0,1];if(!quaternion)quaternion=[0,0,0,1];//normalize, if not possible then bail out early\nif(!normalize(tmp,matrix))return false;// perspectiveMatrix is used to solve for perspective, but it also provides\n// an easy way to test for singularity of the upper 3x3 component.\nclone(perspectiveMatrix,tmp);perspectiveMatrix[3]=0;perspectiveMatrix[7]=0;perspectiveMatrix[11]=0;perspectiveMatrix[15]=1;// If the perspectiveMatrix is not invertible, we are also unable to\n// decompose, so we'll bail early. Constant taken from SkMatrix44::invert.\nif(Math.abs(determinant(perspectiveMatrix)<1e-8))return false;var a03=tmp[3],a13=tmp[7],a23=tmp[11],a30=tmp[12],a31=tmp[13],a32=tmp[14],a33=tmp[15];// First, isolate perspective.\nif(a03!==0||a13!==0||a23!==0){tmpVec4[0]=a03;tmpVec4[1]=a13;tmpVec4[2]=a23;tmpVec4[3]=a33;// Solve the equation by inverting perspectiveMatrix and multiplying\n// rightHandSide by the inverse.\n// resuing the perspectiveMatrix here since it's no longer needed\nvar ret=invert(perspectiveMatrix,perspectiveMatrix);if(!ret)return false;transpose(perspectiveMatrix,perspectiveMatrix);//multiply by transposed inverse perspective matrix, into perspective vec4\nvec4multMat4(perspective,tmpVec4,perspectiveMatrix);}else{//no perspective\nperspective[0]=perspective[1]=perspective[2]=0;perspective[3]=1;}// Next take care of translation\ntranslation[0]=a30;translation[1]=a31;translation[2]=a32;// Now get scale and shear. 'row' is a 3 element array of 3 component vectors\nmat3from4(row,tmp);// Compute X scale factor and normalize first row.\nscale[0]=vec3.length(row[0]);vec3.normalize(row[0],row[0]);// Compute XY shear factor and make 2nd row orthogonal to 1st.\nskew[0]=vec3.dot(row[0],row[1]);combine(row[1],row[1],row[0],1.0,-skew[0]);// Now, compute Y scale and normalize 2nd row.\nscale[1]=vec3.length(row[1]);vec3.normalize(row[1],row[1]);skew[0]/=scale[1];// Compute XZ and YZ shears, orthogonalize 3rd row\nskew[1]=vec3.dot(row[0],row[2]);combine(row[2],row[2],row[0],1.0,-skew[1]);skew[2]=vec3.dot(row[1],row[2]);combine(row[2],row[2],row[1],1.0,-skew[2]);// Next, get Z scale and normalize 3rd row.\nscale[2]=vec3.length(row[2]);vec3.normalize(row[2],row[2]);skew[1]/=scale[2];skew[2]/=scale[2];// At this point, the matrix (in rows) is orthonormal.\n// Check for a coordinate system flip.  If the determinant\n// is -1, then negate the matrix and the scaling factors.\nvec3.cross(pdum3,row[1],row[2]);if(vec3.dot(row[0],pdum3)<0){for(var i=0;i<3;i++){scale[i]*=-1;row[i][0]*=-1;row[i][1]*=-1;row[i][2]*=-1;}}// Now, get the rotations out\nquaternion[0]=0.5*Math.sqrt(Math.max(1+row[0][0]-row[1][1]-row[2][2],0));quaternion[1]=0.5*Math.sqrt(Math.max(1-row[0][0]+row[1][1]-row[2][2],0));quaternion[2]=0.5*Math.sqrt(Math.max(1-row[0][0]-row[1][1]+row[2][2],0));quaternion[3]=0.5*Math.sqrt(Math.max(1+row[0][0]+row[1][1]+row[2][2],0));if(row[2][1]>row[1][2])quaternion[0]=-quaternion[0];if(row[0][2]>row[2][0])quaternion[1]=-quaternion[1];if(row[1][0]>row[0][1])quaternion[2]=-quaternion[2];return true;};//will be replaced by gl-vec4 eventually\nfunction vec4multMat4(out,a,m){var x=a[0],y=a[1],z=a[2],w=a[3];out[0]=m[0]*x+m[4]*y+m[8]*z+m[12]*w;out[1]=m[1]*x+m[5]*y+m[9]*z+m[13]*w;out[2]=m[2]*x+m[6]*y+m[10]*z+m[14]*w;out[3]=m[3]*x+m[7]*y+m[11]*z+m[15]*w;return out;}//gets upper-left of a 4x4 matrix into a 3x3 of vectors\nfunction mat3from4(out,mat4x4){out[0][0]=mat4x4[0];out[0][1]=mat4x4[1];out[0][2]=mat4x4[2];out[1][0]=mat4x4[4];out[1][1]=mat4x4[5];out[1][2]=mat4x4[6];out[2][0]=mat4x4[8];out[2][1]=mat4x4[9];out[2][2]=mat4x4[10];}function combine(out,a,b,scale1,scale2){out[0]=a[0]*scale1+b[0]*scale2;out[1]=a[1]*scale1+b[1]*scale2;out[2]=a[2]*scale1+b[2]*scale2;}},{\"./normalize\":179,\"gl-mat4/clone\":105,\"gl-mat4/create\":106,\"gl-mat4/determinant\":107,\"gl-mat4/invert\":111,\"gl-mat4/transpose\":121,\"gl-vec3/cross\":147,\"gl-vec3/dot\":148,\"gl-vec3/length\":149,\"gl-vec3/normalize\":151}],179:[function(_dereq_,module,exports){module.exports=function normalize(out,mat){var m44=mat[15];// Cannot normalize.\nif(m44===0)return false;var scale=1/m44;for(var i=0;i<16;i++){out[i]=mat[i]*scale;}return true;};},{}],180:[function(_dereq_,module,exports){var lerp=_dereq_('gl-vec3/lerp');var recompose=_dereq_('mat4-recompose');var decompose=_dereq_('mat4-decompose');var determinant=_dereq_('gl-mat4/determinant');var slerp=_dereq_('quat-slerp');var state0=state();var state1=state();var tmp=state();module.exports=interpolate;function interpolate(out,start,end,alpha){if(determinant(start)===0||determinant(end)===0)return false;//decompose the start and end matrices into individual components\nvar r0=decompose(start,state0.translate,state0.scale,state0.skew,state0.perspective,state0.quaternion);var r1=decompose(end,state1.translate,state1.scale,state1.skew,state1.perspective,state1.quaternion);if(!r0||!r1)return false;//now lerp/slerp the start and end components into a temporary     lerp(tmptranslate, state0.translate, state1.translate, alpha)\nlerp(tmp.translate,state0.translate,state1.translate,alpha);lerp(tmp.skew,state0.skew,state1.skew,alpha);lerp(tmp.scale,state0.scale,state1.scale,alpha);lerp(tmp.perspective,state0.perspective,state1.perspective,alpha);slerp(tmp.quaternion,state0.quaternion,state1.quaternion,alpha);//and recompose into our 'out' matrix\nrecompose(out,tmp.translate,tmp.scale,tmp.skew,tmp.perspective,tmp.quaternion);return true;}function state(){return{translate:vec3(),scale:vec3(1),skew:vec3(),perspective:vec4(),quaternion:vec4()};}function vec3(n){return[n||0,n||0,n||0];}function vec4(){return[0,0,0,1];}},{\"gl-mat4/determinant\":107,\"gl-vec3/lerp\":150,\"mat4-decompose\":178,\"mat4-recompose\":181,\"quat-slerp\":233}],181:[function(_dereq_,module,exports){/*\nInput:  translation ; a 3 component vector\n        scale       ; a 3 component vector\n        skew        ; skew factors XY,XZ,YZ represented as a 3 component vector\n        perspective ; a 4 component vector\n        quaternion  ; a 4 component vector\nOutput: matrix      ; a 4x4 matrix\n\nFrom: http://www.w3.org/TR/css3-transforms/#recomposing-to-a-3d-matrix\n*/var mat4={identity:_dereq_('gl-mat4/identity'),translate:_dereq_('gl-mat4/translate'),multiply:_dereq_('gl-mat4/multiply'),create:_dereq_('gl-mat4/create'),scale:_dereq_('gl-mat4/scale'),fromRotationTranslation:_dereq_('gl-mat4/fromRotationTranslation')};var rotationMatrix=mat4.create();var temp=mat4.create();module.exports=function recomposeMat4(matrix,translation,scale,skew,perspective,quaternion){mat4.identity(matrix);//apply translation & rotation\nmat4.fromRotationTranslation(matrix,quaternion,translation);//apply perspective\nmatrix[3]=perspective[0];matrix[7]=perspective[1];matrix[11]=perspective[2];matrix[15]=perspective[3];// apply skew\n// temp is a identity 4x4 matrix initially\nmat4.identity(temp);if(skew[2]!==0){temp[9]=skew[2];mat4.multiply(matrix,matrix,temp);}if(skew[1]!==0){temp[9]=0;temp[8]=skew[1];mat4.multiply(matrix,matrix,temp);}if(skew[0]!==0){temp[8]=0;temp[4]=skew[0];mat4.multiply(matrix,matrix,temp);}//apply scale\nmat4.scale(matrix,matrix,scale);return matrix;};},{\"gl-mat4/create\":106,\"gl-mat4/fromRotationTranslation\":109,\"gl-mat4/identity\":110,\"gl-mat4/multiply\":113,\"gl-mat4/scale\":119,\"gl-mat4/translate\":120}],182:[function(_dereq_,module,exports){'use strict';var bsearch=_dereq_('binary-search-bounds');var m4interp=_dereq_('mat4-interpolate');var invert44=_dereq_('gl-mat4/invert');var rotateX=_dereq_('gl-mat4/rotateX');var rotateY=_dereq_('gl-mat4/rotateY');var rotateZ=_dereq_('gl-mat4/rotateZ');var lookAt=_dereq_('gl-mat4/lookAt');var translate=_dereq_('gl-mat4/translate');var scale=_dereq_('gl-mat4/scale');var normalize=_dereq_('gl-vec3/normalize');var DEFAULT_CENTER=[0,0,0];module.exports=createMatrixCameraController;function MatrixCameraController(initialMatrix){this._components=initialMatrix.slice();this._time=[0];this.prevMatrix=initialMatrix.slice();this.nextMatrix=initialMatrix.slice();this.computedMatrix=initialMatrix.slice();this.computedInverse=initialMatrix.slice();this.computedEye=[0,0,0];this.computedUp=[0,0,0];this.computedCenter=[0,0,0];this.computedRadius=[0];this._limits=[-Infinity,Infinity];}var proto=MatrixCameraController.prototype;proto.recalcMatrix=function(t){var time=this._time;var tidx=bsearch.le(time,t);var mat=this.computedMatrix;if(tidx<0){return;}var comps=this._components;if(tidx===time.length-1){var ptr=16*tidx;for(var i=0;i<16;++i){mat[i]=comps[ptr++];}}else{var dt=time[tidx+1]-time[tidx];var ptr=16*tidx;var prev=this.prevMatrix;var allEqual=true;for(var i=0;i<16;++i){prev[i]=comps[ptr++];}var next=this.nextMatrix;for(var i=0;i<16;++i){next[i]=comps[ptr++];allEqual=allEqual&&prev[i]===next[i];}if(dt<1e-6||allEqual){for(var i=0;i<16;++i){mat[i]=prev[i];}}else{m4interp(mat,prev,next,(t-time[tidx])/dt);}}var up=this.computedUp;up[0]=mat[1];up[1]=mat[5];up[2]=mat[9];normalize(up,up);var imat=this.computedInverse;invert44(imat,mat);var eye=this.computedEye;var w=imat[15];eye[0]=imat[12]/w;eye[1]=imat[13]/w;eye[2]=imat[14]/w;var center=this.computedCenter;var radius=Math.exp(this.computedRadius[0]);for(var i=0;i<3;++i){center[i]=eye[i]-mat[2+4*i]*radius;}};proto.idle=function(t){if(t<this.lastT()){return;}var mc=this._components;var ptr=mc.length-16;for(var i=0;i<16;++i){mc.push(mc[ptr++]);}this._time.push(t);};proto.flush=function(t){var idx=bsearch.gt(this._time,t)-2;if(idx<0){return;}this._time.splice(0,idx);this._components.splice(0,16*idx);};proto.lastT=function(){return this._time[this._time.length-1];};proto.lookAt=function(t,eye,center,up){this.recalcMatrix(t);eye=eye||this.computedEye;center=center||DEFAULT_CENTER;up=up||this.computedUp;this.setMatrix(t,lookAt(this.computedMatrix,eye,center,up));var d2=0.0;for(var i=0;i<3;++i){d2+=Math.pow(center[i]-eye[i],2);}d2=Math.log(Math.sqrt(d2));this.computedRadius[0]=d2;};proto.rotate=function(t,yaw,pitch,roll){this.recalcMatrix(t);var mat=this.computedInverse;if(yaw)rotateY(mat,mat,yaw);if(pitch)rotateX(mat,mat,pitch);if(roll)rotateZ(mat,mat,roll);this.setMatrix(t,invert44(this.computedMatrix,mat));};var tvec=[0,0,0];proto.pan=function(t,dx,dy,dz){tvec[0]=-(dx||0.0);tvec[1]=-(dy||0.0);tvec[2]=-(dz||0.0);this.recalcMatrix(t);var mat=this.computedInverse;translate(mat,mat,tvec);this.setMatrix(t,invert44(mat,mat));};proto.translate=function(t,dx,dy,dz){tvec[0]=dx||0.0;tvec[1]=dy||0.0;tvec[2]=dz||0.0;this.recalcMatrix(t);var mat=this.computedMatrix;translate(mat,mat,tvec);this.setMatrix(t,mat);};proto.setMatrix=function(t,mat){if(t<this.lastT()){return;}this._time.push(t);for(var i=0;i<16;++i){this._components.push(mat[i]);}};proto.setDistance=function(t,d){this.computedRadius[0]=d;};proto.setDistanceLimits=function(a,b){var lim=this._limits;lim[0]=a;lim[1]=b;};proto.getDistanceLimits=function(out){var lim=this._limits;if(out){out[0]=lim[0];out[1]=lim[1];return out;}return lim;};function createMatrixCameraController(options){options=options||{};var matrix=options.matrix||[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];return new MatrixCameraController(matrix);}},{\"binary-search-bounds\":31,\"gl-mat4/invert\":111,\"gl-mat4/lookAt\":112,\"gl-mat4/rotateX\":116,\"gl-mat4/rotateY\":117,\"gl-mat4/rotateZ\":118,\"gl-mat4/scale\":119,\"gl-mat4/translate\":120,\"gl-vec3/normalize\":151,\"mat4-interpolate\":180}],183:[function(_dereq_,module,exports){'use strict';module.exports=monotoneConvexHull2D;var orient=_dereq_('robust-orientation')[3];function monotoneConvexHull2D(points){var n=points.length;if(n<3){var result=new Array(n);for(var i=0;i<n;++i){result[i]=i;}if(n===2&&points[0][0]===points[1][0]&&points[0][1]===points[1][1]){return[0];}return result;}//Sort point indices along x-axis\nvar sorted=new Array(n);for(var i=0;i<n;++i){sorted[i]=i;}sorted.sort(function(a,b){var d=points[a][0]-points[b][0];if(d){return d;}return points[a][1]-points[b][1];});//Construct upper and lower hulls\nvar lower=[sorted[0],sorted[1]];var upper=[sorted[0],sorted[1]];for(var i=2;i<n;++i){var idx=sorted[i];var p=points[idx];//Insert into lower list\nvar m=lower.length;while(m>1&&orient(points[lower[m-2]],points[lower[m-1]],p)<=0){m-=1;lower.pop();}lower.push(idx);//Insert into upper list\nm=upper.length;while(m>1&&orient(points[upper[m-2]],points[upper[m-1]],p)>=0){m-=1;upper.pop();}upper.push(idx);}//Merge lists together\nvar result=new Array(upper.length+lower.length-2);var ptr=0;for(var i=0,nl=lower.length;i<nl;++i){result[ptr++]=lower[i];}for(var j=upper.length-2;j>0;--j){result[ptr++]=upper[j];}//Return result\nreturn result;}},{\"robust-orientation\":245}],184:[function(_dereq_,module,exports){'use strict';module.exports=mouseListen;var mouse=_dereq_('mouse-event');function mouseListen(element,callback){if(!callback){callback=element;element=window;}var buttonState=0;var x=0;var y=0;var mods={shift:false,alt:false,control:false,meta:false};var attached=false;function updateMods(ev){var changed=false;if('altKey'in ev){changed=changed||ev.altKey!==mods.alt;mods.alt=!!ev.altKey;}if('shiftKey'in ev){changed=changed||ev.shiftKey!==mods.shift;mods.shift=!!ev.shiftKey;}if('ctrlKey'in ev){changed=changed||ev.ctrlKey!==mods.control;mods.control=!!ev.ctrlKey;}if('metaKey'in ev){changed=changed||ev.metaKey!==mods.meta;mods.meta=!!ev.metaKey;}return changed;}function handleEvent(nextButtons,ev){var nextX=mouse.x(ev);var nextY=mouse.y(ev);if('buttons'in ev){nextButtons=ev.buttons|0;}if(nextButtons!==buttonState||nextX!==x||nextY!==y||updateMods(ev)){buttonState=nextButtons|0;x=nextX||0;y=nextY||0;callback&&callback(buttonState,x,y,mods);}}function clearState(ev){handleEvent(0,ev);}function handleBlur(){if(buttonState||x||y||mods.shift||mods.alt||mods.meta||mods.control){x=y=0;buttonState=0;mods.shift=mods.alt=mods.control=mods.meta=false;callback&&callback(0,0,0,mods);}}function handleMods(ev){if(updateMods(ev)){callback&&callback(buttonState,x,y,mods);}}function handleMouseMove(ev){if(mouse.buttons(ev)===0){handleEvent(0,ev);}else{handleEvent(buttonState,ev);}}function handleMouseDown(ev){handleEvent(buttonState|mouse.buttons(ev),ev);}function handleMouseUp(ev){handleEvent(buttonState&~mouse.buttons(ev),ev);}function attachListeners(){if(attached){return;}attached=true;element.addEventListener('mousemove',handleMouseMove);element.addEventListener('mousedown',handleMouseDown);element.addEventListener('mouseup',handleMouseUp);element.addEventListener('mouseleave',clearState);element.addEventListener('mouseenter',clearState);element.addEventListener('mouseout',clearState);element.addEventListener('mouseover',clearState);element.addEventListener('blur',handleBlur);element.addEventListener('keyup',handleMods);element.addEventListener('keydown',handleMods);element.addEventListener('keypress',handleMods);if(element!==window){window.addEventListener('blur',handleBlur);window.addEventListener('keyup',handleMods);window.addEventListener('keydown',handleMods);window.addEventListener('keypress',handleMods);}}function detachListeners(){if(!attached){return;}attached=false;element.removeEventListener('mousemove',handleMouseMove);element.removeEventListener('mousedown',handleMouseDown);element.removeEventListener('mouseup',handleMouseUp);element.removeEventListener('mouseleave',clearState);element.removeEventListener('mouseenter',clearState);element.removeEventListener('mouseout',clearState);element.removeEventListener('mouseover',clearState);element.removeEventListener('blur',handleBlur);element.removeEventListener('keyup',handleMods);element.removeEventListener('keydown',handleMods);element.removeEventListener('keypress',handleMods);if(element!==window){window.removeEventListener('blur',handleBlur);window.removeEventListener('keyup',handleMods);window.removeEventListener('keydown',handleMods);window.removeEventListener('keypress',handleMods);}}// Attach listeners\nattachListeners();var result={element:element};Object.defineProperties(result,{enabled:{get:function get(){return attached;},set:function set(f){if(f){attachListeners();}else{detachListeners();}},enumerable:true},buttons:{get:function get(){return buttonState;},enumerable:true},x:{get:function get(){return x;},enumerable:true},y:{get:function get(){return y;},enumerable:true},mods:{get:function get(){return mods;},enumerable:true}});return result;}},{\"mouse-event\":186}],185:[function(_dereq_,module,exports){var rootPosition={left:0,top:0};module.exports=mouseEventOffset;function mouseEventOffset(ev,target,out){target=target||ev.currentTarget||ev.srcElement;if(!Array.isArray(out)){out=[0,0];}var cx=ev.clientX||0;var cy=ev.clientY||0;var rect=getBoundingClientOffset(target);out[0]=cx-rect.left;out[1]=cy-rect.top;return out;}function getBoundingClientOffset(element){if(element===window||element===document||element===document.body){return rootPosition;}else{return element.getBoundingClientRect();}}},{}],186:[function(_dereq_,module,exports){'use strict';function mouseButtons(ev){if(_typeof(ev)==='object'){if('buttons'in ev){return ev.buttons;}else if('which'in ev){var b=ev.which;if(b===2){return 4;}else if(b===3){return 2;}else if(b>0){return 1<<b-1;}}else if('button'in ev){var b=ev.button;if(b===1){return 4;}else if(b===2){return 2;}else if(b>=0){return 1<<b;}}}return 0;}exports.buttons=mouseButtons;function mouseElement(ev){return ev.target||ev.srcElement||window;}exports.element=mouseElement;function mouseRelativeX(ev){if(_typeof(ev)==='object'){if('offsetX'in ev){return ev.offsetX;}var target=mouseElement(ev);var bounds=target.getBoundingClientRect();return ev.clientX-bounds.left;}return 0;}exports.x=mouseRelativeX;function mouseRelativeY(ev){if(_typeof(ev)==='object'){if('offsetY'in ev){return ev.offsetY;}var target=mouseElement(ev);var bounds=target.getBoundingClientRect();return ev.clientY-bounds.top;}return 0;}exports.y=mouseRelativeY;},{}],187:[function(_dereq_,module,exports){'use strict';var toPX=_dereq_('to-px');module.exports=mouseWheelListen;function mouseWheelListen(element,callback,noScroll){if(typeof element==='function'){noScroll=!!callback;callback=element;element=window;}var lineHeight=toPX('ex',element);var listener=function listener(ev){if(noScroll){ev.preventDefault();}var dx=ev.deltaX||0;var dy=ev.deltaY||0;var dz=ev.deltaZ||0;var mode=ev.deltaMode;var scale=1;switch(mode){case 1:scale=lineHeight;break;case 2:scale=window.innerHeight;break;}dx*=scale;dy*=scale;dz*=scale;if(dx||dy||dz){return callback(dx,dy,dz,ev);}};element.addEventListener('wheel',listener);return listener;}},{\"to-px\":265}],188:[function(_dereq_,module,exports){\"use strict\";var pool=_dereq_(\"typedarray-pool\");module.exports=createSurfaceExtractor;//Helper macros\nfunction array(i){return\"a\"+i;}function data(i){return\"d\"+i;}function cube(i,bitmask){return\"c\"+i+\"_\"+bitmask;}function shape(i){return\"s\"+i;}function stride(i,j){return\"t\"+i+\"_\"+j;}function offset(i){return\"o\"+i;}function scalar(i){return\"x\"+i;}function pointer(i){return\"p\"+i;}function delta(i,bitmask){return\"d\"+i+\"_\"+bitmask;}function index(i){return\"i\"+i;}function step(i,j){return\"u\"+i+\"_\"+j;}function pcube(bitmask){return\"b\"+bitmask;}function qcube(bitmask){return\"y\"+bitmask;}function pdelta(bitmask){return\"e\"+bitmask;}function vert(i){return\"v\"+i;}var VERTEX_IDS=\"V\";var PHASES=\"P\";var VERTEX_COUNT=\"N\";var POOL_SIZE=\"Q\";var POINTER=\"X\";var TEMPORARY=\"T\";function permBitmask(dimension,mask,order){var r=0;for(var i=0;i<dimension;++i){if(mask&1<<i){r|=1<<order[i];}}return r;}//Generates the surface procedure\nfunction compileSurfaceProcedure(vertexFunc,faceFunc,phaseFunc,scalarArgs,order,typesig){var arrayArgs=typesig.length;var dimension=order.length;if(dimension<2){throw new Error(\"ndarray-extract-contour: Dimension must be at least 2\");}var funcName=\"extractContour\"+order.join(\"_\");var code=[];var vars=[];var args=[];//Assemble arguments\nfor(var i=0;i<arrayArgs;++i){args.push(array(i));}for(var i=0;i<scalarArgs;++i){args.push(scalar(i));}//Shape\nfor(var i=0;i<dimension;++i){vars.push(shape(i)+\"=\"+array(0)+\".shape[\"+i+\"]|0\");}//Data, stride, offset pointers\nfor(var i=0;i<arrayArgs;++i){vars.push(data(i)+\"=\"+array(i)+\".data\",offset(i)+\"=\"+array(i)+\".offset|0\");for(var j=0;j<dimension;++j){vars.push(stride(i,j)+\"=\"+array(i)+\".stride[\"+j+\"]|0\");}}//Pointer, delta and cube variables\nfor(var i=0;i<arrayArgs;++i){vars.push(pointer(i)+\"=\"+offset(i));vars.push(cube(i,0));for(var j=1;j<1<<dimension;++j){var ptrStr=[];for(var k=0;k<dimension;++k){if(j&1<<k){ptrStr.push(\"-\"+stride(i,k));}}vars.push(delta(i,j)+\"=(\"+ptrStr.join(\"\")+\")|0\");vars.push(cube(i,j)+\"=0\");}}//Create step variables\nfor(var i=0;i<arrayArgs;++i){for(var j=0;j<dimension;++j){var stepVal=[stride(i,order[j])];if(j>0){stepVal.push(stride(i,order[j-1])+\"*\"+shape(order[j-1]));}vars.push(step(i,order[j])+\"=(\"+stepVal.join(\"-\")+\")|0\");}}//Create index variables\nfor(var i=0;i<dimension;++i){vars.push(index(i)+\"=0\");}//Vertex count\nvars.push(VERTEX_COUNT+\"=0\");//Compute pool size, initialize pool step\nvar sizeVariable=[\"2\"];for(var i=dimension-2;i>=0;--i){sizeVariable.push(shape(order[i]));}//Previous phases and vertex_ids\nvars.push(POOL_SIZE+\"=(\"+sizeVariable.join(\"*\")+\")|0\",PHASES+\"=mallocUint32(\"+POOL_SIZE+\")\",VERTEX_IDS+\"=mallocUint32(\"+POOL_SIZE+\")\",POINTER+\"=0\");//Create cube variables for phases\nvars.push(pcube(0)+\"=0\");for(var j=1;j<1<<dimension;++j){var cubeDelta=[];var cubeStep=[];for(var k=0;k<dimension;++k){if(j&1<<k){if(cubeStep.length===0){cubeDelta.push(\"1\");}else{cubeDelta.unshift(cubeStep.join(\"*\"));}}cubeStep.push(shape(order[k]));}var signFlag=\"\";if(cubeDelta[0].indexOf(shape(order[dimension-2]))<0){signFlag=\"-\";}var jperm=permBitmask(dimension,j,order);vars.push(pdelta(jperm)+\"=(-\"+cubeDelta.join(\"-\")+\")|0\",qcube(jperm)+\"=(\"+signFlag+cubeDelta.join(\"-\")+\")|0\",pcube(jperm)+\"=0\");}vars.push(vert(0)+\"=0\",TEMPORARY+\"=0\");function forLoopBegin(i,start){code.push(\"for(\",index(order[i]),\"=\",start,\";\",index(order[i]),\"<\",shape(order[i]),\";\",\"++\",index(order[i]),\"){\");}function forLoopEnd(i){for(var j=0;j<arrayArgs;++j){code.push(pointer(j),\"+=\",step(j,order[i]),\";\");}code.push(\"}\");}function fillEmptySlice(k){for(var i=k-1;i>=0;--i){forLoopBegin(i,0);}var phaseFuncArgs=[];for(var i=0;i<arrayArgs;++i){if(typesig[i]){phaseFuncArgs.push(data(i)+\".get(\"+pointer(i)+\")\");}else{phaseFuncArgs.push(data(i)+\"[\"+pointer(i)+\"]\");}}for(var i=0;i<scalarArgs;++i){phaseFuncArgs.push(scalar(i));}code.push(PHASES,\"[\",POINTER,\"++]=phase(\",phaseFuncArgs.join(),\");\");for(var i=0;i<k;++i){forLoopEnd(i);}for(var j=0;j<arrayArgs;++j){code.push(pointer(j),\"+=\",step(j,order[k]),\";\");}}function processGridCell(mask){//Read in local data\nfor(var i=0;i<arrayArgs;++i){if(typesig[i]){code.push(cube(i,0),\"=\",data(i),\".get(\",pointer(i),\");\");}else{code.push(cube(i,0),\"=\",data(i),\"[\",pointer(i),\"];\");}}//Read in phase\nvar phaseFuncArgs=[];for(var i=0;i<arrayArgs;++i){phaseFuncArgs.push(cube(i,0));}for(var i=0;i<scalarArgs;++i){phaseFuncArgs.push(scalar(i));}code.push(pcube(0),\"=\",PHASES,\"[\",POINTER,\"]=phase(\",phaseFuncArgs.join(),\");\");//Read in other cube data\nfor(var j=1;j<1<<dimension;++j){code.push(pcube(j),\"=\",PHASES,\"[\",POINTER,\"+\",pdelta(j),\"];\");}//Check for boundary crossing\nvar vertexPredicate=[];for(var j=1;j<1<<dimension;++j){vertexPredicate.push(\"(\"+pcube(0)+\"!==\"+pcube(j)+\")\");}code.push(\"if(\",vertexPredicate.join(\"||\"),\"){\");//Read in boundary data\nvar vertexArgs=[];for(var i=0;i<dimension;++i){vertexArgs.push(index(i));}for(var i=0;i<arrayArgs;++i){vertexArgs.push(cube(i,0));for(var j=1;j<1<<dimension;++j){if(typesig[i]){code.push(cube(i,j),\"=\",data(i),\".get(\",pointer(i),\"+\",delta(i,j),\");\");}else{code.push(cube(i,j),\"=\",data(i),\"[\",pointer(i),\"+\",delta(i,j),\"];\");}vertexArgs.push(cube(i,j));}}for(var i=0;i<1<<dimension;++i){vertexArgs.push(pcube(i));}for(var i=0;i<scalarArgs;++i){vertexArgs.push(scalar(i));}//Generate vertex\ncode.push(\"vertex(\",vertexArgs.join(),\");\",vert(0),\"=\",VERTEX_IDS,\"[\",POINTER,\"]=\",VERTEX_COUNT,\"++;\");//Check for face crossings\nvar base=(1<<dimension)-1;var corner=pcube(base);for(var j=0;j<dimension;++j){if((mask&~(1<<j))===0){//Check face\nvar subset=base^1<<j;var edge=pcube(subset);var faceArgs=[];for(var k=subset;k>0;k=k-1&subset){faceArgs.push(VERTEX_IDS+\"[\"+POINTER+\"+\"+pdelta(k)+\"]\");}faceArgs.push(vert(0));for(var k=0;k<arrayArgs;++k){if(j&1){faceArgs.push(cube(k,base),cube(k,subset));}else{faceArgs.push(cube(k,subset),cube(k,base));}}if(j&1){faceArgs.push(corner,edge);}else{faceArgs.push(edge,corner);}for(var k=0;k<scalarArgs;++k){faceArgs.push(scalar(k));}code.push(\"if(\",corner,\"!==\",edge,\"){\",\"face(\",faceArgs.join(),\")}\");}}//Increment pointer, close off if statement\ncode.push(\"}\",POINTER,\"+=1;\");}function flip(){for(var j=1;j<1<<dimension;++j){code.push(TEMPORARY,\"=\",pdelta(j),\";\",pdelta(j),\"=\",qcube(j),\";\",qcube(j),\"=\",TEMPORARY,\";\");}}function createLoop(i,mask){if(i<0){processGridCell(mask);return;}fillEmptySlice(i);code.push(\"if(\",shape(order[i]),\">0){\",index(order[i]),\"=1;\");createLoop(i-1,mask|1<<order[i]);for(var j=0;j<arrayArgs;++j){code.push(pointer(j),\"+=\",step(j,order[i]),\";\");}if(i===dimension-1){code.push(POINTER,\"=0;\");flip();}forLoopBegin(i,2);createLoop(i-1,mask);if(i===dimension-1){code.push(\"if(\",index(order[dimension-1]),\"&1){\",POINTER,\"=0;}\");flip();}forLoopEnd(i);code.push(\"}\");}createLoop(dimension-1,0);//Release scratch memory\ncode.push(\"freeUint32(\",VERTEX_IDS,\");freeUint32(\",PHASES,\");\");//Compile and link procedure\nvar procedureCode=[\"'use strict';\",\"function \",funcName,\"(\",args.join(),\"){\",\"var \",vars.join(),\";\",code.join(\"\"),\"}\",\"return \",funcName].join(\"\");var proc=new Function(\"vertex\",\"face\",\"phase\",\"mallocUint32\",\"freeUint32\",procedureCode);return proc(vertexFunc,faceFunc,phaseFunc,pool.mallocUint32,pool.freeUint32);}function createSurfaceExtractor(args){function error(msg){throw new Error(\"ndarray-extract-contour: \"+msg);}if(_typeof(args)!==\"object\"){error(\"Must specify arguments\");}var order=args.order;if(!Array.isArray(order)){error(\"Must specify order\");}var arrays=args.arrayArguments||1;if(arrays<1){error(\"Must have at least one array argument\");}var scalars=args.scalarArguments||0;if(scalars<0){error(\"Scalar arg count must be > 0\");}if(typeof args.vertex!==\"function\"){error(\"Must specify vertex creation function\");}if(typeof args.cell!==\"function\"){error(\"Must specify cell creation function\");}if(typeof args.phase!==\"function\"){error(\"Must specify phase function\");}var getters=args.getters||[];var typesig=new Array(arrays);for(var i=0;i<arrays;++i){if(getters.indexOf(i)>=0){typesig[i]=true;}else{typesig[i]=false;}}return compileSurfaceProcedure(args.vertex,args.cell,args.phase,scalars,order,typesig);}},{\"typedarray-pool\":270}],189:[function(_dereq_,module,exports){\"use strict\";var compile=_dereq_(\"cwise-compiler\");var EmptyProc={body:\"\",args:[],thisVars:[],localVars:[]};function fixup(x){if(!x){return EmptyProc;}for(var i=0;i<x.args.length;++i){var a=x.args[i];if(i===0){x.args[i]={name:a,lvalue:true,rvalue:!!x.rvalue,count:x.count||1};}else{x.args[i]={name:a,lvalue:false,rvalue:true,count:1};}}if(!x.thisVars){x.thisVars=[];}if(!x.localVars){x.localVars=[];}return x;}function pcompile(user_args){return compile({args:user_args.args,pre:fixup(user_args.pre),body:fixup(user_args.body),post:fixup(user_args.proc),funcName:user_args.funcName});}function makeOp(user_args){var args=[];for(var i=0;i<user_args.args.length;++i){args.push(\"a\"+i);}var wrapper=new Function(\"P\",[\"return function \",user_args.funcName,\"_ndarrayops(\",args.join(\",\"),\") {P(\",args.join(\",\"),\");return a0}\"].join(\"\"));return wrapper(pcompile(user_args));}var assign_ops={add:\"+\",sub:\"-\",mul:\"*\",div:\"/\",mod:\"%\",band:\"&\",bor:\"|\",bxor:\"^\",lshift:\"<<\",rshift:\">>\",rrshift:\">>>\"};(function(){for(var id in assign_ops){var op=assign_ops[id];exports[id]=makeOp({args:[\"array\",\"array\",\"array\"],body:{args:[\"a\",\"b\",\"c\"],body:\"a=b\"+op+\"c\"},funcName:id});exports[id+\"eq\"]=makeOp({args:[\"array\",\"array\"],body:{args:[\"a\",\"b\"],body:\"a\"+op+\"=b\"},rvalue:true,funcName:id+\"eq\"});exports[id+\"s\"]=makeOp({args:[\"array\",\"array\",\"scalar\"],body:{args:[\"a\",\"b\",\"s\"],body:\"a=b\"+op+\"s\"},funcName:id+\"s\"});exports[id+\"seq\"]=makeOp({args:[\"array\",\"scalar\"],body:{args:[\"a\",\"s\"],body:\"a\"+op+\"=s\"},rvalue:true,funcName:id+\"seq\"});}})();var unary_ops={not:\"!\",bnot:\"~\",neg:\"-\",recip:\"1.0/\"};(function(){for(var id in unary_ops){var op=unary_ops[id];exports[id]=makeOp({args:[\"array\",\"array\"],body:{args:[\"a\",\"b\"],body:\"a=\"+op+\"b\"},funcName:id});exports[id+\"eq\"]=makeOp({args:[\"array\"],body:{args:[\"a\"],body:\"a=\"+op+\"a\"},rvalue:true,count:2,funcName:id+\"eq\"});}})();var binary_ops={and:\"&&\",or:\"||\",eq:\"===\",neq:\"!==\",lt:\"<\",gt:\">\",leq:\"<=\",geq:\">=\"};(function(){for(var id in binary_ops){var op=binary_ops[id];exports[id]=makeOp({args:[\"array\",\"array\",\"array\"],body:{args:[\"a\",\"b\",\"c\"],body:\"a=b\"+op+\"c\"},funcName:id});exports[id+\"s\"]=makeOp({args:[\"array\",\"array\",\"scalar\"],body:{args:[\"a\",\"b\",\"s\"],body:\"a=b\"+op+\"s\"},funcName:id+\"s\"});exports[id+\"eq\"]=makeOp({args:[\"array\",\"array\"],body:{args:[\"a\",\"b\"],body:\"a=a\"+op+\"b\"},rvalue:true,count:2,funcName:id+\"eq\"});exports[id+\"seq\"]=makeOp({args:[\"array\",\"scalar\"],body:{args:[\"a\",\"s\"],body:\"a=a\"+op+\"s\"},rvalue:true,count:2,funcName:id+\"seq\"});}})();var math_unary=[\"abs\",\"acos\",\"asin\",\"atan\",\"ceil\",\"cos\",\"exp\",\"floor\",\"log\",\"round\",\"sin\",\"sqrt\",\"tan\"];(function(){for(var i=0;i<math_unary.length;++i){var f=math_unary[i];exports[f]=makeOp({args:[\"array\",\"array\"],pre:{args:[],body:\"this_f=Math.\"+f,thisVars:[\"this_f\"]},body:{args:[\"a\",\"b\"],body:\"a=this_f(b)\",thisVars:[\"this_f\"]},funcName:f});exports[f+\"eq\"]=makeOp({args:[\"array\"],pre:{args:[],body:\"this_f=Math.\"+f,thisVars:[\"this_f\"]},body:{args:[\"a\"],body:\"a=this_f(a)\",thisVars:[\"this_f\"]},rvalue:true,count:2,funcName:f+\"eq\"});}})();var math_comm=[\"max\",\"min\",\"atan2\",\"pow\"];(function(){for(var i=0;i<math_comm.length;++i){var f=math_comm[i];exports[f]=makeOp({args:[\"array\",\"array\",\"array\"],pre:{args:[],body:\"this_f=Math.\"+f,thisVars:[\"this_f\"]},body:{args:[\"a\",\"b\",\"c\"],body:\"a=this_f(b,c)\",thisVars:[\"this_f\"]},funcName:f});exports[f+\"s\"]=makeOp({args:[\"array\",\"array\",\"scalar\"],pre:{args:[],body:\"this_f=Math.\"+f,thisVars:[\"this_f\"]},body:{args:[\"a\",\"b\",\"c\"],body:\"a=this_f(b,c)\",thisVars:[\"this_f\"]},funcName:f+\"s\"});exports[f+\"eq\"]=makeOp({args:[\"array\",\"array\"],pre:{args:[],body:\"this_f=Math.\"+f,thisVars:[\"this_f\"]},body:{args:[\"a\",\"b\"],body:\"a=this_f(a,b)\",thisVars:[\"this_f\"]},rvalue:true,count:2,funcName:f+\"eq\"});exports[f+\"seq\"]=makeOp({args:[\"array\",\"scalar\"],pre:{args:[],body:\"this_f=Math.\"+f,thisVars:[\"this_f\"]},body:{args:[\"a\",\"b\"],body:\"a=this_f(a,b)\",thisVars:[\"this_f\"]},rvalue:true,count:2,funcName:f+\"seq\"});}})();var math_noncomm=[\"atan2\",\"pow\"];(function(){for(var i=0;i<math_noncomm.length;++i){var f=math_noncomm[i];exports[f+\"op\"]=makeOp({args:[\"array\",\"array\",\"array\"],pre:{args:[],body:\"this_f=Math.\"+f,thisVars:[\"this_f\"]},body:{args:[\"a\",\"b\",\"c\"],body:\"a=this_f(c,b)\",thisVars:[\"this_f\"]},funcName:f+\"op\"});exports[f+\"ops\"]=makeOp({args:[\"array\",\"array\",\"scalar\"],pre:{args:[],body:\"this_f=Math.\"+f,thisVars:[\"this_f\"]},body:{args:[\"a\",\"b\",\"c\"],body:\"a=this_f(c,b)\",thisVars:[\"this_f\"]},funcName:f+\"ops\"});exports[f+\"opeq\"]=makeOp({args:[\"array\",\"array\"],pre:{args:[],body:\"this_f=Math.\"+f,thisVars:[\"this_f\"]},body:{args:[\"a\",\"b\"],body:\"a=this_f(b,a)\",thisVars:[\"this_f\"]},rvalue:true,count:2,funcName:f+\"opeq\"});exports[f+\"opseq\"]=makeOp({args:[\"array\",\"scalar\"],pre:{args:[],body:\"this_f=Math.\"+f,thisVars:[\"this_f\"]},body:{args:[\"a\",\"b\"],body:\"a=this_f(b,a)\",thisVars:[\"this_f\"]},rvalue:true,count:2,funcName:f+\"opseq\"});}})();exports.any=compile({args:[\"array\"],pre:EmptyProc,body:{args:[{name:\"a\",lvalue:false,rvalue:true,count:1}],body:\"if(a){return true}\",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:\"return false\"},funcName:\"any\"});exports.all=compile({args:[\"array\"],pre:EmptyProc,body:{args:[{name:\"x\",lvalue:false,rvalue:true,count:1}],body:\"if(!x){return false}\",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:\"return true\"},funcName:\"all\"});exports.sum=compile({args:[\"array\"],pre:{args:[],localVars:[],thisVars:[\"this_s\"],body:\"this_s=0\"},body:{args:[{name:\"a\",lvalue:false,rvalue:true,count:1}],body:\"this_s+=a\",localVars:[],thisVars:[\"this_s\"]},post:{args:[],localVars:[],thisVars:[\"this_s\"],body:\"return this_s\"},funcName:\"sum\"});exports.prod=compile({args:[\"array\"],pre:{args:[],localVars:[],thisVars:[\"this_s\"],body:\"this_s=1\"},body:{args:[{name:\"a\",lvalue:false,rvalue:true,count:1}],body:\"this_s*=a\",localVars:[],thisVars:[\"this_s\"]},post:{args:[],localVars:[],thisVars:[\"this_s\"],body:\"return this_s\"},funcName:\"prod\"});exports.norm2squared=compile({args:[\"array\"],pre:{args:[],localVars:[],thisVars:[\"this_s\"],body:\"this_s=0\"},body:{args:[{name:\"a\",lvalue:false,rvalue:true,count:2}],body:\"this_s+=a*a\",localVars:[],thisVars:[\"this_s\"]},post:{args:[],localVars:[],thisVars:[\"this_s\"],body:\"return this_s\"},funcName:\"norm2squared\"});exports.norm2=compile({args:[\"array\"],pre:{args:[],localVars:[],thisVars:[\"this_s\"],body:\"this_s=0\"},body:{args:[{name:\"a\",lvalue:false,rvalue:true,count:2}],body:\"this_s+=a*a\",localVars:[],thisVars:[\"this_s\"]},post:{args:[],localVars:[],thisVars:[\"this_s\"],body:\"return Math.sqrt(this_s)\"},funcName:\"norm2\"});exports.norminf=compile({args:[\"array\"],pre:{args:[],localVars:[],thisVars:[\"this_s\"],body:\"this_s=0\"},body:{args:[{name:\"a\",lvalue:false,rvalue:true,count:4}],body:\"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}\",localVars:[],thisVars:[\"this_s\"]},post:{args:[],localVars:[],thisVars:[\"this_s\"],body:\"return this_s\"},funcName:\"norminf\"});exports.norm1=compile({args:[\"array\"],pre:{args:[],localVars:[],thisVars:[\"this_s\"],body:\"this_s=0\"},body:{args:[{name:\"a\",lvalue:false,rvalue:true,count:3}],body:\"this_s+=a<0?-a:a\",localVars:[],thisVars:[\"this_s\"]},post:{args:[],localVars:[],thisVars:[\"this_s\"],body:\"return this_s\"},funcName:\"norm1\"});exports.sup=compile({args:[\"array\"],pre:{body:\"this_h=-Infinity\",args:[],thisVars:[\"this_h\"],localVars:[]},body:{body:\"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_\",args:[{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2}],thisVars:[\"this_h\"],localVars:[]},post:{body:\"return this_h\",args:[],thisVars:[\"this_h\"],localVars:[]}});exports.inf=compile({args:[\"array\"],pre:{body:\"this_h=Infinity\",args:[],thisVars:[\"this_h\"],localVars:[]},body:{body:\"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_\",args:[{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2}],thisVars:[\"this_h\"],localVars:[]},post:{body:\"return this_h\",args:[],thisVars:[\"this_h\"],localVars:[]}});exports.argmin=compile({args:[\"index\",\"array\",\"shape\"],pre:{body:\"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}\",args:[{name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},{name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},{name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}],thisVars:[\"this_i\",\"this_v\"],localVars:[]},body:{body:\"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",args:[{name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},{name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],thisVars:[\"this_i\",\"this_v\"],localVars:[\"_inline_1_k\"]},post:{body:\"{return this_i}\",args:[],thisVars:[\"this_i\"],localVars:[]}});exports.argmax=compile({args:[\"index\",\"array\",\"shape\"],pre:{body:\"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}\",args:[{name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},{name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},{name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}],thisVars:[\"this_i\",\"this_v\"],localVars:[]},body:{body:\"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",args:[{name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},{name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],thisVars:[\"this_i\",\"this_v\"],localVars:[\"_inline_1_k\"]},post:{body:\"{return this_i}\",args:[],thisVars:[\"this_i\"],localVars:[]}});exports.random=makeOp({args:[\"array\"],pre:{args:[],body:\"this_f=Math.random\",thisVars:[\"this_f\"]},body:{args:[\"a\"],body:\"a=this_f()\",thisVars:[\"this_f\"]},funcName:\"random\"});exports.assign=makeOp({args:[\"array\",\"array\"],body:{args:[\"a\",\"b\"],body:\"a=b\"},funcName:\"assign\"});exports.assigns=makeOp({args:[\"array\",\"scalar\"],body:{args:[\"a\",\"b\"],body:\"a=b\"},funcName:\"assigns\"});exports.equals=compile({args:[\"array\",\"array\"],pre:EmptyProc,body:{args:[{name:\"x\",lvalue:false,rvalue:true,count:1},{name:\"y\",lvalue:false,rvalue:true,count:1}],body:\"if(x!==y){return false}\",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:\"return true\"},funcName:\"equals\"});},{\"cwise-compiler\":67}],190:[function(_dereq_,module,exports){\"use strict\";var pool=_dereq_(\"typedarray-pool\");var INSERTION_SORT_THRESHOLD=32;function getMallocFree(dtype){switch(dtype){case\"uint8\":return[pool.mallocUint8,pool.freeUint8];case\"uint16\":return[pool.mallocUint16,pool.freeUint16];case\"uint32\":return[pool.mallocUint32,pool.freeUint32];case\"int8\":return[pool.mallocInt8,pool.freeInt8];case\"int16\":return[pool.mallocInt16,pool.freeInt16];case\"int32\":return[pool.mallocInt32,pool.freeInt32];case\"float32\":return[pool.mallocFloat,pool.freeFloat];case\"float64\":return[pool.mallocDouble,pool.freeDouble];default:return null;}}function shapeArgs(dimension){var args=[];for(var i=0;i<dimension;++i){args.push(\"s\"+i);}for(var i=0;i<dimension;++i){args.push(\"n\"+i);}for(var i=1;i<dimension;++i){args.push(\"d\"+i);}for(var i=1;i<dimension;++i){args.push(\"e\"+i);}for(var i=1;i<dimension;++i){args.push(\"f\"+i);}return args;}function createInsertionSort(order,dtype){var code=[\"'use strict'\"];var funcName=[\"ndarrayInsertionSort\",order.join(\"d\"),dtype].join(\"\");var funcArgs=[\"left\",\"right\",\"data\",\"offset\"].concat(shapeArgs(order.length));var allocator=getMallocFree(dtype);var vars=[\"i,j,cptr,ptr=left*s0+offset\"];if(order.length>1){var scratch_shape=[];for(var i=1;i<order.length;++i){vars.push(\"i\"+i);scratch_shape.push(\"n\"+i);}if(allocator){vars.push(\"scratch=malloc(\"+scratch_shape.join(\"*\")+\")\");}else{vars.push(\"scratch=new Array(\"+scratch_shape.join(\"*\")+\")\");}vars.push(\"dptr\",\"sptr\",\"a\",\"b\");}else{vars.push(\"scratch\");}function dataRead(ptr){if(dtype===\"generic\"){return[\"data.get(\",ptr,\")\"].join(\"\");}return[\"data[\",ptr,\"]\"].join(\"\");}function dataWrite(ptr,v){if(dtype===\"generic\"){return[\"data.set(\",ptr,\",\",v,\")\"].join(\"\");}return[\"data[\",ptr,\"]=\",v].join(\"\");}//Create function header\ncode.push([\"function \",funcName,\"(\",funcArgs.join(\",\"),\"){var \",vars.join(\",\")].join(\"\"),\"for(i=left+1;i<=right;++i){\",\"j=i;ptr+=s0\",\"cptr=ptr\");if(order.length>1){//Copy data into scratch\ncode.push(\"dptr=0;sptr=ptr\");for(var i=order.length-1;i>=0;--i){var j=order[i];if(j===0){continue;}code.push([\"for(i\",j,\"=0;i\",j,\"<n\",j,\";++i\",j,\"){\"].join(\"\"));}code.push(\"scratch[dptr++]=\",dataRead(\"sptr\"));for(var i=0;i<order.length;++i){var j=order[i];if(j===0){continue;}code.push(\"sptr+=d\"+j,\"}\");}//Compare items in outer loop\ncode.push(\"__g:while(j--\x3eleft){\",\"dptr=0\",\"sptr=cptr-s0\");for(var i=1;i<order.length;++i){if(i===1){code.push(\"__l:\");}code.push([\"for(i\",i,\"=0;i\",i,\"<n\",i,\";++i\",i,\"){\"].join(\"\"));}code.push([\"a=\",dataRead(\"sptr\"),\"\\nb=scratch[dptr]\\nif(a<b){break __g}\\nif(a>b){break __l}\"].join(\"\"));for(var i=order.length-1;i>=1;--i){code.push(\"sptr+=e\"+i,\"dptr+=f\"+i,\"}\");}//Copy data back\ncode.push(\"dptr=cptr;sptr=cptr-s0\");for(var i=order.length-1;i>=0;--i){var j=order[i];if(j===0){continue;}code.push([\"for(i\",j,\"=0;i\",j,\"<n\",j,\";++i\",j,\"){\"].join(\"\"));}code.push(dataWrite(\"dptr\",dataRead(\"sptr\")));for(var i=0;i<order.length;++i){var j=order[i];if(j===0){continue;}code.push([\"dptr+=d\",j,\";sptr+=d\",j].join(\"\"),\"}\");}//Close while loop\ncode.push(\"cptr-=s0\\n}\");//Copy scratch into cptr\ncode.push(\"dptr=cptr;sptr=0\");for(var i=order.length-1;i>=0;--i){var j=order[i];if(j===0){continue;}code.push([\"for(i\",j,\"=0;i\",j,\"<n\",j,\";++i\",j,\"){\"].join(\"\"));}code.push(dataWrite(\"dptr\",\"scratch[sptr++]\"));for(var i=0;i<order.length;++i){var j=order[i];if(j===0){continue;}code.push(\"dptr+=d\"+j,\"}\");}}else{code.push(\"scratch=\"+dataRead(\"ptr\"),\"while((j--\x3eleft)&&(\"+dataRead(\"cptr-s0\")+\">scratch)){\",dataWrite(\"cptr\",dataRead(\"cptr-s0\")),\"cptr-=s0\",\"}\",dataWrite(\"cptr\",\"scratch\"));}//Close outer loop body\ncode.push(\"}\");if(order.length>1&&allocator){code.push(\"free(scratch)\");}code.push(\"} return \"+funcName);//Compile and link function\nif(allocator){var result=new Function(\"malloc\",\"free\",code.join(\"\\n\"));return result(allocator[0],allocator[1]);}else{var result=new Function(code.join(\"\\n\"));return result();}}function createQuickSort(order,dtype,insertionSort){var code=[\"'use strict'\"];var funcName=[\"ndarrayQuickSort\",order.join(\"d\"),dtype].join(\"\");var funcArgs=[\"left\",\"right\",\"data\",\"offset\"].concat(shapeArgs(order.length));var allocator=getMallocFree(dtype);var labelCounter=0;code.push([\"function \",funcName,\"(\",funcArgs.join(\",\"),\"){\"].join(\"\"));var vars=[\"sixth=((right-left+1)/6)|0\",\"index1=left+sixth\",\"index5=right-sixth\",\"index3=(left+right)>>1\",\"index2=index3-sixth\",\"index4=index3+sixth\",\"el1=index1\",\"el2=index2\",\"el3=index3\",\"el4=index4\",\"el5=index5\",\"less=left+1\",\"great=right-1\",\"pivots_are_equal=true\",\"tmp\",\"tmp0\",\"x\",\"y\",\"z\",\"k\",\"ptr0\",\"ptr1\",\"ptr2\",\"comp_pivot1=0\",\"comp_pivot2=0\",\"comp=0\"];if(order.length>1){var ele_size=[];for(var i=1;i<order.length;++i){ele_size.push(\"n\"+i);vars.push(\"i\"+i);}for(var i=0;i<8;++i){vars.push(\"b_ptr\"+i);}vars.push(\"ptr3\",\"ptr4\",\"ptr5\",\"ptr6\",\"ptr7\",\"pivot_ptr\",\"ptr_shift\",\"elementSize=\"+ele_size.join(\"*\"));if(allocator){vars.push(\"pivot1=malloc(elementSize)\",\"pivot2=malloc(elementSize)\");}else{vars.push(\"pivot1=new Array(elementSize),pivot2=new Array(elementSize)\");}}else{vars.push(\"pivot1\",\"pivot2\");}//Initialize local variables\ncode.push(\"var \"+vars.join(\",\"));function toPointer(v){return[\"(offset+\",v,\"*s0)\"].join(\"\");}function dataRead(ptr){if(dtype===\"generic\"){return[\"data.get(\",ptr,\")\"].join(\"\");}return[\"data[\",ptr,\"]\"].join(\"\");}function dataWrite(ptr,v){if(dtype===\"generic\"){return[\"data.set(\",ptr,\",\",v,\")\"].join(\"\");}return[\"data[\",ptr,\"]=\",v].join(\"\");}function cacheLoop(ptrs,usePivot,body){if(ptrs.length===1){code.push(\"ptr0=\"+toPointer(ptrs[0]));}else{for(var i=0;i<ptrs.length;++i){code.push([\"b_ptr\",i,\"=s0*\",ptrs[i]].join(\"\"));}}if(usePivot){code.push(\"pivot_ptr=0\");}code.push(\"ptr_shift=offset\");for(var i=order.length-1;i>=0;--i){var j=order[i];if(j===0){continue;}code.push([\"for(i\",j,\"=0;i\",j,\"<n\",j,\";++i\",j,\"){\"].join(\"\"));}if(ptrs.length>1){for(var i=0;i<ptrs.length;++i){code.push([\"ptr\",i,\"=b_ptr\",i,\"+ptr_shift\"].join(\"\"));}}code.push(body);if(usePivot){code.push(\"++pivot_ptr\");}for(var i=0;i<order.length;++i){var j=order[i];if(j===0){continue;}if(ptrs.length>1){code.push(\"ptr_shift+=d\"+j);}else{code.push(\"ptr0+=d\"+j);}code.push(\"}\");}}function lexicoLoop(label,ptrs,usePivot,body){if(ptrs.length===1){code.push(\"ptr0=\"+toPointer(ptrs[0]));}else{for(var i=0;i<ptrs.length;++i){code.push([\"b_ptr\",i,\"=s0*\",ptrs[i]].join(\"\"));}code.push(\"ptr_shift=offset\");}if(usePivot){code.push(\"pivot_ptr=0\");}if(label){code.push(label+\":\");}for(var i=1;i<order.length;++i){code.push([\"for(i\",i,\"=0;i\",i,\"<n\",i,\";++i\",i,\"){\"].join(\"\"));}if(ptrs.length>1){for(var i=0;i<ptrs.length;++i){code.push([\"ptr\",i,\"=b_ptr\",i,\"+ptr_shift\"].join(\"\"));}}code.push(body);for(var i=order.length-1;i>=1;--i){if(usePivot){code.push(\"pivot_ptr+=f\"+i);}if(ptrs.length>1){code.push(\"ptr_shift+=e\"+i);}else{code.push(\"ptr0+=e\"+i);}code.push(\"}\");}}function cleanUp(){if(order.length>1&&allocator){code.push(\"free(pivot1)\",\"free(pivot2)\");}}function compareSwap(a_id,b_id){var a=\"el\"+a_id;var b=\"el\"+b_id;if(order.length>1){var lbl=\"__l\"+ ++labelCounter;lexicoLoop(lbl,[a,b],false,[\"comp=\",dataRead(\"ptr0\"),\"-\",dataRead(\"ptr1\"),\"\\n\",\"if(comp>0){tmp0=\",a,\";\",a,\"=\",b,\";\",b,\"=tmp0;break \",lbl,\"}\\n\",\"if(comp<0){break \",lbl,\"}\"].join(\"\"));}else{code.push([\"if(\",dataRead(toPointer(a)),\">\",dataRead(toPointer(b)),\"){tmp0=\",a,\";\",a,\"=\",b,\";\",b,\"=tmp0}\"].join(\"\"));}}compareSwap(1,2);compareSwap(4,5);compareSwap(1,3);compareSwap(2,3);compareSwap(1,4);compareSwap(3,4);compareSwap(2,5);compareSwap(2,3);compareSwap(4,5);if(order.length>1){cacheLoop([\"el1\",\"el2\",\"el3\",\"el4\",\"el5\",\"index1\",\"index3\",\"index5\"],true,[\"pivot1[pivot_ptr]=\",dataRead(\"ptr1\"),\"\\n\",\"pivot2[pivot_ptr]=\",dataRead(\"ptr3\"),\"\\n\",\"pivots_are_equal=pivots_are_equal&&(pivot1[pivot_ptr]===pivot2[pivot_ptr])\\n\",\"x=\",dataRead(\"ptr0\"),\"\\n\",\"y=\",dataRead(\"ptr2\"),\"\\n\",\"z=\",dataRead(\"ptr4\"),\"\\n\",dataWrite(\"ptr5\",\"x\"),\"\\n\",dataWrite(\"ptr6\",\"y\"),\"\\n\",dataWrite(\"ptr7\",\"z\")].join(\"\"));}else{code.push([\"pivot1=\",dataRead(toPointer(\"el2\")),\"\\n\",\"pivot2=\",dataRead(toPointer(\"el4\")),\"\\n\",\"pivots_are_equal=pivot1===pivot2\\n\",\"x=\",dataRead(toPointer(\"el1\")),\"\\n\",\"y=\",dataRead(toPointer(\"el3\")),\"\\n\",\"z=\",dataRead(toPointer(\"el5\")),\"\\n\",dataWrite(toPointer(\"index1\"),\"x\"),\"\\n\",dataWrite(toPointer(\"index3\"),\"y\"),\"\\n\",dataWrite(toPointer(\"index5\"),\"z\")].join(\"\"));}function moveElement(dst,src){if(order.length>1){cacheLoop([dst,src],false,dataWrite(\"ptr0\",dataRead(\"ptr1\")));}else{code.push(dataWrite(toPointer(dst),dataRead(toPointer(src))));}}moveElement(\"index2\",\"left\");moveElement(\"index4\",\"right\");function comparePivot(result,ptr,n){if(order.length>1){var lbl=\"__l\"+ ++labelCounter;lexicoLoop(lbl,[ptr],true,[result,\"=\",dataRead(\"ptr0\"),\"-pivot\",n,\"[pivot_ptr]\\n\",\"if(\",result,\"!==0){break \",lbl,\"}\"].join(\"\"));}else{code.push([result,\"=\",dataRead(toPointer(ptr)),\"-pivot\",n].join(\"\"));}}function swapElements(a,b){if(order.length>1){cacheLoop([a,b],false,[\"tmp=\",dataRead(\"ptr0\"),\"\\n\",dataWrite(\"ptr0\",dataRead(\"ptr1\")),\"\\n\",dataWrite(\"ptr1\",\"tmp\")].join(\"\"));}else{code.push([\"ptr0=\",toPointer(a),\"\\n\",\"ptr1=\",toPointer(b),\"\\n\",\"tmp=\",dataRead(\"ptr0\"),\"\\n\",dataWrite(\"ptr0\",dataRead(\"ptr1\")),\"\\n\",dataWrite(\"ptr1\",\"tmp\")].join(\"\"));}}function tripleSwap(k,less,great){if(order.length>1){cacheLoop([k,less,great],false,[\"tmp=\",dataRead(\"ptr0\"),\"\\n\",dataWrite(\"ptr0\",dataRead(\"ptr1\")),\"\\n\",dataWrite(\"ptr1\",dataRead(\"ptr2\")),\"\\n\",dataWrite(\"ptr2\",\"tmp\")].join(\"\"));code.push(\"++\"+less,\"--\"+great);}else{code.push([\"ptr0=\",toPointer(k),\"\\n\",\"ptr1=\",toPointer(less),\"\\n\",\"ptr2=\",toPointer(great),\"\\n\",\"++\",less,\"\\n\",\"--\",great,\"\\n\",\"tmp=\",dataRead(\"ptr0\"),\"\\n\",dataWrite(\"ptr0\",dataRead(\"ptr1\")),\"\\n\",dataWrite(\"ptr1\",dataRead(\"ptr2\")),\"\\n\",dataWrite(\"ptr2\",\"tmp\")].join(\"\"));}}function swapAndDecrement(k,great){swapElements(k,great);code.push(\"--\"+great);}code.push(\"if(pivots_are_equal){\");//Pivots are equal case\ncode.push(\"for(k=less;k<=great;++k){\");comparePivot(\"comp\",\"k\",1);code.push(\"if(comp===0){continue}\");code.push(\"if(comp<0){\");code.push(\"if(k!==less){\");swapElements(\"k\",\"less\");code.push(\"}\");code.push(\"++less\");code.push(\"}else{\");code.push(\"while(true){\");comparePivot(\"comp\",\"great\",1);code.push(\"if(comp>0){\");code.push(\"great--\");code.push(\"}else if(comp<0){\");tripleSwap(\"k\",\"less\",\"great\");code.push(\"break\");code.push(\"}else{\");swapAndDecrement(\"k\",\"great\");code.push(\"break\");code.push(\"}\");code.push(\"}\");code.push(\"}\");code.push(\"}\");code.push(\"}else{\");//Pivots not equal case\ncode.push(\"for(k=less;k<=great;++k){\");comparePivot(\"comp_pivot1\",\"k\",1);code.push(\"if(comp_pivot1<0){\");code.push(\"if(k!==less){\");swapElements(\"k\",\"less\");code.push(\"}\");code.push(\"++less\");code.push(\"}else{\");comparePivot(\"comp_pivot2\",\"k\",2);code.push(\"if(comp_pivot2>0){\");code.push(\"while(true){\");comparePivot(\"comp\",\"great\",2);code.push(\"if(comp>0){\");code.push(\"if(--great<k){break}\");code.push(\"continue\");code.push(\"}else{\");comparePivot(\"comp\",\"great\",1);code.push(\"if(comp<0){\");tripleSwap(\"k\",\"less\",\"great\");code.push(\"}else{\");swapAndDecrement(\"k\",\"great\");code.push(\"}\");code.push(\"break\");code.push(\"}\");code.push(\"}\");code.push(\"}\");code.push(\"}\");code.push(\"}\");code.push(\"}\");//Move pivots to correct place\nfunction storePivot(mem_dest,pivot_dest,pivot){if(order.length>1){cacheLoop([mem_dest,pivot_dest],true,[dataWrite(\"ptr0\",dataRead(\"ptr1\")),\"\\n\",dataWrite(\"ptr1\",[\"pivot\",pivot,\"[pivot_ptr]\"].join(\"\"))].join(\"\"));}else{code.push(dataWrite(toPointer(mem_dest),dataRead(toPointer(pivot_dest))),dataWrite(toPointer(pivot_dest),\"pivot\"+pivot));}}storePivot(\"left\",\"(less-1)\",1);storePivot(\"right\",\"(great+1)\",2);//Recursive sort call\nfunction doSort(left,right){code.push([\"if((\",right,\"-\",left,\")<=\",INSERTION_SORT_THRESHOLD,\"){\\n\",\"insertionSort(\",left,\",\",right,\",data,offset,\",shapeArgs(order.length).join(\",\"),\")\\n\",\"}else{\\n\",funcName,\"(\",left,\",\",right,\",data,offset,\",shapeArgs(order.length).join(\",\"),\")\\n\",\"}\"].join(\"\"));}doSort(\"left\",\"(less-2)\");doSort(\"(great+2)\",\"right\");//If pivots are equal, then early out\ncode.push(\"if(pivots_are_equal){\");cleanUp();code.push(\"return\");code.push(\"}\");function walkPointer(ptr,pivot,body){if(order.length>1){code.push([\"__l\",++labelCounter,\":while(true){\"].join(\"\"));cacheLoop([ptr],true,[\"if(\",dataRead(\"ptr0\"),\"!==pivot\",pivot,\"[pivot_ptr]){break __l\",labelCounter,\"}\"].join(\"\"));code.push(body,\"}\");}else{code.push([\"while(\",dataRead(toPointer(ptr)),\"===pivot\",pivot,\"){\",body,\"}\"].join(\"\"));}}//Check bounds\ncode.push(\"if(less<index1&&great>index5){\");walkPointer(\"less\",1,\"++less\");walkPointer(\"great\",2,\"--great\");code.push(\"for(k=less;k<=great;++k){\");comparePivot(\"comp_pivot1\",\"k\",1);code.push(\"if(comp_pivot1===0){\");code.push(\"if(k!==less){\");swapElements(\"k\",\"less\");code.push(\"}\");code.push(\"++less\");code.push(\"}else{\");comparePivot(\"comp_pivot2\",\"k\",2);code.push(\"if(comp_pivot2===0){\");code.push(\"while(true){\");comparePivot(\"comp\",\"great\",2);code.push(\"if(comp===0){\");code.push(\"if(--great<k){break}\");code.push(\"continue\");code.push(\"}else{\");comparePivot(\"comp\",\"great\",1);code.push(\"if(comp<0){\");tripleSwap(\"k\",\"less\",\"great\");code.push(\"}else{\");swapAndDecrement(\"k\",\"great\");code.push(\"}\");code.push(\"break\");code.push(\"}\");code.push(\"}\");code.push(\"}\");code.push(\"}\");code.push(\"}\");code.push(\"}\");//Clean up and do a final sorting pass\ncleanUp();doSort(\"less\",\"great\");//Close off main loop\ncode.push(\"}return \"+funcName);//Compile and link\nif(order.length>1&&allocator){var compiled=new Function(\"insertionSort\",\"malloc\",\"free\",code.join(\"\\n\"));return compiled(insertionSort,allocator[0],allocator[1]);}var compiled=new Function(\"insertionSort\",code.join(\"\\n\"));return compiled(insertionSort);}function compileSort(order,dtype){var code=[\"'use strict'\"];var funcName=[\"ndarraySortWrapper\",order.join(\"d\"),dtype].join(\"\");var funcArgs=[\"array\"];code.push([\"function \",funcName,\"(\",funcArgs.join(\",\"),\"){\"].join(\"\"));//Unpack local variables from array\nvar vars=[\"data=array.data,offset=array.offset|0,shape=array.shape,stride=array.stride\"];for(var i=0;i<order.length;++i){vars.push([\"s\",i,\"=stride[\",i,\"]|0,n\",i,\"=shape[\",i,\"]|0\"].join(\"\"));}var scratch_stride=new Array(order.length);var nprod=[];for(var i=0;i<order.length;++i){var k=order[i];if(k===0){continue;}if(nprod.length===0){scratch_stride[k]=\"1\";}else{scratch_stride[k]=nprod.join(\"*\");}nprod.push(\"n\"+k);}var p=-1,q=-1;for(var i=0;i<order.length;++i){var j=order[i];if(j!==0){if(p>0){vars.push([\"d\",j,\"=s\",j,\"-d\",p,\"*n\",p].join(\"\"));}else{vars.push([\"d\",j,\"=s\",j].join(\"\"));}p=j;}var k=order.length-1-i;if(k!==0){if(q>0){vars.push([\"e\",k,\"=s\",k,\"-e\",q,\"*n\",q,\",f\",k,\"=\",scratch_stride[k],\"-f\",q,\"*n\",q].join(\"\"));}else{vars.push([\"e\",k,\"=s\",k,\",f\",k,\"=\",scratch_stride[k]].join(\"\"));}q=k;}}//Declare local variables\ncode.push(\"var \"+vars.join(\",\"));//Create arguments for subroutine\nvar sortArgs=[\"0\",\"n0-1\",\"data\",\"offset\"].concat(shapeArgs(order.length));//Call main sorting routine\ncode.push([\"if(n0<=\",INSERTION_SORT_THRESHOLD,\"){\",\"insertionSort(\",sortArgs.join(\",\"),\")}else{\",\"quickSort(\",sortArgs.join(\",\"),\")}\"].join(\"\"));//Return\ncode.push(\"}return \"+funcName);//Link everything together\nvar result=new Function(\"insertionSort\",\"quickSort\",code.join(\"\\n\"));var insertionSort=createInsertionSort(order,dtype);var quickSort=createQuickSort(order,dtype,insertionSort);return result(insertionSort,quickSort);}module.exports=compileSort;},{\"typedarray-pool\":270}],191:[function(_dereq_,module,exports){\"use strict\";var compile=_dereq_(\"./lib/compile_sort.js\");var CACHE={};function sort(array){var order=array.order;var dtype=array.dtype;var typeSig=[order,dtype];var typeName=typeSig.join(\":\");var compiled=CACHE[typeName];if(!compiled){CACHE[typeName]=compiled=compile(order,dtype);}compiled(array);return array;}module.exports=sort;},{\"./lib/compile_sort.js\":190}],192:[function(_dereq_,module,exports){var iota=_dereq_(\"iota-array\");var isBuffer=_dereq_(\"is-buffer\");var hasTypedArrays=typeof Float64Array!==\"undefined\";function compare1st(a,b){return a[0]-b[0];}function order(){var stride=this.stride;var terms=new Array(stride.length);var i;for(i=0;i<terms.length;++i){terms[i]=[Math.abs(stride[i]),i];}terms.sort(compare1st);var result=new Array(terms.length);for(i=0;i<result.length;++i){result[i]=terms[i][1];}return result;}function compileConstructor(dtype,dimension){var className=[\"View\",dimension,\"d\",dtype].join(\"\");if(dimension<0){className=\"View_Nil\"+dtype;}var useGetters=dtype===\"generic\";if(dimension===-1){//Special case for trivial arrays\nvar code=\"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\";var procedure=new Function(code);return procedure();}else if(dimension===0){//Special case for 0d arrays\nvar code=\"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters?\"this.data.get(this.offset)\":\"this.data[this.offset]\")+\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters?\"this.data.set(this.offset,v)\":\"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\";var procedure=new Function(\"TrivialArray\",code);return procedure(CACHED_CONSTRUCTORS[dtype][0]);}var code=[\"'use strict'\"];//Create constructor for view\nvar indices=iota(dimension);var args=indices.map(function(i){return\"i\"+i;});var index_str=\"this.offset+\"+indices.map(function(i){return\"this.stride[\"+i+\"]*i\"+i;}).join(\"+\");var shapeArg=indices.map(function(i){return\"b\"+i;}).join(\",\");var strideArg=indices.map(function(i){return\"c\"+i;}).join(\",\");code.push(\"function \"+className+\"(a,\"+shapeArg+\",\"+strideArg+\",d){this.data=a\",\"this.shape=[\"+shapeArg+\"]\",\"this.stride=[\"+strideArg+\"]\",\"this.offset=d|0}\",\"var proto=\"+className+\".prototype\",\"proto.dtype='\"+dtype+\"'\",\"proto.dimension=\"+dimension);//view.size:\ncode.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i){return\"this.shape[\"+i+\"]\";}).join(\"*\"),\"}})\");//view.order:\nif(dimension===1){code.push(\"proto.order=[0]\");}else{code.push(\"Object.defineProperty(proto,'order',{get:\");if(dimension<4){code.push(\"function \"+className+\"_order(){\");if(dimension===2){code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\");}else if(dimension===3){code.push(\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\");}}else{code.push(\"ORDER})\");}}//view.set(i0, ..., v):\ncode.push(\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\");if(useGetters){code.push(\"return this.data.set(\"+index_str+\",v)}\");}else{code.push(\"return this.data[\"+index_str+\"]=v}\");}//view.get(i0, ...):\ncode.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\");if(useGetters){code.push(\"return this.data.get(\"+index_str+\")}\");}else{code.push(\"return this.data[\"+index_str+\"]}\");}//view.index:\ncode.push(\"proto.index=function \"+className+\"_index(\",args.join(),\"){return \"+index_str+\"}\");//view.hi():\ncode.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+indices.map(function(i){return[\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\",i,\"]:i\",i,\"|0\"].join(\"\");}).join(\",\")+\",\"+indices.map(function(i){return\"this.stride[\"+i+\"]\";}).join(\",\")+\",this.offset)}\");//view.lo():\nvar a_vars=indices.map(function(i){return\"a\"+i+\"=this.shape[\"+i+\"]\";});var c_vars=indices.map(function(i){return\"c\"+i+\"=this.stride[\"+i+\"]\";});code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"));for(var i=0;i<dimension;++i){code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\");}code.push(\"return new \"+className+\"(this.data,\"+indices.map(function(i){return\"a\"+i;}).join(\",\")+\",\"+indices.map(function(i){return\"c\"+i;}).join(\",\")+\",b)}\");//view.step():\ncode.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+indices.map(function(i){return\"a\"+i+\"=this.shape[\"+i+\"]\";}).join(\",\")+\",\"+indices.map(function(i){return\"b\"+i+\"=this.stride[\"+i+\"]\";}).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\");for(var i=0;i<dimension;++i){code.push(\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\");}code.push(\"return new \"+className+\"(this.data,\"+indices.map(function(i){return\"a\"+i;}).join(\",\")+\",\"+indices.map(function(i){return\"b\"+i;}).join(\",\")+\",c)}\");//view.transpose():\nvar tShape=new Array(dimension);var tStride=new Array(dimension);for(var i=0;i<dimension;++i){tShape[i]=\"a[i\"+i+\"]\";tStride[i]=\"b[i\"+i+\"]\";}code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+args.map(function(n,idx){return n+\"=(\"+n+\"===undefined?\"+idx+\":\"+n+\"|0)\";}).join(\";\"),\"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\");//view.pick():\ncode.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\");for(var i=0;i<dimension;++i){code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\");}code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\");//Add return statement\ncode.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+indices.map(function(i){return\"shape[\"+i+\"]\";}).join(\",\")+\",\"+indices.map(function(i){return\"stride[\"+i+\"]\";}).join(\",\")+\",offset)}\");//Compile procedure\nvar procedure=new Function(\"CTOR_LIST\",\"ORDER\",code.join(\"\\n\"));return procedure(CACHED_CONSTRUCTORS[dtype],order);}function arrayDType(data){if(isBuffer(data)){return\"buffer\";}if(hasTypedArrays){switch(Object.prototype.toString.call(data)){case\"[object Float64Array]\":return\"float64\";case\"[object Float32Array]\":return\"float32\";case\"[object Int8Array]\":return\"int8\";case\"[object Int16Array]\":return\"int16\";case\"[object Int32Array]\":return\"int32\";case\"[object Uint8Array]\":return\"uint8\";case\"[object Uint16Array]\":return\"uint16\";case\"[object Uint32Array]\":return\"uint32\";case\"[object Uint8ClampedArray]\":return\"uint8_clamped\";}}if(Array.isArray(data)){return\"array\";}return\"generic\";}var CACHED_CONSTRUCTORS={\"float32\":[],\"float64\":[],\"int8\":[],\"int16\":[],\"int32\":[],\"uint8\":[],\"uint16\":[],\"uint32\":[],\"array\":[],\"uint8_clamped\":[],\"buffer\":[],\"generic\":[]};(function(){for(var id in CACHED_CONSTRUCTORS){CACHED_CONSTRUCTORS[id].push(compileConstructor(id,-1));}});function wrappedNDArrayCtor(data,shape,stride,offset){if(data===undefined){var ctor=CACHED_CONSTRUCTORS.array[0];return ctor([]);}else if(typeof data===\"number\"){data=[data];}if(shape===undefined){shape=[data.length];}var d=shape.length;if(stride===undefined){stride=new Array(d);for(var i=d-1,sz=1;i>=0;--i){stride[i]=sz;sz*=shape[i];}}if(offset===undefined){offset=0;for(var i=0;i<d;++i){if(stride[i]<0){offset-=(shape[i]-1)*stride[i];}}}var dtype=arrayDType(data);var ctor_list=CACHED_CONSTRUCTORS[dtype];while(ctor_list.length<=d+1){ctor_list.push(compileConstructor(dtype,ctor_list.length-1));}var ctor=ctor_list[d+1];return ctor(data,shape,stride,offset);}module.exports=wrappedNDArrayCtor;},{\"iota-array\":169,\"is-buffer\":171}],193:[function(_dereq_,module,exports){(function(Buffer){'use strict';module.exports=unpackPNG;var ndarray=_dereq_('ndarray');var parse=_dereq_('pngparse-sync');function decodeB64(str){return new Buffer(str,'base64');}function unpackPNG(w,h,c,str){var pixels=parse(decodeB64(str));return ndarray(pixels.data,[w,h,pixels.channels],[pixels.channels,pixels.channels*w,1],0);}}).call(this,_dereq_(\"buffer\").Buffer);},{\"buffer\":43,\"ndarray\":192,\"pngparse-sync\":205}],194:[function(_dereq_,module,exports){\"use strict\";var doubleBits=_dereq_(\"double-bits\");var SMALLEST_DENORM=Math.pow(2,-1074);var UINT_MAX=-1>>>0;module.exports=nextafter;function nextafter(x,y){if(isNaN(x)||isNaN(y)){return NaN;}if(x===y){return x;}if(x===0){if(y<0){return-SMALLEST_DENORM;}else{return SMALLEST_DENORM;}}var hi=doubleBits.hi(x);var lo=doubleBits.lo(x);if(y>x===x>0){if(lo===UINT_MAX){hi+=1;lo=0;}else{lo+=1;}}else{if(lo===0){lo=UINT_MAX;hi-=1;}else{lo-=1;}}return doubleBits.pack(lo,hi);}},{\"double-bits\":74}],195:[function(_dereq_,module,exports){var DEFAULT_NORMALS_EPSILON=1e-6;var DEFAULT_FACE_EPSILON=1e-6;//Estimate the vertex normals of a mesh\nexports.vertexNormals=function(faces,positions,specifiedEpsilon){var N=positions.length;var normals=new Array(N);var epsilon=specifiedEpsilon===void 0?DEFAULT_NORMALS_EPSILON:specifiedEpsilon;//Initialize normal array\nfor(var i=0;i<N;++i){normals[i]=[0.0,0.0,0.0];}//Walk over all the faces and add per-vertex contribution to normal weights\nfor(var i=0;i<faces.length;++i){var f=faces[i];var p=0;var c=f[f.length-1];var n=f[0];for(var j=0;j<f.length;++j){//Shift indices back\np=c;c=n;n=f[(j+1)%f.length];var v0=positions[p];var v1=positions[c];var v2=positions[n];//Compute infineteismal arcs\nvar d01=new Array(3);var m01=0.0;var d21=new Array(3);var m21=0.0;for(var k=0;k<3;++k){d01[k]=v0[k]-v1[k];m01+=d01[k]*d01[k];d21[k]=v2[k]-v1[k];m21+=d21[k]*d21[k];}//Accumulate values in normal\nif(m01*m21>epsilon){var norm=normals[c];var w=1.0/Math.sqrt(m01*m21);for(var k=0;k<3;++k){var u=(k+1)%3;var v=(k+2)%3;norm[k]+=w*(d21[u]*d01[v]-d21[v]*d01[u]);}}}}//Scale all normals to unit length\nfor(var i=0;i<N;++i){var norm=normals[i];var m=0.0;for(var k=0;k<3;++k){m+=norm[k]*norm[k];}if(m>epsilon){var w=1.0/Math.sqrt(m);for(var k=0;k<3;++k){norm[k]*=w;}}else{for(var k=0;k<3;++k){norm[k]=0.0;}}}//Return the resulting set of patches\nreturn normals;};//Compute face normals of a mesh\nexports.faceNormals=function(faces,positions,specifiedEpsilon){var N=faces.length;var normals=new Array(N);var epsilon=specifiedEpsilon===void 0?DEFAULT_FACE_EPSILON:specifiedEpsilon;for(var i=0;i<N;++i){var f=faces[i];var pos=new Array(3);for(var j=0;j<3;++j){pos[j]=positions[f[j]];}var d01=new Array(3);var d21=new Array(3);for(var j=0;j<3;++j){d01[j]=pos[1][j]-pos[0][j];d21[j]=pos[2][j]-pos[0][j];}var n=new Array(3);var l=0.0;for(var j=0;j<3;++j){var u=(j+1)%3;var v=(j+2)%3;n[j]=d01[u]*d21[v]-d01[v]*d21[u];l+=n[j]*n[j];}if(l>epsilon){l=1.0/Math.sqrt(l);}else{l=0.0;}for(var j=0;j<3;++j){n[j]*=l;}normals[i]=n;}return normals;};},{}],196:[function(_dereq_,module,exports){'use strict';module.exports=quatFromFrame;function quatFromFrame(out,rx,ry,rz,ux,uy,uz,fx,fy,fz){var tr=rx+uy+fz;if(l>0){var l=Math.sqrt(tr+1.0);out[0]=0.5*(uz-fy)/l;out[1]=0.5*(fx-rz)/l;out[2]=0.5*(ry-uy)/l;out[3]=0.5*l;}else{var tf=Math.max(rx,uy,fz);var l=Math.sqrt(2*tf-tr+1.0);if(rx>=tf){//x y z  order\nout[0]=0.5*l;out[1]=0.5*(ux+ry)/l;out[2]=0.5*(fx+rz)/l;out[3]=0.5*(uz-fy)/l;}else if(uy>=tf){//y z x  order\nout[0]=0.5*(ry+ux)/l;out[1]=0.5*l;out[2]=0.5*(fy+uz)/l;out[3]=0.5*(fx-rz)/l;}else{//z x y  order\nout[0]=0.5*(rz+fx)/l;out[1]=0.5*(uz+fy)/l;out[2]=0.5*l;out[3]=0.5*(ry-ux)/l;}}return out;}},{}],197:[function(_dereq_,module,exports){'use strict';module.exports=createOrbitController;var filterVector=_dereq_('filtered-vector');var lookAt=_dereq_('gl-mat4/lookAt');var mat4FromQuat=_dereq_('gl-mat4/fromQuat');var invert44=_dereq_('gl-mat4/invert');var quatFromFrame=_dereq_('./lib/quatFromFrame');function len3(x,y,z){return Math.sqrt(Math.pow(x,2)+Math.pow(y,2)+Math.pow(z,2));}function len4(w,x,y,z){return Math.sqrt(Math.pow(w,2)+Math.pow(x,2)+Math.pow(y,2)+Math.pow(z,2));}function normalize4(out,a){var ax=a[0];var ay=a[1];var az=a[2];var aw=a[3];var al=len4(ax,ay,az,aw);if(al>1e-6){out[0]=ax/al;out[1]=ay/al;out[2]=az/al;out[3]=aw/al;}else{out[0]=out[1]=out[2]=0.0;out[3]=1.0;}}function OrbitCameraController(initQuat,initCenter,initRadius){this.radius=filterVector([initRadius]);this.center=filterVector(initCenter);this.rotation=filterVector(initQuat);this.computedRadius=this.radius.curve(0);this.computedCenter=this.center.curve(0);this.computedRotation=this.rotation.curve(0);this.computedUp=[0.1,0,0];this.computedEye=[0.1,0,0];this.computedMatrix=[0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];this.recalcMatrix(0);}var proto=OrbitCameraController.prototype;proto.lastT=function(){return Math.max(this.radius.lastT(),this.center.lastT(),this.rotation.lastT());};proto.recalcMatrix=function(t){this.radius.curve(t);this.center.curve(t);this.rotation.curve(t);var quat=this.computedRotation;normalize4(quat,quat);var mat=this.computedMatrix;mat4FromQuat(mat,quat);var center=this.computedCenter;var eye=this.computedEye;var up=this.computedUp;var radius=Math.exp(this.computedRadius[0]);eye[0]=center[0]+radius*mat[2];eye[1]=center[1]+radius*mat[6];eye[2]=center[2]+radius*mat[10];up[0]=mat[1];up[1]=mat[5];up[2]=mat[9];for(var i=0;i<3;++i){var rr=0.0;for(var j=0;j<3;++j){rr+=mat[i+4*j]*eye[j];}mat[12+i]=-rr;}};proto.getMatrix=function(t,result){this.recalcMatrix(t);var m=this.computedMatrix;if(result){for(var i=0;i<16;++i){result[i]=m[i];}return result;}return m;};proto.idle=function(t){this.center.idle(t);this.radius.idle(t);this.rotation.idle(t);};proto.flush=function(t){this.center.flush(t);this.radius.flush(t);this.rotation.flush(t);};proto.pan=function(t,dx,dy,dz){dx=dx||0.0;dy=dy||0.0;dz=dz||0.0;this.recalcMatrix(t);var mat=this.computedMatrix;var ux=mat[1];var uy=mat[5];var uz=mat[9];var ul=len3(ux,uy,uz);ux/=ul;uy/=ul;uz/=ul;var rx=mat[0];var ry=mat[4];var rz=mat[8];var ru=rx*ux+ry*uy+rz*uz;rx-=ux*ru;ry-=uy*ru;rz-=uz*ru;var rl=len3(rx,ry,rz);rx/=rl;ry/=rl;rz/=rl;var fx=mat[2];var fy=mat[6];var fz=mat[10];var fu=fx*ux+fy*uy+fz*uz;var fr=fx*rx+fy*ry+fz*rz;fx-=fu*ux+fr*rx;fy-=fu*uy+fr*ry;fz-=fu*uz+fr*rz;var fl=len3(fx,fy,fz);fx/=fl;fy/=fl;fz/=fl;var vx=rx*dx+ux*dy;var vy=ry*dx+uy*dy;var vz=rz*dx+uz*dy;this.center.move(t,vx,vy,vz);//Update z-component of radius\nvar radius=Math.exp(this.computedRadius[0]);radius=Math.max(1e-4,radius+dz);this.radius.set(t,Math.log(radius));};proto.rotate=function(t,dx,dy,dz){this.recalcMatrix(t);dx=dx||0.0;dy=dy||0.0;var mat=this.computedMatrix;var rx=mat[0];var ry=mat[4];var rz=mat[8];var ux=mat[1];var uy=mat[5];var uz=mat[9];var fx=mat[2];var fy=mat[6];var fz=mat[10];var qx=dx*rx+dy*ux;var qy=dx*ry+dy*uy;var qz=dx*rz+dy*uz;var bx=-(fy*qz-fz*qy);var by=-(fz*qx-fx*qz);var bz=-(fx*qy-fy*qx);var bw=Math.sqrt(Math.max(0.0,1.0-Math.pow(bx,2)-Math.pow(by,2)-Math.pow(bz,2)));var bl=len4(bx,by,bz,bw);if(bl>1e-6){bx/=bl;by/=bl;bz/=bl;bw/=bl;}else{bx=by=bz=0.0;bw=1.0;}var rotation=this.computedRotation;var ax=rotation[0];var ay=rotation[1];var az=rotation[2];var aw=rotation[3];var cx=ax*bw+aw*bx+ay*bz-az*by;var cy=ay*bw+aw*by+az*bx-ax*bz;var cz=az*bw+aw*bz+ax*by-ay*bx;var cw=aw*bw-ax*bx-ay*by-az*bz;//Apply roll\nif(dz){bx=fx;by=fy;bz=fz;var s=Math.sin(dz)/len3(bx,by,bz);bx*=s;by*=s;bz*=s;bw=Math.cos(dx);cx=cx*bw+cw*bx+cy*bz-cz*by;cy=cy*bw+cw*by+cz*bx-cx*bz;cz=cz*bw+cw*bz+cx*by-cy*bx;cw=cw*bw-cx*bx-cy*by-cz*bz;}var cl=len4(cx,cy,cz,cw);if(cl>1e-6){cx/=cl;cy/=cl;cz/=cl;cw/=cl;}else{cx=cy=cz=0.0;cw=1.0;}this.rotation.set(t,cx,cy,cz,cw);};proto.lookAt=function(t,eye,center,up){this.recalcMatrix(t);center=center||this.computedCenter;eye=eye||this.computedEye;up=up||this.computedUp;var mat=this.computedMatrix;lookAt(mat,eye,center,up);var rotation=this.computedRotation;quatFromFrame(rotation,mat[0],mat[1],mat[2],mat[4],mat[5],mat[6],mat[8],mat[9],mat[10]);normalize4(rotation,rotation);this.rotation.set(t,rotation[0],rotation[1],rotation[2],rotation[3]);var fl=0.0;for(var i=0;i<3;++i){fl+=Math.pow(center[i]-eye[i],2);}this.radius.set(t,0.5*Math.log(Math.max(fl,1e-6)));this.center.set(t,center[0],center[1],center[2]);};proto.translate=function(t,dx,dy,dz){this.center.move(t,dx||0.0,dy||0.0,dz||0.0);};proto.setMatrix=function(t,matrix){var rotation=this.computedRotation;quatFromFrame(rotation,matrix[0],matrix[1],matrix[2],matrix[4],matrix[5],matrix[6],matrix[8],matrix[9],matrix[10]);normalize4(rotation,rotation);this.rotation.set(t,rotation[0],rotation[1],rotation[2],rotation[3]);var mat=this.computedMatrix;invert44(mat,matrix);var w=mat[15];if(Math.abs(w)>1e-6){var cx=mat[12]/w;var cy=mat[13]/w;var cz=mat[14]/w;this.recalcMatrix(t);var r=Math.exp(this.computedRadius[0]);this.center.set(t,cx-mat[2]*r,cy-mat[6]*r,cz-mat[10]*r);this.radius.idle(t);}else{this.center.idle(t);this.radius.idle(t);}};proto.setDistance=function(t,d){if(d>0){this.radius.set(t,Math.log(d));}};proto.setDistanceLimits=function(lo,hi){if(lo>0){lo=Math.log(lo);}else{lo=-Infinity;}if(hi>0){hi=Math.log(hi);}else{hi=Infinity;}hi=Math.max(hi,lo);this.radius.bounds[0][0]=lo;this.radius.bounds[1][0]=hi;};proto.getDistanceLimits=function(out){var bounds=this.radius.bounds;if(out){out[0]=Math.exp(bounds[0][0]);out[1]=Math.exp(bounds[1][0]);return out;}return[Math.exp(bounds[0][0]),Math.exp(bounds[1][0])];};proto.toJSON=function(){this.recalcMatrix(this.lastT());return{center:this.computedCenter.slice(),rotation:this.computedRotation.slice(),distance:Math.log(this.computedRadius[0]),zoomMin:this.radius.bounds[0][0],zoomMax:this.radius.bounds[1][0]};};proto.fromJSON=function(options){var t=this.lastT();var c=options.center;if(c){this.center.set(t,c[0],c[1],c[2]);}var r=options.rotation;if(r){this.rotation.set(t,r[0],r[1],r[2],r[3]);}var d=options.distance;if(d&&d>0){this.radius.set(t,Math.log(d));}this.setDistanceLimits(options.zoomMin,options.zoomMax);};function createOrbitController(options){options=options||{};var center=options.center||[0,0,0];var rotation=options.rotation||[0,0,0,1];var radius=options.radius||1.0;center=[].slice.call(center,0,3);rotation=[].slice.call(rotation,0,4);normalize4(rotation,rotation);var result=new OrbitCameraController(rotation,center,Math.log(radius));result.setDistanceLimits(options.zoomMin,options.zoomMax);if('eye'in options||'up'in options){result.lookAt(0,options.eye,options.center,options.up);}return result;}},{\"./lib/quatFromFrame\":196,\"filtered-vector\":81,\"gl-mat4/fromQuat\":108,\"gl-mat4/invert\":111,\"gl-mat4/lookAt\":112}],198:[function(_dereq_,module,exports){/*!\n * pad-left <https://github.com/jonschlinkert/pad-left>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */'use strict';var repeat=_dereq_('repeat-string');module.exports=function padLeft(str,num,ch){ch=typeof ch!=='undefined'?ch+'':' ';return repeat(ch,num)+str;};},{\"repeat-string\":238}],199:[function(_dereq_,module,exports){module.exports=function parseUnit(str,out){if(!out)out=[0,''];str=String(str);var num=parseFloat(str,10);out[0]=num;out[1]=str.match(/[\\d.\\-\\+]*\\s*(.*)/)[1]||'';return out;};},{}],200:[function(_dereq_,module,exports){\"use strict\";module.exports=permutationSign;var BRUTE_FORCE_CUTOFF=32;var pool=_dereq_(\"typedarray-pool\");function permutationSign(p){var n=p.length;if(n<BRUTE_FORCE_CUTOFF){//Use quadratic algorithm for small n\nvar sgn=1;for(var i=0;i<n;++i){for(var j=0;j<i;++j){if(p[i]<p[j]){sgn=-sgn;}else if(p[i]===p[j]){return 0;}}}return sgn;}else{//Otherwise use linear time algorithm\nvar visited=pool.mallocUint8(n);for(var i=0;i<n;++i){visited[i]=0;}var sgn=1;for(var i=0;i<n;++i){if(!visited[i]){var count=1;visited[i]=1;for(var j=p[i];j!==i;j=p[j]){if(visited[j]){pool.freeUint8(visited);return 0;}count+=1;visited[j]=1;}if(!(count&1)){sgn=-sgn;}}}pool.freeUint8(visited);return sgn;}}},{\"typedarray-pool\":270}],201:[function(_dereq_,module,exports){\"use strict\";var pool=_dereq_(\"typedarray-pool\");var inverse=_dereq_(\"invert-permutation\");function rank(permutation){var n=permutation.length;switch(n){case 0:case 1:return 0;case 2:return permutation[1];default:break;}var p=pool.mallocUint32(n);var pinv=pool.mallocUint32(n);var r=0,s,t,i;inverse(permutation,pinv);for(i=0;i<n;++i){p[i]=permutation[i];}for(i=n-1;i>0;--i){t=pinv[i];s=p[i];p[i]=p[t];p[t]=s;pinv[i]=pinv[s];pinv[s]=t;r=(r+s)*i;}pool.freeUint32(pinv);pool.freeUint32(p);return r;}function unrank(n,r,p){switch(n){case 0:if(p){return p;}return[];case 1:if(p){p[0]=0;return p;}else{return[0];}case 2:if(p){if(r){p[0]=0;p[1]=1;}else{p[0]=1;p[1]=0;}return p;}else{return r?[0,1]:[1,0];}default:break;}p=p||new Array(n);var s,t,i,nf=1;p[0]=0;for(i=1;i<n;++i){p[i]=i;nf=nf*i|0;}for(i=n-1;i>0;--i){s=r/nf|0;r=r-s*nf|0;nf=nf/i|0;t=p[i]|0;p[i]=p[s]|0;p[s]=t|0;}return p;}exports.rank=rank;exports.unrank=unrank;},{\"invert-permutation\":168,\"typedarray-pool\":270}],202:[function(_dereq_,module,exports){\"use strict\";module.exports=planarDual;var compareAngle=_dereq_(\"compare-angle\");function planarDual(cells,positions){var numVertices=positions.length|0;var numEdges=cells.length;var adj=[new Array(numVertices),new Array(numVertices)];for(var i=0;i<numVertices;++i){adj[0][i]=[];adj[1][i]=[];}for(var i=0;i<numEdges;++i){var c=cells[i];adj[0][c[0]].push(c);adj[1][c[1]].push(c);}var cycles=[];//Add isolated vertices as trivial case\nfor(var i=0;i<numVertices;++i){if(adj[0][i].length+adj[1][i].length===0){cycles.push([i]);}}//Remove a half edge\nfunction cut(c,i){var a=adj[i][c[i]];a.splice(a.indexOf(c),1);}//Find next vertex and cut edge\nfunction next(a,b,noCut){var nextCell,nextVertex,nextDir;for(var i=0;i<2;++i){if(adj[i][b].length>0){nextCell=adj[i][b][0];nextDir=i;break;}}nextVertex=nextCell[nextDir^1];for(var dir=0;dir<2;++dir){var nbhd=adj[dir][b];for(var k=0;k<nbhd.length;++k){var e=nbhd[k];var p=e[dir^1];var cmp=compareAngle(positions[a],positions[b],positions[nextVertex],positions[p]);if(cmp>0){nextCell=e;nextVertex=p;nextDir=dir;}}}if(noCut){return nextVertex;}if(nextCell){cut(nextCell,nextDir);}return nextVertex;}function extractCycle(v,dir){var e0=adj[dir][v][0];var cycle=[v];cut(e0,dir);var u=e0[dir^1];var d0=dir;while(true){while(u!==v){cycle.push(u);u=next(cycle[cycle.length-2],u,false);}if(adj[0][v].length+adj[1][v].length===0){break;}var a=cycle[cycle.length-1];var b=v;var c=cycle[1];var d=next(a,b,true);if(compareAngle(positions[a],positions[b],positions[c],positions[d])<0){break;}cycle.push(v);u=next(a,b);}return cycle;}function shouldGlue(pcycle,ncycle){return ncycle[1]===ncycle[ncycle.length-1];}for(var i=0;i<numVertices;++i){for(var j=0;j<2;++j){var pcycle=[];while(adj[j][i].length>0){var ni=adj[0][i].length;var ncycle=extractCycle(i,j);if(shouldGlue(pcycle,ncycle)){//Glue together trivial cycles\npcycle.push.apply(pcycle,ncycle);}else{if(pcycle.length>0){cycles.push(pcycle);}pcycle=ncycle;}}if(pcycle.length>0){cycles.push(pcycle);}}}//Combine paths and loops together\nreturn cycles;}},{\"compare-angle\":61}],203:[function(_dereq_,module,exports){'use strict';module.exports=trimLeaves;var e2a=_dereq_('edges-to-adjacency-list');function trimLeaves(edges,positions){var adj=e2a(edges,positions.length);var live=new Array(positions.length);var nbhd=new Array(positions.length);var dead=[];for(var i=0;i<positions.length;++i){var count=adj[i].length;nbhd[i]=count;live[i]=true;if(count<=1){dead.push(i);}}while(dead.length>0){var v=dead.pop();live[v]=false;var n=adj[v];for(var i=0;i<n.length;++i){var u=n[i];if(--nbhd[u]===0){dead.push(u);}}}var newIndex=new Array(positions.length);var npositions=[];for(var i=0;i<positions.length;++i){if(live[i]){var v=npositions.length;newIndex[i]=v;npositions.push(positions[i]);}else{newIndex[i]=-1;}}var nedges=[];for(var i=0;i<edges.length;++i){var e=edges[i];if(live[e[0]]&&live[e[1]]){nedges.push([newIndex[e[0]],newIndex[e[1]]]);}}return[nedges,npositions];}},{\"edges-to-adjacency-list\":77}],204:[function(_dereq_,module,exports){'use strict';module.exports=planarGraphToPolyline;var e2a=_dereq_('edges-to-adjacency-list');var planarDual=_dereq_('planar-dual');var preprocessPolygon=_dereq_('point-in-big-polygon');var twoProduct=_dereq_('two-product');var robustSum=_dereq_('robust-sum');var uniq=_dereq_('uniq');var trimLeaves=_dereq_('./lib/trim-leaves');function makeArray(length,fill){var result=new Array(length);for(var i=0;i<length;++i){result[i]=fill;}return result;}function makeArrayOfArrays(length){var result=new Array(length);for(var i=0;i<length;++i){result[i]=[];}return result;}function planarGraphToPolyline(edges,positions){//Trim leaves\nvar result=trimLeaves(edges,positions);edges=result[0];positions=result[1];var numVertices=positions.length;var numEdges=edges.length;//Calculate adjacency list, check manifold\nvar adj=e2a(edges,positions.length);for(var i=0;i<numVertices;++i){if(adj[i].length%2===1){throw new Error('planar-graph-to-polyline: graph must be manifold');}}//Get faces\nvar faces=planarDual(edges,positions);//Check orientation of a polygon using exact arithmetic\nfunction ccw(c){var n=c.length;var area=[0];for(var j=0;j<n;++j){var a=positions[c[j]];var b=positions[c[(j+1)%n]];var t00=twoProduct(-a[0],a[1]);var t01=twoProduct(-a[0],b[1]);var t10=twoProduct(b[0],a[1]);var t11=twoProduct(b[0],b[1]);area=robustSum(area,robustSum(robustSum(t00,t01),robustSum(t10,t11)));}return area[area.length-1]>0;}//Extract all clockwise faces\nfaces=faces.filter(ccw);//Detect which loops are contained in one another to handle parent-of relation\nvar numFaces=faces.length;var parent=new Array(numFaces);var containment=new Array(numFaces);for(var i=0;i<numFaces;++i){parent[i]=i;var row=new Array(numFaces);var loopVertices=faces[i].map(function(v){return positions[v];});var pmc=preprocessPolygon([loopVertices]);var count=0;outer:for(var j=0;j<numFaces;++j){row[j]=0;if(i===j){continue;}var c=faces[j];var n=c.length;for(var k=0;k<n;++k){var d=pmc(positions[c[k]]);if(d!==0){if(d<0){row[j]=1;count+=1;}continue outer;}}row[j]=1;count+=1;}containment[i]=[count,i,row];}containment.sort(function(a,b){return b[0]-a[0];});for(var i=0;i<numFaces;++i){var row=containment[i];var idx=row[1];var children=row[2];for(var j=0;j<numFaces;++j){if(children[j]){parent[j]=idx;}}}//Initialize face adjacency list\nvar fadj=makeArrayOfArrays(numFaces);for(var i=0;i<numFaces;++i){fadj[i].push(parent[i]);fadj[parent[i]].push(i);}//Build adjacency matrix for edges\nvar edgeAdjacency={};var internalVertices=makeArray(numVertices,false);for(var i=0;i<numFaces;++i){var c=faces[i];var n=c.length;for(var j=0;j<n;++j){var a=c[j];var b=c[(j+1)%n];var key=Math.min(a,b)+\":\"+Math.max(a,b);if(key in edgeAdjacency){var neighbor=edgeAdjacency[key];fadj[neighbor].push(i);fadj[i].push(neighbor);internalVertices[a]=internalVertices[b]=true;}else{edgeAdjacency[key]=i;}}}function sharedBoundary(c){var n=c.length;for(var i=0;i<n;++i){if(!internalVertices[c[i]]){return false;}}return true;}var toVisit=[];var parity=makeArray(numFaces,-1);for(var i=0;i<numFaces;++i){if(parent[i]===i&&!sharedBoundary(faces[i])){toVisit.push(i);parity[i]=0;}else{parity[i]=-1;}}//Using face adjacency, classify faces as in/out\nvar result=[];while(toVisit.length>0){var top=toVisit.pop();var nbhd=fadj[top];uniq(nbhd,function(a,b){return a-b;});var nnbhr=nbhd.length;var p=parity[top];var polyline;if(p===0){var c=faces[top];polyline=[c];}for(var i=0;i<nnbhr;++i){var f=nbhd[i];if(parity[f]>=0){continue;}parity[f]=p^1;toVisit.push(f);if(p===0){var c=faces[f];if(!sharedBoundary(c)){c.reverse();polyline.push(c);}}}if(p===0){result.push(polyline);}}return result;}},{\"./lib/trim-leaves\":203,\"edges-to-adjacency-list\":77,\"planar-dual\":202,\"point-in-big-polygon\":222,\"robust-sum\":250,\"two-product\":268,\"uniq\":272}],205:[function(_dereq_,module,exports){(function(Buffer){\"use strict\";module.exports=parseData;var pako=_dereq_(\"pako\"),HEADER=new Buffer(\"89504e470d0a1a0a\",\"hex\");function ImageData(width,height,channels,data,trailer){this.width=width;this.height=height;this.channels=channels;this.data=data;this.trailer=trailer;}function paeth(a,b,c){var p=a+b-c,pa=Math.abs(p-a),pb=Math.abs(p-b),pc=Math.abs(p-c);if(pa<=pb&&pa<=pc)return a;if(pb<=pc)return b;return c;}function parseData(dataBuffer){var state=0,off=0,buf=new Buffer(13),b=-1,p=0,pngPaletteEntries=0,pngAlphaEntries=0,chunkLength,pngWidth,pngHeight,pngBitDepth,pngDepthMult,pngColorType,pngPixels,pngSamplesPerPixel,pngBytesPerPixel,pngBytesPerScanline,pngSamples,currentScanline,priorScanline,scanlineFilter,pngTrailer,pngPalette,pngAlpha,idChannels;var inflateQueue=[];function inputData(data){var len=data.length,i=0,tmp,j;while(i!==len){switch(state){case 0:/* PNG header */if(data.readUInt8(i++)!==HEADER[off++])return false;if(off===HEADER.length){state=1;off=0;}break;case 1:/* PNG chunk length and type */if(len-i<8-off){data.copy(buf,off,i);off+=len-i;i=len;}else{data.copy(buf,off,i,i+8-off);i+=8-off;off=0;chunkLength=buf.readUInt32BE(0);switch(buf.toString(\"ascii\",4,8)){case\"IHDR\":state=2;break;case\"PLTE\":/* The PNG spec states that PLTE is only required for type 3.\n                 * It may appear in other types, but is only useful if the\n                 * display does not support true color. Since we're just a data\n                 * storage format, we don't have to worry about it. */if(pngColorType!==3)state=7;else{if(chunkLength%3!==0)return false;pngPaletteEntries=chunkLength/3;pngPalette=new Buffer(chunkLength);state=3;}break;case\"tRNS\":if(pngColorType!==3)return false;/* We only support tRNS on paletted images right now. Those\n                 * images may either have 1 or 3 channels, but in either case\n                 * we add one for transparency. */idChannels++;pngAlphaEntries=chunkLength;pngAlpha=new Buffer(chunkLength);state=4;break;case\"IDAT\":/* Allocate the PNG if we havn't yet. (We wait to do it until\n                 * here since tRNS may change idChannels, so we can't be sure of\n                 * the size needed until we hit IDAT. With all that, might as\n                 * well wait until we're actually going to start filling the\n                 * buffer in case of errors...) */if(!pngPixels)pngPixels=new Uint8Array(pngWidth*pngHeight*idChannels);state=5;break;case\"IEND\":state=6;break;default:state=7;break;}}break;case 2:/* IHDR */if(chunkLength!==13)return false;else if(len-i<chunkLength-off){data.copy(buf,off,i);off+=len-i;i=len;}else{data.copy(buf,off,i,i+chunkLength-off);if(buf.readUInt8(10)!==0)return false;if(buf.readUInt8(11)!==0)return false;if(buf.readUInt8(12)!==0)return false;i+=chunkLength-off;state=8;off=0;pngWidth=buf.readUInt32BE(0);pngHeight=buf.readUInt32BE(4);pngBitDepth=buf.readUInt8(8);pngDepthMult=255/((1<<pngBitDepth)-1);pngColorType=buf.readUInt8(9);switch(pngColorType){case 0:pngSamplesPerPixel=1;pngBytesPerPixel=Math.ceil(pngBitDepth*0.125);idChannels=1;break;case 2:pngSamplesPerPixel=3;pngBytesPerPixel=Math.ceil(pngBitDepth*0.375);idChannels=3;break;case 3:pngSamplesPerPixel=1;pngBytesPerPixel=1;idChannels=3;break;case 4:pngSamplesPerPixel=2;pngBytesPerPixel=Math.ceil(pngBitDepth*0.250);idChannels=2;break;case 6:pngSamplesPerPixel=4;pngBytesPerPixel=Math.ceil(pngBitDepth*0.5);idChannels=4;break;default:return false;}pngBytesPerScanline=Math.ceil(pngWidth*pngBitDepth*pngSamplesPerPixel/8);pngSamples=new Buffer(pngSamplesPerPixel);currentScanline=new Buffer(pngBytesPerScanline);priorScanline=new Buffer(pngBytesPerScanline);currentScanline.fill(0);}break;case 3:/* PLTE */if(len-i<chunkLength-off){data.copy(pngPalette,off,i);off+=len-i;i=len;}else{data.copy(pngPalette,off,i,i+chunkLength-off);i+=chunkLength-off;state=8;off=0;/* If each entry in the color palette is grayscale, set the channel\n             * count to 1. */idChannels=1;for(j=pngPaletteEntries;j--;){if(pngPalette[j*3+0]!==pngPalette[j*3+1]||pngPalette[j*3+0]!==pngPalette[j*3+2]){idChannels=3;break;}}}break;case 4:/* tRNS */if(len-i<chunkLength-off){data.copy(pngAlpha,off,i);off+=len-i;i=len;}else{data.copy(pngAlpha,off,i,i+chunkLength-off);i+=chunkLength-off;state=8;off=0;}break;case 5:/* IDAT */ /* If the amount available is less than the amount remaining, then\n           * feed as much as we can to the inflator. */if(len-i<chunkLength-off){/* FIXME: Do I need to be smart and check the return value? */inflateQueue.push(data.slice(i));off+=len-i;i=len;}/* Otherwise, write the last bit of the data to the inflator, and\n           * finish processing the chunk. */else{/* FIXME: Do I need to be smart and check the return value? */inflateQueue.push(data.slice(i,i+chunkLength-off));i+=chunkLength-off;state=8;off=0;}break;case 6:/* IEND */if(chunkLength!==0)return false;else if(len-i<4-off){off+=len-i;i=len;}else{pngTrailer=new Buffer(0);i+=4-off;state=9;off=0;}break;case 7:/* unrecognized chunk */if(len-i<chunkLength-off){off+=len-i;i=len;}else{i+=chunkLength-off;state=8;off=0;}break;case 8:/* chunk crc */ /* FIXME: CRC is blatantly ignored */if(len-i<4-off){off+=len-i;i=len;}else{i+=4-off;state=1;off=0;}break;case 9:/* trailing data */ /* FIXME: It is inefficient to create a trailer buffer of length zero\n           * and keep reallocating it every time we want to add more data. */tmp=new Buffer(off+len-i);pngTrailer.copy(tmp);data.copy(tmp,off,i,len);pngTrailer=tmp;off+=len-i;i=len;break;}}return true;}//Try parsing header data\nif(!inputData(dataBuffer)){return null;}if(state!==9){return null;}//Concatenate all inflate buffers\nvar inflateBuffer=Buffer.concat(inflateQueue);var inflateData=pako.inflate(new Uint8Array(inflateBuffer));function unpackPixels(data){var len=data.length,i,tmp,x,j,k;for(i=0;i!==len;++i){if(b===-1){scanlineFilter=data[i];tmp=currentScanline;currentScanline=priorScanline;priorScanline=tmp;}else switch(scanlineFilter){case 0:currentScanline[b]=data[i];break;case 1:currentScanline[b]=b<pngBytesPerPixel?data[i]:data[i]+currentScanline[b-pngBytesPerPixel]&255;break;case 2:currentScanline[b]=data[i]+priorScanline[b]&255;break;case 3:currentScanline[b]=data[i]+((b<pngBytesPerPixel?priorScanline[b]:currentScanline[b-pngBytesPerPixel]+priorScanline[b])>>>1)&255;break;case 4:currentScanline[b]=data[i]+(b<pngBytesPerPixel?priorScanline[b]:paeth(currentScanline[b-pngBytesPerPixel],priorScanline[b],priorScanline[b-pngBytesPerPixel]))&255;break;default:return null;}if(++b===pngBytesPerScanline){/* One scanline too many? */if(p===pngPixels.length)return null;/* We have now read a complete scanline, so unfilter it and write it\n         * into the pixel array. */for(j=0,x=0;x!==pngWidth;++x){/* Read all of the samples into the sample buffer. */for(k=0;k!==pngSamplesPerPixel;++j,++k){switch(pngBitDepth){case 1:pngSamples[k]=currentScanline[j>>>3]>>7-(j&7)&1;break;case 2:pngSamples[k]=currentScanline[j>>>2]>>(3-(j&3)<<1)&3;break;case 4:pngSamples[k]=currentScanline[j>>>1]>>(1-(j&1)<<2)&15;break;case 8:pngSamples[k]=currentScanline[j];break;default:return null;}}/* Write the pixel based off of the samples so collected. */switch(pngColorType){case 0:pngPixels[p++]=pngSamples[0]*pngDepthMult;break;case 2:pngPixels[p++]=pngSamples[0]*pngDepthMult;pngPixels[p++]=pngSamples[1]*pngDepthMult;pngPixels[p++]=pngSamples[2]*pngDepthMult;break;case 3:if(pngSamples[0]>=pngPaletteEntries)return null;switch(idChannels){case 1:pngPixels[p++]=pngPalette[pngSamples[0]*3];break;case 2:pngPixels[p++]=pngPalette[pngSamples[0]*3];pngPixels[p++]=pngSamples[0]<pngAlphaEntries?pngAlpha[pngSamples[0]]:255;break;case 3:pngPixels[p++]=pngPalette[pngSamples[0]*3+0];pngPixels[p++]=pngPalette[pngSamples[0]*3+1];pngPixels[p++]=pngPalette[pngSamples[0]*3+2];break;case 4:pngPixels[p++]=pngPalette[pngSamples[0]*3+0];pngPixels[p++]=pngPalette[pngSamples[0]*3+1];pngPixels[p++]=pngPalette[pngSamples[0]*3+2];pngPixels[p++]=pngSamples[0]<pngAlphaEntries?pngAlpha[pngSamples[0]]:255;break;}break;case 4:pngPixels[p++]=pngSamples[0]*pngDepthMult;pngPixels[p++]=pngSamples[1]*pngDepthMult;break;case 6:pngPixels[p++]=pngSamples[0]*pngDepthMult;pngPixels[p++]=pngSamples[1]*pngDepthMult;pngPixels[p++]=pngSamples[2]*pngDepthMult;pngPixels[p++]=pngSamples[3]*pngDepthMult;break;}}b=-1;}}return true;}if(!unpackPixels(inflateData)){return null;}if(p!==pngPixels.length){return null;}return new ImageData(pngWidth,pngHeight,idChannels,pngPixels,pngTrailer);}}).call(this,_dereq_(\"buffer\").Buffer);},{\"buffer\":43,\"pako\":206}],206:[function(_dereq_,module,exports){// Top level file is just a mixin of submodules & constants\n'use strict';var assign=_dereq_('./lib/utils/common').assign;var deflate=_dereq_('./lib/deflate');var inflate=_dereq_('./lib/inflate');var constants=_dereq_('./lib/zlib/constants');var pako={};assign(pako,deflate,inflate,constants);module.exports=pako;},{\"./lib/deflate\":207,\"./lib/inflate\":208,\"./lib/utils/common\":209,\"./lib/zlib/constants\":212}],207:[function(_dereq_,module,exports){'use strict';var zlib_deflate=_dereq_('./zlib/deflate');var utils=_dereq_('./utils/common');var strings=_dereq_('./utils/strings');var msg=_dereq_('./zlib/messages');var ZStream=_dereq_('./zlib/zstream');var toString=Object.prototype.toString;/* Public constants ==========================================================*/ /* ===========================================================================*/var Z_NO_FLUSH=0;var Z_FINISH=4;var Z_OK=0;var Z_STREAM_END=1;var Z_SYNC_FLUSH=2;var Z_DEFAULT_COMPRESSION=-1;var Z_DEFAULT_STRATEGY=0;var Z_DEFLATED=8;/* ===========================================================================*/ /**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/ /* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overriden.\n **/ /**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/ /**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/ /**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/ /**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/function Deflate(options){if(!(this instanceof Deflate))return new Deflate(options);this.options=utils.assign({level:Z_DEFAULT_COMPRESSION,method:Z_DEFLATED,chunkSize:16384,windowBits:15,memLevel:8,strategy:Z_DEFAULT_STRATEGY,to:''},options||{});var opt=this.options;if(opt.raw&&opt.windowBits>0){opt.windowBits=-opt.windowBits;}else if(opt.gzip&&opt.windowBits>0&&opt.windowBits<16){opt.windowBits+=16;}this.err=0;// error code, if happens (0 = Z_OK)\nthis.msg='';// error message\nthis.ended=false;// used to avoid multiple onEnd() calls\nthis.chunks=[];// chunks of compressed data\nthis.strm=new ZStream();this.strm.avail_out=0;var status=zlib_deflate.deflateInit2(this.strm,opt.level,opt.method,opt.windowBits,opt.memLevel,opt.strategy);if(status!==Z_OK){throw new Error(msg[status]);}if(opt.header){zlib_deflate.deflateSetHeader(this.strm,opt.header);}if(opt.dictionary){var dict;// Convert data if needed\nif(typeof opt.dictionary==='string'){// If we need to compress text, change encoding to utf8.\ndict=strings.string2buf(opt.dictionary);}else if(toString.call(opt.dictionary)==='[object ArrayBuffer]'){dict=new Uint8Array(opt.dictionary);}else{dict=opt.dictionary;}status=zlib_deflate.deflateSetDictionary(this.strm,dict);if(status!==Z_OK){throw new Error(msg[status]);}this._dict_set=true;}}/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/Deflate.prototype.push=function(data,mode){var strm=this.strm;var chunkSize=this.options.chunkSize;var status,_mode;if(this.ended){return false;}_mode=mode===~~mode?mode:mode===true?Z_FINISH:Z_NO_FLUSH;// Convert data if needed\nif(typeof data==='string'){// If we need to compress text, change encoding to utf8.\nstrm.input=strings.string2buf(data);}else if(toString.call(data)==='[object ArrayBuffer]'){strm.input=new Uint8Array(data);}else{strm.input=data;}strm.next_in=0;strm.avail_in=strm.input.length;do{if(strm.avail_out===0){strm.output=new utils.Buf8(chunkSize);strm.next_out=0;strm.avail_out=chunkSize;}status=zlib_deflate.deflate(strm,_mode);/* no bad return value */if(status!==Z_STREAM_END&&status!==Z_OK){this.onEnd(status);this.ended=true;return false;}if(strm.avail_out===0||strm.avail_in===0&&(_mode===Z_FINISH||_mode===Z_SYNC_FLUSH)){if(this.options.to==='string'){this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output,strm.next_out)));}else{this.onData(utils.shrinkBuf(strm.output,strm.next_out));}}}while((strm.avail_in>0||strm.avail_out===0)&&status!==Z_STREAM_END);// Finalize on the last chunk.\nif(_mode===Z_FINISH){status=zlib_deflate.deflateEnd(this.strm);this.onEnd(status);this.ended=true;return status===Z_OK;}// callback interim results if Z_SYNC_FLUSH.\nif(_mode===Z_SYNC_FLUSH){this.onEnd(Z_OK);strm.avail_out=0;return true;}return true;};/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/Deflate.prototype.onData=function(chunk){this.chunks.push(chunk);};/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/Deflate.prototype.onEnd=function(status){// On success - join\nif(status===Z_OK){if(this.options.to==='string'){this.result=this.chunks.join('');}else{this.result=utils.flattenChunks(this.chunks);}}this.chunks=[];this.err=status;this.msg=this.strm.msg;};/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/function deflate(input,options){var deflator=new Deflate(options);deflator.push(input,true);// That will never happens, if you don't cheat with options :)\nif(deflator.err){throw deflator.msg;}return deflator.result;}/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/function deflateRaw(input,options){options=options||{};options.raw=true;return deflate(input,options);}/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/function gzip(input,options){options=options||{};options.gzip=true;return deflate(input,options);}exports.Deflate=Deflate;exports.deflate=deflate;exports.deflateRaw=deflateRaw;exports.gzip=gzip;},{\"./utils/common\":209,\"./utils/strings\":210,\"./zlib/deflate\":214,\"./zlib/messages\":219,\"./zlib/zstream\":221}],208:[function(_dereq_,module,exports){'use strict';var zlib_inflate=_dereq_('./zlib/inflate');var utils=_dereq_('./utils/common');var strings=_dereq_('./utils/strings');var c=_dereq_('./zlib/constants');var msg=_dereq_('./zlib/messages');var ZStream=_dereq_('./zlib/zstream');var GZheader=_dereq_('./zlib/gzheader');var toString=Object.prototype.toString;/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/ /* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overriden.\n **/ /**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/ /**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/ /**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/ /**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/function Inflate(options){if(!(this instanceof Inflate))return new Inflate(options);this.options=utils.assign({chunkSize:16384,windowBits:0,to:''},options||{});var opt=this.options;// Force window size for `raw` data, if not set directly,\n// because we have no header for autodetect.\nif(opt.raw&&opt.windowBits>=0&&opt.windowBits<16){opt.windowBits=-opt.windowBits;if(opt.windowBits===0){opt.windowBits=-15;}}// If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\nif(opt.windowBits>=0&&opt.windowBits<16&&!(options&&options.windowBits)){opt.windowBits+=32;}// Gzip header has no info about windows size, we can do autodetect only\n// for deflate. So, if window size not set, force it to max when gzip possible\nif(opt.windowBits>15&&opt.windowBits<48){// bit 3 (16) -> gzipped data\n// bit 4 (32) -> autodetect gzip/deflate\nif((opt.windowBits&15)===0){opt.windowBits|=15;}}this.err=0;// error code, if happens (0 = Z_OK)\nthis.msg='';// error message\nthis.ended=false;// used to avoid multiple onEnd() calls\nthis.chunks=[];// chunks of compressed data\nthis.strm=new ZStream();this.strm.avail_out=0;var status=zlib_inflate.inflateInit2(this.strm,opt.windowBits);if(status!==c.Z_OK){throw new Error(msg[status]);}this.header=new GZheader();zlib_inflate.inflateGetHeader(this.strm,this.header);}/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/Inflate.prototype.push=function(data,mode){var strm=this.strm;var chunkSize=this.options.chunkSize;var dictionary=this.options.dictionary;var status,_mode;var next_out_utf8,tail,utf8str;var dict;// Flag to properly process Z_BUF_ERROR on testing inflate call\n// when we check that all output data was flushed.\nvar allowBufError=false;if(this.ended){return false;}_mode=mode===~~mode?mode:mode===true?c.Z_FINISH:c.Z_NO_FLUSH;// Convert data if needed\nif(typeof data==='string'){// Only binary strings can be decompressed on practice\nstrm.input=strings.binstring2buf(data);}else if(toString.call(data)==='[object ArrayBuffer]'){strm.input=new Uint8Array(data);}else{strm.input=data;}strm.next_in=0;strm.avail_in=strm.input.length;do{if(strm.avail_out===0){strm.output=new utils.Buf8(chunkSize);strm.next_out=0;strm.avail_out=chunkSize;}status=zlib_inflate.inflate(strm,c.Z_NO_FLUSH);/* no bad return value */if(status===c.Z_NEED_DICT&&dictionary){// Convert data if needed\nif(typeof dictionary==='string'){dict=strings.string2buf(dictionary);}else if(toString.call(dictionary)==='[object ArrayBuffer]'){dict=new Uint8Array(dictionary);}else{dict=dictionary;}status=zlib_inflate.inflateSetDictionary(this.strm,dict);}if(status===c.Z_BUF_ERROR&&allowBufError===true){status=c.Z_OK;allowBufError=false;}if(status!==c.Z_STREAM_END&&status!==c.Z_OK){this.onEnd(status);this.ended=true;return false;}if(strm.next_out){if(strm.avail_out===0||status===c.Z_STREAM_END||strm.avail_in===0&&(_mode===c.Z_FINISH||_mode===c.Z_SYNC_FLUSH)){if(this.options.to==='string'){next_out_utf8=strings.utf8border(strm.output,strm.next_out);tail=strm.next_out-next_out_utf8;utf8str=strings.buf2string(strm.output,next_out_utf8);// move tail\nstrm.next_out=tail;strm.avail_out=chunkSize-tail;if(tail){utils.arraySet(strm.output,strm.output,next_out_utf8,tail,0);}this.onData(utf8str);}else{this.onData(utils.shrinkBuf(strm.output,strm.next_out));}}}// When no more input data, we should check that internal inflate buffers\n// are flushed. The only way to do it when avail_out = 0 - run one more\n// inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n// Here we set flag to process this error properly.\n//\n// NOTE. Deflate does not return error in this case and does not needs such\n// logic.\nif(strm.avail_in===0&&strm.avail_out===0){allowBufError=true;}}while((strm.avail_in>0||strm.avail_out===0)&&status!==c.Z_STREAM_END);if(status===c.Z_STREAM_END){_mode=c.Z_FINISH;}// Finalize on the last chunk.\nif(_mode===c.Z_FINISH){status=zlib_inflate.inflateEnd(this.strm);this.onEnd(status);this.ended=true;return status===c.Z_OK;}// callback interim results if Z_SYNC_FLUSH.\nif(_mode===c.Z_SYNC_FLUSH){this.onEnd(c.Z_OK);strm.avail_out=0;return true;}return true;};/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/Inflate.prototype.onData=function(chunk){this.chunks.push(chunk);};/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/Inflate.prototype.onEnd=function(status){// On success - join\nif(status===c.Z_OK){if(this.options.to==='string'){// Glue & convert here, until we teach pako to send\n// utf8 alligned strings to onData\nthis.result=this.chunks.join('');}else{this.result=utils.flattenChunks(this.chunks);}}this.chunks=[];this.err=status;this.msg=this.strm.msg;};/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/function inflate(input,options){var inflator=new Inflate(options);inflator.push(input,true);// That will never happens, if you don't cheat with options :)\nif(inflator.err){throw inflator.msg;}return inflator.result;}/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/function inflateRaw(input,options){options=options||{};options.raw=true;return inflate(input,options);}/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/exports.Inflate=Inflate;exports.inflate=inflate;exports.inflateRaw=inflateRaw;exports.ungzip=inflate;},{\"./utils/common\":209,\"./utils/strings\":210,\"./zlib/constants\":212,\"./zlib/gzheader\":215,\"./zlib/inflate\":217,\"./zlib/messages\":219,\"./zlib/zstream\":221}],209:[function(_dereq_,module,exports){'use strict';var TYPED_OK=typeof Uint8Array!=='undefined'&&typeof Uint16Array!=='undefined'&&typeof Int32Array!=='undefined';exports.assign=function(obj/*from1, from2, from3, ...*/){var sources=Array.prototype.slice.call(arguments,1);while(sources.length){var source=sources.shift();if(!source){continue;}if(_typeof(source)!=='object'){throw new TypeError(source+'must be non-object');}for(var p in source){if(source.hasOwnProperty(p)){obj[p]=source[p];}}}return obj;};// reduce buffer size, avoiding mem copy\nexports.shrinkBuf=function(buf,size){if(buf.length===size){return buf;}if(buf.subarray){return buf.subarray(0,size);}buf.length=size;return buf;};var fnTyped={arraySet:function arraySet(dest,src,src_offs,len,dest_offs){if(src.subarray&&dest.subarray){dest.set(src.subarray(src_offs,src_offs+len),dest_offs);return;}// Fallback to ordinary array\nfor(var i=0;i<len;i++){dest[dest_offs+i]=src[src_offs+i];}},// Join array of chunks to single array.\nflattenChunks:function flattenChunks(chunks){var i,l,len,pos,chunk,result;// calculate data length\nlen=0;for(i=0,l=chunks.length;i<l;i++){len+=chunks[i].length;}// join chunks\nresult=new Uint8Array(len);pos=0;for(i=0,l=chunks.length;i<l;i++){chunk=chunks[i];result.set(chunk,pos);pos+=chunk.length;}return result;}};var fnUntyped={arraySet:function arraySet(dest,src,src_offs,len,dest_offs){for(var i=0;i<len;i++){dest[dest_offs+i]=src[src_offs+i];}},// Join array of chunks to single array.\nflattenChunks:function flattenChunks(chunks){return[].concat.apply([],chunks);}};// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped=function(on){if(on){exports.Buf8=Uint8Array;exports.Buf16=Uint16Array;exports.Buf32=Int32Array;exports.assign(exports,fnTyped);}else{exports.Buf8=Array;exports.Buf16=Array;exports.Buf32=Array;exports.assign(exports,fnUntyped);}};exports.setTyped(TYPED_OK);},{}],210:[function(_dereq_,module,exports){// String encode/decode helpers\n'use strict';var utils=_dereq_('./common');// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safary\n//\nvar STR_APPLY_OK=true;var STR_APPLY_UIA_OK=true;try{String.fromCharCode.apply(null,[0]);}catch(__){STR_APPLY_OK=false;}try{String.fromCharCode.apply(null,new Uint8Array(1));}catch(__){STR_APPLY_UIA_OK=false;}// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len=new utils.Buf8(256);for(var q=0;q<256;q++){_utf8len[q]=q>=252?6:q>=248?5:q>=240?4:q>=224?3:q>=192?2:1;}_utf8len[254]=_utf8len[254]=1;// Invalid sequence start\n// convert string to array (typed, when possible)\nexports.string2buf=function(str){var buf,c,c2,m_pos,i,str_len=str.length,buf_len=0;// count binary size\nfor(m_pos=0;m_pos<str_len;m_pos++){c=str.charCodeAt(m_pos);if((c&0xfc00)===0xd800&&m_pos+1<str_len){c2=str.charCodeAt(m_pos+1);if((c2&0xfc00)===0xdc00){c=0x10000+(c-0xd800<<10)+(c2-0xdc00);m_pos++;}}buf_len+=c<0x80?1:c<0x800?2:c<0x10000?3:4;}// allocate buffer\nbuf=new utils.Buf8(buf_len);// convert\nfor(i=0,m_pos=0;i<buf_len;m_pos++){c=str.charCodeAt(m_pos);if((c&0xfc00)===0xd800&&m_pos+1<str_len){c2=str.charCodeAt(m_pos+1);if((c2&0xfc00)===0xdc00){c=0x10000+(c-0xd800<<10)+(c2-0xdc00);m_pos++;}}if(c<0x80){/* one byte */buf[i++]=c;}else if(c<0x800){/* two bytes */buf[i++]=0xC0|c>>>6;buf[i++]=0x80|c&0x3f;}else if(c<0x10000){/* three bytes */buf[i++]=0xE0|c>>>12;buf[i++]=0x80|c>>>6&0x3f;buf[i++]=0x80|c&0x3f;}else{/* four bytes */buf[i++]=0xf0|c>>>18;buf[i++]=0x80|c>>>12&0x3f;buf[i++]=0x80|c>>>6&0x3f;buf[i++]=0x80|c&0x3f;}}return buf;};// Helper (used in 2 places)\nfunction buf2binstring(buf,len){// use fallback for big arrays to avoid stack overflow\nif(len<65537){if(buf.subarray&&STR_APPLY_UIA_OK||!buf.subarray&&STR_APPLY_OK){return String.fromCharCode.apply(null,utils.shrinkBuf(buf,len));}}var result='';for(var i=0;i<len;i++){result+=String.fromCharCode(buf[i]);}return result;}// Convert byte array to binary string\nexports.buf2binstring=function(buf){return buf2binstring(buf,buf.length);};// Convert binary string (typed, when possible)\nexports.binstring2buf=function(str){var buf=new utils.Buf8(str.length);for(var i=0,len=buf.length;i<len;i++){buf[i]=str.charCodeAt(i);}return buf;};// convert array to string\nexports.buf2string=function(buf,max){var i,out,c,c_len;var len=max||buf.length;// Reserve max possible length (2 words per char)\n// NB: by unknown reasons, Array is significantly faster for\n//     String.fromCharCode.apply than Uint16Array.\nvar utf16buf=new Array(len*2);for(out=0,i=0;i<len;){c=buf[i++];// quick process ascii\nif(c<0x80){utf16buf[out++]=c;continue;}c_len=_utf8len[c];// skip 5 & 6 byte codes\nif(c_len>4){utf16buf[out++]=0xfffd;i+=c_len-1;continue;}// apply mask on first byte\nc&=c_len===2?0x1f:c_len===3?0x0f:0x07;// join the rest\nwhile(c_len>1&&i<len){c=c<<6|buf[i++]&0x3f;c_len--;}// terminated by end of string?\nif(c_len>1){utf16buf[out++]=0xfffd;continue;}if(c<0x10000){utf16buf[out++]=c;}else{c-=0x10000;utf16buf[out++]=0xd800|c>>10&0x3ff;utf16buf[out++]=0xdc00|c&0x3ff;}}return buf2binstring(utf16buf,out);};// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border=function(buf,max){var pos;max=max||buf.length;if(max>buf.length){max=buf.length;}// go back from last position, until start of sequence found\npos=max-1;while(pos>=0&&(buf[pos]&0xC0)===0x80){pos--;}// Fuckup - very small and broken sequence,\n// return max, because we should return something anyway.\nif(pos<0){return max;}// If we came to start of buffer - that means vuffer is too small,\n// return max too.\nif(pos===0){return max;}return pos+_utf8len[buf[pos]]>max?pos:max;};},{\"./common\":209}],211:[function(_dereq_,module,exports){'use strict';// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It doesn't worth to make additional optimizationa as in original.\n// Small size is preferable.\nfunction adler32(adler,buf,len,pos){var s1=adler&0xffff|0,s2=adler>>>16&0xffff|0,n=0;while(len!==0){// Set limit ~ twice less than 5552, to keep\n// s2 in 31-bits, because we force signed ints.\n// in other case %= will fail.\nn=len>2000?2000:len;len-=n;do{s1=s1+buf[pos++]|0;s2=s2+s1|0;}while(--n);s1%=65521;s2%=65521;}return s1|s2<<16|0;}module.exports=adler32;},{}],212:[function(_dereq_,module,exports){'use strict';module.exports={/* Allowed flush values; see deflate() and inflate() below for details */Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,/* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,//Z_MEM_ERROR:     -4,\nZ_BUF_ERROR:-5,//Z_VERSION_ERROR: -6,\n/* compression levels */Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,/* Possible values of the data_type field (though see inflate()) */Z_BINARY:0,Z_TEXT:1,//Z_ASCII:                1, // = Z_TEXT (deprecated)\nZ_UNKNOWN:2,/* The deflate compression method */Z_DEFLATED:8//Z_NULL:                 null // Use -1 or null inline, depending on var type\n};},{}],213:[function(_dereq_,module,exports){'use strict';// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable(){var c,table=[];for(var n=0;n<256;n++){c=n;for(var k=0;k<8;k++){c=c&1?0xEDB88320^c>>>1:c>>>1;}table[n]=c;}return table;}// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable=makeTable();function crc32(crc,buf,len,pos){var t=crcTable,end=pos+len;crc^=-1;for(var i=pos;i<end;i++){crc=crc>>>8^t[(crc^buf[i])&0xFF];}return crc^-1;// >>> 0;\n}module.exports=crc32;},{}],214:[function(_dereq_,module,exports){'use strict';var utils=_dereq_('../utils/common');var trees=_dereq_('./trees');var adler32=_dereq_('./adler32');var crc32=_dereq_('./crc32');var msg=_dereq_('./messages');/* Public constants ==========================================================*/ /* ===========================================================================*/ /* Allowed flush values; see deflate() and inflate() below for details */var Z_NO_FLUSH=0;var Z_PARTIAL_FLUSH=1;//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH=3;var Z_FINISH=4;var Z_BLOCK=5;//var Z_TREES         = 6;\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */var Z_OK=0;var Z_STREAM_END=1;//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR=-2;var Z_DATA_ERROR=-3;//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR=-5;//var Z_VERSION_ERROR = -6;\n/* compression levels */ //var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION=-1;var Z_FILTERED=1;var Z_HUFFMAN_ONLY=2;var Z_RLE=3;var Z_FIXED=4;var Z_DEFAULT_STRATEGY=0;/* Possible values of the data_type field (though see inflate()) */ //var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN=2;/* The deflate compression method */var Z_DEFLATED=8;/*============================================================================*/var MAX_MEM_LEVEL=9;/* Maximum value for memLevel in deflateInit2 */var MAX_WBITS=15;/* 32K LZ77 window */var DEF_MEM_LEVEL=8;var LENGTH_CODES=29;/* number of length codes, not counting the special END_BLOCK code */var LITERALS=256;/* number of literal bytes 0..255 */var L_CODES=LITERALS+1+LENGTH_CODES;/* number of Literal or Length codes, including the END_BLOCK code */var D_CODES=30;/* number of distance codes */var BL_CODES=19;/* number of codes used to transfer the bit lengths */var HEAP_SIZE=2*L_CODES+1;/* maximum heap size */var MAX_BITS=15;/* All codes must not exceed MAX_BITS bits */var MIN_MATCH=3;var MAX_MATCH=258;var MIN_LOOKAHEAD=MAX_MATCH+MIN_MATCH+1;var PRESET_DICT=0x20;var INIT_STATE=42;var EXTRA_STATE=69;var NAME_STATE=73;var COMMENT_STATE=91;var HCRC_STATE=103;var BUSY_STATE=113;var FINISH_STATE=666;var BS_NEED_MORE=1;/* block not completed, need more input or more output */var BS_BLOCK_DONE=2;/* block flush performed */var BS_FINISH_STARTED=3;/* finish started, need only more output at next deflate */var BS_FINISH_DONE=4;/* finish done, accept no more input or output */var OS_CODE=0x03;// Unix :) . Don't detect, use this default.\nfunction err(strm,errorCode){strm.msg=msg[errorCode];return errorCode;}function rank(f){return(f<<1)-(f>4?9:0);}function zero(buf){var len=buf.length;while(--len>=0){buf[len]=0;}}/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */function flush_pending(strm){var s=strm.state;//_tr_flush_bits(s);\nvar len=s.pending;if(len>strm.avail_out){len=strm.avail_out;}if(len===0){return;}utils.arraySet(strm.output,s.pending_buf,s.pending_out,len,strm.next_out);strm.next_out+=len;s.pending_out+=len;strm.total_out+=len;strm.avail_out-=len;s.pending-=len;if(s.pending===0){s.pending_out=0;}}function flush_block_only(s,last){trees._tr_flush_block(s,s.block_start>=0?s.block_start:-1,s.strstart-s.block_start,last);s.block_start=s.strstart;flush_pending(s.strm);}function put_byte(s,b){s.pending_buf[s.pending++]=b;}/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */function putShortMSB(s,b){//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\ns.pending_buf[s.pending++]=b>>>8&0xff;s.pending_buf[s.pending++]=b&0xff;}/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */function read_buf(strm,buf,start,size){var len=strm.avail_in;if(len>size){len=size;}if(len===0){return 0;}strm.avail_in-=len;// zmemcpy(buf, strm->next_in, len);\nutils.arraySet(buf,strm.input,strm.next_in,len,start);if(strm.state.wrap===1){strm.adler=adler32(strm.adler,buf,len,start);}else if(strm.state.wrap===2){strm.adler=crc32(strm.adler,buf,len,start);}strm.next_in+=len;strm.total_in+=len;return len;}/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */function longest_match(s,cur_match){var chain_length=s.max_chain_length;/* max hash chain length */var scan=s.strstart;/* current string */var match;/* matched string */var len;/* length of current match */var best_len=s.prev_length;/* best match length so far */var nice_match=s.nice_match;/* stop if match long enough */var limit=s.strstart>s.w_size-MIN_LOOKAHEAD?s.strstart-(s.w_size-MIN_LOOKAHEAD):0/*NIL*/;var _win=s.window;// shortcut\nvar wmask=s.w_mask;var prev=s.prev;/* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */var strend=s.strstart+MAX_MATCH;var scan_end1=_win[scan+best_len-1];var scan_end=_win[scan+best_len];/* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */ // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n/* Do not waste too much time if we already have a good match: */if(s.prev_length>=s.good_match){chain_length>>=2;}/* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */if(nice_match>s.lookahead){nice_match=s.lookahead;}// Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\ndo{// Assert(cur_match < s->strstart, \"no future\");\nmatch=cur_match;/* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */if(_win[match+best_len]!==scan_end||_win[match+best_len-1]!==scan_end1||_win[match]!==_win[scan]||_win[++match]!==_win[scan+1]){continue;}/* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */scan+=2;match++;// Assert(*scan == *match, \"match[2]?\");\n/* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */do{/*jshint noempty:false*/}while(_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&scan<strend);// Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\nlen=MAX_MATCH-(strend-scan);scan=strend-MAX_MATCH;if(len>best_len){s.match_start=cur_match;best_len=len;if(len>=nice_match){break;}scan_end1=_win[scan+best_len-1];scan_end=_win[scan+best_len];}}while((cur_match=prev[cur_match&wmask])>limit&&--chain_length!==0);if(best_len<=s.lookahead){return best_len;}return s.lookahead;}/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */function fill_window(s){var _w_size=s.w_size;var p,n,m,more,str;//Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\ndo{more=s.window_size-s.lookahead-s.strstart;// JS ints have 32 bit, block below not needed\n/* Deal with !@#$% 64K limit: */ //if (sizeof(int) <= 2) {\n//    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n//        more = wsize;\n//\n//  } else if (more == (unsigned)(-1)) {\n//        /* Very unlikely, but possible on 16 bit machine if\n//         * strstart == 0 && lookahead == 1 (input done a byte at time)\n//         */\n//        more--;\n//    }\n//}\n/* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */if(s.strstart>=_w_size+(_w_size-MIN_LOOKAHEAD)){utils.arraySet(s.window,s.window,_w_size,_w_size,0);s.match_start-=_w_size;s.strstart-=_w_size;/* we now have strstart >= MAX_DIST */s.block_start-=_w_size;/* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */n=s.hash_size;p=n;do{m=s.head[--p];s.head[p]=m>=_w_size?m-_w_size:0;}while(--n);n=_w_size;p=n;do{m=s.prev[--p];s.prev[p]=m>=_w_size?m-_w_size:0;/* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */}while(--n);more+=_w_size;}if(s.strm.avail_in===0){break;}/* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */ //Assert(more >= 2, \"more < 2\");\nn=read_buf(s.strm,s.window,s.strstart+s.lookahead,more);s.lookahead+=n;/* Initialize the hash value now that we have some input: */if(s.lookahead+s.insert>=MIN_MATCH){str=s.strstart-s.insert;s.ins_h=s.window[str];/* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */s.ins_h=(s.ins_h<<s.hash_shift^s.window[str+1])&s.hash_mask;//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\nwhile(s.insert){/* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */s.ins_h=(s.ins_h<<s.hash_shift^s.window[str+MIN_MATCH-1])&s.hash_mask;s.prev[str&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=str;str++;s.insert--;if(s.lookahead+s.insert<MIN_MATCH){break;}}}/* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */}while(s.lookahead<MIN_LOOKAHEAD&&s.strm.avail_in!==0);/* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */ //  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */function deflate_stored(s,flush){/* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */var max_block_size=0xffff;if(max_block_size>s.pending_buf_size-5){max_block_size=s.pending_buf_size-5;}/* Copy as much as possible from input to output: */for(;;){/* Fill the window as much as possible: */if(s.lookahead<=1){//Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n//  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\nfill_window(s);if(s.lookahead===0&&flush===Z_NO_FLUSH){return BS_NEED_MORE;}if(s.lookahead===0){break;}/* flush the current block */}//Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\ns.strstart+=s.lookahead;s.lookahead=0;/* Emit a stored block if pending_buf will be full: */var max_start=s.block_start+max_block_size;if(s.strstart===0||s.strstart>=max_start){/* strstart == 0 is possible when wraparound on 16-bit machine */s.lookahead=s.strstart-max_start;s.strstart=max_start;/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}/* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */if(s.strstart-s.block_start>=s.w_size-MIN_LOOKAHEAD){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}}s.insert=0;if(flush===Z_FINISH){/*** FLUSH_BLOCK(s, 1); ***/flush_block_only(s,true);if(s.strm.avail_out===0){return BS_FINISH_STARTED;}/***/return BS_FINISH_DONE;}if(s.strstart>s.block_start){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}return BS_NEED_MORE;}/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */function deflate_fast(s,flush){var hash_head;/* head of the hash chain */var bflush;/* set if current block must be flushed */for(;;){/* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */if(s.lookahead<MIN_LOOKAHEAD){fill_window(s);if(s.lookahead<MIN_LOOKAHEAD&&flush===Z_NO_FLUSH){return BS_NEED_MORE;}if(s.lookahead===0){break;/* flush the current block */}}/* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */hash_head=0/*NIL*/;if(s.lookahead>=MIN_MATCH){/*** INSERT_STRING(s, s.strstart, hash_head); ***/s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=s.strstart;/***/}/* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */if(hash_head!==0/*NIL*/&&s.strstart-hash_head<=s.w_size-MIN_LOOKAHEAD){/* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */s.match_length=longest_match(s,hash_head);/* longest_match() sets match_start */}if(s.match_length>=MIN_MATCH){// check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n/*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/bflush=trees._tr_tally(s,s.strstart-s.match_start,s.match_length-MIN_MATCH);s.lookahead-=s.match_length;/* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */if(s.match_length<=s.max_lazy_match/*max_insert_length*/&&s.lookahead>=MIN_MATCH){s.match_length--;/* string at strstart already in table */do{s.strstart++;/*** INSERT_STRING(s, s.strstart, hash_head); ***/s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=s.strstart;/***/ /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */}while(--s.match_length!==0);s.strstart++;}else{s.strstart+=s.match_length;s.match_length=0;s.ins_h=s.window[s.strstart];/* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+1])&s.hash_mask;//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n/* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */}}else{/* No match, output a literal byte */ //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n/*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/bflush=trees._tr_tally(s,0,s.window[s.strstart]);s.lookahead--;s.strstart++;}if(bflush){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}}s.insert=s.strstart<MIN_MATCH-1?s.strstart:MIN_MATCH-1;if(flush===Z_FINISH){/*** FLUSH_BLOCK(s, 1); ***/flush_block_only(s,true);if(s.strm.avail_out===0){return BS_FINISH_STARTED;}/***/return BS_FINISH_DONE;}if(s.last_lit){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}return BS_BLOCK_DONE;}/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */function deflate_slow(s,flush){var hash_head;/* head of hash chain */var bflush;/* set if current block must be flushed */var max_insert;/* Process the input block. */for(;;){/* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */if(s.lookahead<MIN_LOOKAHEAD){fill_window(s);if(s.lookahead<MIN_LOOKAHEAD&&flush===Z_NO_FLUSH){return BS_NEED_MORE;}if(s.lookahead===0){break;}/* flush the current block */}/* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */hash_head=0/*NIL*/;if(s.lookahead>=MIN_MATCH){/*** INSERT_STRING(s, s.strstart, hash_head); ***/s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=s.strstart;/***/}/* Find the longest match, discarding those <= prev_length.\n     */s.prev_length=s.match_length;s.prev_match=s.match_start;s.match_length=MIN_MATCH-1;if(hash_head!==0/*NIL*/&&s.prev_length<s.max_lazy_match&&s.strstart-hash_head<=s.w_size-MIN_LOOKAHEAD/*MAX_DIST(s)*/){/* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */s.match_length=longest_match(s,hash_head);/* longest_match() sets match_start */if(s.match_length<=5&&(s.strategy===Z_FILTERED||s.match_length===MIN_MATCH&&s.strstart-s.match_start>4096/*TOO_FAR*/)){/* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */s.match_length=MIN_MATCH-1;}}/* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */if(s.prev_length>=MIN_MATCH&&s.match_length<=s.prev_length){max_insert=s.strstart+s.lookahead-MIN_MATCH;/* Do not insert strings in hash table beyond this. */ //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n/***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/bflush=trees._tr_tally(s,s.strstart-1-s.prev_match,s.prev_length-MIN_MATCH);/* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */s.lookahead-=s.prev_length-1;s.prev_length-=2;do{if(++s.strstart<=max_insert){/*** INSERT_STRING(s, s.strstart, hash_head); ***/s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=s.strstart;/***/}}while(--s.prev_length!==0);s.match_available=0;s.match_length=MIN_MATCH-1;s.strstart++;if(bflush){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}}else if(s.match_available){/* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */ //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n/*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/bflush=trees._tr_tally(s,0,s.window[s.strstart-1]);if(bflush){/*** FLUSH_BLOCK_ONLY(s, 0) ***/flush_block_only(s,false);/***/}s.strstart++;s.lookahead--;if(s.strm.avail_out===0){return BS_NEED_MORE;}}else{/* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */s.match_available=1;s.strstart++;s.lookahead--;}}//Assert (flush != Z_NO_FLUSH, \"no flush?\");\nif(s.match_available){//Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n/*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/bflush=trees._tr_tally(s,0,s.window[s.strstart-1]);s.match_available=0;}s.insert=s.strstart<MIN_MATCH-1?s.strstart:MIN_MATCH-1;if(flush===Z_FINISH){/*** FLUSH_BLOCK(s, 1); ***/flush_block_only(s,true);if(s.strm.avail_out===0){return BS_FINISH_STARTED;}/***/return BS_FINISH_DONE;}if(s.last_lit){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}return BS_BLOCK_DONE;}/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */function deflate_rle(s,flush){var bflush;/* set if current block must be flushed */var prev;/* byte at distance one to match */var scan,strend;/* scan goes up to strend for length of run */var _win=s.window;for(;;){/* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */if(s.lookahead<=MAX_MATCH){fill_window(s);if(s.lookahead<=MAX_MATCH&&flush===Z_NO_FLUSH){return BS_NEED_MORE;}if(s.lookahead===0){break;}/* flush the current block */}/* See how many times the previous byte repeats */s.match_length=0;if(s.lookahead>=MIN_MATCH&&s.strstart>0){scan=s.strstart-1;prev=_win[scan];if(prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]){strend=s.strstart+MAX_MATCH;do{/*jshint noempty:false*/}while(prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]&&scan<strend);s.match_length=MAX_MATCH-(strend-scan);if(s.match_length>s.lookahead){s.match_length=s.lookahead;}}//Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n}/* Emit match if have run of MIN_MATCH or longer, else emit literal */if(s.match_length>=MIN_MATCH){//check_match(s, s.strstart, s.strstart - 1, s.match_length);\n/*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/bflush=trees._tr_tally(s,1,s.match_length-MIN_MATCH);s.lookahead-=s.match_length;s.strstart+=s.match_length;s.match_length=0;}else{/* No match, output a literal byte */ //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n/*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/bflush=trees._tr_tally(s,0,s.window[s.strstart]);s.lookahead--;s.strstart++;}if(bflush){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}}s.insert=0;if(flush===Z_FINISH){/*** FLUSH_BLOCK(s, 1); ***/flush_block_only(s,true);if(s.strm.avail_out===0){return BS_FINISH_STARTED;}/***/return BS_FINISH_DONE;}if(s.last_lit){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}return BS_BLOCK_DONE;}/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */function deflate_huff(s,flush){var bflush;/* set if current block must be flushed */for(;;){/* Make sure that we have a literal to write. */if(s.lookahead===0){fill_window(s);if(s.lookahead===0){if(flush===Z_NO_FLUSH){return BS_NEED_MORE;}break;/* flush the current block */}}/* Output a literal byte */s.match_length=0;//Tracevv((stderr,\"%c\", s->window[s->strstart]));\n/*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/bflush=trees._tr_tally(s,0,s.window[s.strstart]);s.lookahead--;s.strstart++;if(bflush){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}}s.insert=0;if(flush===Z_FINISH){/*** FLUSH_BLOCK(s, 1); ***/flush_block_only(s,true);if(s.strm.avail_out===0){return BS_FINISH_STARTED;}/***/return BS_FINISH_DONE;}if(s.last_lit){/*** FLUSH_BLOCK(s, 0); ***/flush_block_only(s,false);if(s.strm.avail_out===0){return BS_NEED_MORE;}/***/}return BS_BLOCK_DONE;}/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */function Config(good_length,max_lazy,nice_length,max_chain,func){this.good_length=good_length;this.max_lazy=max_lazy;this.nice_length=nice_length;this.max_chain=max_chain;this.func=func;}var configuration_table;configuration_table=[/*      good lazy nice chain */new Config(0,0,0,0,deflate_stored),/* 0 store only */new Config(4,4,8,4,deflate_fast),/* 1 max speed, no lazy matches */new Config(4,5,16,8,deflate_fast),/* 2 */new Config(4,6,32,32,deflate_fast),/* 3 */new Config(4,4,16,16,deflate_slow),/* 4 lazy matches */new Config(8,16,32,32,deflate_slow),/* 5 */new Config(8,16,128,128,deflate_slow),/* 6 */new Config(8,32,128,256,deflate_slow),/* 7 */new Config(32,128,258,1024,deflate_slow),/* 8 */new Config(32,258,258,4096,deflate_slow)/* 9 max compression */];/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */function lm_init(s){s.window_size=2*s.w_size;/*** CLEAR_HASH(s); ***/zero(s.head);// Fill with NIL (= 0);\n/* Set the default configuration parameters:\n   */s.max_lazy_match=configuration_table[s.level].max_lazy;s.good_match=configuration_table[s.level].good_length;s.nice_match=configuration_table[s.level].nice_length;s.max_chain_length=configuration_table[s.level].max_chain;s.strstart=0;s.block_start=0;s.lookahead=0;s.insert=0;s.match_length=s.prev_length=MIN_MATCH-1;s.match_available=0;s.ins_h=0;}function DeflateState(){this.strm=null;/* pointer back to this zlib stream */this.status=0;/* as the name implies */this.pending_buf=null;/* output still pending */this.pending_buf_size=0;/* size of pending_buf */this.pending_out=0;/* next pending byte to output to the stream */this.pending=0;/* nb of bytes in the pending buffer */this.wrap=0;/* bit 0 true for zlib, bit 1 true for gzip */this.gzhead=null;/* gzip header information to write */this.gzindex=0;/* where in extra, name, or comment */this.method=Z_DEFLATED;/* can only be DEFLATED */this.last_flush=-1;/* value of flush param for previous deflate call */this.w_size=0;/* LZ77 window size (32K by default) */this.w_bits=0;/* log2(w_size)  (8..16) */this.w_mask=0;/* w_size - 1 */this.window=null;/* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */this.window_size=0;/* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */this.prev=null;/* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */this.head=null;/* Heads of the hash chains or NIL. */this.ins_h=0;/* hash index of string to be inserted */this.hash_size=0;/* number of elements in hash table */this.hash_bits=0;/* log2(hash_size) */this.hash_mask=0;/* hash_size-1 */this.hash_shift=0;/* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */this.block_start=0;/* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */this.match_length=0;/* length of best match */this.prev_match=0;/* previous match */this.match_available=0;/* set if previous match exists */this.strstart=0;/* start of string to insert */this.match_start=0;/* start of matching string */this.lookahead=0;/* number of valid bytes ahead in window */this.prev_length=0;/* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */this.max_chain_length=0;/* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */this.max_lazy_match=0;/* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */ // That's alias to max_lazy_match, don't use directly\n//this.max_insert_length = 0;\n/* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */this.level=0;/* compression level (1..9) */this.strategy=0;/* favor or force Huffman coding*/this.good_match=0;/* Use a faster search when the previous match is longer than this */this.nice_match=0;/* Stop searching when current match exceeds this */ /* used by trees.c: */ /* Didn't use ct_data typedef below to suppress compiler warning */ // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n// struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n// struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n// Use flat array of DOUBLE size, with interleaved fata,\n// because JS does not support effective\nthis.dyn_ltree=new utils.Buf16(HEAP_SIZE*2);this.dyn_dtree=new utils.Buf16((2*D_CODES+1)*2);this.bl_tree=new utils.Buf16((2*BL_CODES+1)*2);zero(this.dyn_ltree);zero(this.dyn_dtree);zero(this.bl_tree);this.l_desc=null;/* desc. for literal tree */this.d_desc=null;/* desc. for distance tree */this.bl_desc=null;/* desc. for bit length tree */ //ush bl_count[MAX_BITS+1];\nthis.bl_count=new utils.Buf16(MAX_BITS+1);/* number of codes at each bit length for an optimal tree */ //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\nthis.heap=new utils.Buf16(2*L_CODES+1);/* heap used to build the Huffman trees */zero(this.heap);this.heap_len=0;/* number of elements in the heap */this.heap_max=0;/* element of largest frequency */ /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */this.depth=new utils.Buf16(2*L_CODES+1);//uch depth[2*L_CODES+1];\nzero(this.depth);/* Depth of each subtree used as tie breaker for trees of equal frequency\n   */this.l_buf=0;/* buffer index for literals or lengths */this.lit_bufsize=0;/* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */this.last_lit=0;/* running index in l_buf */this.d_buf=0;/* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */this.opt_len=0;/* bit length of current block with optimal trees */this.static_len=0;/* bit length of current block with static trees */this.matches=0;/* number of string matches in current block */this.insert=0;/* bytes at end of window left to insert */this.bi_buf=0;/* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */this.bi_valid=0;/* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */ // Used for window memory init. We safely ignore it for JS. That makes\n// sense only for pointers and memory check tools.\n//this.high_water = 0;\n/* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */}function deflateResetKeep(strm){var s;if(!strm||!strm.state){return err(strm,Z_STREAM_ERROR);}strm.total_in=strm.total_out=0;strm.data_type=Z_UNKNOWN;s=strm.state;s.pending=0;s.pending_out=0;if(s.wrap<0){s.wrap=-s.wrap;/* was made negative by deflate(..., Z_FINISH); */}s.status=s.wrap?INIT_STATE:BUSY_STATE;strm.adler=s.wrap===2?0// crc32(0, Z_NULL, 0)\n:1;// adler32(0, Z_NULL, 0)\ns.last_flush=Z_NO_FLUSH;trees._tr_init(s);return Z_OK;}function deflateReset(strm){var ret=deflateResetKeep(strm);if(ret===Z_OK){lm_init(strm.state);}return ret;}function deflateSetHeader(strm,head){if(!strm||!strm.state){return Z_STREAM_ERROR;}if(strm.state.wrap!==2){return Z_STREAM_ERROR;}strm.state.gzhead=head;return Z_OK;}function deflateInit2(strm,level,method,windowBits,memLevel,strategy){if(!strm){// === Z_NULL\nreturn Z_STREAM_ERROR;}var wrap=1;if(level===Z_DEFAULT_COMPRESSION){level=6;}if(windowBits<0){/* suppress zlib wrapper */wrap=0;windowBits=-windowBits;}else if(windowBits>15){wrap=2;/* write gzip wrapper instead */windowBits-=16;}if(memLevel<1||memLevel>MAX_MEM_LEVEL||method!==Z_DEFLATED||windowBits<8||windowBits>15||level<0||level>9||strategy<0||strategy>Z_FIXED){return err(strm,Z_STREAM_ERROR);}if(windowBits===8){windowBits=9;}/* until 256-byte window bug fixed */var s=new DeflateState();strm.state=s;s.strm=strm;s.wrap=wrap;s.gzhead=null;s.w_bits=windowBits;s.w_size=1<<s.w_bits;s.w_mask=s.w_size-1;s.hash_bits=memLevel+7;s.hash_size=1<<s.hash_bits;s.hash_mask=s.hash_size-1;s.hash_shift=~~((s.hash_bits+MIN_MATCH-1)/MIN_MATCH);s.window=new utils.Buf8(s.w_size*2);s.head=new utils.Buf16(s.hash_size);s.prev=new utils.Buf16(s.w_size);// Don't need mem init magic for JS.\n//s.high_water = 0;  /* nothing written to s->window yet */\ns.lit_bufsize=1<<memLevel+6;/* 16K elements by default */s.pending_buf_size=s.lit_bufsize*4;//overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n//s->pending_buf = (uchf *) overlay;\ns.pending_buf=new utils.Buf8(s.pending_buf_size);// It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n//s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\ns.d_buf=1*s.lit_bufsize;//s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\ns.l_buf=(1+2)*s.lit_bufsize;s.level=level;s.strategy=strategy;s.method=method;return deflateReset(strm);}function deflateInit(strm,level){return deflateInit2(strm,level,Z_DEFLATED,MAX_WBITS,DEF_MEM_LEVEL,Z_DEFAULT_STRATEGY);}function deflate(strm,flush){var old_flush,s;var beg,val;// for gzip header write only\nif(!strm||!strm.state||flush>Z_BLOCK||flush<0){return strm?err(strm,Z_STREAM_ERROR):Z_STREAM_ERROR;}s=strm.state;if(!strm.output||!strm.input&&strm.avail_in!==0||s.status===FINISH_STATE&&flush!==Z_FINISH){return err(strm,strm.avail_out===0?Z_BUF_ERROR:Z_STREAM_ERROR);}s.strm=strm;/* just in case */old_flush=s.last_flush;s.last_flush=flush;/* Write the header */if(s.status===INIT_STATE){if(s.wrap===2){// GZIP header\nstrm.adler=0;//crc32(0L, Z_NULL, 0);\nput_byte(s,31);put_byte(s,139);put_byte(s,8);if(!s.gzhead){// s->gzhead == Z_NULL\nput_byte(s,0);put_byte(s,0);put_byte(s,0);put_byte(s,0);put_byte(s,0);put_byte(s,s.level===9?2:s.strategy>=Z_HUFFMAN_ONLY||s.level<2?4:0);put_byte(s,OS_CODE);s.status=BUSY_STATE;}else{put_byte(s,(s.gzhead.text?1:0)+(s.gzhead.hcrc?2:0)+(!s.gzhead.extra?0:4)+(!s.gzhead.name?0:8)+(!s.gzhead.comment?0:16));put_byte(s,s.gzhead.time&0xff);put_byte(s,s.gzhead.time>>8&0xff);put_byte(s,s.gzhead.time>>16&0xff);put_byte(s,s.gzhead.time>>24&0xff);put_byte(s,s.level===9?2:s.strategy>=Z_HUFFMAN_ONLY||s.level<2?4:0);put_byte(s,s.gzhead.os&0xff);if(s.gzhead.extra&&s.gzhead.extra.length){put_byte(s,s.gzhead.extra.length&0xff);put_byte(s,s.gzhead.extra.length>>8&0xff);}if(s.gzhead.hcrc){strm.adler=crc32(strm.adler,s.pending_buf,s.pending,0);}s.gzindex=0;s.status=EXTRA_STATE;}}else// DEFLATE header\n{var header=Z_DEFLATED+(s.w_bits-8<<4)<<8;var level_flags=-1;if(s.strategy>=Z_HUFFMAN_ONLY||s.level<2){level_flags=0;}else if(s.level<6){level_flags=1;}else if(s.level===6){level_flags=2;}else{level_flags=3;}header|=level_flags<<6;if(s.strstart!==0){header|=PRESET_DICT;}header+=31-header%31;s.status=BUSY_STATE;putShortMSB(s,header);/* Save the adler32 of the preset dictionary: */if(s.strstart!==0){putShortMSB(s,strm.adler>>>16);putShortMSB(s,strm.adler&0xffff);}strm.adler=1;// adler32(0L, Z_NULL, 0);\n}}//#ifdef GZIP\nif(s.status===EXTRA_STATE){if(s.gzhead.extra/* != Z_NULL*/){beg=s.pending;/* start of bytes to update crc */while(s.gzindex<(s.gzhead.extra.length&0xffff)){if(s.pending===s.pending_buf_size){if(s.gzhead.hcrc&&s.pending>beg){strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}flush_pending(strm);beg=s.pending;if(s.pending===s.pending_buf_size){break;}}put_byte(s,s.gzhead.extra[s.gzindex]&0xff);s.gzindex++;}if(s.gzhead.hcrc&&s.pending>beg){strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}if(s.gzindex===s.gzhead.extra.length){s.gzindex=0;s.status=NAME_STATE;}}else{s.status=NAME_STATE;}}if(s.status===NAME_STATE){if(s.gzhead.name/* != Z_NULL*/){beg=s.pending;/* start of bytes to update crc */ //int val;\ndo{if(s.pending===s.pending_buf_size){if(s.gzhead.hcrc&&s.pending>beg){strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}flush_pending(strm);beg=s.pending;if(s.pending===s.pending_buf_size){val=1;break;}}// JS specific: little magic to add zero terminator to end of string\nif(s.gzindex<s.gzhead.name.length){val=s.gzhead.name.charCodeAt(s.gzindex++)&0xff;}else{val=0;}put_byte(s,val);}while(val!==0);if(s.gzhead.hcrc&&s.pending>beg){strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}if(val===0){s.gzindex=0;s.status=COMMENT_STATE;}}else{s.status=COMMENT_STATE;}}if(s.status===COMMENT_STATE){if(s.gzhead.comment/* != Z_NULL*/){beg=s.pending;/* start of bytes to update crc */ //int val;\ndo{if(s.pending===s.pending_buf_size){if(s.gzhead.hcrc&&s.pending>beg){strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}flush_pending(strm);beg=s.pending;if(s.pending===s.pending_buf_size){val=1;break;}}// JS specific: little magic to add zero terminator to end of string\nif(s.gzindex<s.gzhead.comment.length){val=s.gzhead.comment.charCodeAt(s.gzindex++)&0xff;}else{val=0;}put_byte(s,val);}while(val!==0);if(s.gzhead.hcrc&&s.pending>beg){strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}if(val===0){s.status=HCRC_STATE;}}else{s.status=HCRC_STATE;}}if(s.status===HCRC_STATE){if(s.gzhead.hcrc){if(s.pending+2>s.pending_buf_size){flush_pending(strm);}if(s.pending+2<=s.pending_buf_size){put_byte(s,strm.adler&0xff);put_byte(s,strm.adler>>8&0xff);strm.adler=0;//crc32(0L, Z_NULL, 0);\ns.status=BUSY_STATE;}}else{s.status=BUSY_STATE;}}//#endif\n/* Flush as much pending output as possible */if(s.pending!==0){flush_pending(strm);if(strm.avail_out===0){/* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */s.last_flush=-1;return Z_OK;}/* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */}else if(strm.avail_in===0&&rank(flush)<=rank(old_flush)&&flush!==Z_FINISH){return err(strm,Z_BUF_ERROR);}/* User must not provide more input after the first FINISH: */if(s.status===FINISH_STATE&&strm.avail_in!==0){return err(strm,Z_BUF_ERROR);}/* Start a new block or continue the current one.\n   */if(strm.avail_in!==0||s.lookahead!==0||flush!==Z_NO_FLUSH&&s.status!==FINISH_STATE){var bstate=s.strategy===Z_HUFFMAN_ONLY?deflate_huff(s,flush):s.strategy===Z_RLE?deflate_rle(s,flush):configuration_table[s.level].func(s,flush);if(bstate===BS_FINISH_STARTED||bstate===BS_FINISH_DONE){s.status=FINISH_STATE;}if(bstate===BS_NEED_MORE||bstate===BS_FINISH_STARTED){if(strm.avail_out===0){s.last_flush=-1;/* avoid BUF_ERROR next call, see above */}return Z_OK;/* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */}if(bstate===BS_BLOCK_DONE){if(flush===Z_PARTIAL_FLUSH){trees._tr_align(s);}else if(flush!==Z_BLOCK){/* FULL_FLUSH or SYNC_FLUSH */trees._tr_stored_block(s,0,0,false);/* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */if(flush===Z_FULL_FLUSH){/*** CLEAR_HASH(s); ***/ /* forget history */zero(s.head);// Fill with NIL (= 0);\nif(s.lookahead===0){s.strstart=0;s.block_start=0;s.insert=0;}}}flush_pending(strm);if(strm.avail_out===0){s.last_flush=-1;/* avoid BUF_ERROR at next call, see above */return Z_OK;}}}//Assert(strm->avail_out > 0, \"bug2\");\n//if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\nif(flush!==Z_FINISH){return Z_OK;}if(s.wrap<=0){return Z_STREAM_END;}/* Write the trailer */if(s.wrap===2){put_byte(s,strm.adler&0xff);put_byte(s,strm.adler>>8&0xff);put_byte(s,strm.adler>>16&0xff);put_byte(s,strm.adler>>24&0xff);put_byte(s,strm.total_in&0xff);put_byte(s,strm.total_in>>8&0xff);put_byte(s,strm.total_in>>16&0xff);put_byte(s,strm.total_in>>24&0xff);}else{putShortMSB(s,strm.adler>>>16);putShortMSB(s,strm.adler&0xffff);}flush_pending(strm);/* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */if(s.wrap>0){s.wrap=-s.wrap;}/* write the trailer only once! */return s.pending!==0?Z_OK:Z_STREAM_END;}function deflateEnd(strm){var status;if(!strm/*== Z_NULL*/||!strm.state/*== Z_NULL*/){return Z_STREAM_ERROR;}status=strm.state.status;if(status!==INIT_STATE&&status!==EXTRA_STATE&&status!==NAME_STATE&&status!==COMMENT_STATE&&status!==HCRC_STATE&&status!==BUSY_STATE&&status!==FINISH_STATE){return err(strm,Z_STREAM_ERROR);}strm.state=null;return status===BUSY_STATE?err(strm,Z_DATA_ERROR):Z_OK;}/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */function deflateSetDictionary(strm,dictionary){var dictLength=dictionary.length;var s;var str,n;var wrap;var avail;var next;var input;var tmpDict;if(!strm/*== Z_NULL*/||!strm.state/*== Z_NULL*/){return Z_STREAM_ERROR;}s=strm.state;wrap=s.wrap;if(wrap===2||wrap===1&&s.status!==INIT_STATE||s.lookahead){return Z_STREAM_ERROR;}/* when using zlib wrappers, compute Adler-32 for provided dictionary */if(wrap===1){/* adler32(strm->adler, dictionary, dictLength); */strm.adler=adler32(strm.adler,dictionary,dictLength,0);}s.wrap=0;/* avoid computing Adler-32 in read_buf */ /* if dictionary would fill window, just replace the history */if(dictLength>=s.w_size){if(wrap===0){/* already empty otherwise */ /*** CLEAR_HASH(s); ***/zero(s.head);// Fill with NIL (= 0);\ns.strstart=0;s.block_start=0;s.insert=0;}/* use the tail */ // dictionary = dictionary.slice(dictLength - s.w_size);\ntmpDict=new utils.Buf8(s.w_size);utils.arraySet(tmpDict,dictionary,dictLength-s.w_size,s.w_size,0);dictionary=tmpDict;dictLength=s.w_size;}/* insert dictionary into window and hash */avail=strm.avail_in;next=strm.next_in;input=strm.input;strm.avail_in=dictLength;strm.next_in=0;strm.input=dictionary;fill_window(s);while(s.lookahead>=MIN_MATCH){str=s.strstart;n=s.lookahead-(MIN_MATCH-1);do{/* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */s.ins_h=(s.ins_h<<s.hash_shift^s.window[str+MIN_MATCH-1])&s.hash_mask;s.prev[str&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=str;str++;}while(--n);s.strstart=str;s.lookahead=MIN_MATCH-1;fill_window(s);}s.strstart+=s.lookahead;s.block_start=s.strstart;s.insert=s.lookahead;s.lookahead=0;s.match_length=s.prev_length=MIN_MATCH-1;s.match_available=0;strm.next_in=next;strm.input=input;strm.avail_in=avail;s.wrap=wrap;return Z_OK;}exports.deflateInit=deflateInit;exports.deflateInit2=deflateInit2;exports.deflateReset=deflateReset;exports.deflateResetKeep=deflateResetKeep;exports.deflateSetHeader=deflateSetHeader;exports.deflate=deflate;exports.deflateEnd=deflateEnd;exports.deflateSetDictionary=deflateSetDictionary;exports.deflateInfo='pako deflate (from Nodeca project)';/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/},{\"../utils/common\":209,\"./adler32\":211,\"./crc32\":213,\"./messages\":219,\"./trees\":220}],215:[function(_dereq_,module,exports){'use strict';function GZheader(){/* true if compressed data believed to be text */this.text=0;/* modification time */this.time=0;/* extra flags (not used when writing a gzip file) */this.xflags=0;/* operating system */this.os=0;/* pointer to extra field or Z_NULL if none */this.extra=null;/* extra field length (valid if extra != Z_NULL) */this.extra_len=0;// Actually, we don't need it in JS,\n// but leave for few code modifications\n//\n// Setup limits is not necessary because in js we should not preallocate memory\n// for inflate use constant limit in 65536 bytes\n//\n/* space at extra (only when reading header) */ // this.extra_max  = 0;\n/* pointer to zero-terminated file name or Z_NULL */this.name='';/* space at name (only when reading header) */ // this.name_max   = 0;\n/* pointer to zero-terminated comment or Z_NULL */this.comment='';/* space at comment (only when reading header) */ // this.comm_max   = 0;\n/* true if there was or will be a header crc */this.hcrc=0;/* true when done reading gzip header (not used when writing a gzip file) */this.done=false;}module.exports=GZheader;},{}],216:[function(_dereq_,module,exports){'use strict';// See state defs from inflate.js\nvar BAD=30;/* got a data error -- remain here until reset */var TYPE=12;/* i: waiting for type bits, including last-flag bit */ /*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */module.exports=function inflate_fast(strm,start){var state;var _in;/* local strm.input */var last;/* have enough input while in < last */var _out;/* local strm.output */var beg;/* inflate()'s initial strm.output */var end;/* while out < end, enough space available */ //#ifdef INFLATE_STRICT\nvar dmax;/* maximum distance from zlib header */ //#endif\nvar wsize;/* window size or zero if not using window */var whave;/* valid bytes in the window */var wnext;/* window write index */ // Use `s_window` instead `window`, avoid conflict with instrumentation tools\nvar s_window;/* allocated sliding window, if wsize != 0 */var hold;/* local strm.hold */var bits;/* local strm.bits */var lcode;/* local strm.lencode */var dcode;/* local strm.distcode */var lmask;/* mask for first level of length codes */var dmask;/* mask for first level of distance codes */var here;/* retrieved table entry */var op;/* code bits, operation, extra bits, or */ /*  window position, window bytes to copy */var len;/* match length, unused bytes */var dist;/* match distance */var from;/* where to copy match from */var from_source;var input,output;// JS specific, because we have no pointers\n/* copy state to local variables */state=strm.state;//here = state.here;\n_in=strm.next_in;input=strm.input;last=_in+(strm.avail_in-5);_out=strm.next_out;output=strm.output;beg=_out-(start-strm.avail_out);end=_out+(strm.avail_out-257);//#ifdef INFLATE_STRICT\ndmax=state.dmax;//#endif\nwsize=state.wsize;whave=state.whave;wnext=state.wnext;s_window=state.window;hold=state.hold;bits=state.bits;lcode=state.lencode;dcode=state.distcode;lmask=(1<<state.lenbits)-1;dmask=(1<<state.distbits)-1;/* decode literals and length/distances until end-of-block or not enough\n     input data or output space */top:do{if(bits<15){hold+=input[_in++]<<bits;bits+=8;hold+=input[_in++]<<bits;bits+=8;}here=lcode[hold&lmask];dolen:for(;;){// Goto emulation\nop=here>>>24/*here.bits*/;hold>>>=op;bits-=op;op=here>>>16&0xff/*here.op*/;if(op===0){/* literal */ //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n//        \"inflate:         literal '%c'\\n\" :\n//        \"inflate:         literal 0x%02x\\n\", here.val));\noutput[_out++]=here&0xffff/*here.val*/;}else if(op&16){/* length base */len=here&0xffff/*here.val*/;op&=15;/* number of extra bits */if(op){if(bits<op){hold+=input[_in++]<<bits;bits+=8;}len+=hold&(1<<op)-1;hold>>>=op;bits-=op;}//Tracevv((stderr, \"inflate:         length %u\\n\", len));\nif(bits<15){hold+=input[_in++]<<bits;bits+=8;hold+=input[_in++]<<bits;bits+=8;}here=dcode[hold&dmask];dodist:for(;;){// goto emulation\nop=here>>>24/*here.bits*/;hold>>>=op;bits-=op;op=here>>>16&0xff/*here.op*/;if(op&16){/* distance base */dist=here&0xffff/*here.val*/;op&=15;/* number of extra bits */if(bits<op){hold+=input[_in++]<<bits;bits+=8;if(bits<op){hold+=input[_in++]<<bits;bits+=8;}}dist+=hold&(1<<op)-1;//#ifdef INFLATE_STRICT\nif(dist>dmax){strm.msg='invalid distance too far back';state.mode=BAD;break top;}//#endif\nhold>>>=op;bits-=op;//Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\nop=_out-beg;/* max distance in output */if(dist>op){/* see if copy from window */op=dist-op;/* distance back in window */if(op>whave){if(state.sane){strm.msg='invalid distance too far back';state.mode=BAD;break top;}// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n}from=0;// window index\nfrom_source=s_window;if(wnext===0){/* very common case */from+=wsize-op;if(op<len){/* some from window */len-=op;do{output[_out++]=s_window[from++];}while(--op);from=_out-dist;/* rest from output */from_source=output;}}else if(wnext<op){/* wrap around window */from+=wsize+wnext-op;op-=wnext;if(op<len){/* some from end of window */len-=op;do{output[_out++]=s_window[from++];}while(--op);from=0;if(wnext<len){/* some from start of window */op=wnext;len-=op;do{output[_out++]=s_window[from++];}while(--op);from=_out-dist;/* rest from output */from_source=output;}}}else{/* contiguous in window */from+=wnext-op;if(op<len){/* some from window */len-=op;do{output[_out++]=s_window[from++];}while(--op);from=_out-dist;/* rest from output */from_source=output;}}while(len>2){output[_out++]=from_source[from++];output[_out++]=from_source[from++];output[_out++]=from_source[from++];len-=3;}if(len){output[_out++]=from_source[from++];if(len>1){output[_out++]=from_source[from++];}}}else{from=_out-dist;/* copy direct from output */do{/* minimum length is three */output[_out++]=output[from++];output[_out++]=output[from++];output[_out++]=output[from++];len-=3;}while(len>2);if(len){output[_out++]=output[from++];if(len>1){output[_out++]=output[from++];}}}}else if((op&64)===0){/* 2nd level distance code */here=dcode[(here&0xffff)+(/*here.val*/hold&(1<<op)-1)];continue dodist;}else{strm.msg='invalid distance code';state.mode=BAD;break top;}break;// need to emulate goto via \"continue\"\n}}else if((op&64)===0){/* 2nd level length code */here=lcode[(here&0xffff)+(/*here.val*/hold&(1<<op)-1)];continue dolen;}else if(op&32){/* end-of-block */ //Tracevv((stderr, \"inflate:         end of block\\n\"));\nstate.mode=TYPE;break top;}else{strm.msg='invalid literal/length code';state.mode=BAD;break top;}break;// need to emulate goto via \"continue\"\n}}while(_in<last&&_out<end);/* return unused bytes (on entry, bits < 8, so in won't go too far back) */len=bits>>3;_in-=len;bits-=len<<3;hold&=(1<<bits)-1;/* update state and return */strm.next_in=_in;strm.next_out=_out;strm.avail_in=_in<last?5+(last-_in):5-(_in-last);strm.avail_out=_out<end?257+(end-_out):257-(_out-end);state.hold=hold;state.bits=bits;return;};},{}],217:[function(_dereq_,module,exports){'use strict';var utils=_dereq_('../utils/common');var adler32=_dereq_('./adler32');var crc32=_dereq_('./crc32');var inflate_fast=_dereq_('./inffast');var inflate_table=_dereq_('./inftrees');var CODES=0;var LENS=1;var DISTS=2;/* Public constants ==========================================================*/ /* ===========================================================================*/ /* Allowed flush values; see deflate() and inflate() below for details */ //var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH=4;var Z_BLOCK=5;var Z_TREES=6;/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */var Z_OK=0;var Z_STREAM_END=1;var Z_NEED_DICT=2;//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR=-2;var Z_DATA_ERROR=-3;var Z_MEM_ERROR=-4;var Z_BUF_ERROR=-5;//var Z_VERSION_ERROR = -6;\n/* The deflate compression method */var Z_DEFLATED=8;/* STATES ====================================================================*/ /* ===========================================================================*/var HEAD=1;/* i: waiting for magic header */var FLAGS=2;/* i: waiting for method and flags (gzip) */var TIME=3;/* i: waiting for modification time (gzip) */var OS=4;/* i: waiting for extra flags and operating system (gzip) */var EXLEN=5;/* i: waiting for extra length (gzip) */var EXTRA=6;/* i: waiting for extra bytes (gzip) */var NAME=7;/* i: waiting for end of file name (gzip) */var COMMENT=8;/* i: waiting for end of comment (gzip) */var HCRC=9;/* i: waiting for header crc (gzip) */var DICTID=10;/* i: waiting for dictionary check value */var DICT=11;/* waiting for inflateSetDictionary() call */var TYPE=12;/* i: waiting for type bits, including last-flag bit */var TYPEDO=13;/* i: same, but skip check to exit inflate on new block */var STORED=14;/* i: waiting for stored size (length and complement) */var COPY_=15;/* i/o: same as COPY below, but only first time in */var COPY=16;/* i/o: waiting for input or output to copy stored block */var TABLE=17;/* i: waiting for dynamic block table lengths */var LENLENS=18;/* i: waiting for code length code lengths */var CODELENS=19;/* i: waiting for length/lit and distance code lengths */var LEN_=20;/* i: same as LEN below, but only first time in */var LEN=21;/* i: waiting for length/lit/eob code */var LENEXT=22;/* i: waiting for length extra bits */var DIST=23;/* i: waiting for distance code */var DISTEXT=24;/* i: waiting for distance extra bits */var MATCH=25;/* o: waiting for output space to copy string */var LIT=26;/* o: waiting for output space to write literal */var CHECK=27;/* i: waiting for 32-bit check value */var LENGTH=28;/* i: waiting for 32-bit length (gzip) */var DONE=29;/* finished check, done -- remain here until reset */var BAD=30;/* got a data error -- remain here until reset */var MEM=31;/* got an inflate() memory error -- remain here until reset */var SYNC=32;/* looking for synchronization bytes to restart inflate() */ /* ===========================================================================*/var ENOUGH_LENS=852;var ENOUGH_DISTS=592;//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\nvar MAX_WBITS=15;/* 32K LZ77 window */var DEF_WBITS=MAX_WBITS;function zswap32(q){return(q>>>24&0xff)+(q>>>8&0xff00)+((q&0xff00)<<8)+((q&0xff)<<24);}function InflateState(){this.mode=0;/* current inflate mode */this.last=false;/* true if processing last block */this.wrap=0;/* bit 0 true for zlib, bit 1 true for gzip */this.havedict=false;/* true if dictionary provided */this.flags=0;/* gzip header method and flags (0 if zlib) */this.dmax=0;/* zlib header max distance (INFLATE_STRICT) */this.check=0;/* protected copy of check value */this.total=0;/* protected copy of output count */ // TODO: may be {}\nthis.head=null;/* where to save gzip header information */ /* sliding window */this.wbits=0;/* log base 2 of requested window size */this.wsize=0;/* window size or zero if not using window */this.whave=0;/* valid bytes in the window */this.wnext=0;/* window write index */this.window=null;/* allocated sliding window, if needed */ /* bit accumulator */this.hold=0;/* input bit accumulator */this.bits=0;/* number of bits in \"in\" */ /* for string and stored block copying */this.length=0;/* literal or length of data to copy */this.offset=0;/* distance back to copy string from */ /* for table and code decoding */this.extra=0;/* extra bits needed */ /* fixed and dynamic code tables */this.lencode=null;/* starting table for length/literal codes */this.distcode=null;/* starting table for distance codes */this.lenbits=0;/* index bits for lencode */this.distbits=0;/* index bits for distcode */ /* dynamic table building */this.ncode=0;/* number of code length code lengths */this.nlen=0;/* number of length code lengths */this.ndist=0;/* number of distance code lengths */this.have=0;/* number of code lengths in lens[] */this.next=null;/* next available space in codes[] */this.lens=new utils.Buf16(320);/* temporary storage for code lengths */this.work=new utils.Buf16(288);/* work area for code table building */ /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */ //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\nthis.lendyn=null;/* dynamic table for length/literal codes (JS specific) */this.distdyn=null;/* dynamic table for distance codes (JS specific) */this.sane=0;/* if false, allow invalid distance too far */this.back=0;/* bits back of last unprocessed length/lit */this.was=0;/* initial length of match */}function inflateResetKeep(strm){var state;if(!strm||!strm.state){return Z_STREAM_ERROR;}state=strm.state;strm.total_in=strm.total_out=state.total=0;strm.msg='';/*Z_NULL*/if(state.wrap){/* to support ill-conceived Java test suite */strm.adler=state.wrap&1;}state.mode=HEAD;state.last=0;state.havedict=0;state.dmax=32768;state.head=null/*Z_NULL*/;state.hold=0;state.bits=0;//state.lencode = state.distcode = state.next = state.codes;\nstate.lencode=state.lendyn=new utils.Buf32(ENOUGH_LENS);state.distcode=state.distdyn=new utils.Buf32(ENOUGH_DISTS);state.sane=1;state.back=-1;//Tracev((stderr, \"inflate: reset\\n\"));\nreturn Z_OK;}function inflateReset(strm){var state;if(!strm||!strm.state){return Z_STREAM_ERROR;}state=strm.state;state.wsize=0;state.whave=0;state.wnext=0;return inflateResetKeep(strm);}function inflateReset2(strm,windowBits){var wrap;var state;/* get the state */if(!strm||!strm.state){return Z_STREAM_ERROR;}state=strm.state;/* extract wrap request from windowBits parameter */if(windowBits<0){wrap=0;windowBits=-windowBits;}else{wrap=(windowBits>>4)+1;if(windowBits<48){windowBits&=15;}}/* set number of window bits, free window if different */if(windowBits&&(windowBits<8||windowBits>15)){return Z_STREAM_ERROR;}if(state.window!==null&&state.wbits!==windowBits){state.window=null;}/* update state and reset the rest of it */state.wrap=wrap;state.wbits=windowBits;return inflateReset(strm);}function inflateInit2(strm,windowBits){var ret;var state;if(!strm){return Z_STREAM_ERROR;}//strm.msg = Z_NULL;                 /* in case we return an error */\nstate=new InflateState();//if (state === Z_NULL) return Z_MEM_ERROR;\n//Tracev((stderr, \"inflate: allocated\\n\"));\nstrm.state=state;state.window=null/*Z_NULL*/;ret=inflateReset2(strm,windowBits);if(ret!==Z_OK){strm.state=null/*Z_NULL*/;}return ret;}function inflateInit(strm){return inflateInit2(strm,DEF_WBITS);}/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */var virgin=true;var lenfix,distfix;// We have no pointers in JS, so keep tables separate\nfunction fixedtables(state){/* build fixed huffman tables if first call (may not be thread safe) */if(virgin){var sym;lenfix=new utils.Buf32(512);distfix=new utils.Buf32(32);/* literal/length table */sym=0;while(sym<144){state.lens[sym++]=8;}while(sym<256){state.lens[sym++]=9;}while(sym<280){state.lens[sym++]=7;}while(sym<288){state.lens[sym++]=8;}inflate_table(LENS,state.lens,0,288,lenfix,0,state.work,{bits:9});/* distance table */sym=0;while(sym<32){state.lens[sym++]=5;}inflate_table(DISTS,state.lens,0,32,distfix,0,state.work,{bits:5});/* do this just once */virgin=false;}state.lencode=lenfix;state.lenbits=9;state.distcode=distfix;state.distbits=5;}/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */function updatewindow(strm,src,end,copy){var dist;var state=strm.state;/* if it hasn't been done already, allocate space for the window */if(state.window===null){state.wsize=1<<state.wbits;state.wnext=0;state.whave=0;state.window=new utils.Buf8(state.wsize);}/* copy state->wsize or less output bytes into the circular window */if(copy>=state.wsize){utils.arraySet(state.window,src,end-state.wsize,state.wsize,0);state.wnext=0;state.whave=state.wsize;}else{dist=state.wsize-state.wnext;if(dist>copy){dist=copy;}//zmemcpy(state->window + state->wnext, end - copy, dist);\nutils.arraySet(state.window,src,end-copy,dist,state.wnext);copy-=dist;if(copy){//zmemcpy(state->window, end - copy, copy);\nutils.arraySet(state.window,src,end-copy,copy,0);state.wnext=copy;state.whave=state.wsize;}else{state.wnext+=dist;if(state.wnext===state.wsize){state.wnext=0;}if(state.whave<state.wsize){state.whave+=dist;}}}return 0;}function inflate(strm,flush){var state;var input,output;// input/output buffers\nvar next;/* next input INDEX */var put;/* next output INDEX */var have,left;/* available input and output */var hold;/* bit buffer */var bits;/* bits in bit buffer */var _in,_out;/* save starting available input and output */var copy;/* number of stored or match bytes to copy */var from;/* where to copy match bytes from */var from_source;var here=0;/* current decoding table entry */var here_bits,here_op,here_val;// paked \"here\" denormalized (JS specific)\n//var last;                   /* parent table entry */\nvar last_bits,last_op,last_val;// paked \"last\" denormalized (JS specific)\nvar len;/* length to copy for repeats, bits to drop */var ret;/* return code */var hbuf=new utils.Buf8(4);/* buffer for gzip header crc calculation */var opts;var n;// temporary var for NEED_BITS\nvar order=/* permutation of code lengths */[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!strm||!strm.state||!strm.output||!strm.input&&strm.avail_in!==0){return Z_STREAM_ERROR;}state=strm.state;if(state.mode===TYPE){state.mode=TYPEDO;}/* skip check */ //--- LOAD() ---\nput=strm.next_out;output=strm.output;left=strm.avail_out;next=strm.next_in;input=strm.input;have=strm.avail_in;hold=state.hold;bits=state.bits;//---\n_in=have;_out=left;ret=Z_OK;inf_leave:// goto emulation\nfor(;;){switch(state.mode){case HEAD:if(state.wrap===0){state.mode=TYPEDO;break;}//=== NEEDBITS(16);\nwhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nif(state.wrap&2&&hold===0x8b1f){/* gzip header */state.check=0/*crc32(0L, Z_NULL, 0)*/;//=== CRC2(state.check, hold);\nhbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//\n//=== INITBITS();\nhold=0;bits=0;//===//\nstate.mode=FLAGS;break;}state.flags=0;/* expect zlib header */if(state.head){state.head.done=false;}if(!(state.wrap&1)||/* check if zlib header allowed */(((hold&0xff)<</*BITS(8)*/8)+(hold>>8))%31){strm.msg='incorrect header check';state.mode=BAD;break;}if((hold&0x0f)!==/*BITS(4)*/Z_DEFLATED){strm.msg='unknown compression method';state.mode=BAD;break;}//--- DROPBITS(4) ---//\nhold>>>=4;bits-=4;//---//\nlen=(hold&0x0f)+/*BITS(4)*/8;if(state.wbits===0){state.wbits=len;}else if(len>state.wbits){strm.msg='invalid window size';state.mode=BAD;break;}state.dmax=1<<len;//Tracev((stderr, \"inflate:   zlib header ok\\n\"));\nstrm.adler=state.check=1/*adler32(0L, Z_NULL, 0)*/;state.mode=hold&0x200?DICTID:TYPE;//=== INITBITS();\nhold=0;bits=0;//===//\nbreak;case FLAGS://=== NEEDBITS(16); */\nwhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.flags=hold;if((state.flags&0xff)!==Z_DEFLATED){strm.msg='unknown compression method';state.mode=BAD;break;}if(state.flags&0xe000){strm.msg='unknown header flags set';state.mode=BAD;break;}if(state.head){state.head.text=hold>>8&1;}if(state.flags&0x0200){//=== CRC2(state.check, hold);\nhbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//\n}//=== INITBITS();\nhold=0;bits=0;//===//\nstate.mode=TIME;/* falls through */case TIME://=== NEEDBITS(32); */\nwhile(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nif(state.head){state.head.time=hold;}if(state.flags&0x0200){//=== CRC4(state.check, hold)\nhbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;hbuf[2]=hold>>>16&0xff;hbuf[3]=hold>>>24&0xff;state.check=crc32(state.check,hbuf,4,0);//===\n}//=== INITBITS();\nhold=0;bits=0;//===//\nstate.mode=OS;/* falls through */case OS://=== NEEDBITS(16); */\nwhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nif(state.head){state.head.xflags=hold&0xff;state.head.os=hold>>8;}if(state.flags&0x0200){//=== CRC2(state.check, hold);\nhbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//\n}//=== INITBITS();\nhold=0;bits=0;//===//\nstate.mode=EXLEN;/* falls through */case EXLEN:if(state.flags&0x0400){//=== NEEDBITS(16); */\nwhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.length=hold;if(state.head){state.head.extra_len=hold;}if(state.flags&0x0200){//=== CRC2(state.check, hold);\nhbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//\n}//=== INITBITS();\nhold=0;bits=0;//===//\n}else if(state.head){state.head.extra=null/*Z_NULL*/;}state.mode=EXTRA;/* falls through */case EXTRA:if(state.flags&0x0400){copy=state.length;if(copy>have){copy=have;}if(copy){if(state.head){len=state.head.extra_len-state.length;if(!state.head.extra){// Use untyped array for more conveniend processing later\nstate.head.extra=new Array(state.head.extra_len);}utils.arraySet(state.head.extra,input,next,// extra field is limited to 65536 bytes\n// - no need for additional size check\ncopy,/*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/len);//zmemcpy(state.head.extra + len, next,\n//        len + copy > state.head.extra_max ?\n//        state.head.extra_max - len : copy);\n}if(state.flags&0x0200){state.check=crc32(state.check,input,copy,next);}have-=copy;next+=copy;state.length-=copy;}if(state.length){break inf_leave;}}state.length=0;state.mode=NAME;/* falls through */case NAME:if(state.flags&0x0800){if(have===0){break inf_leave;}copy=0;do{// TODO: 2 or 1 bytes?\nlen=input[next+copy++];/* use constant limit because in js we should not preallocate memory */if(state.head&&len&&state.length<65536/*state.head.name_max*/){state.head.name+=String.fromCharCode(len);}}while(len&&copy<have);if(state.flags&0x0200){state.check=crc32(state.check,input,copy,next);}have-=copy;next+=copy;if(len){break inf_leave;}}else if(state.head){state.head.name=null;}state.length=0;state.mode=COMMENT;/* falls through */case COMMENT:if(state.flags&0x1000){if(have===0){break inf_leave;}copy=0;do{len=input[next+copy++];/* use constant limit because in js we should not preallocate memory */if(state.head&&len&&state.length<65536/*state.head.comm_max*/){state.head.comment+=String.fromCharCode(len);}}while(len&&copy<have);if(state.flags&0x0200){state.check=crc32(state.check,input,copy,next);}have-=copy;next+=copy;if(len){break inf_leave;}}else if(state.head){state.head.comment=null;}state.mode=HCRC;/* falls through */case HCRC:if(state.flags&0x0200){//=== NEEDBITS(16); */\nwhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nif(hold!==(state.check&0xffff)){strm.msg='header crc mismatch';state.mode=BAD;break;}//=== INITBITS();\nhold=0;bits=0;//===//\n}if(state.head){state.head.hcrc=state.flags>>9&1;state.head.done=true;}strm.adler=state.check=0;state.mode=TYPE;break;case DICTID://=== NEEDBITS(32); */\nwhile(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstrm.adler=state.check=zswap32(hold);//=== INITBITS();\nhold=0;bits=0;//===//\nstate.mode=DICT;/* falls through */case DICT:if(state.havedict===0){//--- RESTORE() ---\nstrm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state.hold=hold;state.bits=bits;//---\nreturn Z_NEED_DICT;}strm.adler=state.check=1/*adler32(0L, Z_NULL, 0)*/;state.mode=TYPE;/* falls through */case TYPE:if(flush===Z_BLOCK||flush===Z_TREES){break inf_leave;}/* falls through */case TYPEDO:if(state.last){//--- BYTEBITS() ---//\nhold>>>=bits&7;bits-=bits&7;//---//\nstate.mode=CHECK;break;}//=== NEEDBITS(3); */\nwhile(bits<3){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.last=hold&0x01/*BITS(1)*/;//--- DROPBITS(1) ---//\nhold>>>=1;bits-=1;//---//\nswitch(hold&0x03){/*BITS(2)*/case 0:/* stored block */ //Tracev((stderr, \"inflate:     stored block%s\\n\",\n//        state.last ? \" (last)\" : \"\"));\nstate.mode=STORED;break;case 1:/* fixed block */fixedtables(state);//Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n//        state.last ? \" (last)\" : \"\"));\nstate.mode=LEN_;/* decode codes */if(flush===Z_TREES){//--- DROPBITS(2) ---//\nhold>>>=2;bits-=2;//---//\nbreak inf_leave;}break;case 2:/* dynamic block */ //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n//        state.last ? \" (last)\" : \"\"));\nstate.mode=TABLE;break;case 3:strm.msg='invalid block type';state.mode=BAD;}//--- DROPBITS(2) ---//\nhold>>>=2;bits-=2;//---//\nbreak;case STORED://--- BYTEBITS() ---// /* go to byte boundary */\nhold>>>=bits&7;bits-=bits&7;//---//\n//=== NEEDBITS(32); */\nwhile(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nif((hold&0xffff)!==(hold>>>16^0xffff)){strm.msg='invalid stored block lengths';state.mode=BAD;break;}state.length=hold&0xffff;//Tracev((stderr, \"inflate:       stored length %u\\n\",\n//        state.length));\n//=== INITBITS();\nhold=0;bits=0;//===//\nstate.mode=COPY_;if(flush===Z_TREES){break inf_leave;}/* falls through */case COPY_:state.mode=COPY;/* falls through */case COPY:copy=state.length;if(copy){if(copy>have){copy=have;}if(copy>left){copy=left;}if(copy===0){break inf_leave;}//--- zmemcpy(put, next, copy); ---\nutils.arraySet(output,input,next,copy,put);//---//\nhave-=copy;next+=copy;left-=copy;put+=copy;state.length-=copy;break;}//Tracev((stderr, \"inflate:       stored end\\n\"));\nstate.mode=TYPE;break;case TABLE://=== NEEDBITS(14); */\nwhile(bits<14){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.nlen=(hold&0x1f)+/*BITS(5)*/257;//--- DROPBITS(5) ---//\nhold>>>=5;bits-=5;//---//\nstate.ndist=(hold&0x1f)+/*BITS(5)*/1;//--- DROPBITS(5) ---//\nhold>>>=5;bits-=5;//---//\nstate.ncode=(hold&0x0f)+/*BITS(4)*/4;//--- DROPBITS(4) ---//\nhold>>>=4;bits-=4;//---//\n//#ifndef PKZIP_BUG_WORKAROUND\nif(state.nlen>286||state.ndist>30){strm.msg='too many length or distance symbols';state.mode=BAD;break;}//#endif\n//Tracev((stderr, \"inflate:       table sizes ok\\n\"));\nstate.have=0;state.mode=LENLENS;/* falls through */case LENLENS:while(state.have<state.ncode){//=== NEEDBITS(3);\nwhile(bits<3){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.lens[order[state.have++]]=hold&0x07;//BITS(3);\n//--- DROPBITS(3) ---//\nhold>>>=3;bits-=3;//---//\n}while(state.have<19){state.lens[order[state.have++]]=0;}// We have separate tables & no pointers. 2 commented lines below not needed.\n//state.next = state.codes;\n//state.lencode = state.next;\n// Switch to use dynamic table\nstate.lencode=state.lendyn;state.lenbits=7;opts={bits:state.lenbits};ret=inflate_table(CODES,state.lens,0,19,state.lencode,0,state.work,opts);state.lenbits=opts.bits;if(ret){strm.msg='invalid code lengths set';state.mode=BAD;break;}//Tracev((stderr, \"inflate:       code lengths ok\\n\"));\nstate.have=0;state.mode=CODELENS;/* falls through */case CODELENS:while(state.have<state.nlen+state.ndist){for(;;){here=state.lencode[hold&(1<<state.lenbits)-1];/*BITS(state.lenbits)*/here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits){break;}//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n}if(here_val<16){//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;bits-=here_bits;//---//\nstate.lens[state.have++]=here_val;}else{if(here_val===16){//=== NEEDBITS(here.bits + 2);\nn=here_bits+2;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;bits-=here_bits;//---//\nif(state.have===0){strm.msg='invalid bit length repeat';state.mode=BAD;break;}len=state.lens[state.have-1];copy=3+(hold&0x03);//BITS(2);\n//--- DROPBITS(2) ---//\nhold>>>=2;bits-=2;//---//\n}else if(here_val===17){//=== NEEDBITS(here.bits + 3);\nn=here_bits+3;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;bits-=here_bits;//---//\nlen=0;copy=3+(hold&0x07);//BITS(3);\n//--- DROPBITS(3) ---//\nhold>>>=3;bits-=3;//---//\n}else{//=== NEEDBITS(here.bits + 7);\nn=here_bits+7;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;bits-=here_bits;//---//\nlen=0;copy=11+(hold&0x7f);//BITS(7);\n//--- DROPBITS(7) ---//\nhold>>>=7;bits-=7;//---//\n}if(state.have+copy>state.nlen+state.ndist){strm.msg='invalid bit length repeat';state.mode=BAD;break;}while(copy--){state.lens[state.have++]=len;}}}/* handle error breaks in while */if(state.mode===BAD){break;}/* check for end-of-block code (better have one) */if(state.lens[256]===0){strm.msg='invalid code -- missing end-of-block';state.mode=BAD;break;}/* build code tables -- note: do not change the lenbits or distbits\n         values here (9 and 6) without reading the comments in inftrees.h\n         concerning the ENOUGH constants, which depend on those values */state.lenbits=9;opts={bits:state.lenbits};ret=inflate_table(LENS,state.lens,0,state.nlen,state.lencode,0,state.work,opts);// We have separate tables & no pointers. 2 commented lines below not needed.\n// state.next_index = opts.table_index;\nstate.lenbits=opts.bits;// state.lencode = state.next;\nif(ret){strm.msg='invalid literal/lengths set';state.mode=BAD;break;}state.distbits=6;//state.distcode.copy(state.codes);\n// Switch to use dynamic table\nstate.distcode=state.distdyn;opts={bits:state.distbits};ret=inflate_table(DISTS,state.lens,state.nlen,state.ndist,state.distcode,0,state.work,opts);// We have separate tables & no pointers. 2 commented lines below not needed.\n// state.next_index = opts.table_index;\nstate.distbits=opts.bits;// state.distcode = state.next;\nif(ret){strm.msg='invalid distances set';state.mode=BAD;break;}//Tracev((stderr, 'inflate:       codes ok\\n'));\nstate.mode=LEN_;if(flush===Z_TREES){break inf_leave;}/* falls through */case LEN_:state.mode=LEN;/* falls through */case LEN:if(have>=6&&left>=258){//--- RESTORE() ---\nstrm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state.hold=hold;state.bits=bits;//---\ninflate_fast(strm,_out);//--- LOAD() ---\nput=strm.next_out;output=strm.output;left=strm.avail_out;next=strm.next_in;input=strm.input;have=strm.avail_in;hold=state.hold;bits=state.bits;//---\nif(state.mode===TYPE){state.back=-1;}break;}state.back=0;for(;;){here=state.lencode[hold&(1<<state.lenbits)-1];/*BITS(state.lenbits)*/here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits){break;}//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n}if(here_op&&(here_op&0xf0)===0){last_bits=here_bits;last_op=here_op;last_val=here_val;for(;;){here=state.lencode[last_val+((hold&(1<<last_bits+last_op)-1)>>/*BITS(last.bits + last.op)*/last_bits)];here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(last_bits+here_bits<=bits){break;}//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n}//--- DROPBITS(last.bits) ---//\nhold>>>=last_bits;bits-=last_bits;//---//\nstate.back+=last_bits;}//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;bits-=here_bits;//---//\nstate.back+=here_bits;state.length=here_val;if(here_op===0){//Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n//        \"inflate:         literal '%c'\\n\" :\n//        \"inflate:         literal 0x%02x\\n\", here.val));\nstate.mode=LIT;break;}if(here_op&32){//Tracevv((stderr, \"inflate:         end of block\\n\"));\nstate.back=-1;state.mode=TYPE;break;}if(here_op&64){strm.msg='invalid literal/length code';state.mode=BAD;break;}state.extra=here_op&15;state.mode=LENEXT;/* falls through */case LENEXT:if(state.extra){//=== NEEDBITS(state.extra);\nn=state.extra;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.length+=hold&(1<<state.extra)-1/*BITS(state.extra)*/;//--- DROPBITS(state.extra) ---//\nhold>>>=state.extra;bits-=state.extra;//---//\nstate.back+=state.extra;}//Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\nstate.was=state.length;state.mode=DIST;/* falls through */case DIST:for(;;){here=state.distcode[hold&(1<<state.distbits)-1];/*BITS(state.distbits)*/here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits){break;}//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n}if((here_op&0xf0)===0){last_bits=here_bits;last_op=here_op;last_val=here_val;for(;;){here=state.distcode[last_val+((hold&(1<<last_bits+last_op)-1)>>/*BITS(last.bits + last.op)*/last_bits)];here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(last_bits+here_bits<=bits){break;}//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n}//--- DROPBITS(last.bits) ---//\nhold>>>=last_bits;bits-=last_bits;//---//\nstate.back+=last_bits;}//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;bits-=here_bits;//---//\nstate.back+=here_bits;if(here_op&64){strm.msg='invalid distance code';state.mode=BAD;break;}state.offset=here_val;state.extra=here_op&15;state.mode=DISTEXT;/* falls through */case DISTEXT:if(state.extra){//=== NEEDBITS(state.extra);\nn=state.extra;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.offset+=hold&(1<<state.extra)-1/*BITS(state.extra)*/;//--- DROPBITS(state.extra) ---//\nhold>>>=state.extra;bits-=state.extra;//---//\nstate.back+=state.extra;}//#ifdef INFLATE_STRICT\nif(state.offset>state.dmax){strm.msg='invalid distance too far back';state.mode=BAD;break;}//#endif\n//Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\nstate.mode=MATCH;/* falls through */case MATCH:if(left===0){break inf_leave;}copy=_out-left;if(state.offset>copy){/* copy from window */copy=state.offset-copy;if(copy>state.whave){if(state.sane){strm.msg='invalid distance too far back';state.mode=BAD;break;}// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n}if(copy>state.wnext){copy-=state.wnext;from=state.wsize-copy;}else{from=state.wnext-copy;}if(copy>state.length){copy=state.length;}from_source=state.window;}else{/* copy from output */from_source=output;from=put-state.offset;copy=state.length;}if(copy>left){copy=left;}left-=copy;state.length-=copy;do{output[put++]=from_source[from++];}while(--copy);if(state.length===0){state.mode=LEN;}break;case LIT:if(left===0){break inf_leave;}output[put++]=state.length;left--;state.mode=LEN;break;case CHECK:if(state.wrap){//=== NEEDBITS(32);\nwhile(bits<32){if(have===0){break inf_leave;}have--;// Use '|' insdead of '+' to make sure that result is signed\nhold|=input[next++]<<bits;bits+=8;}//===//\n_out-=left;strm.total_out+=_out;state.total+=_out;if(_out){strm.adler=state.check=/*UPDATE(state.check, put - _out, _out);*/state.flags?crc32(state.check,output,_out,put-_out):adler32(state.check,output,_out,put-_out);}_out=left;// NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\nif((state.flags?hold:zswap32(hold))!==state.check){strm.msg='incorrect data check';state.mode=BAD;break;}//=== INITBITS();\nhold=0;bits=0;//===//\n//Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n}state.mode=LENGTH;/* falls through */case LENGTH:if(state.wrap&&state.flags){//=== NEEDBITS(32);\nwhile(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nif(hold!==(state.total&0xffffffff)){strm.msg='incorrect length check';state.mode=BAD;break;}//=== INITBITS();\nhold=0;bits=0;//===//\n//Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n}state.mode=DONE;/* falls through */case DONE:ret=Z_STREAM_END;break inf_leave;case BAD:ret=Z_DATA_ERROR;break inf_leave;case MEM:return Z_MEM_ERROR;case SYNC:/* falls through */default:return Z_STREAM_ERROR;}}// inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n/*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */ //--- RESTORE() ---\nstrm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state.hold=hold;state.bits=bits;//---\nif(state.wsize||_out!==strm.avail_out&&state.mode<BAD&&(state.mode<CHECK||flush!==Z_FINISH)){if(updatewindow(strm,strm.output,strm.next_out,_out-strm.avail_out)){state.mode=MEM;return Z_MEM_ERROR;}}_in-=strm.avail_in;_out-=strm.avail_out;strm.total_in+=_in;strm.total_out+=_out;state.total+=_out;if(state.wrap&&_out){strm.adler=state.check=/*UPDATE(state.check, strm.next_out - _out, _out);*/state.flags?crc32(state.check,output,_out,strm.next_out-_out):adler32(state.check,output,_out,strm.next_out-_out);}strm.data_type=state.bits+(state.last?64:0)+(state.mode===TYPE?128:0)+(state.mode===LEN_||state.mode===COPY_?256:0);if((_in===0&&_out===0||flush===Z_FINISH)&&ret===Z_OK){ret=Z_BUF_ERROR;}return ret;}function inflateEnd(strm){if(!strm||!strm.state/*|| strm->zfree == (free_func)0*/){return Z_STREAM_ERROR;}var state=strm.state;if(state.window){state.window=null;}strm.state=null;return Z_OK;}function inflateGetHeader(strm,head){var state;/* check state */if(!strm||!strm.state){return Z_STREAM_ERROR;}state=strm.state;if((state.wrap&2)===0){return Z_STREAM_ERROR;}/* save header structure */state.head=head;head.done=false;return Z_OK;}function inflateSetDictionary(strm,dictionary){var dictLength=dictionary.length;var state;var dictid;var ret;/* check state */if(!strm/* == Z_NULL */||!strm.state/* == Z_NULL */){return Z_STREAM_ERROR;}state=strm.state;if(state.wrap!==0&&state.mode!==DICT){return Z_STREAM_ERROR;}/* check for correct dictionary identifier */if(state.mode===DICT){dictid=1;/* adler32(0, null, 0)*/ /* dictid = adler32(dictid, dictionary, dictLength); */dictid=adler32(dictid,dictionary,dictLength,0);if(dictid!==state.check){return Z_DATA_ERROR;}}/* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */ret=updatewindow(strm,dictionary,dictLength,dictLength);if(ret){state.mode=MEM;return Z_MEM_ERROR;}state.havedict=1;// Tracev((stderr, \"inflate:   dictionary set\\n\"));\nreturn Z_OK;}exports.inflateReset=inflateReset;exports.inflateReset2=inflateReset2;exports.inflateResetKeep=inflateResetKeep;exports.inflateInit=inflateInit;exports.inflateInit2=inflateInit2;exports.inflate=inflate;exports.inflateEnd=inflateEnd;exports.inflateGetHeader=inflateGetHeader;exports.inflateSetDictionary=inflateSetDictionary;exports.inflateInfo='pako inflate (from Nodeca project)';/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/},{\"../utils/common\":209,\"./adler32\":211,\"./crc32\":213,\"./inffast\":216,\"./inftrees\":218}],218:[function(_dereq_,module,exports){'use strict';var utils=_dereq_('../utils/common');var MAXBITS=15;var ENOUGH_LENS=852;var ENOUGH_DISTS=592;//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\nvar CODES=0;var LENS=1;var DISTS=2;var lbase=[/* Length codes 257..285 base */3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0];var lext=[/* Length codes 257..285 extra */16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78];var dbase=[/* Distance codes 0..29 base */1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0];var dext=[/* Distance codes 0..29 extra */16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];module.exports=function inflate_table(type,lens,lens_index,codes,table,table_index,work,opts){var bits=opts.bits;//here = opts.here; /* table entry for duplication */\nvar len=0;/* a code's length in bits */var sym=0;/* index of code symbols */var min=0,max=0;/* minimum and maximum code lengths */var root=0;/* number of index bits for root table */var curr=0;/* number of index bits for current table */var drop=0;/* code bits to drop for sub-table */var left=0;/* number of prefix codes available */var used=0;/* code entries in table used */var huff=0;/* Huffman code */var incr;/* for incrementing code, index */var fill;/* index for replicating entries */var low;/* low bits for current root entry */var mask;/* mask for low root bits */var next;/* next available space in table */var base=null;/* base value table to use */var base_index=0;//  var shoextra;    /* extra bits table to use */\nvar end;/* use base and extra for symbol > end */var count=new utils.Buf16(MAXBITS+1);//[MAXBITS+1];    /* number of codes of each length */\nvar offs=new utils.Buf16(MAXBITS+1);//[MAXBITS+1];     /* offsets in table for each length */\nvar extra=null;var extra_index=0;var here_bits,here_op,here_val;/*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */ /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */for(len=0;len<=MAXBITS;len++){count[len]=0;}for(sym=0;sym<codes;sym++){count[lens[lens_index+sym]]++;}/* bound code lengths, force root to be within code lengths */root=bits;for(max=MAXBITS;max>=1;max--){if(count[max]!==0){break;}}if(root>max){root=max;}if(max===0){/* no symbols to code at all */ //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n//table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n//table.val[opts.table_index++] = 0;   //here.val = (var short)0;\ntable[table_index++]=1<<24|64<<16|0;//table.op[opts.table_index] = 64;\n//table.bits[opts.table_index] = 1;\n//table.val[opts.table_index++] = 0;\ntable[table_index++]=1<<24|64<<16|0;opts.bits=1;return 0;/* no symbols, but wait for decoding to report error */}for(min=1;min<max;min++){if(count[min]!==0){break;}}if(root<min){root=min;}/* check for an over-subscribed or incomplete set of lengths */left=1;for(len=1;len<=MAXBITS;len++){left<<=1;left-=count[len];if(left<0){return-1;}/* over-subscribed */}if(left>0&&(type===CODES||max!==1)){return-1;/* incomplete set */}/* generate offsets into symbol table for each length for sorting */offs[1]=0;for(len=1;len<MAXBITS;len++){offs[len+1]=offs[len]+count[len];}/* sort symbols by length, by symbol order within each length */for(sym=0;sym<codes;sym++){if(lens[lens_index+sym]!==0){work[offs[lens[lens_index+sym]]++]=sym;}}/*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */ /* set up for code type */ // poor man optimization - use if-else instead of switch,\n// to avoid deopts in old v8\nif(type===CODES){base=extra=work;/* dummy value--not used */end=19;}else if(type===LENS){base=lbase;base_index-=257;extra=lext;extra_index-=257;end=256;}else{/* DISTS */base=dbase;extra=dext;end=-1;}/* initialize opts for loop */huff=0;/* starting code */sym=0;/* starting code symbol */len=min;/* starting code length */next=table_index;/* current table to fill in */curr=root;/* current table index bits */drop=0;/* current bits to drop from code for index */low=-1;/* trigger new sub-table when len > root */used=1<<root;/* use root table entries */mask=used-1;/* mask for comparing low */ /* check available table space */if(type===LENS&&used>ENOUGH_LENS||type===DISTS&&used>ENOUGH_DISTS){return 1;}var i=0;/* process all codes and make table entries */for(;;){i++;/* create table entry */here_bits=len-drop;if(work[sym]<end){here_op=0;here_val=work[sym];}else if(work[sym]>end){here_op=extra[extra_index+work[sym]];here_val=base[base_index+work[sym]];}else{here_op=32+64;/* end of block */here_val=0;}/* replicate for those indices with low len bits equal to huff */incr=1<<len-drop;fill=1<<curr;min=fill;/* save offset to next table */do{fill-=incr;table[next+(huff>>drop)+fill]=here_bits<<24|here_op<<16|here_val|0;}while(fill!==0);/* backwards increment the len-bit code huff */incr=1<<len-1;while(huff&incr){incr>>=1;}if(incr!==0){huff&=incr-1;huff+=incr;}else{huff=0;}/* go to next symbol, update count, len */sym++;if(--count[len]===0){if(len===max){break;}len=lens[lens_index+work[sym]];}/* create new sub-table if needed */if(len>root&&(huff&mask)!==low){/* if first time, transition to sub-tables */if(drop===0){drop=root;}/* increment past last table */next+=min;/* here min is 1 << curr */ /* determine length of next table */curr=len-drop;left=1<<curr;while(curr+drop<max){left-=count[curr+drop];if(left<=0){break;}curr++;left<<=1;}/* check for enough space */used+=1<<curr;if(type===LENS&&used>ENOUGH_LENS||type===DISTS&&used>ENOUGH_DISTS){return 1;}/* point entry in root table to sub-table */low=huff&mask;/*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/table[low]=root<<24|curr<<16|next-table_index|0;}}/* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */if(huff!==0){//table.op[next + huff] = 64;            /* invalid code marker */\n//table.bits[next + huff] = len - drop;\n//table.val[next + huff] = 0;\ntable[next+huff]=len-drop<<24|64<<16|0;}/* set return parameters */ //opts.table_index += used;\nopts.bits=root;return 0;};},{\"../utils/common\":209}],219:[function(_dereq_,module,exports){'use strict';module.exports={2:'need dictionary',/* Z_NEED_DICT       2  */1:'stream end',/* Z_STREAM_END      1  */0:'',/* Z_OK              0  */'-1':'file error',/* Z_ERRNO         (-1) */'-2':'stream error',/* Z_STREAM_ERROR  (-2) */'-3':'data error',/* Z_DATA_ERROR    (-3) */'-4':'insufficient memory',/* Z_MEM_ERROR     (-4) */'-5':'buffer error',/* Z_BUF_ERROR     (-5) */'-6':'incompatible version'/* Z_VERSION_ERROR (-6) */};},{}],220:[function(_dereq_,module,exports){'use strict';var utils=_dereq_('../utils/common');/* Public constants ==========================================================*/ /* ===========================================================================*/ //var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED=4;//var Z_DEFAULT_STRATEGY  = 0;\n/* Possible values of the data_type field (though see inflate()) */var Z_BINARY=0;var Z_TEXT=1;//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN=2;/*============================================================================*/function zero(buf){var len=buf.length;while(--len>=0){buf[len]=0;}}// From zutil.h\nvar STORED_BLOCK=0;var STATIC_TREES=1;var DYN_TREES=2;/* The three kinds of block type */var MIN_MATCH=3;var MAX_MATCH=258;/* The minimum and maximum match lengths */ // From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */var LENGTH_CODES=29;/* number of length codes, not counting the special END_BLOCK code */var LITERALS=256;/* number of literal bytes 0..255 */var L_CODES=LITERALS+1+LENGTH_CODES;/* number of Literal or Length codes, including the END_BLOCK code */var D_CODES=30;/* number of distance codes */var BL_CODES=19;/* number of codes used to transfer the bit lengths */var HEAP_SIZE=2*L_CODES+1;/* maximum heap size */var MAX_BITS=15;/* All codes must not exceed MAX_BITS bits */var Buf_size=16;/* size of bit buffer in bi_buf */ /* ===========================================================================\n * Constants\n */var MAX_BL_BITS=7;/* Bit length codes must not exceed MAX_BL_BITS bits */var END_BLOCK=256;/* end of block literal code */var REP_3_6=16;/* repeat previous bit length 3-6 times (2 bits of repeat count) */var REPZ_3_10=17;/* repeat a zero length 3-10 times  (3 bits of repeat count) */var REPZ_11_138=18;/* repeat a zero length 11-138 times  (7 bits of repeat count) */ /* eslint-disable comma-spacing,array-bracket-spacing */var extra_lbits=/* extra bits for each length code */[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];var extra_dbits=/* extra bits for each distance code */[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];var extra_blbits=/* extra bits for each bit length code */[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];var bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];/* eslint-enable comma-spacing,array-bracket-spacing */ /* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */ /* ===========================================================================\n * Local data. These are initialized only once.\n */ // We pre-fill arrays with 0 to avoid uninitialized gaps\nvar DIST_CODE_LEN=512;/* see definition of array dist_code below */ // !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree=new Array((L_CODES+2)*2);zero(static_ltree);/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */var static_dtree=new Array(D_CODES*2);zero(static_dtree);/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */var _dist_code=new Array(DIST_CODE_LEN);zero(_dist_code);/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */var _length_code=new Array(MAX_MATCH-MIN_MATCH+1);zero(_length_code);/* length code for each normalized match length (0 == MIN_MATCH) */var base_length=new Array(LENGTH_CODES);zero(base_length);/* First normalized length for each code (0 = MIN_MATCH) */var base_dist=new Array(D_CODES);zero(base_dist);/* First normalized distance for each code (0 = distance of 1) */function StaticTreeDesc(static_tree,extra_bits,extra_base,elems,max_length){this.static_tree=static_tree;/* static tree or NULL */this.extra_bits=extra_bits;/* extra bits for each code or NULL */this.extra_base=extra_base;/* base index for extra_bits */this.elems=elems;/* max number of elements in the tree */this.max_length=max_length;/* max bit length for the codes */ // show if `static_tree` has data or dummy - needed for monomorphic objects\nthis.has_stree=static_tree&&static_tree.length;}var static_l_desc;var static_d_desc;var static_bl_desc;function TreeDesc(dyn_tree,stat_desc){this.dyn_tree=dyn_tree;/* the dynamic tree */this.max_code=0;/* largest code with non zero frequency */this.stat_desc=stat_desc;/* the corresponding static tree */}function d_code(dist){return dist<256?_dist_code[dist]:_dist_code[256+(dist>>>7)];}/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */function put_short(s,w){//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\ns.pending_buf[s.pending++]=w&0xff;s.pending_buf[s.pending++]=w>>>8&0xff;}/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */function send_bits(s,value,length){if(s.bi_valid>Buf_size-length){s.bi_buf|=value<<s.bi_valid&0xffff;put_short(s,s.bi_buf);s.bi_buf=value>>Buf_size-s.bi_valid;s.bi_valid+=length-Buf_size;}else{s.bi_buf|=value<<s.bi_valid&0xffff;s.bi_valid+=length;}}function send_code(s,c,tree){send_bits(s,tree[c*2]/*.Code*/,tree[c*2+1]/*.Len*/);}/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */function bi_reverse(code,len){var res=0;do{res|=code&1;code>>>=1;res<<=1;}while(--len>0);return res>>>1;}/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */function bi_flush(s){if(s.bi_valid===16){put_short(s,s.bi_buf);s.bi_buf=0;s.bi_valid=0;}else if(s.bi_valid>=8){s.pending_buf[s.pending++]=s.bi_buf&0xff;s.bi_buf>>=8;s.bi_valid-=8;}}/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */function gen_bitlen(s,desc)//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{var tree=desc.dyn_tree;var max_code=desc.max_code;var stree=desc.stat_desc.static_tree;var has_stree=desc.stat_desc.has_stree;var extra=desc.stat_desc.extra_bits;var base=desc.stat_desc.extra_base;var max_length=desc.stat_desc.max_length;var h;/* heap index */var n,m;/* iterate over the tree elements */var bits;/* bit length */var xbits;/* extra bits */var f;/* frequency */var overflow=0;/* number of elements with bit length too large */for(bits=0;bits<=MAX_BITS;bits++){s.bl_count[bits]=0;}/* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */tree[s.heap[s.heap_max]*2+1]/*.Len*/=0;/* root of the heap */for(h=s.heap_max+1;h<HEAP_SIZE;h++){n=s.heap[h];bits=tree[tree[n*2+1]/*.Dad*/*2+1]/*.Len*/+1;if(bits>max_length){bits=max_length;overflow++;}tree[n*2+1]/*.Len*/=bits;/* We overwrite tree[n].Dad which is no longer needed */if(n>max_code){continue;}/* not a leaf node */s.bl_count[bits]++;xbits=0;if(n>=base){xbits=extra[n-base];}f=tree[n*2]/*.Freq*/;s.opt_len+=f*(bits+xbits);if(has_stree){s.static_len+=f*(stree[n*2+1]/*.Len*/+xbits);}}if(overflow===0){return;}// Trace((stderr,\"\\nbit length overflow\\n\"));\n/* This happens for example on obj2 and pic of the Calgary corpus */ /* Find the first bit length which could increase: */do{bits=max_length-1;while(s.bl_count[bits]===0){bits--;}s.bl_count[bits]--;/* move one leaf down the tree */s.bl_count[bits+1]+=2;/* move one overflow item as its brother */s.bl_count[max_length]--;/* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */overflow-=2;}while(overflow>0);/* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */for(bits=max_length;bits!==0;bits--){n=s.bl_count[bits];while(n!==0){m=s.heap[--h];if(m>max_code){continue;}if(tree[m*2+1]/*.Len*/!==bits){// Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\ns.opt_len+=(bits-tree[m*2+1]/*.Len*/)*tree[m*2]/*.Freq*/;tree[m*2+1]/*.Len*/=bits;}n--;}}}/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */function gen_codes(tree,max_code,bl_count)//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{var next_code=new Array(MAX_BITS+1);/* next code value for each bit length */var code=0;/* running code value */var bits;/* bit index */var n;/* code index */ /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */for(bits=1;bits<=MAX_BITS;bits++){next_code[bits]=code=code+bl_count[bits-1]<<1;}/* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */ //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n//        \"inconsistent bit counts\");\n//Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\nfor(n=0;n<=max_code;n++){var len=tree[n*2+1]/*.Len*/;if(len===0){continue;}/* Now reverse the bits */tree[n*2]/*.Code*/=bi_reverse(next_code[len]++,len);//Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n//     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n}}/* ===========================================================================\n * Initialize the various 'constant' tables.\n */function tr_static_init(){var n;/* iterates over tree elements */var bits;/* bit counter */var length;/* length value */var code;/* code value */var dist;/* distance index */var bl_count=new Array(MAX_BITS+1);/* number of codes at each bit length for an optimal tree */ // do check in _tr_init()\n//if (static_init_done) return;\n/* For some embedded targets, global variables are not initialized: */ /*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/ /* Initialize the mapping length (0..255) -> length code (0..28) */length=0;for(code=0;code<LENGTH_CODES-1;code++){base_length[code]=length;for(n=0;n<1<<extra_lbits[code];n++){_length_code[length++]=code;}}//Assert (length == 256, \"tr_static_init: length != 256\");\n/* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */_length_code[length-1]=code;/* Initialize the mapping dist (0..32K) -> dist code (0..29) */dist=0;for(code=0;code<16;code++){base_dist[code]=dist;for(n=0;n<1<<extra_dbits[code];n++){_dist_code[dist++]=code;}}//Assert (dist == 256, \"tr_static_init: dist != 256\");\ndist>>=7;/* from now on, all distances are divided by 128 */for(;code<D_CODES;code++){base_dist[code]=dist<<7;for(n=0;n<1<<extra_dbits[code]-7;n++){_dist_code[256+dist++]=code;}}//Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n/* Construct the codes of the static literal tree */for(bits=0;bits<=MAX_BITS;bits++){bl_count[bits]=0;}n=0;while(n<=143){static_ltree[n*2+1]/*.Len*/=8;n++;bl_count[8]++;}while(n<=255){static_ltree[n*2+1]/*.Len*/=9;n++;bl_count[9]++;}while(n<=279){static_ltree[n*2+1]/*.Len*/=7;n++;bl_count[7]++;}while(n<=287){static_ltree[n*2+1]/*.Len*/=8;n++;bl_count[8]++;}/* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */gen_codes(static_ltree,L_CODES+1,bl_count);/* The static distance tree is trivial: */for(n=0;n<D_CODES;n++){static_dtree[n*2+1]/*.Len*/=5;static_dtree[n*2]/*.Code*/=bi_reverse(n,5);}// Now data ready and we can init static trees\nstatic_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS+1,L_CODES,MAX_BITS);static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES,MAX_BITS);static_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,BL_CODES,MAX_BL_BITS);//static_init_done = true;\n}/* ===========================================================================\n * Initialize a new block.\n */function init_block(s){var n;/* iterates over tree elements */ /* Initialize the trees. */for(n=0;n<L_CODES;n++){s.dyn_ltree[n*2]/*.Freq*/=0;}for(n=0;n<D_CODES;n++){s.dyn_dtree[n*2]/*.Freq*/=0;}for(n=0;n<BL_CODES;n++){s.bl_tree[n*2]/*.Freq*/=0;}s.dyn_ltree[END_BLOCK*2]/*.Freq*/=1;s.opt_len=s.static_len=0;s.last_lit=s.matches=0;}/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */function bi_windup(s){if(s.bi_valid>8){put_short(s,s.bi_buf);}else if(s.bi_valid>0){//put_byte(s, (Byte)s->bi_buf);\ns.pending_buf[s.pending++]=s.bi_buf;}s.bi_buf=0;s.bi_valid=0;}/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */function copy_block(s,buf,len,header)//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{bi_windup(s);/* align on byte boundary */if(header){put_short(s,len);put_short(s,~len);}//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\nutils.arraySet(s.pending_buf,s.window,buf,len,s.pending);s.pending+=len;}/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */function smaller(tree,n,m,depth){var _n2=n*2;var _m2=m*2;return tree[_n2]/*.Freq*/<tree[_m2]/*.Freq*/||tree[_n2]/*.Freq*/===tree[_m2]/*.Freq*/&&depth[n]<=depth[m];}/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */function pqdownheap(s,tree,k)//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{var v=s.heap[k];var j=k<<1;/* left son of k */while(j<=s.heap_len){/* Set j to the smallest of the two sons: */if(j<s.heap_len&&smaller(tree,s.heap[j+1],s.heap[j],s.depth)){j++;}/* Exit if v is smaller than both sons */if(smaller(tree,v,s.heap[j],s.depth)){break;}/* Exchange v with the smallest son */s.heap[k]=s.heap[j];k=j;/* And continue down the tree, setting j to the left son of k */j<<=1;}s.heap[k]=v;}// inlined manually\n// var SMALLEST = 1;\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */function compress_block(s,ltree,dtree)//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{var dist;/* distance of matched string */var lc;/* match length or unmatched char (if dist == 0) */var lx=0;/* running index in l_buf */var code;/* the code to send */var extra;/* number of extra bits to send */if(s.last_lit!==0){do{dist=s.pending_buf[s.d_buf+lx*2]<<8|s.pending_buf[s.d_buf+lx*2+1];lc=s.pending_buf[s.l_buf+lx];lx++;if(dist===0){send_code(s,lc,ltree);/* send a literal byte */ //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n}else{/* Here, lc is the match length - MIN_MATCH */code=_length_code[lc];send_code(s,code+LITERALS+1,ltree);/* send the length code */extra=extra_lbits[code];if(extra!==0){lc-=base_length[code];send_bits(s,lc,extra);/* send the extra length bits */}dist--;/* dist is now the match distance - 1 */code=d_code(dist);//Assert (code < D_CODES, \"bad d_code\");\nsend_code(s,code,dtree);/* send the distance code */extra=extra_dbits[code];if(extra!==0){dist-=base_dist[code];send_bits(s,dist,extra);/* send the extra distance bits */}}/* literal or match pair ? */ /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */ //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n//       \"pendingBuf overflow\");\n}while(lx<s.last_lit);}send_code(s,END_BLOCK,ltree);}/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */function build_tree(s,desc)//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{var tree=desc.dyn_tree;var stree=desc.stat_desc.static_tree;var has_stree=desc.stat_desc.has_stree;var elems=desc.stat_desc.elems;var n,m;/* iterate over heap elements */var max_code=-1;/* largest code with non zero frequency */var node;/* new node being created */ /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */s.heap_len=0;s.heap_max=HEAP_SIZE;for(n=0;n<elems;n++){if(tree[n*2]/*.Freq*/!==0){s.heap[++s.heap_len]=max_code=n;s.depth[n]=0;}else{tree[n*2+1]/*.Len*/=0;}}/* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */while(s.heap_len<2){node=s.heap[++s.heap_len]=max_code<2?++max_code:0;tree[node*2]/*.Freq*/=1;s.depth[node]=0;s.opt_len--;if(has_stree){s.static_len-=stree[node*2+1]/*.Len*/;}/* node is 0 or 1 so it does not have extra bits */}desc.max_code=max_code;/* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */for(n=s.heap_len>>1/*int /2*/;n>=1;n--){pqdownheap(s,tree,n);}/* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */node=elems;/* next internal node of the tree */do{//pqremove(s, tree, n);  /* n = node of least frequency */\n/*** pqremove ***/n=s.heap[1/*SMALLEST*/];s.heap[1/*SMALLEST*/]=s.heap[s.heap_len--];pqdownheap(s,tree,1/*SMALLEST*/);/***/m=s.heap[1/*SMALLEST*/];/* m = node of next least frequency */s.heap[--s.heap_max]=n;/* keep the nodes sorted by frequency */s.heap[--s.heap_max]=m;/* Create a new node father of n and m */tree[node*2]/*.Freq*/=tree[n*2]/*.Freq*/+tree[m*2]/*.Freq*/;s.depth[node]=(s.depth[n]>=s.depth[m]?s.depth[n]:s.depth[m])+1;tree[n*2+1]/*.Dad*/=tree[m*2+1]/*.Dad*/=node;/* and insert the new node in the heap */s.heap[1/*SMALLEST*/]=node++;pqdownheap(s,tree,1/*SMALLEST*/);}while(s.heap_len>=2);s.heap[--s.heap_max]=s.heap[1/*SMALLEST*/];/* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */gen_bitlen(s,desc);/* The field len is now set, we can generate the bit codes */gen_codes(tree,max_code,s.bl_count);}/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */function scan_tree(s,tree,max_code)//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{var n;/* iterates over all tree elements */var prevlen=-1;/* last emitted length */var curlen;/* length of current code */var nextlen=tree[0*2+1]/*.Len*/;/* length of next code */var count=0;/* repeat count of the current code */var max_count=7;/* max repeat count */var min_count=4;/* min repeat count */if(nextlen===0){max_count=138;min_count=3;}tree[(max_code+1)*2+1]/*.Len*/=0xffff;/* guard */for(n=0;n<=max_code;n++){curlen=nextlen;nextlen=tree[(n+1)*2+1]/*.Len*/;if(++count<max_count&&curlen===nextlen){continue;}else if(count<min_count){s.bl_tree[curlen*2]/*.Freq*/+=count;}else if(curlen!==0){if(curlen!==prevlen){s.bl_tree[curlen*2]/*.Freq*/++;}s.bl_tree[REP_3_6*2]/*.Freq*/++;}else if(count<=10){s.bl_tree[REPZ_3_10*2]/*.Freq*/++;}else{s.bl_tree[REPZ_11_138*2]/*.Freq*/++;}count=0;prevlen=curlen;if(nextlen===0){max_count=138;min_count=3;}else if(curlen===nextlen){max_count=6;min_count=3;}else{max_count=7;min_count=4;}}}/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */function send_tree(s,tree,max_code)//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{var n;/* iterates over all tree elements */var prevlen=-1;/* last emitted length */var curlen;/* length of current code */var nextlen=tree[0*2+1]/*.Len*/;/* length of next code */var count=0;/* repeat count of the current code */var max_count=7;/* max repeat count */var min_count=4;/* min repeat count */ /* tree[max_code+1].Len = -1; */ /* guard already set */if(nextlen===0){max_count=138;min_count=3;}for(n=0;n<=max_code;n++){curlen=nextlen;nextlen=tree[(n+1)*2+1]/*.Len*/;if(++count<max_count&&curlen===nextlen){continue;}else if(count<min_count){do{send_code(s,curlen,s.bl_tree);}while(--count!==0);}else if(curlen!==0){if(curlen!==prevlen){send_code(s,curlen,s.bl_tree);count--;}//Assert(count >= 3 && count <= 6, \" 3_6?\");\nsend_code(s,REP_3_6,s.bl_tree);send_bits(s,count-3,2);}else if(count<=10){send_code(s,REPZ_3_10,s.bl_tree);send_bits(s,count-3,3);}else{send_code(s,REPZ_11_138,s.bl_tree);send_bits(s,count-11,7);}count=0;prevlen=curlen;if(nextlen===0){max_count=138;min_count=3;}else if(curlen===nextlen){max_count=6;min_count=3;}else{max_count=7;min_count=4;}}}/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */function build_bl_tree(s){var max_blindex;/* index of last bit length code of non zero freq */ /* Determine the bit length frequencies for literal and distance trees */scan_tree(s,s.dyn_ltree,s.l_desc.max_code);scan_tree(s,s.dyn_dtree,s.d_desc.max_code);/* Build the bit length tree: */build_tree(s,s.bl_desc);/* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */ /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */for(max_blindex=BL_CODES-1;max_blindex>=3;max_blindex--){if(s.bl_tree[bl_order[max_blindex]*2+1]/*.Len*/!==0){break;}}/* Update opt_len to include the bit length tree and counts */s.opt_len+=3*(max_blindex+1)+5+5+4;//Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n//        s->opt_len, s->static_len));\nreturn max_blindex;}/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */function send_all_trees(s,lcodes,dcodes,blcodes)//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{var rank;/* index in bl_order */ //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n//Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n//        \"too many codes\");\n//Tracev((stderr, \"\\nbl counts: \"));\nsend_bits(s,lcodes-257,5);/* not +255 as stated in appnote.txt */send_bits(s,dcodes-1,5);send_bits(s,blcodes-4,4);/* not -3 as stated in appnote.txt */for(rank=0;rank<blcodes;rank++){//Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\nsend_bits(s,s.bl_tree[bl_order[rank]*2+1]/*.Len*/,3);}//Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\nsend_tree(s,s.dyn_ltree,lcodes-1);/* literal tree */ //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\nsend_tree(s,s.dyn_dtree,dcodes-1);/* distance tree */ //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */function detect_data_type(s){/* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */var black_mask=0xf3ffc07f;var n;/* Check for non-textual (\"black-listed\") bytes. */for(n=0;n<=31;n++,black_mask>>>=1){if(black_mask&1&&s.dyn_ltree[n*2]/*.Freq*/!==0){return Z_BINARY;}}/* Check for textual (\"white-listed\") bytes. */if(s.dyn_ltree[9*2]/*.Freq*/!==0||s.dyn_ltree[10*2]/*.Freq*/!==0||s.dyn_ltree[13*2]/*.Freq*/!==0){return Z_TEXT;}for(n=32;n<LITERALS;n++){if(s.dyn_ltree[n*2]/*.Freq*/!==0){return Z_TEXT;}}/* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */return Z_BINARY;}var static_init_done=false;/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */function _tr_init(s){if(!static_init_done){tr_static_init();static_init_done=true;}s.l_desc=new TreeDesc(s.dyn_ltree,static_l_desc);s.d_desc=new TreeDesc(s.dyn_dtree,static_d_desc);s.bl_desc=new TreeDesc(s.bl_tree,static_bl_desc);s.bi_buf=0;s.bi_valid=0;/* Initialize the first block of the first file: */init_block(s);}/* ===========================================================================\n * Send a stored block\n */function _tr_stored_block(s,buf,stored_len,last)//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{send_bits(s,(STORED_BLOCK<<1)+(last?1:0),3);/* send block type */copy_block(s,buf,stored_len,true);/* with header */}/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */function _tr_align(s){send_bits(s,STATIC_TREES<<1,3);send_code(s,END_BLOCK,static_ltree);bi_flush(s);}/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */function _tr_flush_block(s,buf,stored_len,last)//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{var opt_lenb,static_lenb;/* opt_len and static_len in bytes */var max_blindex=0;/* index of last bit length code of non zero freq */ /* Build the Huffman trees unless a stored block is forced */if(s.level>0){/* Check if the file is binary or text */if(s.strm.data_type===Z_UNKNOWN){s.strm.data_type=detect_data_type(s);}/* Construct the literal and distance trees */build_tree(s,s.l_desc);// Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n//        s->static_len));\nbuild_tree(s,s.d_desc);// Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n//        s->static_len));\n/* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */ /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */max_blindex=build_bl_tree(s);/* Determine the best encoding. Compute the block lengths in bytes. */opt_lenb=s.opt_len+3+7>>>3;static_lenb=s.static_len+3+7>>>3;// Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n//        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n//        s->last_lit));\nif(static_lenb<=opt_lenb){opt_lenb=static_lenb;}}else{// Assert(buf != (char*)0, \"lost buf\");\nopt_lenb=static_lenb=stored_len+5;/* force a stored block */}if(stored_len+4<=opt_lenb&&buf!==-1){/* 4: two words for the lengths */ /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */_tr_stored_block(s,buf,stored_len,last);}else if(s.strategy===Z_FIXED||static_lenb===opt_lenb){send_bits(s,(STATIC_TREES<<1)+(last?1:0),3);compress_block(s,static_ltree,static_dtree);}else{send_bits(s,(DYN_TREES<<1)+(last?1:0),3);send_all_trees(s,s.l_desc.max_code+1,s.d_desc.max_code+1,max_blindex+1);compress_block(s,s.dyn_ltree,s.dyn_dtree);}// Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n/* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */init_block(s);if(last){bi_windup(s);}// Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n//       s->compressed_len-7*last));\n}/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */function _tr_tally(s,dist,lc)//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{//var out_length, in_length, dcode;\ns.pending_buf[s.d_buf+s.last_lit*2]=dist>>>8&0xff;s.pending_buf[s.d_buf+s.last_lit*2+1]=dist&0xff;s.pending_buf[s.l_buf+s.last_lit]=lc&0xff;s.last_lit++;if(dist===0){/* lc is the unmatched char */s.dyn_ltree[lc*2]/*.Freq*/++;}else{s.matches++;/* Here, lc is the match length - MIN_MATCH */dist--;/* dist = match distance - 1 */ //Assert((ush)dist < (ush)MAX_DIST(s) &&\n//       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n//       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\ns.dyn_ltree[(_length_code[lc]+LITERALS+1)*2]/*.Freq*/++;s.dyn_dtree[d_code(dist)*2]/*.Freq*/++;}// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\nreturn s.last_lit===s.lit_bufsize-1;/* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */}exports._tr_init=_tr_init;exports._tr_stored_block=_tr_stored_block;exports._tr_flush_block=_tr_flush_block;exports._tr_tally=_tr_tally;exports._tr_align=_tr_align;},{\"../utils/common\":209}],221:[function(_dereq_,module,exports){'use strict';function ZStream(){/* next input byte */this.input=null;// JS specific, because we have no pointers\nthis.next_in=0;/* number of bytes available at input */this.avail_in=0;/* total number of input bytes read so far */this.total_in=0;/* next output byte should be put there */this.output=null;// JS specific, because we have no pointers\nthis.next_out=0;/* remaining free space at output */this.avail_out=0;/* total number of bytes output so far */this.total_out=0;/* last error message, NULL if no error */this.msg=''/*Z_NULL*/;/* not visible by applications */this.state=null;/* best guess about the data type: binary or text */this.data_type=2/*Z_UNKNOWN*/;/* adler32 value of the uncompressed data */this.adler=0;}module.exports=ZStream;},{}],222:[function(_dereq_,module,exports){module.exports=preprocessPolygon;var orient=_dereq_('robust-orientation')[3];var makeSlabs=_dereq_('slab-decomposition');var makeIntervalTree=_dereq_('interval-tree-1d');var bsearch=_dereq_('binary-search-bounds');function visitInterval(){return true;}function intervalSearch(table){return function(x,y){var tree=table[x];if(tree){return!!tree.queryPoint(y,visitInterval);}return false;};}function buildVerticalIndex(segments){var table={};for(var i=0;i<segments.length;++i){var s=segments[i];var x=s[0][0];var y0=s[0][1];var y1=s[1][1];var p=[Math.min(y0,y1),Math.max(y0,y1)];if(x in table){table[x].push(p);}else{table[x]=[p];}}var intervalTable={};var keys=Object.keys(table);for(var i=0;i<keys.length;++i){var segs=table[keys[i]];intervalTable[keys[i]]=makeIntervalTree(segs);}return intervalSearch(intervalTable);}function buildSlabSearch(slabs,coordinates){return function(p){var bucket=bsearch.le(coordinates,p[0]);if(bucket<0){return 1;}var root=slabs[bucket];if(!root){if(bucket>0&&coordinates[bucket]===p[0]){root=slabs[bucket-1];}else{return 1;}}var lastOrientation=1;while(root){var s=root.key;var o=orient(p,s[0],s[1]);if(s[0][0]<s[1][0]){if(o<0){root=root.left;}else if(o>0){lastOrientation=-1;root=root.right;}else{return 0;}}else{if(o>0){root=root.left;}else if(o<0){lastOrientation=1;root=root.right;}else{return 0;}}}return lastOrientation;};}function classifyEmpty(p){return 1;}function createClassifyVertical(testVertical){return function classify(p){if(testVertical(p[0],p[1])){return 0;}return 1;};}function createClassifyPointDegen(testVertical,testNormal){return function classify(p){if(testVertical(p[0],p[1])){return 0;}return testNormal(p);};}function preprocessPolygon(loops){//Compute number of loops\nvar numLoops=loops.length;//Unpack segments\nvar segments=[];var vsegments=[];var ptr=0;for(var i=0;i<numLoops;++i){var loop=loops[i];var numVertices=loop.length;for(var s=numVertices-1,t=0;t<numVertices;s=t++){var a=loop[s];var b=loop[t];if(a[0]===b[0]){vsegments.push([a,b]);}else{segments.push([a,b]);}}}//Degenerate case: All loops are empty\nif(segments.length===0){if(vsegments.length===0){return classifyEmpty;}else{return createClassifyVertical(buildVerticalIndex(vsegments));}}//Build slab decomposition\nvar slabs=makeSlabs(segments);var testSlab=buildSlabSearch(slabs.slabs,slabs.coordinates);if(vsegments.length===0){return testSlab;}else{return createClassifyPointDegen(buildVerticalIndex(vsegments),testSlab);}}},{\"binary-search-bounds\":31,\"interval-tree-1d\":167,\"robust-orientation\":245,\"slab-decomposition\":260}],223:[function(_dereq_,module,exports){/*\n * @copyright 2016 Sean Connelly (@voidqk), http://syntheti.cc\n * @license MIT\n * @preserve Project Home: https://github.com/voidqk/polybooljs\n */var BuildLog=_dereq_('./lib/build-log');var Epsilon=_dereq_('./lib/epsilon');var Intersecter=_dereq_('./lib/intersecter');var SegmentChainer=_dereq_('./lib/segment-chainer');var SegmentSelector=_dereq_('./lib/segment-selector');var GeoJSON=_dereq_('./lib/geojson');var _buildLog=false;var _epsilon=Epsilon();var PolyBool;PolyBool={// getter/setter for buildLog\nbuildLog:function buildLog(bl){if(bl===true)_buildLog=BuildLog();else if(bl===false)_buildLog=false;return _buildLog===false?false:_buildLog.list;},// getter/setter for epsilon\nepsilon:function epsilon(v){return _epsilon.epsilon(v);},// core API\nsegments:function segments(poly){var i=Intersecter(true,_epsilon,_buildLog);poly.regions.forEach(i.addRegion);return{segments:i.calculate(poly.inverted),inverted:poly.inverted};},combine:function combine(segments1,segments2){var i3=Intersecter(false,_epsilon,_buildLog);return{combined:i3.calculate(segments1.segments,segments1.inverted,segments2.segments,segments2.inverted),inverted1:segments1.inverted,inverted2:segments2.inverted};},selectUnion:function selectUnion(combined){return{segments:SegmentSelector.union(combined.combined,_buildLog),inverted:combined.inverted1||combined.inverted2};},selectIntersect:function selectIntersect(combined){return{segments:SegmentSelector.intersect(combined.combined,_buildLog),inverted:combined.inverted1&&combined.inverted2};},selectDifference:function selectDifference(combined){return{segments:SegmentSelector.difference(combined.combined,_buildLog),inverted:combined.inverted1&&!combined.inverted2};},selectDifferenceRev:function selectDifferenceRev(combined){return{segments:SegmentSelector.differenceRev(combined.combined,_buildLog),inverted:!combined.inverted1&&combined.inverted2};},selectXor:function selectXor(combined){return{segments:SegmentSelector.xor(combined.combined,_buildLog),inverted:combined.inverted1!==combined.inverted2};},polygon:function polygon(segments){return{regions:SegmentChainer(segments.segments,_epsilon,_buildLog),inverted:segments.inverted};},// GeoJSON converters\npolygonFromGeoJSON:function polygonFromGeoJSON(geojson){return GeoJSON.toPolygon(PolyBool,geojson);},polygonToGeoJSON:function polygonToGeoJSON(poly){return GeoJSON.fromPolygon(PolyBool,_epsilon,poly);},// helper functions for common operations\nunion:function union(poly1,poly2){return operate(poly1,poly2,PolyBool.selectUnion);},intersect:function intersect(poly1,poly2){return operate(poly1,poly2,PolyBool.selectIntersect);},difference:function difference(poly1,poly2){return operate(poly1,poly2,PolyBool.selectDifference);},differenceRev:function differenceRev(poly1,poly2){return operate(poly1,poly2,PolyBool.selectDifferenceRev);},xor:function xor(poly1,poly2){return operate(poly1,poly2,PolyBool.selectXor);}};function operate(poly1,poly2,selector){var seg1=PolyBool.segments(poly1);var seg2=PolyBool.segments(poly2);var comb=PolyBool.combine(seg1,seg2);var seg3=selector(comb);return PolyBool.polygon(seg3);}if((typeof window===\"undefined\"?\"undefined\":_typeof(window))==='object')window.PolyBool=PolyBool;module.exports=PolyBool;},{\"./lib/build-log\":224,\"./lib/epsilon\":225,\"./lib/geojson\":226,\"./lib/intersecter\":227,\"./lib/segment-chainer\":229,\"./lib/segment-selector\":230}],224:[function(_dereq_,module,exports){// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n//\n// used strictly for logging the processing of the algorithm... only useful if you intend on\n// looking under the covers (for pretty UI's or debugging)\n//\nfunction BuildLog(){var my;var nextSegmentId=0;var curVert=false;function push(type,data){my.list.push({type:type,data:data?JSON.parse(JSON.stringify(data)):void 0});return my;}my={list:[],segmentId:function segmentId(){return nextSegmentId++;},checkIntersection:function checkIntersection(seg1,seg2){return push('check',{seg1:seg1,seg2:seg2});},segmentChop:function segmentChop(seg,end){push('div_seg',{seg:seg,pt:end});return push('chop',{seg:seg,pt:end});},statusRemove:function statusRemove(seg){return push('pop_seg',{seg:seg});},segmentUpdate:function segmentUpdate(seg){return push('seg_update',{seg:seg});},segmentNew:function segmentNew(seg,primary){return push('new_seg',{seg:seg,primary:primary});},segmentRemove:function segmentRemove(seg){return push('rem_seg',{seg:seg});},tempStatus:function tempStatus(seg,above,below){return push('temp_status',{seg:seg,above:above,below:below});},rewind:function rewind(seg){return push('rewind',{seg:seg});},status:function status(seg,above,below){return push('status',{seg:seg,above:above,below:below});},vert:function vert(x){if(x===curVert)return my;curVert=x;return push('vert',{x:x});},log:function log(data){if(typeof data!=='string')data=JSON.stringify(data,false,'  ');return push('log',{txt:data});},reset:function reset(){return push('reset');},selected:function selected(segs){return push('selected',{segs:segs});},chainStart:function chainStart(seg){return push('chain_start',{seg:seg});},chainRemoveHead:function chainRemoveHead(index,pt){return push('chain_rem_head',{index:index,pt:pt});},chainRemoveTail:function chainRemoveTail(index,pt){return push('chain_rem_tail',{index:index,pt:pt});},chainNew:function chainNew(pt1,pt2){return push('chain_new',{pt1:pt1,pt2:pt2});},chainMatch:function chainMatch(index){return push('chain_match',{index:index});},chainClose:function chainClose(index){return push('chain_close',{index:index});},chainAddHead:function chainAddHead(index,pt){return push('chain_add_head',{index:index,pt:pt});},chainAddTail:function chainAddTail(index,pt){return push('chain_add_tail',{index:index,pt:pt});},chainConnect:function chainConnect(index1,index2){return push('chain_con',{index1:index1,index2:index2});},chainReverse:function chainReverse(index){return push('chain_rev',{index:index});},chainJoin:function chainJoin(index1,index2){return push('chain_join',{index1:index1,index2:index2});},done:function done(){return push('done');}};return my;}module.exports=BuildLog;},{}],225:[function(_dereq_,module,exports){// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n//\n// provides the raw computation functions that takes epsilon into account\n//\n// zero is defined to be between (-epsilon, epsilon) exclusive\n//\nfunction Epsilon(eps){if(typeof eps!=='number')eps=0.0000000001;// sane default? sure why not\nvar my={epsilon:function epsilon(v){if(typeof v==='number')eps=v;return eps;},pointAboveOrOnLine:function pointAboveOrOnLine(pt,left,right){var Ax=left[0];var Ay=left[1];var Bx=right[0];var By=right[1];var Cx=pt[0];var Cy=pt[1];return(Bx-Ax)*(Cy-Ay)-(By-Ay)*(Cx-Ax)>=-eps;},pointBetween:function pointBetween(p,left,right){// p must be collinear with left->right\n// returns false if p == left, p == right, or left == right\nvar d_py_ly=p[1]-left[1];var d_rx_lx=right[0]-left[0];var d_px_lx=p[0]-left[0];var d_ry_ly=right[1]-left[1];var dot=d_px_lx*d_rx_lx+d_py_ly*d_ry_ly;// if `dot` is 0, then `p` == `left` or `left` == `right` (reject)\n// if `dot` is less than 0, then `p` is to the left of `left` (reject)\nif(dot<eps)return false;var sqlen=d_rx_lx*d_rx_lx+d_ry_ly*d_ry_ly;// if `dot` > `sqlen`, then `p` is to the right of `right` (reject)\n// therefore, if `dot - sqlen` is greater than 0, then `p` is to the right of `right` (reject)\nif(dot-sqlen>-eps)return false;return true;},pointsSameX:function pointsSameX(p1,p2){return Math.abs(p1[0]-p2[0])<eps;},pointsSameY:function pointsSameY(p1,p2){return Math.abs(p1[1]-p2[1])<eps;},pointsSame:function pointsSame(p1,p2){return my.pointsSameX(p1,p2)&&my.pointsSameY(p1,p2);},pointsCompare:function pointsCompare(p1,p2){// returns -1 if p1 is smaller, 1 if p2 is smaller, 0 if equal\nif(my.pointsSameX(p1,p2))return my.pointsSameY(p1,p2)?0:p1[1]<p2[1]?-1:1;return p1[0]<p2[0]?-1:1;},pointsCollinear:function pointsCollinear(pt1,pt2,pt3){// does pt1->pt2->pt3 make a straight line?\n// essentially this is just checking to see if the slope(pt1->pt2) === slope(pt2->pt3)\n// if slopes are equal, then they must be collinear, because they share pt2\nvar dx1=pt1[0]-pt2[0];var dy1=pt1[1]-pt2[1];var dx2=pt2[0]-pt3[0];var dy2=pt2[1]-pt3[1];return Math.abs(dx1*dy2-dx2*dy1)<eps;},linesIntersect:function linesIntersect(a0,a1,b0,b1){// returns false if the lines are coincident (e.g., parallel or on top of each other)\n//\n// returns an object if the lines intersect:\n//   {\n//     pt: [x, y],    where the intersection point is at\n//     alongA: where intersection point is along A,\n//     alongB: where intersection point is along B\n//   }\n//\n//  alongA and alongB will each be one of: -2, -1, 0, 1, 2\n//\n//  with the following meaning:\n//\n//    -2   intersection point is before segment's first point\n//    -1   intersection point is directly on segment's first point\n//     0   intersection point is between segment's first and second points (exclusive)\n//     1   intersection point is directly on segment's second point\n//     2   intersection point is after segment's second point\nvar adx=a1[0]-a0[0];var ady=a1[1]-a0[1];var bdx=b1[0]-b0[0];var bdy=b1[1]-b0[1];var axb=adx*bdy-ady*bdx;if(Math.abs(axb)<eps)return false;// lines are coincident\nvar dx=a0[0]-b0[0];var dy=a0[1]-b0[1];var A=(bdx*dy-bdy*dx)/axb;var B=(adx*dy-ady*dx)/axb;var ret={alongA:0,alongB:0,pt:[a0[0]+A*adx,a0[1]+A*ady]};// categorize where intersection point is along A and B\nif(A<=-eps)ret.alongA=-2;else if(A<eps)ret.alongA=-1;else if(A-1<=-eps)ret.alongA=0;else if(A-1<eps)ret.alongA=1;else ret.alongA=2;if(B<=-eps)ret.alongB=-2;else if(B<eps)ret.alongB=-1;else if(B-1<=-eps)ret.alongB=0;else if(B-1<eps)ret.alongB=1;else ret.alongB=2;return ret;},pointInsideRegion:function pointInsideRegion(pt,region){var x=pt[0];var y=pt[1];var last_x=region[region.length-1][0];var last_y=region[region.length-1][1];var inside=false;for(var i=0;i<region.length;i++){var curr_x=region[i][0];var curr_y=region[i][1];// if y is between curr_y and last_y, and\n// x is to the right of the boundary created by the line\nif(curr_y-y>eps!=last_y-y>eps&&(last_x-curr_x)*(y-curr_y)/(last_y-curr_y)+curr_x-x>eps)inside=!inside;last_x=curr_x;last_y=curr_y;}return inside;}};return my;}module.exports=Epsilon;},{}],226:[function(_dereq_,module,exports){// (c) Copyright 2017, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n//\n// convert between PolyBool polygon format and GeoJSON formats (Polygon and MultiPolygon)\n//\nvar GeoJSON={// convert a GeoJSON object to a PolyBool polygon\ntoPolygon:function toPolygon(PolyBool,geojson){// converts list of LineString's to segments\nfunction GeoPoly(coords){// check for empty coords\nif(coords.length<=0)return PolyBool.segments({inverted:false,regions:[]});// convert LineString to segments\nfunction LineString(ls){// remove tail which should be the same as head\nvar reg=ls.slice(0,ls.length-1);return PolyBool.segments({inverted:false,regions:[reg]});}// the first LineString is considered the outside\nvar out=LineString(coords[0]);// the rest of the LineStrings are considered interior holes, so subtract them from the\n// current result\nfor(var i=1;i<coords.length;i++){out=PolyBool.selectDifference(PolyBool.combine(out,LineString(coords[i])));}return out;}if(geojson.type==='Polygon'){// single polygon, so just convert it and we're done\nreturn PolyBool.polygon(GeoPoly(geojson.coordinates));}else if(geojson.type==='MultiPolygon'){// multiple polygons, so union all the polygons together\nvar out=PolyBool.segments({inverted:false,regions:[]});for(var i=0;i<geojson.coordinates.length;i++){out=PolyBool.selectUnion(PolyBool.combine(out,GeoPoly(geojson.coordinates[i])));}return PolyBool.polygon(out);}throw new Error('PolyBool: Cannot convert GeoJSON object to PolyBool polygon');},// convert a PolyBool polygon to a GeoJSON object\nfromPolygon:function fromPolygon(PolyBool,eps,poly){// make sure out polygon is clean\npoly=PolyBool.polygon(PolyBool.segments(poly));// test if r1 is inside r2\nfunction regionInsideRegion(r1,r2){// we're guaranteed no lines intersect (because the polygon is clean), but a vertex\n// could be on the edge -- so we just average pt[0] and pt[1] to produce a point on the\n// edge of the first line, which cannot be on an edge\nreturn eps.pointInsideRegion([(r1[0][0]+r1[1][0])*0.5,(r1[0][1]+r1[1][1])*0.5],r2);}// calculate inside heirarchy\n//\n//  _____________________   _______    roots -> A       -> F\n// |          A          | |   F   |            |          |\n// |  _______   _______  | |  ___  |            +-- B      +-- G\n// | |   B   | |   C   | | | |   | |            |   |\n// | |  ___  | |  ___  | | | |   | |            |   +-- D\n// | | | D | | | | E | | | | | G | |            |\n// | | |___| | | |___| | | | |   | |            +-- C\n// | |_______| |_______| | | |___| |                |\n// |_____________________| |_______|                +-- E\nfunction newNode(region){return{region:region,children:[]};}var roots=newNode(null);function addChild(root,region){// first check if we're inside any children\nfor(var i=0;i<root.children.length;i++){var child=root.children[i];if(regionInsideRegion(region,child.region)){// we are, so insert inside them instead\naddChild(child,region);return;}}// not inside any children, so check to see if any children are inside us\nvar node=newNode(region);for(var i=0;i<root.children.length;i++){var child=root.children[i];if(regionInsideRegion(child.region,region)){// oops... move the child beneath us, and remove them from root\nnode.children.push(child);root.children.splice(i,1);i--;}}// now we can add ourselves\nroot.children.push(node);}// add all regions to the root\nfor(var i=0;i<poly.regions.length;i++){var region=poly.regions[i];if(region.length<3)// regions must have at least 3 points (sanity check)\ncontinue;addChild(roots,region);}// with our heirarchy, we can distinguish between exterior borders, and interior holes\n// the root nodes are exterior, children are interior, children's children are exterior,\n// children's children's children are interior, etc\n// while we're at it, exteriors are counter-clockwise, and interiors are clockwise\nfunction forceWinding(region,clockwise){// first, see if we're clockwise or counter-clockwise\n// https://en.wikipedia.org/wiki/Shoelace_formula\nvar winding=0;var last_x=region[region.length-1][0];var last_y=region[region.length-1][1];var copy=[];for(var i=0;i<region.length;i++){var curr_x=region[i][0];var curr_y=region[i][1];copy.push([curr_x,curr_y]);// create a copy while we're at it\nwinding+=curr_y*last_x-curr_x*last_y;last_x=curr_x;last_y=curr_y;}// this assumes Cartesian coordinates (Y is positive going up)\nvar isclockwise=winding<0;if(isclockwise!==clockwise)copy.reverse();// while we're here, the last point must be the first point...\ncopy.push([copy[0][0],copy[0][1]]);return copy;}var geopolys=[];function addExterior(node){var poly=[forceWinding(node.region,false)];geopolys.push(poly);// children of exteriors are interior\nfor(var i=0;i<node.children.length;i++){poly.push(getInterior(node.children[i]));}}function getInterior(node){// children of interiors are exterior\nfor(var i=0;i<node.children.length;i++){addExterior(node.children[i]);}// return the clockwise interior\nreturn forceWinding(node.region,true);}// root nodes are exterior\nfor(var i=0;i<roots.children.length;i++){addExterior(roots.children[i]);}// lastly, construct the approrpriate GeoJSON object\nif(geopolys.length<=0)// empty GeoJSON Polygon\nreturn{type:'Polygon',coordinates:[]};if(geopolys.length==1)// use a GeoJSON Polygon\nreturn{type:'Polygon',coordinates:geopolys[0]};return{// otherwise, use a GeoJSON MultiPolygon\ntype:'MultiPolygon',coordinates:geopolys};}};module.exports=GeoJSON;},{}],227:[function(_dereq_,module,exports){// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n//\n// this is the core work-horse\n//\nvar LinkedList=_dereq_('./linked-list');function Intersecter(selfIntersection,eps,buildLog){// selfIntersection is true/false depending on the phase of the overall algorithm\n//\n// segment creation\n//\nfunction segmentNew(start,end){return{id:buildLog?buildLog.segmentId():-1,start:start,end:end,myFill:{above:null,// is there fill above us?\nbelow:null// is there fill below us?\n},otherFill:null};}function segmentCopy(start,end,seg){return{id:buildLog?buildLog.segmentId():-1,start:start,end:end,myFill:{above:seg.myFill.above,below:seg.myFill.below},otherFill:null};}//\n// event logic\n//\nvar event_root=LinkedList.create();function eventCompare(p1_isStart,p1_1,p1_2,p2_isStart,p2_1,p2_2){// compare the selected points first\nvar comp=eps.pointsCompare(p1_1,p2_1);if(comp!==0)return comp;// the selected points are the same\nif(eps.pointsSame(p1_2,p2_2))// if the non-selected points are the same too...\nreturn 0;// then the segments are equal\nif(p1_isStart!==p2_isStart)// if one is a start and the other isn't...\nreturn p1_isStart?1:-1;// favor the one that isn't the start\n// otherwise, we'll have to calculate which one is below the other manually\nreturn eps.pointAboveOrOnLine(p1_2,p2_isStart?p2_1:p2_2,// order matters\np2_isStart?p2_2:p2_1)?1:-1;}function eventAdd(ev,other_pt){event_root.insertBefore(ev,function(here){// should ev be inserted before here?\nvar comp=eventCompare(ev.isStart,ev.pt,other_pt,here.isStart,here.pt,here.other.pt);return comp<0;});}function eventAddSegmentStart(seg,primary){var ev_start=LinkedList.node({isStart:true,pt:seg.start,seg:seg,primary:primary,other:null,status:null});eventAdd(ev_start,seg.end);return ev_start;}function eventAddSegmentEnd(ev_start,seg,primary){var ev_end=LinkedList.node({isStart:false,pt:seg.end,seg:seg,primary:primary,other:ev_start,status:null});ev_start.other=ev_end;eventAdd(ev_end,ev_start.pt);}function eventAddSegment(seg,primary){var ev_start=eventAddSegmentStart(seg,primary);eventAddSegmentEnd(ev_start,seg,primary);return ev_start;}function eventUpdateEnd(ev,end){// slides an end backwards\n//   (start)------------(end)    to:\n//   (start)---(end)\nif(buildLog)buildLog.segmentChop(ev.seg,end);ev.other.remove();ev.seg.end=end;ev.other.pt=end;eventAdd(ev.other,ev.pt);}function eventDivide(ev,pt){var ns=segmentCopy(pt,ev.seg.end,ev.seg);eventUpdateEnd(ev,pt);return eventAddSegment(ns,ev.primary);}function _calculate(primaryPolyInverted,secondaryPolyInverted){// if selfIntersection is true then there is no secondary polygon, so that isn't used\n//\n// status logic\n//\nvar status_root=LinkedList.create();function statusCompare(ev1,ev2){var a1=ev1.seg.start;var a2=ev1.seg.end;var b1=ev2.seg.start;var b2=ev2.seg.end;if(eps.pointsCollinear(a1,b1,b2)){if(eps.pointsCollinear(a2,b1,b2))return 1;//eventCompare(true, a1, a2, true, b1, b2);\nreturn eps.pointAboveOrOnLine(a2,b1,b2)?1:-1;}return eps.pointAboveOrOnLine(a1,b1,b2)?1:-1;}function statusFindSurrounding(ev){return status_root.findTransition(function(here){var comp=statusCompare(ev,here.ev);return comp>0;});}function checkIntersection(ev1,ev2){// returns the segment equal to ev1, or false if nothing equal\nvar seg1=ev1.seg;var seg2=ev2.seg;var a1=seg1.start;var a2=seg1.end;var b1=seg2.start;var b2=seg2.end;if(buildLog)buildLog.checkIntersection(seg1,seg2);var i=eps.linesIntersect(a1,a2,b1,b2);if(i===false){// segments are parallel or coincident\n// if points aren't collinear, then the segments are parallel, so no intersections\nif(!eps.pointsCollinear(a1,a2,b1))return false;// otherwise, segments are on top of each other somehow (aka coincident)\nif(eps.pointsSame(a1,b2)||eps.pointsSame(a2,b1))return false;// segments touch at endpoints... no intersection\nvar a1_equ_b1=eps.pointsSame(a1,b1);var a2_equ_b2=eps.pointsSame(a2,b2);if(a1_equ_b1&&a2_equ_b2)return ev2;// segments are exactly equal\nvar a1_between=!a1_equ_b1&&eps.pointBetween(a1,b1,b2);var a2_between=!a2_equ_b2&&eps.pointBetween(a2,b1,b2);// handy for debugging:\n// buildLog.log({\n//\ta1_equ_b1: a1_equ_b1,\n//\ta2_equ_b2: a2_equ_b2,\n//\ta1_between: a1_between,\n//\ta2_between: a2_between\n// });\nif(a1_equ_b1){if(a2_between){//  (a1)---(a2)\n//  (b1)----------(b2)\neventDivide(ev2,a2);}else{//  (a1)----------(a2)\n//  (b1)---(b2)\neventDivide(ev1,b2);}return ev2;}else if(a1_between){if(!a2_equ_b2){// make a2 equal to b2\nif(a2_between){//         (a1)---(a2)\n//  (b1)-----------------(b2)\neventDivide(ev2,a2);}else{//         (a1)----------(a2)\n//  (b1)----------(b2)\neventDivide(ev1,b2);}}//         (a1)---(a2)\n//  (b1)----------(b2)\neventDivide(ev2,a1);}}else{// otherwise, lines intersect at i.pt, which may or may not be between the endpoints\n// is A divided between its endpoints? (exclusive)\nif(i.alongA===0){if(i.alongB===-1)// yes, at exactly b1\neventDivide(ev1,b1);else if(i.alongB===0)// yes, somewhere between B's endpoints\neventDivide(ev1,i.pt);else if(i.alongB===1)// yes, at exactly b2\neventDivide(ev1,b2);}// is B divided between its endpoints? (exclusive)\nif(i.alongB===0){if(i.alongA===-1)// yes, at exactly a1\neventDivide(ev2,a1);else if(i.alongA===0)// yes, somewhere between A's endpoints (exclusive)\neventDivide(ev2,i.pt);else if(i.alongA===1)// yes, at exactly a2\neventDivide(ev2,a2);}}return false;}//\n// main event loop\n//\nvar segments=[];while(!event_root.isEmpty()){var ev=event_root.getHead();if(buildLog)buildLog.vert(ev.pt[0]);if(ev.isStart){var checkBothIntersections=function checkBothIntersections(){if(above){var eve=checkIntersection(ev,above);if(eve)return eve;}if(below)return checkIntersection(ev,below);return false;};if(buildLog)buildLog.segmentNew(ev.seg,ev.primary);var surrounding=statusFindSurrounding(ev);var above=surrounding.before?surrounding.before.ev:null;var below=surrounding.after?surrounding.after.ev:null;if(buildLog){buildLog.tempStatus(ev.seg,above?above.seg:false,below?below.seg:false);}var eve=checkBothIntersections();if(eve){// ev and eve are equal\n// we'll keep eve and throw away ev\n// merge ev.seg's fill information into eve.seg\nif(selfIntersection){var toggle;// are we a toggling edge?\nif(ev.seg.myFill.below===null)toggle=true;else toggle=ev.seg.myFill.above!==ev.seg.myFill.below;// merge two segments that belong to the same polygon\n// think of this as sandwiching two segments together, where `eve.seg` is\n// the bottom -- this will cause the above fill flag to toggle\nif(toggle)eve.seg.myFill.above=!eve.seg.myFill.above;}else{// merge two segments that belong to different polygons\n// each segment has distinct knowledge, so no special logic is needed\n// note that this can only happen once per segment in this phase, because we\n// are guaranteed that all self-intersections are gone\neve.seg.otherFill=ev.seg.myFill;}if(buildLog)buildLog.segmentUpdate(eve.seg);ev.other.remove();ev.remove();}if(event_root.getHead()!==ev){// something was inserted before us in the event queue, so loop back around and\n// process it before continuing\nif(buildLog)buildLog.rewind(ev.seg);continue;}//\n// calculate fill flags\n//\nif(selfIntersection){var toggle;// are we a toggling edge?\nif(ev.seg.myFill.below===null)// if we are a new segment...\ntoggle=true;// then we toggle\nelse// we are a segment that has previous knowledge from a division\ntoggle=ev.seg.myFill.above!==ev.seg.myFill.below;// calculate toggle\n// next, calculate whether we are filled below us\nif(!below){// if nothing is below us...\n// we are filled below us if the polygon is inverted\nev.seg.myFill.below=primaryPolyInverted;}else{// otherwise, we know the answer -- it's the same if whatever is below\n// us is filled above it\nev.seg.myFill.below=below.seg.myFill.above;}// since now we know if we're filled below us, we can calculate whether\n// we're filled above us by applying toggle to whatever is below us\nif(toggle)ev.seg.myFill.above=!ev.seg.myFill.below;else ev.seg.myFill.above=ev.seg.myFill.below;}else{// now we fill in any missing transition information, since we are all-knowing\n// at this point\nif(ev.seg.otherFill===null){// if we don't have other information, then we need to figure out if we're\n// inside the other polygon\nvar inside;if(!below){// if nothing is below us, then we're inside if the other polygon is\n// inverted\ninside=ev.primary?secondaryPolyInverted:primaryPolyInverted;}else{// otherwise, something is below us\n// so copy the below segment's other polygon's above\nif(ev.primary===below.primary)inside=below.seg.otherFill.above;else inside=below.seg.myFill.above;}ev.seg.otherFill={above:inside,below:inside};}}if(buildLog){buildLog.status(ev.seg,above?above.seg:false,below?below.seg:false);}// insert the status and remember it for later removal\nev.other.status=surrounding.insert(LinkedList.node({ev:ev}));}else{var st=ev.status;if(st===null){throw new Error('PolyBool: Zero-length segment detected; your epsilon is '+'probably too small or too large');}// removing the status will create two new adjacent edges, so we'll need to check\n// for those\nif(status_root.exists(st.prev)&&status_root.exists(st.next))checkIntersection(st.prev.ev,st.next.ev);if(buildLog)buildLog.statusRemove(st.ev.seg);// remove the status\nst.remove();// if we've reached this point, we've calculated everything there is to know, so\n// save the segment for reporting\nif(!ev.primary){// make sure `seg.myFill` actually points to the primary polygon though\nvar s=ev.seg.myFill;ev.seg.myFill=ev.seg.otherFill;ev.seg.otherFill=s;}segments.push(ev.seg);}// remove the event and continue\nevent_root.getHead().remove();}if(buildLog)buildLog.done();return segments;}// return the appropriate API depending on what we're doing\nif(!selfIntersection){// performing combination of polygons, so only deal with already-processed segments\nreturn{calculate:function calculate(segments1,inverted1,segments2,inverted2){// segmentsX come from the self-intersection API, or this API\n// invertedX is whether we treat that list of segments as an inverted polygon or not\n// returns segments that can be used for further operations\nsegments1.forEach(function(seg){eventAddSegment(segmentCopy(seg.start,seg.end,seg),true);});segments2.forEach(function(seg){eventAddSegment(segmentCopy(seg.start,seg.end,seg),false);});return _calculate(inverted1,inverted2);}};}// otherwise, performing self-intersection, so deal with regions\nreturn{addRegion:function addRegion(region){// regions are a list of points:\n//  [ [0, 0], [100, 0], [50, 100] ]\n// you can add multiple regions before running calculate\nvar pt1;var pt2=region[region.length-1];for(var i=0;i<region.length;i++){pt1=pt2;pt2=region[i];var forward=eps.pointsCompare(pt1,pt2);if(forward===0)// points are equal, so we have a zero-length segment\ncontinue;// just skip it\neventAddSegment(segmentNew(forward<0?pt1:pt2,forward<0?pt2:pt1),true);}},calculate:function calculate(inverted){// is the polygon inverted?\n// returns segments\nreturn _calculate(inverted,false);}};}module.exports=Intersecter;},{\"./linked-list\":228}],228:[function(_dereq_,module,exports){// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n//\n// simple linked list implementation that allows you to traverse down nodes and save positions\n//\nvar LinkedList={create:function create(){var my={root:{root:true,next:null},exists:function exists(node){if(node===null||node===my.root)return false;return true;},isEmpty:function isEmpty(){return my.root.next===null;},getHead:function getHead(){return my.root.next;},insertBefore:function insertBefore(node,check){var last=my.root;var here=my.root.next;while(here!==null){if(check(here)){node.prev=here.prev;node.next=here;here.prev.next=node;here.prev=node;return;}last=here;here=here.next;}last.next=node;node.prev=last;node.next=null;},findTransition:function findTransition(check){var prev=my.root;var here=my.root.next;while(here!==null){if(check(here))break;prev=here;here=here.next;}return{before:prev===my.root?null:prev,after:here,insert:function insert(node){node.prev=prev;node.next=here;prev.next=node;if(here!==null)here.prev=node;return node;}};}};return my;},node:function node(data){data.prev=null;data.next=null;data.remove=function(){data.prev.next=data.next;if(data.next)data.next.prev=data.prev;data.prev=null;data.next=null;};return data;}};module.exports=LinkedList;},{}],229:[function(_dereq_,module,exports){// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n//\n// converts a list of segments into a list of regions, while also removing unnecessary verticies\n//\nfunction SegmentChainer(segments,eps,buildLog){var chains=[];var regions=[];segments.forEach(function(seg){var pt1=seg.start;var pt2=seg.end;if(eps.pointsSame(pt1,pt2)){console.warn('PolyBool: Warning: Zero-length segment detected; your epsilon is '+'probably too small or too large');return;}if(buildLog)buildLog.chainStart(seg);// search for two chains that this segment matches\nvar first_match={index:0,matches_head:false,matches_pt1:false};var second_match={index:0,matches_head:false,matches_pt1:false};var next_match=first_match;function setMatch(index,matches_head,matches_pt1){// return true if we've matched twice\nnext_match.index=index;next_match.matches_head=matches_head;next_match.matches_pt1=matches_pt1;if(next_match===first_match){next_match=second_match;return false;}next_match=null;return true;// we've matched twice, we're done here\n}for(var i=0;i<chains.length;i++){var chain=chains[i];var head=chain[0];var head2=chain[1];var tail=chain[chain.length-1];var tail2=chain[chain.length-2];if(eps.pointsSame(head,pt1)){if(setMatch(i,true,true))break;}else if(eps.pointsSame(head,pt2)){if(setMatch(i,true,false))break;}else if(eps.pointsSame(tail,pt1)){if(setMatch(i,false,true))break;}else if(eps.pointsSame(tail,pt2)){if(setMatch(i,false,false))break;}}if(next_match===first_match){// we didn't match anything, so create a new chain\nchains.push([pt1,pt2]);if(buildLog)buildLog.chainNew(pt1,pt2);return;}if(next_match===second_match){// we matched a single chain\nif(buildLog)buildLog.chainMatch(first_match.index);// add the other point to the apporpriate end, and check to see if we've closed the\n// chain into a loop\nvar index=first_match.index;var pt=first_match.matches_pt1?pt2:pt1;// if we matched pt1, then we add pt2, etc\nvar addToHead=first_match.matches_head;// if we matched at head, then add to the head\nvar chain=chains[index];var grow=addToHead?chain[0]:chain[chain.length-1];var grow2=addToHead?chain[1]:chain[chain.length-2];var oppo=addToHead?chain[chain.length-1]:chain[0];var oppo2=addToHead?chain[chain.length-2]:chain[1];if(eps.pointsCollinear(grow2,grow,pt)){// grow isn't needed because it's directly between grow2 and pt:\n// grow2 ---grow---\x3e pt\nif(addToHead){if(buildLog)buildLog.chainRemoveHead(first_match.index,pt);chain.shift();}else{if(buildLog)buildLog.chainRemoveTail(first_match.index,pt);chain.pop();}grow=grow2;// old grow is gone... new grow is what grow2 was\n}if(eps.pointsSame(oppo,pt)){// we're closing the loop, so remove chain from chains\nchains.splice(index,1);if(eps.pointsCollinear(oppo2,oppo,grow)){// oppo isn't needed because it's directly between oppo2 and grow:\n// oppo2 ---oppo---\x3egrow\nif(addToHead){if(buildLog)buildLog.chainRemoveTail(first_match.index,grow);chain.pop();}else{if(buildLog)buildLog.chainRemoveHead(first_match.index,grow);chain.shift();}}if(buildLog)buildLog.chainClose(first_match.index);// we have a closed chain!\nregions.push(chain);return;}// not closing a loop, so just add it to the apporpriate side\nif(addToHead){if(buildLog)buildLog.chainAddHead(first_match.index,pt);chain.unshift(pt);}else{if(buildLog)buildLog.chainAddTail(first_match.index,pt);chain.push(pt);}return;}// otherwise, we matched two chains, so we need to combine those chains together\nfunction reverseChain(index){if(buildLog)buildLog.chainReverse(index);chains[index].reverse();// gee, that's easy\n}function appendChain(index1,index2){// index1 gets index2 appended to it, and index2 is removed\nvar chain1=chains[index1];var chain2=chains[index2];var tail=chain1[chain1.length-1];var tail2=chain1[chain1.length-2];var head=chain2[0];var head2=chain2[1];if(eps.pointsCollinear(tail2,tail,head)){// tail isn't needed because it's directly between tail2 and head\n// tail2 ---tail---\x3e head\nif(buildLog)buildLog.chainRemoveTail(index1,tail);chain1.pop();tail=tail2;// old tail is gone... new tail is what tail2 was\n}if(eps.pointsCollinear(tail,head,head2)){// head isn't needed because it's directly between tail and head2\n// tail ---head---\x3e head2\nif(buildLog)buildLog.chainRemoveHead(index2,head);chain2.shift();}if(buildLog)buildLog.chainJoin(index1,index2);chains[index1]=chain1.concat(chain2);chains.splice(index2,1);}var F=first_match.index;var S=second_match.index;if(buildLog)buildLog.chainConnect(F,S);var reverseF=chains[F].length<chains[S].length;// reverse the shorter chain, if needed\nif(first_match.matches_head){if(second_match.matches_head){if(reverseF){// <<<< F <<<< --- >>>> S >>>>\nreverseChain(F);// >>>> F >>>> --- >>>> S >>>>\nappendChain(F,S);}else{// <<<< F <<<< --- >>>> S >>>>\nreverseChain(S);// <<<< F <<<< --- <<<< S <<<<   logically same as:\n// >>>> S >>>> --- >>>> F >>>>\nappendChain(S,F);}}else{// <<<< F <<<< --- <<<< S <<<<   logically same as:\n// >>>> S >>>> --- >>>> F >>>>\nappendChain(S,F);}}else{if(second_match.matches_head){// >>>> F >>>> --- >>>> S >>>>\nappendChain(F,S);}else{if(reverseF){// >>>> F >>>> --- <<<< S <<<<\nreverseChain(F);// <<<< F <<<< --- <<<< S <<<<   logically same as:\n// >>>> S >>>> --- >>>> F >>>>\nappendChain(S,F);}else{// >>>> F >>>> --- <<<< S <<<<\nreverseChain(S);// >>>> F >>>> --- >>>> S >>>>\nappendChain(F,S);}}}});return regions;}module.exports=SegmentChainer;},{}],230:[function(_dereq_,module,exports){// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n//\n// filter a list of segments based on boolean operations\n//\nfunction select(segments,selection,buildLog){var result=[];segments.forEach(function(seg){var index=(seg.myFill.above?8:0)+(seg.myFill.below?4:0)+(seg.otherFill&&seg.otherFill.above?2:0)+(seg.otherFill&&seg.otherFill.below?1:0);if(selection[index]!==0){// copy the segment to the results, while also calculating the fill status\nresult.push({id:buildLog?buildLog.segmentId():-1,start:seg.start,end:seg.end,myFill:{above:selection[index]===1,// 1 if filled above\nbelow:selection[index]===2// 2 if filled below\n},otherFill:null});}});if(buildLog)buildLog.selected(result);return result;}var SegmentSelector={union:function union(segments,buildLog){// primary | secondary\n// above1 below1 above2 below2    Keep?               Value\n//    0      0      0      0   =>   no                  0\n//    0      0      0      1   =>   yes filled below    2\n//    0      0      1      0   =>   yes filled above    1\n//    0      0      1      1   =>   no                  0\n//    0      1      0      0   =>   yes filled below    2\n//    0      1      0      1   =>   yes filled below    2\n//    0      1      1      0   =>   no                  0\n//    0      1      1      1   =>   no                  0\n//    1      0      0      0   =>   yes filled above    1\n//    1      0      0      1   =>   no                  0\n//    1      0      1      0   =>   yes filled above    1\n//    1      0      1      1   =>   no                  0\n//    1      1      0      0   =>   no                  0\n//    1      1      0      1   =>   no                  0\n//    1      1      1      0   =>   no                  0\n//    1      1      1      1   =>   no                  0\nreturn select(segments,[0,2,1,0,2,2,0,0,1,0,1,0,0,0,0,0],buildLog);},intersect:function intersect(segments,buildLog){// primary & secondary\n// above1 below1 above2 below2    Keep?               Value\n//    0      0      0      0   =>   no                  0\n//    0      0      0      1   =>   no                  0\n//    0      0      1      0   =>   no                  0\n//    0      0      1      1   =>   no                  0\n//    0      1      0      0   =>   no                  0\n//    0      1      0      1   =>   yes filled below    2\n//    0      1      1      0   =>   no                  0\n//    0      1      1      1   =>   yes filled below    2\n//    1      0      0      0   =>   no                  0\n//    1      0      0      1   =>   no                  0\n//    1      0      1      0   =>   yes filled above    1\n//    1      0      1      1   =>   yes filled above    1\n//    1      1      0      0   =>   no                  0\n//    1      1      0      1   =>   yes filled below    2\n//    1      1      1      0   =>   yes filled above    1\n//    1      1      1      1   =>   no                  0\nreturn select(segments,[0,0,0,0,0,2,0,2,0,0,1,1,0,2,1,0],buildLog);},difference:function difference(segments,buildLog){// primary - secondary\n// above1 below1 above2 below2    Keep?               Value\n//    0      0      0      0   =>   no                  0\n//    0      0      0      1   =>   no                  0\n//    0      0      1      0   =>   no                  0\n//    0      0      1      1   =>   no                  0\n//    0      1      0      0   =>   yes filled below    2\n//    0      1      0      1   =>   no                  0\n//    0      1      1      0   =>   yes filled below    2\n//    0      1      1      1   =>   no                  0\n//    1      0      0      0   =>   yes filled above    1\n//    1      0      0      1   =>   yes filled above    1\n//    1      0      1      0   =>   no                  0\n//    1      0      1      1   =>   no                  0\n//    1      1      0      0   =>   no                  0\n//    1      1      0      1   =>   yes filled above    1\n//    1      1      1      0   =>   yes filled below    2\n//    1      1      1      1   =>   no                  0\nreturn select(segments,[0,0,0,0,2,0,2,0,1,1,0,0,0,1,2,0],buildLog);},differenceRev:function differenceRev(segments,buildLog){// secondary - primary\n// above1 below1 above2 below2    Keep?               Value\n//    0      0      0      0   =>   no                  0\n//    0      0      0      1   =>   yes filled below    2\n//    0      0      1      0   =>   yes filled above    1\n//    0      0      1      1   =>   no                  0\n//    0      1      0      0   =>   no                  0\n//    0      1      0      1   =>   no                  0\n//    0      1      1      0   =>   yes filled above    1\n//    0      1      1      1   =>   yes filled above    1\n//    1      0      0      0   =>   no                  0\n//    1      0      0      1   =>   yes filled below    2\n//    1      0      1      0   =>   no                  0\n//    1      0      1      1   =>   yes filled below    2\n//    1      1      0      0   =>   no                  0\n//    1      1      0      1   =>   no                  0\n//    1      1      1      0   =>   no                  0\n//    1      1      1      1   =>   no                  0\nreturn select(segments,[0,2,1,0,0,0,1,1,0,2,0,2,0,0,0,0],buildLog);},xor:function xor(segments,buildLog){// primary ^ secondary\n// above1 below1 above2 below2    Keep?               Value\n//    0      0      0      0   =>   no                  0\n//    0      0      0      1   =>   yes filled below    2\n//    0      0      1      0   =>   yes filled above    1\n//    0      0      1      1   =>   no                  0\n//    0      1      0      0   =>   yes filled below    2\n//    0      1      0      1   =>   no                  0\n//    0      1      1      0   =>   no                  0\n//    0      1      1      1   =>   yes filled above    1\n//    1      0      0      0   =>   yes filled above    1\n//    1      0      0      1   =>   no                  0\n//    1      0      1      0   =>   no                  0\n//    1      0      1      1   =>   yes filled below    2\n//    1      1      0      0   =>   no                  0\n//    1      1      0      1   =>   yes filled above    1\n//    1      1      1      0   =>   yes filled below    2\n//    1      1      1      1   =>   no                  0\nreturn select(segments,[0,2,1,0,2,0,0,1,1,0,0,2,0,1,2,0],buildLog);}};module.exports=SegmentSelector;},{}],231:[function(_dereq_,module,exports){//Optimized version for triangle closest point\n// Based on Eberly's WildMagick codes\n// http://www.geometrictools.com/LibMathematics/Distance/Distance.html\n\"use strict\";var diff=new Float64Array(4);var edge0=new Float64Array(4);var edge1=new Float64Array(4);function closestPoint2d(V0,V1,V2,point,result){//Reallocate buffers if necessary\nif(diff.length<point.length){diff=new Float64Array(point.length);edge0=new Float64Array(point.length);edge1=new Float64Array(point.length);}//Compute edges\nfor(var i=0;i<point.length;++i){diff[i]=V0[i]-point[i];edge0[i]=V1[i]-V0[i];edge1[i]=V2[i]-V0[i];}//Compute coefficients for quadratic func\nvar a00=0.0,a01=0.0,a11=0.0,b0=0.0,b1=0.0,c=0.0;for(var i=0;i<point.length;++i){var e0=edge0[i],e1=edge1[i],d=diff[i];a00+=e0*e0;a01+=e0*e1;a11+=e1*e1;b0+=d*e0;b1+=d*e1;c+=d*d;}//Compute determinant/coeffs\nvar det=Math.abs(a00*a11-a01*a01);var s=a01*b1-a11*b0;var t=a01*b0-a00*b1;var sqrDistance;//Hardcoded Voronoi diagram classification\nif(s+t<=det){if(s<0){if(t<0){// region 4\nif(b0<0){t=0;if(-b0>=a00){s=1.0;sqrDistance=a00+2.0*b0+c;}else{s=-b0/a00;sqrDistance=b0*s+c;}}else{s=0;if(b1>=0){t=0;sqrDistance=c;}else if(-b1>=a11){t=1;sqrDistance=a11+2.0*b1+c;}else{t=-b1/a11;sqrDistance=b1*t+c;}}}else{// region 3\ns=0;if(b1>=0){t=0;sqrDistance=c;}else if(-b1>=a11){t=1;sqrDistance=a11+2.0*b1+c;}else{t=-b1/a11;sqrDistance=b1*t+c;}}}else if(t<0){// region 5\nt=0;if(b0>=0){s=0;sqrDistance=c;}else if(-b0>=a00){s=1;sqrDistance=a00+2.0*b0+c;}else{s=-b0/a00;sqrDistance=b0*s+c;}}else{// region 0\n// minimum at interior point\nvar invDet=1.0/det;s*=invDet;t*=invDet;sqrDistance=s*(a00*s+a01*t+2.0*b0)+t*(a01*s+a11*t+2.0*b1)+c;}}else{var tmp0,tmp1,numer,denom;if(s<0){// region 2\ntmp0=a01+b0;tmp1=a11+b1;if(tmp1>tmp0){numer=tmp1-tmp0;denom=a00-2.0*a01+a11;if(numer>=denom){s=1;t=0;sqrDistance=a00+2.0*b0+c;}else{s=numer/denom;t=1-s;sqrDistance=s*(a00*s+a01*t+2.0*b0)+t*(a01*s+a11*t+2.0*b1)+c;}}else{s=0;if(tmp1<=0){t=1;sqrDistance=a11+2.0*b1+c;}else if(b1>=0){t=0;sqrDistance=c;}else{t=-b1/a11;sqrDistance=b1*t+c;}}}else if(t<0){// region 6\ntmp0=a01+b1;tmp1=a00+b0;if(tmp1>tmp0){numer=tmp1-tmp0;denom=a00-2.0*a01+a11;if(numer>=denom){t=1;s=0;sqrDistance=a11+2.0*b1+c;}else{t=numer/denom;s=1-t;sqrDistance=s*(a00*s+a01*t+2.0*b0)+t*(a01*s+a11*t+2.0*b1)+c;}}else{t=0;if(tmp1<=0){s=1;sqrDistance=a00+2.0*b0+c;}else if(b0>=0){s=0;sqrDistance=c;}else{s=-b0/a00;sqrDistance=b0*s+c;}}}else{// region 1\nnumer=a11+b1-a01-b0;if(numer<=0){s=0;t=1;sqrDistance=a11+2.0*b1+c;}else{denom=a00-2.0*a01+a11;if(numer>=denom){s=1;t=0;sqrDistance=a00+2.0*b0+c;}else{s=numer/denom;t=1-s;sqrDistance=s*(a00*s+a01*t+2.0*b0)+t*(a01*s+a11*t+2.0*b1)+c;}}}}var u=1.0-s-t;for(var i=0;i<point.length;++i){result[i]=u*V0[i]+s*V1[i]+t*V2[i];}if(sqrDistance<0){return 0;}return sqrDistance;}module.exports=closestPoint2d;},{}],232:[function(_dereq_,module,exports){// shim for using process in browser\nvar process=module.exports={};// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error('setTimeout has not been defined');}function defaultClearTimeout(){throw new Error('clearTimeout has not been defined');}(function(){try{if(typeof setTimeout==='function'){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout==='function'){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){//normal enviroments in sane situations\nreturn setTimeout(fun,0);}// if setTimeout wasn't available but was latter defined\nif((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0);}try{// when when somebody has screwed with setTimeout but no I.E. maddness\nreturn cachedSetTimeout(fun,0);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\nreturn cachedSetTimeout.call(null,fun,0);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\nreturn cachedSetTimeout.call(this,fun,0);}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){//normal enviroments in sane situations\nreturn clearTimeout(marker);}// if clearTimeout wasn't available but was latter defined\nif((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker);}try{// when when somebody has screwed with setTimeout but no I.E. maddness\nreturn cachedClearTimeout(marker);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\nreturn cachedClearTimeout.call(null,marker);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n// Some versions of I.E. have different rules for clearTimeout vs setTimeout\nreturn cachedClearTimeout.call(this,marker);}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return;}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return;}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};// v8 likes predictible objects\nfunction Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title='browser';process.browser=true;process.env={};process.argv=[];process.version='';// empty string to avoid regexp issues\nprocess.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[];};process.binding=function(name){throw new Error('process.binding is not supported');};process.cwd=function(){return'/';};process.chdir=function(dir){throw new Error('process.chdir is not supported');};process.umask=function(){return 0;};},{}],233:[function(_dereq_,module,exports){module.exports=_dereq_('gl-quat/slerp');},{\"gl-quat/slerp\":127}],234:[function(_dereq_,module,exports){'use strict';var bnadd=_dereq_('big-rat/add');module.exports=add;function add(a,b){var n=a.length;var r=new Array(n);for(var i=0;i<n;++i){r[i]=bnadd(a[i],b[i]);}return r;}},{\"big-rat/add\":15}],235:[function(_dereq_,module,exports){'use strict';module.exports=float2rat;var rat=_dereq_('big-rat');function float2rat(v){var result=new Array(v.length);for(var i=0;i<v.length;++i){result[i]=rat(v[i]);}return result;}},{\"big-rat\":18}],236:[function(_dereq_,module,exports){'use strict';var rat=_dereq_('big-rat');var mul=_dereq_('big-rat/mul');module.exports=muls;function muls(a,x){var s=rat(x);var n=a.length;var r=new Array(n);for(var i=0;i<n;++i){r[i]=mul(a[i],s);}return r;}},{\"big-rat\":18,\"big-rat/mul\":27}],237:[function(_dereq_,module,exports){'use strict';var bnsub=_dereq_('big-rat/sub');module.exports=sub;function sub(a,b){var n=a.length;var r=new Array(n);for(var i=0;i<n;++i){r[i]=bnsub(a[i],b[i]);}return r;}},{\"big-rat/sub\":29}],238:[function(_dereq_,module,exports){/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */'use strict';/**\n * Results cache\n */var res='';var cache;/**\n * Expose `repeat`\n */module.exports=repeat;/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */function repeat(str,num){if(typeof str!=='string'){throw new TypeError('expected a string');}// cover common, quick use cases\nif(num===1)return str;if(num===2)return str+str;var max=str.length*num;if(cache!==str||typeof cache==='undefined'){cache=str;res='';}else if(res.length>=max){return res.substr(0,max);}while(max>res.length&&num>1){if(num&1){res+=str;}num>>=1;str+=str;}res+=str;res=res.substr(0,max);return res;}},{}],239:[function(_dereq_,module,exports){(function(global){module.exports=global.performance&&global.performance.now?function now(){return performance.now();}:Date.now||function now(){return+new Date();};}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});},{}],240:[function(_dereq_,module,exports){\"use strict\";module.exports=compressExpansion;function compressExpansion(e){var m=e.length;var Q=e[e.length-1];var bottom=m;for(var i=m-2;i>=0;--i){var a=Q;var b=e[i];Q=a+b;var bv=Q-a;var q=b-bv;if(q){e[--bottom]=Q;Q=q;}}var top=0;for(var i=bottom;i<m;++i){var a=e[i];var b=Q;Q=a+b;var bv=Q-a;var q=b-bv;if(q){e[top++]=q;}}e[top++]=Q;e.length=top;return e;}},{}],241:[function(_dereq_,module,exports){\"use strict\";var twoProduct=_dereq_(\"two-product\");var robustSum=_dereq_(\"robust-sum\");var robustScale=_dereq_(\"robust-scale\");var compress=_dereq_(\"robust-compress\");var NUM_EXPANDED=6;function cofactor(m,c){var result=new Array(m.length-1);for(var i=1;i<m.length;++i){var r=result[i-1]=new Array(m.length-1);for(var j=0,k=0;j<m.length;++j){if(j===c){continue;}r[k++]=m[i][j];}}return result;}function matrix(n){var result=new Array(n);for(var i=0;i<n;++i){result[i]=new Array(n);for(var j=0;j<n;++j){result[i][j]=[\"m[\",i,\"][\",j,\"]\"].join(\"\");}}return result;}function sign(n){if(n&1){return\"-\";}return\"\";}function generateSum(expr){if(expr.length===1){return expr[0];}else if(expr.length===2){return[\"sum(\",expr[0],\",\",expr[1],\")\"].join(\"\");}else{var m=expr.length>>1;return[\"sum(\",generateSum(expr.slice(0,m)),\",\",generateSum(expr.slice(m)),\")\"].join(\"\");}}function determinant(m){if(m.length===2){return[\"sum(prod(\",m[0][0],\",\",m[1][1],\"),prod(-\",m[0][1],\",\",m[1][0],\"))\"].join(\"\");}else{var expr=[];for(var i=0;i<m.length;++i){expr.push([\"scale(\",determinant(cofactor(m,i)),\",\",sign(i),m[0][i],\")\"].join(\"\"));}return generateSum(expr);}}function compileDeterminant(n){var proc=new Function(\"sum\",\"scale\",\"prod\",\"compress\",[\"function robustDeterminant\",n,\"(m){return compress(\",determinant(matrix(n)),\")};return robustDeterminant\",n].join(\"\"));return proc(robustSum,robustScale,twoProduct,compress);}var CACHE=[function robustDeterminant0(){return[0];},function robustDeterminant1(m){return[m[0][0]];}];function generateDispatch(){while(CACHE.length<NUM_EXPANDED){CACHE.push(compileDeterminant(CACHE.length));}var procArgs=[];var code=[\"function robustDeterminant(m){switch(m.length){\"];for(var i=0;i<NUM_EXPANDED;++i){procArgs.push(\"det\"+i);code.push(\"case \",i,\":return det\",i,\"(m);\");}code.push(\"}\\\nvar det=CACHE[m.length];\\\nif(!det)\\\ndet=CACHE[m.length]=gen(m.length);\\\nreturn det(m);\\\n}\\\nreturn robustDeterminant\");procArgs.push(\"CACHE\",\"gen\",code.join(\"\"));var proc=Function.apply(undefined,procArgs);module.exports=proc.apply(undefined,CACHE.concat([CACHE,compileDeterminant]));for(var i=0;i<CACHE.length;++i){module.exports[i]=CACHE[i];}}generateDispatch();},{\"robust-compress\":240,\"robust-scale\":247,\"robust-sum\":250,\"two-product\":268}],242:[function(_dereq_,module,exports){\"use strict\";var twoProduct=_dereq_(\"two-product\");var robustSum=_dereq_(\"robust-sum\");module.exports=robustDotProduct;function robustDotProduct(a,b){var r=twoProduct(a[0],b[0]);for(var i=1;i<a.length;++i){r=robustSum(r,twoProduct(a[i],b[i]));}return r;}},{\"robust-sum\":250,\"two-product\":268}],243:[function(_dereq_,module,exports){\"use strict\";var twoProduct=_dereq_(\"two-product\");var robustSum=_dereq_(\"robust-sum\");var robustDiff=_dereq_(\"robust-subtract\");var robustScale=_dereq_(\"robust-scale\");var NUM_EXPAND=6;function cofactor(m,c){var result=new Array(m.length-1);for(var i=1;i<m.length;++i){var r=result[i-1]=new Array(m.length-1);for(var j=0,k=0;j<m.length;++j){if(j===c){continue;}r[k++]=m[i][j];}}return result;}function matrix(n){var result=new Array(n);for(var i=0;i<n;++i){result[i]=new Array(n);for(var j=0;j<n;++j){result[i][j]=[\"m\",j,\"[\",n-i-2,\"]\"].join(\"\");}}return result;}function generateSum(expr){if(expr.length===1){return expr[0];}else if(expr.length===2){return[\"sum(\",expr[0],\",\",expr[1],\")\"].join(\"\");}else{var m=expr.length>>1;return[\"sum(\",generateSum(expr.slice(0,m)),\",\",generateSum(expr.slice(m)),\")\"].join(\"\");}}function makeProduct(a,b){if(a.charAt(0)===\"m\"){if(b.charAt(0)===\"w\"){var toks=a.split(\"[\");return[\"w\",b.substr(1),\"m\",toks[0].substr(1)].join(\"\");}else{return[\"prod(\",a,\",\",b,\")\"].join(\"\");}}else{return makeProduct(b,a);}}function sign(s){if(s&1!==0){return\"-\";}return\"\";}function determinant(m){if(m.length===2){return[[\"diff(\",makeProduct(m[0][0],m[1][1]),\",\",makeProduct(m[1][0],m[0][1]),\")\"].join(\"\")];}else{var expr=[];for(var i=0;i<m.length;++i){expr.push([\"scale(\",generateSum(determinant(cofactor(m,i))),\",\",sign(i),m[0][i],\")\"].join(\"\"));}return expr;}}function makeSquare(d,n){var terms=[];for(var i=0;i<n-2;++i){terms.push([\"prod(m\",d,\"[\",i,\"],m\",d,\"[\",i,\"])\"].join(\"\"));}return generateSum(terms);}function orientation(n){var pos=[];var neg=[];var m=matrix(n);for(var i=0;i<n;++i){m[0][i]=\"1\";m[n-1][i]=\"w\"+i;}for(var i=0;i<n;++i){if((i&1)===0){pos.push.apply(pos,determinant(cofactor(m,i)));}else{neg.push.apply(neg,determinant(cofactor(m,i)));}}var posExpr=generateSum(pos);var negExpr=generateSum(neg);var funcName=\"exactInSphere\"+n;var funcArgs=[];for(var i=0;i<n;++i){funcArgs.push(\"m\"+i);}var code=[\"function \",funcName,\"(\",funcArgs.join(),\"){\"];for(var i=0;i<n;++i){code.push(\"var w\",i,\"=\",makeSquare(i,n),\";\");for(var j=0;j<n;++j){if(j!==i){code.push(\"var w\",i,\"m\",j,\"=scale(w\",i,\",m\",j,\"[0]);\");}}}code.push(\"var p=\",posExpr,\",n=\",negExpr,\",d=diff(p,n);return d[d.length-1];}return \",funcName);var proc=new Function(\"sum\",\"diff\",\"prod\",\"scale\",code.join(\"\"));return proc(robustSum,robustDiff,twoProduct,robustScale);}function inSphere0(){return 0;}function inSphere1(){return 0;}function inSphere2(){return 0;}var CACHED=[inSphere0,inSphere1,inSphere2];function slowInSphere(args){var proc=CACHED[args.length];if(!proc){proc=CACHED[args.length]=orientation(args.length);}return proc.apply(undefined,args);}function generateInSphereTest(){while(CACHED.length<=NUM_EXPAND){CACHED.push(orientation(CACHED.length));}var args=[];var procArgs=[\"slow\"];for(var i=0;i<=NUM_EXPAND;++i){args.push(\"a\"+i);procArgs.push(\"o\"+i);}var code=[\"function testInSphere(\",args.join(),\"){switch(arguments.length){case 0:case 1:return 0;\"];for(var i=2;i<=NUM_EXPAND;++i){code.push(\"case \",i,\":return o\",i,\"(\",args.slice(0,i).join(),\");\");}code.push(\"}var s=new Array(arguments.length);for(var i=0;i<arguments.length;++i){s[i]=arguments[i]};return slow(s);}return testInSphere\");procArgs.push(code.join(\"\"));var proc=Function.apply(undefined,procArgs);module.exports=proc.apply(undefined,[slowInSphere].concat(CACHED));for(var i=0;i<=NUM_EXPAND;++i){module.exports[i]=CACHED[i];}}generateInSphereTest();},{\"robust-scale\":247,\"robust-subtract\":249,\"robust-sum\":250,\"two-product\":268}],244:[function(_dereq_,module,exports){\"use strict\";var determinant=_dereq_(\"robust-determinant\");var NUM_EXPAND=6;function generateSolver(n){var funcName=\"robustLinearSolve\"+n+\"d\";var code=[\"function \",funcName,\"(A,b){return [\"];for(var i=0;i<n;++i){code.push(\"det([\");for(var j=0;j<n;++j){if(j>0){code.push(\",\");}code.push(\"[\");for(var k=0;k<n;++k){if(k>0){code.push(\",\");}if(k===i){code.push(\"+b[\",j,\"]\");}else{code.push(\"+A[\",j,\"][\",k,\"]\");}}code.push(\"]\");}code.push(\"]),\");}code.push(\"det(A)]}return \",funcName);var proc=new Function(\"det\",code.join(\"\"));if(n<6){return proc(determinant[n]);}return proc(determinant);}function robustLinearSolve0d(){return[0];}function robustLinearSolve1d(A,b){return[[b[0]],[A[0][0]]];}var CACHE=[robustLinearSolve0d,robustLinearSolve1d];function generateDispatch(){while(CACHE.length<NUM_EXPAND){CACHE.push(generateSolver(CACHE.length));}var procArgs=[];var code=[\"function dispatchLinearSolve(A,b){switch(A.length){\"];for(var i=0;i<NUM_EXPAND;++i){procArgs.push(\"s\"+i);code.push(\"case \",i,\":return s\",i,\"(A,b);\");}code.push(\"}var s=CACHE[A.length];if(!s)s=CACHE[A.length]=g(A.length);return s(A,b)}return dispatchLinearSolve\");procArgs.push(\"CACHE\",\"g\",code.join(\"\"));var proc=Function.apply(undefined,procArgs);module.exports=proc.apply(undefined,CACHE.concat([CACHE,generateSolver]));for(var i=0;i<NUM_EXPAND;++i){module.exports[i]=CACHE[i];}}generateDispatch();},{\"robust-determinant\":241}],245:[function(_dereq_,module,exports){\"use strict\";var twoProduct=_dereq_(\"two-product\");var robustSum=_dereq_(\"robust-sum\");var robustScale=_dereq_(\"robust-scale\");var robustSubtract=_dereq_(\"robust-subtract\");var NUM_EXPAND=5;var EPSILON=1.1102230246251565e-16;var ERRBOUND3=(3.0+16.0*EPSILON)*EPSILON;var ERRBOUND4=(7.0+56.0*EPSILON)*EPSILON;function cofactor(m,c){var result=new Array(m.length-1);for(var i=1;i<m.length;++i){var r=result[i-1]=new Array(m.length-1);for(var j=0,k=0;j<m.length;++j){if(j===c){continue;}r[k++]=m[i][j];}}return result;}function matrix(n){var result=new Array(n);for(var i=0;i<n;++i){result[i]=new Array(n);for(var j=0;j<n;++j){result[i][j]=[\"m\",j,\"[\",n-i-1,\"]\"].join(\"\");}}return result;}function sign(n){if(n&1){return\"-\";}return\"\";}function generateSum(expr){if(expr.length===1){return expr[0];}else if(expr.length===2){return[\"sum(\",expr[0],\",\",expr[1],\")\"].join(\"\");}else{var m=expr.length>>1;return[\"sum(\",generateSum(expr.slice(0,m)),\",\",generateSum(expr.slice(m)),\")\"].join(\"\");}}function determinant(m){if(m.length===2){return[[\"sum(prod(\",m[0][0],\",\",m[1][1],\"),prod(-\",m[0][1],\",\",m[1][0],\"))\"].join(\"\")];}else{var expr=[];for(var i=0;i<m.length;++i){expr.push([\"scale(\",generateSum(determinant(cofactor(m,i))),\",\",sign(i),m[0][i],\")\"].join(\"\"));}return expr;}}function orientation(n){var pos=[];var neg=[];var m=matrix(n);var args=[];for(var i=0;i<n;++i){if((i&1)===0){pos.push.apply(pos,determinant(cofactor(m,i)));}else{neg.push.apply(neg,determinant(cofactor(m,i)));}args.push(\"m\"+i);}var posExpr=generateSum(pos);var negExpr=generateSum(neg);var funcName=\"orientation\"+n+\"Exact\";var code=[\"function \",funcName,\"(\",args.join(),\"){var p=\",posExpr,\",n=\",negExpr,\",d=sub(p,n);\\\nreturn d[d.length-1];};return \",funcName].join(\"\");var proc=new Function(\"sum\",\"prod\",\"scale\",\"sub\",code);return proc(robustSum,twoProduct,robustScale,robustSubtract);}var orientation3Exact=orientation(3);var orientation4Exact=orientation(4);var CACHED=[function orientation0(){return 0;},function orientation1(){return 0;},function orientation2(a,b){return b[0]-a[0];},function orientation3(a,b,c){var l=(a[1]-c[1])*(b[0]-c[0]);var r=(a[0]-c[0])*(b[1]-c[1]);var det=l-r;var s;if(l>0){if(r<=0){return det;}else{s=l+r;}}else if(l<0){if(r>=0){return det;}else{s=-(l+r);}}else{return det;}var tol=ERRBOUND3*s;if(det>=tol||det<=-tol){return det;}return orientation3Exact(a,b,c);},function orientation4(a,b,c,d){var adx=a[0]-d[0];var bdx=b[0]-d[0];var cdx=c[0]-d[0];var ady=a[1]-d[1];var bdy=b[1]-d[1];var cdy=c[1]-d[1];var adz=a[2]-d[2];var bdz=b[2]-d[2];var cdz=c[2]-d[2];var bdxcdy=bdx*cdy;var cdxbdy=cdx*bdy;var cdxady=cdx*ady;var adxcdy=adx*cdy;var adxbdy=adx*bdy;var bdxady=bdx*ady;var det=adz*(bdxcdy-cdxbdy)+bdz*(cdxady-adxcdy)+cdz*(adxbdy-bdxady);var permanent=(Math.abs(bdxcdy)+Math.abs(cdxbdy))*Math.abs(adz)+(Math.abs(cdxady)+Math.abs(adxcdy))*Math.abs(bdz)+(Math.abs(adxbdy)+Math.abs(bdxady))*Math.abs(cdz);var tol=ERRBOUND4*permanent;if(det>tol||-det>tol){return det;}return orientation4Exact(a,b,c,d);}];function slowOrient(args){var proc=CACHED[args.length];if(!proc){proc=CACHED[args.length]=orientation(args.length);}return proc.apply(undefined,args);}function generateOrientationProc(){while(CACHED.length<=NUM_EXPAND){CACHED.push(orientation(CACHED.length));}var args=[];var procArgs=[\"slow\"];for(var i=0;i<=NUM_EXPAND;++i){args.push(\"a\"+i);procArgs.push(\"o\"+i);}var code=[\"function getOrientation(\",args.join(),\"){switch(arguments.length){case 0:case 1:return 0;\"];for(var i=2;i<=NUM_EXPAND;++i){code.push(\"case \",i,\":return o\",i,\"(\",args.slice(0,i).join(),\");\");}code.push(\"}var s=new Array(arguments.length);for(var i=0;i<arguments.length;++i){s[i]=arguments[i]};return slow(s);}return getOrientation\");procArgs.push(code.join(\"\"));var proc=Function.apply(undefined,procArgs);module.exports=proc.apply(undefined,[slowOrient].concat(CACHED));for(var i=0;i<=NUM_EXPAND;++i){module.exports[i]=CACHED[i];}}generateOrientationProc();},{\"robust-scale\":247,\"robust-subtract\":249,\"robust-sum\":250,\"two-product\":268}],246:[function(_dereq_,module,exports){\"use strict\";var robustSum=_dereq_(\"robust-sum\");var robustScale=_dereq_(\"robust-scale\");module.exports=robustProduct;function robustProduct(a,b){if(a.length===1){return robustScale(b,a[0]);}if(b.length===1){return robustScale(a,b[0]);}if(a.length===0||b.length===0){return[0];}var r=[0];if(a.length<b.length){for(var i=0;i<a.length;++i){r=robustSum(r,robustScale(b,a[i]));}}else{for(var i=0;i<b.length;++i){r=robustSum(r,robustScale(a,b[i]));}}return r;}},{\"robust-scale\":247,\"robust-sum\":250}],247:[function(_dereq_,module,exports){\"use strict\";var twoProduct=_dereq_(\"two-product\");var twoSum=_dereq_(\"two-sum\");module.exports=scaleLinearExpansion;function scaleLinearExpansion(e,scale){var n=e.length;if(n===1){var ts=twoProduct(e[0],scale);if(ts[0]){return ts;}return[ts[1]];}var g=new Array(2*n);var q=[0.1,0.1];var t=[0.1,0.1];var count=0;twoProduct(e[0],scale,q);if(q[0]){g[count++]=q[0];}for(var i=1;i<n;++i){twoProduct(e[i],scale,t);var pq=q[1];twoSum(pq,t[0],q);if(q[0]){g[count++]=q[0];}var a=t[1];var b=q[1];var x=a+b;var bv=x-a;var y=b-bv;q[1]=x;if(y){g[count++]=y;}}if(q[1]){g[count++]=q[1];}if(count===0){g[count++]=0.0;}g.length=count;return g;}},{\"two-product\":268,\"two-sum\":269}],248:[function(_dereq_,module,exports){\"use strict\";module.exports=segmentsIntersect;var orient=_dereq_(\"robust-orientation\")[3];function checkCollinear(a0,a1,b0,b1){for(var d=0;d<2;++d){var x0=a0[d];var y0=a1[d];var l0=Math.min(x0,y0);var h0=Math.max(x0,y0);var x1=b0[d];var y1=b1[d];var l1=Math.min(x1,y1);var h1=Math.max(x1,y1);if(h1<l0||h0<l1){return false;}}return true;}function segmentsIntersect(a0,a1,b0,b1){var x0=orient(a0,b0,b1);var y0=orient(a1,b0,b1);if(x0>0&&y0>0||x0<0&&y0<0){return false;}var x1=orient(b0,a0,a1);var y1=orient(b1,a0,a1);if(x1>0&&y1>0||x1<0&&y1<0){return false;}//Check for degenerate collinear case\nif(x0===0&&y0===0&&x1===0&&y1===0){return checkCollinear(a0,a1,b0,b1);}return true;}},{\"robust-orientation\":245}],249:[function(_dereq_,module,exports){\"use strict\";module.exports=robustSubtract;//Easy case: Add two scalars\nfunction scalarScalar(a,b){var x=a+b;var bv=x-a;var av=x-bv;var br=b-bv;var ar=a-av;var y=ar+br;if(y){return[y,x];}return[x];}function robustSubtract(e,f){var ne=e.length|0;var nf=f.length|0;if(ne===1&&nf===1){return scalarScalar(e[0],-f[0]);}var n=ne+nf;var g=new Array(n);var count=0;var eptr=0;var fptr=0;var abs=Math.abs;var ei=e[eptr];var ea=abs(ei);var fi=-f[fptr];var fa=abs(fi);var a,b;if(ea<fa){b=ei;eptr+=1;if(eptr<ne){ei=e[eptr];ea=abs(ei);}}else{b=fi;fptr+=1;if(fptr<nf){fi=-f[fptr];fa=abs(fi);}}if(eptr<ne&&ea<fa||fptr>=nf){a=ei;eptr+=1;if(eptr<ne){ei=e[eptr];ea=abs(ei);}}else{a=fi;fptr+=1;if(fptr<nf){fi=-f[fptr];fa=abs(fi);}}var x=a+b;var bv=x-a;var y=b-bv;var q0=y;var q1=x;var _x,_bv,_av,_br,_ar;while(eptr<ne&&fptr<nf){if(ea<fa){a=ei;eptr+=1;if(eptr<ne){ei=e[eptr];ea=abs(ei);}}else{a=fi;fptr+=1;if(fptr<nf){fi=-f[fptr];fa=abs(fi);}}b=q0;x=a+b;bv=x-a;y=b-bv;if(y){g[count++]=y;}_x=q1+x;_bv=_x-q1;_av=_x-_bv;_br=x-_bv;_ar=q1-_av;q0=_ar+_br;q1=_x;}while(eptr<ne){a=ei;b=q0;x=a+b;bv=x-a;y=b-bv;if(y){g[count++]=y;}_x=q1+x;_bv=_x-q1;_av=_x-_bv;_br=x-_bv;_ar=q1-_av;q0=_ar+_br;q1=_x;eptr+=1;if(eptr<ne){ei=e[eptr];}}while(fptr<nf){a=fi;b=q0;x=a+b;bv=x-a;y=b-bv;if(y){g[count++]=y;}_x=q1+x;_bv=_x-q1;_av=_x-_bv;_br=x-_bv;_ar=q1-_av;q0=_ar+_br;q1=_x;fptr+=1;if(fptr<nf){fi=-f[fptr];}}if(q0){g[count++]=q0;}if(q1){g[count++]=q1;}if(!count){g[count++]=0.0;}g.length=count;return g;}},{}],250:[function(_dereq_,module,exports){\"use strict\";module.exports=linearExpansionSum;//Easy case: Add two scalars\nfunction scalarScalar(a,b){var x=a+b;var bv=x-a;var av=x-bv;var br=b-bv;var ar=a-av;var y=ar+br;if(y){return[y,x];}return[x];}function linearExpansionSum(e,f){var ne=e.length|0;var nf=f.length|0;if(ne===1&&nf===1){return scalarScalar(e[0],f[0]);}var n=ne+nf;var g=new Array(n);var count=0;var eptr=0;var fptr=0;var abs=Math.abs;var ei=e[eptr];var ea=abs(ei);var fi=f[fptr];var fa=abs(fi);var a,b;if(ea<fa){b=ei;eptr+=1;if(eptr<ne){ei=e[eptr];ea=abs(ei);}}else{b=fi;fptr+=1;if(fptr<nf){fi=f[fptr];fa=abs(fi);}}if(eptr<ne&&ea<fa||fptr>=nf){a=ei;eptr+=1;if(eptr<ne){ei=e[eptr];ea=abs(ei);}}else{a=fi;fptr+=1;if(fptr<nf){fi=f[fptr];fa=abs(fi);}}var x=a+b;var bv=x-a;var y=b-bv;var q0=y;var q1=x;var _x,_bv,_av,_br,_ar;while(eptr<ne&&fptr<nf){if(ea<fa){a=ei;eptr+=1;if(eptr<ne){ei=e[eptr];ea=abs(ei);}}else{a=fi;fptr+=1;if(fptr<nf){fi=f[fptr];fa=abs(fi);}}b=q0;x=a+b;bv=x-a;y=b-bv;if(y){g[count++]=y;}_x=q1+x;_bv=_x-q1;_av=_x-_bv;_br=x-_bv;_ar=q1-_av;q0=_ar+_br;q1=_x;}while(eptr<ne){a=ei;b=q0;x=a+b;bv=x-a;y=b-bv;if(y){g[count++]=y;}_x=q1+x;_bv=_x-q1;_av=_x-_bv;_br=x-_bv;_ar=q1-_av;q0=_ar+_br;q1=_x;eptr+=1;if(eptr<ne){ei=e[eptr];}}while(fptr<nf){a=fi;b=q0;x=a+b;bv=x-a;y=b-bv;if(y){g[count++]=y;}_x=q1+x;_bv=_x-q1;_av=_x-_bv;_br=x-_bv;_ar=q1-_av;q0=_ar+_br;q1=_x;fptr+=1;if(fptr<nf){fi=f[fptr];}}if(q0){g[count++]=q0;}if(q1){g[count++]=q1;}if(!count){g[count++]=0.0;}g.length=count;return g;}},{}],251:[function(_dereq_,module,exports){\"use strict\";module.exports=function signum(x){if(x<0){return-1;}if(x>0){return 1;}return 0.0;};},{}],252:[function(_dereq_,module,exports){'use strict';module.exports=extractContour;var ndarray=_dereq_('ndarray');var pool=_dereq_('typedarray-pool');var ndsort=_dereq_('ndarray-sort');var contourAlgorithm=_dereq_('./lib/codegen');function getDimension(cells){var numCells=cells.length;var d=0;for(var i=0;i<numCells;++i){d=Math.max(d,cells[i].length)|0;}return d-1;}function getSigns(values,level){var numVerts=values.length;var vertexSigns=pool.mallocUint8(numVerts);for(var i=0;i<numVerts;++i){vertexSigns[i]=values[i]<level|0;}return vertexSigns;}function getEdges(cells,d){var numCells=cells.length;var maxEdges=d*(d+1)/2*numCells|0;var edges=pool.mallocUint32(maxEdges*2);var ePtr=0;for(var i=0;i<numCells;++i){var c=cells[i];var d=c.length;for(var j=0;j<d;++j){for(var k=0;k<j;++k){var a=c[k];var b=c[j];edges[ePtr++]=Math.min(a,b)|0;edges[ePtr++]=Math.max(a,b)|0;}}}var nedges=ePtr/2|0;ndsort(ndarray(edges,[nedges,2]));var ptr=2;for(var i=2;i<ePtr;i+=2){if(edges[i-2]===edges[i]&&edges[i-1]===edges[i+1]){continue;}edges[ptr++]=edges[i];edges[ptr++]=edges[i+1];}return ndarray(edges,[ptr/2|0,2]);}function getCrossingWeights(edges,values,signs,level){var edata=edges.data;var numEdges=edges.shape[0];var weights=pool.mallocDouble(numEdges);var ptr=0;for(var i=0;i<numEdges;++i){var a=edata[2*i];var b=edata[2*i+1];if(signs[a]===signs[b]){continue;}var va=values[a];var vb=values[b];edata[2*ptr]=a;edata[2*ptr+1]=b;weights[ptr++]=(vb-level)/(vb-va);}edges.shape[0]=ptr;return ndarray(weights,[ptr]);}function getCascade(edges,numVerts){var result=pool.mallocInt32(numVerts*2);var numEdges=edges.shape[0];var edata=edges.data;result[0]=0;var lastV=0;for(var i=0;i<numEdges;++i){var a=edata[2*i];if(a!==lastV){result[2*lastV+1]=i;while(++lastV<a){result[2*lastV]=i;result[2*lastV+1]=i;}result[2*lastV]=i;}}result[2*lastV+1]=numEdges;while(++lastV<numVerts){result[2*lastV]=result[2*lastV+1]=numEdges;}return result;}function unpackEdges(edges){var ne=edges.shape[0]|0;var edata=edges.data;var result=new Array(ne);for(var i=0;i<ne;++i){result[i]=[edata[2*i],edata[2*i+1]];}return result;}function extractContour(cells,values,level,d){level=level||0.0;//If user didn't specify `d`, use brute force scan\nif(typeof d==='undefined'){d=getDimension(cells);}//Count number of cells\nvar numCells=cells.length;if(numCells===0||d<1){return{cells:[],vertexIds:[],vertexWeights:[]};}//Read in vertex signs\nvar vertexSigns=getSigns(values,+level);//First get 1-skeleton, find all crossings\nvar edges=getEdges(cells,d);var weights=getCrossingWeights(edges,values,vertexSigns,+level);//Build vertex cascade to speed up binary search\nvar vcascade=getCascade(edges,values.length|0);//Then construct cells\nvar faces=contourAlgorithm(d)(cells,edges.data,vcascade,vertexSigns);//Unpack data into pretty format\nvar uedges=unpackEdges(edges);var uweights=[].slice.call(weights.data,0,weights.shape[0]);//Release data\npool.free(vertexSigns);pool.free(edges.data);pool.free(weights.data);pool.free(vcascade);return{cells:faces,vertexIds:uedges,vertexWeights:uweights};}},{\"./lib/codegen\":253,\"ndarray\":192,\"ndarray-sort\":191,\"typedarray-pool\":270}],253:[function(_dereq_,module,exports){'use strict';module.exports=getPolygonizer;var pool=_dereq_('typedarray-pool');var createMSTable=_dereq_('marching-simplex-table');var CACHE={};function createCellPolygonizer(d){var maxCellSize=0;var tables=new Array(d+1);tables[0]=[[]];for(var i=1;i<=d;++i){var tab=tables[i]=createMSTable(i);for(var j=0;j<tab.length;++j){maxCellSize=Math.max(maxCellSize,tab[i].length);}}var code=['function B(C,E,i,j){','var a=Math.min(i,j)|0,b=Math.max(i,j)|0,l=C[2*a],h=C[2*a+1];','while(l<h){','var m=(l+h)>>1,v=E[2*m+1];','if(v===b){return m}','if(b<v){h=m}else{l=m+1}','}','return l;','};','function getContour',d,'d(F,E,C,S){','var n=F.length,R=[];','for(var i=0;i<n;++i){var c=F[i],l=c.length;'];function generateCase(facets){if(facets.length<=0){return;}code.push('R.push(');for(var i=0;i<facets.length;++i){var facet=facets[i];if(i>0){code.push(',');}code.push('[');for(var j=0;j<facet.length;++j){var f=facet[j];if(j>0){code.push(',');}code.push('B(C,E,c[',f[0],'],c[',f[1],'])');}code.push(']');}code.push(');');}for(var i=d+1;i>1;--i){if(i<d+1){code.push('else ');}code.push('if(l===',i,'){');//Generate mask\nvar maskStr=[];for(var j=0;j<i;++j){maskStr.push('(S[c['+j+']]<<'+j+')');}//Perform table look up\ncode.push('var M=',maskStr.join('+'),';if(M===0||M===',(1<<i)-1,'){continue}switch(M){');var tab=tables[i-1];for(var j=0;j<tab.length;++j){code.push('case ',j,':');generateCase(tab[j]);code.push('break;');}code.push('}}');}code.push('}return R;};return getContour',d,'d');var proc=new Function('pool',code.join(''));return proc(pool);}function getPolygonizer(d){var alg=CACHE[d];if(!alg){alg=CACHE[d]=createCellPolygonizer(d);}return alg;}},{\"marching-simplex-table\":177,\"typedarray-pool\":270}],254:[function(_dereq_,module,exports){\"use strict\";\"use restrict\";var bits=_dereq_(\"bit-twiddle\"),UnionFind=_dereq_(\"union-find\");//Returns the dimension of a cell complex\nfunction dimension(cells){var d=0,max=Math.max;for(var i=0,il=cells.length;i<il;++i){d=max(d,cells[i].length);}return d-1;}exports.dimension=dimension;//Counts the number of vertices in faces\nfunction countVertices(cells){var vc=-1,max=Math.max;for(var i=0,il=cells.length;i<il;++i){var c=cells[i];for(var j=0,jl=c.length;j<jl;++j){vc=max(vc,c[j]);}}return vc+1;}exports.countVertices=countVertices;//Returns a deep copy of cells\nfunction cloneCells(cells){var ncells=new Array(cells.length);for(var i=0,il=cells.length;i<il;++i){ncells[i]=cells[i].slice(0);}return ncells;}exports.cloneCells=cloneCells;//Ranks a pair of cells up to permutation\nfunction compareCells(a,b){var n=a.length,t=a.length-b.length,min=Math.min;if(t){return t;}switch(n){case 0:return 0;case 1:return a[0]-b[0];case 2:var d=a[0]+a[1]-b[0]-b[1];if(d){return d;}return min(a[0],a[1])-min(b[0],b[1]);case 3:var l1=a[0]+a[1],m1=b[0]+b[1];d=l1+a[2]-(m1+b[2]);if(d){return d;}var l0=min(a[0],a[1]),m0=min(b[0],b[1]),d=min(l0,a[2])-min(m0,b[2]);if(d){return d;}return min(l0+a[2],l1)-min(m0+b[2],m1);//TODO: Maybe optimize n=4 as well?\ndefault:var as=a.slice(0);as.sort();var bs=b.slice(0);bs.sort();for(var i=0;i<n;++i){t=as[i]-bs[i];if(t){return t;}}return 0;}}exports.compareCells=compareCells;function compareZipped(a,b){return compareCells(a[0],b[0]);}//Puts a cell complex into normal order for the purposes of findCell queries\nfunction normalize(cells,attr){if(attr){var len=cells.length;var zipped=new Array(len);for(var i=0;i<len;++i){zipped[i]=[cells[i],attr[i]];}zipped.sort(compareZipped);for(var i=0;i<len;++i){cells[i]=zipped[i][0];attr[i]=zipped[i][1];}return cells;}else{cells.sort(compareCells);return cells;}}exports.normalize=normalize;//Removes all duplicate cells in the complex\nfunction unique(cells){if(cells.length===0){return[];}var ptr=1,len=cells.length;for(var i=1;i<len;++i){var a=cells[i];if(compareCells(a,cells[i-1])){if(i===ptr){ptr++;continue;}cells[ptr++]=a;}}cells.length=ptr;return cells;}exports.unique=unique;//Finds a cell in a normalized cell complex\nfunction findCell(cells,c){var lo=0,hi=cells.length-1,r=-1;while(lo<=hi){var mid=lo+hi>>1,s=compareCells(cells[mid],c);if(s<=0){if(s===0){r=mid;}lo=mid+1;}else if(s>0){hi=mid-1;}}return r;}exports.findCell=findCell;//Builds an index for an n-cell.  This is more general than dual, but less efficient\nfunction incidence(from_cells,to_cells){var index=new Array(from_cells.length);for(var i=0,il=index.length;i<il;++i){index[i]=[];}var b=[];for(var i=0,n=to_cells.length;i<n;++i){var c=to_cells[i];var cl=c.length;for(var k=1,kn=1<<cl;k<kn;++k){b.length=bits.popCount(k);var l=0;for(var j=0;j<cl;++j){if(k&1<<j){b[l++]=c[j];}}var idx=findCell(from_cells,b);if(idx<0){continue;}while(true){index[idx++].push(i);if(idx>=from_cells.length||compareCells(from_cells[idx],b)!==0){break;}}}}return index;}exports.incidence=incidence;//Computes the dual of the mesh.  This is basically an optimized version of buildIndex for the situation where from_cells is just the list of vertices\nfunction dual(cells,vertex_count){if(!vertex_count){return incidence(unique(skeleton(cells,0)),cells,0);}var res=new Array(vertex_count);for(var i=0;i<vertex_count;++i){res[i]=[];}for(var i=0,len=cells.length;i<len;++i){var c=cells[i];for(var j=0,cl=c.length;j<cl;++j){res[c[j]].push(i);}}return res;}exports.dual=dual;//Enumerates all cells in the complex\nfunction explode(cells){var result=[];for(var i=0,il=cells.length;i<il;++i){var c=cells[i],cl=c.length|0;for(var j=1,jl=1<<cl;j<jl;++j){var b=[];for(var k=0;k<cl;++k){if(j>>>k&1){b.push(c[k]);}}result.push(b);}}return normalize(result);}exports.explode=explode;//Enumerates all of the n-cells of a cell complex\nfunction skeleton(cells,n){if(n<0){return[];}var result=[],k0=(1<<n+1)-1;for(var i=0;i<cells.length;++i){var c=cells[i];for(var k=k0;k<1<<c.length;k=bits.nextCombination(k)){var b=new Array(n+1),l=0;for(var j=0;j<c.length;++j){if(k&1<<j){b[l++]=c[j];}}result.push(b);}}return normalize(result);}exports.skeleton=skeleton;//Computes the boundary of all cells, does not remove duplicates\nfunction boundary(cells){var res=[];for(var i=0,il=cells.length;i<il;++i){var c=cells[i];for(var j=0,cl=c.length;j<cl;++j){var b=new Array(c.length-1);for(var k=0,l=0;k<cl;++k){if(k!==j){b[l++]=c[k];}}res.push(b);}}return normalize(res);}exports.boundary=boundary;//Computes connected components for a dense cell complex\nfunction connectedComponents_dense(cells,vertex_count){var labels=new UnionFind(vertex_count);for(var i=0;i<cells.length;++i){var c=cells[i];for(var j=0;j<c.length;++j){for(var k=j+1;k<c.length;++k){labels.link(c[j],c[k]);}}}var components=[],component_labels=labels.ranks;for(var i=0;i<component_labels.length;++i){component_labels[i]=-1;}for(var i=0;i<cells.length;++i){var l=labels.find(cells[i][0]);if(component_labels[l]<0){component_labels[l]=components.length;components.push([cells[i].slice(0)]);}else{components[component_labels[l]].push(cells[i].slice(0));}}return components;}//Computes connected components for a sparse graph\nfunction connectedComponents_sparse(cells){var vertices=unique(normalize(skeleton(cells,0))),labels=new UnionFind(vertices.length);for(var i=0;i<cells.length;++i){var c=cells[i];for(var j=0;j<c.length;++j){var vj=findCell(vertices,[c[j]]);for(var k=j+1;k<c.length;++k){labels.link(vj,findCell(vertices,[c[k]]));}}}var components=[],component_labels=labels.ranks;for(var i=0;i<component_labels.length;++i){component_labels[i]=-1;}for(var i=0;i<cells.length;++i){var l=labels.find(findCell(vertices,[cells[i][0]]));if(component_labels[l]<0){component_labels[l]=components.length;components.push([cells[i].slice(0)]);}else{components[component_labels[l]].push(cells[i].slice(0));}}return components;}//Computes connected components for a cell complex\nfunction connectedComponents(cells,vertex_count){if(vertex_count){return connectedComponents_dense(cells,vertex_count);}return connectedComponents_sparse(cells);}exports.connectedComponents=connectedComponents;},{\"bit-twiddle\":32,\"union-find\":271}],255:[function(_dereq_,module,exports){arguments[4][32][0].apply(exports,arguments);},{\"dup\":32}],256:[function(_dereq_,module,exports){arguments[4][254][0].apply(exports,arguments);},{\"bit-twiddle\":255,\"dup\":254,\"union-find\":257}],257:[function(_dereq_,module,exports){\"use strict\";\"use restrict\";module.exports=UnionFind;function UnionFind(count){this.roots=new Array(count);this.ranks=new Array(count);for(var i=0;i<count;++i){this.roots[i]=i;this.ranks[i]=0;}}UnionFind.prototype.length=function(){return this.roots.length;};UnionFind.prototype.makeSet=function(){var n=this.roots.length;this.roots.push(n);this.ranks.push(0);return n;};UnionFind.prototype.find=function(x){var roots=this.roots;while(roots[x]!==x){var y=roots[x];roots[x]=roots[y];x=y;}return x;};UnionFind.prototype.link=function(x,y){var xr=this.find(x),yr=this.find(y);if(xr===yr){return;}var ranks=this.ranks,roots=this.roots,xd=ranks[xr],yd=ranks[yr];if(xd<yd){roots[xr]=yr;}else if(yd<xd){roots[yr]=xr;}else{roots[yr]=xr;++ranks[xr];}};},{}],258:[function(_dereq_,module,exports){\"use strict\";module.exports=simplifyPolygon;var orient=_dereq_(\"robust-orientation\");var sc=_dereq_(\"simplicial-complex\");function errorWeight(base,a,b){var area=Math.abs(orient(base,a,b));var perim=Math.sqrt(Math.pow(a[0]-b[0],2)+Math.pow(a[1]-b[1],2));return area/perim;}function simplifyPolygon(cells,positions,minArea){var n=positions.length;var nc=cells.length;var inv=new Array(n);var outv=new Array(n);var weights=new Array(n);var dead=new Array(n);//Initialize tables\nfor(var i=0;i<n;++i){inv[i]=outv[i]=-1;weights[i]=Infinity;dead[i]=false;}//Compute neighbors\nfor(var i=0;i<nc;++i){var c=cells[i];if(c.length!==2){throw new Error(\"Input must be a graph\");}var s=c[1];var t=c[0];if(outv[t]!==-1){outv[t]=-2;}else{outv[t]=s;}if(inv[s]!==-1){inv[s]=-2;}else{inv[s]=t;}}//Updates the weight for vertex i\nfunction computeWeight(i){if(dead[i]){return Infinity;}//TODO: Check that the line segment doesn't cross once simplified\nvar s=inv[i];var t=outv[i];if(s<0||t<0){return Infinity;}else{return errorWeight(positions[i],positions[s],positions[t]);}}//Swaps two nodes on the heap (i,j) are the index of the nodes\nfunction heapSwap(i,j){var a=heap[i];var b=heap[j];heap[i]=b;heap[j]=a;index[a]=j;index[b]=i;}//Returns the weight of node i on the heap\nfunction heapWeight(i){return weights[heap[i]];}function heapParent(i){if(i&1){return i-1>>1;}return(i>>1)-1;}//Bubble element i down the heap\nfunction heapDown(i){var w=heapWeight(i);while(true){var tw=w;var left=2*i+1;var right=2*(i+1);var next=i;if(left<heapCount){var lw=heapWeight(left);if(lw<tw){next=left;tw=lw;}}if(right<heapCount){var rw=heapWeight(right);if(rw<tw){next=right;}}if(next===i){return i;}heapSwap(i,next);i=next;}}//Bubbles element i up the heap\nfunction heapUp(i){var w=heapWeight(i);while(i>0){var parent=heapParent(i);if(parent>=0){var pw=heapWeight(parent);if(w<pw){heapSwap(i,parent);i=parent;continue;}}return i;}}//Pop minimum element\nfunction heapPop(){if(heapCount>0){var head=heap[0];heapSwap(0,heapCount-1);heapCount-=1;heapDown(0);return head;}return-1;}//Update heap item i\nfunction heapUpdate(i,w){var a=heap[i];if(weights[a]===w){return i;}weights[a]=-Infinity;heapUp(i);heapPop();weights[a]=w;heapCount+=1;return heapUp(heapCount-1);}//Kills a vertex (assume vertex already removed from heap)\nfunction kill(i){if(dead[i]){return;}//Kill vertex\ndead[i]=true;//Fixup topology\nvar s=inv[i];var t=outv[i];if(inv[t]>=0){inv[t]=s;}if(outv[s]>=0){outv[s]=t;}//Update weights on s and t\nif(index[s]>=0){heapUpdate(index[s],computeWeight(s));}if(index[t]>=0){heapUpdate(index[t],computeWeight(t));}}//Initialize weights and heap\nvar heap=[];var index=new Array(n);for(var i=0;i<n;++i){var w=weights[i]=computeWeight(i);if(w<Infinity){index[i]=heap.length;heap.push(i);}else{index[i]=-1;}}var heapCount=heap.length;for(var i=heapCount>>1;i>=0;--i){heapDown(i);}//Kill vertices\nwhile(true){var hmin=heapPop();if(hmin<0||weights[hmin]>minArea){break;}kill(hmin);}//Build collapsed vertex table\nvar npositions=[];for(var i=0;i<n;++i){if(!dead[i]){index[i]=npositions.length;npositions.push(positions[i].slice());}}var nv=npositions.length;function tortoiseHare(seq,start){if(seq[start]<0){return start;}var t=start;var h=start;do{//Walk two steps with h\nvar nh=seq[h];if(!dead[h]||nh<0||nh===h){break;}h=nh;nh=seq[h];if(!dead[h]||nh<0||nh===h){break;}h=nh;//Walk one step with t\nt=seq[t];}while(t!==h);//Compress cycles\nfor(var v=start;v!==h;v=seq[v]){seq[v]=h;}return h;}var ncells=[];cells.forEach(function(c){var tin=tortoiseHare(inv,c[0]);var tout=tortoiseHare(outv,c[1]);if(tin>=0&&tout>=0&&tin!==tout){var cin=index[tin];var cout=index[tout];if(cin!==cout){ncells.push([cin,cout]);}}});//Normalize result\nsc.unique(sc.normalize(ncells));//Return final list of cells\nreturn{positions:npositions,edges:ncells};}},{\"robust-orientation\":245,\"simplicial-complex\":256}],259:[function(_dereq_,module,exports){\"use strict\";module.exports=orderSegments;var orient=_dereq_(\"robust-orientation\");function horizontalOrder(a,b){var bl,br;if(b[0][0]<b[1][0]){bl=b[0];br=b[1];}else if(b[0][0]>b[1][0]){bl=b[1];br=b[0];}else{var alo=Math.min(a[0][1],a[1][1]);var ahi=Math.max(a[0][1],a[1][1]);var blo=Math.min(b[0][1],b[1][1]);var bhi=Math.max(b[0][1],b[1][1]);if(ahi<blo){return ahi-blo;}if(alo>bhi){return alo-bhi;}return ahi-bhi;}var al,ar;if(a[0][1]<a[1][1]){al=a[0];ar=a[1];}else{al=a[1];ar=a[0];}var d=orient(br,bl,al);if(d){return d;}d=orient(br,bl,ar);if(d){return d;}return ar-br;}function orderSegments(b,a){var al,ar;if(a[0][0]<a[1][0]){al=a[0];ar=a[1];}else if(a[0][0]>a[1][0]){al=a[1];ar=a[0];}else{return horizontalOrder(a,b);}var bl,br;if(b[0][0]<b[1][0]){bl=b[0];br=b[1];}else if(b[0][0]>b[1][0]){bl=b[1];br=b[0];}else{return-horizontalOrder(b,a);}var d1=orient(al,ar,br);var d2=orient(al,ar,bl);if(d1<0){if(d2<=0){return d1;}}else if(d1>0){if(d2>=0){return d1;}}else if(d2){return d2;}d1=orient(br,bl,ar);d2=orient(br,bl,al);if(d1<0){if(d2<=0){return d1;}}else if(d1>0){if(d2>=0){return d1;}}else if(d2){return d2;}return ar[0]-br[0];}},{\"robust-orientation\":245}],260:[function(_dereq_,module,exports){\"use strict\";module.exports=createSlabDecomposition;var bounds=_dereq_(\"binary-search-bounds\");var createRBTree=_dereq_(\"functional-red-black-tree\");var orient=_dereq_(\"robust-orientation\");var orderSegments=_dereq_(\"./lib/order-segments\");function SlabDecomposition(slabs,coordinates,horizontal){this.slabs=slabs;this.coordinates=coordinates;this.horizontal=horizontal;}var proto=SlabDecomposition.prototype;function compareHorizontal(e,y){return e.y-y;}function searchBucket(root,p){var lastNode=null;while(root){var seg=root.key;var l,r;if(seg[0][0]<seg[1][0]){l=seg[0];r=seg[1];}else{l=seg[1];r=seg[0];}var o=orient(l,r,p);if(o<0){root=root.left;}else if(o>0){if(p[0]!==seg[1][0]){lastNode=root;root=root.right;}else{var val=searchBucket(root.right,p);if(val){return val;}root=root.left;}}else{if(p[0]!==seg[1][0]){return root;}else{var val=searchBucket(root.right,p);if(val){return val;}root=root.left;}}}return lastNode;}proto.castUp=function(p){var bucket=bounds.le(this.coordinates,p[0]);if(bucket<0){return-1;}var root=this.slabs[bucket];var hitNode=searchBucket(this.slabs[bucket],p);var lastHit=-1;if(hitNode){lastHit=hitNode.value;}//Edge case: need to handle horizontal segments (sucks)\nif(this.coordinates[bucket]===p[0]){var lastSegment=null;if(hitNode){lastSegment=hitNode.key;}if(bucket>0){var otherHitNode=searchBucket(this.slabs[bucket-1],p);if(otherHitNode){if(lastSegment){if(orderSegments(otherHitNode.key,lastSegment)>0){lastSegment=otherHitNode.key;lastHit=otherHitNode.value;}}else{lastHit=otherHitNode.value;lastSegment=otherHitNode.key;}}}var horiz=this.horizontal[bucket];if(horiz.length>0){var hbucket=bounds.ge(horiz,p[1],compareHorizontal);if(hbucket<horiz.length){var e=horiz[hbucket];if(p[1]===e.y){if(e.closed){return e.index;}else{while(hbucket<horiz.length-1&&horiz[hbucket+1].y===p[1]){hbucket=hbucket+1;e=horiz[hbucket];if(e.closed){return e.index;}}if(e.y===p[1]&&!e.start){hbucket=hbucket+1;if(hbucket>=horiz.length){return lastHit;}e=horiz[hbucket];}}}//Check if e is above/below last segment\nif(e.start){if(lastSegment){var o=orient(lastSegment[0],lastSegment[1],[p[0],e.y]);if(lastSegment[0][0]>lastSegment[1][0]){o=-o;}if(o>0){lastHit=e.index;}}else{lastHit=e.index;}}else if(e.y!==p[1]){lastHit=e.index;}}}}return lastHit;};function IntervalSegment(y,index,start,closed){this.y=y;this.index=index;this.start=start;this.closed=closed;}function Event(x,segment,create,index){this.x=x;this.segment=segment;this.create=create;this.index=index;}function createSlabDecomposition(segments){var numSegments=segments.length;var numEvents=2*numSegments;var events=new Array(numEvents);for(var i=0;i<numSegments;++i){var s=segments[i];var f=s[0][0]<s[1][0];events[2*i]=new Event(s[0][0],s,f,i);events[2*i+1]=new Event(s[1][0],s,!f,i);}events.sort(function(a,b){var d=a.x-b.x;if(d){return d;}d=a.create-b.create;if(d){return d;}return Math.min(a.segment[0][1],a.segment[1][1])-Math.min(b.segment[0][1],b.segment[1][1]);});var tree=createRBTree(orderSegments);var slabs=[];var lines=[];var horizontal=[];var lastX=-Infinity;for(var i=0;i<numEvents;){var x=events[i].x;var horiz=[];while(i<numEvents){var e=events[i];if(e.x!==x){break;}i+=1;if(e.segment[0][0]===e.x&&e.segment[1][0]===e.x){if(e.create){if(e.segment[0][1]<e.segment[1][1]){horiz.push(new IntervalSegment(e.segment[0][1],e.index,true,true));horiz.push(new IntervalSegment(e.segment[1][1],e.index,false,false));}else{horiz.push(new IntervalSegment(e.segment[1][1],e.index,true,false));horiz.push(new IntervalSegment(e.segment[0][1],e.index,false,true));}}}else{if(e.create){tree=tree.insert(e.segment,e.index);}else{tree=tree.remove(e.segment);}}}slabs.push(tree.root);lines.push(x);horizontal.push(horiz);}return new SlabDecomposition(slabs,lines,horizontal);}},{\"./lib/order-segments\":259,\"binary-search-bounds\":31,\"functional-red-black-tree\":82,\"robust-orientation\":245}],261:[function(_dereq_,module,exports){\"use strict\";var robustDot=_dereq_(\"robust-dot-product\");var robustSum=_dereq_(\"robust-sum\");module.exports=splitPolygon;module.exports.positive=positive;module.exports.negative=negative;function planeT(p,plane){var r=robustSum(robustDot(p,plane),[plane[plane.length-1]]);return r[r.length-1];}//Can't do this exactly and emit a floating point result\nfunction lerpW(a,wa,b,wb){var d=wb-wa;var t=-wa/d;if(t<0.0){t=0.0;}else if(t>1.0){t=1.0;}var ti=1.0-t;var n=a.length;var r=new Array(n);for(var i=0;i<n;++i){r[i]=t*a[i]+ti*b[i];}return r;}function splitPolygon(points,plane){var pos=[];var neg=[];var a=planeT(points[points.length-1],plane);for(var s=points[points.length-1],t=points[0],i=0;i<points.length;++i,s=t){t=points[i];var b=planeT(t,plane);if(a<0&&b>0||a>0&&b<0){var p=lerpW(s,b,t,a);pos.push(p);neg.push(p.slice());}if(b<0){neg.push(t.slice());}else if(b>0){pos.push(t.slice());}else{pos.push(t.slice());neg.push(t.slice());}a=b;}return{positive:pos,negative:neg};}function positive(points,plane){var pos=[];var a=planeT(points[points.length-1],plane);for(var s=points[points.length-1],t=points[0],i=0;i<points.length;++i,s=t){t=points[i];var b=planeT(t,plane);if(a<0&&b>0||a>0&&b<0){pos.push(lerpW(s,b,t,a));}if(b>=0){pos.push(t.slice());}a=b;}return pos;}function negative(points,plane){var neg=[];var a=planeT(points[points.length-1],plane);for(var s=points[points.length-1],t=points[0],i=0;i<points.length;++i,s=t){t=points[i];var b=planeT(t,plane);if(a<0&&b>0||a>0&&b<0){neg.push(lerpW(s,b,t,a));}if(b<=0){neg.push(t.slice());}a=b;}return neg;}},{\"robust-dot-product\":242,\"robust-sum\":250}],262:[function(_dereq_,module,exports){/* global window, exports, define */!function(){'use strict';var re={not_string:/[^s]/,not_bool:/[^t]/,not_type:/[^T]/,not_primitive:/[^v]/,number:/[diefg]/,numeric_arg:/[bcdiefguxX]/,json:/[j]/,not_json:/[^j]/,text:/^[^\\x25]+/,modulo:/^\\x25{2}/,placeholder:/^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,key:/^([a-z_][a-z_\\d]*)/i,key_access:/^\\.([a-z_][a-z_\\d]*)/i,index_access:/^\\[(\\d+)\\]/,sign:/^[\\+\\-]/};function sprintf(key){// `arguments` is not an array, but should be fine for this call\nreturn sprintf_format(sprintf_parse(key),arguments);}function vsprintf(fmt,argv){return sprintf.apply(null,[fmt].concat(argv||[]));}function sprintf_format(parse_tree,argv){var cursor=1,tree_length=parse_tree.length,arg,output='',i,k,match,pad,pad_character,pad_length,is_positive,sign;for(i=0;i<tree_length;i++){if(typeof parse_tree[i]==='string'){output+=parse_tree[i];}else if(Array.isArray(parse_tree[i])){match=parse_tree[i];// convenience purposes only\nif(match[2]){// keyword argument\narg=argv[cursor];for(k=0;k<match[2].length;k++){if(!arg.hasOwnProperty(match[2][k])){throw new Error(sprintf('[sprintf] property \"%s\" does not exist',match[2][k]));}arg=arg[match[2][k]];}}else if(match[1]){// positional argument (explicit)\narg=argv[match[1]];}else{// positional argument (implicit)\narg=argv[cursor++];}if(re.not_type.test(match[8])&&re.not_primitive.test(match[8])&&arg instanceof Function){arg=arg();}if(re.numeric_arg.test(match[8])&&typeof arg!=='number'&&isNaN(arg)){throw new TypeError(sprintf('[sprintf] expecting number but found %T',arg));}if(re.number.test(match[8])){is_positive=arg>=0;}switch(match[8]){case'b':arg=parseInt(arg,10).toString(2);break;case'c':arg=String.fromCharCode(parseInt(arg,10));break;case'd':case'i':arg=parseInt(arg,10);break;case'j':arg=JSON.stringify(arg,null,match[6]?parseInt(match[6]):0);break;case'e':arg=match[7]?parseFloat(arg).toExponential(match[7]):parseFloat(arg).toExponential();break;case'f':arg=match[7]?parseFloat(arg).toFixed(match[7]):parseFloat(arg);break;case'g':arg=match[7]?String(Number(arg.toPrecision(match[7]))):parseFloat(arg);break;case'o':arg=(parseInt(arg,10)>>>0).toString(8);break;case's':arg=String(arg);arg=match[7]?arg.substring(0,match[7]):arg;break;case't':arg=String(!!arg);arg=match[7]?arg.substring(0,match[7]):arg;break;case'T':arg=Object.prototype.toString.call(arg).slice(8,-1).toLowerCase();arg=match[7]?arg.substring(0,match[7]):arg;break;case'u':arg=parseInt(arg,10)>>>0;break;case'v':arg=arg.valueOf();arg=match[7]?arg.substring(0,match[7]):arg;break;case'x':arg=(parseInt(arg,10)>>>0).toString(16);break;case'X':arg=(parseInt(arg,10)>>>0).toString(16).toUpperCase();break;}if(re.json.test(match[8])){output+=arg;}else{if(re.number.test(match[8])&&(!is_positive||match[3])){sign=is_positive?'+':'-';arg=arg.toString().replace(re.sign,'');}else{sign='';}pad_character=match[4]?match[4]==='0'?'0':match[4].charAt(1):' ';pad_length=match[6]-(sign+arg).length;pad=match[6]?pad_length>0?pad_character.repeat(pad_length):'':'';output+=match[5]?sign+arg+pad:pad_character==='0'?sign+pad+arg:pad+sign+arg;}}}return output;}var sprintf_cache=Object.create(null);function sprintf_parse(fmt){if(sprintf_cache[fmt]){return sprintf_cache[fmt];}var _fmt=fmt,match,parse_tree=[],arg_names=0;while(_fmt){if((match=re.text.exec(_fmt))!==null){parse_tree.push(match[0]);}else if((match=re.modulo.exec(_fmt))!==null){parse_tree.push('%');}else if((match=re.placeholder.exec(_fmt))!==null){if(match[2]){arg_names|=1;var field_list=[],replacement_field=match[2],field_match=[];if((field_match=re.key.exec(replacement_field))!==null){field_list.push(field_match[1]);while((replacement_field=replacement_field.substring(field_match[0].length))!==''){if((field_match=re.key_access.exec(replacement_field))!==null){field_list.push(field_match[1]);}else if((field_match=re.index_access.exec(replacement_field))!==null){field_list.push(field_match[1]);}else{throw new SyntaxError('[sprintf] failed to parse named argument key');}}}else{throw new SyntaxError('[sprintf] failed to parse named argument key');}match[2]=field_list;}else{arg_names|=2;}if(arg_names===3){throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported');}parse_tree.push(match);}else{throw new SyntaxError('[sprintf] unexpected placeholder');}_fmt=_fmt.substring(match[0].length);}return sprintf_cache[fmt]=parse_tree;}/**\n     * export to either browser or node.js\n     */ /* eslint-disable quote-props */if(typeof exports!=='undefined'){exports['sprintf']=sprintf;exports['vsprintf']=vsprintf;}if(typeof window!=='undefined'){window['sprintf']=sprintf;window['vsprintf']=vsprintf;if(typeof define==='function'&&define['amd']){define(function(){return{'sprintf':sprintf,'vsprintf':vsprintf};});}}/* eslint-enable quote-props */}();},{}],263:[function(_dereq_,module,exports){\"use strict\";module.exports=surfaceNets;var generateContourExtractor=_dereq_(\"ndarray-extract-contour\");var triangulateCube=_dereq_(\"triangulate-hypercube\");var zeroCrossings=_dereq_(\"zero-crossings\");function buildSurfaceNets(order,dtype){var dimension=order.length;var code=[\"'use strict';\"];var funcName=\"surfaceNets\"+order.join(\"_\")+\"d\"+dtype;//Contour extraction function\ncode.push(\"var contour=genContour({\",\"order:[\",order.join(),\"],\",\"scalarArguments: 3,\",\"phase:function phaseFunc(p,a,b,c) { return (p > c)|0 },\");if(dtype===\"generic\"){code.push(\"getters:[0],\");}//Generate vertex function\nvar cubeArgs=[];var extraArgs=[];for(var i=0;i<dimension;++i){cubeArgs.push(\"d\"+i);extraArgs.push(\"d\"+i);}for(var i=0;i<1<<dimension;++i){cubeArgs.push(\"v\"+i);extraArgs.push(\"v\"+i);}for(var i=0;i<1<<dimension;++i){cubeArgs.push(\"p\"+i);extraArgs.push(\"p\"+i);}cubeArgs.push(\"a\",\"b\",\"c\");extraArgs.push(\"a\",\"c\");code.push(\"vertex:function vertexFunc(\",cubeArgs.join(),\"){\");//Mask args together\nvar maskStr=[];for(var i=0;i<1<<dimension;++i){maskStr.push(\"(p\"+i+\"<<\"+i+\")\");}//Generate variables and giganto switch statement\ncode.push(\"var m=(\",maskStr.join(\"+\"),\")|0;if(m===0||m===\",(1<<(1<<dimension))-1,\"){return}\");var extraFuncs=[];var currentFunc=[];if(1<<(1<<dimension)<=128){code.push(\"switch(m){\");currentFunc=code;}else{code.push(\"switch(m>>>7){\");}for(var i=0;i<1<<(1<<dimension);++i){if(1<<(1<<dimension)>128){if(i%128===0){if(extraFuncs.length>0){currentFunc.push(\"}}\");}var efName=\"vExtra\"+extraFuncs.length;code.push(\"case \",i>>>7,\":\",efName,\"(m&0x7f,\",extraArgs.join(),\");break;\");currentFunc=[\"function \",efName,\"(m,\",extraArgs.join(),\"){switch(m){\"];extraFuncs.push(currentFunc);}}currentFunc.push(\"case \",i&0x7f,\":\");var crossings=new Array(dimension);var denoms=new Array(dimension);var crossingCount=new Array(dimension);var bias=new Array(dimension);var totalCrossings=0;for(var j=0;j<dimension;++j){crossings[j]=[];denoms[j]=[];crossingCount[j]=0;bias[j]=0;}for(var j=0;j<1<<dimension;++j){for(var k=0;k<dimension;++k){var u=j^1<<k;if(u>j){continue;}if(!(i&1<<u)!==!(i&1<<j)){var sign=1;if(i&1<<u){denoms[k].push(\"v\"+u+\"-v\"+j);}else{denoms[k].push(\"v\"+j+\"-v\"+u);sign=-sign;}if(sign<0){crossings[k].push(\"-v\"+j+\"-v\"+u);crossingCount[k]+=2;}else{crossings[k].push(\"v\"+j+\"+v\"+u);crossingCount[k]-=2;}totalCrossings+=1;for(var l=0;l<dimension;++l){if(l===k){continue;}if(u&1<<l){bias[l]+=1;}else{bias[l]-=1;}}}}}var vertexStr=[];for(var k=0;k<dimension;++k){if(crossings[k].length===0){vertexStr.push(\"d\"+k+\"-0.5\");}else{var cStr=\"\";if(crossingCount[k]<0){cStr=crossingCount[k]+\"*c\";}else if(crossingCount[k]>0){cStr=\"+\"+crossingCount[k]+\"*c\";}var weight=0.5*(crossings[k].length/totalCrossings);var shift=0.5+0.5*(bias[k]/totalCrossings);vertexStr.push(\"d\"+k+\"-\"+shift+\"-\"+weight+\"*(\"+crossings[k].join(\"+\")+cStr+\")/(\"+denoms[k].join(\"+\")+\")\");}}currentFunc.push(\"a.push([\",vertexStr.join(),\"]);\",\"break;\");}code.push(\"}},\");if(extraFuncs.length>0){currentFunc.push(\"}}\");}//Create face function\nvar faceArgs=[];for(var i=0;i<1<<dimension-1;++i){faceArgs.push(\"v\"+i);}faceArgs.push(\"c0\",\"c1\",\"p0\",\"p1\",\"a\",\"b\",\"c\");code.push(\"cell:function cellFunc(\",faceArgs.join(),\"){\");var facets=triangulateCube(dimension-1);code.push(\"if(p0){b.push(\",facets.map(function(f){return\"[\"+f.map(function(v){return\"v\"+v;})+\"]\";}).join(),\")}else{b.push(\",facets.map(function(f){var e=f.slice();e.reverse();return\"[\"+e.map(function(v){return\"v\"+v;})+\"]\";}).join(),\")}}});function \",funcName,\"(array,level){var verts=[],cells=[];contour(array,verts,cells,level);return {positions:verts,cells:cells};} return \",funcName,\";\");for(var i=0;i<extraFuncs.length;++i){code.push(extraFuncs[i].join(\"\"));}//Compile and link\nvar proc=new Function(\"genContour\",code.join(\"\"));return proc(generateContourExtractor);}//1D case: Need to handle specially\nfunction mesh1D(array,level){var zc=zeroCrossings(array,level);var n=zc.length;var npos=new Array(n);var ncel=new Array(n);for(var i=0;i<n;++i){npos[i]=[zc[i]];ncel[i]=[i];}return{positions:npos,cells:ncel};}var CACHE={};function surfaceNets(array,level){if(array.dimension<=0){return{positions:[],cells:[]};}else if(array.dimension===1){return mesh1D(array,level);}var typesig=array.order.join()+\"-\"+array.dtype;var proc=CACHE[typesig];var level=+level||0.0;if(!proc){proc=CACHE[typesig]=buildSurfaceNets(array.order,array.dtype);}return proc(array,level);}},{\"ndarray-extract-contour\":188,\"triangulate-hypercube\":266,\"zero-crossings\":282}],264:[function(_dereq_,module,exports){// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n(function(Math){var trimLeft=/^\\s+/,trimRight=/\\s+$/,tinyCounter=0,mathRound=Math.round,mathMin=Math.min,mathMax=Math.max,mathRandom=Math.random;function tinycolor(color,opts){color=color?color:'';opts=opts||{};// If input is already a tinycolor, return itself\nif(color instanceof tinycolor){return color;}// If we are called as a function, call using new instead\nif(!(this instanceof tinycolor)){return new tinycolor(color,opts);}var rgb=inputToRGB(color);this._originalInput=color,this._r=rgb.r,this._g=rgb.g,this._b=rgb.b,this._a=rgb.a,this._roundA=mathRound(100*this._a)/100,this._format=opts.format||rgb.format;this._gradientType=opts.gradientType;// Don't let the range of [0,255] come back in [0,1].\n// Potentially lose a little bit of precision here, but will fix issues where\n// .5 gets interpreted as half of the total, instead of half of 1\n// If it was supposed to be 128, this was already taken care of by `inputToRgb`\nif(this._r<1){this._r=mathRound(this._r);}if(this._g<1){this._g=mathRound(this._g);}if(this._b<1){this._b=mathRound(this._b);}this._ok=rgb.ok;this._tc_id=tinyCounter++;}tinycolor.prototype={isDark:function isDark(){return this.getBrightness()<128;},isLight:function isLight(){return!this.isDark();},isValid:function isValid(){return this._ok;},getOriginalInput:function getOriginalInput(){return this._originalInput;},getFormat:function getFormat(){return this._format;},getAlpha:function getAlpha(){return this._a;},getBrightness:function getBrightness(){//http://www.w3.org/TR/AERT#color-contrast\nvar rgb=this.toRgb();return(rgb.r*299+rgb.g*587+rgb.b*114)/1000;},getLuminance:function getLuminance(){//http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\nvar rgb=this.toRgb();var RsRGB,GsRGB,BsRGB,R,G,B;RsRGB=rgb.r/255;GsRGB=rgb.g/255;BsRGB=rgb.b/255;if(RsRGB<=0.03928){R=RsRGB/12.92;}else{R=Math.pow((RsRGB+0.055)/1.055,2.4);}if(GsRGB<=0.03928){G=GsRGB/12.92;}else{G=Math.pow((GsRGB+0.055)/1.055,2.4);}if(BsRGB<=0.03928){B=BsRGB/12.92;}else{B=Math.pow((BsRGB+0.055)/1.055,2.4);}return 0.2126*R+0.7152*G+0.0722*B;},setAlpha:function setAlpha(value){this._a=boundAlpha(value);this._roundA=mathRound(100*this._a)/100;return this;},toHsv:function toHsv(){var hsv=rgbToHsv(this._r,this._g,this._b);return{h:hsv.h*360,s:hsv.s,v:hsv.v,a:this._a};},toHsvString:function toHsvString(){var hsv=rgbToHsv(this._r,this._g,this._b);var h=mathRound(hsv.h*360),s=mathRound(hsv.s*100),v=mathRound(hsv.v*100);return this._a==1?\"hsv(\"+h+\", \"+s+\"%, \"+v+\"%)\":\"hsva(\"+h+\", \"+s+\"%, \"+v+\"%, \"+this._roundA+\")\";},toHsl:function toHsl(){var hsl=rgbToHsl(this._r,this._g,this._b);return{h:hsl.h*360,s:hsl.s,l:hsl.l,a:this._a};},toHslString:function toHslString(){var hsl=rgbToHsl(this._r,this._g,this._b);var h=mathRound(hsl.h*360),s=mathRound(hsl.s*100),l=mathRound(hsl.l*100);return this._a==1?\"hsl(\"+h+\", \"+s+\"%, \"+l+\"%)\":\"hsla(\"+h+\", \"+s+\"%, \"+l+\"%, \"+this._roundA+\")\";},toHex:function toHex(allow3Char){return rgbToHex(this._r,this._g,this._b,allow3Char);},toHexString:function toHexString(allow3Char){return'#'+this.toHex(allow3Char);},toHex8:function toHex8(allow4Char){return rgbaToHex(this._r,this._g,this._b,this._a,allow4Char);},toHex8String:function toHex8String(allow4Char){return'#'+this.toHex8(allow4Char);},toRgb:function toRgb(){return{r:mathRound(this._r),g:mathRound(this._g),b:mathRound(this._b),a:this._a};},toRgbString:function toRgbString(){return this._a==1?\"rgb(\"+mathRound(this._r)+\", \"+mathRound(this._g)+\", \"+mathRound(this._b)+\")\":\"rgba(\"+mathRound(this._r)+\", \"+mathRound(this._g)+\", \"+mathRound(this._b)+\", \"+this._roundA+\")\";},toPercentageRgb:function toPercentageRgb(){return{r:mathRound(bound01(this._r,255)*100)+\"%\",g:mathRound(bound01(this._g,255)*100)+\"%\",b:mathRound(bound01(this._b,255)*100)+\"%\",a:this._a};},toPercentageRgbString:function toPercentageRgbString(){return this._a==1?\"rgb(\"+mathRound(bound01(this._r,255)*100)+\"%, \"+mathRound(bound01(this._g,255)*100)+\"%, \"+mathRound(bound01(this._b,255)*100)+\"%)\":\"rgba(\"+mathRound(bound01(this._r,255)*100)+\"%, \"+mathRound(bound01(this._g,255)*100)+\"%, \"+mathRound(bound01(this._b,255)*100)+\"%, \"+this._roundA+\")\";},toName:function toName(){if(this._a===0){return\"transparent\";}if(this._a<1){return false;}return hexNames[rgbToHex(this._r,this._g,this._b,true)]||false;},toFilter:function toFilter(secondColor){var hex8String='#'+rgbaToArgbHex(this._r,this._g,this._b,this._a);var secondHex8String=hex8String;var gradientType=this._gradientType?\"GradientType = 1, \":\"\";if(secondColor){var s=tinycolor(secondColor);secondHex8String='#'+rgbaToArgbHex(s._r,s._g,s._b,s._a);}return\"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";},toString:function toString(format){var formatSet=!!format;format=format||this._format;var formattedString=false;var hasAlpha=this._a<1&&this._a>=0;var needsAlphaFormat=!formatSet&&hasAlpha&&(format===\"hex\"||format===\"hex6\"||format===\"hex3\"||format===\"hex4\"||format===\"hex8\"||format===\"name\");if(needsAlphaFormat){// Special case for \"transparent\", all other non-alpha formats\n// will return rgba when there is transparency.\nif(format===\"name\"&&this._a===0){return this.toName();}return this.toRgbString();}if(format===\"rgb\"){formattedString=this.toRgbString();}if(format===\"prgb\"){formattedString=this.toPercentageRgbString();}if(format===\"hex\"||format===\"hex6\"){formattedString=this.toHexString();}if(format===\"hex3\"){formattedString=this.toHexString(true);}if(format===\"hex4\"){formattedString=this.toHex8String(true);}if(format===\"hex8\"){formattedString=this.toHex8String();}if(format===\"name\"){formattedString=this.toName();}if(format===\"hsl\"){formattedString=this.toHslString();}if(format===\"hsv\"){formattedString=this.toHsvString();}return formattedString||this.toHexString();},clone:function clone(){return tinycolor(this.toString());},_applyModification:function _applyModification(fn,args){var color=fn.apply(null,[this].concat([].slice.call(args)));this._r=color._r;this._g=color._g;this._b=color._b;this.setAlpha(color._a);return this;},lighten:function lighten(){return this._applyModification(_lighten,arguments);},brighten:function brighten(){return this._applyModification(_brighten,arguments);},darken:function darken(){return this._applyModification(_darken,arguments);},desaturate:function desaturate(){return this._applyModification(_desaturate,arguments);},saturate:function saturate(){return this._applyModification(_saturate,arguments);},greyscale:function greyscale(){return this._applyModification(_greyscale,arguments);},spin:function spin(){return this._applyModification(_spin,arguments);},_applyCombination:function _applyCombination(fn,args){return fn.apply(null,[this].concat([].slice.call(args)));},analogous:function analogous(){return this._applyCombination(_analogous,arguments);},complement:function complement(){return this._applyCombination(_complement,arguments);},monochromatic:function monochromatic(){return this._applyCombination(_monochromatic,arguments);},splitcomplement:function splitcomplement(){return this._applyCombination(_splitcomplement,arguments);},triad:function triad(){return this._applyCombination(_triad,arguments);},tetrad:function tetrad(){return this._applyCombination(_tetrad,arguments);}};// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio=function(color,opts){if(_typeof(color)==\"object\"){var newColor={};for(var i in color){if(color.hasOwnProperty(i)){if(i===\"a\"){newColor[i]=color[i];}else{newColor[i]=convertToPercentage(color[i]);}}}color=newColor;}return tinycolor(color,opts);};// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color){var rgb={r:0,g:0,b:0};var a=1;var s=null;var v=null;var l=null;var ok=false;var format=false;if(typeof color==\"string\"){color=stringInputToObject(color);}if(_typeof(color)==\"object\"){if(isValidCSSUnit(color.r)&&isValidCSSUnit(color.g)&&isValidCSSUnit(color.b)){rgb=rgbToRgb(color.r,color.g,color.b);ok=true;format=String(color.r).substr(-1)===\"%\"?\"prgb\":\"rgb\";}else if(isValidCSSUnit(color.h)&&isValidCSSUnit(color.s)&&isValidCSSUnit(color.v)){s=convertToPercentage(color.s);v=convertToPercentage(color.v);rgb=hsvToRgb(color.h,s,v);ok=true;format=\"hsv\";}else if(isValidCSSUnit(color.h)&&isValidCSSUnit(color.s)&&isValidCSSUnit(color.l)){s=convertToPercentage(color.s);l=convertToPercentage(color.l);rgb=hslToRgb(color.h,s,l);ok=true;format=\"hsl\";}if(color.hasOwnProperty(\"a\")){a=color.a;}}a=boundAlpha(a);return{ok:ok,format:color.format||format,r:mathMin(255,mathMax(rgb.r,0)),g:mathMin(255,mathMax(rgb.g,0)),b:mathMin(255,mathMax(rgb.b,0)),a:a};}// Conversion Functions\n// --------------------\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r,g,b){return{r:bound01(r,255)*255,g:bound01(g,255)*255,b:bound01(b,255)*255};}// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r,g,b){r=bound01(r,255);g=bound01(g,255);b=bound01(b,255);var max=mathMax(r,g,b),min=mathMin(r,g,b);var h,s,l=(max+min)/2;if(max==min){h=s=0;// achromatic\n}else{var d=max-min;s=l>0.5?d/(2-max-min):d/(max+min);switch(max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4;break;}h/=6;}return{h:h,s:s,l:l};}// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h,s,l){var r,g,b;h=bound01(h,360);s=bound01(s,100);l=bound01(l,100);function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*(2/3-t)*6;return p;}if(s===0){r=g=b=l;// achromatic\n}else{var q=l<0.5?l*(1+s):l+s-l*s;var p=2*l-q;r=hue2rgb(p,q,h+1/3);g=hue2rgb(p,q,h);b=hue2rgb(p,q,h-1/3);}return{r:r*255,g:g*255,b:b*255};}// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r,g,b){r=bound01(r,255);g=bound01(g,255);b=bound01(b,255);var max=mathMax(r,g,b),min=mathMin(r,g,b);var h,s,v=max;var d=max-min;s=max===0?0:d/max;if(max==min){h=0;// achromatic\n}else{switch(max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4;break;}h/=6;}return{h:h,s:s,v:v};}// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hsvToRgb(h,s,v){h=bound01(h,360)*6;s=bound01(s,100);v=bound01(v,100);var i=Math.floor(h),f=h-i,p=v*(1-s),q=v*(1-f*s),t=v*(1-(1-f)*s),mod=i%6,r=[v,q,p,p,t,v][mod],g=[t,v,v,q,p,p][mod],b=[p,p,t,v,v,q][mod];return{r:r*255,g:g*255,b:b*255};}// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r,g,b,allow3Char){var hex=[pad2(mathRound(r).toString(16)),pad2(mathRound(g).toString(16)),pad2(mathRound(b).toString(16))];// Return a 3 character hex if possible\nif(allow3Char&&hex[0].charAt(0)==hex[0].charAt(1)&&hex[1].charAt(0)==hex[1].charAt(1)&&hex[2].charAt(0)==hex[2].charAt(1)){return hex[0].charAt(0)+hex[1].charAt(0)+hex[2].charAt(0);}return hex.join(\"\");}// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r,g,b,a,allow4Char){var hex=[pad2(mathRound(r).toString(16)),pad2(mathRound(g).toString(16)),pad2(mathRound(b).toString(16)),pad2(convertDecimalToHex(a))];// Return a 4 character hex if possible\nif(allow4Char&&hex[0].charAt(0)==hex[0].charAt(1)&&hex[1].charAt(0)==hex[1].charAt(1)&&hex[2].charAt(0)==hex[2].charAt(1)&&hex[3].charAt(0)==hex[3].charAt(1)){return hex[0].charAt(0)+hex[1].charAt(0)+hex[2].charAt(0)+hex[3].charAt(0);}return hex.join(\"\");}// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r,g,b,a){var hex=[pad2(convertDecimalToHex(a)),pad2(mathRound(r).toString(16)),pad2(mathRound(g).toString(16)),pad2(mathRound(b).toString(16))];return hex.join(\"\");}// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals=function(color1,color2){if(!color1||!color2){return false;}return tinycolor(color1).toRgbString()==tinycolor(color2).toRgbString();};tinycolor.random=function(){return tinycolor.fromRatio({r:mathRandom(),g:mathRandom(),b:mathRandom()});};// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\nfunction _desaturate(color,amount){amount=amount===0?0:amount||10;var hsl=tinycolor(color).toHsl();hsl.s-=amount/100;hsl.s=clamp01(hsl.s);return tinycolor(hsl);}function _saturate(color,amount){amount=amount===0?0:amount||10;var hsl=tinycolor(color).toHsl();hsl.s+=amount/100;hsl.s=clamp01(hsl.s);return tinycolor(hsl);}function _greyscale(color){return tinycolor(color).desaturate(100);}function _lighten(color,amount){amount=amount===0?0:amount||10;var hsl=tinycolor(color).toHsl();hsl.l+=amount/100;hsl.l=clamp01(hsl.l);return tinycolor(hsl);}function _brighten(color,amount){amount=amount===0?0:amount||10;var rgb=tinycolor(color).toRgb();rgb.r=mathMax(0,mathMin(255,rgb.r-mathRound(255*-(amount/100))));rgb.g=mathMax(0,mathMin(255,rgb.g-mathRound(255*-(amount/100))));rgb.b=mathMax(0,mathMin(255,rgb.b-mathRound(255*-(amount/100))));return tinycolor(rgb);}function _darken(color,amount){amount=amount===0?0:amount||10;var hsl=tinycolor(color).toHsl();hsl.l-=amount/100;hsl.l=clamp01(hsl.l);return tinycolor(hsl);}// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction _spin(color,amount){var hsl=tinycolor(color).toHsl();var hue=(hsl.h+amount)%360;hsl.h=hue<0?360+hue:hue;return tinycolor(hsl);}// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\nfunction _complement(color){var hsl=tinycolor(color).toHsl();hsl.h=(hsl.h+180)%360;return tinycolor(hsl);}function _triad(color){var hsl=tinycolor(color).toHsl();var h=hsl.h;return[tinycolor(color),tinycolor({h:(h+120)%360,s:hsl.s,l:hsl.l}),tinycolor({h:(h+240)%360,s:hsl.s,l:hsl.l})];}function _tetrad(color){var hsl=tinycolor(color).toHsl();var h=hsl.h;return[tinycolor(color),tinycolor({h:(h+90)%360,s:hsl.s,l:hsl.l}),tinycolor({h:(h+180)%360,s:hsl.s,l:hsl.l}),tinycolor({h:(h+270)%360,s:hsl.s,l:hsl.l})];}function _splitcomplement(color){var hsl=tinycolor(color).toHsl();var h=hsl.h;return[tinycolor(color),tinycolor({h:(h+72)%360,s:hsl.s,l:hsl.l}),tinycolor({h:(h+216)%360,s:hsl.s,l:hsl.l})];}function _analogous(color,results,slices){results=results||6;slices=slices||30;var hsl=tinycolor(color).toHsl();var part=360/slices;var ret=[tinycolor(color)];for(hsl.h=(hsl.h-(part*results>>1)+720)%360;--results;){hsl.h=(hsl.h+part)%360;ret.push(tinycolor(hsl));}return ret;}function _monochromatic(color,results){results=results||6;var hsv=tinycolor(color).toHsv();var h=hsv.h,s=hsv.s,v=hsv.v;var ret=[];var modification=1/results;while(results--){ret.push(tinycolor({h:h,s:s,v:v}));v=(v+modification)%1;}return ret;}// Utility Functions\n// ---------------------\ntinycolor.mix=function(color1,color2,amount){amount=amount===0?0:amount||50;var rgb1=tinycolor(color1).toRgb();var rgb2=tinycolor(color2).toRgb();var p=amount/100;var rgba={r:(rgb2.r-rgb1.r)*p+rgb1.r,g:(rgb2.g-rgb1.g)*p+rgb1.g,b:(rgb2.b-rgb1.b)*p+rgb1.b,a:(rgb2.a-rgb1.a)*p+rgb1.a};return tinycolor(rgba);};// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability=function(color1,color2){var c1=tinycolor(color1);var c2=tinycolor(color2);return(Math.max(c1.getLuminance(),c2.getLuminance())+0.05)/(Math.min(c1.getLuminance(),c2.getLuminance())+0.05);};// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable=function(color1,color2,wcag2){var readability=tinycolor.readability(color1,color2);var wcag2Parms,out;out=false;wcag2Parms=validateWCAG2Parms(wcag2);switch(wcag2Parms.level+wcag2Parms.size){case\"AAsmall\":case\"AAAlarge\":out=readability>=4.5;break;case\"AAlarge\":out=readability>=3;break;case\"AAAsmall\":out=readability>=7;break;}return out;};// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable=function(baseColor,colorList,args){var bestColor=null;var bestScore=0;var readability;var includeFallbackColors,level,size;args=args||{};includeFallbackColors=args.includeFallbackColors;level=args.level;size=args.size;for(var i=0;i<colorList.length;i++){readability=tinycolor.readability(baseColor,colorList[i]);if(readability>bestScore){bestScore=readability;bestColor=tinycolor(colorList[i]);}}if(tinycolor.isReadable(baseColor,bestColor,{\"level\":level,\"size\":size})||!includeFallbackColors){return bestColor;}else{args.includeFallbackColors=false;return tinycolor.mostReadable(baseColor,[\"#fff\",\"#000\"],args);}};// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names=tinycolor.names={aliceblue:\"f0f8ff\",antiquewhite:\"faebd7\",aqua:\"0ff\",aquamarine:\"7fffd4\",azure:\"f0ffff\",beige:\"f5f5dc\",bisque:\"ffe4c4\",black:\"000\",blanchedalmond:\"ffebcd\",blue:\"00f\",blueviolet:\"8a2be2\",brown:\"a52a2a\",burlywood:\"deb887\",burntsienna:\"ea7e5d\",cadetblue:\"5f9ea0\",chartreuse:\"7fff00\",chocolate:\"d2691e\",coral:\"ff7f50\",cornflowerblue:\"6495ed\",cornsilk:\"fff8dc\",crimson:\"dc143c\",cyan:\"0ff\",darkblue:\"00008b\",darkcyan:\"008b8b\",darkgoldenrod:\"b8860b\",darkgray:\"a9a9a9\",darkgreen:\"006400\",darkgrey:\"a9a9a9\",darkkhaki:\"bdb76b\",darkmagenta:\"8b008b\",darkolivegreen:\"556b2f\",darkorange:\"ff8c00\",darkorchid:\"9932cc\",darkred:\"8b0000\",darksalmon:\"e9967a\",darkseagreen:\"8fbc8f\",darkslateblue:\"483d8b\",darkslategray:\"2f4f4f\",darkslategrey:\"2f4f4f\",darkturquoise:\"00ced1\",darkviolet:\"9400d3\",deeppink:\"ff1493\",deepskyblue:\"00bfff\",dimgray:\"696969\",dimgrey:\"696969\",dodgerblue:\"1e90ff\",firebrick:\"b22222\",floralwhite:\"fffaf0\",forestgreen:\"228b22\",fuchsia:\"f0f\",gainsboro:\"dcdcdc\",ghostwhite:\"f8f8ff\",gold:\"ffd700\",goldenrod:\"daa520\",gray:\"808080\",green:\"008000\",greenyellow:\"adff2f\",grey:\"808080\",honeydew:\"f0fff0\",hotpink:\"ff69b4\",indianred:\"cd5c5c\",indigo:\"4b0082\",ivory:\"fffff0\",khaki:\"f0e68c\",lavender:\"e6e6fa\",lavenderblush:\"fff0f5\",lawngreen:\"7cfc00\",lemonchiffon:\"fffacd\",lightblue:\"add8e6\",lightcoral:\"f08080\",lightcyan:\"e0ffff\",lightgoldenrodyellow:\"fafad2\",lightgray:\"d3d3d3\",lightgreen:\"90ee90\",lightgrey:\"d3d3d3\",lightpink:\"ffb6c1\",lightsalmon:\"ffa07a\",lightseagreen:\"20b2aa\",lightskyblue:\"87cefa\",lightslategray:\"789\",lightslategrey:\"789\",lightsteelblue:\"b0c4de\",lightyellow:\"ffffe0\",lime:\"0f0\",limegreen:\"32cd32\",linen:\"faf0e6\",magenta:\"f0f\",maroon:\"800000\",mediumaquamarine:\"66cdaa\",mediumblue:\"0000cd\",mediumorchid:\"ba55d3\",mediumpurple:\"9370db\",mediumseagreen:\"3cb371\",mediumslateblue:\"7b68ee\",mediumspringgreen:\"00fa9a\",mediumturquoise:\"48d1cc\",mediumvioletred:\"c71585\",midnightblue:\"191970\",mintcream:\"f5fffa\",mistyrose:\"ffe4e1\",moccasin:\"ffe4b5\",navajowhite:\"ffdead\",navy:\"000080\",oldlace:\"fdf5e6\",olive:\"808000\",olivedrab:\"6b8e23\",orange:\"ffa500\",orangered:\"ff4500\",orchid:\"da70d6\",palegoldenrod:\"eee8aa\",palegreen:\"98fb98\",paleturquoise:\"afeeee\",palevioletred:\"db7093\",papayawhip:\"ffefd5\",peachpuff:\"ffdab9\",peru:\"cd853f\",pink:\"ffc0cb\",plum:\"dda0dd\",powderblue:\"b0e0e6\",purple:\"800080\",rebeccapurple:\"663399\",red:\"f00\",rosybrown:\"bc8f8f\",royalblue:\"4169e1\",saddlebrown:\"8b4513\",salmon:\"fa8072\",sandybrown:\"f4a460\",seagreen:\"2e8b57\",seashell:\"fff5ee\",sienna:\"a0522d\",silver:\"c0c0c0\",skyblue:\"87ceeb\",slateblue:\"6a5acd\",slategray:\"708090\",slategrey:\"708090\",snow:\"fffafa\",springgreen:\"00ff7f\",steelblue:\"4682b4\",tan:\"d2b48c\",teal:\"008080\",thistle:\"d8bfd8\",tomato:\"ff6347\",turquoise:\"40e0d0\",violet:\"ee82ee\",wheat:\"f5deb3\",white:\"fff\",whitesmoke:\"f5f5f5\",yellow:\"ff0\",yellowgreen:\"9acd32\"};// Make it easy to access colors via `hexNames[hex]`\nvar hexNames=tinycolor.hexNames=flip(names);// Utilities\n// ---------\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o){var flipped={};for(var i in o){if(o.hasOwnProperty(i)){flipped[o[i]]=i;}}return flipped;}// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a){a=parseFloat(a);if(isNaN(a)||a<0||a>1){a=1;}return a;}// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n,max){if(isOnePointZero(n)){n=\"100%\";}var processPercent=isPercentage(n);n=mathMin(max,mathMax(0,parseFloat(n)));// Automatically convert percentage into number\nif(processPercent){n=parseInt(n*max,10)/100;}// Handle floating point rounding errors\nif(Math.abs(n-max)<0.000001){return 1;}// Convert into [0, 1] range if it isn't already\nreturn n%max/parseFloat(max);}// Force a number between 0 and 1\nfunction clamp01(val){return mathMin(1,mathMax(0,val));}// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val){return parseInt(val,16);}// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n){return typeof n==\"string\"&&n.indexOf('.')!=-1&&parseFloat(n)===1;}// Check to see if string passed in is a percentage\nfunction isPercentage(n){return typeof n===\"string\"&&n.indexOf('%')!=-1;}// Force a hex value to have 2 characters\nfunction pad2(c){return c.length==1?'0'+c:''+c;}// Replace a decimal with it's percentage value\nfunction convertToPercentage(n){if(n<=1){n=n*100+\"%\";}return n;}// Converts a decimal to a hex value\nfunction convertDecimalToHex(d){return Math.round(parseFloat(d)*255).toString(16);}// Converts a hex value to a decimal\nfunction convertHexToDecimal(h){return parseIntFromHex(h)/255;}var matchers=function(){// <http://www.w3.org/TR/css3-values/#integers>\nvar CSS_INTEGER=\"[-\\\\+]?\\\\d+%?\";// <http://www.w3.org/TR/css3-values/#number-value>\nvar CSS_NUMBER=\"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\nvar CSS_UNIT=\"(?:\"+CSS_NUMBER+\")|(?:\"+CSS_INTEGER+\")\";// Actual matching.\n// Parentheses and commas are optional, but not required.\n// Whitespace can take the place of commas or opening paren\nvar PERMISSIVE_MATCH3=\"[\\\\s|\\\\(]+(\"+CSS_UNIT+\")[,|\\\\s]+(\"+CSS_UNIT+\")[,|\\\\s]+(\"+CSS_UNIT+\")\\\\s*\\\\)?\";var PERMISSIVE_MATCH4=\"[\\\\s|\\\\(]+(\"+CSS_UNIT+\")[,|\\\\s]+(\"+CSS_UNIT+\")[,|\\\\s]+(\"+CSS_UNIT+\")[,|\\\\s]+(\"+CSS_UNIT+\")\\\\s*\\\\)?\";return{CSS_UNIT:new RegExp(CSS_UNIT),rgb:new RegExp(\"rgb\"+PERMISSIVE_MATCH3),rgba:new RegExp(\"rgba\"+PERMISSIVE_MATCH4),hsl:new RegExp(\"hsl\"+PERMISSIVE_MATCH3),hsla:new RegExp(\"hsla\"+PERMISSIVE_MATCH4),hsv:new RegExp(\"hsv\"+PERMISSIVE_MATCH3),hsva:new RegExp(\"hsva\"+PERMISSIVE_MATCH4),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/};}();// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color){return!!matchers.CSS_UNIT.exec(color);}// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color){color=color.replace(trimLeft,'').replace(trimRight,'').toLowerCase();var named=false;if(names[color]){color=names[color];named=true;}else if(color=='transparent'){return{r:0,g:0,b:0,a:0,format:\"name\"};}// Try to match string input using regular expressions.\n// Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n// Just return an object and let the conversion functions handle that.\n// This way the result will be the same whether the tinycolor is initialized with string or object.\nvar match;if(match=matchers.rgb.exec(color)){return{r:match[1],g:match[2],b:match[3]};}if(match=matchers.rgba.exec(color)){return{r:match[1],g:match[2],b:match[3],a:match[4]};}if(match=matchers.hsl.exec(color)){return{h:match[1],s:match[2],l:match[3]};}if(match=matchers.hsla.exec(color)){return{h:match[1],s:match[2],l:match[3],a:match[4]};}if(match=matchers.hsv.exec(color)){return{h:match[1],s:match[2],v:match[3]};}if(match=matchers.hsva.exec(color)){return{h:match[1],s:match[2],v:match[3],a:match[4]};}if(match=matchers.hex8.exec(color)){return{r:parseIntFromHex(match[1]),g:parseIntFromHex(match[2]),b:parseIntFromHex(match[3]),a:convertHexToDecimal(match[4]),format:named?\"name\":\"hex8\"};}if(match=matchers.hex6.exec(color)){return{r:parseIntFromHex(match[1]),g:parseIntFromHex(match[2]),b:parseIntFromHex(match[3]),format:named?\"name\":\"hex\"};}if(match=matchers.hex4.exec(color)){return{r:parseIntFromHex(match[1]+''+match[1]),g:parseIntFromHex(match[2]+''+match[2]),b:parseIntFromHex(match[3]+''+match[3]),a:convertHexToDecimal(match[4]+''+match[4]),format:named?\"name\":\"hex8\"};}if(match=matchers.hex3.exec(color)){return{r:parseIntFromHex(match[1]+''+match[1]),g:parseIntFromHex(match[2]+''+match[2]),b:parseIntFromHex(match[3]+''+match[3]),format:named?\"name\":\"hex\"};}return false;}function validateWCAG2Parms(parms){// return valid WCAG2 parms for isReadable.\n// If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\nvar level,size;parms=parms||{\"level\":\"AA\",\"size\":\"small\"};level=(parms.level||\"AA\").toUpperCase();size=(parms.size||\"small\").toLowerCase();if(level!==\"AA\"&&level!==\"AAA\"){level=\"AA\";}if(size!==\"small\"&&size!==\"large\"){size=\"small\";}return{\"level\":level,\"size\":size};}// Node: Export function\nif(typeof module!==\"undefined\"&&module.exports){module.exports=tinycolor;}// AMD/requirejs: Define the module\nelse if(typeof define==='function'&&define.amd){define(function(){return tinycolor;});}// Browser: Expose to window\nelse{window.tinycolor=tinycolor;}})(Math);},{}],265:[function(_dereq_,module,exports){'use strict';var parseUnit=_dereq_('parse-unit');module.exports=toPX;var PIXELS_PER_INCH=96;function getPropertyInPX(element,prop){var parts=parseUnit(getComputedStyle(element).getPropertyValue(prop));return parts[0]*toPX(parts[1],element);}//This brutal hack is needed\nfunction getSizeBrutal(unit,element){var testDIV=document.createElement('div');testDIV.style['font-size']='128'+unit;element.appendChild(testDIV);var size=getPropertyInPX(testDIV,'font-size')/128;element.removeChild(testDIV);return size;}function toPX(str,element){element=element||document.body;str=(str||'px').trim().toLowerCase();if(element===window||element===document){element=document.body;}switch(str){case'%'://Ambiguous, not sure if we should use width or height\nreturn element.clientHeight/100.0;case'ch':case'ex':return getSizeBrutal(str,element);case'em':return getPropertyInPX(element,'font-size');case'rem':return getPropertyInPX(document.body,'font-size');case'vw':return window.innerWidth/100;case'vh':return window.innerHeight/100;case'vmin':return Math.min(window.innerWidth,window.innerHeight)/100;case'vmax':return Math.max(window.innerWidth,window.innerHeight)/100;case'in':return PIXELS_PER_INCH;case'cm':return PIXELS_PER_INCH/2.54;case'mm':return PIXELS_PER_INCH/25.4;case'pt':return PIXELS_PER_INCH/72;case'pc':return PIXELS_PER_INCH/6;}return 1;}},{\"parse-unit\":199}],266:[function(_dereq_,module,exports){\"use strict\";module.exports=triangulateCube;var perm=_dereq_(\"permutation-rank\");var sgn=_dereq_(\"permutation-parity\");var gamma=_dereq_(\"gamma\");function triangulateCube(dimension){if(dimension<0){return[];}if(dimension===0){return[[0]];}var dfactorial=Math.round(gamma(dimension+1))|0;var result=[];for(var i=0;i<dfactorial;++i){var p=perm.unrank(dimension,i);var cell=[0];var v=0;for(var j=0;j<p.length;++j){v+=1<<p[j];cell.push(v);}if(sgn(p)<1){cell[0]=v;cell[dimension]=0;}result.push(cell);}return result;}},{\"gamma\":83,\"permutation-parity\":200,\"permutation-rank\":201}],267:[function(_dereq_,module,exports){'use strict';module.exports=createTurntableController;var filterVector=_dereq_('filtered-vector');var invert44=_dereq_('gl-mat4/invert');var rotateM=_dereq_('gl-mat4/rotate');var cross=_dereq_('gl-vec3/cross');var normalize3=_dereq_('gl-vec3/normalize');var dot3=_dereq_('gl-vec3/dot');function len3(x,y,z){return Math.sqrt(Math.pow(x,2)+Math.pow(y,2)+Math.pow(z,2));}function clamp1(x){return Math.min(1.0,Math.max(-1.0,x));}function findOrthoPair(v){var vx=Math.abs(v[0]);var vy=Math.abs(v[1]);var vz=Math.abs(v[2]);var u=[0,0,0];if(vx>Math.max(vy,vz)){u[2]=1;}else if(vy>Math.max(vx,vz)){u[0]=1;}else{u[1]=1;}var vv=0;var uv=0;for(var i=0;i<3;++i){vv+=v[i]*v[i];uv+=u[i]*v[i];}for(var i=0;i<3;++i){u[i]-=uv/vv*v[i];}normalize3(u,u);return u;}function TurntableController(zoomMin,zoomMax,center,up,right,radius,theta,phi){this.center=filterVector(center);this.up=filterVector(up);this.right=filterVector(right);this.radius=filterVector([radius]);this.angle=filterVector([theta,phi]);this.angle.bounds=[[-Infinity,-Math.PI/2],[Infinity,Math.PI/2]];this.setDistanceLimits(zoomMin,zoomMax);this.computedCenter=this.center.curve(0);this.computedUp=this.up.curve(0);this.computedRight=this.right.curve(0);this.computedRadius=this.radius.curve(0);this.computedAngle=this.angle.curve(0);this.computedToward=[0,0,0];this.computedEye=[0,0,0];this.computedMatrix=new Array(16);for(var i=0;i<16;++i){this.computedMatrix[i]=0.5;}this.recalcMatrix(0);}var proto=TurntableController.prototype;proto.setDistanceLimits=function(minDist,maxDist){if(minDist>0){minDist=Math.log(minDist);}else{minDist=-Infinity;}if(maxDist>0){maxDist=Math.log(maxDist);}else{maxDist=Infinity;}maxDist=Math.max(maxDist,minDist);this.radius.bounds[0][0]=minDist;this.radius.bounds[1][0]=maxDist;};proto.getDistanceLimits=function(out){var bounds=this.radius.bounds[0];if(out){out[0]=Math.exp(bounds[0][0]);out[1]=Math.exp(bounds[1][0]);return out;}return[Math.exp(bounds[0][0]),Math.exp(bounds[1][0])];};proto.recalcMatrix=function(t){//Recompute curves\nthis.center.curve(t);this.up.curve(t);this.right.curve(t);this.radius.curve(t);this.angle.curve(t);//Compute frame for camera matrix\nvar up=this.computedUp;var right=this.computedRight;var uu=0.0;var ur=0.0;for(var i=0;i<3;++i){ur+=up[i]*right[i];uu+=up[i]*up[i];}var ul=Math.sqrt(uu);var rr=0.0;for(var i=0;i<3;++i){right[i]-=up[i]*ur/uu;rr+=right[i]*right[i];up[i]/=ul;}var rl=Math.sqrt(rr);for(var i=0;i<3;++i){right[i]/=rl;}//Compute toward vector\nvar toward=this.computedToward;cross(toward,up,right);normalize3(toward,toward);//Compute angular parameters\nvar radius=Math.exp(this.computedRadius[0]);var theta=this.computedAngle[0];var phi=this.computedAngle[1];var ctheta=Math.cos(theta);var stheta=Math.sin(theta);var cphi=Math.cos(phi);var sphi=Math.sin(phi);var center=this.computedCenter;var wx=ctheta*cphi;var wy=stheta*cphi;var wz=sphi;var sx=-ctheta*sphi;var sy=-stheta*sphi;var sz=cphi;var eye=this.computedEye;var mat=this.computedMatrix;for(var i=0;i<3;++i){var x=wx*right[i]+wy*toward[i]+wz*up[i];mat[4*i+1]=sx*right[i]+sy*toward[i]+sz*up[i];mat[4*i+2]=x;mat[4*i+3]=0.0;}var ax=mat[1];var ay=mat[5];var az=mat[9];var bx=mat[2];var by=mat[6];var bz=mat[10];var cx=ay*bz-az*by;var cy=az*bx-ax*bz;var cz=ax*by-ay*bx;var cl=len3(cx,cy,cz);cx/=cl;cy/=cl;cz/=cl;mat[0]=cx;mat[4]=cy;mat[8]=cz;for(var i=0;i<3;++i){eye[i]=center[i]+mat[2+4*i]*radius;}for(var i=0;i<3;++i){var rr=0.0;for(var j=0;j<3;++j){rr+=mat[i+4*j]*eye[j];}mat[12+i]=-rr;}mat[15]=1.0;};proto.getMatrix=function(t,result){this.recalcMatrix(t);var mat=this.computedMatrix;if(result){for(var i=0;i<16;++i){result[i]=mat[i];}return result;}return mat;};var zAxis=[0,0,0];proto.rotate=function(t,dtheta,dphi,droll){this.angle.move(t,dtheta,dphi);if(droll){this.recalcMatrix(t);var mat=this.computedMatrix;zAxis[0]=mat[2];zAxis[1]=mat[6];zAxis[2]=mat[10];var up=this.computedUp;var right=this.computedRight;var toward=this.computedToward;for(var i=0;i<3;++i){mat[4*i]=up[i];mat[4*i+1]=right[i];mat[4*i+2]=toward[i];}rotateM(mat,mat,droll,zAxis);for(var i=0;i<3;++i){up[i]=mat[4*i];right[i]=mat[4*i+1];}this.up.set(t,up[0],up[1],up[2]);this.right.set(t,right[0],right[1],right[2]);}};proto.pan=function(t,dx,dy,dz){dx=dx||0.0;dy=dy||0.0;dz=dz||0.0;this.recalcMatrix(t);var mat=this.computedMatrix;var dist=Math.exp(this.computedRadius[0]);var ux=mat[1];var uy=mat[5];var uz=mat[9];var ul=len3(ux,uy,uz);ux/=ul;uy/=ul;uz/=ul;var rx=mat[0];var ry=mat[4];var rz=mat[8];var ru=rx*ux+ry*uy+rz*uz;rx-=ux*ru;ry-=uy*ru;rz-=uz*ru;var rl=len3(rx,ry,rz);rx/=rl;ry/=rl;rz/=rl;var vx=rx*dx+ux*dy;var vy=ry*dx+uy*dy;var vz=rz*dx+uz*dy;this.center.move(t,vx,vy,vz);//Update z-component of radius\nvar radius=Math.exp(this.computedRadius[0]);radius=Math.max(1e-4,radius+dz);this.radius.set(t,Math.log(radius));};proto.translate=function(t,dx,dy,dz){this.center.move(t,dx||0.0,dy||0.0,dz||0.0);};//Recenters the coordinate axes\nproto.setMatrix=function(t,mat,axes,noSnap){//Get the axes for tare\nvar ushift=1;if(typeof axes==='number'){ushift=axes|0;}if(ushift<0||ushift>3){ushift=1;}var vshift=(ushift+2)%3;var fshift=(ushift+1)%3;//Recompute state for new t value\nif(!mat){this.recalcMatrix(t);mat=this.computedMatrix;}//Get right and up vectors\nvar ux=mat[ushift];var uy=mat[ushift+4];var uz=mat[ushift+8];if(!noSnap){var ul=len3(ux,uy,uz);ux/=ul;uy/=ul;uz/=ul;}else{var ax=Math.abs(ux);var ay=Math.abs(uy);var az=Math.abs(uz);var am=Math.max(ax,ay,az);if(ax===am){ux=ux<0?-1:1;uy=uz=0;}else if(az===am){uz=uz<0?-1:1;ux=uy=0;}else{uy=uy<0?-1:1;ux=uz=0;}}var rx=mat[vshift];var ry=mat[vshift+4];var rz=mat[vshift+8];var ru=rx*ux+ry*uy+rz*uz;rx-=ux*ru;ry-=uy*ru;rz-=uz*ru;var rl=len3(rx,ry,rz);rx/=rl;ry/=rl;rz/=rl;var fx=uy*rz-uz*ry;var fy=uz*rx-ux*rz;var fz=ux*ry-uy*rx;var fl=len3(fx,fy,fz);fx/=fl;fy/=fl;fz/=fl;this.center.jump(t,ex,ey,ez);this.radius.idle(t);this.up.jump(t,ux,uy,uz);this.right.jump(t,rx,ry,rz);var phi,theta;if(ushift===2){var cx=mat[1];var cy=mat[5];var cz=mat[9];var cr=cx*rx+cy*ry+cz*rz;var cf=cx*fx+cy*fy+cz*fz;if(tu<0){phi=-Math.PI/2;}else{phi=Math.PI/2;}theta=Math.atan2(cf,cr);}else{var tx=mat[2];var ty=mat[6];var tz=mat[10];var tu=tx*ux+ty*uy+tz*uz;var tr=tx*rx+ty*ry+tz*rz;var tf=tx*fx+ty*fy+tz*fz;phi=Math.asin(clamp1(tu));theta=Math.atan2(tf,tr);}this.angle.jump(t,theta,phi);this.recalcMatrix(t);var dx=mat[2];var dy=mat[6];var dz=mat[10];var imat=this.computedMatrix;invert44(imat,mat);var w=imat[15];var ex=imat[12]/w;var ey=imat[13]/w;var ez=imat[14]/w;var gs=Math.exp(this.computedRadius[0]);this.center.jump(t,ex-dx*gs,ey-dy*gs,ez-dz*gs);};proto.lastT=function(){return Math.max(this.center.lastT(),this.up.lastT(),this.right.lastT(),this.radius.lastT(),this.angle.lastT());};proto.idle=function(t){this.center.idle(t);this.up.idle(t);this.right.idle(t);this.radius.idle(t);this.angle.idle(t);};proto.flush=function(t){this.center.flush(t);this.up.flush(t);this.right.flush(t);this.radius.flush(t);this.angle.flush(t);};proto.setDistance=function(t,d){if(d>0){this.radius.set(t,Math.log(d));}};proto.lookAt=function(t,eye,center,up){this.recalcMatrix(t);eye=eye||this.computedEye;center=center||this.computedCenter;up=up||this.computedUp;var ux=up[0];var uy=up[1];var uz=up[2];var ul=len3(ux,uy,uz);if(ul<1e-6){return;}ux/=ul;uy/=ul;uz/=ul;var tx=eye[0]-center[0];var ty=eye[1]-center[1];var tz=eye[2]-center[2];var tl=len3(tx,ty,tz);if(tl<1e-6){return;}tx/=tl;ty/=tl;tz/=tl;var right=this.computedRight;var rx=right[0];var ry=right[1];var rz=right[2];var ru=ux*rx+uy*ry+uz*rz;rx-=ru*ux;ry-=ru*uy;rz-=ru*uz;var rl=len3(rx,ry,rz);if(rl<0.01){rx=uy*tz-uz*ty;ry=uz*tx-ux*tz;rz=ux*ty-uy*tx;rl=len3(rx,ry,rz);if(rl<1e-6){return;}}rx/=rl;ry/=rl;rz/=rl;this.up.set(t,ux,uy,uz);this.right.set(t,rx,ry,rz);this.center.set(t,center[0],center[1],center[2]);this.radius.set(t,Math.log(tl));var fx=uy*rz-uz*ry;var fy=uz*rx-ux*rz;var fz=ux*ry-uy*rx;var fl=len3(fx,fy,fz);fx/=fl;fy/=fl;fz/=fl;var tu=ux*tx+uy*ty+uz*tz;var tr=rx*tx+ry*ty+rz*tz;var tf=fx*tx+fy*ty+fz*tz;var phi=Math.asin(clamp1(tu));var theta=Math.atan2(tf,tr);var angleState=this.angle._state;var lastTheta=angleState[angleState.length-1];var lastPhi=angleState[angleState.length-2];lastTheta=lastTheta%(2.0*Math.PI);var dp=Math.abs(lastTheta+2.0*Math.PI-theta);var d0=Math.abs(lastTheta-theta);var dn=Math.abs(lastTheta-2.0*Math.PI-theta);if(dp<d0){lastTheta+=2.0*Math.PI;}if(dn<d0){lastTheta-=2.0*Math.PI;}this.angle.jump(this.angle.lastT(),lastTheta,lastPhi);this.angle.set(t,theta,phi);};function createTurntableController(options){options=options||{};var center=options.center||[0,0,0];var up=options.up||[0,1,0];var right=options.right||findOrthoPair(up);var radius=options.radius||1.0;var theta=options.theta||0.0;var phi=options.phi||0.0;center=[].slice.call(center,0,3);up=[].slice.call(up,0,3);normalize3(up,up);right=[].slice.call(right,0,3);normalize3(right,right);if('eye'in options){var eye=options.eye;var toward=[eye[0]-center[0],eye[1]-center[1],eye[2]-center[2]];cross(right,toward,up);if(len3(right[0],right[1],right[2])<1e-6){right=findOrthoPair(up);}else{normalize3(right,right);}radius=len3(toward[0],toward[1],toward[2]);var ut=dot3(up,toward)/radius;var rt=dot3(right,toward)/radius;phi=Math.acos(ut);theta=Math.acos(rt);}//Use logarithmic coordinates for radius\nradius=Math.log(radius);//Return the controller\nreturn new TurntableController(options.zoomMin,options.zoomMax,center,up,right,radius,theta,phi);}},{\"filtered-vector\":81,\"gl-mat4/invert\":111,\"gl-mat4/rotate\":115,\"gl-vec3/cross\":147,\"gl-vec3/dot\":148,\"gl-vec3/normalize\":151}],268:[function(_dereq_,module,exports){\"use strict\";module.exports=twoProduct;var SPLITTER=+(Math.pow(2,27)+1.0);function twoProduct(a,b,result){var x=a*b;var c=SPLITTER*a;var abig=c-a;var ahi=c-abig;var alo=a-ahi;var d=SPLITTER*b;var bbig=d-b;var bhi=d-bbig;var blo=b-bhi;var err1=x-ahi*bhi;var err2=err1-alo*bhi;var err3=err2-ahi*blo;var y=alo*blo-err3;if(result){result[0]=y;result[1]=x;return result;}return[y,x];}},{}],269:[function(_dereq_,module,exports){\"use strict\";module.exports=fastTwoSum;function fastTwoSum(a,b,result){var x=a+b;var bv=x-a;var av=x-bv;var br=b-bv;var ar=a-av;if(result){result[0]=ar+br;result[1]=x;return result;}return[ar+br,x];}},{}],270:[function(_dereq_,module,exports){(function(global,Buffer){'use strict';var bits=_dereq_('bit-twiddle');var dup=_dereq_('dup');//Legacy pool support\nif(!global.__TYPEDARRAY_POOL){global.__TYPEDARRAY_POOL={UINT8:dup([32,0]),UINT16:dup([32,0]),UINT32:dup([32,0]),INT8:dup([32,0]),INT16:dup([32,0]),INT32:dup([32,0]),FLOAT:dup([32,0]),DOUBLE:dup([32,0]),DATA:dup([32,0]),UINT8C:dup([32,0]),BUFFER:dup([32,0])};}var hasUint8C=typeof Uint8ClampedArray!=='undefined';var POOL=global.__TYPEDARRAY_POOL;//Upgrade pool\nif(!POOL.UINT8C){POOL.UINT8C=dup([32,0]);}if(!POOL.BUFFER){POOL.BUFFER=dup([32,0]);}//New technique: Only allocate from ArrayBufferView and Buffer\nvar DATA=POOL.DATA,BUFFER=POOL.BUFFER;exports.free=function free(array){if(Buffer.isBuffer(array)){BUFFER[bits.log2(array.length)].push(array);}else{if(Object.prototype.toString.call(array)!=='[object ArrayBuffer]'){array=array.buffer;}if(!array){return;}var n=array.length||array.byteLength;var log_n=bits.log2(n)|0;DATA[log_n].push(array);}};function freeArrayBuffer(buffer){if(!buffer){return;}var n=buffer.length||buffer.byteLength;var log_n=bits.log2(n);DATA[log_n].push(buffer);}function freeTypedArray(array){freeArrayBuffer(array.buffer);}exports.freeUint8=exports.freeUint16=exports.freeUint32=exports.freeInt8=exports.freeInt16=exports.freeInt32=exports.freeFloat32=exports.freeFloat=exports.freeFloat64=exports.freeDouble=exports.freeUint8Clamped=exports.freeDataView=freeTypedArray;exports.freeArrayBuffer=freeArrayBuffer;exports.freeBuffer=function freeBuffer(array){BUFFER[bits.log2(array.length)].push(array);};exports.malloc=function malloc(n,dtype){if(dtype===undefined||dtype==='arraybuffer'){return mallocArrayBuffer(n);}else{switch(dtype){case'uint8':return mallocUint8(n);case'uint16':return mallocUint16(n);case'uint32':return mallocUint32(n);case'int8':return mallocInt8(n);case'int16':return mallocInt16(n);case'int32':return mallocInt32(n);case'float':case'float32':return mallocFloat(n);case'double':case'float64':return mallocDouble(n);case'uint8_clamped':return mallocUint8Clamped(n);case'buffer':return mallocBuffer(n);case'data':case'dataview':return mallocDataView(n);default:return null;}}return null;};function mallocArrayBuffer(n){var n=bits.nextPow2(n);var log_n=bits.log2(n);var d=DATA[log_n];if(d.length>0){return d.pop();}return new ArrayBuffer(n);}exports.mallocArrayBuffer=mallocArrayBuffer;function mallocUint8(n){return new Uint8Array(mallocArrayBuffer(n),0,n);}exports.mallocUint8=mallocUint8;function mallocUint16(n){return new Uint16Array(mallocArrayBuffer(2*n),0,n);}exports.mallocUint16=mallocUint16;function mallocUint32(n){return new Uint32Array(mallocArrayBuffer(4*n),0,n);}exports.mallocUint32=mallocUint32;function mallocInt8(n){return new Int8Array(mallocArrayBuffer(n),0,n);}exports.mallocInt8=mallocInt8;function mallocInt16(n){return new Int16Array(mallocArrayBuffer(2*n),0,n);}exports.mallocInt16=mallocInt16;function mallocInt32(n){return new Int32Array(mallocArrayBuffer(4*n),0,n);}exports.mallocInt32=mallocInt32;function mallocFloat(n){return new Float32Array(mallocArrayBuffer(4*n),0,n);}exports.mallocFloat32=exports.mallocFloat=mallocFloat;function mallocDouble(n){return new Float64Array(mallocArrayBuffer(8*n),0,n);}exports.mallocFloat64=exports.mallocDouble=mallocDouble;function mallocUint8Clamped(n){if(hasUint8C){return new Uint8ClampedArray(mallocArrayBuffer(n),0,n);}else{return mallocUint8(n);}}exports.mallocUint8Clamped=mallocUint8Clamped;function mallocDataView(n){return new DataView(mallocArrayBuffer(n),0,n);}exports.mallocDataView=mallocDataView;function mallocBuffer(n){n=bits.nextPow2(n);var log_n=bits.log2(n);var cache=BUFFER[log_n];if(cache.length>0){return cache.pop();}return new Buffer(n);}exports.mallocBuffer=mallocBuffer;exports.clearCache=function clearCache(){for(var i=0;i<32;++i){POOL.UINT8[i].length=0;POOL.UINT16[i].length=0;POOL.UINT32[i].length=0;POOL.INT8[i].length=0;POOL.INT16[i].length=0;POOL.INT32[i].length=0;POOL.FLOAT[i].length=0;POOL.DOUBLE[i].length=0;POOL.UINT8C[i].length=0;DATA[i].length=0;BUFFER[i].length=0;}};}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{},_dereq_(\"buffer\").Buffer);},{\"bit-twiddle\":32,\"buffer\":43,\"dup\":76}],271:[function(_dereq_,module,exports){\"use strict\";\"use restrict\";module.exports=UnionFind;function UnionFind(count){this.roots=new Array(count);this.ranks=new Array(count);for(var i=0;i<count;++i){this.roots[i]=i;this.ranks[i]=0;}}var proto=UnionFind.prototype;Object.defineProperty(proto,\"length\",{\"get\":function get(){return this.roots.length;}});proto.makeSet=function(){var n=this.roots.length;this.roots.push(n);this.ranks.push(0);return n;};proto.find=function(x){var x0=x;var roots=this.roots;while(roots[x]!==x){x=roots[x];}while(roots[x0]!==x){var y=roots[x0];roots[x0]=x;x0=y;}return x;};proto.link=function(x,y){var xr=this.find(x),yr=this.find(y);if(xr===yr){return;}var ranks=this.ranks,roots=this.roots,xd=ranks[xr],yd=ranks[yr];if(xd<yd){roots[xr]=yr;}else if(yd<xd){roots[yr]=xr;}else{roots[yr]=xr;++ranks[xr];}};},{}],272:[function(_dereq_,module,exports){\"use strict\";function unique_pred(list,compare){var ptr=1,len=list.length,a=list[0],b=list[0];for(var i=1;i<len;++i){b=a;a=list[i];if(compare(a,b)){if(i===ptr){ptr++;continue;}list[ptr++]=a;}}list.length=ptr;return list;}function unique_eq(list){var ptr=1,len=list.length,a=list[0],b=list[0];for(var i=1;i<len;++i,b=a){b=a;a=list[i];if(a!==b){if(i===ptr){ptr++;continue;}list[ptr++]=a;}}list.length=ptr;return list;}function unique(list,compare,sorted){if(list.length===0){return list;}if(compare){if(!sorted){list.sort(compare);}return unique_pred(list,compare);}if(!sorted){list.sort();}return unique_eq(list);}module.exports=unique;},{}],273:[function(_dereq_,module,exports){\"use strict\";module.exports=createText;var vectorizeText=_dereq_(\"./lib/vtext\");var defaultCanvas=null;var defaultContext=null;if(typeof document!=='undefined'){defaultCanvas=document.createElement('canvas');defaultCanvas.width=8192;defaultCanvas.height=1024;defaultContext=defaultCanvas.getContext(\"2d\");}function createText(str,options){if(_typeof(options)!==\"object\"||options===null){options={};}return vectorizeText(str,options.canvas||defaultCanvas,options.context||defaultContext,options);}},{\"./lib/vtext\":274}],274:[function(_dereq_,module,exports){\"use strict\";module.exports=vectorizeText;module.exports.processPixels=processPixels;var surfaceNets=_dereq_('surface-nets');var ndarray=_dereq_('ndarray');var simplify=_dereq_('simplify-planar-graph');var cleanPSLG=_dereq_('clean-pslg');var cdt2d=_dereq_('cdt2d');var toPolygonCrappy=_dereq_('planar-graph-to-polyline');var TAG_bold=\"b\";var CHR_bold='b|';var TAG_italic=\"i\";var CHR_italic='i|';var TAG_super=\"sup\";var CHR_super0='+';var CHR_super='+1';var TAG_sub=\"sub\";var CHR_sub0='-';var CHR_sub='-1';function parseTag(tag,TAG_CHR,str,map){var opnTag=\"<\"+tag+\">\";var clsTag=\"</\"+tag+\">\";var nOPN=opnTag.length;var nCLS=clsTag.length;var isRecursive=TAG_CHR[0]===CHR_super0||TAG_CHR[0]===CHR_sub0;var a=0;var b=-nCLS;while(a>-1){a=str.indexOf(opnTag,a);if(a===-1)break;b=str.indexOf(clsTag,a+nOPN);if(b===-1)break;if(b<=a)break;for(var i=a;i<b+nCLS;++i){if(i<a+nOPN||i>=b){map[i]=null;str=str.substr(0,i)+\" \"+str.substr(i+1);}else{if(map[i]!==null){var pos=map[i].indexOf(TAG_CHR[0]);if(pos===-1){map[i]+=TAG_CHR;}else{// i.e. to handle multiple sub/super-scripts\nif(isRecursive){// i.e to increase the sub/sup number\nmap[i]=map[i].substr(0,pos+1)+(1+parseInt(map[i][pos+1]))+map[i].substr(pos+2);}}}}}var start=a+nOPN;var remainingStr=str.substr(start,b-start);var c=remainingStr.indexOf(opnTag);if(c!==-1)a=c;else a=b+nCLS;}return map;}function transformPositions(positions,options,size){var align=options.textAlign||\"start\";var baseline=options.textBaseline||\"alphabetic\";var lo=[1<<30,1<<30];var hi=[0,0];var n=positions.length;for(var i=0;i<n;++i){var p=positions[i];for(var j=0;j<2;++j){lo[j]=Math.min(lo[j],p[j])|0;hi[j]=Math.max(hi[j],p[j])|0;}}var xShift=0;switch(align){case\"center\":xShift=-0.5*(lo[0]+hi[0]);break;case\"right\":case\"end\":xShift=-hi[0];break;case\"left\":case\"start\":xShift=-lo[0];break;default:throw new Error(\"vectorize-text: Unrecognized textAlign: '\"+align+\"'\");}var yShift=0;switch(baseline){case\"hanging\":case\"top\":yShift=-lo[1];break;case\"middle\":yShift=-0.5*(lo[1]+hi[1]);break;case\"alphabetic\":case\"ideographic\":yShift=-3*size;break;case\"bottom\":yShift=-hi[1];break;default:throw new Error(\"vectorize-text: Unrecoginized textBaseline: '\"+baseline+\"'\");}var scale=1.0/size;if(\"lineHeight\"in options){scale*=+options.lineHeight;}else if(\"width\"in options){scale=options.width/(hi[0]-lo[0]);}else if(\"height\"in options){scale=options.height/(hi[1]-lo[1]);}return positions.map(function(p){return[scale*(p[0]+xShift),scale*(p[1]+yShift)];});}function getPixels(canvas,context,rawString,fontSize,lineSpacing,styletags){rawString=rawString.replace(/\\n/g,'');// don't accept \\n in the input\nif(styletags.breaklines===true){rawString=rawString.replace(/\\<br\\>/g,'\\n');// replace <br> tags with \\n in the string\n}else{rawString=rawString.replace(/\\<br\\>/g,' ');// don't accept <br> tags in the input and replace with space in this case\n}var activeStyle=\"\";var map=[];for(j=0;j<rawString.length;++j){map[j]=activeStyle;}if(styletags.bolds===true)map=parseTag(TAG_bold,CHR_bold,rawString,map);if(styletags.italics===true)map=parseTag(TAG_italic,CHR_italic,rawString,map);if(styletags.superscripts===true)map=parseTag(TAG_super,CHR_super,rawString,map);if(styletags.subscripts===true)map=parseTag(TAG_sub,CHR_sub,rawString,map);var allStyles=[];var plainText=\"\";for(j=0;j<rawString.length;++j){if(map[j]!==null){plainText+=rawString[j];allStyles.push(map[j]);}}var allTexts=plainText.split('\\n');var numberOfLines=allTexts.length;var lineHeight=Math.round(lineSpacing*fontSize);var offsetX=fontSize;var offsetY=fontSize*2;var maxWidth=0;var minHeight=numberOfLines*lineHeight+offsetY;if(canvas.height<minHeight){canvas.height=minHeight;}context.fillStyle=\"#000\";context.fillRect(0,0,canvas.width,canvas.height);context.fillStyle=\"#fff\";var i,j,xPos,yPos,zPos;var nDone=0;for(i=0;i<numberOfLines;++i){var writeBuffer=function writeBuffer(){if(buffer!==\"\"){var delta=context.measureText(buffer).width;context.fillText(buffer,offsetX+xPos,offsetY+yPos);xPos+=delta;}};var changeStyle=function changeStyle(oldStyle,newStyle){function getTextFontSize(){return\"\"+Math.round(zPos)+\"px \";}var ctxFont=\"\"+context.font;if(styletags.subscripts===true){var oldIndex_Sub=oldStyle.indexOf(CHR_sub0);var newIndex_Sub=newStyle.indexOf(CHR_sub0);var oldSub=oldIndex_Sub>-1?parseInt(oldStyle[1+oldIndex_Sub]):0;var newSub=newIndex_Sub>-1?parseInt(newStyle[1+newIndex_Sub]):0;if(oldSub!==newSub){ctxFont=ctxFont.replace(getTextFontSize(),\"?px \");zPos*=Math.pow(0.75,newSub-oldSub);ctxFont=ctxFont.replace(\"?px \",getTextFontSize());}yPos+=0.25*lineHeight*(newSub-oldSub);}if(styletags.superscripts===true){var oldIndex_Super=oldStyle.indexOf(CHR_super0);var newIndex_Super=newStyle.indexOf(CHR_super0);var oldSuper=oldIndex_Super>-1?parseInt(oldStyle[1+oldIndex_Super]):0;var newSuper=newIndex_Super>-1?parseInt(newStyle[1+newIndex_Super]):0;if(oldSuper!==newSuper){ctxFont=ctxFont.replace(getTextFontSize(),\"?px \");zPos*=Math.pow(0.75,newSuper-oldSuper);ctxFont=ctxFont.replace(\"?px \",getTextFontSize());}yPos-=0.25*lineHeight*(newSuper-oldSuper);}if(styletags.bolds===true){var wasBold=oldStyle.indexOf(CHR_bold)>-1;var is_Bold=newStyle.indexOf(CHR_bold)>-1;if(!wasBold&&is_Bold){if(wasItalic){ctxFont=ctxFont.replace(\"italic \",\"italic bold \");}else{ctxFont=\"bold \"+ctxFont;}}if(wasBold&&!is_Bold){ctxFont=ctxFont.replace(\"bold \",'');}}if(styletags.italics===true){var wasItalic=oldStyle.indexOf(CHR_italic)>-1;var is_Italic=newStyle.indexOf(CHR_italic)>-1;if(!wasItalic&&is_Italic){ctxFont=\"italic \"+ctxFont;}if(wasItalic&&!is_Italic){ctxFont=ctxFont.replace(\"italic \",'');}}context.font=ctxFont;};var txt=allTexts[i]+'\\n';xPos=0;yPos=i*lineHeight;zPos=fontSize;var buffer=\"\";for(j=0;j<txt.length;++j){var style=j+nDone<allStyles.length?allStyles[j+nDone]:allStyles[allStyles.length-1];if(activeStyle===style){buffer+=txt[j];}else{writeBuffer();buffer=txt[j];if(style!==undefined){changeStyle(activeStyle,style);activeStyle=style;}}}writeBuffer();nDone+=txt.length;var width=Math.round(xPos+2*offsetX)|0;if(maxWidth<width)maxWidth=width;}//Cut pixels from image\nvar xCut=maxWidth;var yCut=offsetY+lineHeight*numberOfLines;var pixels=ndarray(context.getImageData(0,0,xCut,yCut).data,[yCut,xCut,4]);return pixels.pick(-1,-1,0).transpose(1,0);}function getContour(pixels,doSimplify){var contour=surfaceNets(pixels,128);if(doSimplify){return simplify(contour.cells,contour.positions,0.25);}return{edges:contour.cells,positions:contour.positions};}function processPixelsImpl(pixels,options,size,simplify){//Extract contour\nvar contour=getContour(pixels,simplify);//Apply warp to positions\nvar positions=transformPositions(contour.positions,options,size);var edges=contour.edges;var flip=\"ccw\"===options.orientation;//Clean up the PSLG, resolve self intersections, etc.\ncleanPSLG(positions,edges);//If triangulate flag passed, triangulate the result\nif(options.polygons||options.polygon||options.polyline){var result=toPolygonCrappy(edges,positions);var nresult=new Array(result.length);for(var i=0;i<result.length;++i){var loops=result[i];var nloops=new Array(loops.length);for(var j=0;j<loops.length;++j){var loop=loops[j];var nloop=new Array(loop.length);for(var k=0;k<loop.length;++k){nloop[k]=positions[loop[k]].slice();}if(flip){nloop.reverse();}nloops[j]=nloop;}nresult[i]=nloops;}return nresult;}else if(options.triangles||options.triangulate||options.triangle){return{cells:cdt2d(positions,edges,{delaunay:false,exterior:false,interior:true}),positions:positions};}else{return{edges:edges,positions:positions};}}function processPixels(pixels,options,size){try{return processPixelsImpl(pixels,options,size,true);}catch(e){}try{return processPixelsImpl(pixels,options,size,false);}catch(e){}if(options.polygons||options.polyline||options.polygon){return[];}if(options.triangles||options.triangulate||options.triangle){return{cells:[],positions:[]};}return{edges:[],positions:[]};}function vectorizeText(str,canvas,context,options){var size=64;var lineSpacing=1.25;var styletags={breaklines:false,bolds:false,italics:false,subscripts:false,superscripts:false};if(options){if(options.size&&options.size>0)size=options.size;if(options.lineSpacing&&options.lineSpacing>0)lineSpacing=options.lineSpacing;if(options.styletags&&options.styletags.breaklines)styletags.breaklines=options.styletags.breaklines?true:false;if(options.styletags&&options.styletags.bolds)styletags.bolds=options.styletags.bolds?true:false;if(options.styletags&&options.styletags.italics)styletags.italics=options.styletags.italics?true:false;if(options.styletags&&options.styletags.subscripts)styletags.subscripts=options.styletags.subscripts?true:false;if(options.styletags&&options.styletags.superscripts)styletags.superscripts=options.styletags.superscripts?true:false;}context.font=[options.fontStyle,options.fontVariant,options.fontWeight,size+\"px\",options.font].filter(function(d){return d;}).join(\" \");context.textAlign=\"start\";context.textBaseline=\"alphabetic\";context.direction=\"ltr\";var pixels=getPixels(canvas,context,str,size,lineSpacing,styletags);return processPixels(pixels,options,size);}},{\"cdt2d\":44,\"clean-pslg\":51,\"ndarray\":192,\"planar-graph-to-polyline\":204,\"simplify-planar-graph\":258,\"surface-nets\":263}],275:[function(_dereq_,module,exports){// Copyright (C) 2011 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @fileoverview Install a leaky WeakMap emulation on platforms that\n * don't provide a built-in one.\n *\n * <p>Assumes that an ES5 platform where, if {@code WeakMap} is\n * already present, then it conforms to the anticipated ES6\n * specification. To run this file on an ES5 or almost ES5\n * implementation where the {@code WeakMap} specification does not\n * quite conform, run <code>repairES5.js</code> first.\n *\n * <p>Even though WeakMapModule is not global, the linter thinks it\n * is, which is why it is in the overrides list below.\n *\n * <p>NOTE: Before using this WeakMap emulation in a non-SES\n * environment, see the note below about hiddenRecord.\n *\n * @author Mark S. Miller\n * @requires crypto, ArrayBuffer, Uint8Array, navigator, console\n * @overrides WeakMap, ses, Proxy\n * @overrides WeakMapModule\n */ /**\n * This {@code WeakMap} emulation is observably equivalent to the\n * ES-Harmony WeakMap, but with leakier garbage collection properties.\n *\n * <p>As with true WeakMaps, in this emulation, a key does not\n * retain maps indexed by that key and (crucially) a map does not\n * retain the keys it indexes. A map by itself also does not retain\n * the values associated with that map.\n *\n * <p>However, the values associated with a key in some map are\n * retained so long as that key is retained and those associations are\n * not overridden. For example, when used to support membranes, all\n * values exported from a given membrane will live for the lifetime\n * they would have had in the absence of an interposed membrane. Even\n * when the membrane is revoked, all objects that would have been\n * reachable in the absence of revocation will still be reachable, as\n * far as the GC can tell, even though they will no longer be relevant\n * to ongoing computation.\n *\n * <p>The API implemented here is approximately the API as implemented\n * in FF6.0a1 and agreed to by MarkM, Andreas Gal, and Dave Herman,\n * rather than the offially approved proposal page. TODO(erights):\n * upgrade the ecmascript WeakMap proposal page to explain this API\n * change and present to EcmaScript committee for their approval.\n *\n * <p>The first difference between the emulation here and that in\n * FF6.0a1 is the presence of non enumerable {@code get___, has___,\n * set___, and delete___} methods on WeakMap instances to represent\n * what would be the hidden internal properties of a primitive\n * implementation. Whereas the FF6.0a1 WeakMap.prototype methods\n * require their {@code this} to be a genuine WeakMap instance (i.e.,\n * an object of {@code [[Class]]} \"WeakMap}), since there is nothing\n * unforgeable about the pseudo-internal method names used here,\n * nothing prevents these emulated prototype methods from being\n * applied to non-WeakMaps with pseudo-internal methods of the same\n * names.\n *\n * <p>Another difference is that our emulated {@code\n * WeakMap.prototype} is not itself a WeakMap. A problem with the\n * current FF6.0a1 API is that WeakMap.prototype is itself a WeakMap\n * providing ambient mutability and an ambient communications\n * channel. Thus, if a WeakMap is already present and has this\n * problem, repairES5.js wraps it in a safe wrappper in order to\n * prevent access to this channel. (See\n * PATCH_MUTABLE_FROZEN_WEAKMAP_PROTO in repairES5.js).\n */ /**\n * If this is a full <a href=\n * \"http://code.google.com/p/es-lab/wiki/SecureableES5\"\n * >secureable ES5</a> platform and the ES-Harmony {@code WeakMap} is\n * absent, install an approximate emulation.\n *\n * <p>If WeakMap is present but cannot store some objects, use our approximate\n * emulation as a wrapper.\n *\n * <p>If this is almost a secureable ES5 platform, then WeakMap.js\n * should be run after repairES5.js.\n *\n * <p>See {@code WeakMap} for documentation of the garbage collection\n * properties of this WeakMap emulation.\n */(function WeakMapModule(){\"use strict\";if(typeof ses!=='undefined'&&ses.ok&&!ses.ok()){// already too broken, so give up\nreturn;}/**\n   * In some cases (current Firefox), we must make a choice betweeen a\n   * WeakMap which is capable of using all varieties of host objects as\n   * keys and one which is capable of safely using proxies as keys. See\n   * comments below about HostWeakMap and DoubleWeakMap for details.\n   *\n   * This function (which is a global, not exposed to guests) marks a\n   * WeakMap as permitted to do what is necessary to index all host\n   * objects, at the cost of making it unsafe for proxies.\n   *\n   * Do not apply this function to anything which is not a genuine\n   * fresh WeakMap.\n   */function weakMapPermitHostObjects(map){// identity of function used as a secret -- good enough and cheap\nif(map.permitHostObjects___){map.permitHostObjects___(weakMapPermitHostObjects);}}if(typeof ses!=='undefined'){ses.weakMapPermitHostObjects=weakMapPermitHostObjects;}// IE 11 has no Proxy but has a broken WeakMap such that we need to patch\n// it using DoubleWeakMap; this flag tells DoubleWeakMap so.\nvar doubleWeakMapCheckSilentFailure=false;// Check if there is already a good-enough WeakMap implementation, and if so\n// exit without replacing it.\nif(typeof WeakMap==='function'){var HostWeakMap=WeakMap;// There is a WeakMap -- is it good enough?\nif(typeof navigator!=='undefined'&&/Firefox/.test(navigator.userAgent)){// We're now *assuming not*, because as of this writing (2013-05-06)\n// Firefox's WeakMaps have a miscellany of objects they won't accept, and\n// we don't want to make an exhaustive list, and testing for just one\n// will be a problem if that one is fixed alone (as they did for Event).\n// If there is a platform that we *can* reliably test on, here's how to\n// do it:\n//  var problematic = ... ;\n//  var testHostMap = new HostWeakMap();\n//  try {\n//    testHostMap.set(problematic, 1);  // Firefox 20 will throw here\n//    if (testHostMap.get(problematic) === 1) {\n//      return;\n//    }\n//  } catch (e) {}\n}else{// IE 11 bug: WeakMaps silently fail to store frozen objects.\nvar testMap=new HostWeakMap();var testObject=Object.freeze({});testMap.set(testObject,1);if(testMap.get(testObject)!==1){doubleWeakMapCheckSilentFailure=true;// Fall through to installing our WeakMap.\n}else{module.exports=WeakMap;return;}}}var hop=Object.prototype.hasOwnProperty;var gopn=Object.getOwnPropertyNames;var defProp=Object.defineProperty;var isExtensible=Object.isExtensible;/**\n   * Security depends on HIDDEN_NAME being both <i>unguessable</i> and\n   * <i>undiscoverable</i> by untrusted code.\n   *\n   * <p>Given the known weaknesses of Math.random() on existing\n   * browsers, it does not generate unguessability we can be confident\n   * of.\n   *\n   * <p>It is the monkey patching logic in this file that is intended\n   * to ensure undiscoverability. The basic idea is that there are\n   * three fundamental means of discovering properties of an object:\n   * The for/in loop, Object.keys(), and Object.getOwnPropertyNames(),\n   * as well as some proposed ES6 extensions that appear on our\n   * whitelist. The first two only discover enumerable properties, and\n   * we only use HIDDEN_NAME to name a non-enumerable property, so the\n   * only remaining threat should be getOwnPropertyNames and some\n   * proposed ES6 extensions that appear on our whitelist. We monkey\n   * patch them to remove HIDDEN_NAME from the list of properties they\n   * returns.\n   *\n   * <p>TODO(erights): On a platform with built-in Proxies, proxies\n   * could be used to trap and thereby discover the HIDDEN_NAME, so we\n   * need to monkey patch Proxy.create, Proxy.createFunction, etc, in\n   * order to wrap the provided handler with the real handler which\n   * filters out all traps using HIDDEN_NAME.\n   *\n   * <p>TODO(erights): Revisit Mike Stay's suggestion that we use an\n   * encapsulated function at a not-necessarily-secret name, which\n   * uses the Stiegler shared-state rights amplification pattern to\n   * reveal the associated value only to the WeakMap in which this key\n   * is associated with that value. Since only the key retains the\n   * function, the function can also remember the key without causing\n   * leakage of the key, so this doesn't violate our general gc\n   * goals. In addition, because the name need not be a guarded\n   * secret, we could efficiently handle cross-frame frozen keys.\n   */var HIDDEN_NAME_PREFIX='weakmap:';var HIDDEN_NAME=HIDDEN_NAME_PREFIX+'ident:'+Math.random()+'___';if(typeof crypto!=='undefined'&&typeof crypto.getRandomValues==='function'&&typeof ArrayBuffer==='function'&&typeof Uint8Array==='function'){var ab=new ArrayBuffer(25);var u8s=new Uint8Array(ab);crypto.getRandomValues(u8s);HIDDEN_NAME=HIDDEN_NAME_PREFIX+'rand:'+Array.prototype.map.call(u8s,function(u8){return(u8%36).toString(36);}).join('')+'___';}function isNotHiddenName(name){return!(name.substr(0,HIDDEN_NAME_PREFIX.length)==HIDDEN_NAME_PREFIX&&name.substr(name.length-3)==='___');}/**\n   * Monkey patch getOwnPropertyNames to avoid revealing the\n   * HIDDEN_NAME.\n   *\n   * <p>The ES5.1 spec requires each name to appear only once, but as\n   * of this writing, this requirement is controversial for ES6, so we\n   * made this code robust against this case. If the resulting extra\n   * search turns out to be expensive, we can probably relax this once\n   * ES6 is adequately supported on all major browsers, iff no browser\n   * versions we support at that time have relaxed this constraint\n   * without providing built-in ES6 WeakMaps.\n   */defProp(Object,'getOwnPropertyNames',{value:function fakeGetOwnPropertyNames(obj){return gopn(obj).filter(isNotHiddenName);}});/**\n   * getPropertyNames is not in ES5 but it is proposed for ES6 and\n   * does appear in our whitelist, so we need to clean it too.\n   */if('getPropertyNames'in Object){var originalGetPropertyNames=Object.getPropertyNames;defProp(Object,'getPropertyNames',{value:function fakeGetPropertyNames(obj){return originalGetPropertyNames(obj).filter(isNotHiddenName);}});}/**\n   * <p>To treat objects as identity-keys with reasonable efficiency\n   * on ES5 by itself (i.e., without any object-keyed collections), we\n   * need to add a hidden property to such key objects when we\n   * can. This raises several issues:\n   * <ul>\n   * <li>Arranging to add this property to objects before we lose the\n   *     chance, and\n   * <li>Hiding the existence of this new property from most\n   *     JavaScript code.\n   * <li>Preventing <i>certification theft</i>, where one object is\n   *     created falsely claiming to be the key of an association\n   *     actually keyed by another object.\n   * <li>Preventing <i>value theft</i>, where untrusted code with\n   *     access to a key object but not a weak map nevertheless\n   *     obtains access to the value associated with that key in that\n   *     weak map.\n   * </ul>\n   * We do so by\n   * <ul>\n   * <li>Making the name of the hidden property unguessable, so \"[]\"\n   *     indexing, which we cannot intercept, cannot be used to access\n   *     a property without knowing the name.\n   * <li>Making the hidden property non-enumerable, so we need not\n   *     worry about for-in loops or {@code Object.keys},\n   * <li>monkey patching those reflective methods that would\n   *     prevent extensions, to add this hidden property first,\n   * <li>monkey patching those methods that would reveal this\n   *     hidden property.\n   * </ul>\n   * Unfortunately, because of same-origin iframes, we cannot reliably\n   * add this hidden property before an object becomes\n   * non-extensible. Instead, if we encounter a non-extensible object\n   * without a hidden record that we can detect (whether or not it has\n   * a hidden record stored under a name secret to us), then we just\n   * use the key object itself to represent its identity in a brute\n   * force leaky map stored in the weak map, losing all the advantages\n   * of weakness for these.\n   */function getHiddenRecord(key){if(key!==Object(key)){throw new TypeError('Not an object: '+key);}var hiddenRecord=key[HIDDEN_NAME];if(hiddenRecord&&hiddenRecord.key===key){return hiddenRecord;}if(!isExtensible(key)){// Weak map must brute force, as explained in doc-comment above.\nreturn void 0;}// The hiddenRecord and the key point directly at each other, via\n// the \"key\" and HIDDEN_NAME properties respectively. The key\n// field is for quickly verifying that this hidden record is an\n// own property, not a hidden record from up the prototype chain.\n//\n// NOTE: Because this WeakMap emulation is meant only for systems like\n// SES where Object.prototype is frozen without any numeric\n// properties, it is ok to use an object literal for the hiddenRecord.\n// This has two advantages:\n// * It is much faster in a performance critical place\n// * It avoids relying on Object.create(null), which had been\n//   problematic on Chrome 28.0.1480.0. See\n//   https://code.google.com/p/google-caja/issues/detail?id=1687\nhiddenRecord={key:key};// When using this WeakMap emulation on platforms where\n// Object.prototype might not be frozen and Object.create(null) is\n// reliable, use the following two commented out lines instead.\n// hiddenRecord = Object.create(null);\n// hiddenRecord.key = key;\n// Please contact us if you need this to work on platforms where\n// Object.prototype might not be frozen and\n// Object.create(null) might not be reliable.\ntry{defProp(key,HIDDEN_NAME,{value:hiddenRecord,writable:false,enumerable:false,configurable:false});return hiddenRecord;}catch(error){// Under some circumstances, isExtensible seems to misreport whether\n// the HIDDEN_NAME can be defined.\n// The circumstances have not been isolated, but at least affect\n// Node.js v0.10.26 on TravisCI / Linux, but not the same version of\n// Node.js on OS X.\nreturn void 0;}}/**\n   * Monkey patch operations that would make their argument\n   * non-extensible.\n   *\n   * <p>The monkey patched versions throw a TypeError if their\n   * argument is not an object, so it should only be done to functions\n   * that should throw a TypeError anyway if their argument is not an\n   * object.\n   */(function(){var oldFreeze=Object.freeze;defProp(Object,'freeze',{value:function identifyingFreeze(obj){getHiddenRecord(obj);return oldFreeze(obj);}});var oldSeal=Object.seal;defProp(Object,'seal',{value:function identifyingSeal(obj){getHiddenRecord(obj);return oldSeal(obj);}});var oldPreventExtensions=Object.preventExtensions;defProp(Object,'preventExtensions',{value:function identifyingPreventExtensions(obj){getHiddenRecord(obj);return oldPreventExtensions(obj);}});})();function constFunc(func){func.prototype=null;return Object.freeze(func);}var calledAsFunctionWarningDone=false;function calledAsFunctionWarning(){// Future ES6 WeakMap is currently (2013-09-10) expected to reject WeakMap()\n// but we used to permit it and do it ourselves, so warn only.\nif(!calledAsFunctionWarningDone&&typeof console!=='undefined'){calledAsFunctionWarningDone=true;console.warn('WeakMap should be invoked as new WeakMap(), not '+'WeakMap(). This will be an error in the future.');}}var nextId=0;var OurWeakMap=function OurWeakMap(){if(!(this instanceof OurWeakMap)){// approximate test for new ...()\ncalledAsFunctionWarning();}// We are currently (12/25/2012) never encountering any prematurely\n// non-extensible keys.\nvar keys=[];// brute force for prematurely non-extensible keys.\nvar values=[];// brute force for corresponding values.\nvar id=nextId++;function get___(key,opt_default){var index;var hiddenRecord=getHiddenRecord(key);if(hiddenRecord){return id in hiddenRecord?hiddenRecord[id]:opt_default;}else{index=keys.indexOf(key);return index>=0?values[index]:opt_default;}}function has___(key){var hiddenRecord=getHiddenRecord(key);if(hiddenRecord){return id in hiddenRecord;}else{return keys.indexOf(key)>=0;}}function set___(key,value){var index;var hiddenRecord=getHiddenRecord(key);if(hiddenRecord){hiddenRecord[id]=value;}else{index=keys.indexOf(key);if(index>=0){values[index]=value;}else{// Since some browsers preemptively terminate slow turns but\n// then continue computing with presumably corrupted heap\n// state, we here defensively get keys.length first and then\n// use it to update both the values and keys arrays, keeping\n// them in sync.\nindex=keys.length;values[index]=value;// If we crash here, values will be one longer than keys.\nkeys[index]=key;}}return this;}function delete___(key){var hiddenRecord=getHiddenRecord(key);var index,lastIndex;if(hiddenRecord){return id in hiddenRecord&&delete hiddenRecord[id];}else{index=keys.indexOf(key);if(index<0){return false;}// Since some browsers preemptively terminate slow turns but\n// then continue computing with potentially corrupted heap\n// state, we here defensively get keys.length first and then use\n// it to update both the keys and the values array, keeping\n// them in sync. We update the two with an order of assignments,\n// such that any prefix of these assignments will preserve the\n// key/value correspondence, either before or after the delete.\n// Note that this needs to work correctly when index === lastIndex.\nlastIndex=keys.length-1;keys[index]=void 0;// If we crash here, there's a void 0 in the keys array, but\n// no operation will cause a \"keys.indexOf(void 0)\", since\n// getHiddenRecord(void 0) will always throw an error first.\nvalues[index]=values[lastIndex];// If we crash here, values[index] cannot be found here,\n// because keys[index] is void 0.\nkeys[index]=keys[lastIndex];// If index === lastIndex and we crash here, then keys[index]\n// is still void 0, since the aliasing killed the previous key.\nkeys.length=lastIndex;// If we crash here, keys will be one shorter than values.\nvalues.length=lastIndex;return true;}}return Object.create(OurWeakMap.prototype,{get___:{value:constFunc(get___)},has___:{value:constFunc(has___)},set___:{value:constFunc(set___)},delete___:{value:constFunc(delete___)}});};OurWeakMap.prototype=Object.create(Object.prototype,{get:{/**\n       * Return the value most recently associated with key, or\n       * opt_default if none.\n       */value:function get(key,opt_default){return this.get___(key,opt_default);},writable:true,configurable:true},has:{/**\n       * Is there a value associated with key in this WeakMap?\n       */value:function has(key){return this.has___(key);},writable:true,configurable:true},set:{/**\n       * Associate value with key in this WeakMap, overwriting any\n       * previous association if present.\n       */value:function set(key,value){return this.set___(key,value);},writable:true,configurable:true},'delete':{/**\n       * Remove any association for key in this WeakMap, returning\n       * whether there was one.\n       *\n       * <p>Note that the boolean return here does not work like the\n       * {@code delete} operator. The {@code delete} operator returns\n       * whether the deletion succeeds at bringing about a state in\n       * which the deleted property is absent. The {@code delete}\n       * operator therefore returns true if the property was already\n       * absent, whereas this {@code delete} method returns false if\n       * the association was already absent.\n       */value:function remove(key){return this.delete___(key);},writable:true,configurable:true}});if(typeof HostWeakMap==='function'){(function(){// If we got here, then the platform has a WeakMap but we are concerned\n// that it may refuse to store some key types. Therefore, make a map\n// implementation which makes use of both as possible.\n// In this mode we are always using double maps, so we are not proxy-safe.\n// This combination does not occur in any known browser, but we had best\n// be safe.\nif(doubleWeakMapCheckSilentFailure&&typeof Proxy!=='undefined'){Proxy=undefined;}function DoubleWeakMap(){if(!(this instanceof OurWeakMap)){// approximate test for new ...()\ncalledAsFunctionWarning();}// Preferable, truly weak map.\nvar hmap=new HostWeakMap();// Our hidden-property-based pseudo-weak-map. Lazily initialized in the\n// 'set' implementation; thus we can avoid performing extra lookups if\n// we know all entries actually stored are entered in 'hmap'.\nvar omap=undefined;// Hidden-property maps are not compatible with proxies because proxies\n// can observe the hidden name and either accidentally expose it or fail\n// to allow the hidden property to be set. Therefore, we do not allow\n// arbitrary WeakMaps to switch to using hidden properties, but only\n// those which need the ability, and unprivileged code is not allowed\n// to set the flag.\n//\n// (Except in doubleWeakMapCheckSilentFailure mode in which case we\n// disable proxies.)\nvar enableSwitching=false;function dget(key,opt_default){if(omap){return hmap.has(key)?hmap.get(key):omap.get___(key,opt_default);}else{return hmap.get(key,opt_default);}}function dhas(key){return hmap.has(key)||(omap?omap.has___(key):false);}var dset;if(doubleWeakMapCheckSilentFailure){dset=function dset(key,value){hmap.set(key,value);if(!hmap.has(key)){if(!omap){omap=new OurWeakMap();}omap.set(key,value);}return this;};}else{dset=function dset(key,value){if(enableSwitching){try{hmap.set(key,value);}catch(e){if(!omap){omap=new OurWeakMap();}omap.set___(key,value);}}else{hmap.set(key,value);}return this;};}function ddelete(key){var result=!!hmap['delete'](key);if(omap){return omap.delete___(key)||result;}return result;}return Object.create(OurWeakMap.prototype,{get___:{value:constFunc(dget)},has___:{value:constFunc(dhas)},set___:{value:constFunc(dset)},delete___:{value:constFunc(ddelete)},permitHostObjects___:{value:constFunc(function(token){if(token===weakMapPermitHostObjects){enableSwitching=true;}else{throw new Error('bogus call to permitHostObjects___');}})}});}DoubleWeakMap.prototype=OurWeakMap.prototype;module.exports=DoubleWeakMap;// define .constructor to hide OurWeakMap ctor\nObject.defineProperty(WeakMap.prototype,'constructor',{value:WeakMap,enumerable:false,// as default .constructor is\nconfigurable:true,writable:true});})();}else{// There is no host WeakMap, so we must use the emulation.\n// Emulated WeakMaps are incompatible with native proxies (because proxies\n// can observe the hidden name), so we must disable Proxy usage (in\n// ArrayLike and Domado, currently).\nif(typeof Proxy!=='undefined'){Proxy=undefined;}module.exports=OurWeakMap;}})();},{}],276:[function(_dereq_,module,exports){var hiddenStore=_dereq_('./hidden-store.js');module.exports=createStore;function createStore(){var key={};return function(obj){if((_typeof(obj)!=='object'||obj===null)&&typeof obj!=='function'){throw new Error('Weakmap-shim: Key must be object');}var store=obj.valueOf(key);return store&&store.identity===key?store:hiddenStore(obj,key);};}},{\"./hidden-store.js\":277}],277:[function(_dereq_,module,exports){module.exports=hiddenStore;function hiddenStore(obj,key){var store={identity:key};var valueOf=obj.valueOf;Object.defineProperty(obj,\"valueOf\",{value:function value(_value2){return _value2!==key?valueOf.apply(this,arguments):store;},writable:true});return store;}},{}],278:[function(_dereq_,module,exports){// Original - @Gozola.\n// https://gist.github.com/Gozala/1269991\n// This is a reimplemented version (with a few bug fixes).\nvar createStore=_dereq_('./create-store.js');module.exports=weakMap;function weakMap(){var privates=createStore();return{'get':function get(key,fallback){var store=privates(key);return store.hasOwnProperty('value')?store.value:fallback;},'set':function set(key,value){privates(key).value=value;return this;},'has':function has(key){return'value'in privates(key);},'delete':function _delete(key){return delete privates(key).value;}};}},{\"./create-store.js\":276}],279:[function(_dereq_,module,exports){var getContext=_dereq_('get-canvas-context');module.exports=function getWebGLContext(opt){return getContext('webgl',opt);};},{\"get-canvas-context\":84}],280:[function(_dereq_,module,exports){module.exports=['OES_element_index_uint','EXT_sRGB','EXT_blend_minmax','EXT_frag_depth','WEBGL_depth_texture','WEBKIT_WEBGL_depth_texture','EXT_shader_texture_lod','OES_standard_derivatives','OES_texture_float','OES_texture_half_float','OES_texture_half_float_linear','OES_vertex_array_object','WEBGL_draw_buffers','OES_fbo_render_mipmap','ANGLE_instanced_arrays'];},{}],281:[function(_dereq_,module,exports){module.exports=_dereq_('cwise-compiler')({args:['array',{offset:[1],array:0},'scalar','scalar','index'],pre:{\"body\":\"{}\",\"args\":[],\"thisVars\":[],\"localVars\":[]},post:{\"body\":\"{}\",\"args\":[],\"thisVars\":[],\"localVars\":[]},body:{\"body\":\"{\\n        var _inline_1_da = _inline_1_arg0_ - _inline_1_arg3_\\n        var _inline_1_db = _inline_1_arg1_ - _inline_1_arg3_\\n        if((_inline_1_da >= 0) !== (_inline_1_db >= 0)) {\\n          _inline_1_arg2_.push(_inline_1_arg4_[0] + 0.5 + 0.5 * (_inline_1_da + _inline_1_db) / (_inline_1_da - _inline_1_db))\\n        }\\n      }\",\"args\":[{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_1_arg1_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_1_arg2_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_1_arg3_\",\"lvalue\":false,\"rvalue\":true,\"count\":2},{\"name\":\"_inline_1_arg4_\",\"lvalue\":false,\"rvalue\":true,\"count\":1}],\"thisVars\":[],\"localVars\":[\"_inline_1_da\",\"_inline_1_db\"]},funcName:'zeroCrossings'});},{\"cwise-compiler\":67}],282:[function(_dereq_,module,exports){\"use strict\";module.exports=findZeroCrossings;var core=_dereq_(\"./lib/zc-core\");function findZeroCrossings(array,level){var cross=[];level=+level||0.0;core(array.hi(array.shape[0]-1),cross,level);return cross;}},{\"./lib/zc-core\":281}],283:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/**\n * All paths are tuned for maximum scalability of the arrowhead,\n * ie throughout arrowwidth=0.3..3 the head is joined smoothly\n * to the line, with the line coming from the left and ending at (0, 0).\n *\n * `backoff` is the distance to move the arrowhead and the end of the line,\n * in order that the arrowhead points to the desired place, either at\n * the tip of the arrow or (in the case of circle or square)\n * the center of the symbol.\n *\n * `noRotate`, if truthy, says that this arrowhead should not rotate with the\n * arrow. That's the case for squares, which should always be straight, and\n * circles, for which it's irrelevant.\n */module.exports=[// no arrow\n{path:'',backoff:0},// wide with flat back\n{path:'M-2.4,-3V3L0.6,0Z',backoff:0.6},// narrower with flat back\n{path:'M-3.7,-2.5V2.5L1.3,0Z',backoff:1.3},// barbed\n{path:'M-4.45,-3L-1.65,-0.2V0.2L-4.45,3L1.55,0Z',backoff:1.55},// wide line-drawn\n{path:'M-2.2,-2.2L-0.2,-0.2V0.2L-2.2,2.2L-1.4,3L1.6,0L-1.4,-3Z',backoff:1.6},// narrower line-drawn\n{path:'M-4.4,-2.1L-0.6,-0.2V0.2L-4.4,2.1L-4,3L2,0L-4,-3Z',backoff:2},// circle\n{path:'M2,0A2,2 0 1,1 0,-2A2,2 0 0,1 2,0Z',backoff:0,noRotate:true},// square\n{path:'M2,2V-2H-2V2Z',backoff:0,noRotate:true}];},{}],284:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var ARROWPATHS=_dereq_('./arrow_paths');var fontAttrs=_dereq_('../../plots/font_attributes');var cartesianConstants=_dereq_('../../plots/cartesian/constants');var templatedArray=_dereq_('../../plot_api/plot_template').templatedArray;module.exports=templatedArray('annotation',{visible:{valType:'boolean',dflt:true,editType:'calc+arraydraw'},text:{valType:'string',editType:'calc+arraydraw'},textangle:{valType:'angle',dflt:0,editType:'calc+arraydraw'},font:fontAttrs({editType:'calc+arraydraw',colorEditType:'arraydraw'}),width:{valType:'number',min:1,dflt:null,editType:'calc+arraydraw'},height:{valType:'number',min:1,dflt:null,editType:'calc+arraydraw'},opacity:{valType:'number',min:0,max:1,dflt:1,editType:'arraydraw'},align:{valType:'enumerated',values:['left','center','right'],dflt:'center',editType:'arraydraw'},valign:{valType:'enumerated',values:['top','middle','bottom'],dflt:'middle',editType:'arraydraw'},bgcolor:{valType:'color',dflt:'rgba(0,0,0,0)',editType:'arraydraw'},bordercolor:{valType:'color',dflt:'rgba(0,0,0,0)',editType:'arraydraw'},borderpad:{valType:'number',min:0,dflt:1,editType:'calc+arraydraw'},borderwidth:{valType:'number',min:0,dflt:1,editType:'calc+arraydraw'},// arrow\nshowarrow:{valType:'boolean',dflt:true,editType:'calc+arraydraw'},arrowcolor:{valType:'color',editType:'arraydraw'},arrowhead:{valType:'integer',min:0,max:ARROWPATHS.length,dflt:1,editType:'arraydraw'},startarrowhead:{valType:'integer',min:0,max:ARROWPATHS.length,dflt:1,editType:'arraydraw'},arrowside:{valType:'flaglist',flags:['end','start'],extras:['none'],dflt:'end',editType:'arraydraw'},arrowsize:{valType:'number',min:0.3,dflt:1,editType:'calc+arraydraw'},startarrowsize:{valType:'number',min:0.3,dflt:1,editType:'calc+arraydraw'},arrowwidth:{valType:'number',min:0.1,editType:'calc+arraydraw'},standoff:{valType:'number',min:0,dflt:0,editType:'calc+arraydraw'},startstandoff:{valType:'number',min:0,dflt:0,editType:'calc+arraydraw'},ax:{valType:'any',editType:'calc+arraydraw'},ay:{valType:'any',editType:'calc+arraydraw'},axref:{valType:'enumerated',dflt:'pixel',values:['pixel',cartesianConstants.idRegex.x.toString()],editType:'calc'},ayref:{valType:'enumerated',dflt:'pixel',values:['pixel',cartesianConstants.idRegex.y.toString()],editType:'calc'},// positioning\nxref:{valType:'enumerated',values:['paper',cartesianConstants.idRegex.x.toString()],editType:'calc'},x:{valType:'any',editType:'calc+arraydraw'},xanchor:{valType:'enumerated',values:['auto','left','center','right'],dflt:'auto',editType:'calc+arraydraw'},xshift:{valType:'number',dflt:0,editType:'calc+arraydraw'},yref:{valType:'enumerated',values:['paper',cartesianConstants.idRegex.y.toString()],editType:'calc'},y:{valType:'any',editType:'calc+arraydraw'},yanchor:{valType:'enumerated',values:['auto','top','middle','bottom'],dflt:'auto',editType:'calc+arraydraw'},yshift:{valType:'number',dflt:0,editType:'calc+arraydraw'},clicktoshow:{valType:'enumerated',values:[false,'onoff','onout'],dflt:false,editType:'arraydraw'},xclick:{valType:'any',editType:'arraydraw'},yclick:{valType:'any',editType:'arraydraw'},hovertext:{valType:'string',editType:'arraydraw'},hoverlabel:{bgcolor:{valType:'color',editType:'arraydraw'},bordercolor:{valType:'color',editType:'arraydraw'},font:fontAttrs({editType:'arraydraw'}),editType:'arraydraw'},captureevents:{valType:'boolean',editType:'arraydraw'},editType:'calc',_deprecated:{ref:{valType:'string',editType:'calc'}}});},{\"../../plot_api/plot_template\":459,\"../../plots/cartesian/constants\":475,\"../../plots/font_attributes\":496,\"./arrow_paths\":283}],285:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Axes=_dereq_('../../plots/cartesian/axes');var draw=_dereq_('./draw').draw;module.exports=function calcAutorange(gd){var fullLayout=gd._fullLayout;var annotationList=Lib.filterVisible(fullLayout.annotations);if(annotationList.length&&gd._fullData.length){return Lib.syncOrAsync([draw,annAutorange],gd);}};function annAutorange(gd){var fullLayout=gd._fullLayout;// find the bounding boxes for each of these annotations'\n// relative to their anchor points\n// use the arrow and the text bg rectangle,\n// as the whole anno may include hidden text in its bbox\nLib.filterVisible(fullLayout.annotations).forEach(function(ann){var xa=Axes.getFromId(gd,ann.xref);var ya=Axes.getFromId(gd,ann.yref);ann._extremes={};if(xa)calcAxisExpansion(ann,xa);if(ya)calcAxisExpansion(ann,ya);});}function calcAxisExpansion(ann,ax){var axId=ax._id;var letter=axId.charAt(0);var pos=ann[letter];var apos=ann['a'+letter];var ref=ann[letter+'ref'];var aref=ann['a'+letter+'ref'];var padplus=ann['_'+letter+'padplus'];var padminus=ann['_'+letter+'padminus'];var shift={x:1,y:-1}[letter]*ann[letter+'shift'];var headSize=3*ann.arrowsize*ann.arrowwidth||0;var headPlus=headSize+shift;var headMinus=headSize-shift;var startHeadSize=3*ann.startarrowsize*ann.arrowwidth||0;var startHeadPlus=startHeadSize+shift;var startHeadMinus=startHeadSize-shift;var extremes;if(aref===ref){// expand for the arrowhead (padded by arrowhead)\nvar extremeArrowHead=Axes.findExtremes(ax,[ax.r2c(pos)],{ppadplus:headPlus,ppadminus:headMinus});// again for the textbox (padded by textbox)\nvar extremeText=Axes.findExtremes(ax,[ax.r2c(apos)],{ppadplus:Math.max(padplus,startHeadPlus),ppadminus:Math.max(padminus,startHeadMinus)});extremes={min:[extremeArrowHead.min[0],extremeText.min[0]],max:[extremeArrowHead.max[0],extremeText.max[0]]};}else{startHeadPlus=apos?startHeadPlus+apos:startHeadPlus;startHeadMinus=apos?startHeadMinus-apos:startHeadMinus;extremes=Axes.findExtremes(ax,[ax.r2c(pos)],{ppadplus:Math.max(padplus,headPlus,startHeadPlus),ppadminus:Math.max(padminus,headMinus,startHeadMinus)});}ann._extremes[axId]=extremes;}},{\"../../lib\":423,\"../../plots/cartesian/axes\":469,\"./draw\":290}],286:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Registry=_dereq_('../../registry');var arrayEditor=_dereq_('../../plot_api/plot_template').arrayEditor;module.exports={hasClickToShow:hasClickToShow,onClick:onClick};/*\n * hasClickToShow: does the given hoverData have ANY annotations which will\n * turn ON if we click here? (used by hover events to set cursor)\n *\n * gd: graphDiv\n * hoverData: a hoverData array, as included with the *plotly_hover* or\n *     *plotly_click* events in the `points` attribute\n *\n * returns: boolean\n */function hasClickToShow(gd,hoverData){var sets=getToggleSets(gd,hoverData);return sets.on.length>0||sets.explicitOff.length>0;}/*\n * onClick: perform the toggling (via Plotly.update) implied by clicking\n * at this hoverData\n *\n * gd: graphDiv\n * hoverData: a hoverData array, as included with the *plotly_hover* or\n *     *plotly_click* events in the `points` attribute\n *\n * returns: Promise that the update is complete\n */function onClick(gd,hoverData){var toggleSets=getToggleSets(gd,hoverData);var onSet=toggleSets.on;var offSet=toggleSets.off.concat(toggleSets.explicitOff);var update={};var annotationsOut=gd._fullLayout.annotations;var i,editHelpers;if(!(onSet.length||offSet.length))return;for(i=0;i<onSet.length;i++){editHelpers=arrayEditor(gd.layout,'annotations',annotationsOut[onSet[i]]);editHelpers.modifyItem('visible',true);Lib.extendFlat(update,editHelpers.getUpdateObj());}for(i=0;i<offSet.length;i++){editHelpers=arrayEditor(gd.layout,'annotations',annotationsOut[offSet[i]]);editHelpers.modifyItem('visible',false);Lib.extendFlat(update,editHelpers.getUpdateObj());}return Registry.call('update',gd,{},update);}/*\n * getToggleSets: find the annotations which will turn on or off at this\n * hoverData\n *\n * gd: graphDiv\n * hoverData: a hoverData array, as included with the *plotly_hover* or\n *     *plotly_click* events in the `points` attribute\n *\n * returns: {\n *   on: Array (indices of annotations to turn on),\n *   off: Array (indices to turn off because you're not hovering on them),\n *   explicitOff: Array (indices to turn off because you *are* hovering on them)\n * }\n */function getToggleSets(gd,hoverData){var annotations=gd._fullLayout.annotations;var onSet=[];var offSet=[];var explicitOffSet=[];var hoverLen=(hoverData||[]).length;var i,j,anni,showMode,pointj,xa,ya,toggleType;for(i=0;i<annotations.length;i++){anni=annotations[i];showMode=anni.clicktoshow;if(showMode){for(j=0;j<hoverLen;j++){pointj=hoverData[j];xa=pointj.xaxis;ya=pointj.yaxis;if(xa._id===anni.xref&&ya._id===anni.yref&&xa.d2r(pointj.x)===clickData2r(anni._xclick,xa)&&ya.d2r(pointj.y)===clickData2r(anni._yclick,ya)){// match! toggle this annotation\n// regardless of its clicktoshow mode\n// but if it's onout mode, off is implicit\nif(anni.visible){if(showMode==='onout')toggleType=offSet;else toggleType=explicitOffSet;}else{toggleType=onSet;}toggleType.push(i);break;}}if(j===hoverLen){// no match - only turn this annotation OFF, and only if\n// showmode is 'onout'\nif(anni.visible&&showMode==='onout')offSet.push(i);}}}return{on:onSet,off:offSet,explicitOff:explicitOffSet};}// to handle log axes until v2\nfunction clickData2r(d,ax){return ax.type==='log'?ax.l2r(d):ax.d2r(d);}},{\"../../lib\":423,\"../../plot_api/plot_template\":459,\"../../registry\":521}],287:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Color=_dereq_('../color');// defaults common to 'annotations' and 'annotations3d'\nmodule.exports=function handleAnnotationCommonDefaults(annIn,annOut,fullLayout,coerce){coerce('opacity');var bgColor=coerce('bgcolor');var borderColor=coerce('bordercolor');var borderOpacity=Color.opacity(borderColor);coerce('borderpad');var borderWidth=coerce('borderwidth');var showArrow=coerce('showarrow');coerce('text',showArrow?' ':fullLayout._dfltTitle.annotation);coerce('textangle');Lib.coerceFont(coerce,'font',fullLayout.font);coerce('width');coerce('align');var h=coerce('height');if(h)coerce('valign');if(showArrow){var arrowside=coerce('arrowside');var arrowhead;var arrowsize;if(arrowside.indexOf('end')!==-1){arrowhead=coerce('arrowhead');arrowsize=coerce('arrowsize');}if(arrowside.indexOf('start')!==-1){coerce('startarrowhead',arrowhead);coerce('startarrowsize',arrowsize);}coerce('arrowcolor',borderOpacity?annOut.bordercolor:Color.defaultLine);coerce('arrowwidth',(borderOpacity&&borderWidth||1)*2);coerce('standoff');coerce('startstandoff');}var hoverText=coerce('hovertext');var globalHoverLabel=fullLayout.hoverlabel||{};if(hoverText){var hoverBG=coerce('hoverlabel.bgcolor',globalHoverLabel.bgcolor||(Color.opacity(bgColor)?Color.rgb(bgColor):Color.defaultLine));var hoverBorder=coerce('hoverlabel.bordercolor',globalHoverLabel.bordercolor||Color.contrast(hoverBG));Lib.coerceFont(coerce,'hoverlabel.font',{family:globalHoverLabel.font.family,size:globalHoverLabel.font.size,color:globalHoverLabel.font.color||hoverBorder});}coerce('captureevents',!!hoverText);};},{\"../../lib\":423,\"../color\":299}],288:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var toLogRange=_dereq_('../../lib/to_log_range');/*\n * convertCoords: when converting an axis between log and linear\n * you need to alter any annotations on that axis to keep them\n * pointing at the same data point.\n * In v2.0 this will become obsolete\n *\n * gd: the plot div\n * ax: the axis being changed\n * newType: the type it's getting\n * doExtra: function(attr, val) from inside relayout that sets the attribute.\n *     Use this to make the changes as it's aware if any other changes in the\n *     same relayout call should override this conversion.\n */module.exports=function convertCoords(gd,ax,newType,doExtra){ax=ax||{};var toLog=newType==='log'&&ax.type==='linear';var fromLog=newType==='linear'&&ax.type==='log';if(!(toLog||fromLog))return;var annotations=gd._fullLayout.annotations;var axLetter=ax._id.charAt(0);var ann;var attrPrefix;function convert(attr){var currentVal=ann[attr];var newVal=null;if(toLog)newVal=toLogRange(currentVal,ax.range);else newVal=Math.pow(10,currentVal);// if conversion failed, delete the value so it gets a default value\nif(!isNumeric(newVal))newVal=null;doExtra(attrPrefix+attr,newVal);}for(var i=0;i<annotations.length;i++){ann=annotations[i];attrPrefix='annotations['+i+'].';if(ann[axLetter+'ref']===ax._id)convert(axLetter);if(ann['a'+axLetter+'ref']===ax._id)convert('a'+axLetter);}};},{\"../../lib/to_log_range\":448,\"fast-isnumeric\":80}],289:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Axes=_dereq_('../../plots/cartesian/axes');var handleArrayContainerDefaults=_dereq_('../../plots/array_container_defaults');var handleAnnotationCommonDefaults=_dereq_('./common_defaults');var attributes=_dereq_('./attributes');module.exports=function supplyLayoutDefaults(layoutIn,layoutOut){handleArrayContainerDefaults(layoutIn,layoutOut,{name:'annotations',handleItemDefaults:handleAnnotationDefaults});};function handleAnnotationDefaults(annIn,annOut,fullLayout){function coerce(attr,dflt){return Lib.coerce(annIn,annOut,attributes,attr,dflt);}var visible=coerce('visible');var clickToShow=coerce('clicktoshow');if(!(visible||clickToShow))return;handleAnnotationCommonDefaults(annIn,annOut,fullLayout,coerce);var showArrow=annOut.showarrow;// positioning\nvar axLetters=['x','y'];var arrowPosDflt=[-10,-30];var gdMock={_fullLayout:fullLayout};for(var i=0;i<2;i++){var axLetter=axLetters[i];// xref, yref\nvar axRef=Axes.coerceRef(annIn,annOut,gdMock,axLetter,'','paper');if(axRef!=='paper'){var ax=Axes.getFromId(gdMock,axRef);ax._annIndices.push(annOut._index);}// x, y\nAxes.coercePosition(annOut,gdMock,coerce,axRef,axLetter,0.5);if(showArrow){var arrowPosAttr='a'+axLetter;// axref, ayref\nvar aaxRef=Axes.coerceRef(annIn,annOut,gdMock,arrowPosAttr,'pixel');// for now the arrow can only be on the same axis or specified as pixels\n// TODO: sometime it might be interesting to allow it to be on *any* axis\n// but that would require updates to drawing & autorange code and maybe more\nif(aaxRef!=='pixel'&&aaxRef!==axRef){aaxRef=annOut[arrowPosAttr]='pixel';}// ax, ay\nvar aDflt=aaxRef==='pixel'?arrowPosDflt[i]:0.4;Axes.coercePosition(annOut,gdMock,coerce,aaxRef,arrowPosAttr,aDflt);}// xanchor, yanchor\ncoerce(axLetter+'anchor');// xshift, yshift\ncoerce(axLetter+'shift');}// if you have one coordinate you should have both\nLib.noneOrAll(annIn,annOut,['x','y']);// if you have one part of arrow length you should have both\nif(showArrow){Lib.noneOrAll(annIn,annOut,['ax','ay']);}if(clickToShow){var xClick=coerce('xclick');var yClick=coerce('yclick');// put the actual click data to bind to into private attributes\n// so we don't have to do this little bit of logic on every hover event\nannOut._xclick=xClick===undefined?annOut.x:Axes.cleanPosition(xClick,gdMock,annOut.xref);annOut._yclick=yClick===undefined?annOut.y:Axes.cleanPosition(yClick,gdMock,annOut.yref);}}},{\"../../lib\":423,\"../../plots/array_container_defaults\":465,\"../../plots/cartesian/axes\":469,\"./attributes\":284,\"./common_defaults\":287}],290:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Registry=_dereq_('../../registry');var Plots=_dereq_('../../plots/plots');var Lib=_dereq_('../../lib');var Axes=_dereq_('../../plots/cartesian/axes');var Color=_dereq_('../color');var Drawing=_dereq_('../drawing');var Fx=_dereq_('../fx');var svgTextUtils=_dereq_('../../lib/svg_text_utils');var setCursor=_dereq_('../../lib/setcursor');var dragElement=_dereq_('../dragelement');var arrayEditor=_dereq_('../../plot_api/plot_template').arrayEditor;var drawArrowHead=_dereq_('./draw_arrow_head');// Annotations are stored in gd.layout.annotations, an array of objects\n// index can point to one item in this array,\n//  or non-numeric to simply add a new one\n//  or -1 to modify all existing\n// opt can be the full options object, or one key (to be set to value)\n//  or undefined to simply redraw\n// if opt is blank, val can be 'add' or a full options object to add a new\n//  annotation at that point in the array, or 'remove' to delete this one\nmodule.exports={draw:draw,drawOne:drawOne,drawRaw:drawRaw};/*\n * draw: draw all annotations without any new modifications\n */function draw(gd){var fullLayout=gd._fullLayout;fullLayout._infolayer.selectAll('.annotation').remove();for(var i=0;i<fullLayout.annotations.length;i++){if(fullLayout.annotations[i].visible){drawOne(gd,i);}}return Plots.previousPromises(gd);}/*\n * drawOne: draw a single cartesian or paper-ref annotation, potentially with modifications\n *\n * index (int): the annotation to draw\n */function drawOne(gd,index){var fullLayout=gd._fullLayout;var options=fullLayout.annotations[index]||{};var xa=Axes.getFromId(gd,options.xref);var ya=Axes.getFromId(gd,options.yref);drawRaw(gd,options,index,false,xa,ya);}/**\n * drawRaw: draw a single annotation, potentially with modifications\n *\n * @param {DOM element} gd\n * @param {object} options : this annotation's fullLayout options\n * @param {integer} index : index in 'annotations' container of the annotation to draw\n * @param {string} subplotId : id of the annotation's subplot\n *  - use false for 2d (i.e. cartesian or paper-ref) annotations\n * @param {object | undefined} xa : full x-axis object to compute subplot pos-to-px\n * @param {object | undefined} ya : ... y-axis\n */function drawRaw(gd,options,index,subplotId,xa,ya){var fullLayout=gd._fullLayout;var gs=gd._fullLayout._size;var edits=gd._context.edits;var className,containerStr;if(subplotId){className='annotation-'+subplotId;containerStr=subplotId+'.annotations';}else{className='annotation';containerStr='annotations';}var editHelpers=arrayEditor(gd.layout,containerStr,options);var modifyBase=editHelpers.modifyBase;var modifyItem=editHelpers.modifyItem;var getUpdateObj=editHelpers.getUpdateObj;// remove the existing annotation if there is one\nfullLayout._infolayer.selectAll('.'+className+'[data-index=\"'+index+'\"]').remove();var annClipID='clip'+fullLayout._uid+'_ann'+index;// this annotation is gone - quit now after deleting it\n// TODO: use d3 idioms instead of deleting and redrawing every time\nif(!options._input||options.visible===false){d3.selectAll('#'+annClipID).remove();return;}// calculated pixel positions\n// x & y each will get text, head, and tail as appropriate\nvar annPosPx={x:{},y:{}};var textangle=+options.textangle||0;// create the components\n// made a single group to contain all, so opacity can work right\n// with border/arrow together this could handle a whole bunch of\n// cleanup at this point, but works for now\nvar annGroup=fullLayout._infolayer.append('g').classed(className,true).attr('data-index',String(index)).style('opacity',options.opacity);// another group for text+background so that they can rotate together\nvar annTextGroup=annGroup.append('g').classed('annotation-text-g',true);var editTextPosition=edits[options.showarrow?'annotationTail':'annotationPosition'];var textEvents=options.captureevents||edits.annotationText||editTextPosition;var annTextGroupInner=annTextGroup.append('g').style('pointer-events',textEvents?'all':null).call(setCursor,'pointer').on('click',function(){gd._dragging=false;var eventData={index:index,annotation:options._input,fullAnnotation:options,event:d3.event};if(subplotId){eventData.subplotId=subplotId;}gd.emit('plotly_clickannotation',eventData);});if(options.hovertext){annTextGroupInner.on('mouseover',function(){var hoverOptions=options.hoverlabel;var hoverFont=hoverOptions.font;var bBox=this.getBoundingClientRect();var bBoxRef=gd.getBoundingClientRect();Fx.loneHover({x0:bBox.left-bBoxRef.left,x1:bBox.right-bBoxRef.left,y:(bBox.top+bBox.bottom)/2-bBoxRef.top,text:options.hovertext,color:hoverOptions.bgcolor,borderColor:hoverOptions.bordercolor,fontFamily:hoverFont.family,fontSize:hoverFont.size,fontColor:hoverFont.color},{container:fullLayout._hoverlayer.node(),outerContainer:fullLayout._paper.node(),gd:gd});}).on('mouseout',function(){Fx.loneUnhover(fullLayout._hoverlayer.node());});}var borderwidth=options.borderwidth;var borderpad=options.borderpad;var borderfull=borderwidth+borderpad;var annTextBG=annTextGroupInner.append('rect').attr('class','bg').style('stroke-width',borderwidth+'px').call(Color.stroke,options.bordercolor).call(Color.fill,options.bgcolor);var isSizeConstrained=options.width||options.height;var annTextClip=fullLayout._topclips.selectAll('#'+annClipID).data(isSizeConstrained?[0]:[]);annTextClip.enter().append('clipPath').classed('annclip',true).attr('id',annClipID).append('rect');annTextClip.exit().remove();var font=options.font;var annText=annTextGroupInner.append('text').classed('annotation-text',true).text(options.text);function textLayout(s){s.call(Drawing.font,font).attr({'text-anchor':{left:'start',right:'end'}[options.align]||'middle'});svgTextUtils.convertToTspans(s,gd,drawGraphicalElements);return s;}function drawGraphicalElements(){// if the text has *only* a link, make the whole box into a link\nvar anchor3=annText.selectAll('a');if(anchor3.size()===1&&anchor3.text()===annText.text()){var wholeLink=annTextGroupInner.insert('a',':first-child').attr({'xlink:xlink:href':anchor3.attr('xlink:href'),'xlink:xlink:show':anchor3.attr('xlink:show')}).style({cursor:'pointer'});wholeLink.node().appendChild(annTextBG.node());}var mathjaxGroup=annTextGroupInner.select('.annotation-text-math-group');var hasMathjax=!mathjaxGroup.empty();var anntextBB=Drawing.bBox((hasMathjax?mathjaxGroup:annText).node());var textWidth=anntextBB.width;var textHeight=anntextBB.height;var annWidth=options.width||textWidth;var annHeight=options.height||textHeight;var outerWidth=Math.round(annWidth+2*borderfull);var outerHeight=Math.round(annHeight+2*borderfull);function shiftFraction(v,anchor){if(anchor==='auto'){if(v<1/3)anchor='left';else if(v>2/3)anchor='right';else anchor='center';}return{center:0,middle:0,left:0.5,bottom:-0.5,right:-0.5,top:0.5}[anchor];}var annotationIsOffscreen=false;var letters=['x','y'];for(var i=0;i<letters.length;i++){var axLetter=letters[i];var axRef=options[axLetter+'ref']||axLetter;var tailRef=options['a'+axLetter+'ref'];var ax={x:xa,y:ya}[axLetter];var dimAngle=(textangle+(axLetter==='x'?0:-90))*Math.PI/180;// note that these two can be either positive or negative\nvar annSizeFromWidth=outerWidth*Math.cos(dimAngle);var annSizeFromHeight=outerHeight*Math.sin(dimAngle);// but this one is the positive total size\nvar annSize=Math.abs(annSizeFromWidth)+Math.abs(annSizeFromHeight);var anchor=options[axLetter+'anchor'];var overallShift=options[axLetter+'shift']*(axLetter==='x'?1:-1);var posPx=annPosPx[axLetter];var basePx;var textPadShift;var alignPosition;var autoAlignFraction;var textShift;/*\n             * calculate the *primary* pixel position\n             * which is the arrowhead if there is one,\n             * otherwise the text anchor point\n             */if(ax){// check if annotation is off screen, to bypass DOM manipulations\nvar posFraction=ax.r2fraction(options[axLetter]);if(posFraction<0||posFraction>1){if(tailRef===axRef){posFraction=ax.r2fraction(options['a'+axLetter]);if(posFraction<0||posFraction>1){annotationIsOffscreen=true;}}else{annotationIsOffscreen=true;}}basePx=ax._offset+ax.r2p(options[axLetter]);autoAlignFraction=0.5;}else{if(axLetter==='x'){alignPosition=options[axLetter];basePx=gs.l+gs.w*alignPosition;}else{alignPosition=1-options[axLetter];basePx=gs.t+gs.h*alignPosition;}autoAlignFraction=options.showarrow?0.5:alignPosition;}// now translate this into pixel positions of head, tail, and text\n// as well as paddings for autorange\nif(options.showarrow){posPx.head=basePx;var arrowLength=options['a'+axLetter];// with an arrow, the text rotates around the anchor point\ntextShift=annSizeFromWidth*shiftFraction(0.5,options.xanchor)-annSizeFromHeight*shiftFraction(0.5,options.yanchor);if(tailRef===axRef){posPx.tail=ax._offset+ax.r2p(arrowLength);// tail is data-referenced: autorange pads the text in px from the tail\ntextPadShift=textShift;}else{posPx.tail=basePx+arrowLength;// tail is specified in px from head, so autorange also pads vs head\ntextPadShift=textShift+arrowLength;}posPx.text=posPx.tail+textShift;// constrain pixel/paper referenced so the draggers are at least\n// partially visible\nvar maxPx=fullLayout[axLetter==='x'?'width':'height'];if(axRef==='paper'){posPx.head=Lib.constrain(posPx.head,1,maxPx-1);}if(tailRef==='pixel'){var shiftPlus=-Math.max(posPx.tail-3,posPx.text);var shiftMinus=Math.min(posPx.tail+3,posPx.text)-maxPx;if(shiftPlus>0){posPx.tail+=shiftPlus;posPx.text+=shiftPlus;}else if(shiftMinus>0){posPx.tail-=shiftMinus;posPx.text-=shiftMinus;}}posPx.tail+=overallShift;posPx.head+=overallShift;}else{// with no arrow, the text rotates and *then* we put the anchor\n// relative to the new bounding box\ntextShift=annSize*shiftFraction(autoAlignFraction,anchor);textPadShift=textShift;posPx.text=basePx+textShift;}posPx.text+=overallShift;textShift+=overallShift;textPadShift+=overallShift;// padplus/minus are used by autorange\noptions['_'+axLetter+'padplus']=annSize/2+textPadShift;options['_'+axLetter+'padminus']=annSize/2-textPadShift;// size/shift are used during dragging\noptions['_'+axLetter+'size']=annSize;options['_'+axLetter+'shift']=textShift;}// We have everything we need for calcAutorange at this point,\n// we can safely exit - unless we're currently dragging the plot\nif(!gd._dragging&&annotationIsOffscreen){annTextGroupInner.remove();return;}var xShift=0;var yShift=0;if(options.align!=='left'){xShift=(annWidth-textWidth)*(options.align==='center'?0.5:1);}if(options.valign!=='top'){yShift=(annHeight-textHeight)*(options.valign==='middle'?0.5:1);}if(hasMathjax){mathjaxGroup.select('svg').attr({x:borderfull+xShift-1,y:borderfull+yShift}).call(Drawing.setClipUrl,isSizeConstrained?annClipID:null,gd);}else{var texty=borderfull+yShift-anntextBB.top;var textx=borderfull+xShift-anntextBB.left;annText.call(svgTextUtils.positionText,textx,texty).call(Drawing.setClipUrl,isSizeConstrained?annClipID:null,gd);}annTextClip.select('rect').call(Drawing.setRect,borderfull,borderfull,annWidth,annHeight);annTextBG.call(Drawing.setRect,borderwidth/2,borderwidth/2,outerWidth-borderwidth,outerHeight-borderwidth);annTextGroupInner.call(Drawing.setTranslate,Math.round(annPosPx.x.text-outerWidth/2),Math.round(annPosPx.y.text-outerHeight/2));/*\n         * rotate text and background\n         * we already calculated the text center position *as rotated*\n         * because we needed that for autoranging anyway, so now whether\n         * we have an arrow or not, we rotate about the text center.\n         */annTextGroup.attr({transform:'rotate('+textangle+','+annPosPx.x.text+','+annPosPx.y.text+')'});/*\n         * add the arrow\n         * uses options[arrowwidth,arrowcolor,arrowhead] for styling\n         * dx and dy are normally zero, but when you are dragging the textbox\n         * while the head stays put, dx and dy are the pixel offsets\n         */var drawArrow=function drawArrow(dx,dy){annGroup.selectAll('.annotation-arrow-g').remove();var headX=annPosPx.x.head;var headY=annPosPx.y.head;var tailX=annPosPx.x.tail+dx;var tailY=annPosPx.y.tail+dy;var textX=annPosPx.x.text+dx;var textY=annPosPx.y.text+dy;// find the edge of the text box, where we'll start the arrow:\n// create transform matrix to rotate the text box corners\nvar transform=Lib.rotationXYMatrix(textangle,textX,textY);var applyTransform=Lib.apply2DTransform(transform);var applyTransform2=Lib.apply2DTransform2(transform);// calculate and transform bounding box\nvar width=+annTextBG.attr('width');var height=+annTextBG.attr('height');var xLeft=textX-0.5*width;var xRight=xLeft+width;var yTop=textY-0.5*height;var yBottom=yTop+height;var edges=[[xLeft,yTop,xLeft,yBottom],[xLeft,yBottom,xRight,yBottom],[xRight,yBottom,xRight,yTop],[xRight,yTop,xLeft,yTop]].map(applyTransform2);// Remove the line if it ends inside the box.  Use ray\n// casting for rotated boxes: see which edges intersect a\n// line from the arrowhead to far away and reduce with xor\n// to get the parity of the number of intersections.\nif(edges.reduce(function(a,x){return a^!!Lib.segmentsIntersect(headX,headY,headX+1e6,headY+1e6,x[0],x[1],x[2],x[3]);},false)){// no line or arrow - so quit drawArrow now\nreturn;}edges.forEach(function(x){var p=Lib.segmentsIntersect(tailX,tailY,headX,headY,x[0],x[1],x[2],x[3]);if(p){tailX=p.x;tailY=p.y;}});var strokewidth=options.arrowwidth;var arrowColor=options.arrowcolor;var arrowSide=options.arrowside;var arrowGroup=annGroup.append('g').style({opacity:Color.opacity(arrowColor)}).classed('annotation-arrow-g',true);var arrow=arrowGroup.append('path').attr('d','M'+tailX+','+tailY+'L'+headX+','+headY).style('stroke-width',strokewidth+'px').call(Color.stroke,Color.rgb(arrowColor));drawArrowHead(arrow,arrowSide,options);// the arrow dragger is a small square right at the head, then a line to the tail,\n// all expanded by a stroke width of 6px plus the arrow line width\nif(edits.annotationPosition&&arrow.node().parentNode&&!subplotId){var arrowDragHeadX=headX;var arrowDragHeadY=headY;if(options.standoff){var arrowLength=Math.sqrt(Math.pow(headX-tailX,2)+Math.pow(headY-tailY,2));arrowDragHeadX+=options.standoff*(tailX-headX)/arrowLength;arrowDragHeadY+=options.standoff*(tailY-headY)/arrowLength;}var arrowDrag=arrowGroup.append('path').classed('annotation-arrow',true).classed('anndrag',true).classed('cursor-move',true).attr({d:'M3,3H-3V-3H3ZM0,0L'+(tailX-arrowDragHeadX)+','+(tailY-arrowDragHeadY),transform:'translate('+arrowDragHeadX+','+arrowDragHeadY+')'}).style('stroke-width',strokewidth+6+'px').call(Color.stroke,'rgba(0,0,0,0)').call(Color.fill,'rgba(0,0,0,0)');var annx0,anny0;// dragger for the arrow & head: translates the whole thing\n// (head/tail/text) all together\ndragElement.init({element:arrowDrag.node(),gd:gd,prepFn:function prepFn(){var pos=Drawing.getTranslate(annTextGroupInner);annx0=pos.x;anny0=pos.y;if(xa&&xa.autorange){modifyBase(xa._name+'.autorange',true);}if(ya&&ya.autorange){modifyBase(ya._name+'.autorange',true);}},moveFn:function moveFn(dx,dy){var annxy0=applyTransform(annx0,anny0);var xcenter=annxy0[0]+dx;var ycenter=annxy0[1]+dy;annTextGroupInner.call(Drawing.setTranslate,xcenter,ycenter);modifyItem('x',xa?xa.p2r(xa.r2p(options.x)+dx):options.x+dx/gs.w);modifyItem('y',ya?ya.p2r(ya.r2p(options.y)+dy):options.y-dy/gs.h);if(options.axref===options.xref){modifyItem('ax',xa.p2r(xa.r2p(options.ax)+dx));}if(options.ayref===options.yref){modifyItem('ay',ya.p2r(ya.r2p(options.ay)+dy));}arrowGroup.attr('transform','translate('+dx+','+dy+')');annTextGroup.attr({transform:'rotate('+textangle+','+xcenter+','+ycenter+')'});},doneFn:function doneFn(){Registry.call('_guiRelayout',gd,getUpdateObj());var notesBox=document.querySelector('.js-notes-box-panel');if(notesBox)notesBox.redraw(notesBox.selectedObj);}});}};if(options.showarrow)drawArrow(0,0);// user dragging the annotation (text, not arrow)\nif(editTextPosition){var baseTextTransform;// dragger for the textbox: if there's an arrow, just drag the\n// textbox and tail, leave the head untouched\ndragElement.init({element:annTextGroupInner.node(),gd:gd,prepFn:function prepFn(){baseTextTransform=annTextGroup.attr('transform');},moveFn:function moveFn(dx,dy){var csr='pointer';if(options.showarrow){if(options.axref===options.xref){modifyItem('ax',xa.p2r(xa.r2p(options.ax)+dx));}else{modifyItem('ax',options.ax+dx);}if(options.ayref===options.yref){modifyItem('ay',ya.p2r(ya.r2p(options.ay)+dy));}else{modifyItem('ay',options.ay+dy);}drawArrow(dx,dy);}else if(!subplotId){var xUpdate,yUpdate;if(xa){xUpdate=xa.p2r(xa.r2p(options.x)+dx);}else{var widthFraction=options._xsize/gs.w;var xLeft=options.x+(options._xshift-options.xshift)/gs.w-widthFraction/2;xUpdate=dragElement.align(xLeft+dx/gs.w,widthFraction,0,1,options.xanchor);}if(ya){yUpdate=ya.p2r(ya.r2p(options.y)+dy);}else{var heightFraction=options._ysize/gs.h;var yBottom=options.y-(options._yshift+options.yshift)/gs.h-heightFraction/2;yUpdate=dragElement.align(yBottom-dy/gs.h,heightFraction,0,1,options.yanchor);}modifyItem('x',xUpdate);modifyItem('y',yUpdate);if(!xa||!ya){csr=dragElement.getCursor(xa?0.5:xUpdate,ya?0.5:yUpdate,options.xanchor,options.yanchor);}}else return;annTextGroup.attr({transform:'translate('+dx+','+dy+')'+baseTextTransform});setCursor(annTextGroupInner,csr);},doneFn:function doneFn(){setCursor(annTextGroupInner);Registry.call('_guiRelayout',gd,getUpdateObj());var notesBox=document.querySelector('.js-notes-box-panel');if(notesBox)notesBox.redraw(notesBox.selectedObj);}});}}if(edits.annotationText){annText.call(svgTextUtils.makeEditable,{delegate:annTextGroupInner,gd:gd}).call(textLayout).on('edit',function(_text){options.text=_text;this.call(textLayout);modifyItem('text',_text);if(xa&&xa.autorange){modifyBase(xa._name+'.autorange',true);}if(ya&&ya.autorange){modifyBase(ya._name+'.autorange',true);}Registry.call('_guiRelayout',gd,getUpdateObj());});}else annText.call(textLayout);}},{\"../../lib\":423,\"../../lib/setcursor\":442,\"../../lib/svg_text_utils\":446,\"../../plot_api/plot_template\":459,\"../../plots/cartesian/axes\":469,\"../../plots/plots\":513,\"../../registry\":521,\"../color\":299,\"../dragelement\":317,\"../drawing\":320,\"../fx\":338,\"./draw_arrow_head\":291,\"d3\":71}],291:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Color=_dereq_('../color');var ARROWPATHS=_dereq_('./arrow_paths');/**\n * Add arrowhead(s) to a path or line element\n *\n * @param {d3.selection} el3: a d3-selected line or path element\n *\n * @param {string} ends: 'none', 'start', 'end', or 'start+end' for which ends get arrowheads\n *\n * @param {object} options: style information. Must have all the following:\n * @param {number} options.arrowhead: end head style - see ./arrow_paths\n * @param {number} options.startarrowhead: start head style - see ./arrow_paths\n * @param {number} options.arrowsize: relative size of the end head vs line width\n * @param {number} options.startarrowsize: relative size of the start head vs line width\n * @param {number} options.standoff: distance in px to move the end arrow point from its target\n * @param {number} options.startstandoff: distance in px to move the start arrow point from its target\n * @param {number} options.arrowwidth: width of the arrow line\n * @param {string} options.arrowcolor: color of the arrow line, for the head to match\n *     Note that the opacity of this color is ignored, as it's assumed the container\n *     of both the line and head has opacity applied to it so there isn't greater opacity\n *     where they overlap.\n */module.exports=function drawArrowHead(el3,ends,options){var el=el3.node();var headStyle=ARROWPATHS[options.arrowhead||0];var startHeadStyle=ARROWPATHS[options.startarrowhead||0];var scale=(options.arrowwidth||1)*(options.arrowsize||1);var startScale=(options.arrowwidth||1)*(options.startarrowsize||1);var doStart=ends.indexOf('start')>=0;var doEnd=ends.indexOf('end')>=0;var backOff=headStyle.backoff*scale+options.standoff;var startBackOff=startHeadStyle.backoff*startScale+options.startstandoff;var start,end,startRot,endRot;if(el.nodeName==='line'){start={x:+el3.attr('x1'),y:+el3.attr('y1')};end={x:+el3.attr('x2'),y:+el3.attr('y2')};var dx=start.x-end.x;var dy=start.y-end.y;startRot=Math.atan2(dy,dx);endRot=startRot+Math.PI;if(backOff&&startBackOff){if(backOff+startBackOff>Math.sqrt(dx*dx+dy*dy)){hideLine();return;}}if(backOff){if(backOff*backOff>dx*dx+dy*dy){hideLine();return;}var backOffX=backOff*Math.cos(startRot);var backOffY=backOff*Math.sin(startRot);end.x+=backOffX;end.y+=backOffY;el3.attr({x2:end.x,y2:end.y});}if(startBackOff){if(startBackOff*startBackOff>dx*dx+dy*dy){hideLine();return;}var startBackOffX=startBackOff*Math.cos(startRot);var startbackOffY=startBackOff*Math.sin(startRot);start.x-=startBackOffX;start.y-=startbackOffY;el3.attr({x1:start.x,y1:start.y});}}else if(el.nodeName==='path'){var pathlen=el.getTotalLength();// using dash to hide the backOff region of the path.\n// if we ever allow dash for the arrow we'll have to\n// do better than this hack... maybe just manually\n// combine the two\nvar dashArray='';if(pathlen<backOff+startBackOff){hideLine();return;}var start0=el.getPointAtLength(0);var dstart=el.getPointAtLength(0.1);startRot=Math.atan2(start0.y-dstart.y,start0.x-dstart.x);start=el.getPointAtLength(Math.min(startBackOff,pathlen));dashArray='0px,'+startBackOff+'px,';var end0=el.getPointAtLength(pathlen);var dend=el.getPointAtLength(pathlen-0.1);endRot=Math.atan2(end0.y-dend.y,end0.x-dend.x);end=el.getPointAtLength(Math.max(0,pathlen-backOff));var shortening=dashArray?startBackOff+backOff:backOff;dashArray+=pathlen-shortening+'px,'+pathlen+'px';el3.style('stroke-dasharray',dashArray);}function hideLine(){el3.style('stroke-dasharray','0px,100px');}function drawhead(arrowHeadStyle,p,rot,arrowScale){if(!arrowHeadStyle.path)return;if(arrowHeadStyle.noRotate)rot=0;d3.select(el.parentNode).append('path').attr({'class':el3.attr('class'),d:arrowHeadStyle.path,transform:'translate('+p.x+','+p.y+')'+(rot?'rotate('+rot*180/Math.PI+')':'')+'scale('+arrowScale+')'}).style({fill:Color.rgb(options.arrowcolor),'stroke-width':0});}if(doStart)drawhead(startHeadStyle,start,startRot,startScale);if(doEnd)drawhead(headStyle,end,endRot,scale);};},{\"../color\":299,\"./arrow_paths\":283,\"d3\":71}],292:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var drawModule=_dereq_('./draw');var clickModule=_dereq_('./click');module.exports={moduleType:'component',name:'annotations',layoutAttributes:_dereq_('./attributes'),supplyLayoutDefaults:_dereq_('./defaults'),includeBasePlot:_dereq_('../../plots/cartesian/include_components')('annotations'),calcAutorange:_dereq_('./calc_autorange'),draw:drawModule.draw,drawOne:drawModule.drawOne,drawRaw:drawModule.drawRaw,hasClickToShow:clickModule.hasClickToShow,onClick:clickModule.onClick,convertCoords:_dereq_('./convert_coords')};},{\"../../plots/cartesian/include_components\":480,\"./attributes\":284,\"./calc_autorange\":285,\"./click\":286,\"./convert_coords\":288,\"./defaults\":289,\"./draw\":290}],293:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var annAtts=_dereq_('../annotations/attributes');var overrideAll=_dereq_('../../plot_api/edit_types').overrideAll;var templatedArray=_dereq_('../../plot_api/plot_template').templatedArray;module.exports=overrideAll(templatedArray('annotation',{visible:annAtts.visible,x:{valType:'any'},y:{valType:'any'},z:{valType:'any'},ax:{valType:'number'},ay:{valType:'number'},xanchor:annAtts.xanchor,xshift:annAtts.xshift,yanchor:annAtts.yanchor,yshift:annAtts.yshift,text:annAtts.text,textangle:annAtts.textangle,font:annAtts.font,width:annAtts.width,height:annAtts.height,opacity:annAtts.opacity,align:annAtts.align,valign:annAtts.valign,bgcolor:annAtts.bgcolor,bordercolor:annAtts.bordercolor,borderpad:annAtts.borderpad,borderwidth:annAtts.borderwidth,showarrow:annAtts.showarrow,arrowcolor:annAtts.arrowcolor,arrowhead:annAtts.arrowhead,startarrowhead:annAtts.startarrowhead,arrowside:annAtts.arrowside,arrowsize:annAtts.arrowsize,startarrowsize:annAtts.startarrowsize,arrowwidth:annAtts.arrowwidth,standoff:annAtts.standoff,startstandoff:annAtts.startstandoff,hovertext:annAtts.hovertext,hoverlabel:annAtts.hoverlabel,captureevents:annAtts.captureevents// maybes later?\n// clicktoshow: annAtts.clicktoshow,\n// xclick: annAtts.xclick,\n// yclick: annAtts.yclick,\n// not needed!\n// axref: 'pixel'\n// ayref: 'pixel'\n// xref: 'x'\n// yref: 'y\n// zref: 'z'\n}),'calc','from-root');},{\"../../plot_api/edit_types\":452,\"../../plot_api/plot_template\":459,\"../annotations/attributes\":284}],294:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Axes=_dereq_('../../plots/cartesian/axes');module.exports=function convert(scene){var fullSceneLayout=scene.fullSceneLayout;var anns=fullSceneLayout.annotations;for(var i=0;i<anns.length;i++){mockAnnAxes(anns[i],scene);}scene.fullLayout._infolayer.selectAll('.annotation-'+scene.id).remove();};function mockAnnAxes(ann,scene){var fullSceneLayout=scene.fullSceneLayout;var domain=fullSceneLayout.domain;var size=scene.fullLayout._size;var base={// this gets fill in on render\npdata:null,// to get setConvert to not execute cleanly\ntype:'linear',// don't try to update them on `editable: true`\nautorange:false,// set infinite range so that annotation draw routine\n// does not try to remove 'outside-range' annotations,\n// this case is handled in the render loop\nrange:[-Infinity,Infinity]};ann._xa={};Lib.extendFlat(ann._xa,base);Axes.setConvert(ann._xa);ann._xa._offset=size.l+domain.x[0]*size.w;ann._xa.l2p=function(){return 0.5*(1+ann._pdata[0]/ann._pdata[3])*size.w*(domain.x[1]-domain.x[0]);};ann._ya={};Lib.extendFlat(ann._ya,base);Axes.setConvert(ann._ya);ann._ya._offset=size.t+(1-domain.y[1])*size.h;ann._ya.l2p=function(){return 0.5*(1-ann._pdata[1]/ann._pdata[3])*size.h*(domain.y[1]-domain.y[0]);};}},{\"../../lib\":423,\"../../plots/cartesian/axes\":469}],295:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Axes=_dereq_('../../plots/cartesian/axes');var handleArrayContainerDefaults=_dereq_('../../plots/array_container_defaults');var handleAnnotationCommonDefaults=_dereq_('../annotations/common_defaults');var attributes=_dereq_('./attributes');module.exports=function handleDefaults(sceneLayoutIn,sceneLayoutOut,opts){handleArrayContainerDefaults(sceneLayoutIn,sceneLayoutOut,{name:'annotations',handleItemDefaults:handleAnnotationDefaults,fullLayout:opts.fullLayout});};function handleAnnotationDefaults(annIn,annOut,sceneLayout,opts){function coerce(attr,dflt){return Lib.coerce(annIn,annOut,attributes,attr,dflt);}function coercePosition(axLetter){var axName=axLetter+'axis';// mock in such way that getFromId grabs correct 3D axis\nvar gdMock={_fullLayout:{}};gdMock._fullLayout[axName]=sceneLayout[axName];return Axes.coercePosition(annOut,gdMock,coerce,axLetter,axLetter,0.5);}var visible=coerce('visible');if(!visible)return;handleAnnotationCommonDefaults(annIn,annOut,opts.fullLayout,coerce);coercePosition('x');coercePosition('y');coercePosition('z');// if you have one coordinate you should all three\nLib.noneOrAll(annIn,annOut,['x','y','z']);// hard-set here for completeness\nannOut.xref='x';annOut.yref='y';annOut.zref='z';coerce('xanchor');coerce('yanchor');coerce('xshift');coerce('yshift');if(annOut.showarrow){annOut.axref='pixel';annOut.ayref='pixel';// TODO maybe default values should be bigger than the 2D case?\ncoerce('ax',-10);coerce('ay',-30);// if you have one part of arrow length you should have both\nLib.noneOrAll(annIn,annOut,['ax','ay']);}}},{\"../../lib\":423,\"../../plots/array_container_defaults\":465,\"../../plots/cartesian/axes\":469,\"../annotations/common_defaults\":287,\"./attributes\":293}],296:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var drawRaw=_dereq_('../annotations/draw').drawRaw;var project=_dereq_('../../plots/gl3d/project');var axLetters=['x','y','z'];module.exports=function draw(scene){var fullSceneLayout=scene.fullSceneLayout;var dataScale=scene.dataScale;var anns=fullSceneLayout.annotations;for(var i=0;i<anns.length;i++){var ann=anns[i];var annotationIsOffscreen=false;for(var j=0;j<3;j++){var axLetter=axLetters[j];var pos=ann[axLetter];var ax=fullSceneLayout[axLetter+'axis'];var posFraction=ax.r2fraction(pos);if(posFraction<0||posFraction>1){annotationIsOffscreen=true;break;}}if(annotationIsOffscreen){scene.fullLayout._infolayer.select('.annotation-'+scene.id+'[data-index=\"'+i+'\"]').remove();}else{ann._pdata=project(scene.glplot.cameraParams,[fullSceneLayout.xaxis.r2l(ann.x)*dataScale[0],fullSceneLayout.yaxis.r2l(ann.y)*dataScale[1],fullSceneLayout.zaxis.r2l(ann.z)*dataScale[2]]);drawRaw(scene.graphDiv,ann,i,scene.id,ann._xa,ann._ya);}}};},{\"../../plots/gl3d/project\":509,\"../annotations/draw\":290}],297:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');module.exports={moduleType:'component',name:'annotations3d',schema:{subplots:{scene:{annotations:_dereq_('./attributes')}}},layoutAttributes:_dereq_('./attributes'),handleDefaults:_dereq_('./defaults'),includeBasePlot:includeGL3D,convert:_dereq_('./convert'),draw:_dereq_('./draw')};function includeGL3D(layoutIn,layoutOut){var GL3D=Registry.subplotsRegistry.gl3d;if(!GL3D)return;var attrRegex=GL3D.attrRegex;var keys=Object.keys(layoutIn);for(var i=0;i<keys.length;i++){var k=keys[i];if(attrRegex.test(k)&&(layoutIn[k].annotations||[]).length){Lib.pushUnique(layoutOut._basePlotModules,GL3D);Lib.pushUnique(layoutOut._subplots.gl3d,k);}}}},{\"../../lib\":423,\"../../registry\":521,\"./attributes\":293,\"./convert\":294,\"./defaults\":295,\"./draw\":296}],298:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';// IMPORTANT - default colors should be in hex for compatibility\nexports.defaults=['#1f77b4',// muted blue\n'#ff7f0e',// safety orange\n'#2ca02c',// cooked asparagus green\n'#d62728',// brick red\n'#9467bd',// muted purple\n'#8c564b',// chestnut brown\n'#e377c2',// raspberry yogurt pink\n'#7f7f7f',// middle gray\n'#bcbd22',// curry yellow-green\n'#17becf'// blue-teal\n];exports.defaultLine='#444';exports.lightLine='#eee';exports.background='#fff';exports.borderLine='#BEC8D9';// with axis.color and Color.interp we aren't using lightLine\n// itself anymore, instead interpolating between axis.color\n// and the background color using tinycolor.mix. lightFraction\n// gives back exactly lightLine if the other colors are defaults.\nexports.lightFraction=100*(0xe-0x4)/(0xf-0x4);},{}],299:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var tinycolor=_dereq_('tinycolor2');var isNumeric=_dereq_('fast-isnumeric');var color=module.exports={};var colorAttrs=_dereq_('./attributes');color.defaults=colorAttrs.defaults;var defaultLine=color.defaultLine=colorAttrs.defaultLine;color.lightLine=colorAttrs.lightLine;var background=color.background=colorAttrs.background;/*\n * tinyRGB: turn a tinycolor into an rgb string, but\n * unlike the built-in tinycolor.toRgbString this never includes alpha\n */color.tinyRGB=function(tc){var c=tc.toRgb();return'rgb('+Math.round(c.r)+', '+Math.round(c.g)+', '+Math.round(c.b)+')';};color.rgb=function(cstr){return color.tinyRGB(tinycolor(cstr));};color.opacity=function(cstr){return cstr?tinycolor(cstr).getAlpha():0;};color.addOpacity=function(cstr,op){var c=tinycolor(cstr).toRgb();return'rgba('+Math.round(c.r)+', '+Math.round(c.g)+', '+Math.round(c.b)+', '+op+')';};// combine two colors into one apparent color\n// if back has transparency or is missing,\n// color.background is assumed behind it\ncolor.combine=function(front,back){var fc=tinycolor(front).toRgb();if(fc.a===1)return tinycolor(front).toRgbString();var bc=tinycolor(back||background).toRgb();var bcflat=bc.a===1?bc:{r:255*(1-bc.a)+bc.r*bc.a,g:255*(1-bc.a)+bc.g*bc.a,b:255*(1-bc.a)+bc.b*bc.a};var fcflat={r:bcflat.r*(1-fc.a)+fc.r*fc.a,g:bcflat.g*(1-fc.a)+fc.g*fc.a,b:bcflat.b*(1-fc.a)+fc.b*fc.a};return tinycolor(fcflat).toRgbString();};/*\n * Create a color that contrasts with cstr.\n *\n * If cstr is a dark color, we lighten it; if it's light, we darken.\n *\n * If lightAmount / darkAmount are used, we adjust by these percentages,\n * otherwise we go all the way to white or black.\n */color.contrast=function(cstr,lightAmount,darkAmount){var tc=tinycolor(cstr);if(tc.getAlpha()!==1)tc=tinycolor(color.combine(cstr,background));var newColor=tc.isDark()?lightAmount?tc.lighten(lightAmount):background:darkAmount?tc.darken(darkAmount):defaultLine;return newColor.toString();};color.stroke=function(s,c){var tc=tinycolor(c);s.style({'stroke':color.tinyRGB(tc),'stroke-opacity':tc.getAlpha()});};color.fill=function(s,c){var tc=tinycolor(c);s.style({'fill':color.tinyRGB(tc),'fill-opacity':tc.getAlpha()});};// search container for colors with the deprecated rgb(fractions) format\n// and convert them to rgb(0-255 values)\ncolor.clean=function(container){if(!container||_typeof(container)!=='object')return;var keys=Object.keys(container);var i,j,key,val;for(i=0;i<keys.length;i++){key=keys[i];val=container[key];// only sanitize keys that end in \"color\" or \"colorscale\"\nif(key.substr(key.length-5)==='color'){if(Array.isArray(val)){for(j=0;j<val.length;j++){val[j]=cleanOne(val[j]);}}else container[key]=cleanOne(val);}else if(key.substr(key.length-10)==='colorscale'&&Array.isArray(val)){// colorscales have the format [[0, color1], [frac, color2], ... [1, colorN]]\nfor(j=0;j<val.length;j++){if(Array.isArray(val[j]))val[j][1]=cleanOne(val[j][1]);}}// recurse into arrays of objects, and plain objects\nelse if(Array.isArray(val)){var el0=val[0];if(!Array.isArray(el0)&&el0&&_typeof(el0)==='object'){for(j=0;j<val.length;j++){color.clean(val[j]);}}}else if(val&&_typeof(val)==='object')color.clean(val);}};function cleanOne(val){if(isNumeric(val)||typeof val!=='string')return val;var valTrim=val.trim();if(valTrim.substr(0,3)!=='rgb')return val;var match=valTrim.match(/^rgba?\\s*\\(([^()]*)\\)$/);if(!match)return val;var parts=match[1].trim().split(/\\s*[\\s,]\\s*/);var rgba=valTrim.charAt(3)==='a'&&parts.length===4;if(!rgba&&parts.length!==3)return val;for(var i=0;i<parts.length;i++){if(!parts[i].length)return val;parts[i]=Number(parts[i]);// all parts must be non-negative numbers\nif(!(parts[i]>=0))return val;// alpha>1 gets clipped to 1\nif(i===3){if(parts[i]>1)parts[i]=1;}// r, g, b must be < 1 (ie 1 itself is not allowed)\nelse if(parts[i]>=1)return val;}var rgbStr=Math.round(parts[0]*255)+', '+Math.round(parts[1]*255)+', '+Math.round(parts[2]*255);if(rgba)return'rgba('+rgbStr+', '+parts[3]+')';return'rgb('+rgbStr+')';}},{\"./attributes\":298,\"fast-isnumeric\":80,\"tinycolor2\":264}],300:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var axesAttrs=_dereq_('../../plots/cartesian/layout_attributes');var fontAttrs=_dereq_('../../plots/font_attributes');var extendFlat=_dereq_('../../lib/extend').extendFlat;var overrideAll=_dereq_('../../plot_api/edit_types').overrideAll;module.exports=overrideAll({// TODO: only right is supported currently\n//     orient: {\n//         valType: 'enumerated',\n//         \n//         values: ['left', 'right', 'top', 'bottom'],\n//         dflt: 'right',\n//         \n//     },\nthicknessmode:{valType:'enumerated',values:['fraction','pixels'],dflt:'pixels'},thickness:{valType:'number',min:0,dflt:30},lenmode:{valType:'enumerated',values:['fraction','pixels'],dflt:'fraction'},len:{valType:'number',min:0,dflt:1},x:{valType:'number',dflt:1.02,min:-2,max:3},xanchor:{valType:'enumerated',values:['left','center','right'],dflt:'left'},xpad:{valType:'number',min:0,dflt:10},y:{valType:'number',dflt:0.5,min:-2,max:3},yanchor:{valType:'enumerated',values:['top','middle','bottom'],dflt:'middle'},ypad:{valType:'number',min:0,dflt:10},// a possible line around the bar itself\noutlinecolor:axesAttrs.linecolor,outlinewidth:axesAttrs.linewidth,// Should outlinewidth have {dflt: 0} ?\n// another possible line outside the padding and tick labels\nbordercolor:axesAttrs.linecolor,borderwidth:{valType:'number',min:0,dflt:0},bgcolor:{valType:'color',dflt:'rgba(0,0,0,0)'},// tick and title properties named and function exactly as in axes\ntickmode:axesAttrs.tickmode,nticks:axesAttrs.nticks,tick0:axesAttrs.tick0,dtick:axesAttrs.dtick,tickvals:axesAttrs.tickvals,ticktext:axesAttrs.ticktext,ticks:extendFlat({},axesAttrs.ticks,{dflt:''}),ticklen:axesAttrs.ticklen,tickwidth:axesAttrs.tickwidth,tickcolor:axesAttrs.tickcolor,showticklabels:axesAttrs.showticklabels,tickfont:fontAttrs({}),tickangle:axesAttrs.tickangle,tickformat:axesAttrs.tickformat,tickformatstops:axesAttrs.tickformatstops,tickprefix:axesAttrs.tickprefix,showtickprefix:axesAttrs.showtickprefix,ticksuffix:axesAttrs.ticksuffix,showticksuffix:axesAttrs.showticksuffix,separatethousands:axesAttrs.separatethousands,exponentformat:axesAttrs.exponentformat,showexponent:axesAttrs.showexponent,title:{text:{valType:'string'},font:fontAttrs({}),side:{valType:'enumerated',values:['right','top','bottom'],dflt:'top'}},_deprecated:{title:{valType:'string'},titlefont:fontAttrs({}),titleside:{valType:'enumerated',values:['right','top','bottom'],dflt:'top'}}},'colorbars','from-root');},{\"../../lib/extend\":416,\"../../plot_api/edit_types\":452,\"../../plots/cartesian/layout_attributes\":482,\"../../plots/font_attributes\":496}],301:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var drawColorbar=_dereq_('./draw');var flipScale=_dereq_('../colorscale/helpers').flipScale;/**\n * connectColorbar: create a colorbar from a trace, using its module to\n *   describe the connection.\n *\n * @param {DOM element} gd\n *\n * @param {Array} cd\n *   calcdata entry for this trace. cd[0].trace is the trace itself, and the\n *   colorbar object will be stashed in cd[0].t.cb\n *\n * @param {object|function} moduleOpts\n *   may be a function(gd, cd) to override the standard handling below. If\n *   an object, should have these keys:\n * @param {Optional(string)} moduleOpts.container\n *   name of the container inside the trace where the colorbar and colorscale\n *   attributes live (ie 'marker', 'line') - omit if they're at the trace root.\n * @param {string} moduleOpts.min\n *   name of the attribute holding the value of the minimum color\n * @param {string} moduleOpts.max\n *   name of the attribute holding the value of the maximum color\n * @param {Optional(string)} moduleOpts.vals\n *   name of the attribute holding the (numeric) color data\n *   used only if min/max fail. May be omitted if these are always\n *   pre-calculated.\n */module.exports=function connectColorbar(gd,cd,moduleOpts){if(typeof moduleOpts==='function')return moduleOpts(gd,cd);var trace=cd[0].trace;var cbId='cb'+trace.uid;var containerName=moduleOpts.container;var container=containerName?trace[containerName]:trace;gd._fullLayout._infolayer.selectAll('.'+cbId).remove();if(!container||!container.showscale)return;var cb=cd[0].t.cb=drawColorbar(gd,cbId);var scl=container.reversescale?flipScale(container.colorscale):container.colorscale;cb.fillgradient(scl).zrange([container[moduleOpts.min],container[moduleOpts.max]]).options(container.colorbar)();};},{\"../colorscale/helpers\":310,\"./draw\":304}],302:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={cn:{colorbar:'colorbar',cbbg:'cbbg',cbfill:'cbfill',cbfills:'cbfills',cbline:'cbline',cblines:'cblines',cbaxis:'cbaxis',cbtitleunshift:'cbtitleunshift',cbtitle:'cbtitle',cboutline:'cboutline',crisp:'crisp',jsPlaceholder:'js-placeholder'}};},{}],303:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Template=_dereq_('../../plot_api/plot_template');var handleTickValueDefaults=_dereq_('../../plots/cartesian/tick_value_defaults');var handleTickMarkDefaults=_dereq_('../../plots/cartesian/tick_mark_defaults');var handleTickLabelDefaults=_dereq_('../../plots/cartesian/tick_label_defaults');var attributes=_dereq_('./attributes');module.exports=function colorbarDefaults(containerIn,containerOut,layout){var colorbarOut=Template.newContainer(containerOut,'colorbar');var colorbarIn=containerIn.colorbar||{};function coerce(attr,dflt){return Lib.coerce(colorbarIn,colorbarOut,attributes,attr,dflt);}var thicknessmode=coerce('thicknessmode');coerce('thickness',thicknessmode==='fraction'?30/(layout.width-layout.margin.l-layout.margin.r):30);var lenmode=coerce('lenmode');coerce('len',lenmode==='fraction'?1:layout.height-layout.margin.t-layout.margin.b);coerce('x');coerce('xanchor');coerce('xpad');coerce('y');coerce('yanchor');coerce('ypad');Lib.noneOrAll(colorbarIn,colorbarOut,['x','y']);coerce('outlinecolor');coerce('outlinewidth');coerce('bordercolor');coerce('borderwidth');coerce('bgcolor');handleTickValueDefaults(colorbarIn,colorbarOut,coerce,'linear');var opts={outerTicks:false,font:layout.font};handleTickLabelDefaults(colorbarIn,colorbarOut,coerce,'linear',opts);handleTickMarkDefaults(colorbarIn,colorbarOut,coerce,'linear',opts);coerce('title.text',layout._dfltTitle.colorbar);Lib.coerceFont(coerce,'title.font',layout.font);coerce('title.side');};},{\"../../lib\":423,\"../../plot_api/plot_template\":459,\"../../plots/cartesian/tick_label_defaults\":489,\"../../plots/cartesian/tick_mark_defaults\":490,\"../../plots/cartesian/tick_value_defaults\":491,\"./attributes\":300}],304:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var tinycolor=_dereq_('tinycolor2');var Plots=_dereq_('../../plots/plots');var Registry=_dereq_('../../registry');var Axes=_dereq_('../../plots/cartesian/axes');var dragElement=_dereq_('../dragelement');var Lib=_dereq_('../../lib');var extendFlat=_dereq_('../../lib/extend').extendFlat;var setCursor=_dereq_('../../lib/setcursor');var Drawing=_dereq_('../drawing');var Color=_dereq_('../color');var Titles=_dereq_('../titles');var svgTextUtils=_dereq_('../../lib/svg_text_utils');var alignmentConstants=_dereq_('../../constants/alignment');var LINE_SPACING=alignmentConstants.LINE_SPACING;var FROM_TL=alignmentConstants.FROM_TL;var FROM_BR=alignmentConstants.FROM_BR;var handleAxisDefaults=_dereq_('../../plots/cartesian/axis_defaults');var handleAxisPositionDefaults=_dereq_('../../plots/cartesian/position_defaults');var axisLayoutAttrs=_dereq_('../../plots/cartesian/layout_attributes');var attributes=_dereq_('./attributes');var cn=_dereq_('./constants').cn;module.exports=function draw(gd,id){// opts: options object, containing everything from attributes\n// plus a few others that are the equivalent of the colorbar \"data\"\nvar opts={};for(var k in attributes){opts[k]=null;}// fillcolor can be a d3 scale, domain is z values, range is colors\n// or leave it out for no fill,\n// or set to a string constant for single-color fill\nopts.fillcolor=null;// line.color has the same options as fillcolor\nopts.line={color:null,width:null,dash:null};// levels of lines to draw.\n// note that this DOES NOT determine the extent of the bar\n// that's given by the domain of fillcolor\n// (or line.color if no fillcolor domain)\nopts.levels={start:null,end:null,size:null};// separate fill levels (for example, heatmap coloring of a\n// contour map) if this is omitted, fillcolors will be\n// evaluated halfway between levels\nopts.filllevels=null;// for continuous colorscales: fill with a gradient instead of explicit levels\n// value should be the colorscale [[0, c0], [v1, c1], ..., [1, cEnd]]\nopts.fillgradient=null;// when using a gradient, we need the data range specified separately\nopts.zrange=null;function component(){var fullLayout=gd._fullLayout;var gs=fullLayout._size;if(typeof opts.fillcolor!=='function'&&typeof opts.line.color!=='function'&&!opts.fillgradient){fullLayout._infolayer.selectAll('g.'+id).remove();return;}var zrange=opts.zrange||d3.extent((typeof opts.fillcolor==='function'?opts.fillcolor:opts.line.color).domain());var linelevels=[];var filllevels=[];var linecolormap=typeof opts.line.color==='function'?opts.line.color:function(){return opts.line.color;};var fillcolormap=typeof opts.fillcolor==='function'?opts.fillcolor:function(){return opts.fillcolor;};var l;var i;var l0=opts.levels.end+opts.levels.size/100;var ls=opts.levels.size;var zr0=1.001*zrange[0]-0.001*zrange[1];var zr1=1.001*zrange[1]-0.001*zrange[0];for(i=0;i<1e5;i++){l=opts.levels.start+i*ls;if(ls>0?l>=l0:l<=l0)break;if(l>zr0&&l<zr1)linelevels.push(l);}if(opts.fillgradient){filllevels=[0];}else if(typeof opts.fillcolor==='function'){if(opts.filllevels){l0=opts.filllevels.end+opts.filllevels.size/100;ls=opts.filllevels.size;for(i=0;i<1e5;i++){l=opts.filllevels.start+i*ls;if(ls>0?l>=l0:l<=l0)break;if(l>zrange[0]&&l<zrange[1])filllevels.push(l);}}else{filllevels=linelevels.map(function(v){return v-opts.levels.size/2;});filllevels.push(filllevels[filllevels.length-1]+opts.levels.size);}}else if(opts.fillcolor&&typeof opts.fillcolor==='string'){// doesn't matter what this value is, with a single value\n// we'll make a single fill rect covering the whole bar\nfilllevels=[0];}if(opts.levels.size<0){linelevels.reverse();filllevels.reverse();}// now make a Plotly Axes object to scale with and draw ticks\n// TODO: does not support orientation other than right\n// we calculate pixel sizes based on the specified graph size,\n// not the actual (in case something pushed the margins around)\n// which is a little odd but avoids an odd iterative effect\n// when the colorbar itself is pushing the margins.\n// but then the fractional size is calculated based on the\n// actual graph size, so that the axes will size correctly.\nvar plotHeight=gs.h;var plotWidth=gs.w;var thickPx=Math.round(opts.thickness*(opts.thicknessmode==='fraction'?plotWidth:1));var thickFrac=thickPx/gs.w;var lenPx=Math.round(opts.len*(opts.lenmode==='fraction'?plotHeight:1));var lenFrac=lenPx/gs.h;var xpadFrac=opts.xpad/gs.w;var yExtraPx=(opts.borderwidth+opts.outlinewidth)/2;var ypadFrac=opts.ypad/gs.h;// x positioning: do it initially just for left anchor,\n// then fix at the end (since we don't know the width yet)\nvar xLeft=Math.round(opts.x*gs.w+opts.xpad);// for dragging... this is getting a little muddled...\nvar xLeftFrac=opts.x-thickFrac*({middle:0.5,right:1}[opts.xanchor]||0);// y positioning we can do correctly from the start\nvar yBottomFrac=opts.y+lenFrac*(({top:-0.5,bottom:0.5}[opts.yanchor]||0)-0.5);var yBottomPx=Math.round(gs.h*(1-yBottomFrac));var yTopPx=yBottomPx-lenPx;var titleEl;var cbAxisIn={type:'linear',range:zrange,tickmode:opts.tickmode,nticks:opts.nticks,tick0:opts.tick0,dtick:opts.dtick,tickvals:opts.tickvals,ticktext:opts.ticktext,ticks:opts.ticks,ticklen:opts.ticklen,tickwidth:opts.tickwidth,tickcolor:opts.tickcolor,showticklabels:opts.showticklabels,tickfont:opts.tickfont,tickangle:opts.tickangle,tickformat:opts.tickformat,exponentformat:opts.exponentformat,separatethousands:opts.separatethousands,showexponent:opts.showexponent,showtickprefix:opts.showtickprefix,tickprefix:opts.tickprefix,showticksuffix:opts.showticksuffix,ticksuffix:opts.ticksuffix,title:opts.title,showline:true,anchor:'free',side:'right',position:1};var cbAxisOut={type:'linear',_id:'y'+id};var axisOptions={letter:'y',font:fullLayout.font,noHover:true,noTickson:true,calendar:fullLayout.calendar// not really necessary (yet?)\n};// Coerce w.r.t. Axes layoutAttributes:\n// re-use axes.js logic without updating _fullData\nfunction coerce(attr,dflt){return Lib.coerce(cbAxisIn,cbAxisOut,axisLayoutAttrs,attr,dflt);}// Prepare the Plotly axis object\nhandleAxisDefaults(cbAxisIn,cbAxisOut,coerce,axisOptions,fullLayout);handleAxisPositionDefaults(cbAxisIn,cbAxisOut,coerce,axisOptions);// position can't go in through supplyDefaults\n// because that restricts it to [0,1]\ncbAxisOut.position=opts.x+xpadFrac+thickFrac;// save for other callers to access this axis\ncomponent.axis=cbAxisOut;if(['top','bottom'].indexOf(opts.title.side)!==-1){cbAxisOut.title.side=opts.title.side;cbAxisOut.titlex=opts.x+xpadFrac;cbAxisOut.titley=yBottomFrac+(opts.title.side==='top'?lenFrac-ypadFrac:ypadFrac);}if(opts.line.color&&opts.tickmode==='auto'){cbAxisOut.tickmode='linear';cbAxisOut.tick0=opts.levels.start;var dtick=opts.levels.size;// expand if too many contours, so we don't get too many ticks\nvar autoNtick=Lib.constrain((yBottomPx-yTopPx)/50,4,15)+1;var dtFactor=(zrange[1]-zrange[0])/((opts.nticks||autoNtick)*dtick);if(dtFactor>1){var dtexp=Math.pow(10,Math.floor(Math.log(dtFactor)/Math.LN10));dtick*=dtexp*Lib.roundUp(dtFactor/dtexp,[2,5,10]);// if the contours are at round multiples, reset tick0\n// so they're still at round multiples. Otherwise,\n// keep the first label on the first contour level\nif((Math.abs(opts.levels.start)/opts.levels.size+1e-6)%1<2e-6){cbAxisOut.tick0=0;}}cbAxisOut.dtick=dtick;}// set domain after init, because we may want to\n// allow it outside [0,1]\ncbAxisOut.domain=[yBottomFrac+ypadFrac,yBottomFrac+lenFrac-ypadFrac];cbAxisOut.setScale();// now draw the elements\nvar container=Lib.ensureSingle(fullLayout._infolayer,'g',id,function(s){s.classed(cn.colorbar,true).each(function(){var s=d3.select(this);s.append('rect').classed(cn.cbbg,true);s.append('g').classed(cn.cbfills,true);s.append('g').classed(cn.cblines,true);s.append('g').classed(cn.cbaxis,true).classed(cn.crisp,true);s.append('g').classed(cn.cbtitleunshift,true).append('g').classed(cn.cbtitle,true);s.append('rect').classed(cn.cboutline,true);s.select('.cbtitle').datum(0);});});container.attr('transform','translate('+Math.round(gs.l)+','+Math.round(gs.t)+')');// TODO: this opposite transform is a hack until we make it\n// more rational which items get this offset\nvar titleCont=container.select('.cbtitleunshift').attr('transform','translate(-'+Math.round(gs.l)+',-'+Math.round(gs.t)+')');var axisLayer=container.select('.cbaxis');var titleHeight=0;if(['top','bottom'].indexOf(opts.title.side)!==-1){// draw the title so we know how much room it needs\n// when we squish the axis. This one only applies to\n// top or bottom titles, not right side.\nvar x=gs.l+(opts.x+xpadFrac)*gs.w;var fontSize=cbAxisOut.title.font.size;var y;if(opts.title.side==='top'){y=(1-(yBottomFrac+lenFrac-ypadFrac))*gs.h+gs.t+3+fontSize*0.75;}else{y=(1-(yBottomFrac+ypadFrac))*gs.h+gs.t-3-fontSize*0.25;}drawTitle(cbAxisOut._id+'title',{attributes:{x:x,y:y,'text-anchor':'start'}});}function drawAxis(){if(['top','bottom'].indexOf(opts.title.side)!==-1){// squish the axis top to make room for the title\nvar titleGroup=container.select('.cbtitle');var titleText=titleGroup.select('text');var titleTrans=[-opts.outlinewidth/2,opts.outlinewidth/2];var mathJaxNode=titleGroup.select('.h'+cbAxisOut._id+'title-math-group').node();var lineSize=15.6;if(titleText.node()){lineSize=parseInt(titleText.node().style.fontSize,10)*LINE_SPACING;}if(mathJaxNode){titleHeight=Drawing.bBox(mathJaxNode).height;if(titleHeight>lineSize){// not entirely sure how mathjax is doing\n// vertical alignment, but this seems to work.\ntitleTrans[1]-=(titleHeight-lineSize)/2;}}else if(titleText.node()&&!titleText.classed(cn.jsPlaceholder)){titleHeight=Drawing.bBox(titleText.node()).height;}if(titleHeight){// buffer btwn colorbar and title\n// TODO: configurable\ntitleHeight+=5;if(opts.title.side==='top'){cbAxisOut.domain[1]-=titleHeight/gs.h;titleTrans[1]*=-1;}else{cbAxisOut.domain[0]+=titleHeight/gs.h;var nlines=svgTextUtils.lineCount(titleText);titleTrans[1]+=(1-nlines)*lineSize;}titleGroup.attr('transform','translate('+titleTrans+')');cbAxisOut.setScale();}}container.selectAll('.cbfills,.cblines').attr('transform','translate(0,'+Math.round(gs.h*(1-cbAxisOut.domain[1]))+')');axisLayer.attr('transform','translate(0,'+Math.round(-gs.t)+')');var fills=container.select('.cbfills').selectAll('rect.cbfill').data(filllevels);fills.enter().append('rect').classed(cn.cbfill,true).style('stroke','none');fills.exit().remove();var zBounds=zrange.map(cbAxisOut.c2p).map(Math.round).sort(function(a,b){return a-b;});fills.each(function(d,i){var z=[i===0?zrange[0]:(filllevels[i]+filllevels[i-1])/2,i===filllevels.length-1?zrange[1]:(filllevels[i]+filllevels[i+1])/2].map(cbAxisOut.c2p).map(Math.round);// offset the side adjoining the next rectangle so they\n// overlap, to prevent antialiasing gaps\nz[1]=Lib.constrain(z[1]+(z[1]>z[0])?1:-1,zBounds[0],zBounds[1]);// Colorbar cannot currently support opacities so we\n// use an opaque fill even when alpha channels present\nvar fillEl=d3.select(this).attr({x:xLeft,width:Math.max(thickPx,2),y:d3.min(z),height:Math.max(d3.max(z)-d3.min(z),2)});if(opts.fillgradient){Drawing.gradient(fillEl,gd,id,'vertical',opts.fillgradient,'fill');}else{// Tinycolor can't handle exponents and\n// at this scale, removing it makes no difference.\nvar colorString=fillcolormap(d).replace('e-','');fillEl.attr('fill',tinycolor(colorString).toHexString());}});var lines=container.select('.cblines').selectAll('path.cbline').data(opts.line.color&&opts.line.width?linelevels:[]);lines.enter().append('path').classed(cn.cbline,true);lines.exit().remove();lines.each(function(d){d3.select(this).attr('d','M'+xLeft+','+(Math.round(cbAxisOut.c2p(d))+opts.line.width/2%1)+'h'+thickPx).call(Drawing.lineGroupStyle,opts.line.width,linecolormap(d),opts.line.dash);});// force full redraw of labels and ticks\naxisLayer.selectAll('g.'+cbAxisOut._id+'tick,path').remove();// separate out axis and title drawing,\n// so we don't need such complicated logic in Titles.draw\n// if title is on the top or bottom, we've already drawn it\n// this title call only handles side=right\nreturn Lib.syncOrAsync([function(){var shift=xLeft+thickPx+(opts.outlinewidth||0)/2-(opts.ticks==='outside'?1:0);var vals=Axes.calcTicks(cbAxisOut);var transFn=Axes.makeTransFn(cbAxisOut);var labelFns=Axes.makeLabelFns(cbAxisOut,shift);var tickSign=Axes.getTickSigns(cbAxisOut)[2];Axes.drawTicks(gd,cbAxisOut,{vals:cbAxisOut.ticks==='inside'?Axes.clipEnds(cbAxisOut,vals):vals,layer:axisLayer,path:Axes.makeTickPath(cbAxisOut,shift,tickSign),transFn:transFn});return Axes.drawLabels(gd,cbAxisOut,{vals:vals,layer:axisLayer,transFn:transFn,labelXFn:labelFns.labelXFn,labelYFn:labelFns.labelYFn,labelAnchorFn:labelFns.labelAnchorFn});},function(){if(['top','bottom'].indexOf(opts.title.side)===-1){var fontSize=cbAxisOut.title.font.size;var y=cbAxisOut._offset+cbAxisOut._length/2;var x=gs.l+(cbAxisOut.position||0)*gs.w+(cbAxisOut.side==='right'?10+fontSize*(cbAxisOut.showticklabels?1:0.5):-10-fontSize*(cbAxisOut.showticklabels?0.5:0));// the 'h' + is a hack to get around the fact that\n// convertToTspans rotates any 'y...' class by 90 degrees.\n// TODO: find a better way to control this.\ndrawTitle('h'+cbAxisOut._id+'title',{avoid:{selection:d3.select(gd).selectAll('g.'+cbAxisOut._id+'tick'),side:opts.title.side,offsetLeft:gs.l,offsetTop:0,maxShift:fullLayout.width},attributes:{x:x,y:y,'text-anchor':'middle'},transform:{rotate:'-90',offset:0}});}}]);}function drawTitle(titleClass,titleOpts){var dfltTitleOpts={propContainer:cbAxisOut,propName:getPropName('title'),traceIndex:getTrace().index,placeholder:fullLayout._dfltTitle.colorbar,containerGroup:container.select('.cbtitle')};// this class-to-rotate thing with convertToTspans is\n// getting hackier and hackier... delete groups with the\n// wrong class (in case earlier the colorbar was drawn on\n// a different side, I think?)\nvar otherClass=titleClass.charAt(0)==='h'?titleClass.substr(1):'h'+titleClass;container.selectAll('.'+otherClass+',.'+otherClass+'-math-group').remove();Titles.draw(gd,titleClass,extendFlat(dfltTitleOpts,titleOpts||{}));}function positionCB(){// wait for the axis & title to finish rendering before\n// continuing positioning\n// TODO: why are we redrawing multiple times now with this?\n// I guess autoMargin doesn't like being post-promise?\nvar innerWidth=thickPx+opts.outlinewidth/2+Drawing.bBox(axisLayer.node()).width;titleEl=titleCont.select('text');if(titleEl.node()&&!titleEl.classed(cn.jsPlaceholder)){var mathJaxNode=titleCont.select('.h'+cbAxisOut._id+'title-math-group').node();var titleWidth;if(mathJaxNode&&['top','bottom'].indexOf(opts.title.side)!==-1){titleWidth=Drawing.bBox(mathJaxNode).width;}else{// note: the formula below works for all title sides,\n// (except for top/bottom mathjax, above)\n// but the weird gs.l is because the titleunshift\n// transform gets removed by Drawing.bBox\ntitleWidth=Drawing.bBox(titleCont.node()).right-xLeft-gs.l;}innerWidth=Math.max(innerWidth,titleWidth);}var outerwidth=2*opts.xpad+innerWidth+opts.borderwidth+opts.outlinewidth/2;var outerheight=yBottomPx-yTopPx;container.select('.cbbg').attr({x:xLeft-opts.xpad-(opts.borderwidth+opts.outlinewidth)/2,y:yTopPx-yExtraPx,width:Math.max(outerwidth,2),height:Math.max(outerheight+2*yExtraPx,2)}).call(Color.fill,opts.bgcolor).call(Color.stroke,opts.bordercolor).style({'stroke-width':opts.borderwidth});container.selectAll('.cboutline').attr({x:xLeft,y:yTopPx+opts.ypad+(opts.title.side==='top'?titleHeight:0),width:Math.max(thickPx,2),height:Math.max(outerheight-2*opts.ypad-titleHeight,2)}).call(Color.stroke,opts.outlinecolor).style({fill:'None','stroke-width':opts.outlinewidth});// fix positioning for xanchor!='left'\nvar xoffset=({center:0.5,right:1}[opts.xanchor]||0)*outerwidth;container.attr('transform','translate('+(gs.l-xoffset)+','+gs.t+')');// auto margin adjustment\nvar marginOpts={};var tFrac=FROM_TL[opts.yanchor];var bFrac=FROM_BR[opts.yanchor];if(opts.lenmode==='pixels'){marginOpts.y=opts.y;marginOpts.t=outerheight*tFrac;marginOpts.b=outerheight*bFrac;}else{marginOpts.t=marginOpts.b=0;marginOpts.yt=opts.y+opts.len*tFrac;marginOpts.yb=opts.y-opts.len*bFrac;}var lFrac=FROM_TL[opts.xanchor];var rFrac=FROM_BR[opts.xanchor];if(opts.thicknessmode==='pixels'){marginOpts.x=opts.x;marginOpts.l=outerwidth*lFrac;marginOpts.r=outerwidth*rFrac;}else{var extraThickness=outerwidth-thickPx;marginOpts.l=extraThickness*lFrac;marginOpts.r=extraThickness*rFrac;marginOpts.xl=opts.x-opts.thickness*lFrac;marginOpts.xr=opts.x+opts.thickness*rFrac;}Plots.autoMargin(gd,id,marginOpts);}var cbDone=Lib.syncOrAsync([Plots.previousPromises,drawAxis,Plots.previousPromises,positionCB],gd);if(cbDone&&cbDone.then)(gd._promises||[]).push(cbDone);// dragging...\nif(gd._context.edits.colorbarPosition){var t0,xf,yf;dragElement.init({element:container.node(),gd:gd,prepFn:function prepFn(){t0=container.attr('transform');setCursor(container);},moveFn:function moveFn(dx,dy){container.attr('transform',t0+' '+'translate('+dx+','+dy+')');xf=dragElement.align(xLeftFrac+dx/gs.w,thickFrac,0,1,opts.xanchor);yf=dragElement.align(yBottomFrac-dy/gs.h,lenFrac,0,1,opts.yanchor);var csr=dragElement.getCursor(xf,yf,opts.xanchor,opts.yanchor);setCursor(container,csr);},doneFn:function doneFn(){setCursor(container);if(xf!==undefined&&yf!==undefined){var update={};update[getPropName('x')]=xf;update[getPropName('y')]=yf;Registry.call('_guiRestyle',gd,update,getTrace().index);}}});}return cbDone;}function getTrace(){var idNum=id.substr(2);for(var i=0;i<gd._fullData.length;i++){var trace=gd._fullData[i];if(trace.uid===idNum)return trace;}}function getPropName(suffix){var trace=getTrace();var propName='colorbar.';var containerName=trace._module.colorbar.container;if(containerName)propName=containerName+'.'+propName;return propName+suffix;}// setter/getters for every item defined in opts\nObject.keys(opts).forEach(function(name){component[name]=function(v){// getter\nif(!arguments.length)return opts[name];// setter - for multi-part properties,\n// set only the parts that are provided\nopts[name]=Lib.isPlainObject(opts[name])?Lib.extendFlat(opts[name],v):v;return component;};});// or use .options to set multiple options at once via a dictionary\ncomponent.options=function(o){for(var name in o){// in case something random comes through\n// that's not an option, ignore it\nif(typeof component[name]==='function'){component[name](o[name]);}}return component;};component._opts=opts;return component;};},{\"../../constants/alignment\":394,\"../../lib\":423,\"../../lib/extend\":416,\"../../lib/setcursor\":442,\"../../lib/svg_text_utils\":446,\"../../plots/cartesian/axes\":469,\"../../plots/cartesian/axis_defaults\":471,\"../../plots/cartesian/layout_attributes\":482,\"../../plots/cartesian/position_defaults\":485,\"../../plots/plots\":513,\"../../registry\":521,\"../color\":299,\"../dragelement\":317,\"../drawing\":320,\"../titles\":387,\"./attributes\":300,\"./constants\":302,\"d3\":71,\"tinycolor2\":264}],305:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');module.exports=function hasColorbar(container){return Lib.isPlainObject(container.colorbar);};},{\"../../lib\":423}],306:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var palettes=_dereq_('./scales.js').scales;var paletteStr=Object.keys(palettes);function code(s){return'`'+s+'`';}/**\n * Make colorscale attribute declarations for\n *\n * - colorscale,\n * - (c|z)auto, (c|z)min, (c|z)max,\n * - autocolorscale, reversescale,\n * - showscale (optionally)\n * - color (optionally)\n *\n * @param {string} context (dflt: '', i.e. from trace root):\n *     the container this is in ('', *marker*, *marker.line* etc)\n *\n * @param {object} opts:\n *   - cLetter {string} (dflt: 'c'):\n *     leading letter for 'min', 'max and 'auto' attribute (either 'z' or 'c')\n *\n *   - colorAttr {string} (dflt: 'z' if `cLetter: 'z'`, 'color' if `cLetter: 'c'`):\n *     (for descriptions) sets the name of the color attribute that maps to the colorscale.\n *\n *     N.B. if `colorAttr: 'color'`, we include the `color` declaration here.\n *\n *   - onlyIfNumerical {string} (dflt: false' if `cLetter: 'z'`, true if `cLetter: 'c'`):\n *     (for descriptions) set to true if colorscale attribute only\n *\n *   - colorscaleDflt {string}:\n *     overrides the colorscale dflt\n *\n *   - autoColorDflt {boolean} (dflt true):\n *     normally autocolorscale.dflt is `true`, but pass `false` to override\n *\n *   - noScale {boolean} (dflt: true if `context: 'marker.line'`, false otherwise):\n *     set to `false` to not include showscale attribute (e.g. for 'marker.line')\n *\n *   - showScaleDflt {boolean} (dflt: true if `cLetter: 'z'`, false otherwise)\n *\n *   - editTypeOverride {boolean} (dflt: ''):\n *     most of these attributes already require a recalc, but the ones that do not\n *     have editType *style* or *plot* unless you override (presumably with *calc*)\n *\n * @return {object}\n */module.exports=function colorScaleAttrs(context,opts){context=context||'';opts=opts||{};var cLetter=opts.cLetter||'c';var onlyIfNumerical='onlyIfNumerical'in opts?opts.onlyIfNumerical:Boolean(context);var noScale='noScale'in opts?opts.noScale:context==='marker.line';var showScaleDflt='showScaleDflt'in opts?opts.showScaleDflt:cLetter==='z';var colorscaleDflt=typeof opts.colorscaleDflt==='string'?palettes[opts.colorscaleDflt]:null;var editTypeOverride=opts.editTypeOverride||'';var contextHead=context?context+'.':'';var colorAttr,colorAttrFull;if('colorAttr'in opts){colorAttr=opts.colorAttr;colorAttrFull=opts.colorAttr;}else{colorAttr={z:'z',c:'color'}[cLetter];colorAttrFull='in '+code(contextHead+colorAttr);}var effectDesc=onlyIfNumerical?' Has an effect only if '+colorAttrFull+'is set to a numerical array.':'';var auto=cLetter+'auto';var min=cLetter+'min';var max=cLetter+'max';var minFull=code(contextHead+min);var maxFull=code(contextHead+max);var minmaxFull=minFull+' and '+maxFull;var autoImpliedEdits={};autoImpliedEdits[min]=autoImpliedEdits[max]=undefined;var minmaxImpliedEdits={};minmaxImpliedEdits[auto]=false;var attrs={};if(colorAttr==='color'){attrs.color={valType:'color',arrayOk:true,editType:editTypeOverride||'style'};}attrs[auto]={valType:'boolean',dflt:true,editType:'calc',impliedEdits:autoImpliedEdits};attrs[min]={valType:'number',dflt:null,editType:editTypeOverride||'plot',impliedEdits:minmaxImpliedEdits};attrs[max]={valType:'number',dflt:null,editType:editTypeOverride||'plot',impliedEdits:minmaxImpliedEdits};attrs.colorscale={valType:'colorscale',editType:'calc',dflt:colorscaleDflt,impliedEdits:{autocolorscale:false}};attrs.autocolorscale={valType:'boolean',// gets overrode in 'heatmap' & 'surface' for backwards comp.\ndflt:opts.autoColorDflt===false?false:true,editType:'calc',impliedEdits:{colorscale:undefined}};attrs.reversescale={valType:'boolean',dflt:false,editType:'plot'};if(!noScale){attrs.showscale={valType:'boolean',dflt:showScaleDflt,editType:'calc'};}return attrs;};},{\"./scales.js\":314}],307:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');module.exports=function calc(gd,trace,opts){var fullLayout=gd._fullLayout;var vals=opts.vals;var containerStr=opts.containerStr;var cLetter=opts.cLetter;var container=containerStr?Lib.nestedProperty(trace,containerStr).get():trace;var autoAttr=cLetter+'auto';var minAttr=cLetter+'min';var maxAttr=cLetter+'max';var auto=container[autoAttr];var min=container[minAttr];var max=container[maxAttr];var scl=container.colorscale;if(auto!==false||min===undefined){min=Lib.aggNums(Math.min,null,vals);}if(auto!==false||max===undefined){max=Lib.aggNums(Math.max,null,vals);}if(min===max){min-=0.5;max+=0.5;}container['_'+minAttr]=container[minAttr]=min;container['_'+maxAttr]=container[maxAttr]=max;if(container.autocolorscale){if(min*max<0)scl=fullLayout.colorscale.diverging;else if(min>=0)scl=fullLayout.colorscale.sequential;else scl=fullLayout.colorscale.sequentialminus;container._colorscale=container.colorscale=scl;}};},{\"../../lib\":423}],308:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var hasColorscale=_dereq_('./helpers').hasColorscale;module.exports=function crossTraceDefaults(fullData){function replace(cont,k){var val=cont['_'+k];if(val!==undefined){cont[k]=val;}}function relinkColorAtts(trace,cAttrs){var cont=cAttrs.container?Lib.nestedProperty(trace,cAttrs.container).get():trace;if(cont){var isAuto=cont.zauto||cont.cauto;var minAttr=cAttrs.min;var maxAttr=cAttrs.max;if(isAuto||cont[minAttr]===undefined){replace(cont,minAttr);}if(isAuto||cont[maxAttr]===undefined){replace(cont,maxAttr);}if(cont.autocolorscale){replace(cont,'colorscale');}}}for(var i=0;i<fullData.length;i++){var trace=fullData[i];var _module=trace._module;if(_module.colorbar){relinkColorAtts(trace,_module.colorbar);}// TODO could generalize _module.colorscale and use it here?\nif(hasColorscale(trace,'marker.line')){relinkColorAtts(trace,{container:'marker.line',min:'cmin',max:'cmax'});}if(hasColorscale(trace,'line')){relinkColorAtts(trace,{container:'line',min:'cmin',max:'cmax'});}}};},{\"../../lib\":423,\"./helpers\":310}],309:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var Lib=_dereq_('../../lib');var hasColorbar=_dereq_('../colorbar/has_colorbar');var colorbarDefaults=_dereq_('../colorbar/defaults');var isValidScale=_dereq_('./scales').isValid;function npMaybe(cont,prefix){var containerStr=prefix.slice(0,prefix.length-1);return prefix?Lib.nestedProperty(cont,containerStr).get()||{}:cont;}module.exports=function colorScaleDefaults(traceIn,traceOut,layout,coerce,opts){var prefix=opts.prefix;var cLetter=opts.cLetter;var containerIn=npMaybe(traceIn,prefix);var containerOut=npMaybe(traceOut,prefix);var template=npMaybe(traceOut._template||{},prefix)||{};var minIn=containerIn[cLetter+'min'];var maxIn=containerIn[cLetter+'max'];var validMinMax=isNumeric(minIn)&&isNumeric(maxIn)&&minIn<maxIn;coerce(prefix+cLetter+'auto',!validMinMax);coerce(prefix+cLetter+'min');coerce(prefix+cLetter+'max');// handles both the trace case (autocolorscale is false by default) and\n// the marker and marker.line case (autocolorscale is true by default)\nvar sclIn=containerIn.colorscale;var sclTemplate=template.colorscale;var autoColorscaleDflt;if(sclIn!==undefined)autoColorscaleDflt=!isValidScale(sclIn);if(sclTemplate!==undefined)autoColorscaleDflt=!isValidScale(sclTemplate);coerce(prefix+'autocolorscale',autoColorscaleDflt);coerce(prefix+'colorscale');coerce(prefix+'reversescale');if(!opts.noScale&&prefix!=='marker.line.'){// handles both the trace case where the dflt is listed in attributes and\n// the marker case where the dflt is determined by hasColorbar\nvar showScaleDflt;if(prefix)showScaleDflt=hasColorbar(containerIn);var showScale=coerce(prefix+'showscale',showScaleDflt);if(showScale)colorbarDefaults(containerIn,containerOut,layout);}};},{\"../../lib\":423,\"../colorbar/defaults\":303,\"../colorbar/has_colorbar\":305,\"./scales\":314,\"fast-isnumeric\":80}],310:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var tinycolor=_dereq_('tinycolor2');var isNumeric=_dereq_('fast-isnumeric');var Lib=_dereq_('../../lib');var Color=_dereq_('../color');var isValidScale=_dereq_('./scales').isValid;function hasColorscale(trace,containerStr){var container=containerStr?Lib.nestedProperty(trace,containerStr).get()||{}:trace;var color=container.color;var isArrayWithOneNumber=false;if(Lib.isArrayOrTypedArray(color)){for(var i=0;i<color.length;i++){if(isNumeric(color[i])){isArrayWithOneNumber=true;break;}}}return Lib.isPlainObject(container)&&(isArrayWithOneNumber||container.showscale===true||isNumeric(container.cmin)&&isNumeric(container.cmax)||isValidScale(container.colorscale)||Lib.isPlainObject(container.colorbar));}/**\n * Extract colorscale into numeric domain and color range.\n *\n * @param {object} cont colorscale container (e.g. trace, marker)\n *  - colorscale {array of arrays}\n *  - cmin/zmin {number}\n *  - cmax/zmax {number}\n *  - reversescale {boolean}\n * @param {object} opts\n *  - cLetter {string} 'c' (for cmin/cmax) or 'z' (for zmin/zmax)\n *\n * @return {object}\n *  - domain {array}\n *  - range {array}\n */function extractScale(cont,opts){var cLetter=opts.cLetter;var scl=cont.reversescale?flipScale(cont.colorscale):cont.colorscale;// minimum color value (used to clamp scale)\nvar cmin=cont[cLetter+'min'];// maximum color value (used to clamp scale)\nvar cmax=cont[cLetter+'max'];var N=scl.length;var domain=new Array(N);var range=new Array(N);for(var i=0;i<N;i++){var si=scl[i];domain[i]=cmin+si[0]*(cmax-cmin);range[i]=si[1];}return{domain:domain,range:range};}function flipScale(scl){var N=scl.length;var sclNew=new Array(N);for(var i=N-1,j=0;i>=0;i--,j++){var si=scl[i];sclNew[j]=[1-si[0],si[1]];}return sclNew;}/**\n * General colorscale function generator.\n *\n * @param {object} specs output of Colorscale.extractScale or precomputed domain, range.\n *  - domain {array}\n *  - range {array}\n *\n * @param {object} opts\n *  - noNumericCheck {boolean} if true, scale func bypasses numeric checks\n *  - returnArray {boolean} if true, scale func return 4-item array instead of color strings\n *\n * @return {function}\n */function makeColorScaleFunc(specs,opts){opts=opts||{};var domain=specs.domain;var range=specs.range;var N=range.length;var _range=new Array(N);for(var i=0;i<N;i++){var rgba=tinycolor(range[i]).toRgb();_range[i]=[rgba.r,rgba.g,rgba.b,rgba.a];}var _sclFunc=d3.scale.linear().domain(domain).range(_range).clamp(true);var noNumericCheck=opts.noNumericCheck;var returnArray=opts.returnArray;var sclFunc;if(noNumericCheck&&returnArray){sclFunc=_sclFunc;}else if(noNumericCheck){sclFunc=function sclFunc(v){return colorArray2rbga(_sclFunc(v));};}else if(returnArray){sclFunc=function sclFunc(v){if(isNumeric(v))return _sclFunc(v);else if(tinycolor(v).isValid())return v;else return Color.defaultLine;};}else{sclFunc=function sclFunc(v){if(isNumeric(v))return colorArray2rbga(_sclFunc(v));else if(tinycolor(v).isValid())return v;else return Color.defaultLine;};}// colorbar draw looks into the d3 scale closure for domain and range\nsclFunc.domain=_sclFunc.domain;sclFunc.range=function(){return range;};return sclFunc;}function colorArray2rbga(colorArray){var colorObj={r:colorArray[0],g:colorArray[1],b:colorArray[2],a:colorArray[3]};return tinycolor(colorObj).toRgbString();}module.exports={hasColorscale:hasColorscale,extractScale:extractScale,flipScale:flipScale,makeColorScaleFunc:makeColorScaleFunc};},{\"../../lib\":423,\"../color\":299,\"./scales\":314,\"d3\":71,\"fast-isnumeric\":80,\"tinycolor2\":264}],311:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var scales=_dereq_('./scales');var helpers=_dereq_('./helpers');module.exports={moduleType:'component',name:'colorscale',attributes:_dereq_('./attributes'),layoutAttributes:_dereq_('./layout_attributes'),supplyLayoutDefaults:_dereq_('./layout_defaults'),handleDefaults:_dereq_('./defaults'),crossTraceDefaults:_dereq_('./cross_trace_defaults'),calc:_dereq_('./calc'),// ./scales.js is required in lib/coerce.js ;\n// it needs to be a seperate module to avoid circular a dependency\nscales:scales.scales,defaultScale:scales.defaultScale,getScale:scales.get,isValidScale:scales.isValid,hasColorscale:helpers.hasColorscale,flipScale:helpers.flipScale,extractScale:helpers.extractScale,makeColorScaleFunc:helpers.makeColorScaleFunc};},{\"./attributes\":306,\"./calc\":307,\"./cross_trace_defaults\":308,\"./defaults\":309,\"./helpers\":310,\"./layout_attributes\":312,\"./layout_defaults\":313,\"./scales\":314}],312:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var scales=_dereq_('./scales').scales;var msg='Note that `autocolorscale` must be true for this attribute to work.';module.exports={editType:'calc',sequential:{valType:'colorscale',dflt:scales.Reds,editType:'calc'},sequentialminus:{valType:'colorscale',dflt:scales.Blues,editType:'calc'},diverging:{valType:'colorscale',dflt:scales.RdBu,editType:'calc'}};},{\"./scales\":314}],313:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var colorscaleAttrs=_dereq_('./layout_attributes');var Template=_dereq_('../../plot_api/plot_template');module.exports=function supplyLayoutDefaults(layoutIn,layoutOut){var colorscaleIn=layoutIn.colorscale;var colorscaleOut=Template.newContainer(layoutOut,'colorscale');function coerce(attr,dflt){return Lib.coerce(colorscaleIn,colorscaleOut,colorscaleAttrs,attr,dflt);}coerce('sequential');coerce('sequentialminus');coerce('diverging');};},{\"../../lib\":423,\"../../plot_api/plot_template\":459,\"./layout_attributes\":312}],314:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var tinycolor=_dereq_('tinycolor2');var scales={'Greys':[[0,'rgb(0,0,0)'],[1,'rgb(255,255,255)']],'YlGnBu':[[0,'rgb(8,29,88)'],[0.125,'rgb(37,52,148)'],[0.25,'rgb(34,94,168)'],[0.375,'rgb(29,145,192)'],[0.5,'rgb(65,182,196)'],[0.625,'rgb(127,205,187)'],[0.75,'rgb(199,233,180)'],[0.875,'rgb(237,248,217)'],[1,'rgb(255,255,217)']],'Greens':[[0,'rgb(0,68,27)'],[0.125,'rgb(0,109,44)'],[0.25,'rgb(35,139,69)'],[0.375,'rgb(65,171,93)'],[0.5,'rgb(116,196,118)'],[0.625,'rgb(161,217,155)'],[0.75,'rgb(199,233,192)'],[0.875,'rgb(229,245,224)'],[1,'rgb(247,252,245)']],'YlOrRd':[[0,'rgb(128,0,38)'],[0.125,'rgb(189,0,38)'],[0.25,'rgb(227,26,28)'],[0.375,'rgb(252,78,42)'],[0.5,'rgb(253,141,60)'],[0.625,'rgb(254,178,76)'],[0.75,'rgb(254,217,118)'],[0.875,'rgb(255,237,160)'],[1,'rgb(255,255,204)']],'Bluered':[[0,'rgb(0,0,255)'],[1,'rgb(255,0,0)']],// modified RdBu based on\n// www.sandia.gov/~kmorel/documents/ColorMaps/ColorMapsExpanded.pdf\n'RdBu':[[0,'rgb(5,10,172)'],[0.35,'rgb(106,137,247)'],[0.5,'rgb(190,190,190)'],[0.6,'rgb(220,170,132)'],[0.7,'rgb(230,145,90)'],[1,'rgb(178,10,28)']],// Scale for non-negative numeric values\n'Reds':[[0,'rgb(220,220,220)'],[0.2,'rgb(245,195,157)'],[0.4,'rgb(245,160,105)'],[1,'rgb(178,10,28)']],// Scale for non-positive numeric values\n'Blues':[[0,'rgb(5,10,172)'],[0.35,'rgb(40,60,190)'],[0.5,'rgb(70,100,245)'],[0.6,'rgb(90,120,245)'],[0.7,'rgb(106,137,247)'],[1,'rgb(220,220,220)']],'Picnic':[[0,'rgb(0,0,255)'],[0.1,'rgb(51,153,255)'],[0.2,'rgb(102,204,255)'],[0.3,'rgb(153,204,255)'],[0.4,'rgb(204,204,255)'],[0.5,'rgb(255,255,255)'],[0.6,'rgb(255,204,255)'],[0.7,'rgb(255,153,255)'],[0.8,'rgb(255,102,204)'],[0.9,'rgb(255,102,102)'],[1,'rgb(255,0,0)']],'Rainbow':[[0,'rgb(150,0,90)'],[0.125,'rgb(0,0,200)'],[0.25,'rgb(0,25,255)'],[0.375,'rgb(0,152,255)'],[0.5,'rgb(44,255,150)'],[0.625,'rgb(151,255,0)'],[0.75,'rgb(255,234,0)'],[0.875,'rgb(255,111,0)'],[1,'rgb(255,0,0)']],'Portland':[[0,'rgb(12,51,131)'],[0.25,'rgb(10,136,186)'],[0.5,'rgb(242,211,56)'],[0.75,'rgb(242,143,56)'],[1,'rgb(217,30,30)']],'Jet':[[0,'rgb(0,0,131)'],[0.125,'rgb(0,60,170)'],[0.375,'rgb(5,255,255)'],[0.625,'rgb(255,255,0)'],[0.875,'rgb(250,0,0)'],[1,'rgb(128,0,0)']],'Hot':[[0,'rgb(0,0,0)'],[0.3,'rgb(230,0,0)'],[0.6,'rgb(255,210,0)'],[1,'rgb(255,255,255)']],'Blackbody':[[0,'rgb(0,0,0)'],[0.2,'rgb(230,0,0)'],[0.4,'rgb(230,210,0)'],[0.7,'rgb(255,255,255)'],[1,'rgb(160,200,255)']],'Earth':[[0,'rgb(0,0,130)'],[0.1,'rgb(0,180,180)'],[0.2,'rgb(40,210,40)'],[0.4,'rgb(230,230,50)'],[0.6,'rgb(120,70,20)'],[1,'rgb(255,255,255)']],'Electric':[[0,'rgb(0,0,0)'],[0.15,'rgb(30,0,100)'],[0.4,'rgb(120,0,100)'],[0.6,'rgb(160,90,0)'],[0.8,'rgb(230,200,0)'],[1,'rgb(255,250,220)']],'Viridis':[[0,'#440154'],[0.06274509803921569,'#48186a'],[0.12549019607843137,'#472d7b'],[0.18823529411764706,'#424086'],[0.25098039215686274,'#3b528b'],[0.3137254901960784,'#33638d'],[0.3764705882352941,'#2c728e'],[0.4392156862745098,'#26828e'],[0.5019607843137255,'#21918c'],[0.5647058823529412,'#1fa088'],[0.6274509803921569,'#28ae80'],[0.6901960784313725,'#3fbc73'],[0.7529411764705882,'#5ec962'],[0.8156862745098039,'#84d44b'],[0.8784313725490196,'#addc30'],[0.9411764705882353,'#d8e219'],[1,'#fde725']],'Cividis':[[0.000000,'rgb(0,32,76)'],[0.058824,'rgb(0,42,102)'],[0.117647,'rgb(0,52,110)'],[0.176471,'rgb(39,63,108)'],[0.235294,'rgb(60,74,107)'],[0.294118,'rgb(76,85,107)'],[0.352941,'rgb(91,95,109)'],[0.411765,'rgb(104,106,112)'],[0.470588,'rgb(117,117,117)'],[0.529412,'rgb(131,129,120)'],[0.588235,'rgb(146,140,120)'],[0.647059,'rgb(161,152,118)'],[0.705882,'rgb(176,165,114)'],[0.764706,'rgb(192,177,109)'],[0.823529,'rgb(209,191,102)'],[0.882353,'rgb(225,204,92)'],[0.941176,'rgb(243,219,79)'],[1.000000,'rgb(255,233,69)']]};var defaultScale=scales.RdBu;function getScale(scl,dflt){if(!dflt)dflt=defaultScale;if(!scl)return dflt;function parseScale(){try{scl=scales[scl]||JSON.parse(scl);}catch(e){scl=dflt;}}if(typeof scl==='string'){parseScale();// occasionally scl is double-JSON encoded...\nif(typeof scl==='string')parseScale();}if(!isValidScaleArray(scl))return dflt;return scl;}function isValidScaleArray(scl){var highestVal=0;if(!Array.isArray(scl)||scl.length<2)return false;if(!scl[0]||!scl[scl.length-1])return false;if(+scl[0][0]!==0||+scl[scl.length-1][0]!==1)return false;for(var i=0;i<scl.length;i++){var si=scl[i];if(si.length!==2||+si[0]<highestVal||!tinycolor(si[1]).isValid()){return false;}highestVal=+si[0];}return true;}function isValidScale(scl){if(scales[scl]!==undefined)return true;else return isValidScaleArray(scl);}module.exports={scales:scales,defaultScale:defaultScale,get:getScale,isValid:isValidScale};},{\"tinycolor2\":264}],315:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';// for automatic alignment on dragging, <1/3 means left align,\n// >2/3 means right, and between is center. Pick the right fraction\n// based on where you are, and return the fraction corresponding to\n// that position on the object\nmodule.exports=function align(v,dv,v0,v1,anchor){var vmin=(v-v0)/(v1-v0);var vmax=vmin+dv/(v1-v0);var vc=(vmin+vmax)/2;// explicitly specified anchor\nif(anchor==='left'||anchor==='bottom')return vmin;if(anchor==='center'||anchor==='middle')return vc;if(anchor==='right'||anchor==='top')return vmax;// automatic based on position\nif(vmin<2/3-vc)return vmin;if(vmax>4/3-vc)return vmax;return vc;};},{}],316:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');// set cursors pointing toward the closest corner/side,\n// to indicate alignment\n// x and y are 0-1, fractions of the plot area\nvar cursorset=[['sw-resize','s-resize','se-resize'],['w-resize','move','e-resize'],['nw-resize','n-resize','ne-resize']];module.exports=function getCursor(x,y,xanchor,yanchor){if(xanchor==='left')x=0;else if(xanchor==='center')x=1;else if(xanchor==='right')x=2;else x=Lib.constrain(Math.floor(x*3),0,2);if(yanchor==='bottom')y=0;else if(yanchor==='middle')y=1;else if(yanchor==='top')y=2;else y=Lib.constrain(Math.floor(y*3),0,2);return cursorset[y][x];};},{\"../../lib\":423}],317:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var mouseOffset=_dereq_('mouse-event-offset');var hasHover=_dereq_('has-hover');var supportsPassive=_dereq_('has-passive-events');var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var constants=_dereq_('../../plots/cartesian/constants');var interactConstants=_dereq_('../../constants/interactions');var dragElement=module.exports={};dragElement.align=_dereq_('./align');dragElement.getCursor=_dereq_('./cursor');var unhover=_dereq_('./unhover');dragElement.unhover=unhover.wrapped;dragElement.unhoverRaw=unhover.raw;/**\n * Abstracts click & drag interactions\n *\n * During the interaction, a \"coverSlip\" element - a transparent\n * div covering the whole page - is created, which has two key effects:\n * - Lets you drag beyond the boundaries of the plot itself without\n *   dropping (but if you drag all the way out of the browser window the\n *   interaction will end)\n * - Freezes the cursor: whatever mouse cursor the drag element had when the\n *   interaction started gets copied to the coverSlip for use until mouseup\n *\n * If the user executes a drag bigger than MINDRAG, callbacks will fire as:\n *      prepFn, moveFn (1 or more times), doneFn\n * If the user does not drag enough, prepFn and clickFn will fire.\n *\n * Note: If you cancel contextmenu, clickFn will fire even with a right click\n * (unlike native events) so you'll get a `plotly_click` event. Cancel context eg:\n *    gd.addEventListener('contextmenu', function(e) { e.preventDefault(); });\n * TODO: we should probably turn this into a `config` parameter, so we can fix it\n * such that if you *don't* cancel contextmenu, we can prevent partial drags, which\n * put you in a weird state.\n *\n * If the user clicks multiple times quickly, clickFn will fire each time\n * but numClicks will increase to help you recognize doubleclicks.\n *\n * @param {object} options with keys:\n *      element (required) the DOM element to drag\n *      prepFn (optional) function(event, startX, startY)\n *          executed on mousedown\n *          startX and startY are the clientX and clientY pixel position\n *          of the mousedown event\n *      moveFn (optional) function(dx, dy)\n *          executed on move, ONLY after we've exceeded MINDRAG\n *          (we keep executing moveFn if you move back to where you started)\n *          dx and dy are the net pixel offset of the drag,\n *          dragged is true/false, has the mouse moved enough to\n *          constitute a drag\n *      doneFn (optional) function(e)\n *          executed on mouseup, ONLY if we exceeded MINDRAG (so you can be\n *          sure that moveFn has been called at least once)\n *          numClicks is how many clicks we've registered within\n *          a doubleclick time\n *          e is the original mouseup event\n *      clickFn (optional) function(numClicks, e)\n *          executed on mouseup if we have NOT exceeded MINDRAG (ie moveFn\n *          has not been called at all)\n *          numClicks is how many clicks we've registered within\n *          a doubleclick time\n *          e is the original mousedown event\n *      clampFn (optional, function(dx, dy) return [dx2, dy2])\n *          Provide custom clamping function for small displacements.\n *          By default, clamping is done using `minDrag` to x and y displacements\n *          independently.\n */dragElement.init=function init(options){var gd=options.gd;var numClicks=1;var DBLCLICKDELAY=interactConstants.DBLCLICKDELAY;var element=options.element;var startX,startY,newMouseDownTime,cursor,dragCover,initialEvent,initialTarget,rightClick;if(!gd._mouseDownTime)gd._mouseDownTime=0;element.style.pointerEvents='all';element.onmousedown=onStart;if(!supportsPassive){element.ontouchstart=onStart;}else{if(element._ontouchstart){element.removeEventListener('touchstart',element._ontouchstart);}element._ontouchstart=onStart;element.addEventListener('touchstart',onStart,{passive:false});}function _clampFn(dx,dy,minDrag){if(Math.abs(dx)<minDrag)dx=0;if(Math.abs(dy)<minDrag)dy=0;return[dx,dy];}var clampFn=options.clampFn||_clampFn;function onStart(e){// make dragging and dragged into properties of gd\n// so that others can look at and modify them\ngd._dragged=false;gd._dragging=true;var offset=pointerOffset(e);startX=offset[0];startY=offset[1];initialTarget=e.target;initialEvent=e;rightClick=e.buttons===2||e.ctrlKey;// fix Fx.hover for touch events\nif(typeof e.clientX==='undefined'&&typeof e.clientY==='undefined'){e.clientX=startX;e.clientY=startY;}newMouseDownTime=new Date().getTime();if(newMouseDownTime-gd._mouseDownTime<DBLCLICKDELAY){// in a click train\nnumClicks+=1;}else{// new click train\nnumClicks=1;gd._mouseDownTime=newMouseDownTime;}if(options.prepFn)options.prepFn(e,startX,startY);if(hasHover&&!rightClick){dragCover=coverSlip();dragCover.style.cursor=window.getComputedStyle(element).cursor;}else if(!hasHover){// document acts as a dragcover for mobile, bc we can't create dragcover dynamically\ndragCover=document;cursor=window.getComputedStyle(document.documentElement).cursor;document.documentElement.style.cursor=window.getComputedStyle(element).cursor;}document.addEventListener('mouseup',onDone);document.addEventListener('touchend',onDone);if(options.dragmode!==false){e.preventDefault();document.addEventListener('mousemove',onMove);document.addEventListener('touchmove',onMove);}return;}function onMove(e){e.preventDefault();var offset=pointerOffset(e);var minDrag=options.minDrag||constants.MINDRAG;var dxdy=clampFn(offset[0]-startX,offset[1]-startY,minDrag);var dx=dxdy[0];var dy=dxdy[1];if(dx||dy){gd._dragged=true;dragElement.unhover(gd);}if(gd._dragged&&options.moveFn&&!rightClick)options.moveFn(dx,dy);return;}function onDone(e){if(options.dragmode!==false){e.preventDefault();document.removeEventListener('mousemove',onMove);document.removeEventListener('touchmove',onMove);}document.removeEventListener('mouseup',onDone);document.removeEventListener('touchend',onDone);if(hasHover){Lib.removeElement(dragCover);}else if(cursor){dragCover.documentElement.style.cursor=cursor;cursor=null;}if(!gd._dragging){gd._dragged=false;return;}gd._dragging=false;// don't count as a dblClick unless the mouseUp is also within\n// the dblclick delay\nif(new Date().getTime()-gd._mouseDownTime>DBLCLICKDELAY){numClicks=Math.max(numClicks-1,1);}if(gd._dragged){if(options.doneFn)options.doneFn();}else{if(options.clickFn)options.clickFn(numClicks,initialEvent);// If we haven't dragged, this should be a click. But because of the\n// coverSlip changing the element, the natural system might not generate one,\n// so we need to make our own. But right clicks don't normally generate\n// click events, only contextmenu events, which happen on mousedown.\nif(!rightClick){var e2;try{e2=new MouseEvent('click',e);}catch(err){var offset=pointerOffset(e);e2=document.createEvent('MouseEvents');e2.initMouseEvent('click',e.bubbles,e.cancelable,e.view,e.detail,e.screenX,e.screenY,offset[0],offset[1],e.ctrlKey,e.altKey,e.shiftKey,e.metaKey,e.button,e.relatedTarget);}initialTarget.dispatchEvent(e2);}}finishDrag(gd);gd._dragged=false;return;}};function coverSlip(){var cover=document.createElement('div');cover.className='dragcover';var cStyle=cover.style;cStyle.position='fixed';cStyle.left=0;cStyle.right=0;cStyle.top=0;cStyle.bottom=0;cStyle.zIndex=999999999;cStyle.background='none';document.body.appendChild(cover);return cover;}dragElement.coverSlip=coverSlip;function finishDrag(gd){gd._dragging=false;if(gd._replotPending)Registry.call('plot',gd);}function pointerOffset(e){return mouseOffset(e.changedTouches?e.changedTouches[0]:e,document.body);}},{\"../../constants/interactions\":397,\"../../lib\":423,\"../../plots/cartesian/constants\":475,\"../../registry\":521,\"./align\":315,\"./cursor\":316,\"./unhover\":318,\"has-hover\":163,\"has-passive-events\":164,\"mouse-event-offset\":185}],318:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Events=_dereq_('../../lib/events');var throttle=_dereq_('../../lib/throttle');var getGraphDiv=_dereq_('../../lib/get_graph_div');var hoverConstants=_dereq_('../fx/constants');var unhover=module.exports={};unhover.wrapped=function(gd,evt,subplot){gd=getGraphDiv(gd);// Important, clear any queued hovers\nif(gd._fullLayout){throttle.clear(gd._fullLayout._uid+hoverConstants.HOVERID);}unhover.raw(gd,evt,subplot);};// remove hover effects on mouse out, and emit unhover event\nunhover.raw=function unhoverRaw(gd,evt){var fullLayout=gd._fullLayout;var oldhoverdata=gd._hoverdata;if(!evt)evt={};if(evt.target&&Events.triggerHandler(gd,'plotly_beforehover',evt)===false){return;}fullLayout._hoverlayer.selectAll('g').remove();fullLayout._hoverlayer.selectAll('line').remove();fullLayout._hoverlayer.selectAll('circle').remove();gd._hoverdata=undefined;if(evt.target&&oldhoverdata){gd.emit('plotly_unhover',{event:evt,points:oldhoverdata});}};},{\"../../lib/events\":415,\"../../lib/get_graph_div\":420,\"../../lib/throttle\":447,\"../fx/constants\":332}],319:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';exports.dash={valType:'string',// string type usually doesn't take values... this one should really be\n// a special type or at least a special coercion function, from the GUI\n// you only get these values but elsewhere the user can supply a list of\n// dash lengths in px, and it will be honored\nvalues:['solid','dot','dash','longdash','dashdot','longdashdot'],dflt:'solid',editType:'style'};},{}],320:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var isNumeric=_dereq_('fast-isnumeric');var tinycolor=_dereq_('tinycolor2');var Registry=_dereq_('../../registry');var Color=_dereq_('../color');var Colorscale=_dereq_('../colorscale');var Lib=_dereq_('../../lib');var svgTextUtils=_dereq_('../../lib/svg_text_utils');var xmlnsNamespaces=_dereq_('../../constants/xmlns_namespaces');var alignment=_dereq_('../../constants/alignment');var LINE_SPACING=alignment.LINE_SPACING;var DESELECTDIM=_dereq_('../../constants/interactions').DESELECTDIM;var subTypes=_dereq_('../../traces/scatter/subtypes');var makeBubbleSizeFn=_dereq_('../../traces/scatter/make_bubble_size_func');var drawing=module.exports={};// -----------------------------------------------------\n// styling functions for plot elements\n// -----------------------------------------------------\ndrawing.font=function(s,family,size,color){// also allow the form font(s, {family, size, color})\nif(Lib.isPlainObject(family)){color=family.color;size=family.size;family=family.family;}if(family)s.style('font-family',family);if(size+1)s.style('font-size',size+'px');if(color)s.call(Color.fill,color);};/*\n * Positioning helpers\n * Note: do not use `setPosition` with <text> nodes modified by\n * `svgTextUtils.convertToTspans`. Use `svgTextUtils.positionText`\n * instead, so that <tspan.line> elements get updated to match.\n */drawing.setPosition=function(s,x,y){s.attr('x',x).attr('y',y);};drawing.setSize=function(s,w,h){s.attr('width',w).attr('height',h);};drawing.setRect=function(s,x,y,w,h){s.call(drawing.setPosition,x,y).call(drawing.setSize,w,h);};/** Translate node\n *\n * @param {object} d : calcdata point item\n * @param {sel} sel : d3 selction of node to translate\n * @param {object} xa : corresponding full xaxis object\n * @param {object} ya : corresponding full yaxis object\n *\n * @return {boolean} :\n *  true if selection got translated\n *  false if selection could not get translated\n */drawing.translatePoint=function(d,sel,xa,ya){var x=xa.c2p(d.x);var y=ya.c2p(d.y);if(isNumeric(x)&&isNumeric(y)&&sel.node()){// for multiline text this works better\nif(sel.node().nodeName==='text'){sel.attr('x',x).attr('y',y);}else{sel.attr('transform','translate('+x+','+y+')');}}else{return false;}return true;};drawing.translatePoints=function(s,xa,ya){s.each(function(d){var sel=d3.select(this);drawing.translatePoint(d,sel,xa,ya);});};drawing.hideOutsideRangePoint=function(d,sel,xa,ya,xcalendar,ycalendar){sel.attr('display',xa.isPtWithinRange(d,xcalendar)&&ya.isPtWithinRange(d,ycalendar)?null:'none');};drawing.hideOutsideRangePoints=function(traceGroups,subplot){if(!subplot._hasClipOnAxisFalse)return;var xa=subplot.xaxis;var ya=subplot.yaxis;traceGroups.each(function(d){var trace=d[0].trace;var xcalendar=trace.xcalendar;var ycalendar=trace.ycalendar;var selector=trace.type==='bar'?'.bartext':'.point,.textpoint';traceGroups.selectAll(selector).each(function(d){drawing.hideOutsideRangePoint(d,d3.select(this),xa,ya,xcalendar,ycalendar);});});};drawing.crispRound=function(gd,lineWidth,dflt){// for lines that disable antialiasing we want to\n// make sure the width is an integer, and at least 1 if it's nonzero\nif(!lineWidth||!isNumeric(lineWidth))return dflt||0;// but not for static plots - these don't get antialiased anyway.\nif(gd._context.staticPlot)return lineWidth;if(lineWidth<1)return 1;return Math.round(lineWidth);};drawing.singleLineStyle=function(d,s,lw,lc,ld){s.style('fill','none');var line=(((d||[])[0]||{}).trace||{}).line||{};var lw1=lw||line.width||0;var dash=ld||line.dash||'';Color.stroke(s,lc||line.color);drawing.dashLine(s,dash,lw1);};drawing.lineGroupStyle=function(s,lw,lc,ld){s.style('fill','none').each(function(d){var line=(((d||[])[0]||{}).trace||{}).line||{};var lw1=lw||line.width||0;var dash=ld||line.dash||'';d3.select(this).call(Color.stroke,lc||line.color).call(drawing.dashLine,dash,lw1);});};drawing.dashLine=function(s,dash,lineWidth){lineWidth=+lineWidth||0;dash=drawing.dashStyle(dash,lineWidth);s.style({'stroke-dasharray':dash,'stroke-width':lineWidth+'px'});};drawing.dashStyle=function(dash,lineWidth){lineWidth=+lineWidth||1;var dlw=Math.max(lineWidth,3);if(dash==='solid')dash='';else if(dash==='dot')dash=dlw+'px,'+dlw+'px';else if(dash==='dash')dash=3*dlw+'px,'+3*dlw+'px';else if(dash==='longdash')dash=5*dlw+'px,'+5*dlw+'px';else if(dash==='dashdot'){dash=3*dlw+'px,'+dlw+'px,'+dlw+'px,'+dlw+'px';}else if(dash==='longdashdot'){dash=5*dlw+'px,'+2*dlw+'px,'+dlw+'px,'+2*dlw+'px';}// otherwise user wrote the dasharray themselves - leave it be\nreturn dash;};// Same as fillGroupStyle, except in this case the selection may be a transition\ndrawing.singleFillStyle=function(sel){var node=d3.select(sel.node());var data=node.data();var fillcolor=(((data[0]||[])[0]||{}).trace||{}).fillcolor;if(fillcolor){sel.call(Color.fill,fillcolor);}};drawing.fillGroupStyle=function(s){s.style('stroke-width',0).each(function(d){var shape=d3.select(this);// N.B. 'd' won't be a calcdata item when\n// fill !== 'none' on a segment-less and marker-less trace\nif(d[0].trace){shape.call(Color.fill,d[0].trace.fillcolor);}});};var SYMBOLDEFS=_dereq_('./symbol_defs');drawing.symbolNames=[];drawing.symbolFuncs=[];drawing.symbolNeedLines={};drawing.symbolNoDot={};drawing.symbolNoFill={};drawing.symbolList=[];Object.keys(SYMBOLDEFS).forEach(function(k){var symDef=SYMBOLDEFS[k];drawing.symbolList=drawing.symbolList.concat([symDef.n,k,symDef.n+100,k+'-open']);drawing.symbolNames[symDef.n]=k;drawing.symbolFuncs[symDef.n]=symDef.f;if(symDef.needLine){drawing.symbolNeedLines[symDef.n]=true;}if(symDef.noDot){drawing.symbolNoDot[symDef.n]=true;}else{drawing.symbolList=drawing.symbolList.concat([symDef.n+200,k+'-dot',symDef.n+300,k+'-open-dot']);}if(symDef.noFill){drawing.symbolNoFill[symDef.n]=true;}});var MAXSYMBOL=drawing.symbolNames.length;// add a dot in the middle of the symbol\nvar DOTPATH='M0,0.5L0.5,0L0,-0.5L-0.5,0Z';drawing.symbolNumber=function(v){if(typeof v==='string'){var vbase=0;if(v.indexOf('-open')>0){vbase=100;v=v.replace('-open','');}if(v.indexOf('-dot')>0){vbase+=200;v=v.replace('-dot','');}v=drawing.symbolNames.indexOf(v);if(v>=0){v+=vbase;}}if(v%100>=MAXSYMBOL||v>=400){return 0;}return Math.floor(Math.max(v,0));};function makePointPath(symbolNumber,r){var base=symbolNumber%100;return drawing.symbolFuncs[base](r)+(symbolNumber>=200?DOTPATH:'');}var HORZGRADIENT={x1:1,x2:0,y1:0,y2:0};var VERTGRADIENT={x1:0,x2:0,y1:1,y2:0};var stopFormatter=d3.format('~.1f');var gradientInfo={radial:{node:'radialGradient'},radialreversed:{node:'radialGradient',reversed:true},horizontal:{node:'linearGradient',attrs:HORZGRADIENT},horizontalreversed:{node:'linearGradient',attrs:HORZGRADIENT,reversed:true},vertical:{node:'linearGradient',attrs:VERTGRADIENT},verticalreversed:{node:'linearGradient',attrs:VERTGRADIENT,reversed:true}};/**\n * gradient: create and apply a gradient fill\n *\n * @param {object} sel: d3 selection to apply this gradient to\n *     You can use `selection.call(Drawing.gradient, ...)`\n * @param {DOM element} gd: the graph div `sel` is part of\n * @param {string} gradientID: a unique (within this plot) identifier\n *     for this gradient, so that we don't create unnecessary definitions\n * @param {string} type: 'radial', 'horizontal', or 'vertical', optionally with\n *     'reversed' at the end. Normally radial goes center to edge,\n *     horizontal goes right to left, and vertical goes bottom to top\n * @param {array} colorscale: as in attribute values, [[fraction, color], ...]\n * @param {string} prop: the property to apply to, 'fill' or 'stroke'\n */drawing.gradient=function(sel,gd,gradientID,type,colorscale,prop){var len=colorscale.length;var info=gradientInfo[type];var colorStops=new Array(len);for(var i=0;i<len;i++){if(info.reversed){colorStops[len-1-i]=[stopFormatter((1-colorscale[i][0])*100),colorscale[i][1]];}else{colorStops[i]=[stopFormatter(colorscale[i][0]*100),colorscale[i][1]];}}var fullID='g'+gd._fullLayout._uid+'-'+gradientID;var gradient=gd._fullLayout._defs.select('.gradients').selectAll('#'+fullID).data([type+colorStops.join(';')],Lib.identity);gradient.exit().remove();gradient.enter().append(info.node).each(function(){var el=d3.select(this);if(info.attrs)el.attr(info.attrs);el.attr('id',fullID);var stops=el.selectAll('stop').data(colorStops);stops.exit().remove();stops.enter().append('stop');stops.each(function(d){var tc=tinycolor(d[1]);d3.select(this).attr({offset:d[0]+'%','stop-color':Color.tinyRGB(tc),'stop-opacity':tc.getAlpha()});});});sel.style(prop,'url(#'+fullID+')').style(prop+'-opacity',null);};/*\n * Make the gradients container and clear out any previous gradients.\n * We never collect all the gradients we need in one place,\n * so we can't ever remove gradients that have stopped being useful,\n * except all at once before a full redraw.\n * The upside of this is arbitrary points can share gradient defs\n */drawing.initGradients=function(gd){var gradientsGroup=Lib.ensureSingle(gd._fullLayout._defs,'g','gradients');gradientsGroup.selectAll('linearGradient,radialGradient').remove();};drawing.pointStyle=function(s,trace,gd){if(!s.size())return;var fns=drawing.makePointStyleFns(trace);s.each(function(d){drawing.singlePointStyle(d,d3.select(this),trace,fns,gd);});};drawing.singlePointStyle=function(d,sel,trace,fns,gd){var marker=trace.marker;var markerLine=marker.line;sel.style('opacity',fns.selectedOpacityFn?fns.selectedOpacityFn(d):d.mo===undefined?marker.opacity:d.mo);if(fns.ms2mrc){var r;// handle multi-trace graph edit case\nif(d.ms==='various'||marker.size==='various'){r=3;}else{r=fns.ms2mrc(d.ms);}// store the calculated size so hover can use it\nd.mrc=r;if(fns.selectedSizeFn){r=d.mrc=fns.selectedSizeFn(d);}// turn the symbol into a sanitized number\nvar x=drawing.symbolNumber(d.mx||marker.symbol)||0;// save if this marker is open\n// because that impacts how to handle colors\nd.om=x%200>=100;sel.attr('d',makePointPath(x,r));}var perPointGradient=false;var fillColor,lineColor,lineWidth;// 'so' is suspected outliers, for box plots\nif(d.so){lineWidth=markerLine.outlierwidth;lineColor=markerLine.outliercolor;fillColor=marker.outliercolor;}else{var markerLineWidth=(markerLine||{}).width;lineWidth=(d.mlw+1||markerLineWidth+1||// TODO: we need the latter for legends... can we get rid of it?\n(d.trace?(d.trace.marker.line||{}).width:0)+1)-1||0;if('mlc'in d)lineColor=d.mlcc=fns.lineScale(d.mlc);// weird case: array wasn't long enough to apply to every point\nelse if(Lib.isArrayOrTypedArray(markerLine.color))lineColor=Color.defaultLine;else lineColor=markerLine.color;if(Lib.isArrayOrTypedArray(marker.color)){fillColor=Color.defaultLine;perPointGradient=true;}if('mc'in d){fillColor=d.mcc=fns.markerScale(d.mc);}else{fillColor=marker.color||'rgba(0,0,0,0)';}if(fns.selectedColorFn){fillColor=fns.selectedColorFn(d);}}if(d.om){// open markers can't have zero linewidth, default to 1px,\n// and use fill color as stroke color\nsel.call(Color.stroke,fillColor).style({'stroke-width':(lineWidth||1)+'px',fill:'none'});}else{sel.style('stroke-width',lineWidth+'px');var markerGradient=marker.gradient;var gradientType=d.mgt;if(gradientType)perPointGradient=true;else gradientType=markerGradient&&markerGradient.type;// for legend - arrays will propagate through here, but we don't need\n// to treat it as per-point.\nif(Array.isArray(gradientType)){gradientType=gradientType[0];if(!gradientInfo[gradientType])gradientType=0;}if(gradientType&&gradientType!=='none'){var gradientColor=d.mgc;if(gradientColor)perPointGradient=true;else gradientColor=markerGradient.color;var gradientID=trace.uid;if(perPointGradient)gradientID+='-'+d.i;drawing.gradient(sel,gd,gradientID,gradientType,[[0,gradientColor],[1,fillColor]],'fill');}else{Color.fill(sel,fillColor);}if(lineWidth){Color.stroke(sel,lineColor);}}};drawing.makePointStyleFns=function(trace){var out={};var marker=trace.marker;// allow array marker and marker line colors to be\n// scaled by given max and min to colorscales\nout.markerScale=drawing.tryColorscale(marker,'');out.lineScale=drawing.tryColorscale(marker,'line');if(Registry.traceIs(trace,'symbols')){out.ms2mrc=subTypes.isBubble(trace)?makeBubbleSizeFn(trace):function(){return(marker.size||6)/2;};}if(trace.selectedpoints){Lib.extendFlat(out,drawing.makeSelectedPointStyleFns(trace));}return out;};drawing.makeSelectedPointStyleFns=function(trace){var out={};var selectedAttrs=trace.selected||{};var unselectedAttrs=trace.unselected||{};var marker=trace.marker||{};var selectedMarker=selectedAttrs.marker||{};var unselectedMarker=unselectedAttrs.marker||{};var mo=marker.opacity;var smo=selectedMarker.opacity;var usmo=unselectedMarker.opacity;var smoIsDefined=smo!==undefined;var usmoIsDefined=usmo!==undefined;if(Lib.isArrayOrTypedArray(mo)||smoIsDefined||usmoIsDefined){out.selectedOpacityFn=function(d){var base=d.mo===undefined?marker.opacity:d.mo;if(d.selected){return smoIsDefined?smo:base;}else{return usmoIsDefined?usmo:DESELECTDIM*base;}};}var mc=marker.color;var smc=selectedMarker.color;var usmc=unselectedMarker.color;if(smc||usmc){out.selectedColorFn=function(d){var base=d.mcc||mc;if(d.selected){return smc||base;}else{return usmc||base;}};}var ms=marker.size;var sms=selectedMarker.size;var usms=unselectedMarker.size;var smsIsDefined=sms!==undefined;var usmsIsDefined=usms!==undefined;if(Registry.traceIs(trace,'symbols')&&(smsIsDefined||usmsIsDefined)){out.selectedSizeFn=function(d){var base=d.mrc||ms/2;if(d.selected){return smsIsDefined?sms/2:base;}else{return usmsIsDefined?usms/2:base;}};}return out;};drawing.makeSelectedTextStyleFns=function(trace){var out={};var selectedAttrs=trace.selected||{};var unselectedAttrs=trace.unselected||{};var textFont=trace.textfont||{};var selectedTextFont=selectedAttrs.textfont||{};var unselectedTextFont=unselectedAttrs.textfont||{};var tc=textFont.color;var stc=selectedTextFont.color;var utc=unselectedTextFont.color;out.selectedTextColorFn=function(d){var base=d.tc||tc;if(d.selected){return stc||base;}else{if(utc)return utc;else return stc?base:Color.addOpacity(base,DESELECTDIM);}};return out;};drawing.selectedPointStyle=function(s,trace){if(!s.size()||!trace.selectedpoints)return;var fns=drawing.makeSelectedPointStyleFns(trace);var marker=trace.marker||{};var seq=[];if(fns.selectedOpacityFn){seq.push(function(pt,d){pt.style('opacity',fns.selectedOpacityFn(d));});}if(fns.selectedColorFn){seq.push(function(pt,d){Color.fill(pt,fns.selectedColorFn(d));});}if(fns.selectedSizeFn){seq.push(function(pt,d){var mx=d.mx||marker.symbol||0;var mrc2=fns.selectedSizeFn(d);pt.attr('d',makePointPath(drawing.symbolNumber(mx),mrc2));// save for Drawing.selectedTextStyle\nd.mrc2=mrc2;});}if(seq.length){s.each(function(d){var pt=d3.select(this);for(var i=0;i<seq.length;i++){seq[i](pt,d);}});}};drawing.tryColorscale=function(marker,prefix){var cont=prefix?Lib.nestedProperty(marker,prefix).get():marker;if(cont){var scl=cont.colorscale;var colorArray=cont.color;if(scl&&Lib.isArrayOrTypedArray(colorArray)){return Colorscale.makeColorScaleFunc(Colorscale.extractScale(cont,{cLetter:'c'}));}}return Lib.identity;};var TEXTOFFSETSIGN={start:1,end:-1,middle:0,bottom:1,top:-1};function textPointPosition(s,textPosition,fontSize,markerRadius){var group=d3.select(s.node().parentNode);var v=textPosition.indexOf('top')!==-1?'top':textPosition.indexOf('bottom')!==-1?'bottom':'middle';var h=textPosition.indexOf('left')!==-1?'end':textPosition.indexOf('right')!==-1?'start':'middle';// if markers are shown, offset a little more than\n// the nominal marker size\n// ie 2/1.6 * nominal, bcs some markers are a bit bigger\nvar r=markerRadius?markerRadius/0.8+1:0;var numLines=(svgTextUtils.lineCount(s)-1)*LINE_SPACING+1;var dx=TEXTOFFSETSIGN[h]*r;var dy=fontSize*0.75+TEXTOFFSETSIGN[v]*r+(TEXTOFFSETSIGN[v]-1)*numLines*fontSize/2;// fix the overall text group position\ns.attr('text-anchor',h);group.attr('transform','translate('+dx+','+dy+')');}function extracTextFontSize(d,trace){var fontSize=d.ts||trace.textfont.size;return isNumeric(fontSize)&&fontSize>0?fontSize:0;}// draw text at points\ndrawing.textPointStyle=function(s,trace,gd){if(!s.size())return;var selectedTextColorFn;if(trace.selectedpoints){var fns=drawing.makeSelectedTextStyleFns(trace);selectedTextColorFn=fns.selectedTextColorFn;}s.each(function(d){var p=d3.select(this);var text=Lib.extractOption(d,trace,'tx','text');if(!text&&text!==0){p.remove();return;}var pos=d.tp||trace.textposition;var fontSize=extracTextFontSize(d,trace);var fontColor=selectedTextColorFn?selectedTextColorFn(d):d.tc||trace.textfont.color;p.call(drawing.font,d.tf||trace.textfont.family,fontSize,fontColor).text(text).call(svgTextUtils.convertToTspans,gd).call(textPointPosition,pos,fontSize,d.mrc);});};drawing.selectedTextStyle=function(s,trace){if(!s.size()||!trace.selectedpoints)return;var fns=drawing.makeSelectedTextStyleFns(trace);s.each(function(d){var tx=d3.select(this);var tc=fns.selectedTextColorFn(d);var tp=d.tp||trace.textposition;var fontSize=extracTextFontSize(d,trace);Color.fill(tx,tc);textPointPosition(tx,tp,fontSize,d.mrc2||d.mrc);});};// generalized Catmull-Rom splines, per\n// http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\nvar CatmullRomExp=0.5;drawing.smoothopen=function(pts,smoothness){if(pts.length<3){return'M'+pts.join('L');}var path='M'+pts[0];var tangents=[];var i;for(i=1;i<pts.length-1;i++){tangents.push(makeTangent(pts[i-1],pts[i],pts[i+1],smoothness));}path+='Q'+tangents[0][0]+' '+pts[1];for(i=2;i<pts.length-1;i++){path+='C'+tangents[i-2][1]+' '+tangents[i-1][0]+' '+pts[i];}path+='Q'+tangents[pts.length-3][1]+' '+pts[pts.length-1];return path;};drawing.smoothclosed=function(pts,smoothness){if(pts.length<3){return'M'+pts.join('L')+'Z';}var path='M'+pts[0];var pLast=pts.length-1;var tangents=[makeTangent(pts[pLast],pts[0],pts[1],smoothness)];var i;for(i=1;i<pLast;i++){tangents.push(makeTangent(pts[i-1],pts[i],pts[i+1],smoothness));}tangents.push(makeTangent(pts[pLast-1],pts[pLast],pts[0],smoothness));for(i=1;i<=pLast;i++){path+='C'+tangents[i-1][1]+' '+tangents[i][0]+' '+pts[i];}path+='C'+tangents[pLast][1]+' '+tangents[0][0]+' '+pts[0]+'Z';return path;};function makeTangent(prevpt,thispt,nextpt,smoothness){var d1x=prevpt[0]-thispt[0];var d1y=prevpt[1]-thispt[1];var d2x=nextpt[0]-thispt[0];var d2y=nextpt[1]-thispt[1];var d1a=Math.pow(d1x*d1x+d1y*d1y,CatmullRomExp/2);var d2a=Math.pow(d2x*d2x+d2y*d2y,CatmullRomExp/2);var numx=(d2a*d2a*d1x-d1a*d1a*d2x)*smoothness;var numy=(d2a*d2a*d1y-d1a*d1a*d2y)*smoothness;var denom1=3*d2a*(d1a+d2a);var denom2=3*d1a*(d1a+d2a);return[[d3.round(thispt[0]+(denom1&&numx/denom1),2),d3.round(thispt[1]+(denom1&&numy/denom1),2)],[d3.round(thispt[0]-(denom2&&numx/denom2),2),d3.round(thispt[1]-(denom2&&numy/denom2),2)]];}// step paths - returns a generator function for paths\n// with the given step shape\nvar STEPPATH={hv:function hv(p0,p1){return'H'+d3.round(p1[0],2)+'V'+d3.round(p1[1],2);},vh:function vh(p0,p1){return'V'+d3.round(p1[1],2)+'H'+d3.round(p1[0],2);},hvh:function hvh(p0,p1){return'H'+d3.round((p0[0]+p1[0])/2,2)+'V'+d3.round(p1[1],2)+'H'+d3.round(p1[0],2);},vhv:function vhv(p0,p1){return'V'+d3.round((p0[1]+p1[1])/2,2)+'H'+d3.round(p1[0],2)+'V'+d3.round(p1[1],2);}};var STEPLINEAR=function STEPLINEAR(p0,p1){return'L'+d3.round(p1[0],2)+','+d3.round(p1[1],2);};drawing.steps=function(shape){var onestep=STEPPATH[shape]||STEPLINEAR;return function(pts){var path='M'+d3.round(pts[0][0],2)+','+d3.round(pts[0][1],2);for(var i=1;i<pts.length;i++){path+=onestep(pts[i-1],pts[i]);}return path;};};// off-screen svg render testing element, shared by the whole page\n// uses the id 'js-plotly-tester' and stores it in drawing.tester\ndrawing.makeTester=function(){var tester=Lib.ensureSingleById(d3.select('body'),'svg','js-plotly-tester',function(s){s.attr(xmlnsNamespaces.svgAttrs).style({position:'absolute',left:'-10000px',top:'-10000px',width:'9000px',height:'9000px','z-index':'1'});});// browsers differ on how they describe the bounding rect of\n// the svg if its contents spill over... so make a 1x1px\n// reference point we can measure off of.\nvar testref=Lib.ensureSingle(tester,'path','js-reference-point',function(s){s.attr('d','M0,0H1V1H0Z').style({'stroke-width':0,fill:'black'});});drawing.tester=tester;drawing.testref=testref;};/*\n * use our offscreen tester to get a clientRect for an element,\n * in a reference frame where it isn't translated (or transformed) and\n * its anchor point is at (0,0)\n * always returns a copy of the bbox, so the caller can modify it safely\n *\n * @param {SVGElement} node: the element to measure. If possible this should be\n *   a <text> or MathJax <g> element that's already passed through\n *   `convertToTspans` because in that case we can cache the results, but it's\n *   possible to pass in any svg element.\n *\n * @param {boolean} inTester: is this element already in `drawing.tester`?\n *   If you are measuring a dummy element, rather than one you really intend\n *   to use on the plot, making it in `drawing.tester` in the first place\n *   allows us to test faster because it cuts out cloning and appending it.\n *\n * @param {string} hash: for internal use only, if we already know the cache key\n *   for this element beforehand.\n *\n * @return {object}: a plain object containing the width, height, left, right,\n *   top, and bottom of `node`\n */drawing.savedBBoxes={};var savedBBoxesCount=0;var maxSavedBBoxes=10000;drawing.bBox=function(node,inTester,hash){/*\n     * Cache elements we've already measured so we don't have to\n     * remeasure the same thing many times\n     * We have a few bBox callers though who pass a node larger than\n     * a <text> or a MathJax <g>, such as an axis group containing many labels.\n     * These will not generate a hash (unless we figure out an appropriate\n     * hash key for them) and thus we will not hash them.\n     */if(!hash)hash=nodeHash(node);var out;if(hash){out=drawing.savedBBoxes[hash];if(out)return Lib.extendFlat({},out);}else if(node.childNodes.length===1){/*\n         * If we have only one child element, which is itself hashable, make\n         * a new hash from this element plus its x,y,transform\n         * These bounding boxes *include* x,y,transform - mostly for use by\n         * callers trying to avoid overlaps (ie titles)\n         */var innerNode=node.childNodes[0];hash=nodeHash(innerNode);if(hash){var x=+innerNode.getAttribute('x')||0;var y=+innerNode.getAttribute('y')||0;var transform=innerNode.getAttribute('transform');if(!transform){// in this case, just varying x and y, don't bother caching\n// the final bBox because the alteration is quick.\nvar innerBB=drawing.bBox(innerNode,false,hash);if(x){innerBB.left+=x;innerBB.right+=x;}if(y){innerBB.top+=y;innerBB.bottom+=y;}return innerBB;}/*\n             * else we have a transform - rather than make a complicated\n             * (and error-prone and probably slow) transform parser/calculator,\n             * just continue on calculating the boundingClientRect of the group\n             * and use the new composite hash to cache it.\n             * That said, `innerNode.transform.baseVal` is an array of\n             * `SVGTransform` objects, that *do* seem to have a nice matrix\n             * multiplication interface that we could use to avoid making\n             * another getBoundingClientRect call...\n             */hash+='~'+x+'~'+y+'~'+transform;out=drawing.savedBBoxes[hash];if(out)return Lib.extendFlat({},out);}}var testNode,tester;if(inTester){testNode=node;}else{tester=drawing.tester.node();// copy the node to test into the tester\ntestNode=node.cloneNode(true);tester.appendChild(testNode);}// standardize its position (and newline tspans if any)\nd3.select(testNode).attr('transform',null).call(svgTextUtils.positionText,0,0);var testRect=testNode.getBoundingClientRect();var refRect=drawing.testref.node().getBoundingClientRect();if(!inTester)tester.removeChild(testNode);var bb={height:testRect.height,width:testRect.width,left:testRect.left-refRect.left,top:testRect.top-refRect.top,right:testRect.right-refRect.left,bottom:testRect.bottom-refRect.top};// make sure we don't have too many saved boxes,\n// or a long session could overload on memory\n// by saving boxes for long-gone elements\nif(savedBBoxesCount>=maxSavedBBoxes){drawing.savedBBoxes={};savedBBoxesCount=0;}// cache this bbox\nif(hash)drawing.savedBBoxes[hash]=bb;savedBBoxesCount++;return Lib.extendFlat({},bb);};// capture everything about a node (at least in our usage) that\n// impacts its bounding box, given that bBox clears x, y, and transform\nfunction nodeHash(node){var inputText=node.getAttribute('data-unformatted');if(inputText===null)return;return inputText+node.getAttribute('data-math')+node.getAttribute('text-anchor')+node.getAttribute('style');}/**\n * Set clipPath URL in a way that work for all situations.\n *\n * In details, graphs on pages with <base> HTML tags need to prepend\n * the clip path ids with the page's base url EXCEPT during toImage exports.\n *\n * @param {d3 selection} s : node to add clip-path attribute\n * @param {string} localId : local clip-path (w/o base url) id\n * @param {DOM element || object} gd\n * - context._baseUrl {string}\n * - context._exportedPlot {boolean}\n */drawing.setClipUrl=function(s,localId,gd){if(!localId){s.attr('clip-path',null);return;}var context=gd._context;var baseUrl=context._exportedPlot?'':context._baseUrl||'';s.attr('clip-path','url('+baseUrl+'#'+localId+')');};drawing.getTranslate=function(element){// Note the separator [^\\d] between x and y in this regex\n// We generally use ',' but IE will convert it to ' '\nvar re=/.*\\btranslate\\((-?\\d*\\.?\\d*)[^-\\d]*(-?\\d*\\.?\\d*)[^\\d].*/;var getter=element.attr?'attr':'getAttribute';var transform=element[getter]('transform')||'';var translate=transform.replace(re,function(match,p1,p2){return[p1,p2].join(' ');}).split(' ');return{x:+translate[0]||0,y:+translate[1]||0};};drawing.setTranslate=function(element,x,y){var re=/(\\btranslate\\(.*?\\);?)/;var getter=element.attr?'attr':'getAttribute';var setter=element.attr?'attr':'setAttribute';var transform=element[getter]('transform')||'';x=x||0;y=y||0;transform=transform.replace(re,'').trim();transform+=' translate('+x+', '+y+')';transform=transform.trim();element[setter]('transform',transform);return transform;};drawing.getScale=function(element){var re=/.*\\bscale\\((\\d*\\.?\\d*)[^\\d]*(\\d*\\.?\\d*)[^\\d].*/;var getter=element.attr?'attr':'getAttribute';var transform=element[getter]('transform')||'';var translate=transform.replace(re,function(match,p1,p2){return[p1,p2].join(' ');}).split(' ');return{x:+translate[0]||1,y:+translate[1]||1};};drawing.setScale=function(element,x,y){var re=/(\\bscale\\(.*?\\);?)/;var getter=element.attr?'attr':'getAttribute';var setter=element.attr?'attr':'setAttribute';var transform=element[getter]('transform')||'';x=x||1;y=y||1;transform=transform.replace(re,'').trim();transform+=' scale('+x+', '+y+')';transform=transform.trim();element[setter]('transform',transform);return transform;};var SCALE_RE=/\\s*sc.*/;drawing.setPointGroupScale=function(selection,xScale,yScale){xScale=xScale||1;yScale=yScale||1;if(!selection)return;// The same scale transform for every point:\nvar scale=xScale===1&&yScale===1?'':' scale('+xScale+','+yScale+')';selection.each(function(){var t=(this.getAttribute('transform')||'').replace(SCALE_RE,'');t+=scale;t=t.trim();this.setAttribute('transform',t);});};var TEXT_POINT_LAST_TRANSLATION_RE=/translate\\([^)]*\\)\\s*$/;drawing.setTextPointsScale=function(selection,xScale,yScale){if(!selection)return;selection.each(function(){var transforms;var el=d3.select(this);var text=el.select('text');if(!text.node())return;var x=parseFloat(text.attr('x')||0);var y=parseFloat(text.attr('y')||0);var existingTransform=(el.attr('transform')||'').match(TEXT_POINT_LAST_TRANSLATION_RE);if(xScale===1&&yScale===1){transforms=[];}else{transforms=['translate('+x+','+y+')','scale('+xScale+','+yScale+')','translate('+-x+','+-y+')'];}if(existingTransform){transforms.push(existingTransform);}el.attr('transform',transforms.join(' '));});};},{\"../../constants/alignment\":394,\"../../constants/interactions\":397,\"../../constants/xmlns_namespaces\":399,\"../../lib\":423,\"../../lib/svg_text_utils\":446,\"../../registry\":521,\"../../traces/scatter/make_bubble_size_func\":550,\"../../traces/scatter/subtypes\":557,\"../color\":299,\"../colorscale\":311,\"./symbol_defs\":321,\"d3\":71,\"fast-isnumeric\":80,\"tinycolor2\":264}],321:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');/** Marker symbol definitions\n * users can specify markers either by number or name\n * add 100 (or '-open') and you get an open marker\n *  open markers have no fill and use line color as the stroke color\n * add 200 (or '-dot') and you get a dot in the middle\n * add both and you get both\n */module.exports={circle:{n:0,f:function f(r){var rs=d3.round(r,2);return'M'+rs+',0A'+rs+','+rs+' 0 1,1 0,-'+rs+'A'+rs+','+rs+' 0 0,1 '+rs+',0Z';}},square:{n:1,f:function f(r){var rs=d3.round(r,2);return'M'+rs+','+rs+'H-'+rs+'V-'+rs+'H'+rs+'Z';}},diamond:{n:2,f:function f(r){var rd=d3.round(r*1.3,2);return'M'+rd+',0L0,'+rd+'L-'+rd+',0L0,-'+rd+'Z';}},cross:{n:3,f:function f(r){var rc=d3.round(r*0.4,2);var rc2=d3.round(r*1.2,2);return'M'+rc2+','+rc+'H'+rc+'V'+rc2+'H-'+rc+'V'+rc+'H-'+rc2+'V-'+rc+'H-'+rc+'V-'+rc2+'H'+rc+'V-'+rc+'H'+rc2+'Z';}},x:{n:4,f:function f(r){var rx=d3.round(r*0.8/Math.sqrt(2),2);var ne='l'+rx+','+rx;var se='l'+rx+',-'+rx;var sw='l-'+rx+',-'+rx;var nw='l-'+rx+','+rx;return'M0,'+rx+ne+se+sw+se+sw+nw+sw+nw+ne+nw+ne+'Z';}},'triangle-up':{n:5,f:function f(r){var rt=d3.round(r*2/Math.sqrt(3),2);var r2=d3.round(r/2,2);var rs=d3.round(r,2);return'M-'+rt+','+r2+'H'+rt+'L0,-'+rs+'Z';}},'triangle-down':{n:6,f:function f(r){var rt=d3.round(r*2/Math.sqrt(3),2);var r2=d3.round(r/2,2);var rs=d3.round(r,2);return'M-'+rt+',-'+r2+'H'+rt+'L0,'+rs+'Z';}},'triangle-left':{n:7,f:function f(r){var rt=d3.round(r*2/Math.sqrt(3),2);var r2=d3.round(r/2,2);var rs=d3.round(r,2);return'M'+r2+',-'+rt+'V'+rt+'L-'+rs+',0Z';}},'triangle-right':{n:8,f:function f(r){var rt=d3.round(r*2/Math.sqrt(3),2);var r2=d3.round(r/2,2);var rs=d3.round(r,2);return'M-'+r2+',-'+rt+'V'+rt+'L'+rs+',0Z';}},'triangle-ne':{n:9,f:function f(r){var r1=d3.round(r*0.6,2);var r2=d3.round(r*1.2,2);return'M-'+r2+',-'+r1+'H'+r1+'V'+r2+'Z';}},'triangle-se':{n:10,f:function f(r){var r1=d3.round(r*0.6,2);var r2=d3.round(r*1.2,2);return'M'+r1+',-'+r2+'V'+r1+'H-'+r2+'Z';}},'triangle-sw':{n:11,f:function f(r){var r1=d3.round(r*0.6,2);var r2=d3.round(r*1.2,2);return'M'+r2+','+r1+'H-'+r1+'V-'+r2+'Z';}},'triangle-nw':{n:12,f:function f(r){var r1=d3.round(r*0.6,2);var r2=d3.round(r*1.2,2);return'M-'+r1+','+r2+'V-'+r1+'H'+r2+'Z';}},pentagon:{n:13,f:function f(r){var x1=d3.round(r*0.951,2);var x2=d3.round(r*0.588,2);var y0=d3.round(-r,2);var y1=d3.round(r*-0.309,2);var y2=d3.round(r*0.809,2);return'M'+x1+','+y1+'L'+x2+','+y2+'H-'+x2+'L-'+x1+','+y1+'L0,'+y0+'Z';}},hexagon:{n:14,f:function f(r){var y0=d3.round(r,2);var y1=d3.round(r/2,2);var x=d3.round(r*Math.sqrt(3)/2,2);return'M'+x+',-'+y1+'V'+y1+'L0,'+y0+'L-'+x+','+y1+'V-'+y1+'L0,-'+y0+'Z';}},hexagon2:{n:15,f:function f(r){var x0=d3.round(r,2);var x1=d3.round(r/2,2);var y=d3.round(r*Math.sqrt(3)/2,2);return'M-'+x1+','+y+'H'+x1+'L'+x0+',0L'+x1+',-'+y+'H-'+x1+'L-'+x0+',0Z';}},octagon:{n:16,f:function f(r){var a=d3.round(r*0.924,2);var b=d3.round(r*0.383,2);return'M-'+b+',-'+a+'H'+b+'L'+a+',-'+b+'V'+b+'L'+b+','+a+'H-'+b+'L-'+a+','+b+'V-'+b+'Z';}},star:{n:17,f:function f(r){var rs=r*1.4;var x1=d3.round(rs*0.225,2);var x2=d3.round(rs*0.951,2);var x3=d3.round(rs*0.363,2);var x4=d3.round(rs*0.588,2);var y0=d3.round(-rs,2);var y1=d3.round(rs*-0.309,2);var y3=d3.round(rs*0.118,2);var y4=d3.round(rs*0.809,2);var y5=d3.round(rs*0.382,2);return'M'+x1+','+y1+'H'+x2+'L'+x3+','+y3+'L'+x4+','+y4+'L0,'+y5+'L-'+x4+','+y4+'L-'+x3+','+y3+'L-'+x2+','+y1+'H-'+x1+'L0,'+y0+'Z';}},hexagram:{n:18,f:function f(r){var y=d3.round(r*0.66,2);var x1=d3.round(r*0.38,2);var x2=d3.round(r*0.76,2);return'M-'+x2+',0l-'+x1+',-'+y+'h'+x2+'l'+x1+',-'+y+'l'+x1+','+y+'h'+x2+'l-'+x1+','+y+'l'+x1+','+y+'h-'+x2+'l-'+x1+','+y+'l-'+x1+',-'+y+'h-'+x2+'Z';}},'star-triangle-up':{n:19,f:function f(r){var x=d3.round(r*Math.sqrt(3)*0.8,2);var y1=d3.round(r*0.8,2);var y2=d3.round(r*1.6,2);var rc=d3.round(r*4,2);var aPart='A '+rc+','+rc+' 0 0 1 ';return'M-'+x+','+y1+aPart+x+','+y1+aPart+'0,-'+y2+aPart+'-'+x+','+y1+'Z';}},'star-triangle-down':{n:20,f:function f(r){var x=d3.round(r*Math.sqrt(3)*0.8,2);var y1=d3.round(r*0.8,2);var y2=d3.round(r*1.6,2);var rc=d3.round(r*4,2);var aPart='A '+rc+','+rc+' 0 0 1 ';return'M'+x+',-'+y1+aPart+'-'+x+',-'+y1+aPart+'0,'+y2+aPart+x+',-'+y1+'Z';}},'star-square':{n:21,f:function f(r){var rp=d3.round(r*1.1,2);var rc=d3.round(r*2,2);var aPart='A '+rc+','+rc+' 0 0 1 ';return'M-'+rp+',-'+rp+aPart+'-'+rp+','+rp+aPart+rp+','+rp+aPart+rp+',-'+rp+aPart+'-'+rp+',-'+rp+'Z';}},'star-diamond':{n:22,f:function f(r){var rp=d3.round(r*1.4,2);var rc=d3.round(r*1.9,2);var aPart='A '+rc+','+rc+' 0 0 1 ';return'M-'+rp+',0'+aPart+'0,'+rp+aPart+rp+',0'+aPart+'0,-'+rp+aPart+'-'+rp+',0'+'Z';}},'diamond-tall':{n:23,f:function f(r){var x=d3.round(r*0.7,2);var y=d3.round(r*1.4,2);return'M0,'+y+'L'+x+',0L0,-'+y+'L-'+x+',0Z';}},'diamond-wide':{n:24,f:function f(r){var x=d3.round(r*1.4,2);var y=d3.round(r*0.7,2);return'M0,'+y+'L'+x+',0L0,-'+y+'L-'+x+',0Z';}},hourglass:{n:25,f:function f(r){var rs=d3.round(r,2);return'M'+rs+','+rs+'H-'+rs+'L'+rs+',-'+rs+'H-'+rs+'Z';},noDot:true},bowtie:{n:26,f:function f(r){var rs=d3.round(r,2);return'M'+rs+','+rs+'V-'+rs+'L-'+rs+','+rs+'V-'+rs+'Z';},noDot:true},'circle-cross':{n:27,f:function f(r){var rs=d3.round(r,2);return'M0,'+rs+'V-'+rs+'M'+rs+',0H-'+rs+'M'+rs+',0A'+rs+','+rs+' 0 1,1 0,-'+rs+'A'+rs+','+rs+' 0 0,1 '+rs+',0Z';},needLine:true,noDot:true},'circle-x':{n:28,f:function f(r){var rs=d3.round(r,2);var rc=d3.round(r/Math.sqrt(2),2);return'M'+rc+','+rc+'L-'+rc+',-'+rc+'M'+rc+',-'+rc+'L-'+rc+','+rc+'M'+rs+',0A'+rs+','+rs+' 0 1,1 0,-'+rs+'A'+rs+','+rs+' 0 0,1 '+rs+',0Z';},needLine:true,noDot:true},'square-cross':{n:29,f:function f(r){var rs=d3.round(r,2);return'M0,'+rs+'V-'+rs+'M'+rs+',0H-'+rs+'M'+rs+','+rs+'H-'+rs+'V-'+rs+'H'+rs+'Z';},needLine:true,noDot:true},'square-x':{n:30,f:function f(r){var rs=d3.round(r,2);return'M'+rs+','+rs+'L-'+rs+',-'+rs+'M'+rs+',-'+rs+'L-'+rs+','+rs+'M'+rs+','+rs+'H-'+rs+'V-'+rs+'H'+rs+'Z';},needLine:true,noDot:true},'diamond-cross':{n:31,f:function f(r){var rd=d3.round(r*1.3,2);return'M'+rd+',0L0,'+rd+'L-'+rd+',0L0,-'+rd+'Z'+'M0,-'+rd+'V'+rd+'M-'+rd+',0H'+rd;},needLine:true,noDot:true},'diamond-x':{n:32,f:function f(r){var rd=d3.round(r*1.3,2);var r2=d3.round(r*0.65,2);return'M'+rd+',0L0,'+rd+'L-'+rd+',0L0,-'+rd+'Z'+'M-'+r2+',-'+r2+'L'+r2+','+r2+'M-'+r2+','+r2+'L'+r2+',-'+r2;},needLine:true,noDot:true},'cross-thin':{n:33,f:function f(r){var rc=d3.round(r*1.4,2);return'M0,'+rc+'V-'+rc+'M'+rc+',0H-'+rc;},needLine:true,noDot:true,noFill:true},'x-thin':{n:34,f:function f(r){var rx=d3.round(r,2);return'M'+rx+','+rx+'L-'+rx+',-'+rx+'M'+rx+',-'+rx+'L-'+rx+','+rx;},needLine:true,noDot:true,noFill:true},asterisk:{n:35,f:function f(r){var rc=d3.round(r*1.2,2);var rs=d3.round(r*0.85,2);return'M0,'+rc+'V-'+rc+'M'+rc+',0H-'+rc+'M'+rs+','+rs+'L-'+rs+',-'+rs+'M'+rs+',-'+rs+'L-'+rs+','+rs;},needLine:true,noDot:true,noFill:true},hash:{n:36,f:function f(r){var r1=d3.round(r/2,2);var r2=d3.round(r,2);return'M'+r1+','+r2+'V-'+r2+'m-'+r2+',0V'+r2+'M'+r2+','+r1+'H-'+r2+'m0,-'+r2+'H'+r2;},needLine:true,noFill:true},'y-up':{n:37,f:function f(r){var x=d3.round(r*1.2,2);var y0=d3.round(r*1.6,2);var y1=d3.round(r*0.8,2);return'M-'+x+','+y1+'L0,0M'+x+','+y1+'L0,0M0,-'+y0+'L0,0';},needLine:true,noDot:true,noFill:true},'y-down':{n:38,f:function f(r){var x=d3.round(r*1.2,2);var y0=d3.round(r*1.6,2);var y1=d3.round(r*0.8,2);return'M-'+x+',-'+y1+'L0,0M'+x+',-'+y1+'L0,0M0,'+y0+'L0,0';},needLine:true,noDot:true,noFill:true},'y-left':{n:39,f:function f(r){var y=d3.round(r*1.2,2);var x0=d3.round(r*1.6,2);var x1=d3.round(r*0.8,2);return'M'+x1+','+y+'L0,0M'+x1+',-'+y+'L0,0M-'+x0+',0L0,0';},needLine:true,noDot:true,noFill:true},'y-right':{n:40,f:function f(r){var y=d3.round(r*1.2,2);var x0=d3.round(r*1.6,2);var x1=d3.round(r*0.8,2);return'M-'+x1+','+y+'L0,0M-'+x1+',-'+y+'L0,0M'+x0+',0L0,0';},needLine:true,noDot:true,noFill:true},'line-ew':{n:41,f:function f(r){var rc=d3.round(r*1.4,2);return'M'+rc+',0H-'+rc;},needLine:true,noDot:true,noFill:true},'line-ns':{n:42,f:function f(r){var rc=d3.round(r*1.4,2);return'M0,'+rc+'V-'+rc;},needLine:true,noDot:true,noFill:true},'line-ne':{n:43,f:function f(r){var rx=d3.round(r,2);return'M'+rx+',-'+rx+'L-'+rx+','+rx;},needLine:true,noDot:true,noFill:true},'line-nw':{n:44,f:function f(r){var rx=d3.round(r,2);return'M'+rx+','+rx+'L-'+rx+',-'+rx;},needLine:true,noDot:true,noFill:true}};},{\"d3\":71}],322:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={visible:{valType:'boolean',editType:'calc'},type:{valType:'enumerated',values:['percent','constant','sqrt','data'],editType:'calc'},symmetric:{valType:'boolean',editType:'calc'},array:{valType:'data_array',editType:'calc'},arrayminus:{valType:'data_array',editType:'calc'},value:{valType:'number',min:0,dflt:10,editType:'calc'},valueminus:{valType:'number',min:0,dflt:10,editType:'calc'},traceref:{valType:'integer',min:0,dflt:0,editType:'style'},tracerefminus:{valType:'integer',min:0,dflt:0,editType:'style'},copy_ystyle:{valType:'boolean',editType:'plot'},copy_zstyle:{valType:'boolean',editType:'style'},color:{valType:'color',editType:'style'},thickness:{valType:'number',min:0,dflt:2,editType:'style'},width:{valType:'number',min:0,editType:'plot'},editType:'calc',_deprecated:{opacity:{valType:'number',editType:'style'}}};},{}],323:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var Registry=_dereq_('../../registry');var Axes=_dereq_('../../plots/cartesian/axes');var makeComputeError=_dereq_('./compute_error');module.exports=function calc(gd){var calcdata=gd.calcdata;for(var i=0;i<calcdata.length;i++){var calcTrace=calcdata[i];var trace=calcTrace[0].trace;if(trace.visible===true&&Registry.traceIs(trace,'errorBarsOK')){var xa=Axes.getFromId(gd,trace.xaxis);var ya=Axes.getFromId(gd,trace.yaxis);calcOneAxis(calcTrace,trace,xa,'x');calcOneAxis(calcTrace,trace,ya,'y');}}};function calcOneAxis(calcTrace,trace,axis,coord){var opts=trace['error_'+coord]||{};var isVisible=opts.visible&&['linear','log'].indexOf(axis.type)!==-1;var vals=[];if(!isVisible)return;var computeError=makeComputeError(opts);for(var i=0;i<calcTrace.length;i++){var calcPt=calcTrace[i];var iIn=calcPt.i;// for types that don't include `i` in each calcdata point\nif(iIn===undefined)iIn=i;// for stacked area inserted points\n// TODO: errorbars have been tested cursorily with stacked area,\n// but not thoroughly. It's not even really clear what you want to do:\n// Should it just be calculated based on that trace's size data?\n// Should you add errors from below in quadrature?\n// And what about normalization, where in principle the errors shrink\n// again when you get up to the top end?\n// One option would be to forbid errorbars with stacking until we\n// decide how to handle these questions.\nelse if(iIn===null)continue;var calcCoord=calcPt[coord];if(!isNumeric(axis.c2l(calcCoord)))continue;var errors=computeError(calcCoord,iIn);if(isNumeric(errors[0])&&isNumeric(errors[1])){var shoe=calcPt[coord+'s']=calcCoord-errors[0];var hat=calcPt[coord+'h']=calcCoord+errors[1];vals.push(shoe,hat);}}var extremes=Axes.findExtremes(axis,vals,{padded:true});var axId=axis._id;trace._extremes[axId].min=trace._extremes[axId].min.concat(extremes.min);trace._extremes[axId].max=trace._extremes[axId].max.concat(extremes.max);}},{\"../../plots/cartesian/axes\":469,\"../../registry\":521,\"./compute_error\":324,\"fast-isnumeric\":80}],324:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/**\n * Error bar computing function generator\n *\n * N.B. The generated function does not clean the dataPt entries. Non-numeric\n * entries result in undefined error magnitudes.\n *\n * @param {object} opts error bar attributes\n *\n * @return {function} :\n *      @param {numeric} dataPt data point from where to compute the error magnitude\n *      @param {number} index index of dataPt in its corresponding data array\n *      @return {array}\n *        - error[0] : error magnitude in the negative direction\n *        - error[1] : \" \" \" \" positive \"\n */module.exports=function makeComputeError(opts){var type=opts.type;var symmetric=opts.symmetric;if(type==='data'){var array=opts.array||[];if(symmetric){return function computeError(dataPt,index){var val=+array[index];return[val,val];};}else{var arrayminus=opts.arrayminus||[];return function computeError(dataPt,index){var val=+array[index];var valMinus=+arrayminus[index];// in case one is present and the other is missing, fill in 0\n// so we still see the present one. Mostly useful during manual\n// data entry.\nif(!isNaN(val)||!isNaN(valMinus)){return[valMinus||0,val||0];}return[NaN,NaN];};}}else{var computeErrorValue=makeComputeErrorValue(type,opts.value);var computeErrorValueMinus=makeComputeErrorValue(type,opts.valueminus);if(symmetric||opts.valueminus===undefined){return function computeError(dataPt){var val=computeErrorValue(dataPt);return[val,val];};}else{return function computeError(dataPt){return[computeErrorValueMinus(dataPt),computeErrorValue(dataPt)];};}}};/**\n * Compute error bar magnitude (for all types except data)\n *\n * @param {string} type error bar type\n * @param {numeric} value error bar value\n *\n * @return {function} :\n *      @param {numeric} dataPt\n */function makeComputeErrorValue(type,value){if(type==='percent'){return function(dataPt){return Math.abs(dataPt*value/100);};}if(type==='constant'){return function(){return Math.abs(value);};}if(type==='sqrt'){return function(dataPt){return Math.sqrt(Math.abs(dataPt));};}}},{}],325:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var Template=_dereq_('../../plot_api/plot_template');var attributes=_dereq_('./attributes');module.exports=function(traceIn,traceOut,defaultColor,opts){var objName='error_'+opts.axis;var containerOut=Template.newContainer(traceOut,objName);var containerIn=traceIn[objName]||{};function coerce(attr,dflt){return Lib.coerce(containerIn,containerOut,attributes,attr,dflt);}var hasErrorBars=containerIn.array!==undefined||containerIn.value!==undefined||containerIn.type==='sqrt';var visible=coerce('visible',hasErrorBars);if(visible===false)return;var type=coerce('type','array'in containerIn?'data':'percent');var symmetric=true;if(type!=='sqrt'){symmetric=coerce('symmetric',!((type==='data'?'arrayminus':'valueminus')in containerIn));}if(type==='data'){coerce('array');coerce('traceref');if(!symmetric){coerce('arrayminus');coerce('tracerefminus');}}else if(type==='percent'||type==='constant'){coerce('value');if(!symmetric)coerce('valueminus');}var copyAttr='copy_'+opts.inherit+'style';if(opts.inherit){var inheritObj=traceOut['error_'+opts.inherit];if((inheritObj||{}).visible){coerce(copyAttr,!(containerIn.color||isNumeric(containerIn.thickness)||isNumeric(containerIn.width)));}}if(!opts.inherit||!containerOut[copyAttr]){coerce('color',defaultColor);coerce('thickness');coerce('width',Registry.traceIs(traceOut,'gl3d')?0:4);}};},{\"../../lib\":423,\"../../plot_api/plot_template\":459,\"../../registry\":521,\"./attributes\":322,\"fast-isnumeric\":80}],326:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var overrideAll=_dereq_('../../plot_api/edit_types').overrideAll;var attributes=_dereq_('./attributes');var xyAttrs={error_x:Lib.extendFlat({},attributes),error_y:Lib.extendFlat({},attributes)};delete xyAttrs.error_x.copy_zstyle;delete xyAttrs.error_y.copy_zstyle;delete xyAttrs.error_y.copy_ystyle;var xyzAttrs={error_x:Lib.extendFlat({},attributes),error_y:Lib.extendFlat({},attributes),error_z:Lib.extendFlat({},attributes)};delete xyzAttrs.error_x.copy_ystyle;delete xyzAttrs.error_y.copy_ystyle;delete xyzAttrs.error_z.copy_ystyle;delete xyzAttrs.error_z.copy_zstyle;module.exports={moduleType:'component',name:'errorbars',schema:{traces:{scatter:xyAttrs,bar:xyAttrs,histogram:xyAttrs,scatter3d:overrideAll(xyzAttrs,'calc','nested'),scattergl:overrideAll(xyAttrs,'calc','nested')}},supplyDefaults:_dereq_('./defaults'),calc:_dereq_('./calc'),makeComputeError:_dereq_('./compute_error'),plot:_dereq_('./plot'),style:_dereq_('./style'),hoverInfo:hoverInfo};function hoverInfo(calcPoint,trace,hoverPoint){if((trace.error_y||{}).visible){hoverPoint.yerr=calcPoint.yh-calcPoint.y;if(!trace.error_y.symmetric)hoverPoint.yerrneg=calcPoint.y-calcPoint.ys;}if((trace.error_x||{}).visible){hoverPoint.xerr=calcPoint.xh-calcPoint.x;if(!trace.error_x.symmetric)hoverPoint.xerrneg=calcPoint.x-calcPoint.xs;}}},{\"../../lib\":423,\"../../plot_api/edit_types\":452,\"./attributes\":322,\"./calc\":323,\"./compute_error\":324,\"./defaults\":325,\"./plot\":327,\"./style\":328}],327:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var isNumeric=_dereq_('fast-isnumeric');var Drawing=_dereq_('../drawing');var subTypes=_dereq_('../../traces/scatter/subtypes');module.exports=function plot(gd,traces,plotinfo,transitionOpts){var isNew;var xa=plotinfo.xaxis;var ya=plotinfo.yaxis;var hasAnimation=transitionOpts&&transitionOpts.duration>0;traces.each(function(d){var trace=d[0].trace;// || {} is in case the trace (specifically scatterternary)\n// doesn't support error bars at all, but does go through\n// the scatter.plot mechanics, which calls ErrorBars.plot\n// internally\nvar xObj=trace.error_x||{};var yObj=trace.error_y||{};var keyFunc;if(trace.ids){keyFunc=function keyFunc(d){return d.id;};}var sparse=subTypes.hasMarkers(trace)&&trace.marker.maxdisplayed>0;if(!yObj.visible&&!xObj.visible)d=[];var errorbars=d3.select(this).selectAll('g.errorbar').data(d,keyFunc);errorbars.exit().remove();if(!d.length)return;if(!xObj.visible)errorbars.selectAll('path.xerror').remove();if(!yObj.visible)errorbars.selectAll('path.yerror').remove();errorbars.style('opacity',1);var enter=errorbars.enter().append('g').classed('errorbar',true);if(hasAnimation){enter.style('opacity',0).transition().duration(transitionOpts.duration).style('opacity',1);}Drawing.setClipUrl(errorbars,plotinfo.layerClipId,gd);errorbars.each(function(d){var errorbar=d3.select(this);var coords=errorCoords(d,xa,ya);if(sparse&&!d.vis)return;var path;var yerror=errorbar.select('path.yerror');if(yObj.visible&&isNumeric(coords.x)&&isNumeric(coords.yh)&&isNumeric(coords.ys)){var yw=yObj.width;path='M'+(coords.x-yw)+','+coords.yh+'h'+2*yw+// hat\n'm-'+yw+',0V'+coords.ys;// bar\nif(!coords.noYS)path+='m-'+yw+',0h'+2*yw;// shoe\nisNew=!yerror.size();if(isNew){yerror=errorbar.append('path').style('vector-effect','non-scaling-stroke').classed('yerror',true);}else if(hasAnimation){yerror=yerror.transition().duration(transitionOpts.duration).ease(transitionOpts.easing);}yerror.attr('d',path);}else yerror.remove();var xerror=errorbar.select('path.xerror');if(xObj.visible&&isNumeric(coords.y)&&isNumeric(coords.xh)&&isNumeric(coords.xs)){var xw=(xObj.copy_ystyle?yObj:xObj).width;path='M'+coords.xh+','+(coords.y-xw)+'v'+2*xw+// hat\n'm0,-'+xw+'H'+coords.xs;// bar\nif(!coords.noXS)path+='m0,-'+xw+'v'+2*xw;// shoe\nisNew=!xerror.size();if(isNew){xerror=errorbar.append('path').style('vector-effect','non-scaling-stroke').classed('xerror',true);}else if(hasAnimation){xerror=xerror.transition().duration(transitionOpts.duration).ease(transitionOpts.easing);}xerror.attr('d',path);}else xerror.remove();});});};// compute the coordinates of the error-bar objects\nfunction errorCoords(d,xa,ya){var out={x:xa.c2p(d.x),y:ya.c2p(d.y)};// calculate the error bar size and hat and shoe locations\nif(d.yh!==undefined){out.yh=ya.c2p(d.yh);out.ys=ya.c2p(d.ys);// if the shoes go off-scale (ie log scale, error bars past zero)\n// clip the bar and hide the shoes\nif(!isNumeric(out.ys)){out.noYS=true;out.ys=ya.c2p(d.ys,true);}}if(d.xh!==undefined){out.xh=xa.c2p(d.xh);out.xs=xa.c2p(d.xs);if(!isNumeric(out.xs)){out.noXS=true;out.xs=xa.c2p(d.xs,true);}}return out;}},{\"../../traces/scatter/subtypes\":557,\"../drawing\":320,\"d3\":71,\"fast-isnumeric\":80}],328:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Color=_dereq_('../color');module.exports=function style(traces){traces.each(function(d){var trace=d[0].trace;var yObj=trace.error_y||{};var xObj=trace.error_x||{};var s=d3.select(this);s.selectAll('path.yerror').style('stroke-width',yObj.thickness+'px').call(Color.stroke,yObj.color);if(xObj.copy_ystyle)xObj=yObj;s.selectAll('path.xerror').style('stroke-width',xObj.thickness+'px').call(Color.stroke,xObj.color);});};},{\"../color\":299,\"d3\":71}],329:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var fontAttrs=_dereq_('../../plots/font_attributes');module.exports={hoverlabel:{bgcolor:{valType:'color',arrayOk:true,editType:'none'},bordercolor:{valType:'color',arrayOk:true,editType:'none'},font:fontAttrs({arrayOk:true,editType:'none'}),namelength:{valType:'integer',min:-1,arrayOk:true,editType:'none'},editType:'calc'}};},{\"../../plots/font_attributes\":496}],330:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Registry=_dereq_('../../registry');module.exports=function calc(gd){var calcdata=gd.calcdata;var fullLayout=gd._fullLayout;function makeCoerceHoverInfo(trace){return function(val){return Lib.coerceHoverinfo({hoverinfo:val},{_module:trace._module},fullLayout);};}for(var i=0;i<calcdata.length;i++){var cd=calcdata[i];var trace=cd[0].trace;// don't include hover calc fields for pie traces\n// as calcdata items might be sorted by value and\n// won't match the data array order.\nif(Registry.traceIs(trace,'pie'))continue;var fillFn=Registry.traceIs(trace,'2dMap')?paste:Lib.fillArray;fillFn(trace.hoverinfo,cd,'hi',makeCoerceHoverInfo(trace));if(trace.hovertemplate)fillFn(trace.hovertemplate,cd,'ht');if(!trace.hoverlabel)continue;fillFn(trace.hoverlabel.bgcolor,cd,'hbg');fillFn(trace.hoverlabel.bordercolor,cd,'hbc');fillFn(trace.hoverlabel.font.size,cd,'hts');fillFn(trace.hoverlabel.font.color,cd,'htc');fillFn(trace.hoverlabel.font.family,cd,'htf');fillFn(trace.hoverlabel.namelength,cd,'hnl');}};function paste(traceAttr,cd,cdAttr,fn){fn=fn||Lib.identity;if(Array.isArray(traceAttr)){cd[0][cdAttr]=fn(traceAttr);}}},{\"../../lib\":423,\"../../registry\":521}],331:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../../registry');var hover=_dereq_('./hover').hover;module.exports=function click(gd,evt,subplot){var annotationsDone=Registry.getComponentMethod('annotations','onClick')(gd,gd._hoverdata);// fallback to fail-safe in case the plot type's hover method doesn't pass the subplot.\n// Ternary, for example, didn't, but it was caught because tested.\nif(subplot!==undefined){// The true flag at the end causes it to re-run the hover computation to figure out *which*\n// point is being clicked. Without this, clicking is somewhat unreliable.\nhover(gd,evt,subplot,true);}function emitClick(){gd.emit('plotly_click',{points:gd._hoverdata,event:evt});}if(gd._hoverdata&&evt&&evt.target){if(annotationsDone&&annotationsDone.then){annotationsDone.then(emitClick);}else emitClick();// why do we get a double event without this???\nif(evt.stopImmediatePropagation)evt.stopImmediatePropagation();}};},{\"../../registry\":521,\"./hover\":335}],332:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={// hover labels for multiple horizontal bars get tilted by this angle\nYANGLE:60,// size and display constants for hover text\n// pixel size of hover arrows\nHOVERARROWSIZE:6,// pixels padding around text\nHOVERTEXTPAD:3,// hover font\nHOVERFONTSIZE:13,HOVERFONT:'Arial, sans-serif',// minimum time (msec) between hover calls\nHOVERMINTIME:50,// ID suffix (with fullLayout._uid) for hover events in the throttle cache\nHOVERID:'-hover'};},{}],333:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var attributes=_dereq_('./attributes');var handleHoverLabelDefaults=_dereq_('./hoverlabel_defaults');module.exports=function supplyDefaults(traceIn,traceOut,defaultColor,layout){function coerce(attr,dflt){return Lib.coerce(traceIn,traceOut,attributes,attr,dflt);}handleHoverLabelDefaults(traceIn,traceOut,coerce,layout.hoverlabel);};},{\"../../lib\":423,\"./attributes\":329,\"./hoverlabel_defaults\":336}],334:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');// look for either subplot or xaxis and yaxis attributes\n// does not handle splom case\nexports.getSubplot=function getSubplot(trace){return trace.subplot||trace.xaxis+trace.yaxis||trace.geo;};// is trace in given list of subplots?\n// does handle splom case\nexports.isTraceInSubplots=function isTraceInSubplot(trace,subplots){if(trace.type==='splom'){var xaxes=trace.xaxes||[];var yaxes=trace.yaxes||[];for(var i=0;i<xaxes.length;i++){for(var j=0;j<yaxes.length;j++){if(subplots.indexOf(xaxes[i]+yaxes[j])!==-1){return true;}}}return false;}return subplots.indexOf(exports.getSubplot(trace))!==-1;};// convenience functions for mapping all relevant axes\nexports.flat=function flat(subplots,v){var out=new Array(subplots.length);for(var i=0;i<subplots.length;i++){out[i]=v;}return out;};exports.p2c=function p2c(axArray,v){var out=new Array(axArray.length);for(var i=0;i<axArray.length;i++){out[i]=axArray[i].p2c(v);}return out;};exports.getDistanceFunction=function getDistanceFunction(mode,dx,dy,dxy){if(mode==='closest')return dxy||exports.quadrature(dx,dy);return mode==='x'?dx:dy;};exports.getClosest=function getClosest(cd,distfn,pointData){// do we already have a point number? (array mode only)\nif(pointData.index!==false){if(pointData.index>=0&&pointData.index<cd.length){pointData.distance=0;}else pointData.index=false;}else{// apply the distance function to each data point\n// this is the longest loop... if this bogs down, we may need\n// to create pre-sorted data (by x or y), not sure how to\n// do this for 'closest'\nfor(var i=0;i<cd.length;i++){var newDistance=distfn(cd[i]);if(newDistance<=pointData.distance){pointData.index=i;pointData.distance=newDistance;}}}return pointData;};/*\n * pseudo-distance function for hover effects on areas: inside the region\n * distance is finite (`passVal`), outside it's Infinity.\n *\n * @param {number} v0: signed difference between the current position and the left edge\n * @param {number} v1: signed difference between the current position and the right edge\n * @param {number} passVal: the value to return on success\n */exports.inbox=function inbox(v0,v1,passVal){return v0*v1<0||v0===0?passVal:Infinity;};exports.quadrature=function quadrature(dx,dy){return function(di){var x=dx(di);var y=dy(di);return Math.sqrt(x*x+y*y);};};/** Fill event data point object for hover and selection.\n *  Invokes _module.eventData if present.\n *\n * N.B. note that point 'index' corresponds to input data array index\n *  whereas 'number' is its post-transform version.\n *\n * If the hovered/selected pt corresponds to an multiple input points\n * (e.g. for histogram and transformed traces), 'pointNumbers` and 'pointIndices'\n * are include in the event data.\n *\n * @param {object} pt\n * @param {object} trace\n * @param {object} cd\n * @return {object}\n */exports.makeEventData=function makeEventData(pt,trace,cd){// hover uses 'index', select uses 'pointNumber'\nvar pointNumber='index'in pt?pt.index:pt.pointNumber;var out={data:trace._input,fullData:trace,curveNumber:trace.index,pointNumber:pointNumber};if(trace._indexToPoints){var pointIndices=trace._indexToPoints[pointNumber];if(pointIndices.length===1){out.pointIndex=pointIndices[0];}else{out.pointIndices=pointIndices;}}else{out.pointIndex=pointNumber;}if(trace._module.eventData){out=trace._module.eventData(out,pt,trace,cd,pointNumber);}else{if('xVal'in pt)out.x=pt.xVal;else if('x'in pt)out.x=pt.x;if('yVal'in pt)out.y=pt.yVal;else if('y'in pt)out.y=pt.y;if(pt.xa)out.xaxis=pt.xa;if(pt.ya)out.yaxis=pt.ya;if(pt.zLabelVal!==undefined)out.z=pt.zLabelVal;}exports.appendArrayPointValue(out,trace,pointNumber);return out;};/** Appends values inside array attributes corresponding to given point number\n *\n * @param {object} pointData : point data object (gets mutated here)\n * @param {object} trace : full trace object\n * @param {number|Array(number)} pointNumber : point number. May be a length-2 array\n *     [row, col] to dig into 2D arrays\n */exports.appendArrayPointValue=function(pointData,trace,pointNumber){var arrayAttrs=trace._arrayAttrs;if(!arrayAttrs){return;}for(var i=0;i<arrayAttrs.length;i++){var astr=arrayAttrs[i];var key=getPointKey(astr);if(pointData[key]===undefined){var val=Lib.nestedProperty(trace,astr).get();var pointVal=getPointData(val,pointNumber);if(pointVal!==undefined)pointData[key]=pointVal;}}};/**\n * Appends values inside array attributes corresponding to given point number array\n * For use when pointData references a plot entity that arose (or potentially arose)\n * from multiple points in the input data\n *\n * @param {object} pointData : point data object (gets mutated here)\n * @param {object} trace : full trace object\n * @param {Array(number)|Array(Array(number))} pointNumbers : Array of point numbers.\n *     Each entry in the array may itself be a length-2 array [row, col] to dig into 2D arrays\n */exports.appendArrayMultiPointValues=function(pointData,trace,pointNumbers){var arrayAttrs=trace._arrayAttrs;if(!arrayAttrs){return;}for(var i=0;i<arrayAttrs.length;i++){var astr=arrayAttrs[i];var key=getPointKey(astr);if(pointData[key]===undefined){var val=Lib.nestedProperty(trace,astr).get();var keyVal=new Array(pointNumbers.length);for(var j=0;j<pointNumbers.length;j++){keyVal[j]=getPointData(val,pointNumbers[j]);}pointData[key]=keyVal;}}};var pointKeyMap={ids:'id',locations:'location',labels:'label',values:'value','marker.colors':'color'};function getPointKey(astr){return pointKeyMap[astr]||astr;}function getPointData(val,pointNumber){if(Array.isArray(pointNumber)){if(Array.isArray(val)&&Array.isArray(val[pointNumber[0]])){return val[pointNumber[0]][pointNumber[1]];}}else{return val[pointNumber];}}},{\"../../lib\":423}],335:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var isNumeric=_dereq_('fast-isnumeric');var tinycolor=_dereq_('tinycolor2');var Lib=_dereq_('../../lib');var Events=_dereq_('../../lib/events');var svgTextUtils=_dereq_('../../lib/svg_text_utils');var overrideCursor=_dereq_('../../lib/override_cursor');var Drawing=_dereq_('../drawing');var Color=_dereq_('../color');var dragElement=_dereq_('../dragelement');var Axes=_dereq_('../../plots/cartesian/axes');var Registry=_dereq_('../../registry');var helpers=_dereq_('./helpers');var constants=_dereq_('./constants');// hover labels for multiple horizontal bars get tilted by some angle,\n// then need to be offset differently if they overlap\nvar YANGLE=constants.YANGLE;var YA_RADIANS=Math.PI*YANGLE/180;// expansion of projected height\nvar YFACTOR=1/Math.sin(YA_RADIANS);// to make the appropriate post-rotation x offset,\n// you need both x and y offsets\nvar YSHIFTX=Math.cos(YA_RADIANS);var YSHIFTY=Math.sin(YA_RADIANS);// size and display constants for hover text\nvar HOVERARROWSIZE=constants.HOVERARROWSIZE;var HOVERTEXTPAD=constants.HOVERTEXTPAD;// fx.hover: highlight data on hover\n// evt can be a mousemove event, or an object with data about what points\n//   to hover on\n//      {xpx,ypx[,hovermode]} - pixel locations from top left\n//          (with optional overriding hovermode)\n//      {xval,yval[,hovermode]} - data values\n//      [{curveNumber,(pointNumber|xval and/or yval)}] -\n//              array of specific points to highlight\n//          pointNumber is a single integer if gd.data[curveNumber] is 1D,\n//              or a two-element array if it's 2D\n//          xval and yval are data values,\n//              1D data may specify either or both,\n//              2D data must specify both\n// subplot is an id string (default \"xy\")\n// makes use of gl.hovermode, which can be:\n//      x (find the points with the closest x values, ie a column),\n//      closest (find the single closest point)\n//    internally there are two more that occasionally get used:\n//      y (pick out a row - only used for multiple horizontal bar charts)\n//      array (used when the user specifies an explicit\n//          array of points to hover on)\n//\n// We wrap the hovers in a timer, to limit their frequency.\n// The actual rendering is done by private function _hover.\nexports.hover=function hover(gd,evt,subplot,noHoverEvent){gd=Lib.getGraphDiv(gd);Lib.throttle(gd._fullLayout._uid+constants.HOVERID,constants.HOVERMINTIME,function(){_hover(gd,evt,subplot,noHoverEvent);});};/*\n * Draw a single hover item in a pre-existing svg container somewhere\n * hoverItem should have keys:\n *    - x and y (or x0, x1, y0, and y1):\n *      the pixel position to mark, relative to opts.container\n *    - xLabel, yLabel, zLabel, text, and name:\n *      info to go in the label\n *    - color:\n *      the background color for the label.\n *    - idealAlign (optional):\n *      'left' or 'right' for which side of the x/y box to try to put this on first\n *    - borderColor (optional):\n *      color for the border, defaults to strongest contrast with color\n *    - fontFamily (optional):\n *      string, the font for this label, defaults to constants.HOVERFONT\n *    - fontSize (optional):\n *      the label font size, defaults to constants.HOVERFONTSIZE\n *    - fontColor (optional):\n *      defaults to borderColor\n * opts should have keys:\n *    - bgColor:\n *      the background color this is against, used if the trace is\n *      non-opaque, and for the name, which goes outside the box\n *    - container:\n *      a <svg> or <g> element to add the hover label to\n *    - outerContainer:\n *      normally a parent of `container`, sets the bounding box to use to\n *      constrain the hover label and determine whether to show it on the left or right\n */exports.loneHover=function loneHover(hoverItem,opts){var pointData={color:hoverItem.color||Color.defaultLine,x0:hoverItem.x0||hoverItem.x||0,x1:hoverItem.x1||hoverItem.x||0,y0:hoverItem.y0||hoverItem.y||0,y1:hoverItem.y1||hoverItem.y||0,xLabel:hoverItem.xLabel,yLabel:hoverItem.yLabel,zLabel:hoverItem.zLabel,text:hoverItem.text,name:hoverItem.name,idealAlign:hoverItem.idealAlign,// optional extra bits of styling\nborderColor:hoverItem.borderColor,fontFamily:hoverItem.fontFamily,fontSize:hoverItem.fontSize,fontColor:hoverItem.fontColor,// filler to make createHoverText happy\ntrace:hoverItem.trace||{index:0,hoverinfo:''},xa:{_offset:0},ya:{_offset:0},index:0,hovertemplate:hoverItem.hovertemplate||false,eventData:hoverItem.eventData||false,hovertemplateLabels:hoverItem.hovertemplateLabels||false};var container3=d3.select(opts.container);var outerContainer3=opts.outerContainer?d3.select(opts.outerContainer):container3;var fullOpts={hovermode:'closest',rotateLabels:false,bgColor:opts.bgColor||Color.background,container:container3,outerContainer:outerContainer3};var hoverLabel=createHoverText([pointData],fullOpts,opts.gd);alignHoverText(hoverLabel,fullOpts.rotateLabels);return hoverLabel.node();};exports.multiHovers=function multiHovers(hoverItems,opts){if(!Array.isArray(hoverItems)){hoverItems=[hoverItems];}var pointsData=hoverItems.map(function(hoverItem){return{color:hoverItem.color||Color.defaultLine,x0:hoverItem.x0||hoverItem.x||0,x1:hoverItem.x1||hoverItem.x||0,y0:hoverItem.y0||hoverItem.y||0,y1:hoverItem.y1||hoverItem.y||0,xLabel:hoverItem.xLabel,yLabel:hoverItem.yLabel,zLabel:hoverItem.zLabel,text:hoverItem.text,name:hoverItem.name,idealAlign:hoverItem.idealAlign,// optional extra bits of styling\nborderColor:hoverItem.borderColor,fontFamily:hoverItem.fontFamily,fontSize:hoverItem.fontSize,fontColor:hoverItem.fontColor,// filler to make createHoverText happy\ntrace:hoverItem.trace||{index:0,hoverinfo:''},xa:{_offset:0},ya:{_offset:0},index:0,hovertemplate:hoverItem.hovertemplate||false,eventData:hoverItem.eventData||false,hovertemplateLabels:hoverItem.hovertemplateLabels||false};});var container3=d3.select(opts.container);var outerContainer3=opts.outerContainer?d3.select(opts.outerContainer):container3;var fullOpts={hovermode:'closest',rotateLabels:false,bgColor:opts.bgColor||Color.background,container:container3,outerContainer:outerContainer3};var hoverLabel=createHoverText(pointsData,fullOpts,opts.gd);// Fix vertical overlap\nvar tooltipSpacing=5;var lastBottomY=0;hoverLabel.sort(function(a,b){return a.y0-b.y0;}).each(function(d){var topY=d.y0-d.by/2;if(topY-tooltipSpacing<lastBottomY){d.offset=lastBottomY-topY+tooltipSpacing;}else{d.offset=0;}lastBottomY=topY+d.by+d.offset;});alignHoverText(hoverLabel,fullOpts.rotateLabels);return hoverLabel.node();};// The actual implementation is here:\nfunction _hover(gd,evt,subplot,noHoverEvent){if(!subplot)subplot='xy';// if the user passed in an array of subplots,\n// use those instead of finding overlayed plots\nvar subplots=Array.isArray(subplot)?subplot:[subplot];var fullLayout=gd._fullLayout;var plots=fullLayout._plots||[];var plotinfo=plots[subplot];var hasCartesian=fullLayout._has('cartesian');// list of all overlaid subplots to look at\nif(plotinfo){var overlayedSubplots=plotinfo.overlays.map(function(pi){return pi.id;});subplots=subplots.concat(overlayedSubplots);}var len=subplots.length;var xaArray=new Array(len);var yaArray=new Array(len);var supportsCompare=false;for(var i=0;i<len;i++){var spId=subplots[i];// 'cartesian' case\nvar plotObj=plots[spId];if(plotObj){supportsCompare=true;// TODO make sure that fullLayout_plots axis refs\n// get updated properly so that we don't have\n// to use Axes.getFromId in general.\nxaArray[i]=Axes.getFromId(gd,plotObj.xaxis._id);yaArray[i]=Axes.getFromId(gd,plotObj.yaxis._id);continue;}// other subplot types\nvar _subplot=fullLayout[spId]._subplot;xaArray[i]=_subplot.xaxis;yaArray[i]=_subplot.yaxis;}var hovermode=evt.hovermode||fullLayout.hovermode;if(hovermode&&!supportsCompare)hovermode='closest';if(['x','y','closest'].indexOf(hovermode)===-1||!gd.calcdata||gd.querySelector('.zoombox')||gd._dragging){return dragElement.unhoverRaw(gd,evt);}var hoverdistance=fullLayout.hoverdistance===-1?Infinity:fullLayout.hoverdistance;var spikedistance=fullLayout.spikedistance===-1?Infinity:fullLayout.spikedistance;// hoverData: the set of candidate points we've found to highlight\nvar hoverData=[];// searchData: the data to search in. Mostly this is just a copy of\n// gd.calcdata, filtered to the subplot and overlays we're on\n// but if a point array is supplied it will be a mapping\n// of indicated curves\nvar searchData=[];// [x|y]valArray: the axis values of the hover event\n// mapped onto each of the currently selected overlaid subplots\nvar xvalArray,yvalArray;var itemnum,curvenum,cd,trace,subplotId,subploti,mode,xval,yval,pointData,closedataPreviousLength;// spikePoints: the set of candidate points we've found to draw spikes to\nvar spikePoints={hLinePoint:null,vLinePoint:null};// does subplot have one (or more) horizontal traces?\n// This is used to determine whether we rotate the labels or not\nvar hasOneHorizontalTrace=false;// Figure out what we're hovering on:\n// mouse location or user-supplied data\nif(Array.isArray(evt)){// user specified an array of points to highlight\nhovermode='array';for(itemnum=0;itemnum<evt.length;itemnum++){cd=gd.calcdata[evt[itemnum].curveNumber||0];if(cd){trace=cd[0].trace;if(cd[0].trace.hoverinfo!=='skip'){searchData.push(cd);if(trace.orientation==='h'){hasOneHorizontalTrace=true;}}}}}else{for(curvenum=0;curvenum<gd.calcdata.length;curvenum++){cd=gd.calcdata[curvenum];trace=cd[0].trace;if(trace.hoverinfo!=='skip'&&helpers.isTraceInSubplots(trace,subplots)){searchData.push(cd);if(trace.orientation==='h'){hasOneHorizontalTrace=true;}}}// [x|y]px: the pixels (from top left) of the mouse location\n// on the currently selected plot area\n// add pointerX|Y property for drawing the spikes in spikesnap 'cursor' situation\nvar hasUserCalledHover=!evt.target;var xpx,ypx;if(hasUserCalledHover){if('xpx'in evt)xpx=evt.xpx;else xpx=xaArray[0]._length/2;if('ypx'in evt)ypx=evt.ypx;else ypx=yaArray[0]._length/2;}else{// fire the beforehover event and quit if it returns false\n// note that we're only calling this on real mouse events, so\n// manual calls to fx.hover will always run.\nif(Events.triggerHandler(gd,'plotly_beforehover',evt)===false){return;}var dbb=evt.target.getBoundingClientRect();xpx=evt.clientX-dbb.left;ypx=evt.clientY-dbb.top;// in case hover was called from mouseout into hovertext,\n// it's possible you're not actually over the plot anymore\nif(xpx<0||xpx>xaArray[0]._length||ypx<0||ypx>yaArray[0]._length){return dragElement.unhoverRaw(gd,evt);}}evt.pointerX=xpx+xaArray[0]._offset;evt.pointerY=ypx+yaArray[0]._offset;if('xval'in evt)xvalArray=helpers.flat(subplots,evt.xval);else xvalArray=helpers.p2c(xaArray,xpx);if('yval'in evt)yvalArray=helpers.flat(subplots,evt.yval);else yvalArray=helpers.p2c(yaArray,ypx);if(!isNumeric(xvalArray[0])||!isNumeric(yvalArray[0])){Lib.warn('Fx.hover failed',evt,gd);return dragElement.unhoverRaw(gd,evt);}}// the pixel distance to beat as a matching point\n// in 'x' or 'y' mode this resets for each trace\nvar distance=Infinity;// find the closest point in each trace\n// this is minimum dx and/or dy, depending on mode\n// and the pixel position for the label (labelXpx, labelYpx)\nfor(curvenum=0;curvenum<searchData.length;curvenum++){cd=searchData[curvenum];// filter out invisible or broken data\nif(!cd||!cd[0]||!cd[0].trace||cd[0].trace.visible!==true)continue;trace=cd[0].trace;// Explicitly bail out for these two. I don't know how to otherwise prevent\n// the rest of this function from running and failing\nif(['carpet','contourcarpet'].indexOf(trace._module.name)!==-1)continue;if(trace.type==='splom'){// splom traces do not generate overlay subplots,\n// it is safe to assume here splom traces correspond to the 0th subplot\nsubploti=0;subplotId=subplots[subploti];}else{subplotId=helpers.getSubplot(trace);subploti=subplots.indexOf(subplotId);}// within one trace mode can sometimes be overridden\nmode=hovermode;// container for new point, also used to pass info into module.hoverPoints\npointData={// trace properties\ncd:cd,trace:trace,xa:xaArray[subploti],ya:yaArray[subploti],// max distances for hover and spikes - for points that want to show but do not\n// want to override other points, set distance/spikeDistance equal to max*Distance\n// and it will not get filtered out but it will be guaranteed to have a greater\n// distance than any point that calculated a real distance.\nmaxHoverDistance:hoverdistance,maxSpikeDistance:spikedistance,// point properties - override all of these\nindex:false,// point index in trace - only used by plotly.js hoverdata consumers\ndistance:Math.min(distance,hoverdistance),// pixel distance or pseudo-distance\n// distance/pseudo-distance for spikes. This distance should always be calculated\n// as if in \"closest\" mode, and should only be set if this point should\n// generate a spike.\nspikeDistance:Infinity,// in some cases the spikes have different positioning from the hover label\n// they don't need x0/x1, just one position\nxSpike:undefined,ySpike:undefined,// where and how to display the hover label\ncolor:Color.defaultLine,// trace color\nname:trace.name,x0:undefined,x1:undefined,y0:undefined,y1:undefined,xLabelVal:undefined,yLabelVal:undefined,zLabelVal:undefined,text:undefined};// add ref to subplot object (non-cartesian case)\nif(fullLayout[subplotId]){pointData.subplot=fullLayout[subplotId]._subplot;}// add ref to splom scene\nif(fullLayout._splomScenes&&fullLayout._splomScenes[trace.uid]){pointData.scene=fullLayout._splomScenes[trace.uid];}closedataPreviousLength=hoverData.length;// for a highlighting array, figure out what\n// we're searching for with this element\nif(mode==='array'){var selection=evt[curvenum];if('pointNumber'in selection){pointData.index=selection.pointNumber;mode='closest';}else{mode='';if('xval'in selection){xval=selection.xval;mode='x';}if('yval'in selection){yval=selection.yval;mode=mode?'closest':'y';}}}else{xval=xvalArray[subploti];yval=yvalArray[subploti];}// Now if there is range to look in, find the points to hover.\nif(hoverdistance!==0){if(trace._module&&trace._module.hoverPoints){var newPoints=trace._module.hoverPoints(pointData,xval,yval,mode,fullLayout._hoverlayer);if(newPoints){var newPoint;for(var newPointNum=0;newPointNum<newPoints.length;newPointNum++){newPoint=newPoints[newPointNum];if(isNumeric(newPoint.x0)&&isNumeric(newPoint.y0)){hoverData.push(cleanPoint(newPoint,hovermode));}}}}else{Lib.log('Unrecognized trace type in hover:',trace);}}// in closest mode, remove any existing (farther) points\n// and don't look any farther than this latest point (or points, some\n// traces like box & violin make multiple hover labels at once)\nif(hovermode==='closest'&&hoverData.length>closedataPreviousLength){hoverData.splice(0,closedataPreviousLength);distance=hoverData[0].distance;}// Now if there is range to look in, find the points to draw the spikelines\n// Do it only if there is no hoverData\nif(hasCartesian&&spikedistance!==0){if(hoverData.length===0){pointData.distance=spikedistance;pointData.index=false;var closestPoints=trace._module.hoverPoints(pointData,xval,yval,'closest',fullLayout._hoverlayer);if(closestPoints){closestPoints=closestPoints.filter(function(point){// some hover points, like scatter fills, do not allow spikes,\n// so will generate a hover point but without a valid spikeDistance\nreturn point.spikeDistance<=spikedistance;});}if(closestPoints&&closestPoints.length){var tmpPoint;var closestVPoints=closestPoints.filter(function(point){return point.xa.showspikes;});if(closestVPoints.length){var closestVPt=closestVPoints[0];if(isNumeric(closestVPt.x0)&&isNumeric(closestVPt.y0)){tmpPoint=fillSpikePoint(closestVPt);if(!spikePoints.vLinePoint||spikePoints.vLinePoint.spikeDistance>tmpPoint.spikeDistance){spikePoints.vLinePoint=tmpPoint;}}}var closestHPoints=closestPoints.filter(function(point){return point.ya.showspikes;});if(closestHPoints.length){var closestHPt=closestHPoints[0];if(isNumeric(closestHPt.x0)&&isNumeric(closestHPt.y0)){tmpPoint=fillSpikePoint(closestHPt);if(!spikePoints.hLinePoint||spikePoints.hLinePoint.spikeDistance>tmpPoint.spikeDistance){spikePoints.hLinePoint=tmpPoint;}}}}}}}function selectClosestPoint(pointsData,spikedistance){var resultPoint=null;var minDistance=Infinity;var thisSpikeDistance;for(var i=0;i<pointsData.length;i++){thisSpikeDistance=pointsData[i].spikeDistance;if(thisSpikeDistance<minDistance&&thisSpikeDistance<=spikedistance){resultPoint=pointsData[i];minDistance=thisSpikeDistance;}}return resultPoint;}function fillSpikePoint(point){if(!point)return null;return{xa:point.xa,ya:point.ya,x:point.xSpike!==undefined?point.xSpike:(point.x0+point.x1)/2,y:point.ySpike!==undefined?point.ySpike:(point.y0+point.y1)/2,distance:point.distance,spikeDistance:point.spikeDistance,curveNumber:point.trace.index,color:point.color,pointNumber:point.index};}var spikelineOpts={fullLayout:fullLayout,container:fullLayout._hoverlayer,outerContainer:fullLayout._paperdiv,event:evt};var oldspikepoints=gd._spikepoints;var newspikepoints={vLinePoint:spikePoints.vLinePoint,hLinePoint:spikePoints.hLinePoint};gd._spikepoints=newspikepoints;// Now if it is not restricted by spikedistance option, set the points to draw the spikelines\nif(hasCartesian&&spikedistance!==0){if(hoverData.length!==0){var tmpHPointData=hoverData.filter(function(point){return point.ya.showspikes;});var tmpHPoint=selectClosestPoint(tmpHPointData,spikedistance);spikePoints.hLinePoint=fillSpikePoint(tmpHPoint);var tmpVPointData=hoverData.filter(function(point){return point.xa.showspikes;});var tmpVPoint=selectClosestPoint(tmpVPointData,spikedistance);spikePoints.vLinePoint=fillSpikePoint(tmpVPoint);}}// if hoverData is empty check for the spikes to draw and quit if there are none\nif(hoverData.length===0){var result=dragElement.unhoverRaw(gd,evt);if(hasCartesian&&(spikePoints.hLinePoint!==null||spikePoints.vLinePoint!==null)){if(spikesChanged(oldspikepoints)){createSpikelines(spikePoints,spikelineOpts);}}return result;}if(hasCartesian){if(spikesChanged(oldspikepoints)){createSpikelines(spikePoints,spikelineOpts);}}hoverData.sort(function(d1,d2){return d1.distance-d2.distance;});// lastly, emit custom hover/unhover events\nvar oldhoverdata=gd._hoverdata;var newhoverdata=[];// pull out just the data that's useful to\n// other people and send it to the event\nfor(itemnum=0;itemnum<hoverData.length;itemnum++){var pt=hoverData[itemnum];var eventData=helpers.makeEventData(pt,pt.trace,pt.cd);var ht=false;if(pt.cd[pt.index]&&pt.cd[pt.index].ht)ht=pt.cd[pt.index].ht;hoverData[itemnum].hovertemplate=ht||pt.trace.hovertemplate||false;hoverData[itemnum].eventData=[eventData];newhoverdata.push(eventData);}gd._hoverdata=newhoverdata;var rotateLabels=hovermode==='y'&&(searchData.length>1||hoverData.length>1)||hovermode==='closest'&&hasOneHorizontalTrace&&hoverData.length>1;var bgColor=Color.combine(fullLayout.plot_bgcolor||Color.background,fullLayout.paper_bgcolor);var labelOpts={hovermode:hovermode,rotateLabels:rotateLabels,bgColor:bgColor,container:fullLayout._hoverlayer,outerContainer:fullLayout._paperdiv,commonLabelOpts:fullLayout.hoverlabel,hoverdistance:fullLayout.hoverdistance};var hoverLabels=createHoverText(hoverData,labelOpts,gd);hoverAvoidOverlaps(hoverData,rotateLabels?'xa':'ya',fullLayout);alignHoverText(hoverLabels,rotateLabels);// TODO: tagName hack is needed to appease geo.js's hack of using evt.target=true\n// we should improve the \"fx\" API so other plots can use it without these hack.\nif(evt.target&&evt.target.tagName){var hasClickToShow=Registry.getComponentMethod('annotations','hasClickToShow')(gd,newhoverdata);overrideCursor(d3.select(evt.target),hasClickToShow?'pointer':'');}// don't emit events if called manually\nif(!evt.target||noHoverEvent||!hoverChanged(gd,evt,oldhoverdata))return;if(oldhoverdata){gd.emit('plotly_unhover',{event:evt,points:oldhoverdata});}gd.emit('plotly_hover',{event:evt,points:gd._hoverdata,xaxes:xaArray,yaxes:yaArray,xvals:xvalArray,yvals:yvalArray});}var EXTRA_STRING_REGEX=/<extra>([\\s\\S]*)<\\/extra>/;function createHoverText(hoverData,opts,gd){var hovermode=opts.hovermode;var rotateLabels=opts.rotateLabels;var bgColor=opts.bgColor;var container=opts.container;var outerContainer=opts.outerContainer;var commonLabelOpts=opts.commonLabelOpts||{};// opts.fontFamily/Size are used for the common label\n// and as defaults for each hover label, though the individual labels\n// can override this.\nvar fontFamily=opts.fontFamily||constants.HOVERFONT;var fontSize=opts.fontSize||constants.HOVERFONTSIZE;var c0=hoverData[0];var xa=c0.xa;var ya=c0.ya;var commonAttr=hovermode==='y'?'yLabel':'xLabel';var t0=c0[commonAttr];var t00=(String(t0)||'').split(' ')[0];var outerContainerBB=outerContainer.node().getBoundingClientRect();var outerTop=outerContainerBB.top;var outerWidth=outerContainerBB.width;var outerHeight=outerContainerBB.height;// show the common label, if any, on the axis\n// never show a common label in array mode,\n// even if sometimes there could be one\nvar showCommonLabel=t0!==undefined&&c0.distance<=opts.hoverdistance&&(hovermode==='x'||hovermode==='y');// all hover traces hoverinfo must contain the hovermode\n// to have common labels\nif(showCommonLabel){var allHaveZ=true;var i,traceHoverinfo;for(i=0;i<hoverData.length;i++){if(allHaveZ&&hoverData[i].zLabel===undefined)allHaveZ=false;traceHoverinfo=hoverData[i].hoverinfo||hoverData[i].trace.hoverinfo;if(traceHoverinfo){var parts=Array.isArray(traceHoverinfo)?traceHoverinfo:traceHoverinfo.split('+');if(parts.indexOf('all')===-1&&parts.indexOf(hovermode)===-1){showCommonLabel=false;break;}}}// xyz labels put all info in their main label, so have no need of a common label\nif(allHaveZ)showCommonLabel=false;}var commonLabel=container.selectAll('g.axistext').data(showCommonLabel?[0]:[]);commonLabel.enter().append('g').classed('axistext',true);commonLabel.exit().remove();commonLabel.each(function(){var label=d3.select(this);var lpath=Lib.ensureSingle(label,'path','',function(s){s.style({'stroke-width':'1px'});});var ltext=Lib.ensureSingle(label,'text','',function(s){// prohibit tex interpretation until we can handle\n// tex and regular text together\ns.attr('data-notex',1);});var commonBgColor=commonLabelOpts.bgcolor||Color.defaultLine;var commonStroke=commonLabelOpts.bordercolor||Color.contrast(commonBgColor);var contrastColor=Color.contrast(commonBgColor);lpath.style({fill:commonBgColor,stroke:commonStroke});ltext.text(t0).call(Drawing.font,commonLabelOpts.font.family||fontFamily,commonLabelOpts.font.size||fontSize,commonLabelOpts.font.color||contrastColor).call(svgTextUtils.positionText,0,0).call(svgTextUtils.convertToTspans,gd);label.attr('transform','');var tbb=ltext.node().getBoundingClientRect();if(hovermode==='x'){ltext.attr('text-anchor','middle').call(svgTextUtils.positionText,0,xa.side==='top'?outerTop-tbb.bottom-HOVERARROWSIZE-HOVERTEXTPAD:outerTop-tbb.top+HOVERARROWSIZE+HOVERTEXTPAD);var topsign=xa.side==='top'?'-':'';lpath.attr('d','M0,0'+'L'+HOVERARROWSIZE+','+topsign+HOVERARROWSIZE+'H'+(HOVERTEXTPAD+tbb.width/2)+'v'+topsign+(HOVERTEXTPAD*2+tbb.height)+'H-'+(HOVERTEXTPAD+tbb.width/2)+'V'+topsign+HOVERARROWSIZE+'H-'+HOVERARROWSIZE+'Z');label.attr('transform','translate('+(xa._offset+(c0.x0+c0.x1)/2)+','+(ya._offset+(xa.side==='top'?0:ya._length))+')');}else{ltext.attr('text-anchor',ya.side==='right'?'start':'end').call(svgTextUtils.positionText,(ya.side==='right'?1:-1)*(HOVERTEXTPAD+HOVERARROWSIZE),outerTop-tbb.top-tbb.height/2);var leftsign=ya.side==='right'?'':'-';lpath.attr('d','M0,0'+'L'+leftsign+HOVERARROWSIZE+','+HOVERARROWSIZE+'V'+(HOVERTEXTPAD+tbb.height/2)+'h'+leftsign+(HOVERTEXTPAD*2+tbb.width)+'V-'+(HOVERTEXTPAD+tbb.height/2)+'H'+leftsign+HOVERARROWSIZE+'V-'+HOVERARROWSIZE+'Z');label.attr('transform','translate('+(xa._offset+(ya.side==='right'?xa._length:0))+','+(ya._offset+(c0.y0+c0.y1)/2)+')');}// remove the \"close but not quite\" points\n// because of error bars, only take up to a space\nhoverData=hoverData.filter(function(d){return d.zLabelVal!==undefined||(d[commonAttr]||'').split(' ')[0]===t00;});});// show all the individual labels\n// first create the objects\nvar hoverLabels=container.selectAll('g.hovertext').data(hoverData,function(d){return[d.trace.index,d.index,d.x0,d.y0,d.name,d.attr,d.xa,d.ya||''].join(',');});hoverLabels.enter().append('g').classed('hovertext',true).each(function(){var g=d3.select(this);// trace name label (rect and text.name)\ng.append('rect').call(Color.fill,Color.addOpacity(bgColor,0.8));g.append('text').classed('name',true);// trace data label (path and text.nums)\ng.append('path').style('stroke-width','1px');g.append('text').classed('nums',true).call(Drawing.font,fontFamily,fontSize);});hoverLabels.exit().remove();// then put the text in, position the pointer to the data,\n// and figure out sizes\nhoverLabels.each(function(d){var g=d3.select(this).attr('transform','');var name='';var text='';// combine possible non-opaque trace color with bgColor\nvar color0=d.bgcolor||d.color;// color for 'nums' part of the label\nvar numsColor=Color.combine(Color.opacity(color0)?color0:Color.defaultLine,bgColor);// color for 'name' part of the label\nvar nameColor=Color.combine(Color.opacity(d.color)?d.color:Color.defaultLine,bgColor);// find a contrasting color for border and text\nvar contrastColor=d.borderColor||Color.contrast(numsColor);// to get custom 'name' labels pass cleanPoint\nif(d.nameOverride!==undefined)d.name=d.nameOverride;if(d.name){// strip out our pseudo-html elements from d.name (if it exists at all)\nname=svgTextUtils.plainText(d.name||'');var nameLength=Math.round(d.nameLength);if(nameLength>-1&&name.length>nameLength){if(nameLength>3)name=name.substr(0,nameLength-3)+'...';else name=name.substr(0,nameLength);}}if(d.zLabel!==undefined){if(d.xLabel!==undefined)text+='x: '+d.xLabel+'<br>';if(d.yLabel!==undefined)text+='y: '+d.yLabel+'<br>';text+=(text?'z: ':'')+d.zLabel;}else if(showCommonLabel&&d[hovermode+'Label']===t0){text=d[(hovermode==='x'?'y':'x')+'Label']||'';}else if(d.xLabel===undefined){if(d.yLabel!==undefined)text=d.yLabel;}else if(d.yLabel===undefined)text=d.xLabel;else text='('+d.xLabel+', '+d.yLabel+')';if((d.text||d.text===0)&&!Array.isArray(d.text)){text+=(text?'<br>':'')+d.text;}// used by other modules (initially just ternary) that\n// manage their own hoverinfo independent of cleanPoint\n// the rest of this will still apply, so such modules\n// can still put things in (x|y|z)Label, text, and name\n// and hoverinfo will still determine their visibility\nif(d.extraText!==undefined)text+=(text?'<br>':'')+d.extraText;// if 'text' is empty at this point,\n// put 'name' in main label and don't show secondary label\nif(text===''){// if 'name' is also empty, remove entire label\nif(name==='')g.remove();text=name;}// hovertemplate\nvar hovertemplate=d.hovertemplate||false;var hovertemplateLabels=d.hovertemplateLabels||d;var eventData=d.eventData[0]||{};if(hovertemplate){text=Lib.hovertemplateString(hovertemplate,hovertemplateLabels,eventData);text=text.replace(EXTRA_STRING_REGEX,function(match,extra){name=extra;// Assign name for secondary text label\nreturn'';// Remove from main text label\n});}// main label\nvar tx=g.select('text.nums').call(Drawing.font,d.fontFamily||fontFamily,d.fontSize||fontSize,d.fontColor||contrastColor).text(text).attr('data-notex',1).call(svgTextUtils.positionText,0,0).call(svgTextUtils.convertToTspans,gd);var tx2=g.select('text.name');var tx2width=0;// secondary label for non-empty 'name'\nif(name&&name!==text){tx2.call(Drawing.font,d.fontFamily||fontFamily,d.fontSize||fontSize,nameColor).text(name).attr('data-notex',1).call(svgTextUtils.positionText,0,0).call(svgTextUtils.convertToTspans,gd);tx2width=tx2.node().getBoundingClientRect().width+2*HOVERTEXTPAD;}else{tx2.remove();g.select('rect').remove();}g.select('path').style({fill:numsColor,stroke:contrastColor});var tbb=tx.node().getBoundingClientRect();var htx=d.xa._offset+(d.x0+d.x1)/2;var hty=d.ya._offset+(d.y0+d.y1)/2;var dx=Math.abs(d.x1-d.x0);var dy=Math.abs(d.y1-d.y0);var txTotalWidth=tbb.width+HOVERARROWSIZE+HOVERTEXTPAD+tx2width;var anchorStartOK,anchorEndOK;d.ty0=outerTop-tbb.top;d.bx=tbb.width+2*HOVERTEXTPAD;d.by=tbb.height+2*HOVERTEXTPAD;d.anchor='start';d.txwidth=tbb.width;d.tx2width=tx2width;d.offset=0;if(rotateLabels){d.pos=htx;anchorStartOK=hty+dy/2+txTotalWidth<=outerHeight;anchorEndOK=hty-dy/2-txTotalWidth>=0;if((d.idealAlign==='top'||!anchorStartOK)&&anchorEndOK){hty-=dy/2;d.anchor='end';}else if(anchorStartOK){hty+=dy/2;d.anchor='start';}else d.anchor='middle';}else{d.pos=hty;anchorStartOK=htx+dx/2+txTotalWidth<=outerWidth;anchorEndOK=htx-dx/2-txTotalWidth>=0;if((d.idealAlign==='left'||!anchorStartOK)&&anchorEndOK){htx-=dx/2;d.anchor='end';}else if(anchorStartOK){htx+=dx/2;d.anchor='start';}else d.anchor='middle';}tx.attr('text-anchor',d.anchor);if(tx2width)tx2.attr('text-anchor',d.anchor);g.attr('transform','translate('+htx+','+hty+')'+(rotateLabels?'rotate('+YANGLE+')':''));});return hoverLabels;}// Make groups of touching points, and within each group\n// move each point so that no labels overlap, but the average\n// label position is the same as it was before moving. Indicentally,\n// this is equivalent to saying all the labels are on equal linear\n// springs about their initial position. Initially, each point is\n// its own group, but as we find overlaps we will clump the points.\n//\n// Also, there are hard constraints at the edges of the graphs,\n// that push all groups to the middle so they are visible. I don't\n// know what happens if the group spans all the way from one edge to\n// the other, though it hardly matters - there's just too much\n// information then.\nfunction hoverAvoidOverlaps(hoverData,ax,fullLayout){var nummoves=0;var axSign=1;// make groups of touching points\nvar pointgroups=hoverData.map(function(d,i){var axis=d[ax];var axIsX=axis._id.charAt(0)==='x';var rng=axis.range;if(!i&&rng&&rng[0]>rng[1]!==axIsX)axSign=-1;return[{i:i,traceIndex:d.trace.index,dp:0,pos:d.pos,posref:d.posref,size:d.by*(axIsX?YFACTOR:1)/2,pmin:0,pmax:axIsX?fullLayout.width:fullLayout.height}];}).sort(function(a,b){return a[0].posref-b[0].posref||// for equal positions, sort trace indices increasing or decreasing\n// depending on whether the axis is reversed or not... so stacked\n// traces will generally keep their order even if one trace adds\n// nothing to the stack.\naxSign*(b[0].traceIndex-a[0].traceIndex);});var donepositioning,topOverlap,bottomOverlap,i,j,pti,sumdp;function constrainGroup(grp){var minPt=grp[0];var maxPt=grp[grp.length-1];// overlap with the top - positive vals are overlaps\ntopOverlap=minPt.pmin-minPt.pos-minPt.dp+minPt.size;// overlap with the bottom - positive vals are overlaps\nbottomOverlap=maxPt.pos+maxPt.dp+maxPt.size-minPt.pmax;// check for min overlap first, so that we always\n// see the largest labels\n// allow for .01px overlap, so we don't get an\n// infinite loop from rounding errors\nif(topOverlap>0.01){for(j=grp.length-1;j>=0;j--){grp[j].dp+=topOverlap;}donepositioning=false;}if(bottomOverlap<0.01)return;if(topOverlap<-0.01){// make sure we're not pushing back and forth\nfor(j=grp.length-1;j>=0;j--){grp[j].dp-=bottomOverlap;}donepositioning=false;}if(!donepositioning)return;// no room to fix positioning, delete off-screen points\n// first see how many points we need to delete\nvar deleteCount=0;for(i=0;i<grp.length;i++){pti=grp[i];if(pti.pos+pti.dp+pti.size>minPt.pmax)deleteCount++;}// start by deleting points whose data is off screen\nfor(i=grp.length-1;i>=0;i--){if(deleteCount<=0)break;pti=grp[i];// pos has already been constrained to [pmin,pmax]\n// so look for points close to that to delete\nif(pti.pos>minPt.pmax-1){pti.del=true;deleteCount--;}}for(i=0;i<grp.length;i++){if(deleteCount<=0)break;pti=grp[i];// pos has already been constrained to [pmin,pmax]\n// so look for points close to that to delete\nif(pti.pos<minPt.pmin+1){pti.del=true;deleteCount--;// shift the whole group minus into this new space\nbottomOverlap=pti.size*2;for(j=grp.length-1;j>=0;j--){grp[j].dp-=bottomOverlap;}}}// then delete points that go off the bottom\nfor(i=grp.length-1;i>=0;i--){if(deleteCount<=0)break;pti=grp[i];if(pti.pos+pti.dp+pti.size>minPt.pmax){pti.del=true;deleteCount--;}}}// loop through groups, combining them if they overlap,\n// until nothing moves\nwhile(!donepositioning&&nummoves<=hoverData.length){// to avoid infinite loops, don't move more times\n// than there are traces\nnummoves++;// assume nothing will move in this iteration,\n// reverse this if it does\ndonepositioning=true;i=0;while(i<pointgroups.length-1){// the higher (g0) and lower (g1) point group\nvar g0=pointgroups[i];var g1=pointgroups[i+1];// the lowest point in the higher group (p0)\n// the highest point in the lower group (p1)\nvar p0=g0[g0.length-1];var p1=g1[0];topOverlap=p0.pos+p0.dp+p0.size-p1.pos-p1.dp+p1.size;// Only group points that lie on the same axes\nif(topOverlap>0.01&&p0.pmin===p1.pmin&&p0.pmax===p1.pmax){// push the new point(s) added to this group out of the way\nfor(j=g1.length-1;j>=0;j--){g1[j].dp+=topOverlap;}// add them to the group\ng0.push.apply(g0,g1);pointgroups.splice(i+1,1);// adjust for minimum average movement\nsumdp=0;for(j=g0.length-1;j>=0;j--){sumdp+=g0[j].dp;}bottomOverlap=sumdp/g0.length;for(j=g0.length-1;j>=0;j--){g0[j].dp-=bottomOverlap;}donepositioning=false;}else i++;}// check if we're going off the plot on either side and fix\npointgroups.forEach(constrainGroup);}// now put these offsets into hoverData\nfor(i=pointgroups.length-1;i>=0;i--){var grp=pointgroups[i];for(j=grp.length-1;j>=0;j--){var pt=grp[j];var hoverPt=hoverData[pt.i];hoverPt.offset=pt.dp;hoverPt.del=pt.del;}}}function alignHoverText(hoverLabels,rotateLabels){// finally set the text positioning relative to the data and draw the\n// box around it\nhoverLabels.each(function(d){var g=d3.select(this);if(d.del){g.remove();return;}var horzSign=d.anchor==='end'?-1:1;var tx=g.select('text.nums');var alignShift={start:1,end:-1,middle:0}[d.anchor];var txx=alignShift*(HOVERARROWSIZE+HOVERTEXTPAD);var tx2x=txx+alignShift*(d.txwidth+HOVERTEXTPAD);var offsetX=0;var offsetY=d.offset;if(d.anchor==='middle'){txx-=d.tx2width/2;tx2x+=d.txwidth/2+HOVERTEXTPAD;}if(rotateLabels){offsetY*=-YSHIFTY;offsetX=d.offset*YSHIFTX;}g.select('path').attr('d',d.anchor==='middle'?// middle aligned: rect centered on data\n'M-'+(d.bx/2+d.tx2width/2)+','+(offsetY-d.by/2)+'h'+d.bx+'v'+d.by+'h-'+d.bx+'Z':// left or right aligned: side rect with arrow to data\n'M0,0L'+(horzSign*HOVERARROWSIZE+offsetX)+','+(HOVERARROWSIZE+offsetY)+'v'+(d.by/2-HOVERARROWSIZE)+'h'+horzSign*d.bx+'v-'+d.by+'H'+(horzSign*HOVERARROWSIZE+offsetX)+'V'+(offsetY-HOVERARROWSIZE)+'Z');tx.call(svgTextUtils.positionText,txx+offsetX,offsetY+d.ty0-d.by/2+HOVERTEXTPAD);if(d.tx2width){g.select('text.name').call(svgTextUtils.positionText,tx2x+alignShift*HOVERTEXTPAD+offsetX,offsetY+d.ty0-d.by/2+HOVERTEXTPAD);g.select('rect').call(Drawing.setRect,tx2x+(alignShift-1)*d.tx2width/2+offsetX,offsetY-d.by/2-1,d.tx2width,d.by+2);}});}function cleanPoint(d,hovermode){var index=d.index;var trace=d.trace||{};var cd0=d.cd[0];var cd=d.cd[index]||{};var getVal=Array.isArray(index)?function(calcKey,traceKey){return Lib.castOption(cd0,index,calcKey)||Lib.extractOption({},trace,'',traceKey);}:function(calcKey,traceKey){return Lib.extractOption(cd,trace,calcKey,traceKey);};function fill(key,calcKey,traceKey){var val=getVal(calcKey,traceKey);if(val)d[key]=val;}fill('hoverinfo','hi','hoverinfo');fill('bgcolor','hbg','hoverlabel.bgcolor');fill('borderColor','hbc','hoverlabel.bordercolor');fill('fontFamily','htf','hoverlabel.font.family');fill('fontSize','hts','hoverlabel.font.size');fill('fontColor','htc','hoverlabel.font.color');fill('nameLength','hnl','hoverlabel.namelength');d.posref=hovermode==='y'||hovermode==='closest'&&trace.orientation==='h'?d.xa._offset+(d.x0+d.x1)/2:d.ya._offset+(d.y0+d.y1)/2;// then constrain all the positions to be on the plot\nd.x0=Lib.constrain(d.x0,0,d.xa._length);d.x1=Lib.constrain(d.x1,0,d.xa._length);d.y0=Lib.constrain(d.y0,0,d.ya._length);d.y1=Lib.constrain(d.y1,0,d.ya._length);// and convert the x and y label values into formatted text\nif(d.xLabelVal!==undefined){d.xLabel='xLabel'in d?d.xLabel:Axes.hoverLabelText(d.xa,d.xLabelVal);d.xVal=d.xa.c2d(d.xLabelVal);}if(d.yLabelVal!==undefined){d.yLabel='yLabel'in d?d.yLabel:Axes.hoverLabelText(d.ya,d.yLabelVal);d.yVal=d.ya.c2d(d.yLabelVal);}// Traces like heatmaps generate the zLabel in their hoverPoints function\nif(d.zLabelVal!==undefined&&d.zLabel===undefined){d.zLabel=String(d.zLabelVal);}// for box means and error bars, add the range to the label\nif(!isNaN(d.xerr)&&!(d.xa.type==='log'&&d.xerr<=0)){var xeText=Axes.tickText(d.xa,d.xa.c2l(d.xerr),'hover').text;if(d.xerrneg!==undefined){d.xLabel+=' +'+xeText+' / -'+Axes.tickText(d.xa,d.xa.c2l(d.xerrneg),'hover').text;}else d.xLabel+=' ± '+xeText;// small distance penalty for error bars, so that if there are\n// traces with errors and some without, the error bar label will\n// hoist up to the point\nif(hovermode==='x')d.distance+=1;}if(!isNaN(d.yerr)&&!(d.ya.type==='log'&&d.yerr<=0)){var yeText=Axes.tickText(d.ya,d.ya.c2l(d.yerr),'hover').text;if(d.yerrneg!==undefined){d.yLabel+=' +'+yeText+' / -'+Axes.tickText(d.ya,d.ya.c2l(d.yerrneg),'hover').text;}else d.yLabel+=' ± '+yeText;if(hovermode==='y')d.distance+=1;}var infomode=d.hoverinfo||d.trace.hoverinfo;if(infomode&&infomode!=='all'){infomode=Array.isArray(infomode)?infomode:infomode.split('+');if(infomode.indexOf('x')===-1)d.xLabel=undefined;if(infomode.indexOf('y')===-1)d.yLabel=undefined;if(infomode.indexOf('z')===-1)d.zLabel=undefined;if(infomode.indexOf('text')===-1)d.text=undefined;if(infomode.indexOf('name')===-1)d.name=undefined;}return d;}function createSpikelines(closestPoints,opts){var container=opts.container;var fullLayout=opts.fullLayout;var evt=opts.event;var showY=!!closestPoints.hLinePoint;var showX=!!closestPoints.vLinePoint;var xa,ya;// Remove old spikeline items\ncontainer.selectAll('.spikeline').remove();if(!(showX||showY))return;var contrastColor=Color.combine(fullLayout.plot_bgcolor,fullLayout.paper_bgcolor);// Horizontal line (to y-axis)\nif(showY){var hLinePoint=closestPoints.hLinePoint;var hLinePointX,hLinePointY;xa=hLinePoint&&hLinePoint.xa;ya=hLinePoint&&hLinePoint.ya;var ySnap=ya.spikesnap;if(ySnap==='cursor'){hLinePointX=evt.pointerX;hLinePointY=evt.pointerY;}else{hLinePointX=xa._offset+hLinePoint.x;hLinePointY=ya._offset+hLinePoint.y;}var dfltHLineColor=tinycolor.readability(hLinePoint.color,contrastColor)<1.5?Color.contrast(contrastColor):hLinePoint.color;var yMode=ya.spikemode;var yThickness=ya.spikethickness;var yColor=ya.spikecolor||dfltHLineColor;var yBB=ya._boundingBox;var xEdge=(yBB.left+yBB.right)/2<hLinePointX?yBB.right:yBB.left;var xBase,xEndSpike;if(yMode.indexOf('toaxis')!==-1||yMode.indexOf('across')!==-1){if(yMode.indexOf('toaxis')!==-1){xBase=xEdge;xEndSpike=hLinePointX;}if(yMode.indexOf('across')!==-1){xBase=ya._counterSpan[0];xEndSpike=ya._counterSpan[1];}// Foreground horizontal line (to y-axis)\ncontainer.insert('line',':first-child').attr({x1:xBase,x2:xEndSpike,y1:hLinePointY,y2:hLinePointY,'stroke-width':yThickness,stroke:yColor,'stroke-dasharray':Drawing.dashStyle(ya.spikedash,yThickness)}).classed('spikeline',true).classed('crisp',true);// Background horizontal Line (to y-axis)\ncontainer.insert('line',':first-child').attr({x1:xBase,x2:xEndSpike,y1:hLinePointY,y2:hLinePointY,'stroke-width':yThickness+2,stroke:contrastColor}).classed('spikeline',true).classed('crisp',true);}// Y axis marker\nif(yMode.indexOf('marker')!==-1){container.insert('circle',':first-child').attr({cx:xEdge+(ya.side!=='right'?yThickness:-yThickness),cy:hLinePointY,r:yThickness,fill:yColor}).classed('spikeline',true);}}if(showX){var vLinePoint=closestPoints.vLinePoint;var vLinePointX,vLinePointY;xa=vLinePoint&&vLinePoint.xa;ya=vLinePoint&&vLinePoint.ya;var xSnap=xa.spikesnap;if(xSnap==='cursor'){vLinePointX=evt.pointerX;vLinePointY=evt.pointerY;}else{vLinePointX=xa._offset+vLinePoint.x;vLinePointY=ya._offset+vLinePoint.y;}var dfltVLineColor=tinycolor.readability(vLinePoint.color,contrastColor)<1.5?Color.contrast(contrastColor):vLinePoint.color;var xMode=xa.spikemode;var xThickness=xa.spikethickness;var xColor=xa.spikecolor||dfltVLineColor;var xBB=xa._boundingBox;var yEdge=(xBB.top+xBB.bottom)/2<vLinePointY?xBB.bottom:xBB.top;var yBase,yEndSpike;if(xMode.indexOf('toaxis')!==-1||xMode.indexOf('across')!==-1){if(xMode.indexOf('toaxis')!==-1){yBase=yEdge;yEndSpike=vLinePointY;}if(xMode.indexOf('across')!==-1){yBase=xa._counterSpan[0];yEndSpike=xa._counterSpan[1];}// Foreground vertical line (to x-axis)\ncontainer.insert('line',':first-child').attr({x1:vLinePointX,x2:vLinePointX,y1:yBase,y2:yEndSpike,'stroke-width':xThickness,stroke:xColor,'stroke-dasharray':Drawing.dashStyle(xa.spikedash,xThickness)}).classed('spikeline',true).classed('crisp',true);// Background vertical line (to x-axis)\ncontainer.insert('line',':first-child').attr({x1:vLinePointX,x2:vLinePointX,y1:yBase,y2:yEndSpike,'stroke-width':xThickness+2,stroke:contrastColor}).classed('spikeline',true).classed('crisp',true);}// X axis marker\nif(xMode.indexOf('marker')!==-1){container.insert('circle',':first-child').attr({cx:vLinePointX,cy:yEdge-(xa.side!=='top'?xThickness:-xThickness),r:xThickness,fill:xColor}).classed('spikeline',true);}}}function hoverChanged(gd,evt,oldhoverdata){// don't emit any events if nothing changed\nif(!oldhoverdata||oldhoverdata.length!==gd._hoverdata.length)return true;for(var i=oldhoverdata.length-1;i>=0;i--){var oldPt=oldhoverdata[i];var newPt=gd._hoverdata[i];if(oldPt.curveNumber!==newPt.curveNumber||String(oldPt.pointNumber)!==String(newPt.pointNumber)||String(oldPt.pointNumbers)!==String(newPt.pointNumbers)){return true;}}return false;}function spikesChanged(gd,oldspikepoints){// don't relayout the plot because of new spikelines if spikelines points didn't change\nif(!oldspikepoints)return true;if(oldspikepoints.vLinePoint!==gd._spikepoints.vLinePoint||oldspikepoints.hLinePoint!==gd._spikepoints.hLinePoint)return true;return false;}},{\"../../lib\":423,\"../../lib/events\":415,\"../../lib/override_cursor\":434,\"../../lib/svg_text_utils\":446,\"../../plots/cartesian/axes\":469,\"../../registry\":521,\"../color\":299,\"../dragelement\":317,\"../drawing\":320,\"./constants\":332,\"./helpers\":334,\"d3\":71,\"fast-isnumeric\":80,\"tinycolor2\":264}],336:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');module.exports=function handleHoverLabelDefaults(contIn,contOut,coerce,opts){opts=opts||{};coerce('hoverlabel.bgcolor',opts.bgcolor);coerce('hoverlabel.bordercolor',opts.bordercolor);coerce('hoverlabel.namelength',opts.namelength);Lib.coerceFont(coerce,'hoverlabel.font',opts.font);};},{\"../../lib\":423}],337:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports=function(opts,extra){opts=opts||{};extra=extra||{};var descPart=extra.description?' '+extra.description:'';var keys=extra.keys||[];if(keys.length>0){var quotedKeys=[];for(var i=0;i<keys.length;i++){quotedKeys[i]='`'+keys[i]+'`';}descPart=descPart+'Finally, the template string has access to ';if(keys.length===1){descPart='variable '+quotedKeys[0];}else{descPart='variables '+quotedKeys.slice(0,-1).join(', ')+' and '+quotedKeys.slice(-1)+'.';}}var hovertemplate={valType:'string',dflt:'',arrayOk:true,editType:'none'};return hovertemplate;};},{}],338:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Lib=_dereq_('../../lib');var dragElement=_dereq_('../dragelement');var helpers=_dereq_('./helpers');var layoutAttributes=_dereq_('./layout_attributes');var hoverModule=_dereq_('./hover');module.exports={moduleType:'component',name:'fx',constants:_dereq_('./constants'),schema:{layout:layoutAttributes},attributes:_dereq_('./attributes'),layoutAttributes:layoutAttributes,supplyLayoutGlobalDefaults:_dereq_('./layout_global_defaults'),supplyDefaults:_dereq_('./defaults'),supplyLayoutDefaults:_dereq_('./layout_defaults'),calc:_dereq_('./calc'),getDistanceFunction:helpers.getDistanceFunction,getClosest:helpers.getClosest,inbox:helpers.inbox,quadrature:helpers.quadrature,appendArrayPointValue:helpers.appendArrayPointValue,castHoverOption:castHoverOption,castHoverinfo:castHoverinfo,hover:hoverModule.hover,unhover:dragElement.unhover,loneHover:hoverModule.loneHover,multiHovers:hoverModule.multiHovers,loneUnhover:loneUnhover,click:_dereq_('./click')};function loneUnhover(containerOrSelection){// duck type whether the arg is a d3 selection because ie9 doesn't\n// handle instanceof like modern browsers do.\nvar selection=Lib.isD3Selection(containerOrSelection)?containerOrSelection:d3.select(containerOrSelection);selection.selectAll('g.hovertext').remove();selection.selectAll('.spikeline').remove();}// helpers for traces that use Fx.loneHover\nfunction castHoverOption(trace,ptNumber,attr){return Lib.castOption(trace,ptNumber,'hoverlabel.'+attr);}function castHoverinfo(trace,fullLayout,ptNumber){function _coerce(val){return Lib.coerceHoverinfo({hoverinfo:val},{_module:trace._module},fullLayout);}return Lib.castOption(trace,ptNumber,'hoverinfo',_coerce);}},{\"../../lib\":423,\"../dragelement\":317,\"./attributes\":329,\"./calc\":330,\"./click\":331,\"./constants\":332,\"./defaults\":333,\"./helpers\":334,\"./hover\":335,\"./layout_attributes\":339,\"./layout_defaults\":340,\"./layout_global_defaults\":341,\"d3\":71}],339:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var constants=_dereq_('./constants');var fontAttrs=_dereq_('../../plots/font_attributes')({editType:'none'});fontAttrs.family.dflt=constants.HOVERFONT;fontAttrs.size.dflt=constants.HOVERFONTSIZE;module.exports={clickmode:{valType:'flaglist',flags:['event','select'],dflt:'event',editType:'plot',extras:['none']},dragmode:{valType:'enumerated',values:['zoom','pan','select','lasso','orbit','turntable',false],dflt:'zoom',editType:'modebar'},hovermode:{valType:'enumerated',values:['x','y','closest',false],editType:'modebar'},hoverdistance:{valType:'integer',min:-1,dflt:20,editType:'none'},spikedistance:{valType:'integer',min:-1,dflt:20,editType:'none'},hoverlabel:{bgcolor:{valType:'color',editType:'none'},bordercolor:{valType:'color',editType:'none'},font:fontAttrs,namelength:{valType:'integer',min:-1,dflt:15,editType:'none'},editType:'none'},selectdirection:{valType:'enumerated',values:['h','v','d','any'],dflt:'any',editType:'none'}};},{\"../../plots/font_attributes\":496,\"./constants\":332}],340:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var layoutAttributes=_dereq_('./layout_attributes');module.exports=function supplyLayoutDefaults(layoutIn,layoutOut,fullData){function coerce(attr,dflt){return Lib.coerce(layoutIn,layoutOut,layoutAttributes,attr,dflt);}var clickmode=coerce('clickmode');var dragMode=coerce('dragmode');if(dragMode==='select')coerce('selectdirection');var hovermodeDflt;if(layoutOut._has('cartesian')){if(clickmode.indexOf('select')>-1){hovermodeDflt='closest';}else{// flag for 'horizontal' plots:\n// determines the state of the mode bar 'compare' hovermode button\nlayoutOut._isHoriz=isHoriz(fullData);hovermodeDflt=layoutOut._isHoriz?'y':'x';}}else hovermodeDflt='closest';var hoverMode=coerce('hovermode',hovermodeDflt);if(hoverMode){coerce('hoverdistance');coerce('spikedistance');}// if only mapbox or geo subplots is present on graph,\n// reset 'zoom' dragmode to 'pan' until 'zoom' is implemented,\n// so that the correct modebar button is active\nvar hasMapbox=layoutOut._has('mapbox');var hasGeo=layoutOut._has('geo');var len=layoutOut._basePlotModules.length;if(layoutOut.dragmode==='zoom'&&((hasMapbox||hasGeo)&&len===1||hasMapbox&&hasGeo&&len===2)){layoutOut.dragmode='pan';}};function isHoriz(fullData){var out=true;for(var i=0;i<fullData.length;i++){var trace=fullData[i];if(trace.orientation!=='h'){out=false;break;}}return out;}},{\"../../lib\":423,\"./layout_attributes\":339}],341:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var handleHoverLabelDefaults=_dereq_('./hoverlabel_defaults');var layoutAttributes=_dereq_('./layout_attributes');module.exports=function supplyLayoutGlobalDefaults(layoutIn,layoutOut){function coerce(attr,dflt){return Lib.coerce(layoutIn,layoutOut,layoutAttributes,attr,dflt);}handleHoverLabelDefaults(layoutIn,layoutOut,coerce);};},{\"../../lib\":423,\"./hoverlabel_defaults\":336,\"./layout_attributes\":339}],342:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var counterRegex=_dereq_('../../lib/regex').counter;var domainAttrs=_dereq_('../../plots/domain').attributes;var cartesianIdRegex=_dereq_('../../plots/cartesian/constants').idRegex;var Template=_dereq_('../../plot_api/plot_template');var gridAttrs={rows:{valType:'integer',min:1,editType:'plot'},roworder:{valType:'enumerated',values:['top to bottom','bottom to top'],dflt:'top to bottom',editType:'plot'},columns:{valType:'integer',min:1,editType:'plot'},subplots:{valType:'info_array',freeLength:true,dimensions:2,items:{valType:'enumerated',values:[counterRegex('xy').toString(),''],editType:'plot'},editType:'plot'},xaxes:{valType:'info_array',freeLength:true,items:{valType:'enumerated',values:[cartesianIdRegex.x.toString(),''],editType:'plot'},editType:'plot'},yaxes:{valType:'info_array',freeLength:true,items:{valType:'enumerated',values:[cartesianIdRegex.y.toString(),''],editType:'plot'},editType:'plot'},pattern:{valType:'enumerated',values:['independent','coupled'],dflt:'coupled',editType:'plot'},xgap:{valType:'number',min:0,max:1,editType:'plot'},ygap:{valType:'number',min:0,max:1,editType:'plot'},domain:domainAttrs({name:'grid',editType:'plot',noGridCell:true},{}),xside:{valType:'enumerated',values:['bottom','bottom plot','top plot','top'],dflt:'bottom plot',editType:'plot'},yside:{valType:'enumerated',values:['left','left plot','right plot','right'],dflt:'left plot',editType:'plot'},editType:'plot'};function getAxes(layout,grid,axLetter){var gridVal=grid[axLetter+'axes'];var splomVal=Object.keys((layout._splomAxes||{})[axLetter]||{});if(Array.isArray(gridVal))return gridVal;if(splomVal.length)return splomVal;}// the shape of the grid - this needs to be done BEFORE supplyDataDefaults\n// so that non-subplot traces can place themselves in the grid\nfunction sizeDefaults(layoutIn,layoutOut){var gridIn=layoutIn.grid||{};var xAxes=getAxes(layoutOut,gridIn,'x');var yAxes=getAxes(layoutOut,gridIn,'y');if(!layoutIn.grid&&!xAxes&&!yAxes)return;var hasSubplotGrid=Array.isArray(gridIn.subplots)&&Array.isArray(gridIn.subplots[0]);var hasXaxes=Array.isArray(xAxes);var hasYaxes=Array.isArray(yAxes);var isSplomGenerated=hasXaxes&&xAxes!==gridIn.xaxes&&hasYaxes&&yAxes!==gridIn.yaxes;var dfltRows,dfltColumns;if(hasSubplotGrid){dfltRows=gridIn.subplots.length;dfltColumns=gridIn.subplots[0].length;}else{if(hasYaxes)dfltRows=yAxes.length;if(hasXaxes)dfltColumns=xAxes.length;}var gridOut=Template.newContainer(layoutOut,'grid');function coerce(attr,dflt){return Lib.coerce(gridIn,gridOut,gridAttrs,attr,dflt);}var rows=coerce('rows',dfltRows);var columns=coerce('columns',dfltColumns);if(!(rows*columns>1)){delete layoutOut.grid;return;}if(!hasSubplotGrid&&!hasXaxes&&!hasYaxes){var useDefaultSubplots=coerce('pattern')==='independent';if(useDefaultSubplots)hasSubplotGrid=true;}gridOut._hasSubplotGrid=hasSubplotGrid;var rowOrder=coerce('roworder');var reversed=rowOrder==='top to bottom';var dfltGapX=hasSubplotGrid?0.2:0.1;var dfltGapY=hasSubplotGrid?0.3:0.1;var dfltSideX,dfltSideY;if(isSplomGenerated&&layoutOut._splomGridDflt){dfltSideX=layoutOut._splomGridDflt.xside;dfltSideY=layoutOut._splomGridDflt.yside;}gridOut._domains={x:fillGridPositions('x',coerce,dfltGapX,dfltSideX,columns),y:fillGridPositions('y',coerce,dfltGapY,dfltSideY,rows,reversed)};}// coerce x or y sizing attributes and return an array of domains for this direction\nfunction fillGridPositions(axLetter,coerce,dfltGap,dfltSide,len,reversed){var dirGap=coerce(axLetter+'gap',dfltGap);var domain=coerce('domain.'+axLetter);coerce(axLetter+'side',dfltSide);var out=new Array(len);var start=domain[0];var step=(domain[1]-start)/(len-dirGap);var cellDomain=step*(1-dirGap);for(var i=0;i<len;i++){var cellStart=start+step*i;out[reversed?len-1-i:i]=[cellStart,cellStart+cellDomain];}return out;}// the (cartesian) contents of the grid - this needs to happen AFTER supplyDataDefaults\n// so that we know what cartesian subplots are available\nfunction contentDefaults(layoutIn,layoutOut){var gridOut=layoutOut.grid;// make sure we got to the end of handleGridSizing\nif(!gridOut||!gridOut._domains)return;var gridIn=layoutIn.grid||{};var subplots=layoutOut._subplots;var hasSubplotGrid=gridOut._hasSubplotGrid;var rows=gridOut.rows;var columns=gridOut.columns;var useDefaultSubplots=gridOut.pattern==='independent';var i,j,xId,yId,subplotId,subplotsOut,yPos;var axisMap=gridOut._axisMap={};if(hasSubplotGrid){var subplotsIn=gridIn.subplots||[];subplotsOut=gridOut.subplots=new Array(rows);var index=1;for(i=0;i<rows;i++){var rowOut=subplotsOut[i]=new Array(columns);var rowIn=subplotsIn[i]||[];for(j=0;j<columns;j++){if(useDefaultSubplots){subplotId=index===1?'xy':'x'+index+'y'+index;index++;}else subplotId=rowIn[j];rowOut[j]='';if(subplots.cartesian.indexOf(subplotId)!==-1){yPos=subplotId.indexOf('y');xId=subplotId.slice(0,yPos);yId=subplotId.slice(yPos);if(axisMap[xId]!==undefined&&axisMap[xId]!==j||axisMap[yId]!==undefined&&axisMap[yId]!==i){continue;}rowOut[j]=subplotId;axisMap[xId]=j;axisMap[yId]=i;}}}}else{var xAxes=getAxes(layoutOut,gridIn,'x');var yAxes=getAxes(layoutOut,gridIn,'y');gridOut.xaxes=fillGridAxes(xAxes,subplots.xaxis,columns,axisMap,'x');gridOut.yaxes=fillGridAxes(yAxes,subplots.yaxis,rows,axisMap,'y');}var anchors=gridOut._anchors={};var reversed=gridOut.roworder==='top to bottom';for(var axisId in axisMap){var axLetter=axisId.charAt(0);var side=gridOut[axLetter+'side'];var i0,inc,iFinal;if(side.length<8){// grid edge -  ie not \"* plot\" - make these as free axes\n// since we're not guaranteed to have a subplot there at all\nanchors[axisId]='free';}else if(axLetter==='x'){if(side.charAt(0)==='t'===reversed){i0=0;inc=1;iFinal=rows;}else{i0=rows-1;inc=-1;iFinal=-1;}if(hasSubplotGrid){var column=axisMap[axisId];for(i=i0;i!==iFinal;i+=inc){subplotId=subplotsOut[i][column];if(!subplotId)continue;yPos=subplotId.indexOf('y');if(subplotId.slice(0,yPos)===axisId){anchors[axisId]=subplotId.slice(yPos);break;}}}else{for(i=i0;i!==iFinal;i+=inc){yId=gridOut.yaxes[i];if(subplots.cartesian.indexOf(axisId+yId)!==-1){anchors[axisId]=yId;break;}}}}else{if(side.charAt(0)==='l'){i0=0;inc=1;iFinal=columns;}else{i0=columns-1;inc=-1;iFinal=-1;}if(hasSubplotGrid){var row=axisMap[axisId];for(i=i0;i!==iFinal;i+=inc){subplotId=subplotsOut[row][i];if(!subplotId)continue;yPos=subplotId.indexOf('y');if(subplotId.slice(yPos)===axisId){anchors[axisId]=subplotId.slice(0,yPos);break;}}}else{for(i=i0;i!==iFinal;i+=inc){xId=gridOut.xaxes[i];if(subplots.cartesian.indexOf(xId+axisId)!==-1){anchors[axisId]=xId;break;}}}}}}function fillGridAxes(axesIn,axesAllowed,len,axisMap,axLetter){var out=new Array(len);var i;function fillOneAxis(i,axisId){if(axesAllowed.indexOf(axisId)!==-1&&axisMap[axisId]===undefined){out[i]=axisId;axisMap[axisId]=i;}else out[i]='';}if(Array.isArray(axesIn)){for(i=0;i<len;i++){fillOneAxis(i,axesIn[i]);}}else{// default axis list is the first `len` axis ids\nfillOneAxis(0,axLetter);for(i=1;i<len;i++){fillOneAxis(i,axLetter+(i+1));}}return out;}module.exports={moduleType:'component',name:'grid',schema:{layout:{grid:gridAttrs}},layoutAttributes:gridAttrs,sizeDefaults:sizeDefaults,contentDefaults:contentDefaults};},{\"../../lib\":423,\"../../lib/regex\":438,\"../../plot_api/plot_template\":459,\"../../plots/cartesian/constants\":475,\"../../plots/domain\":495}],343:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var cartesianConstants=_dereq_('../../plots/cartesian/constants');var templatedArray=_dereq_('../../plot_api/plot_template').templatedArray;module.exports=templatedArray('image',{visible:{valType:'boolean',dflt:true,editType:'arraydraw'},source:{valType:'string',editType:'arraydraw'},layer:{valType:'enumerated',values:['below','above'],dflt:'above',editType:'arraydraw'},sizex:{valType:'number',dflt:0,editType:'arraydraw'},sizey:{valType:'number',dflt:0,editType:'arraydraw'},sizing:{valType:'enumerated',values:['fill','contain','stretch'],dflt:'contain',editType:'arraydraw'},opacity:{valType:'number',min:0,max:1,dflt:1,editType:'arraydraw'},x:{valType:'any',dflt:0,editType:'arraydraw'},y:{valType:'any',dflt:0,editType:'arraydraw'},xanchor:{valType:'enumerated',values:['left','center','right'],dflt:'left',editType:'arraydraw'},yanchor:{valType:'enumerated',values:['top','middle','bottom'],dflt:'top',editType:'arraydraw'},xref:{valType:'enumerated',values:['paper',cartesianConstants.idRegex.x.toString()],dflt:'paper',editType:'arraydraw'},yref:{valType:'enumerated',values:['paper',cartesianConstants.idRegex.y.toString()],dflt:'paper',editType:'arraydraw'},editType:'arraydraw'});},{\"../../plot_api/plot_template\":459,\"../../plots/cartesian/constants\":475}],344:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var toLogRange=_dereq_('../../lib/to_log_range');/*\n * convertCoords: when converting an axis between log and linear\n * you need to alter any images on that axis to keep them\n * pointing at the same data point.\n * In v2.0 this will become obsolete (or perhaps size will still need conversion?)\n * we convert size by declaring that the maximum extent *in data units* should be\n * the same, assuming the image is anchored by its center (could remove that restriction\n * if we think it's important) even though the actual left and right values will not be\n * quite the same since the scale becomes nonlinear (and central anchor means the pixel\n * center of the image, not the data units center)\n *\n * gd: the plot div\n * ax: the axis being changed\n * newType: the type it's getting\n * doExtra: function(attr, val) from inside relayout that sets the attribute.\n *     Use this to make the changes as it's aware if any other changes in the\n *     same relayout call should override this conversion.\n */module.exports=function convertCoords(gd,ax,newType,doExtra){ax=ax||{};var toLog=newType==='log'&&ax.type==='linear';var fromLog=newType==='linear'&&ax.type==='log';if(!(toLog||fromLog))return;var images=gd._fullLayout.images;var axLetter=ax._id.charAt(0);var image;var attrPrefix;for(var i=0;i<images.length;i++){image=images[i];attrPrefix='images['+i+'].';if(image[axLetter+'ref']===ax._id){var currentPos=image[axLetter];var currentSize=image['size'+axLetter];var newPos=null;var newSize=null;if(toLog){newPos=toLogRange(currentPos,ax.range);// this is the inverse of the conversion we do in fromLog below\n// so that the conversion is reversible (notice the fromLog conversion\n// is like sinh, and this one looks like arcsinh)\nvar dx=currentSize/Math.pow(10,newPos)/2;newSize=2*Math.log(dx+Math.sqrt(1+dx*dx))/Math.LN10;}else{newPos=Math.pow(10,currentPos);newSize=newPos*(Math.pow(10,currentSize/2)-Math.pow(10,-currentSize/2));}// if conversion failed, delete the value so it can get a default later on\nif(!isNumeric(newPos)){newPos=null;newSize=null;}else if(!isNumeric(newSize))newSize=null;doExtra(attrPrefix+axLetter,newPos);doExtra(attrPrefix+'size'+axLetter,newSize);}}};},{\"../../lib/to_log_range\":448,\"fast-isnumeric\":80}],345:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Axes=_dereq_('../../plots/cartesian/axes');var handleArrayContainerDefaults=_dereq_('../../plots/array_container_defaults');var attributes=_dereq_('./attributes');var name='images';module.exports=function supplyLayoutDefaults(layoutIn,layoutOut){var opts={name:name,handleItemDefaults:imageDefaults};handleArrayContainerDefaults(layoutIn,layoutOut,opts);};function imageDefaults(imageIn,imageOut,fullLayout){function coerce(attr,dflt){return Lib.coerce(imageIn,imageOut,attributes,attr,dflt);}var source=coerce('source');var visible=coerce('visible',!!source);if(!visible)return imageOut;coerce('layer');coerce('xanchor');coerce('yanchor');coerce('sizex');coerce('sizey');coerce('sizing');coerce('opacity');var gdMock={_fullLayout:fullLayout};var axLetters=['x','y'];for(var i=0;i<2;i++){// 'paper' is the fallback axref\nvar axLetter=axLetters[i];var axRef=Axes.coerceRef(imageIn,imageOut,gdMock,axLetter,'paper');Axes.coercePosition(imageOut,gdMock,coerce,axRef,axLetter,0);}return imageOut;}},{\"../../lib\":423,\"../../plots/array_container_defaults\":465,\"../../plots/cartesian/axes\":469,\"./attributes\":343}],346:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Drawing=_dereq_('../drawing');var Axes=_dereq_('../../plots/cartesian/axes');var xmlnsNamespaces=_dereq_('../../constants/xmlns_namespaces');module.exports=function draw(gd){var fullLayout=gd._fullLayout;var imageDataAbove=[];var imageDataSubplot={};var imageDataBelow=[];var subplot;var i;// Sort into top, subplot, and bottom layers\nfor(i=0;i<fullLayout.images.length;i++){var img=fullLayout.images[i];if(img.visible){if(img.layer==='below'&&img.xref!=='paper'&&img.yref!=='paper'){subplot=img.xref+img.yref;var plotinfo=fullLayout._plots[subplot];if(!plotinfo){// Fall back to _imageLowerLayer in case the requested subplot doesn't exist.\n// This can happen if you reference the image to an x / y axis combination\n// that doesn't have any data on it (and layer is below)\nimageDataBelow.push(img);continue;}if(plotinfo.mainplot){subplot=plotinfo.mainplot.id;}if(!imageDataSubplot[subplot]){imageDataSubplot[subplot]=[];}imageDataSubplot[subplot].push(img);}else if(img.layer==='above'){imageDataAbove.push(img);}else{imageDataBelow.push(img);}}}var anchors={x:{left:{sizing:'xMin',offset:0},center:{sizing:'xMid',offset:-1/2},right:{sizing:'xMax',offset:-1}},y:{top:{sizing:'YMin',offset:0},middle:{sizing:'YMid',offset:-1/2},bottom:{sizing:'YMax',offset:-1}}};// Images must be converted to dataURL's for exporting.\nfunction setImage(d){var thisImage=d3.select(this);if(this.img&&this.img.src===d.source){return;}thisImage.attr('xmlns',xmlnsNamespaces.svg);var imagePromise=new Promise(function(resolve){var img=new Image();this.img=img;// If not set, a `tainted canvas` error is thrown\nimg.setAttribute('crossOrigin','anonymous');img.onerror=errorHandler;img.onload=function(){var canvas=document.createElement('canvas');canvas.width=this.width;canvas.height=this.height;var ctx=canvas.getContext('2d');ctx.drawImage(this,0,0);var dataURL=canvas.toDataURL('image/png');thisImage.attr('xlink:href',dataURL);// resolve promise in onload handler instead of on 'load' to support IE11\n// see https://github.com/plotly/plotly.js/issues/1685\n// for more details\nresolve();};thisImage.on('error',errorHandler);img.src=d.source;function errorHandler(){thisImage.remove();resolve();}}.bind(this));gd._promises.push(imagePromise);}function applyAttributes(d){var thisImage=d3.select(this);// Axes if specified\nvar xa=Axes.getFromId(gd,d.xref);var ya=Axes.getFromId(gd,d.yref);var size=fullLayout._size;var width=xa?Math.abs(xa.l2p(d.sizex)-xa.l2p(0)):d.sizex*size.w;var height=ya?Math.abs(ya.l2p(d.sizey)-ya.l2p(0)):d.sizey*size.h;// Offsets for anchor positioning\nvar xOffset=width*anchors.x[d.xanchor].offset;var yOffset=height*anchors.y[d.yanchor].offset;var sizing=anchors.x[d.xanchor].sizing+anchors.y[d.yanchor].sizing;// Final positions\nvar xPos=(xa?xa.r2p(d.x)+xa._offset:d.x*size.w+size.l)+xOffset;var yPos=(ya?ya.r2p(d.y)+ya._offset:size.h-d.y*size.h+size.t)+yOffset;// Construct the proper aspectRatio attribute\nswitch(d.sizing){case'fill':sizing+=' slice';break;case'stretch':sizing='none';break;}thisImage.attr({x:xPos,y:yPos,width:width,height:height,preserveAspectRatio:sizing,opacity:d.opacity});// Set proper clipping on images\nvar xId=xa?xa._id:'';var yId=ya?ya._id:'';var clipAxes=xId+yId;Drawing.setClipUrl(thisImage,clipAxes?'clip'+fullLayout._uid+clipAxes:null,gd);}var imagesBelow=fullLayout._imageLowerLayer.selectAll('image').data(imageDataBelow);var imagesAbove=fullLayout._imageUpperLayer.selectAll('image').data(imageDataAbove);imagesBelow.enter().append('image');imagesAbove.enter().append('image');imagesBelow.exit().remove();imagesAbove.exit().remove();imagesBelow.each(function(d){setImage.bind(this)(d);applyAttributes.bind(this)(d);});imagesAbove.each(function(d){setImage.bind(this)(d);applyAttributes.bind(this)(d);});var allSubplots=Object.keys(fullLayout._plots);for(i=0;i<allSubplots.length;i++){subplot=allSubplots[i];var subplotObj=fullLayout._plots[subplot];// filter out overlaid plots (which havd their images on the main plot)\n// and gl2d plots (which don't support below images, at least not yet)\nif(!subplotObj.imagelayer)continue;var imagesOnSubplot=subplotObj.imagelayer.selectAll('image')// even if there are no images on this subplot, we need to run\n// enter and exit in case there were previously\n.data(imageDataSubplot[subplot]||[]);imagesOnSubplot.enter().append('image');imagesOnSubplot.exit().remove();imagesOnSubplot.each(function(d){setImage.bind(this)(d);applyAttributes.bind(this)(d);});}};},{\"../../constants/xmlns_namespaces\":399,\"../../plots/cartesian/axes\":469,\"../drawing\":320,\"d3\":71}],347:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={moduleType:'component',name:'images',layoutAttributes:_dereq_('./attributes'),supplyLayoutDefaults:_dereq_('./defaults'),includeBasePlot:_dereq_('../../plots/cartesian/include_components')('images'),draw:_dereq_('./draw'),convertCoords:_dereq_('./convert_coords')};},{\"../../plots/cartesian/include_components\":480,\"./attributes\":343,\"./convert_coords\":344,\"./defaults\":345,\"./draw\":346}],348:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var fontAttrs=_dereq_('../../plots/font_attributes');var colorAttrs=_dereq_('../color/attributes');module.exports={bgcolor:{valType:'color',editType:'legend'},bordercolor:{valType:'color',dflt:colorAttrs.defaultLine,editType:'legend'},borderwidth:{valType:'number',min:0,dflt:0,editType:'legend'},font:fontAttrs({editType:'legend'}),orientation:{valType:'enumerated',values:['v','h'],dflt:'v',editType:'legend'},traceorder:{valType:'flaglist',flags:['reversed','grouped'],extras:['normal'],editType:'legend'},tracegroupgap:{valType:'number',min:0,dflt:10,editType:'legend'},x:{valType:'number',min:-2,max:3,dflt:1.02,editType:'legend'},xanchor:{valType:'enumerated',values:['auto','left','center','right'],dflt:'left',editType:'legend'},y:{valType:'number',min:-2,max:3,dflt:1,editType:'legend'},yanchor:{valType:'enumerated',values:['auto','top','middle','bottom'],dflt:'auto',editType:'legend'},uirevision:{valType:'any',editType:'none'},valign:{valType:'enumerated',values:['top','middle','bottom'],dflt:'middle',editType:'legend'},editType:'legend'};},{\"../../plots/font_attributes\":496,\"../color/attributes\":298}],349:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={scrollBarWidth:6,scrollBarMinHeight:20,scrollBarColor:'#808BA4',scrollBarMargin:4,textOffsetX:40};},{}],350:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var Template=_dereq_('../../plot_api/plot_template');var attributes=_dereq_('./attributes');var basePlotLayoutAttributes=_dereq_('../../plots/layout_attributes');var helpers=_dereq_('./helpers');module.exports=function legendDefaults(layoutIn,layoutOut,fullData){var containerIn=layoutIn.legend||{};var legendTraceCount=0;var legendReallyHasATrace=false;var defaultOrder='normal';var defaultX,defaultY,defaultXAnchor,defaultYAnchor;for(var i=0;i<fullData.length;i++){var trace=fullData[i];if(!trace.visible)continue;// Note that we explicitly count any trace that is either shown or\n// *would* be shown by default, toward the two traces you need to\n// ensure the legend is shown by default, because this can still help\n// disambiguate.\nif(trace.showlegend||trace._dfltShowLegend){legendTraceCount++;if(trace.showlegend){legendReallyHasATrace=true;// Always show the legend by default if there's a pie,\n// or if there's only one trace but it's explicitly shown\nif(Registry.traceIs(trace,'pie')||trace._input.showlegend===true){legendTraceCount++;}}}if(Registry.traceIs(trace,'bar')&&layoutOut.barmode==='stack'||['tonextx','tonexty'].indexOf(trace.fill)!==-1){defaultOrder=helpers.isGrouped({traceorder:defaultOrder})?'grouped+reversed':'reversed';}if(trace.legendgroup!==undefined&&trace.legendgroup!==''){defaultOrder=helpers.isReversed({traceorder:defaultOrder})?'reversed+grouped':'grouped';}}var showLegend=Lib.coerce(layoutIn,layoutOut,basePlotLayoutAttributes,'showlegend',legendReallyHasATrace&&legendTraceCount>1);if(showLegend===false&&!containerIn.uirevision)return;var containerOut=Template.newContainer(layoutOut,'legend');function coerce(attr,dflt){return Lib.coerce(containerIn,containerOut,attributes,attr,dflt);}coerce('uirevision',layoutOut.uirevision);if(showLegend===false)return;coerce('bgcolor',layoutOut.paper_bgcolor);coerce('bordercolor');coerce('borderwidth');Lib.coerceFont(coerce,'font',layoutOut.font);coerce('orientation');if(containerOut.orientation==='h'){var xaxis=layoutIn.xaxis;if(Registry.getComponentMethod('rangeslider','isVisible')(xaxis)){defaultX=0;defaultXAnchor='left';defaultY=1.1;defaultYAnchor='bottom';}else{defaultX=0;defaultXAnchor='left';defaultY=-0.1;defaultYAnchor='top';}}coerce('traceorder',defaultOrder);if(helpers.isGrouped(layoutOut.legend))coerce('tracegroupgap');coerce('x',defaultX);coerce('xanchor',defaultXAnchor);coerce('y',defaultY);coerce('yanchor',defaultYAnchor);coerce('valign');Lib.noneOrAll(containerIn,containerOut,['x','y']);};},{\"../../lib\":423,\"../../plot_api/plot_template\":459,\"../../plots/layout_attributes\":511,\"../../registry\":521,\"./attributes\":348,\"./helpers\":354}],351:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Lib=_dereq_('../../lib');var Plots=_dereq_('../../plots/plots');var Registry=_dereq_('../../registry');var Events=_dereq_('../../lib/events');var dragElement=_dereq_('../dragelement');var Drawing=_dereq_('../drawing');var Color=_dereq_('../color');var svgTextUtils=_dereq_('../../lib/svg_text_utils');var handleClick=_dereq_('./handle_click');var constants=_dereq_('./constants');var interactConstants=_dereq_('../../constants/interactions');var alignmentConstants=_dereq_('../../constants/alignment');var LINE_SPACING=alignmentConstants.LINE_SPACING;var FROM_TL=alignmentConstants.FROM_TL;var FROM_BR=alignmentConstants.FROM_BR;var getLegendData=_dereq_('./get_legend_data');var style=_dereq_('./style');var helpers=_dereq_('./helpers');var DBLCLICKDELAY=interactConstants.DBLCLICKDELAY;module.exports=function draw(gd){var fullLayout=gd._fullLayout;var clipId='legend'+fullLayout._uid;if(!fullLayout._infolayer||!gd.calcdata)return;if(!gd._legendMouseDownTime)gd._legendMouseDownTime=0;var opts=fullLayout.legend;var legendData=fullLayout.showlegend&&getLegendData(gd.calcdata,opts);var hiddenSlices=fullLayout.hiddenlabels||[];if(!fullLayout.showlegend||!legendData.length){fullLayout._infolayer.selectAll('.legend').remove();fullLayout._topdefs.select('#'+clipId).remove();Plots.autoMargin(gd,'legend');return;}var maxLength=0;for(var i=0;i<legendData.length;i++){for(var j=0;j<legendData[i].length;j++){var item=legendData[i][j][0];var trace=item.trace;var isPie=Registry.traceIs(trace,'pie');var name=isPie?item.label:trace.name;maxLength=Math.max(maxLength,name&&name.length||0);}}var firstRender=false;var legend=Lib.ensureSingle(fullLayout._infolayer,'g','legend',function(s){s.attr('pointer-events','all');firstRender=true;});var clipPath=Lib.ensureSingleById(fullLayout._topdefs,'clipPath',clipId,function(s){s.append('rect');});var bg=Lib.ensureSingle(legend,'rect','bg',function(s){s.attr('shape-rendering','crispEdges');});bg.call(Color.stroke,opts.bordercolor).call(Color.fill,opts.bgcolor).style('stroke-width',opts.borderwidth+'px');var scrollBox=Lib.ensureSingle(legend,'g','scrollbox');var scrollBar=Lib.ensureSingle(legend,'rect','scrollbar',function(s){s.attr({rx:20,ry:3,width:0,height:0}).call(Color.fill,'#808BA4');});var groups=scrollBox.selectAll('g.groups').data(legendData);groups.enter().append('g').attr('class','groups');groups.exit().remove();var traces=groups.selectAll('g.traces').data(Lib.identity);traces.enter().append('g').attr('class','traces');traces.exit().remove();traces.call(style,gd).style('opacity',function(d){var trace=d[0].trace;if(Registry.traceIs(trace,'pie')){return hiddenSlices.indexOf(d[0].label)!==-1?0.5:1;}else{return trace.visible==='legendonly'?0.5:1;}}).each(function(){d3.select(this).call(drawTexts,gd,maxLength).call(setupTraceToggle,gd);});Lib.syncOrAsync([Plots.previousPromises,function(){if(firstRender){computeLegendDimensions(gd,groups,traces);expandMargin(gd);}// Position and size the legend\nvar lxMin=0;var lxMax=fullLayout.width;var lyMin=0;var lyMax=fullLayout.height;computeLegendDimensions(gd,groups,traces);if(opts._height>lyMax){// If the legend doesn't fit in the plot area,\n// do not expand the vertical margins.\nexpandHorizontalMargin(gd);}else{expandMargin(gd);}// Scroll section must be executed after repositionLegend.\n// It requires the legend width, height, x and y to position the scrollbox\n// and these values are mutated in repositionLegend.\nvar gs=fullLayout._size;var lx=gs.l+gs.w*opts.x;var ly=gs.t+gs.h*(1-opts.y);if(Lib.isRightAnchor(opts)){lx-=opts._width;}else if(Lib.isCenterAnchor(opts)){lx-=opts._width/2;}if(Lib.isBottomAnchor(opts)){ly-=opts._height;}else if(Lib.isMiddleAnchor(opts)){ly-=opts._height/2;}// Make sure the legend left and right sides are visible\nvar legendWidth=opts._width;var legendWidthMax=gs.w;if(legendWidth>legendWidthMax){lx=gs.l;legendWidth=legendWidthMax;}else{if(lx+legendWidth>lxMax)lx=lxMax-legendWidth;if(lx<lxMin)lx=lxMin;legendWidth=Math.min(lxMax-lx,opts._width);}// Make sure the legend top and bottom are visible\n// (legends with a scroll bar are not allowed to stretch beyond the extended\n// margins)\nvar legendHeight=opts._height;var legendHeightMax=gs.h;if(legendHeight>legendHeightMax){ly=gs.t;legendHeight=legendHeightMax;}else{if(ly+legendHeight>lyMax)ly=lyMax-legendHeight;if(ly<lyMin)ly=lyMin;legendHeight=Math.min(lyMax-ly,opts._height);}// Set size and position of all the elements that make up a legend:\n// legend, background and border, scroll box and scroll bar\nDrawing.setTranslate(legend,lx,ly);// to be safe, remove previous listeners\nscrollBar.on('.drag',null);legend.on('wheel',null);if(opts._height<=legendHeight||gd._context.staticPlot){// if scrollbar should not be shown.\nbg.attr({width:legendWidth-opts.borderwidth,height:legendHeight-opts.borderwidth,x:opts.borderwidth/2,y:opts.borderwidth/2});Drawing.setTranslate(scrollBox,0,0);clipPath.select('rect').attr({width:legendWidth-2*opts.borderwidth,height:legendHeight-2*opts.borderwidth,x:opts.borderwidth,y:opts.borderwidth});Drawing.setClipUrl(scrollBox,clipId,gd);Drawing.setRect(scrollBar,0,0,0,0);delete opts._scrollY;}else{var scrollBarHeight=Math.max(constants.scrollBarMinHeight,legendHeight*legendHeight/opts._height);var scrollBarYMax=legendHeight-scrollBarHeight-2*constants.scrollBarMargin;var scrollBoxYMax=opts._height-legendHeight;var scrollRatio=scrollBarYMax/scrollBoxYMax;var scrollBoxY=Math.min(opts._scrollY||0,scrollBoxYMax);// increase the background and clip-path width\n// by the scrollbar width and margin\nbg.attr({width:legendWidth-2*opts.borderwidth+constants.scrollBarWidth+constants.scrollBarMargin,height:legendHeight-opts.borderwidth,x:opts.borderwidth/2,y:opts.borderwidth/2});clipPath.select('rect').attr({width:legendWidth-2*opts.borderwidth+constants.scrollBarWidth+constants.scrollBarMargin,height:legendHeight-2*opts.borderwidth,x:opts.borderwidth,y:opts.borderwidth+scrollBoxY});Drawing.setClipUrl(scrollBox,clipId,gd);scrollHandler(scrollBoxY,scrollBarHeight,scrollRatio);legend.on('wheel',function(){scrollBoxY=Lib.constrain(opts._scrollY+d3.event.deltaY/scrollBarYMax*scrollBoxYMax,0,scrollBoxYMax);scrollHandler(scrollBoxY,scrollBarHeight,scrollRatio);if(scrollBoxY!==0&&scrollBoxY!==scrollBoxYMax){d3.event.preventDefault();}});var eventY0,scrollBoxY0;var drag=d3.behavior.drag().on('dragstart',function(){eventY0=d3.event.sourceEvent.clientY;scrollBoxY0=scrollBoxY;}).on('drag',function(){var e=d3.event.sourceEvent;if(e.buttons===2||e.ctrlKey)return;scrollBoxY=Lib.constrain((e.clientY-eventY0)/scrollRatio+scrollBoxY0,0,scrollBoxYMax);scrollHandler(scrollBoxY,scrollBarHeight,scrollRatio);});scrollBar.call(drag);}function scrollHandler(scrollBoxY,scrollBarHeight,scrollRatio){opts._scrollY=gd._fullLayout.legend._scrollY=scrollBoxY;Drawing.setTranslate(scrollBox,0,-scrollBoxY);Drawing.setRect(scrollBar,legendWidth,constants.scrollBarMargin+scrollBoxY*scrollRatio,constants.scrollBarWidth,scrollBarHeight);clipPath.select('rect').attr({y:opts.borderwidth+scrollBoxY});}if(gd._context.edits.legendPosition){var xf,yf,x0,y0;legend.classed('cursor-move',true);dragElement.init({element:legend.node(),gd:gd,prepFn:function prepFn(){var transform=Drawing.getTranslate(legend);x0=transform.x;y0=transform.y;},moveFn:function moveFn(dx,dy){var newX=x0+dx;var newY=y0+dy;Drawing.setTranslate(legend,newX,newY);xf=dragElement.align(newX,0,gs.l,gs.l+gs.w,opts.xanchor);yf=dragElement.align(newY,0,gs.t+gs.h,gs.t,opts.yanchor);},doneFn:function doneFn(){if(xf!==undefined&&yf!==undefined){Registry.call('_guiRelayout',gd,{'legend.x':xf,'legend.y':yf});}},clickFn:function clickFn(numClicks,e){var clickedTrace=fullLayout._infolayer.selectAll('g.traces').filter(function(){var bbox=this.getBoundingClientRect();return e.clientX>=bbox.left&&e.clientX<=bbox.right&&e.clientY>=bbox.top&&e.clientY<=bbox.bottom;});if(clickedTrace.size()>0){clickOrDoubleClick(gd,legend,clickedTrace,numClicks,e);}}});}}],gd);};function clickOrDoubleClick(gd,legend,legendItem,numClicks,evt){var trace=legendItem.data()[0][0].trace;var evtData={event:evt,node:legendItem.node(),curveNumber:trace.index,expandedIndex:trace._expandedIndex,data:gd.data,layout:gd.layout,frames:gd._transitionData._frames,config:gd._context,fullData:gd._fullData,fullLayout:gd._fullLayout};if(trace._group){evtData.group=trace._group;}if(trace.type==='pie'){evtData.label=legendItem.datum()[0].label;}var clickVal=Events.triggerHandler(gd,'plotly_legendclick',evtData);if(clickVal===false)return;if(numClicks===1){legend._clickTimeout=setTimeout(function(){handleClick(legendItem,gd,numClicks);},DBLCLICKDELAY);}else if(numClicks===2){if(legend._clickTimeout)clearTimeout(legend._clickTimeout);gd._legendMouseDownTime=0;var dblClickVal=Events.triggerHandler(gd,'plotly_legenddoubleclick',evtData);if(dblClickVal!==false)handleClick(legendItem,gd,numClicks);}}function drawTexts(g,gd,maxLength){var legendItem=g.data()[0][0];var fullLayout=gd._fullLayout;var trace=legendItem.trace;var isPie=Registry.traceIs(trace,'pie');var traceIndex=trace.index;var name=isPie?legendItem.label:trace.name;var isEditable=gd._context.edits.legendText&&!isPie;var textEl=Lib.ensureSingle(g,'text','legendtext');textEl.attr('text-anchor','start').classed('user-select-none',true).call(Drawing.font,fullLayout.legend.font).text(isEditable?ensureLength(name,maxLength):name);svgTextUtils.positionText(textEl,constants.textOffsetX,0);function textLayout(s){svgTextUtils.convertToTspans(s,gd,function(){computeTextDimensions(g,gd);});}if(isEditable){textEl.call(svgTextUtils.makeEditable,{gd:gd,text:name}).call(textLayout).on('edit',function(newName){this.text(ensureLength(newName,maxLength)).call(textLayout);var fullInput=legendItem.trace._fullInput||{};var update={};if(Registry.hasTransform(fullInput,'groupby')){var groupbyIndices=Registry.getTransformIndices(fullInput,'groupby');var index=groupbyIndices[groupbyIndices.length-1];var kcont=Lib.keyedContainer(fullInput,'transforms['+index+'].styles','target','value.name');kcont.set(legendItem.trace._group,newName);update=kcont.constructUpdate();}else{update.name=newName;}return Registry.call('_guiRestyle',gd,update,traceIndex);});}else{textLayout(textEl);}}/*\n * Make sure we have a reasonably clickable region.\n * If this string is missing or very short, pad it with spaces out to at least\n * 4 characters, up to the max length of other labels, on the assumption that\n * most characters are wider than spaces so a string of spaces will usually be\n * no wider than the real labels.\n */function ensureLength(str,maxLength){var targetLength=Math.max(4,maxLength);if(str&&str.trim().length>=targetLength/2)return str;str=str||'';for(var i=targetLength-str.length;i>0;i--){str+=' ';}return str;}function setupTraceToggle(g,gd){var newMouseDownTime;var numClicks=1;var traceToggle=Lib.ensureSingle(g,'rect','legendtoggle',function(s){s.style('cursor','pointer').attr('pointer-events','all').call(Color.fill,'rgba(0,0,0,0)');});traceToggle.on('mousedown',function(){newMouseDownTime=new Date().getTime();if(newMouseDownTime-gd._legendMouseDownTime<DBLCLICKDELAY){// in a click train\nnumClicks+=1;}else{// new click train\nnumClicks=1;gd._legendMouseDownTime=newMouseDownTime;}});traceToggle.on('mouseup',function(){if(gd._dragged||gd._editing)return;var legend=gd._fullLayout.legend;if(new Date().getTime()-gd._legendMouseDownTime>DBLCLICKDELAY){numClicks=Math.max(numClicks-1,1);}clickOrDoubleClick(gd,legend,g,numClicks,d3.event);});}function computeTextDimensions(g,gd){var legendItem=g.data()[0][0];if(!legendItem.trace.showlegend){g.remove();return;}var mathjaxGroup=g.select('g[class*=math-group]');var mathjaxNode=mathjaxGroup.node();var opts=gd._fullLayout.legend;var lineHeight=opts.font.size*LINE_SPACING;var height,width;if(mathjaxNode){var mathjaxBB=Drawing.bBox(mathjaxNode);height=mathjaxBB.height;width=mathjaxBB.width;Drawing.setTranslate(mathjaxGroup,0,height/4);}else{var text=g.select('.legendtext');var textLines=svgTextUtils.lineCount(text);var textNode=text.node();height=lineHeight*textLines;width=textNode?Drawing.bBox(textNode).width:0;// approximation to height offset to center the font\n// to avoid getBoundingClientRect\nvar textY=lineHeight*(0.3+(1-textLines)/2);svgTextUtils.positionText(text,constants.textOffsetX,textY);legendItem.lineHeight=lineHeight;}height=Math.max(height,16)+3;legendItem.height=height;legendItem.width=width;}function computeLegendDimensions(gd,groups,traces){var fullLayout=gd._fullLayout;var opts=fullLayout.legend;var borderwidth=opts.borderwidth;var isGrouped=helpers.isGrouped(opts);var extraWidth=0;opts._width=0;opts._height=0;if(helpers.isVertical(opts)){if(isGrouped){groups.each(function(d,i){Drawing.setTranslate(this,0,i*opts.tracegroupgap);});}traces.each(function(d){var legendItem=d[0];var textHeight=legendItem.height;var textWidth=legendItem.width;Drawing.setTranslate(this,borderwidth,5+borderwidth+opts._height+textHeight/2);opts._height+=textHeight;opts._width=Math.max(opts._width,textWidth);});opts._width+=45+borderwidth*2;opts._height+=10+borderwidth*2;if(isGrouped){opts._height+=(opts._lgroupsLength-1)*opts.tracegroupgap;}extraWidth=40;}else if(isGrouped){var groupXOffsets=[opts._width];var groupData=groups.data();for(var i=0,n=groupData.length;i<n;i++){var textWidths=groupData[i].map(function(legendItemArray){return legendItemArray[0].width;});var groupWidth=40+Math.max.apply(null,textWidths);opts._width+=opts.tracegroupgap+groupWidth;groupXOffsets.push(opts._width);}groups.each(function(d,i){Drawing.setTranslate(this,groupXOffsets[i],0);});groups.each(function(){var group=d3.select(this);var groupTraces=group.selectAll('g.traces');var groupHeight=0;groupTraces.each(function(d){var legendItem=d[0];var textHeight=legendItem.height;Drawing.setTranslate(this,0,5+borderwidth+groupHeight+textHeight/2);groupHeight+=textHeight;});opts._height=Math.max(opts._height,groupHeight);});opts._height+=10+borderwidth*2;opts._width+=borderwidth*2;}else{var rowHeight=0;var maxTraceHeight=0;var maxTraceWidth=0;var offsetX=0;var fullTracesWidth=0;var traceGap=opts.tracegroupgap||5;var oneRowLegend;// calculate largest width for traces and use for width of all legend items\ntraces.each(function(d){maxTraceWidth=Math.max(40+d[0].width,maxTraceWidth);fullTracesWidth+=40+d[0].width+traceGap;});// check if legend fits in one row\noneRowLegend=fullLayout._size.w>borderwidth+fullTracesWidth-traceGap;traces.each(function(d){var legendItem=d[0];var traceWidth=oneRowLegend?40+d[0].width:maxTraceWidth;if(borderwidth+offsetX+traceGap+traceWidth>fullLayout._size.w){offsetX=0;rowHeight=rowHeight+maxTraceHeight;opts._height=opts._height+maxTraceHeight;// reset for next row\nmaxTraceHeight=0;}Drawing.setTranslate(this,borderwidth+offsetX,5+borderwidth+legendItem.height/2+rowHeight);opts._width+=traceGap+traceWidth;opts._height=Math.max(opts._height,legendItem.height);// keep track of tallest trace in group\noffsetX+=traceGap+traceWidth;maxTraceHeight=Math.max(legendItem.height,maxTraceHeight);});opts._width+=borderwidth*2;opts._height+=10+borderwidth*2;}// make sure we're only getting full pixels\nopts._width=Math.ceil(opts._width);opts._height=Math.ceil(opts._height);var isEditable=gd._context.edits.legendText||gd._context.edits.legendPosition;traces.each(function(d){var legendItem=d[0];var bg=d3.select(this).select('.legendtoggle');Drawing.setRect(bg,0,-legendItem.height/2,(isEditable?0:opts._width)+extraWidth,legendItem.height);});}function expandMargin(gd){var fullLayout=gd._fullLayout;var opts=fullLayout.legend;var xanchor='left';if(Lib.isRightAnchor(opts)){xanchor='right';}else if(Lib.isCenterAnchor(opts)){xanchor='center';}var yanchor='top';if(Lib.isBottomAnchor(opts)){yanchor='bottom';}else if(Lib.isMiddleAnchor(opts)){yanchor='middle';}// lastly check if the margin auto-expand has changed\nPlots.autoMargin(gd,'legend',{x:opts.x,y:opts.y,l:opts._width*FROM_TL[xanchor],r:opts._width*FROM_BR[xanchor],b:opts._height*FROM_BR[yanchor],t:opts._height*FROM_TL[yanchor]});}function expandHorizontalMargin(gd){var fullLayout=gd._fullLayout;var opts=fullLayout.legend;var xanchor='left';if(Lib.isRightAnchor(opts)){xanchor='right';}else if(Lib.isCenterAnchor(opts)){xanchor='center';}// lastly check if the margin auto-expand has changed\nPlots.autoMargin(gd,'legend',{x:opts.x,y:0.5,l:opts._width*FROM_TL[xanchor],r:opts._width*FROM_BR[xanchor],b:0,t:0});}},{\"../../constants/alignment\":394,\"../../constants/interactions\":397,\"../../lib\":423,\"../../lib/events\":415,\"../../lib/svg_text_utils\":446,\"../../plots/plots\":513,\"../../registry\":521,\"../color\":299,\"../dragelement\":317,\"../drawing\":320,\"./constants\":349,\"./get_legend_data\":352,\"./handle_click\":353,\"./helpers\":354,\"./style\":356,\"d3\":71}],352:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../../registry');var helpers=_dereq_('./helpers');module.exports=function getLegendData(calcdata,opts){var lgroupToTraces={};var lgroups=[];var hasOneNonBlankGroup=false;var slicesShown={};var lgroupi=0;var i,j;function addOneItem(legendGroup,legendItem){// each '' legend group is treated as a separate group\nif(legendGroup===''||!helpers.isGrouped(opts)){var uniqueGroup='~~i'+lgroupi;// TODO: check this against fullData legendgroups?\nlgroups.push(uniqueGroup);lgroupToTraces[uniqueGroup]=[[legendItem]];lgroupi++;}else if(lgroups.indexOf(legendGroup)===-1){lgroups.push(legendGroup);hasOneNonBlankGroup=true;lgroupToTraces[legendGroup]=[[legendItem]];}else lgroupToTraces[legendGroup].push([legendItem]);}// build an { legendgroup: [cd0, cd0], ... } object\nfor(i=0;i<calcdata.length;i++){var cd=calcdata[i];var cd0=cd[0];var trace=cd0.trace;var lgroup=trace.legendgroup;if(!trace.visible||!trace.showlegend)continue;if(Registry.traceIs(trace,'pie')){if(!slicesShown[lgroup])slicesShown[lgroup]={};for(j=0;j<cd.length;j++){var labelj=cd[j].label;if(!slicesShown[lgroup][labelj]){addOneItem(lgroup,{label:labelj,color:cd[j].color,i:cd[j].i,trace:trace,pts:cd[j].pts});slicesShown[lgroup][labelj]=true;}}}else addOneItem(lgroup,cd0);}// won't draw a legend in this case\nif(!lgroups.length)return[];// rearrange lgroupToTraces into a d3-friendly array of arrays\nvar lgroupsLength=lgroups.length;var ltraces;var legendData;if(hasOneNonBlankGroup&&helpers.isGrouped(opts)){legendData=new Array(lgroupsLength);for(i=0;i<lgroupsLength;i++){ltraces=lgroupToTraces[lgroups[i]];legendData[i]=helpers.isReversed(opts)?ltraces.reverse():ltraces;}}else{// collapse all groups into one if all groups are blank\nlegendData=[new Array(lgroupsLength)];for(i=0;i<lgroupsLength;i++){ltraces=lgroupToTraces[lgroups[i]][0];legendData[0][helpers.isReversed(opts)?lgroupsLength-i-1:i]=ltraces;}lgroupsLength=1;}// needed in repositionLegend\nopts._lgroupsLength=lgroupsLength;return legendData;};},{\"../../registry\":521,\"./helpers\":354}],353:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Registry=_dereq_('../../registry');var SHOWISOLATETIP=true;module.exports=function handleClick(g,gd,numClicks){if(gd._dragged||gd._editing)return;var hiddenSlices=gd._fullLayout.hiddenlabels?gd._fullLayout.hiddenlabels.slice():[];var legendItem=g.data()[0][0];var fullData=gd._fullData;var fullTrace=legendItem.trace;var legendgroup=fullTrace.legendgroup;var i,j,kcont,key,keys,val;var attrUpdate={};var attrIndices=[];var carrs=[];var carrIdx=[];function insertUpdate(traceIndex,key,value){var attrIndex=attrIndices.indexOf(traceIndex);var valueArray=attrUpdate[key];if(!valueArray){valueArray=attrUpdate[key]=[];}if(attrIndices.indexOf(traceIndex)===-1){attrIndices.push(traceIndex);attrIndex=attrIndices.length-1;}valueArray[attrIndex]=value;return attrIndex;}function setVisibility(fullTrace,visibility){var fullInput=fullTrace._fullInput;if(Registry.hasTransform(fullInput,'groupby')){var kcont=carrs[fullInput.index];if(!kcont){var groupbyIndices=Registry.getTransformIndices(fullInput,'groupby');var lastGroupbyIndex=groupbyIndices[groupbyIndices.length-1];kcont=Lib.keyedContainer(fullInput,'transforms['+lastGroupbyIndex+'].styles','target','value.visible');carrs[fullInput.index]=kcont;}var curState=kcont.get(fullTrace._group);// If not specified, assume visible. This happens if there are other style\n// properties set for a group but not the visibility. There are many similar\n// ways to do this (e.g. why not just `curState = fullTrace.visible`??? The\n// answer is: because it breaks other things like groupby trace names in\n// subtle ways.)\nif(curState===undefined){curState=true;}if(curState!==false){// true -> legendonly. All others toggle to true:\nkcont.set(fullTrace._group,visibility);}carrIdx[fullInput.index]=insertUpdate(fullInput.index,'visible',fullInput.visible===false?false:true);}else{// false -> false (not possible since will not be visible in legend)\n// true -> legendonly\n// legendonly -> true\nvar nextVisibility=fullInput.visible===false?false:visibility;insertUpdate(fullInput.index,'visible',nextVisibility);}}if(numClicks===1&&SHOWISOLATETIP&&gd.data&&gd._context.showTips){Lib.notifier(Lib._(gd,'Double-click on legend to isolate one trace'),'long');SHOWISOLATETIP=false;}else{SHOWISOLATETIP=false;}if(Registry.traceIs(fullTrace,'pie')){var thisLabel=legendItem.label;var thisLabelIndex=hiddenSlices.indexOf(thisLabel);if(numClicks===1){if(thisLabelIndex===-1)hiddenSlices.push(thisLabel);else hiddenSlices.splice(thisLabelIndex,1);}else if(numClicks===2){hiddenSlices=[];gd.calcdata[0].forEach(function(d){if(thisLabel!==d.label){hiddenSlices.push(d.label);}});if(gd._fullLayout.hiddenlabels&&gd._fullLayout.hiddenlabels.length===hiddenSlices.length&&thisLabelIndex===-1){hiddenSlices=[];}}Registry.call('_guiRelayout',gd,'hiddenlabels',hiddenSlices);}else{var hasLegendgroup=legendgroup&&legendgroup.length;var traceIndicesInGroup=[];var tracei;if(hasLegendgroup){for(i=0;i<fullData.length;i++){tracei=fullData[i];if(!tracei.visible)continue;if(tracei.legendgroup===legendgroup){traceIndicesInGroup.push(i);}}}if(numClicks===1){var nextVisibility;switch(fullTrace.visible){case true:nextVisibility='legendonly';break;case false:nextVisibility=false;break;case'legendonly':nextVisibility=true;break;}if(hasLegendgroup){for(i=0;i<fullData.length;i++){if(fullData[i].visible!==false&&fullData[i].legendgroup===legendgroup){setVisibility(fullData[i],nextVisibility);}}}else{setVisibility(fullTrace,nextVisibility);}}else if(numClicks===2){// Compute the clicked index. expandedIndex does what we want for expanded traces\n// but also culls hidden traces. That means we have some work to do.\nvar isClicked,isInGroup,otherState;var isIsolated=true;for(i=0;i<fullData.length;i++){isClicked=fullData[i]===fullTrace;if(isClicked)continue;isInGroup=hasLegendgroup&&fullData[i].legendgroup===legendgroup;if(!isInGroup&&fullData[i].visible===true&&!Registry.traceIs(fullData[i],'notLegendIsolatable')){isIsolated=false;break;}}for(i=0;i<fullData.length;i++){// False is sticky; we don't change it.\nif(fullData[i].visible===false)continue;if(Registry.traceIs(fullData[i],'notLegendIsolatable')){continue;}switch(fullTrace.visible){case'legendonly':setVisibility(fullData[i],true);break;case true:otherState=isIsolated?true:'legendonly';isClicked=fullData[i]===fullTrace;isInGroup=isClicked||hasLegendgroup&&fullData[i].legendgroup===legendgroup;setVisibility(fullData[i],isInGroup?true:otherState);break;}}}for(i=0;i<carrs.length;i++){kcont=carrs[i];if(!kcont)continue;var update=kcont.constructUpdate();var updateKeys=Object.keys(update);for(j=0;j<updateKeys.length;j++){key=updateKeys[j];val=attrUpdate[key]=attrUpdate[key]||[];val[carrIdx[i]]=update[key];}}// The length of the value arrays should be equal and any unspecified\n// values should be explicitly undefined for them to get properly culled\n// as updates and not accidentally reset to the default value. This fills\n// out sparse arrays with the required number of undefined values:\nkeys=Object.keys(attrUpdate);for(i=0;i<keys.length;i++){key=keys[i];for(j=0;j<attrIndices.length;j++){// Use hasOwnPropety to protect against falsey values:\nif(!attrUpdate[key].hasOwnProperty(j)){attrUpdate[key][j]=undefined;}}}Registry.call('_guiRestyle',gd,attrUpdate,attrIndices);}};},{\"../../lib\":423,\"../../registry\":521}],354:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';exports.isGrouped=function isGrouped(legendLayout){return(legendLayout.traceorder||'').indexOf('grouped')!==-1;};exports.isVertical=function isVertical(legendLayout){return legendLayout.orientation!=='h';};exports.isReversed=function isReversed(legendLayout){return(legendLayout.traceorder||'').indexOf('reversed')!==-1;};},{}],355:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={moduleType:'component',name:'legend',layoutAttributes:_dereq_('./attributes'),supplyLayoutDefaults:_dereq_('./defaults'),draw:_dereq_('./draw'),style:_dereq_('./style')};},{\"./attributes\":348,\"./defaults\":350,\"./draw\":351,\"./style\":356}],356:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var Drawing=_dereq_('../drawing');var Color=_dereq_('../color');var subTypes=_dereq_('../../traces/scatter/subtypes');var stylePie=_dereq_('../../traces/pie/style_one');module.exports=function style(s,gd){s.each(function(d){var traceGroup=d3.select(this);var layers=Lib.ensureSingle(traceGroup,'g','layers');layers.style('opacity',d[0].trace.opacity);// Marker vertical alignment\nvar valign=gd._fullLayout.legend.valign;var lineHeight=d[0].lineHeight;var height=d[0].height;if(valign==='middle'||!lineHeight||!height){layers.attr('transform',null);// this here is a fun d3 trick to unset DOM attributes\n}else{var factor={top:1,bottom:-1}[valign];var markerOffsetY=factor*(0.5*(lineHeight-height+3));layers.attr('transform','translate(0,'+markerOffsetY+')');}var fill=layers.selectAll('g.legendfill').data([d]);fill.enter().append('g').classed('legendfill',true);var line=layers.selectAll('g.legendlines').data([d]);line.enter().append('g').classed('legendlines',true);var symbol=layers.selectAll('g.legendsymbols').data([d]);symbol.enter().append('g').classed('legendsymbols',true);symbol.selectAll('g.legendpoints').data([d]).enter().append('g').classed('legendpoints',true);}).each(styleBars).each(styleBoxes).each(stylePies).each(styleLines).each(stylePoints).each(styleCandles).each(styleOHLC);function styleLines(d){var trace=d[0].trace;var showFill=trace.visible&&trace.fill&&trace.fill!=='none';var showLine=subTypes.hasLines(trace);var contours=trace.contours;var showGradientLine=false;var showGradientFill=false;if(contours){var coloring=contours.coloring;if(coloring==='lines'){showGradientLine=true;}else{showLine=coloring==='none'||coloring==='heatmap'||contours.showlines;}if(contours.type==='constraint'){showFill=contours._operation!=='=';}else if(coloring==='fill'||coloring==='heatmap'){showGradientFill=true;}}// with fill and no markers or text, move the line and fill up a bit\n// so it's more centered\nvar markersOrText=subTypes.hasMarkers(trace)||subTypes.hasText(trace);var anyFill=showFill||showGradientFill;var anyLine=showLine||showGradientLine;var pathStart=markersOrText||!anyFill?'M5,0':// with a line leave it slightly below center, to leave room for the\n// line thickness and because the line is usually more prominent\nanyLine?'M5,-2':'M5,-3';var this3=d3.select(this);var fill=this3.select('.legendfill').selectAll('path').data(showFill||showGradientFill?[d]:[]);fill.enter().append('path').classed('js-fill',true);fill.exit().remove();fill.attr('d',pathStart+'h30v6h-30z').call(showFill?Drawing.fillGroupStyle:fillGradient);var line=this3.select('.legendlines').selectAll('path').data(showLine||showGradientLine?[d]:[]);line.enter().append('path').classed('js-line',true);line.exit().remove();// this is ugly... but you can't apply a gradient to a perfectly\n// horizontal or vertical line. Presumably because then\n// the system doesn't know how to scale vertical variation, even\n// though there *is* no vertical variation in this case.\n// so add an invisibly small angle to the line\n// This issue (and workaround) exist across (Mac) Chrome, FF, and Safari\nline.attr('d',pathStart+(showGradientLine?'l30,0.0001':'h30')).call(showLine?Drawing.lineGroupStyle:lineGradient);function fillGradient(s){if(s.size()){var gradientID='legendfill-'+trace.uid;Drawing.gradient(s,gd,gradientID,'horizontalreversed',trace.colorscale,'fill');}}function lineGradient(s){if(s.size()){var gradientID='legendline-'+trace.uid;Drawing.lineGroupStyle(s);Drawing.gradient(s,gd,gradientID,'horizontalreversed',trace.colorscale,'stroke');}}}function stylePoints(d){var d0=d[0];var trace=d0.trace;var showMarkers=subTypes.hasMarkers(trace);var showText=subTypes.hasText(trace);var showLines=subTypes.hasLines(trace);var dMod,tMod;// 'scatter3d' don't use gd.calcdata,\n// use d0.trace to infer arrayOk attributes\nfunction boundVal(attrIn,arrayToValFn,bounds){var valIn=Lib.nestedProperty(trace,attrIn).get();var valToBound=Lib.isArrayOrTypedArray(valIn)&&arrayToValFn?arrayToValFn(valIn):valIn;if(bounds){if(valToBound<bounds[0])return bounds[0];else if(valToBound>bounds[1])return bounds[1];}return valToBound;}function pickFirst(array){return array[0];}// constrain text, markers, etc so they'll fit on the legend\nif(showMarkers||showText||showLines){var dEdit={};var tEdit={};if(showMarkers){dEdit.mc=boundVal('marker.color',pickFirst);dEdit.mx=boundVal('marker.symbol',pickFirst);dEdit.mo=boundVal('marker.opacity',Lib.mean,[0.2,1]);dEdit.mlc=boundVal('marker.line.color',pickFirst);dEdit.mlw=boundVal('marker.line.width',Lib.mean,[0,5]);tEdit.marker={sizeref:1,sizemin:1,sizemode:'diameter'};var ms=boundVal('marker.size',Lib.mean,[2,16]);dEdit.ms=ms;tEdit.marker.size=ms;}if(showLines){tEdit.line={width:boundVal('line.width',pickFirst,[0,10])};}if(showText){dEdit.tx='Aa';dEdit.tp=boundVal('textposition',pickFirst);dEdit.ts=10;dEdit.tc=boundVal('textfont.color',pickFirst);dEdit.tf=boundVal('textfont.family',pickFirst);}dMod=[Lib.minExtend(d0,dEdit)];tMod=Lib.minExtend(trace,tEdit);// always show legend items in base state\ntMod.selectedpoints=null;}var ptgroup=d3.select(this).select('g.legendpoints');var pts=ptgroup.selectAll('path.scatterpts').data(showMarkers?dMod:[]);// make sure marker is on the bottom, in case it enters after text\npts.enter().insert('path',':first-child').classed('scatterpts',true).attr('transform','translate(20,0)');pts.exit().remove();pts.call(Drawing.pointStyle,tMod,gd);// 'mrc' is set in pointStyle and used in textPointStyle:\n// constrain it here\nif(showMarkers)dMod[0].mrc=3;var txt=ptgroup.selectAll('g.pointtext').data(showText?dMod:[]);txt.enter().append('g').classed('pointtext',true).append('text').attr('transform','translate(20,0)');txt.exit().remove();txt.selectAll('text').call(Drawing.textPointStyle,tMod,gd);}function styleBars(d){var trace=d[0].trace;var marker=trace.marker||{};var markerLine=marker.line||{};var barpath=d3.select(this).select('g.legendpoints').selectAll('path.legendbar').data(Registry.traceIs(trace,'bar')?[d]:[]);barpath.enter().append('path').classed('legendbar',true).attr('d','M6,6H-6V-6H6Z').attr('transform','translate(20,0)');barpath.exit().remove();barpath.each(function(d){var p=d3.select(this);var d0=d[0];var w=(d0.mlw+1||markerLine.width+1)-1;p.style('stroke-width',w+'px').call(Color.fill,d0.mc||marker.color);if(w){p.call(Color.stroke,d0.mlc||markerLine.color);}});}function styleBoxes(d){var trace=d[0].trace;var pts=d3.select(this).select('g.legendpoints').selectAll('path.legendbox').data(Registry.traceIs(trace,'box-violin')&&trace.visible?[d]:[]);pts.enter().append('path').classed('legendbox',true)// if we want the median bar, prepend M6,0H-6\n.attr('d','M6,6H-6V-6H6Z').attr('transform','translate(20,0)');pts.exit().remove();pts.each(function(){var w=trace.line.width;var p=d3.select(this);p.style('stroke-width',w+'px').call(Color.fill,trace.fillcolor);if(w){Color.stroke(p,trace.line.color);}});}function styleCandles(d){var trace=d[0].trace;var pts=d3.select(this).select('g.legendpoints').selectAll('path.legendcandle').data(trace.type==='candlestick'&&trace.visible?[d,d]:[]);pts.enter().append('path').classed('legendcandle',true).attr('d',function(_,i){if(i)return'M-15,0H-8M-8,6V-6H8Z';// increasing\nreturn'M15,0H8M8,-6V6H-8Z';// decreasing\n}).attr('transform','translate(20,0)').style('stroke-miterlimit',1);pts.exit().remove();pts.each(function(_,i){var container=trace[i?'increasing':'decreasing'];var w=container.line.width;var p=d3.select(this);p.style('stroke-width',w+'px').call(Color.fill,container.fillcolor);if(w){Color.stroke(p,container.line.color);}});}function styleOHLC(d){var trace=d[0].trace;var pts=d3.select(this).select('g.legendpoints').selectAll('path.legendohlc').data(trace.type==='ohlc'&&trace.visible?[d,d]:[]);pts.enter().append('path').classed('legendohlc',true).attr('d',function(_,i){if(i)return'M-15,0H0M-8,-6V0';// increasing\nreturn'M15,0H0M8,6V0';// decreasing\n}).attr('transform','translate(20,0)').style('stroke-miterlimit',1);pts.exit().remove();pts.each(function(_,i){var container=trace[i?'increasing':'decreasing'];var w=container.line.width;var p=d3.select(this);p.style('fill','none').call(Drawing.dashLine,container.line.dash,w);if(w){Color.stroke(p,container.line.color);}});}function stylePies(d){var trace=d[0].trace;var pts=d3.select(this).select('g.legendpoints').selectAll('path.legendpie').data(Registry.traceIs(trace,'pie')&&trace.visible?[d]:[]);pts.enter().append('path').classed('legendpie',true).attr('d','M6,6H-6V-6H6Z').attr('transform','translate(20,0)');pts.exit().remove();if(pts.size())pts.call(stylePie,d[0],trace);}};},{\"../../lib\":423,\"../../registry\":521,\"../../traces/pie/style_one\":531,\"../../traces/scatter/subtypes\":557,\"../color\":299,\"../drawing\":320,\"d3\":71}],357:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../../registry');var Plots=_dereq_('../../plots/plots');var axisIds=_dereq_('../../plots/cartesian/axis_ids');var Lib=_dereq_('../../lib');var Icons=_dereq_('../../../build/ploticon');var _=Lib._;var modeBarButtons=module.exports={};/**\n * ModeBar buttons configuration\n *\n * @param {string} name\n *      name / id of the buttons (for tracking)\n * @param {string} title\n *      text that appears while hovering over the button,\n *      enter null, false or '' for no hover text\n * @param {string} icon\n *      svg icon object associated with the button\n *      can be linked to Plotly.Icons to use the default plotly icons\n * @param {string} [gravity]\n *      icon positioning\n * @param {function} click\n *      click handler associated with the button, a function of\n *      'gd' (the main graph object) and\n *      'ev' (the event object)\n * @param {string} [attr]\n *      attribute associated with button,\n *      use this with 'val' to keep track of the state\n * @param {*} [val]\n *      initial 'attr' value, can be a function of gd\n * @param {boolean} [toggle]\n *      is the button a toggle button?\n */modeBarButtons.toImage={name:'toImage',title:function title(gd){var opts=gd._context.toImageButtonOptions||{};var format=opts.format||'png';return format==='png'?_(gd,'Download plot as a png'):// legacy text\n_(gd,'Download plot');// generic non-PNG text\n},icon:Icons.camera,click:function click(gd){var toImageButtonOptions=gd._context.toImageButtonOptions;var opts={format:toImageButtonOptions.format||'png'};Lib.notifier(_(gd,'Taking snapshot - this may take a few seconds'),'long');if(opts.format!=='svg'&&Lib.isIE()){Lib.notifier(_(gd,'IE only supports svg.  Changing format to svg.'),'long');opts.format='svg';}['filename','width','height','scale'].forEach(function(key){if(toImageButtonOptions[key]){opts[key]=toImageButtonOptions[key];}});Registry.call('downloadImage',gd,opts).then(function(filename){Lib.notifier(_(gd,'Snapshot succeeded')+' - '+filename,'long');}).catch(function(){Lib.notifier(_(gd,'Sorry, there was a problem downloading your snapshot!'),'long');});}};modeBarButtons.sendDataToCloud={name:'sendDataToCloud',title:function title(gd){return _(gd,'Edit in Chart Studio');},icon:Icons.disk,click:function click(gd){Plots.sendDataToCloud(gd);}};modeBarButtons.zoom2d={name:'zoom2d',title:function title(gd){return _(gd,'Zoom');},attr:'dragmode',val:'zoom',icon:Icons.zoombox,click:handleCartesian};modeBarButtons.pan2d={name:'pan2d',title:function title(gd){return _(gd,'Pan');},attr:'dragmode',val:'pan',icon:Icons.pan,click:handleCartesian};modeBarButtons.select2d={name:'select2d',title:function title(gd){return _(gd,'Box Select');},attr:'dragmode',val:'select',icon:Icons.selectbox,click:handleCartesian};modeBarButtons.lasso2d={name:'lasso2d',title:function title(gd){return _(gd,'Lasso Select');},attr:'dragmode',val:'lasso',icon:Icons.lasso,click:handleCartesian};modeBarButtons.zoomIn2d={name:'zoomIn2d',title:function title(gd){return _(gd,'Zoom in');},attr:'zoom',val:'in',icon:Icons.zoom_plus,click:handleCartesian};modeBarButtons.zoomOut2d={name:'zoomOut2d',title:function title(gd){return _(gd,'Zoom out');},attr:'zoom',val:'out',icon:Icons.zoom_minus,click:handleCartesian};modeBarButtons.autoScale2d={name:'autoScale2d',title:function title(gd){return _(gd,'Autoscale');},attr:'zoom',val:'auto',icon:Icons.autoscale,click:handleCartesian};modeBarButtons.resetScale2d={name:'resetScale2d',title:function title(gd){return _(gd,'Reset axes');},attr:'zoom',val:'reset',icon:Icons.home,click:handleCartesian};modeBarButtons.hoverClosestCartesian={name:'hoverClosestCartesian',title:function title(gd){return _(gd,'Show closest data on hover');},attr:'hovermode',val:'closest',icon:Icons.tooltip_basic,gravity:'ne',click:handleCartesian};modeBarButtons.hoverCompareCartesian={name:'hoverCompareCartesian',title:function title(gd){return _(gd,'Compare data on hover');},attr:'hovermode',val:function val(gd){return gd._fullLayout._isHoriz?'y':'x';},icon:Icons.tooltip_compare,gravity:'ne',click:handleCartesian};function handleCartesian(gd,ev){var button=ev.currentTarget;var astr=button.getAttribute('data-attr');var val=button.getAttribute('data-val')||true;var fullLayout=gd._fullLayout;var aobj={};var axList=axisIds.list(gd,null,true);var allSpikesEnabled='on';var ax,i;if(astr==='zoom'){var mag=val==='in'?0.5:2;var r0=(1+mag)/2;var r1=(1-mag)/2;var axName;for(i=0;i<axList.length;i++){ax=axList[i];if(!ax.fixedrange){axName=ax._name;if(val==='auto')aobj[axName+'.autorange']=true;else if(val==='reset'){if(ax._rangeInitial===undefined){aobj[axName+'.autorange']=true;}else{var rangeInitial=ax._rangeInitial.slice();aobj[axName+'.range[0]']=rangeInitial[0];aobj[axName+'.range[1]']=rangeInitial[1];}if(ax._showSpikeInitial!==undefined){aobj[axName+'.showspikes']=ax._showSpikeInitial;if(allSpikesEnabled==='on'&&!ax._showSpikeInitial){allSpikesEnabled='off';}}}else{var rangeNow=[ax.r2l(ax.range[0]),ax.r2l(ax.range[1])];var rangeNew=[r0*rangeNow[0]+r1*rangeNow[1],r0*rangeNow[1]+r1*rangeNow[0]];aobj[axName+'.range[0]']=ax.l2r(rangeNew[0]);aobj[axName+'.range[1]']=ax.l2r(rangeNew[1]);}}}fullLayout._cartesianSpikesEnabled=allSpikesEnabled;}else{// if ALL traces have orientation 'h', 'hovermode': 'x' otherwise: 'y'\nif(astr==='hovermode'&&(val==='x'||val==='y')){val=fullLayout._isHoriz?'y':'x';button.setAttribute('data-val',val);}else if(astr==='hovermode'&&val==='closest'){for(i=0;i<axList.length;i++){ax=axList[i];if(allSpikesEnabled==='on'&&!ax.showspikes){allSpikesEnabled='off';}}fullLayout._cartesianSpikesEnabled=allSpikesEnabled;}aobj[astr]=val;}Registry.call('_guiRelayout',gd,aobj);}modeBarButtons.zoom3d={name:'zoom3d',title:function title(gd){return _(gd,'Zoom');},attr:'scene.dragmode',val:'zoom',icon:Icons.zoombox,click:handleDrag3d};modeBarButtons.pan3d={name:'pan3d',title:function title(gd){return _(gd,'Pan');},attr:'scene.dragmode',val:'pan',icon:Icons.pan,click:handleDrag3d};modeBarButtons.orbitRotation={name:'orbitRotation',title:function title(gd){return _(gd,'Orbital rotation');},attr:'scene.dragmode',val:'orbit',icon:Icons['3d_rotate'],click:handleDrag3d};modeBarButtons.tableRotation={name:'tableRotation',title:function title(gd){return _(gd,'Turntable rotation');},attr:'scene.dragmode',val:'turntable',icon:Icons['z-axis'],click:handleDrag3d};function handleDrag3d(gd,ev){var button=ev.currentTarget;var attr=button.getAttribute('data-attr');var val=button.getAttribute('data-val')||true;var sceneIds=gd._fullLayout._subplots.gl3d;var layoutUpdate={};var parts=attr.split('.');for(var i=0;i<sceneIds.length;i++){layoutUpdate[sceneIds[i]+'.'+parts[1]]=val;}// for multi-type subplots\nvar val2d=val==='pan'?val:'zoom';layoutUpdate.dragmode=val2d;Registry.call('_guiRelayout',gd,layoutUpdate);}modeBarButtons.resetCameraDefault3d={name:'resetCameraDefault3d',title:function title(gd){return _(gd,'Reset camera to default');},attr:'resetDefault',icon:Icons.home,click:handleCamera3d};modeBarButtons.resetCameraLastSave3d={name:'resetCameraLastSave3d',title:function title(gd){return _(gd,'Reset camera to last save');},attr:'resetLastSave',icon:Icons.movie,click:handleCamera3d};function handleCamera3d(gd,ev){var button=ev.currentTarget;var attr=button.getAttribute('data-attr');var fullLayout=gd._fullLayout;var sceneIds=fullLayout._subplots.gl3d;var aobj={};for(var i=0;i<sceneIds.length;i++){var sceneId=sceneIds[i];var key=sceneId+'.camera';var scene=fullLayout[sceneId]._scene;if(attr==='resetDefault'){aobj[key]=null;}else if(attr==='resetLastSave'){aobj[key]=Lib.extendDeep({},scene.cameraInitial);}}Registry.call('_guiRelayout',gd,aobj);}modeBarButtons.hoverClosest3d={name:'hoverClosest3d',title:function title(gd){return _(gd,'Toggle show closest data on hover');},attr:'hovermode',val:null,toggle:true,icon:Icons.tooltip_basic,gravity:'ne',click:handleHover3d};function getNextHover3d(gd,ev){var button=ev.currentTarget;var val=button._previousVal;var fullLayout=gd._fullLayout;var sceneIds=fullLayout._subplots.gl3d;var axes=['xaxis','yaxis','zaxis'];// initialize 'current spike' object to be stored in the DOM\nvar currentSpikes={};var layoutUpdate={};if(val){layoutUpdate=val;button._previousVal=null;}else{for(var i=0;i<sceneIds.length;i++){var sceneId=sceneIds[i];var sceneLayout=fullLayout[sceneId];var hovermodeAStr=sceneId+'.hovermode';currentSpikes[hovermodeAStr]=sceneLayout.hovermode;layoutUpdate[hovermodeAStr]=false;// copy all the current spike attrs\nfor(var j=0;j<3;j++){var axis=axes[j];var spikeAStr=sceneId+'.'+axis+'.showspikes';layoutUpdate[spikeAStr]=false;currentSpikes[spikeAStr]=sceneLayout[axis].showspikes;}}button._previousVal=currentSpikes;}return layoutUpdate;}function handleHover3d(gd,ev){var layoutUpdate=getNextHover3d(gd,ev);Registry.call('_guiRelayout',gd,layoutUpdate);}modeBarButtons.zoomInGeo={name:'zoomInGeo',title:function title(gd){return _(gd,'Zoom in');},attr:'zoom',val:'in',icon:Icons.zoom_plus,click:handleGeo};modeBarButtons.zoomOutGeo={name:'zoomOutGeo',title:function title(gd){return _(gd,'Zoom out');},attr:'zoom',val:'out',icon:Icons.zoom_minus,click:handleGeo};modeBarButtons.resetGeo={name:'resetGeo',title:function title(gd){return _(gd,'Reset');},attr:'reset',val:null,icon:Icons.autoscale,click:handleGeo};modeBarButtons.hoverClosestGeo={name:'hoverClosestGeo',title:function title(gd){return _(gd,'Toggle show closest data on hover');},attr:'hovermode',val:null,toggle:true,icon:Icons.tooltip_basic,gravity:'ne',click:toggleHover};function handleGeo(gd,ev){var button=ev.currentTarget;var attr=button.getAttribute('data-attr');var val=button.getAttribute('data-val')||true;var fullLayout=gd._fullLayout;var geoIds=fullLayout._subplots.geo;for(var i=0;i<geoIds.length;i++){var id=geoIds[i];var geoLayout=fullLayout[id];if(attr==='zoom'){var scale=geoLayout.projection.scale;var newScale=val==='in'?2*scale:0.5*scale;Registry.call('_guiRelayout',gd,id+'.projection.scale',newScale);}else if(attr==='reset'){resetView(gd,'geo');}}}modeBarButtons.hoverClosestGl2d={name:'hoverClosestGl2d',title:function title(gd){return _(gd,'Toggle show closest data on hover');},attr:'hovermode',val:null,toggle:true,icon:Icons.tooltip_basic,gravity:'ne',click:toggleHover};modeBarButtons.hoverClosestPie={name:'hoverClosestPie',title:function title(gd){return _(gd,'Toggle show closest data on hover');},attr:'hovermode',val:'closest',icon:Icons.tooltip_basic,gravity:'ne',click:toggleHover};function getNextHover(gd){var fullLayout=gd._fullLayout;if(fullLayout.hovermode)return false;if(fullLayout._has('cartesian')){return fullLayout._isHoriz?'y':'x';}return'closest';}function toggleHover(gd){var newHover=getNextHover(gd);Registry.call('_guiRelayout',gd,'hovermode',newHover);}// buttons when more then one plot types are present\nmodeBarButtons.toggleHover={name:'toggleHover',title:function title(gd){return _(gd,'Toggle show closest data on hover');},attr:'hovermode',val:null,toggle:true,icon:Icons.tooltip_basic,gravity:'ne',click:function click(gd,ev){var layoutUpdate=getNextHover3d(gd,ev);layoutUpdate.hovermode=getNextHover(gd);Registry.call('_guiRelayout',gd,layoutUpdate);}};modeBarButtons.resetViews={name:'resetViews',title:function title(gd){return _(gd,'Reset views');},icon:Icons.home,click:function click(gd,ev){var button=ev.currentTarget;button.setAttribute('data-attr','zoom');button.setAttribute('data-val','reset');handleCartesian(gd,ev);button.setAttribute('data-attr','resetLastSave');handleCamera3d(gd,ev);resetView(gd,'geo');resetView(gd,'mapbox');}};modeBarButtons.toggleSpikelines={name:'toggleSpikelines',title:function title(gd){return _(gd,'Toggle Spike Lines');},icon:Icons.spikeline,attr:'_cartesianSpikesEnabled',val:'on',click:function click(gd){var fullLayout=gd._fullLayout;fullLayout._cartesianSpikesEnabled=fullLayout._cartesianSpikesEnabled==='on'?'off':'on';var aobj=setSpikelineVisibility(gd);Registry.call('_guiRelayout',gd,aobj);}};function setSpikelineVisibility(gd){var fullLayout=gd._fullLayout;var axList=axisIds.list(gd,null,true);var aobj={};var ax,axName;for(var i=0;i<axList.length;i++){ax=axList[i];axName=ax._name;aobj[axName+'.showspikes']=fullLayout._cartesianSpikesEnabled==='on'?true:ax._showSpikeInitial;}return aobj;}modeBarButtons.resetViewMapbox={name:'resetViewMapbox',title:function title(gd){return _(gd,'Reset view');},attr:'reset',icon:Icons.home,click:function click(gd){resetView(gd,'mapbox');}};function resetView(gd,subplotType){var fullLayout=gd._fullLayout;var subplotIds=fullLayout._subplots[subplotType];var aObj={};for(var i=0;i<subplotIds.length;i++){var id=subplotIds[i];var subplotObj=fullLayout[id]._subplot;var viewInitial=subplotObj.viewInitial;var viewKeys=Object.keys(viewInitial);for(var j=0;j<viewKeys.length;j++){var key=viewKeys[j];aObj[id+'.'+key]=viewInitial[key];}}Registry.call('_guiRelayout',gd,aObj);}},{\"../../../build/ploticon\":2,\"../../lib\":423,\"../../plots/cartesian/axis_ids\":472,\"../../plots/plots\":513,\"../../registry\":521}],358:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';exports.manage=_dereq_('./manage');},{\"./manage\":359}],359:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var axisIds=_dereq_('../../plots/cartesian/axis_ids');var scatterSubTypes=_dereq_('../../traces/scatter/subtypes');var Registry=_dereq_('../../registry');var createModeBar=_dereq_('./modebar');var modeBarButtons=_dereq_('./buttons');/**\n * ModeBar wrapper around 'create' and 'update',\n * chooses buttons to pass to ModeBar constructor based on\n * plot type and plot config.\n *\n * @param {object} gd main plot object\n *\n */module.exports=function manageModeBar(gd){var fullLayout=gd._fullLayout;var context=gd._context;var modeBar=fullLayout._modeBar;if(!context.displayModeBar&&!context.watermark){if(modeBar){modeBar.destroy();delete fullLayout._modeBar;}return;}if(!Array.isArray(context.modeBarButtonsToRemove)){throw new Error(['*modeBarButtonsToRemove* configuration options','must be an array.'].join(' '));}if(!Array.isArray(context.modeBarButtonsToAdd)){throw new Error(['*modeBarButtonsToAdd* configuration options','must be an array.'].join(' '));}var customButtons=context.modeBarButtons;var buttonGroups;if(Array.isArray(customButtons)&&customButtons.length){buttonGroups=fillCustomButton(customButtons);}else if(!context.displayModeBar&&context.watermark){buttonGroups=[];}else{buttonGroups=getButtonGroups(gd,context.modeBarButtonsToRemove,context.modeBarButtonsToAdd,context.showSendToCloud);}if(modeBar)modeBar.update(gd,buttonGroups);else fullLayout._modeBar=createModeBar(gd,buttonGroups);};// logic behind which buttons are displayed by default\nfunction getButtonGroups(gd,buttonsToRemove,buttonsToAdd,showSendToCloud){var fullLayout=gd._fullLayout;var fullData=gd._fullData;var hasCartesian=fullLayout._has('cartesian');var hasGL3D=fullLayout._has('gl3d');var hasGeo=fullLayout._has('geo');var hasPie=fullLayout._has('pie');var hasGL2D=fullLayout._has('gl2d');var hasTernary=fullLayout._has('ternary');var hasMapbox=fullLayout._has('mapbox');var hasPolar=fullLayout._has('polar');var allAxesFixed=areAllAxesFixed(fullLayout);var groups=[];function addGroup(newGroup){if(!newGroup.length)return;var out=[];for(var i=0;i<newGroup.length;i++){var button=newGroup[i];if(buttonsToRemove.indexOf(button)!==-1)continue;out.push(modeBarButtons[button]);}groups.push(out);}// buttons common to all plot types\nvar commonGroup=['toImage'];if(showSendToCloud)commonGroup.push('sendDataToCloud');addGroup(commonGroup);var zoomGroup=[];var hoverGroup=[];var resetGroup=[];var dragModeGroup=[];if((hasCartesian||hasGL2D||hasPie||hasTernary)+hasGeo+hasGL3D+hasMapbox+hasPolar>1){// graphs with more than one plot types get 'union buttons'\n// which reset the view or toggle hover labels across all subplots.\nhoverGroup=['toggleHover'];resetGroup=['resetViews'];}else if(hasGeo){zoomGroup=['zoomInGeo','zoomOutGeo'];hoverGroup=['hoverClosestGeo'];resetGroup=['resetGeo'];}else if(hasGL3D){hoverGroup=['hoverClosest3d'];resetGroup=['resetCameraDefault3d','resetCameraLastSave3d'];}else if(hasMapbox){hoverGroup=['toggleHover'];resetGroup=['resetViewMapbox'];}else if(hasGL2D){hoverGroup=['hoverClosestGl2d'];}else if(hasPie){hoverGroup=['hoverClosestPie'];}else{// hasPolar, hasTernary\n// always show at least one hover icon.\nhoverGroup=['toggleHover'];}// if we have cartesian, allow switching between closest and compare\n// regardless of what other types are on the plot, since they'll all\n// just treat any truthy hovermode as 'closest'\nif(hasCartesian){hoverGroup=['toggleSpikelines','hoverClosestCartesian','hoverCompareCartesian'];}if((hasCartesian||hasGL2D)&&!allAxesFixed){zoomGroup=['zoomIn2d','zoomOut2d','autoScale2d'];if(resetGroup[0]!=='resetViews')resetGroup=['resetScale2d'];}if(hasGL3D){dragModeGroup=['zoom3d','pan3d','orbitRotation','tableRotation'];}else if((hasCartesian||hasGL2D)&&!allAxesFixed||hasTernary){dragModeGroup=['zoom2d','pan2d'];}else if(hasMapbox||hasGeo){dragModeGroup=['pan2d'];}else if(hasPolar){dragModeGroup=['zoom2d'];}if(isSelectable(fullData)){dragModeGroup.push('select2d','lasso2d');}addGroup(dragModeGroup);addGroup(zoomGroup.concat(resetGroup));addGroup(hoverGroup);return appendButtonsToGroups(groups,buttonsToAdd);}function areAllAxesFixed(fullLayout){var axList=axisIds.list({_fullLayout:fullLayout},null,true);for(var i=0;i<axList.length;i++){if(!axList[i].fixedrange){return false;}}return true;}// look for traces that support selection\n// to be updated as we add more selectPoints handlers\nfunction isSelectable(fullData){var selectable=false;for(var i=0;i<fullData.length;i++){if(selectable)break;var trace=fullData[i];if(!trace._module||!trace._module.selectPoints)continue;if(Registry.traceIs(trace,'scatter-like')){if(scatterSubTypes.hasMarkers(trace)||scatterSubTypes.hasText(trace)){selectable=true;}}else if(Registry.traceIs(trace,'box-violin')){if(trace.boxpoints==='all'||trace.points==='all'){selectable=true;}}// assume that in general if the trace module has selectPoints,\n// then it's selectable. Scatter is an exception to this because it must\n// have markers or text, not just be a scatter type.\nelse selectable=true;}return selectable;}function appendButtonsToGroups(groups,buttons){if(buttons.length){if(Array.isArray(buttons[0])){for(var i=0;i<buttons.length;i++){groups.push(buttons[i]);}}else groups.push(buttons);}return groups;}// fill in custom buttons referring to default mode bar buttons\nfunction fillCustomButton(customButtons){for(var i=0;i<customButtons.length;i++){var buttonGroup=customButtons[i];for(var j=0;j<buttonGroup.length;j++){var button=buttonGroup[j];if(typeof button==='string'){if(modeBarButtons[button]!==undefined){customButtons[i][j]=modeBarButtons[button];}else{throw new Error(['*modeBarButtons* configuration options','invalid button name'].join(' '));}}}}return customButtons;}},{\"../../plots/cartesian/axis_ids\":472,\"../../registry\":521,\"../../traces/scatter/subtypes\":557,\"./buttons\":357,\"./modebar\":360}],360:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var isNumeric=_dereq_('fast-isnumeric');var Lib=_dereq_('../../lib');var Icons=_dereq_('../../../build/ploticon');var Parser=new DOMParser();/**\n * UI controller for interactive plots\n * @Class\n * @Param {object} opts\n * @Param {object} opts.buttons    nested arrays of grouped buttons config objects\n * @Param {object} opts.container  container div to append modeBar\n * @Param {object} opts.graphInfo  primary plot object containing data and layout\n */function ModeBar(opts){this.container=opts.container;this.element=document.createElement('div');this.update(opts.graphInfo,opts.buttons);this.container.appendChild(this.element);}var proto=ModeBar.prototype;/**\n * Update modeBar (buttons and logo)\n *\n * @param {object} graphInfo  primary plot object containing data and layout\n * @param {array of arrays} buttons nested arrays of grouped buttons to initialize\n *\n */proto.update=function(graphInfo,buttons){this.graphInfo=graphInfo;var context=this.graphInfo._context;var fullLayout=this.graphInfo._fullLayout;var modeBarId='modebar-'+fullLayout._uid;this.element.setAttribute('id',modeBarId);this._uid=modeBarId;this.element.className='modebar';if(context.displayModeBar==='hover')this.element.className+=' modebar--hover ease-bg';if(fullLayout.modebar.orientation==='v'){this.element.className+=' vertical';buttons=buttons.reverse();}var style=fullLayout.modebar;var bgSelector=context.displayModeBar==='hover'?'.js-plotly-plot .plotly:hover ':'';Lib.deleteRelatedStyleRule(modeBarId);Lib.addRelatedStyleRule(modeBarId,bgSelector+'#'+modeBarId,'background-color: '+style.bgcolor);Lib.addRelatedStyleRule(modeBarId,'#'+modeBarId+' .modebar-btn .icon path','fill: '+style.color);Lib.addRelatedStyleRule(modeBarId,'#'+modeBarId+' .modebar-btn:hover .icon path','fill: '+style.activecolor);Lib.addRelatedStyleRule(modeBarId,'#'+modeBarId+' .modebar-btn.active .icon path','fill: '+style.activecolor);// if buttons or logo have changed, redraw modebar interior\nvar needsNewButtons=!this.hasButtons(buttons);var needsNewLogo=this.hasLogo!==context.displaylogo;var needsNewLocale=this.locale!==context.locale;this.locale=context.locale;if(needsNewButtons||needsNewLogo||needsNewLocale){this.removeAllButtons();this.updateButtons(buttons);if(context.watermark||context.displaylogo){var logoGroup=this.getLogo();if(context.watermark){logoGroup.className=logoGroup.className+' watermark';}if(fullLayout.modebar.orientation==='v'){this.element.prepend(logoGroup);}else{this.element.appendChild(logoGroup);}this.hasLogo=true;}}this.updateActiveButton();};proto.updateButtons=function(buttons){var _this=this;this.buttons=buttons;this.buttonElements=[];this.buttonsNames=[];this.buttons.forEach(function(buttonGroup){var group=_this.createGroup();buttonGroup.forEach(function(buttonConfig){var buttonName=buttonConfig.name;if(!buttonName){throw new Error('must provide button \\'name\\' in button config');}if(_this.buttonsNames.indexOf(buttonName)!==-1){throw new Error('button name \\''+buttonName+'\\' is taken');}_this.buttonsNames.push(buttonName);var button=_this.createButton(buttonConfig);_this.buttonElements.push(button);group.appendChild(button);});_this.element.appendChild(group);});};/**\n * Empty div for containing a group of buttons\n * @Return {HTMLelement}\n */proto.createGroup=function(){var group=document.createElement('div');group.className='modebar-group';return group;};/**\n * Create a new button div and set constant and configurable attributes\n * @Param {object} config (see ./buttons.js for more info)\n * @Return {HTMLelement}\n */proto.createButton=function(config){var _this=this;var button=document.createElement('a');button.setAttribute('rel','tooltip');button.className='modebar-btn';var title=config.title;if(title===undefined)title=config.name;// for localization: allow title to be a callable that takes gd as arg\nelse if(typeof title==='function')title=title(this.graphInfo);if(title||title===0)button.setAttribute('data-title',title);if(config.attr!==undefined)button.setAttribute('data-attr',config.attr);var val=config.val;if(val!==undefined){if(typeof val==='function')val=val(this.graphInfo);button.setAttribute('data-val',val);}var click=config.click;if(typeof click!=='function'){throw new Error('must provide button \\'click\\' function in button config');}else{button.addEventListener('click',function(ev){config.click(_this.graphInfo,ev);// only needed for 'hoverClosestGeo' which does not call relayout\n_this.updateActiveButton(ev.currentTarget);});}button.setAttribute('data-toggle',config.toggle||false);if(config.toggle)d3.select(button).classed('active',true);var icon=config.icon;if(typeof icon==='function'){button.appendChild(icon());}else{button.appendChild(this.createIcon(icon||Icons.question));}button.setAttribute('data-gravity',config.gravity||'n');return button;};/**\n * Add an icon to a button\n * @Param {object} thisIcon\n * @Param {number} thisIcon.width\n * @Param {string} thisIcon.path\n * @Param {string} thisIcon.color\n * @Return {HTMLelement}\n */proto.createIcon=function(thisIcon){var iconHeight=isNumeric(thisIcon.height)?Number(thisIcon.height):thisIcon.ascent-thisIcon.descent;var svgNS='http://www.w3.org/2000/svg';var icon;if(thisIcon.path){icon=document.createElementNS(svgNS,'svg');icon.setAttribute('viewBox',[0,0,thisIcon.width,iconHeight].join(' '));icon.setAttribute('class','icon');var path=document.createElementNS(svgNS,'path');path.setAttribute('d',thisIcon.path);if(thisIcon.transform){path.setAttribute('transform',thisIcon.transform);}else if(thisIcon.ascent!==undefined){// Legacy icon transform calculation\npath.setAttribute('transform','matrix(1 0 0 -1 0 '+thisIcon.ascent+')');}icon.appendChild(path);}if(thisIcon.svg){var svgDoc=Parser.parseFromString(thisIcon.svg,'application/xml');icon=svgDoc.childNodes[0];}icon.setAttribute('height','1em');icon.setAttribute('width','1em');return icon;};/**\n * Updates active button with attribute specified in layout\n * @Param {object} graphInfo plot object containing data and layout\n * @Return {HTMLelement}\n */proto.updateActiveButton=function(buttonClicked){var fullLayout=this.graphInfo._fullLayout;var dataAttrClicked=buttonClicked!==undefined?buttonClicked.getAttribute('data-attr'):null;this.buttonElements.forEach(function(button){var thisval=button.getAttribute('data-val')||true;var dataAttr=button.getAttribute('data-attr');var isToggleButton=button.getAttribute('data-toggle')==='true';var button3=d3.select(button);// Use 'data-toggle' and 'buttonClicked' to toggle buttons\n// that have no one-to-one equivalent in fullLayout\nif(isToggleButton){if(dataAttr===dataAttrClicked){button3.classed('active',!button3.classed('active'));}}else{var val=dataAttr===null?dataAttr:Lib.nestedProperty(fullLayout,dataAttr).get();button3.classed('active',val===thisval);}});};/**\n * Check if modeBar is configured as button configuration argument\n *\n * @Param {object} buttons 2d array of grouped button config objects\n * @Return {boolean}\n */proto.hasButtons=function(buttons){var currentButtons=this.buttons;if(!currentButtons)return false;if(buttons.length!==currentButtons.length)return false;for(var i=0;i<buttons.length;++i){if(buttons[i].length!==currentButtons[i].length)return false;for(var j=0;j<buttons[i].length;j++){if(buttons[i][j].name!==currentButtons[i][j].name)return false;}}return true;};/**\n * @return {HTMLDivElement} The logo image wrapped in a group\n */proto.getLogo=function(){var group=this.createGroup();var a=document.createElement('a');a.href='https://plot.ly/';a.target='_blank';a.setAttribute('data-title',Lib._(this.graphInfo,'Produced with Plotly'));a.className='modebar-btn plotlyjsicon modebar-btn--logo';a.appendChild(this.createIcon(Icons.newplotlylogo));group.appendChild(a);return group;};proto.removeAllButtons=function(){while(this.element.firstChild){this.element.removeChild(this.element.firstChild);}this.hasLogo=false;};proto.destroy=function(){Lib.removeElement(this.container.querySelector('.modebar'));Lib.deleteRelatedStyleRule(this._uid);};function createModeBar(gd,buttons){var fullLayout=gd._fullLayout;var modeBar=new ModeBar({graphInfo:gd,container:fullLayout._paperdiv.node(),buttons:buttons});if(fullLayout._privateplot){d3.select(modeBar.element).append('span').classed('badge-private float--left',true).text('PRIVATE');}return modeBar;}module.exports=createModeBar;},{\"../../../build/ploticon\":2,\"../../lib\":423,\"d3\":71,\"fast-isnumeric\":80}],361:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var fontAttrs=_dereq_('../../plots/font_attributes');var colorAttrs=_dereq_('../color/attributes');var templatedArray=_dereq_('../../plot_api/plot_template').templatedArray;var buttonAttrs=templatedArray('button',{visible:{valType:'boolean',dflt:true,editType:'plot'},step:{valType:'enumerated',values:['month','year','day','hour','minute','second','all'],dflt:'month',editType:'plot'},stepmode:{valType:'enumerated',values:['backward','todate'],dflt:'backward',editType:'plot'},count:{valType:'number',min:0,dflt:1,editType:'plot'},label:{valType:'string',editType:'plot'},editType:'plot'});module.exports={visible:{valType:'boolean',editType:'plot'},buttons:buttonAttrs,x:{valType:'number',min:-2,max:3,editType:'plot'},xanchor:{valType:'enumerated',values:['auto','left','center','right'],dflt:'left',editType:'plot'},y:{valType:'number',min:-2,max:3,editType:'plot'},yanchor:{valType:'enumerated',values:['auto','top','middle','bottom'],dflt:'bottom',editType:'plot'},font:fontAttrs({editType:'plot'}),bgcolor:{valType:'color',dflt:colorAttrs.lightLine,editType:'plot'},activecolor:{valType:'color',editType:'plot'},bordercolor:{valType:'color',dflt:colorAttrs.defaultLine,editType:'plot'},borderwidth:{valType:'number',min:0,dflt:0,editType:'plot'},editType:'plot'};},{\"../../plot_api/plot_template\":459,\"../../plots/font_attributes\":496,\"../color/attributes\":298}],362:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={// 'y' position pad above counter axis domain\nyPad:0.02,// minimum button width (regardless of text size)\nminButtonWidth:30,// buttons rect radii\nrx:3,ry:3,// light fraction used to compute the 'activecolor' default\nlightAmount:25,darkAmount:10};},{}],363:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Color=_dereq_('../color');var Template=_dereq_('../../plot_api/plot_template');var handleArrayContainerDefaults=_dereq_('../../plots/array_container_defaults');var attributes=_dereq_('./attributes');var constants=_dereq_('./constants');module.exports=function handleDefaults(containerIn,containerOut,layout,counterAxes,calendar){var selectorIn=containerIn.rangeselector||{};var selectorOut=Template.newContainer(containerOut,'rangeselector');function coerce(attr,dflt){return Lib.coerce(selectorIn,selectorOut,attributes,attr,dflt);}var buttons=handleArrayContainerDefaults(selectorIn,selectorOut,{name:'buttons',handleItemDefaults:buttonDefaults,calendar:calendar});var visible=coerce('visible',buttons.length>0);if(visible){var posDflt=getPosDflt(containerOut,layout,counterAxes);coerce('x',posDflt[0]);coerce('y',posDflt[1]);Lib.noneOrAll(containerIn,containerOut,['x','y']);coerce('xanchor');coerce('yanchor');Lib.coerceFont(coerce,'font',layout.font);var bgColor=coerce('bgcolor');coerce('activecolor',Color.contrast(bgColor,constants.lightAmount,constants.darkAmount));coerce('bordercolor');coerce('borderwidth');}};function buttonDefaults(buttonIn,buttonOut,selectorOut,opts){var calendar=opts.calendar;function coerce(attr,dflt){return Lib.coerce(buttonIn,buttonOut,attributes.buttons,attr,dflt);}var visible=coerce('visible');if(visible){var step=coerce('step');if(step!=='all'){if(calendar&&calendar!=='gregorian'&&(step==='month'||step==='year')){buttonOut.stepmode='backward';}else{coerce('stepmode');}coerce('count');}coerce('label');}}function getPosDflt(containerOut,layout,counterAxes){var anchoredList=counterAxes.filter(function(ax){return layout[ax].anchor===containerOut._id;});var posY=0;for(var i=0;i<anchoredList.length;i++){var domain=layout[anchoredList[i]].domain;if(domain)posY=Math.max(domain[1],posY);}return[containerOut.domain[0],posY+constants.yPad];}},{\"../../lib\":423,\"../../plot_api/plot_template\":459,\"../../plots/array_container_defaults\":465,\"../color\":299,\"./attributes\":361,\"./constants\":362}],364:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Registry=_dereq_('../../registry');var Plots=_dereq_('../../plots/plots');var Color=_dereq_('../color');var Drawing=_dereq_('../drawing');var Lib=_dereq_('../../lib');var svgTextUtils=_dereq_('../../lib/svg_text_utils');var axisIds=_dereq_('../../plots/cartesian/axis_ids');var alignmentConstants=_dereq_('../../constants/alignment');var LINE_SPACING=alignmentConstants.LINE_SPACING;var FROM_TL=alignmentConstants.FROM_TL;var FROM_BR=alignmentConstants.FROM_BR;var constants=_dereq_('./constants');var getUpdateObject=_dereq_('./get_update_object');module.exports=function draw(gd){var fullLayout=gd._fullLayout;var selectors=fullLayout._infolayer.selectAll('.rangeselector').data(makeSelectorData(gd),selectorKeyFunc);selectors.enter().append('g').classed('rangeselector',true);selectors.exit().remove();selectors.style({cursor:'pointer','pointer-events':'all'});selectors.each(function(d){var selector=d3.select(this);var axisLayout=d;var selectorLayout=axisLayout.rangeselector;var buttons=selector.selectAll('g.button').data(Lib.filterVisible(selectorLayout.buttons));buttons.enter().append('g').classed('button',true);buttons.exit().remove();buttons.each(function(d){var button=d3.select(this);var update=getUpdateObject(axisLayout,d);d._isActive=isActive(axisLayout,d,update);button.call(drawButtonRect,selectorLayout,d);button.call(drawButtonText,selectorLayout,d,gd);button.on('click',function(){if(gd._dragged)return;Registry.call('_guiRelayout',gd,update);});button.on('mouseover',function(){d._isHovered=true;button.call(drawButtonRect,selectorLayout,d);});button.on('mouseout',function(){d._isHovered=false;button.call(drawButtonRect,selectorLayout,d);});});reposition(gd,buttons,selectorLayout,axisLayout._name,selector);});};function makeSelectorData(gd){var axes=axisIds.list(gd,'x',true);var data=[];for(var i=0;i<axes.length;i++){var axis=axes[i];if(axis.rangeselector&&axis.rangeselector.visible){data.push(axis);}}return data;}function selectorKeyFunc(d){return d._id;}function isActive(axisLayout,opts,update){if(opts.step==='all'){return axisLayout.autorange===true;}else{var keys=Object.keys(update);return axisLayout.range[0]===update[keys[0]]&&axisLayout.range[1]===update[keys[1]];}}function drawButtonRect(button,selectorLayout,d){var rect=Lib.ensureSingle(button,'rect','selector-rect',function(s){s.attr('shape-rendering','crispEdges');});rect.attr({'rx':constants.rx,'ry':constants.ry});rect.call(Color.stroke,selectorLayout.bordercolor).call(Color.fill,getFillColor(selectorLayout,d)).style('stroke-width',selectorLayout.borderwidth+'px');}function getFillColor(selectorLayout,d){return d._isActive||d._isHovered?selectorLayout.activecolor:selectorLayout.bgcolor;}function drawButtonText(button,selectorLayout,d,gd){function textLayout(s){svgTextUtils.convertToTspans(s,gd);}var text=Lib.ensureSingle(button,'text','selector-text',function(s){s.classed('user-select-none',true).attr('text-anchor','middle');});text.call(Drawing.font,selectorLayout.font).text(getLabel(d)).call(textLayout);}function getLabel(opts){if(opts.label)return opts.label;if(opts.step==='all')return'all';return opts.count+opts.step.charAt(0);}function reposition(gd,buttons,opts,axName,selector){var width=0;var height=0;var borderWidth=opts.borderwidth;buttons.each(function(){var button=d3.select(this);var text=button.select('.selector-text');var tHeight=opts.font.size*LINE_SPACING;var hEff=Math.max(tHeight*svgTextUtils.lineCount(text),16)+3;height=Math.max(height,hEff);});buttons.each(function(){var button=d3.select(this);var rect=button.select('.selector-rect');var text=button.select('.selector-text');var tWidth=text.node()&&Drawing.bBox(text.node()).width;var tHeight=opts.font.size*LINE_SPACING;var tLines=svgTextUtils.lineCount(text);var wEff=Math.max(tWidth+10,constants.minButtonWidth);// TODO add MathJax support\n// TODO add buttongap attribute\nbutton.attr('transform','translate('+(borderWidth+width)+','+borderWidth+')');rect.attr({x:0,y:0,width:wEff,height:height});svgTextUtils.positionText(text,wEff/2,height/2-(tLines-1)*tHeight/2+3);width+=wEff+5;});var graphSize=gd._fullLayout._size;var lx=graphSize.l+graphSize.w*opts.x;var ly=graphSize.t+graphSize.h*(1-opts.y);var xanchor='left';if(Lib.isRightAnchor(opts)){lx-=width;xanchor='right';}if(Lib.isCenterAnchor(opts)){lx-=width/2;xanchor='center';}var yanchor='top';if(Lib.isBottomAnchor(opts)){ly-=height;yanchor='bottom';}if(Lib.isMiddleAnchor(opts)){ly-=height/2;yanchor='middle';}width=Math.ceil(width);height=Math.ceil(height);lx=Math.round(lx);ly=Math.round(ly);Plots.autoMargin(gd,axName+'-range-selector',{x:opts.x,y:opts.y,l:width*FROM_TL[xanchor],r:width*FROM_BR[xanchor],b:height*FROM_BR[yanchor],t:height*FROM_TL[yanchor]});selector.attr('transform','translate('+lx+','+ly+')');}},{\"../../constants/alignment\":394,\"../../lib\":423,\"../../lib/svg_text_utils\":446,\"../../plots/cartesian/axis_ids\":472,\"../../plots/plots\":513,\"../../registry\":521,\"../color\":299,\"../drawing\":320,\"./constants\":362,\"./get_update_object\":365,\"d3\":71}],365:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');module.exports=function getUpdateObject(axisLayout,buttonLayout){var axName=axisLayout._name;var update={};if(buttonLayout.step==='all'){update[axName+'.autorange']=true;}else{var xrange=getXRange(axisLayout,buttonLayout);update[axName+'.range[0]']=xrange[0];update[axName+'.range[1]']=xrange[1];}return update;};function getXRange(axisLayout,buttonLayout){var currentRange=axisLayout.range;var base=new Date(axisLayout.r2l(currentRange[1]));var step=buttonLayout.step;var count=buttonLayout.count;var range0;switch(buttonLayout.stepmode){case'backward':range0=axisLayout.l2r(+d3.time[step].utc.offset(base,-count));break;case'todate':var base2=d3.time[step].utc.offset(base,-count);range0=axisLayout.l2r(+d3.time[step].utc.ceil(base2));break;}var range1=currentRange[1];return[range0,range1];}},{\"d3\":71}],366:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={moduleType:'component',name:'rangeselector',schema:{subplots:{xaxis:{rangeselector:_dereq_('./attributes')}}},layoutAttributes:_dereq_('./attributes'),handleDefaults:_dereq_('./defaults'),draw:_dereq_('./draw')};},{\"./attributes\":361,\"./defaults\":363,\"./draw\":364}],367:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var colorAttributes=_dereq_('../color/attributes');module.exports={bgcolor:{valType:'color',dflt:colorAttributes.background,editType:'plot'},bordercolor:{valType:'color',dflt:colorAttributes.defaultLine,editType:'plot'},borderwidth:{valType:'integer',dflt:0,min:0,editType:'plot'},autorange:{valType:'boolean',dflt:true,editType:'calc',impliedEdits:{'range[0]':undefined,'range[1]':undefined}},range:{valType:'info_array',items:[{valType:'any',editType:'calc',impliedEdits:{'^autorange':false}},{valType:'any',editType:'calc',impliedEdits:{'^autorange':false}}],editType:'calc',impliedEdits:{'autorange':false}},thickness:{valType:'number',dflt:0.15,min:0,max:1,editType:'plot'},visible:{valType:'boolean',dflt:true,editType:'calc'},editType:'calc'};},{\"../color/attributes\":298}],368:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var listAxes=_dereq_('../../plots/cartesian/axis_ids').list;var getAutoRange=_dereq_('../../plots/cartesian/autorange').getAutoRange;var constants=_dereq_('./constants');module.exports=function calcAutorange(gd){var axes=listAxes(gd,'x',true);// Compute new slider range using axis autorange if necessary.\n//\n// Copy back range to input range slider container to skip\n// this step in subsequent draw calls.\nfor(var i=0;i<axes.length;i++){var ax=axes[i];var opts=ax[constants.name];if(opts&&opts.visible&&opts.autorange){opts._input.autorange=true;opts._input.range=opts.range=getAutoRange(gd,ax);}}};},{\"../../plots/cartesian/autorange\":468,\"../../plots/cartesian/axis_ids\":472,\"./constants\":369}],369:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={// attribute container name\nname:'rangeslider',// class names\ncontainerClassName:'rangeslider-container',bgClassName:'rangeslider-bg',rangePlotClassName:'rangeslider-rangeplot',maskMinClassName:'rangeslider-mask-min',maskMaxClassName:'rangeslider-mask-max',slideBoxClassName:'rangeslider-slidebox',grabberMinClassName:'rangeslider-grabber-min',grabAreaMinClassName:'rangeslider-grabarea-min',handleMinClassName:'rangeslider-handle-min',grabberMaxClassName:'rangeslider-grabber-max',grabAreaMaxClassName:'rangeslider-grabarea-max',handleMaxClassName:'rangeslider-handle-max',maskMinOppAxisClassName:'rangeslider-mask-min-opp-axis',maskMaxOppAxisClassName:'rangeslider-mask-max-opp-axis',// style constants\nmaskColor:'rgba(0,0,0,0.4)',maskOppAxisColor:'rgba(0,0,0,0.2)',slideBoxFill:'transparent',slideBoxCursor:'ew-resize',grabAreaFill:'transparent',grabAreaCursor:'col-resize',grabAreaWidth:10,handleWidth:4,handleRadius:1,handleStrokeWidth:1,extraPad:15};},{}],370:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Template=_dereq_('../../plot_api/plot_template');var axisIds=_dereq_('../../plots/cartesian/axis_ids');var attributes=_dereq_('./attributes');var oppAxisAttrs=_dereq_('./oppaxis_attributes');module.exports=function handleDefaults(layoutIn,layoutOut,axName){var axIn=layoutIn[axName];var axOut=layoutOut[axName];if(!(axIn.rangeslider||layoutOut._requestRangeslider[axOut._id]))return;// not super proud of this (maybe store _ in axis object instead\nif(!Lib.isPlainObject(axIn.rangeslider)){axIn.rangeslider={};}var containerIn=axIn.rangeslider;var containerOut=Template.newContainer(axOut,'rangeslider');function coerce(attr,dflt){return Lib.coerce(containerIn,containerOut,attributes,attr,dflt);}var rangeContainerIn,rangeContainerOut;function coerceRange(attr,dflt){return Lib.coerce(rangeContainerIn,rangeContainerOut,oppAxisAttrs,attr,dflt);}var visible=coerce('visible');if(!visible)return;coerce('bgcolor',layoutOut.plot_bgcolor);coerce('bordercolor');coerce('borderwidth');coerce('thickness');coerce('autorange',!axOut.isValidRange(containerIn.range));coerce('range');var subplots=layoutOut._subplots;if(subplots){var yIds=subplots.cartesian.filter(function(subplotId){return subplotId.substr(0,subplotId.indexOf('y'))===axisIds.name2id(axName);}).map(function(subplotId){return subplotId.substr(subplotId.indexOf('y'),subplotId.length);});var yNames=Lib.simpleMap(yIds,axisIds.id2name);for(var i=0;i<yNames.length;i++){var yName=yNames[i];rangeContainerIn=containerIn[yName]||{};rangeContainerOut=Template.newContainer(containerOut,yName,'yaxis');var yAxOut=layoutOut[yName];var rangemodeDflt;if(rangeContainerIn.range&&yAxOut.isValidRange(rangeContainerIn.range)){rangemodeDflt='fixed';}var rangeMode=coerceRange('rangemode',rangemodeDflt);if(rangeMode!=='match'){coerceRange('range',yAxOut.range.slice());}}}// to map back range slider (auto) range\ncontainerOut._input=containerIn;};},{\"../../lib\":423,\"../../plot_api/plot_template\":459,\"../../plots/cartesian/axis_ids\":472,\"./attributes\":367,\"./oppaxis_attributes\":374}],371:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Registry=_dereq_('../../registry');var Plots=_dereq_('../../plots/plots');var Lib=_dereq_('../../lib');var Drawing=_dereq_('../drawing');var Color=_dereq_('../color');var Titles=_dereq_('../titles');var Cartesian=_dereq_('../../plots/cartesian');var axisIDs=_dereq_('../../plots/cartesian/axis_ids');var dragElement=_dereq_('../dragelement');var setCursor=_dereq_('../../lib/setcursor');var constants=_dereq_('./constants');module.exports=function(gd){var fullLayout=gd._fullLayout;var rangeSliderData=fullLayout._rangeSliderData;for(var i=0;i<rangeSliderData.length;i++){var opts=rangeSliderData[i][constants.name];// fullLayout._uid may not exist when we call makeData\nopts._clipId=opts._id+'-'+fullLayout._uid;}/*\n     * <g container />\n     *  <rect bg />\n     *  < .... range plot />\n     *  <rect mask-min />\n     *  <rect mask-max />\n     *  <rect slidebox />\n     *  <g grabber-min />\n     *      <rect handle-min />\n     *      <rect grabare-min />\n     *  <g grabber-max />\n     *      <rect handle-max />\n     *      <rect grabare-max />\n     *\n     *  ...\n     */function keyFunction(axisOpts){return axisOpts._name;}var rangeSliders=fullLayout._infolayer.selectAll('g.'+constants.containerClassName).data(rangeSliderData,keyFunction);// remove exiting sliders and their corresponding clip paths\nrangeSliders.exit().each(function(axisOpts){var opts=axisOpts[constants.name];fullLayout._topdefs.select('#'+opts._clipId).remove();}).remove();// return early if no range slider is visible\nif(rangeSliderData.length===0)return;rangeSliders.enter().append('g').classed(constants.containerClassName,true).attr('pointer-events','all');// for all present range sliders\nrangeSliders.each(function(axisOpts){var rangeSlider=d3.select(this);var opts=axisOpts[constants.name];var oppAxisOpts=fullLayout[axisIDs.id2name(axisOpts.anchor)];var oppAxisRangeOpts=opts[axisIDs.id2name(axisOpts.anchor)];// update range\n// Expand slider range to the axis range\nif(opts.range){var rng=Lib.simpleMap(opts.range,axisOpts.r2l);var axRng=Lib.simpleMap(axisOpts.range,axisOpts.r2l);var newRng;if(axRng[0]<axRng[1]){newRng=[Math.min(rng[0],axRng[0]),Math.max(rng[1],axRng[1])];}else{newRng=[Math.max(rng[0],axRng[0]),Math.min(rng[1],axRng[1])];}opts.range=opts._input.range=Lib.simpleMap(newRng,axisOpts.l2r);}axisOpts.cleanRange('rangeslider.range');// update range slider dimensions\nvar margin=fullLayout.margin;var graphSize=fullLayout._size;var domain=axisOpts.domain;var tickHeight=opts._tickHeight;var oppBottom=opts._oppBottom;opts._width=graphSize.w*(domain[1]-domain[0]);var x=Math.round(margin.l+graphSize.w*domain[0]);var y=Math.round(graphSize.t+graphSize.h*(1-oppBottom)+tickHeight+opts._offsetShift+constants.extraPad);rangeSlider.attr('transform','translate('+x+','+y+')');// update data <--\x3e pixel coordinate conversion methods\nvar range0=axisOpts.r2l(opts.range[0]);var range1=axisOpts.r2l(opts.range[1]);var dist=range1-range0;opts.p2d=function(v){return v/opts._width*dist+range0;};opts.d2p=function(v){return(v-range0)/dist*opts._width;};opts._rl=[range0,range1];if(oppAxisRangeOpts.rangemode!=='match'){var range0OppAxis=oppAxisOpts.r2l(oppAxisRangeOpts.range[0]);var range1OppAxis=oppAxisOpts.r2l(oppAxisRangeOpts.range[1]);var distOppAxis=range1OppAxis-range0OppAxis;opts.d2pOppAxis=function(v){return(v-range0OppAxis)/distOppAxis*opts._height;};}// update inner nodes\nrangeSlider.call(drawBg,gd,axisOpts,opts).call(addClipPath,gd,axisOpts,opts).call(drawRangePlot,gd,axisOpts,opts).call(drawMasks,gd,axisOpts,opts,oppAxisRangeOpts).call(drawSlideBox,gd,axisOpts,opts).call(drawGrabbers,gd,axisOpts,opts);// setup drag element\nsetupDragElement(rangeSlider,gd,axisOpts,opts);// update current range\nsetPixelRange(rangeSlider,gd,axisOpts,opts,oppAxisOpts,oppAxisRangeOpts);// title goes next to range slider instead of tick labels, so\n// just take it over and draw it from here\nif(axisOpts.side==='bottom'){Titles.draw(gd,axisOpts._id+'title',{propContainer:axisOpts,propName:axisOpts._name+'.title',placeholder:fullLayout._dfltTitle.x,attributes:{x:axisOpts._offset+axisOpts._length/2,y:y+opts._height+opts._offsetShift+10+1.5*axisOpts.title.font.size,'text-anchor':'middle'}});}});};function setupDragElement(rangeSlider,gd,axisOpts,opts){var slideBox=rangeSlider.select('rect.'+constants.slideBoxClassName).node();var grabAreaMin=rangeSlider.select('rect.'+constants.grabAreaMinClassName).node();var grabAreaMax=rangeSlider.select('rect.'+constants.grabAreaMaxClassName).node();rangeSlider.on('mousedown',function(){var event=d3.event;var target=event.target;var startX=event.clientX;var offsetX=startX-rangeSlider.node().getBoundingClientRect().left;var minVal=opts.d2p(axisOpts._rl[0]);var maxVal=opts.d2p(axisOpts._rl[1]);var dragCover=dragElement.coverSlip();dragCover.addEventListener('mousemove',mouseMove);dragCover.addEventListener('mouseup',mouseUp);function mouseMove(e){var delta=+e.clientX-startX;var pixelMin,pixelMax,cursor;switch(target){case slideBox:cursor='ew-resize';pixelMin=minVal+delta;pixelMax=maxVal+delta;break;case grabAreaMin:cursor='col-resize';pixelMin=minVal+delta;pixelMax=maxVal;break;case grabAreaMax:cursor='col-resize';pixelMin=minVal;pixelMax=maxVal+delta;break;default:cursor='ew-resize';pixelMin=offsetX;pixelMax=offsetX+delta;break;}if(pixelMax<pixelMin){var tmp=pixelMax;pixelMax=pixelMin;pixelMin=tmp;}opts._pixelMin=pixelMin;opts._pixelMax=pixelMax;setCursor(d3.select(dragCover),cursor);setDataRange(rangeSlider,gd,axisOpts,opts);}function mouseUp(){dragCover.removeEventListener('mousemove',mouseMove);dragCover.removeEventListener('mouseup',mouseUp);Lib.removeElement(dragCover);}});}function setDataRange(rangeSlider,gd,axisOpts,opts){function clamp(v){return axisOpts.l2r(Lib.constrain(v,opts._rl[0],opts._rl[1]));}var dataMin=clamp(opts.p2d(opts._pixelMin));var dataMax=clamp(opts.p2d(opts._pixelMax));window.requestAnimationFrame(function(){Registry.call('_guiRelayout',gd,axisOpts._name+'.range',[dataMin,dataMax]);});}function setPixelRange(rangeSlider,gd,axisOpts,opts,oppAxisOpts,oppAxisRangeOpts){var hw2=constants.handleWidth/2;function clamp(v){return Lib.constrain(v,0,opts._width);}function clampOppAxis(v){return Lib.constrain(v,0,opts._height);}function clampHandle(v){return Lib.constrain(v,-hw2,opts._width+hw2);}var pixelMin=clamp(opts.d2p(axisOpts._rl[0]));var pixelMax=clamp(opts.d2p(axisOpts._rl[1]));rangeSlider.select('rect.'+constants.slideBoxClassName).attr('x',pixelMin).attr('width',pixelMax-pixelMin);rangeSlider.select('rect.'+constants.maskMinClassName).attr('width',pixelMin);rangeSlider.select('rect.'+constants.maskMaxClassName).attr('x',pixelMax).attr('width',opts._width-pixelMax);if(oppAxisRangeOpts.rangemode!=='match'){var pixelMinOppAxis=opts._height-clampOppAxis(opts.d2pOppAxis(oppAxisOpts._rl[1]));var pixelMaxOppAxis=opts._height-clampOppAxis(opts.d2pOppAxis(oppAxisOpts._rl[0]));rangeSlider.select('rect.'+constants.maskMinOppAxisClassName).attr('x',pixelMin).attr('height',pixelMinOppAxis).attr('width',pixelMax-pixelMin);rangeSlider.select('rect.'+constants.maskMaxOppAxisClassName).attr('x',pixelMin).attr('y',pixelMaxOppAxis).attr('height',opts._height-pixelMaxOppAxis).attr('width',pixelMax-pixelMin);rangeSlider.select('rect.'+constants.slideBoxClassName).attr('y',pixelMinOppAxis).attr('height',pixelMaxOppAxis-pixelMinOppAxis);}// add offset for crispier corners\n// https://github.com/plotly/plotly.js/pull/1409\nvar offset=0.5;var xMin=Math.round(clampHandle(pixelMin-hw2))-offset;var xMax=Math.round(clampHandle(pixelMax-hw2))+offset;rangeSlider.select('g.'+constants.grabberMinClassName).attr('transform','translate('+xMin+','+offset+')');rangeSlider.select('g.'+constants.grabberMaxClassName).attr('transform','translate('+xMax+','+offset+')');}function drawBg(rangeSlider,gd,axisOpts,opts){var bg=Lib.ensureSingle(rangeSlider,'rect',constants.bgClassName,function(s){s.attr({x:0,y:0,'shape-rendering':'crispEdges'});});var borderCorrect=opts.borderwidth%2===0?opts.borderwidth:opts.borderwidth-1;var offsetShift=-opts._offsetShift;var lw=Drawing.crispRound(gd,opts.borderwidth);bg.attr({width:opts._width+borderCorrect,height:opts._height+borderCorrect,transform:'translate('+offsetShift+','+offsetShift+')',fill:opts.bgcolor,stroke:opts.bordercolor,'stroke-width':lw});}function addClipPath(rangeSlider,gd,axisOpts,opts){var fullLayout=gd._fullLayout;var clipPath=Lib.ensureSingleById(fullLayout._topdefs,'clipPath',opts._clipId,function(s){s.append('rect').attr({x:0,y:0});});clipPath.select('rect').attr({width:opts._width,height:opts._height});}function drawRangePlot(rangeSlider,gd,axisOpts,opts){var calcData=gd.calcdata;var rangePlots=rangeSlider.selectAll('g.'+constants.rangePlotClassName).data(axisOpts._subplotsWith,Lib.identity);rangePlots.enter().append('g').attr('class',function(id){return constants.rangePlotClassName+' '+id;}).call(Drawing.setClipUrl,opts._clipId,gd);rangePlots.order();rangePlots.exit().remove();var mainplotinfo;rangePlots.each(function(id,i){var plotgroup=d3.select(this);var isMainPlot=i===0;var oppAxisOpts=axisIDs.getFromId(gd,id,'y');var oppAxisName=oppAxisOpts._name;var oppAxisRangeOpts=opts[oppAxisName];var mockFigure={data:[],layout:{xaxis:{type:axisOpts.type,domain:[0,1],range:opts.range.slice(),calendar:axisOpts.calendar},width:opts._width,height:opts._height,margin:{t:0,b:0,l:0,r:0}},_context:gd._context};mockFigure.layout[oppAxisName]={type:oppAxisOpts.type,domain:[0,1],range:oppAxisRangeOpts.rangemode!=='match'?oppAxisRangeOpts.range.slice():oppAxisOpts.range.slice(),calendar:oppAxisOpts.calendar};Plots.supplyDefaults(mockFigure);var xa=mockFigure._fullLayout.xaxis;var ya=mockFigure._fullLayout[oppAxisName];xa.clearCalc();xa.setScale();ya.clearCalc();ya.setScale();var plotinfo={id:id,plotgroup:plotgroup,xaxis:xa,yaxis:ya,isRangePlot:true};if(isMainPlot)mainplotinfo=plotinfo;else{plotinfo.mainplot='xy';plotinfo.mainplotinfo=mainplotinfo;}Cartesian.rangePlot(gd,plotinfo,filterRangePlotCalcData(calcData,id));});}function filterRangePlotCalcData(calcData,subplotId){var out=[];for(var i=0;i<calcData.length;i++){var calcTrace=calcData[i];var trace=calcTrace[0].trace;if(trace.xaxis+trace.yaxis===subplotId){out.push(calcTrace);}}return out;}function drawMasks(rangeSlider,gd,axisOpts,opts,oppAxisRangeOpts){var maskMin=Lib.ensureSingle(rangeSlider,'rect',constants.maskMinClassName,function(s){s.attr({x:0,y:0,'shape-rendering':'crispEdges'});});maskMin.attr('height',opts._height).call(Color.fill,constants.maskColor);var maskMax=Lib.ensureSingle(rangeSlider,'rect',constants.maskMaxClassName,function(s){s.attr({y:0,'shape-rendering':'crispEdges'});});maskMax.attr('height',opts._height).call(Color.fill,constants.maskColor);// masks used for oppAxis zoom\nif(oppAxisRangeOpts.rangemode!=='match'){var maskMinOppAxis=Lib.ensureSingle(rangeSlider,'rect',constants.maskMinOppAxisClassName,function(s){s.attr({y:0,'shape-rendering':'crispEdges'});});maskMinOppAxis.attr('width',opts._width).call(Color.fill,constants.maskOppAxisColor);var maskMaxOppAxis=Lib.ensureSingle(rangeSlider,'rect',constants.maskMaxOppAxisClassName,function(s){s.attr({y:0,'shape-rendering':'crispEdges'});});maskMaxOppAxis.attr('width',opts._width).style('border-top',constants.maskOppBorder).call(Color.fill,constants.maskOppAxisColor);}}function drawSlideBox(rangeSlider,gd,axisOpts,opts){if(gd._context.staticPlot)return;var slideBox=Lib.ensureSingle(rangeSlider,'rect',constants.slideBoxClassName,function(s){s.attr({y:0,cursor:constants.slideBoxCursor,'shape-rendering':'crispEdges'});});slideBox.attr({height:opts._height,fill:constants.slideBoxFill});}function drawGrabbers(rangeSlider,gd,axisOpts,opts){// <g grabber />\nvar grabberMin=Lib.ensureSingle(rangeSlider,'g',constants.grabberMinClassName);var grabberMax=Lib.ensureSingle(rangeSlider,'g',constants.grabberMaxClassName);// <g handle />\nvar handleFixAttrs={x:0,width:constants.handleWidth,rx:constants.handleRadius,fill:Color.background,stroke:Color.defaultLine,'stroke-width':constants.handleStrokeWidth,'shape-rendering':'crispEdges'};var handleDynamicAttrs={y:Math.round(opts._height/4),height:Math.round(opts._height/2)};var handleMin=Lib.ensureSingle(grabberMin,'rect',constants.handleMinClassName,function(s){s.attr(handleFixAttrs);});handleMin.attr(handleDynamicAttrs);var handleMax=Lib.ensureSingle(grabberMax,'rect',constants.handleMaxClassName,function(s){s.attr(handleFixAttrs);});handleMax.attr(handleDynamicAttrs);// <g grabarea />\nif(gd._context.staticPlot)return;var grabAreaFixAttrs={width:constants.grabAreaWidth,x:0,y:0,fill:constants.grabAreaFill,cursor:constants.grabAreaCursor};var grabAreaMin=Lib.ensureSingle(grabberMin,'rect',constants.grabAreaMinClassName,function(s){s.attr(grabAreaFixAttrs);});grabAreaMin.attr('height',opts._height);var grabAreaMax=Lib.ensureSingle(grabberMax,'rect',constants.grabAreaMaxClassName,function(s){s.attr(grabAreaFixAttrs);});grabAreaMax.attr('height',opts._height);}},{\"../../lib\":423,\"../../lib/setcursor\":442,\"../../plots/cartesian\":481,\"../../plots/cartesian/axis_ids\":472,\"../../plots/plots\":513,\"../../registry\":521,\"../color\":299,\"../dragelement\":317,\"../drawing\":320,\"../titles\":387,\"./constants\":369,\"d3\":71}],372:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var axisIDs=_dereq_('../../plots/cartesian/axis_ids');var constants=_dereq_('./constants');var name=constants.name;function isVisible(ax){var rangeSlider=ax&&ax[name];return rangeSlider&&rangeSlider.visible;}exports.isVisible=isVisible;exports.makeData=function(fullLayout){var axes=axisIDs.list({_fullLayout:fullLayout},'x',true);var margin=fullLayout.margin;var rangeSliderData=[];if(!fullLayout._has('gl2d')){for(var i=0;i<axes.length;i++){var ax=axes[i];if(isVisible(ax)){rangeSliderData.push(ax);var opts=ax[name];opts._id=name+ax._id;opts._height=(fullLayout.height-margin.b-margin.t)*opts.thickness;opts._offsetShift=Math.floor(opts.borderwidth/2);}}}fullLayout._rangeSliderData=rangeSliderData;};exports.autoMarginOpts=function(gd,ax){var opts=ax[name];var oppBottom=Infinity;var counterAxes=ax._counterAxes;for(var j=0;j<counterAxes.length;j++){var counterId=counterAxes[j];var oppAxis=axisIDs.getFromId(gd,counterId);oppBottom=Math.min(oppBottom,oppAxis.domain[0]);}opts._oppBottom=oppBottom;var tickHeight=ax.side==='bottom'&&ax._boundingBox.height||0;opts._tickHeight=tickHeight;return{x:0,y:oppBottom,l:0,r:0,t:0,b:opts._height+gd._fullLayout.margin.b+tickHeight,pad:constants.extraPad+opts._offsetShift*2};};},{\"../../plots/cartesian/axis_ids\":472,\"./constants\":369}],373:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var attrs=_dereq_('./attributes');var oppAxisAttrs=_dereq_('./oppaxis_attributes');var helpers=_dereq_('./helpers');module.exports={moduleType:'component',name:'rangeslider',schema:{subplots:{xaxis:{rangeslider:Lib.extendFlat({},attrs,{yaxis:oppAxisAttrs})}}},layoutAttributes:_dereq_('./attributes'),handleDefaults:_dereq_('./defaults'),calcAutorange:_dereq_('./calc_autorange'),draw:_dereq_('./draw'),isVisible:helpers.isVisible,makeData:helpers.makeData,autoMarginOpts:helpers.autoMarginOpts};},{\"../../lib\":423,\"./attributes\":367,\"./calc_autorange\":368,\"./defaults\":370,\"./draw\":371,\"./helpers\":372,\"./oppaxis_attributes\":374}],374:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={// not really a 'subplot' attribute container,\n// but this is the flag we use to denote attributes that\n// support yaxis, yaxis2, yaxis3, ... counters\n_isSubplotObj:true,rangemode:{valType:'enumerated',values:['auto','fixed','match'],dflt:'match',editType:'calc'},range:{valType:'info_array',items:[{valType:'any',editType:'plot'},{valType:'any',editType:'plot'}],editType:'plot'},editType:'calc'};},{}],375:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var annAttrs=_dereq_('../annotations/attributes');var scatterLineAttrs=_dereq_('../../traces/scatter/attributes').line;var dash=_dereq_('../drawing/attributes').dash;var extendFlat=_dereq_('../../lib/extend').extendFlat;var templatedArray=_dereq_('../../plot_api/plot_template').templatedArray;module.exports=templatedArray('shape',{visible:{valType:'boolean',dflt:true,editType:'calc+arraydraw'},type:{valType:'enumerated',values:['circle','rect','path','line'],editType:'calc+arraydraw'},layer:{valType:'enumerated',values:['below','above'],dflt:'above',editType:'arraydraw'},xref:extendFlat({},annAttrs.xref,{}),xsizemode:{valType:'enumerated',values:['scaled','pixel'],dflt:'scaled',editType:'calc+arraydraw'},xanchor:{valType:'any',editType:'calc+arraydraw'},x0:{valType:'any',editType:'calc+arraydraw'},x1:{valType:'any',editType:'calc+arraydraw'},yref:extendFlat({},annAttrs.yref,{}),ysizemode:{valType:'enumerated',values:['scaled','pixel'],dflt:'scaled',editType:'calc+arraydraw'},yanchor:{valType:'any',editType:'calc+arraydraw'},y0:{valType:'any',editType:'calc+arraydraw'},y1:{valType:'any',editType:'calc+arraydraw'},path:{valType:'string',editType:'calc+arraydraw'},opacity:{valType:'number',min:0,max:1,dflt:1,editType:'arraydraw'},line:{color:extendFlat({},scatterLineAttrs.color,{editType:'arraydraw'}),width:extendFlat({},scatterLineAttrs.width,{editType:'calc+arraydraw'}),dash:extendFlat({},dash,{editType:'arraydraw'}),editType:'calc+arraydraw'},fillcolor:{valType:'color',dflt:'rgba(0,0,0,0)',editType:'arraydraw'},editType:'arraydraw'});},{\"../../lib/extend\":416,\"../../plot_api/plot_template\":459,\"../../traces/scatter/attributes\":533,\"../annotations/attributes\":284,\"../drawing/attributes\":319}],376:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Axes=_dereq_('../../plots/cartesian/axes');var constants=_dereq_('./constants');var helpers=_dereq_('./helpers');module.exports=function calcAutorange(gd){var fullLayout=gd._fullLayout;var shapeList=Lib.filterVisible(fullLayout.shapes);if(!shapeList.length||!gd._fullData.length)return;for(var i=0;i<shapeList.length;i++){var shape=shapeList[i];shape._extremes={};var ax,bounds;if(shape.xref!=='paper'){var vx0=shape.xsizemode==='pixel'?shape.xanchor:shape.x0;var vx1=shape.xsizemode==='pixel'?shape.xanchor:shape.x1;ax=Axes.getFromId(gd,shape.xref);bounds=shapeBounds(ax,vx0,vx1,shape.path,constants.paramIsX);if(bounds){shape._extremes[ax._id]=Axes.findExtremes(ax,bounds,calcXPaddingOptions(shape));}}if(shape.yref!=='paper'){var vy0=shape.ysizemode==='pixel'?shape.yanchor:shape.y0;var vy1=shape.ysizemode==='pixel'?shape.yanchor:shape.y1;ax=Axes.getFromId(gd,shape.yref);bounds=shapeBounds(ax,vy0,vy1,shape.path,constants.paramIsY);if(bounds){shape._extremes[ax._id]=Axes.findExtremes(ax,bounds,calcYPaddingOptions(shape));}}}};function calcXPaddingOptions(shape){return calcPaddingOptions(shape.line.width,shape.xsizemode,shape.x0,shape.x1,shape.path,false);}function calcYPaddingOptions(shape){return calcPaddingOptions(shape.line.width,shape.ysizemode,shape.y0,shape.y1,shape.path,true);}function calcPaddingOptions(lineWidth,sizeMode,v0,v1,path,isYAxis){var ppad=lineWidth/2;var axisDirectionReverted=isYAxis;if(sizeMode==='pixel'){var coords=path?helpers.extractPathCoords(path,isYAxis?constants.paramIsY:constants.paramIsX):[v0,v1];var maxValue=Lib.aggNums(Math.max,null,coords);var minValue=Lib.aggNums(Math.min,null,coords);var beforePad=minValue<0?Math.abs(minValue)+ppad:ppad;var afterPad=maxValue>0?maxValue+ppad:ppad;return{ppad:ppad,ppadplus:axisDirectionReverted?beforePad:afterPad,ppadminus:axisDirectionReverted?afterPad:beforePad};}else{return{ppad:ppad};}}function shapeBounds(ax,v0,v1,path,paramsToUse){var convertVal=ax.type==='category'||ax.type==='multicategory'?ax.r2c:ax.d2c;if(v0!==undefined)return[convertVal(v0),convertVal(v1)];if(!path)return;var min=Infinity;var max=-Infinity;var segments=path.match(constants.segmentRE);var i;var segment;var drawnParam;var params;var val;if(ax.type==='date')convertVal=helpers.decodeDate(convertVal);for(i=0;i<segments.length;i++){segment=segments[i];drawnParam=paramsToUse[segment.charAt(0)].drawn;if(drawnParam===undefined)continue;params=segments[i].substr(1).match(constants.paramRE);if(!params||params.length<drawnParam)continue;val=convertVal(params[drawnParam]);if(val<min)min=val;if(val>max)max=val;}if(max>=min)return[min,max];}},{\"../../lib\":423,\"../../plots/cartesian/axes\":469,\"./constants\":377,\"./helpers\":380}],377:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={segmentRE:/[MLHVQCTSZ][^MLHVQCTSZ]*/g,paramRE:/[^\\s,]+/g,// which numbers in each path segment are x (or y) values\n// drawn is which param is a drawn point, as opposed to a\n// control point (which doesn't count toward autorange.\n// TODO: this means curved paths could extend beyond the\n// autorange bounds. This is a bit tricky to get right\n// unless we revert to bounding boxes, but perhaps there's\n// a calculation we could do...)\nparamIsX:{M:{0:true,drawn:0},L:{0:true,drawn:0},H:{0:true,drawn:0},V:{},Q:{0:true,2:true,drawn:2},C:{0:true,2:true,4:true,drawn:4},T:{0:true,drawn:0},S:{0:true,2:true,drawn:2},// A: {0: true, 5: true},\nZ:{}},paramIsY:{M:{1:true,drawn:1},L:{1:true,drawn:1},H:{},V:{0:true,drawn:0},Q:{1:true,3:true,drawn:3},C:{1:true,3:true,5:true,drawn:5},T:{1:true,drawn:1},S:{1:true,3:true,drawn:5},// A: {1: true, 6: true},\nZ:{}},numParams:{M:2,L:2,H:1,V:1,Q:4,C:6,T:2,S:4,// A: 7,\nZ:0}};},{}],378:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Axes=_dereq_('../../plots/cartesian/axes');var handleArrayContainerDefaults=_dereq_('../../plots/array_container_defaults');var attributes=_dereq_('./attributes');var helpers=_dereq_('./helpers');module.exports=function supplyLayoutDefaults(layoutIn,layoutOut){handleArrayContainerDefaults(layoutIn,layoutOut,{name:'shapes',handleItemDefaults:handleShapeDefaults});};function handleShapeDefaults(shapeIn,shapeOut,fullLayout){function coerce(attr,dflt){return Lib.coerce(shapeIn,shapeOut,attributes,attr,dflt);}var visible=coerce('visible');if(!visible)return;coerce('layer');coerce('opacity');coerce('fillcolor');coerce('line.color');coerce('line.width');coerce('line.dash');var dfltType=shapeIn.path?'path':'rect';var shapeType=coerce('type',dfltType);var xSizeMode=coerce('xsizemode');var ySizeMode=coerce('ysizemode');// positioning\nvar axLetters=['x','y'];for(var i=0;i<2;i++){var axLetter=axLetters[i];var attrAnchor=axLetter+'anchor';var sizeMode=axLetter==='x'?xSizeMode:ySizeMode;var gdMock={_fullLayout:fullLayout};var ax;var pos2r;var r2pos;// xref, yref\nvar axRef=Axes.coerceRef(shapeIn,shapeOut,gdMock,axLetter,'','paper');if(axRef!=='paper'){ax=Axes.getFromId(gdMock,axRef);ax._shapeIndices.push(shapeOut._index);r2pos=helpers.rangeToShapePosition(ax);pos2r=helpers.shapePositionToRange(ax);}else{pos2r=r2pos=Lib.identity;}// Coerce x0, x1, y0, y1\nif(shapeType!=='path'){var dflt0=0.25;var dflt1=0.75;// hack until V2.0 when log has regular range behavior - make it look like other\n// ranges to send to coerce, then put it back after\n// this is all to give reasonable default position behavior on log axes, which is\n// a pretty unimportant edge case so we could just ignore this.\nvar attr0=axLetter+'0';var attr1=axLetter+'1';var in0=shapeIn[attr0];var in1=shapeIn[attr1];shapeIn[attr0]=pos2r(shapeIn[attr0],true);shapeIn[attr1]=pos2r(shapeIn[attr1],true);if(sizeMode==='pixel'){coerce(attr0,0);coerce(attr1,10);}else{Axes.coercePosition(shapeOut,gdMock,coerce,axRef,attr0,dflt0);Axes.coercePosition(shapeOut,gdMock,coerce,axRef,attr1,dflt1);}// hack part 2\nshapeOut[attr0]=r2pos(shapeOut[attr0]);shapeOut[attr1]=r2pos(shapeOut[attr1]);shapeIn[attr0]=in0;shapeIn[attr1]=in1;}// Coerce xanchor and yanchor\nif(sizeMode==='pixel'){// Hack for log axis described above\nvar inAnchor=shapeIn[attrAnchor];shapeIn[attrAnchor]=pos2r(shapeIn[attrAnchor],true);Axes.coercePosition(shapeOut,gdMock,coerce,axRef,attrAnchor,0.25);// Hack part 2\nshapeOut[attrAnchor]=r2pos(shapeOut[attrAnchor]);shapeIn[attrAnchor]=inAnchor;}}if(shapeType==='path'){coerce('path');}else{Lib.noneOrAll(shapeIn,shapeOut,['x0','x1','y0','y1']);}}},{\"../../lib\":423,\"../../plots/array_container_defaults\":465,\"../../plots/cartesian/axes\":469,\"./attributes\":375,\"./helpers\":380}],379:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var Axes=_dereq_('../../plots/cartesian/axes');var Color=_dereq_('../color');var Drawing=_dereq_('../drawing');var arrayEditor=_dereq_('../../plot_api/plot_template').arrayEditor;var dragElement=_dereq_('../dragelement');var setCursor=_dereq_('../../lib/setcursor');var constants=_dereq_('./constants');var helpers=_dereq_('./helpers');// Shapes are stored in gd.layout.shapes, an array of objects\n// index can point to one item in this array,\n//  or non-numeric to simply add a new one\n//  or -1 to modify all existing\n// opt can be the full options object, or one key (to be set to value)\n//  or undefined to simply redraw\n// if opt is blank, val can be 'add' or a full options object to add a new\n//  annotation at that point in the array, or 'remove' to delete this one\nmodule.exports={draw:draw,drawOne:drawOne};function draw(gd){var fullLayout=gd._fullLayout;// Remove previous shapes before drawing new in shapes in fullLayout.shapes\nfullLayout._shapeUpperLayer.selectAll('path').remove();fullLayout._shapeLowerLayer.selectAll('path').remove();for(var k in fullLayout._plots){var shapelayer=fullLayout._plots[k].shapelayer;if(shapelayer)shapelayer.selectAll('path').remove();}for(var i=0;i<fullLayout.shapes.length;i++){if(fullLayout.shapes[i].visible){drawOne(gd,i);}}// may need to resurrect this if we put text (LaTeX) in shapes\n// return Plots.previousPromises(gd);\n}function drawOne(gd,index){// remove the existing shape if there is one.\n// because indices can change, we need to look in all shape layers\ngd._fullLayout._paperdiv.selectAll('.shapelayer [data-index=\"'+index+'\"]').remove();var options=gd._fullLayout.shapes[index]||{};// this shape is gone - quit now after deleting it\n// TODO: use d3 idioms instead of deleting and redrawing every time\nif(!options._input||options.visible===false)return;if(options.layer!=='below'){drawShape(gd._fullLayout._shapeUpperLayer);}else if(options.xref==='paper'||options.yref==='paper'){drawShape(gd._fullLayout._shapeLowerLayer);}else{var plotinfo=gd._fullLayout._plots[options.xref+options.yref];if(plotinfo){var mainPlot=plotinfo.mainplotinfo||plotinfo;drawShape(mainPlot.shapelayer);}else{// Fall back to _shapeLowerLayer in case the requested subplot doesn't exist.\n// This can happen if you reference the shape to an x / y axis combination\n// that doesn't have any data on it (and layer is below)\ndrawShape(gd._fullLayout._shapeLowerLayer);}}function drawShape(shapeLayer){var attrs={'data-index':index,'fill-rule':'evenodd',d:getPathString(gd,options)};var lineColor=options.line.width?options.line.color:'rgba(0,0,0,0)';var path=shapeLayer.append('path').attr(attrs).style('opacity',options.opacity).call(Color.stroke,lineColor).call(Color.fill,options.fillcolor).call(Drawing.dashLine,options.line.dash,options.line.width);setClipPath(path,gd,options);if(gd._context.edits.shapePosition)setupDragElement(gd,path,options,index,shapeLayer);}}function setClipPath(shapePath,gd,shapeOptions){// note that for layer=\"below\" the clipAxes can be different from the\n// subplot we're drawing this in. This could cause problems if the shape\n// spans two subplots. See https://github.com/plotly/plotly.js/issues/1452\nvar clipAxes=(shapeOptions.xref+shapeOptions.yref).replace(/paper/g,'');Drawing.setClipUrl(shapePath,clipAxes?'clip'+gd._fullLayout._uid+clipAxes:null,gd);}function setupDragElement(gd,shapePath,shapeOptions,index,shapeLayer){var MINWIDTH=10;var MINHEIGHT=10;var xPixelSized=shapeOptions.xsizemode==='pixel';var yPixelSized=shapeOptions.ysizemode==='pixel';var isLine=shapeOptions.type==='line';var isPath=shapeOptions.type==='path';var editHelpers=arrayEditor(gd.layout,'shapes',shapeOptions);var modifyItem=editHelpers.modifyItem;var x0,y0,x1,y1,xAnchor,yAnchor;var n0,s0,w0,e0,optN,optS,optW,optE;var pathIn;// setup conversion functions\nvar xa=Axes.getFromId(gd,shapeOptions.xref);var ya=Axes.getFromId(gd,shapeOptions.yref);var x2p=helpers.getDataToPixel(gd,xa);var y2p=helpers.getDataToPixel(gd,ya,true);var p2x=helpers.getPixelToData(gd,xa);var p2y=helpers.getPixelToData(gd,ya,true);var sensoryElement=obtainSensoryElement();var dragOptions={element:sensoryElement.node(),gd:gd,prepFn:startDrag,doneFn:endDrag,clickFn:abortDrag};var dragMode;dragElement.init(dragOptions);sensoryElement.node().onmousemove=updateDragMode;function obtainSensoryElement(){return isLine?createLineDragHandles():shapePath;}function createLineDragHandles(){var minSensoryWidth=10;var sensoryWidth=Math.max(shapeOptions.line.width,minSensoryWidth);// Helper shapes group\n// Note that by setting the `data-index` attr, it is ensured that\n// the helper group is purged in this modules `draw` function\nvar g=shapeLayer.append('g').attr('data-index',index);// Helper path for moving\ng.append('path').attr('d',shapePath.attr('d')).style({'cursor':'move','stroke-width':sensoryWidth,'stroke-opacity':'0'// ensure not visible\n});// Helper circles for resizing\nvar circleStyle={'fill-opacity':'0'// ensure not visible\n};var circleRadius=sensoryWidth/2>minSensoryWidth?sensoryWidth/2:minSensoryWidth;g.append('circle').attr({'data-line-point':'start-point','cx':xPixelSized?x2p(shapeOptions.xanchor)+shapeOptions.x0:x2p(shapeOptions.x0),'cy':yPixelSized?y2p(shapeOptions.yanchor)-shapeOptions.y0:y2p(shapeOptions.y0),'r':circleRadius}).style(circleStyle).classed('cursor-grab',true);g.append('circle').attr({'data-line-point':'end-point','cx':xPixelSized?x2p(shapeOptions.xanchor)+shapeOptions.x1:x2p(shapeOptions.x1),'cy':yPixelSized?y2p(shapeOptions.yanchor)-shapeOptions.y1:y2p(shapeOptions.y1),'r':circleRadius}).style(circleStyle).classed('cursor-grab',true);return g;}function updateDragMode(evt){if(isLine){if(evt.target.tagName==='path'){dragMode='move';}else{dragMode=evt.target.attributes['data-line-point'].value==='start-point'?'resize-over-start-point':'resize-over-end-point';}}else{// element might not be on screen at time of setup,\n// so obtain bounding box here\nvar dragBBox=dragOptions.element.getBoundingClientRect();// choose 'move' or 'resize'\n// based on initial position of cursor within the drag element\nvar w=dragBBox.right-dragBBox.left;var h=dragBBox.bottom-dragBBox.top;var x=evt.clientX-dragBBox.left;var y=evt.clientY-dragBBox.top;var cursor=!isPath&&w>MINWIDTH&&h>MINHEIGHT&&!evt.shiftKey?dragElement.getCursor(x/w,1-y/h):'move';setCursor(shapePath,cursor);// possible values 'move', 'sw', 'w', 'se', 'e', 'ne', 'n', 'nw' and 'w'\ndragMode=cursor.split('-')[0];}}function startDrag(evt){// setup update strings and initial values\nif(xPixelSized){xAnchor=x2p(shapeOptions.xanchor);}if(yPixelSized){yAnchor=y2p(shapeOptions.yanchor);}if(shapeOptions.type==='path'){pathIn=shapeOptions.path;}else{x0=xPixelSized?shapeOptions.x0:x2p(shapeOptions.x0);y0=yPixelSized?shapeOptions.y0:y2p(shapeOptions.y0);x1=xPixelSized?shapeOptions.x1:x2p(shapeOptions.x1);y1=yPixelSized?shapeOptions.y1:y2p(shapeOptions.y1);}if(x0<x1){w0=x0;optW='x0';e0=x1;optE='x1';}else{w0=x1;optW='x1';e0=x0;optE='x0';}// For fixed size shapes take opposing direction of y-axis into account.\n// Hint: For data sized shapes this is done by the y2p function.\nif(!yPixelSized&&y0<y1||yPixelSized&&y0>y1){n0=y0;optN='y0';s0=y1;optS='y1';}else{n0=y1;optN='y1';s0=y0;optS='y0';}// setup dragMode and the corresponding handler\nupdateDragMode(evt);renderVisualCues(shapeLayer,shapeOptions);deactivateClipPathTemporarily(shapePath,shapeOptions,gd);dragOptions.moveFn=dragMode==='move'?moveShape:resizeShape;}function endDrag(){setCursor(shapePath);removeVisualCues(shapeLayer);// Don't rely on clipPath being activated during re-layout\nsetClipPath(shapePath,gd,shapeOptions);Registry.call('_guiRelayout',gd,editHelpers.getUpdateObj());}function abortDrag(){removeVisualCues(shapeLayer);}function moveShape(dx,dy){if(shapeOptions.type==='path'){var noOp=function noOp(coord){return coord;};var moveX=noOp;var moveY=noOp;if(xPixelSized){modifyItem('xanchor',shapeOptions.xanchor=p2x(xAnchor+dx));}else{moveX=function moveX(x){return p2x(x2p(x)+dx);};if(xa&&xa.type==='date')moveX=helpers.encodeDate(moveX);}if(yPixelSized){modifyItem('yanchor',shapeOptions.yanchor=p2y(yAnchor+dy));}else{moveY=function moveY(y){return p2y(y2p(y)+dy);};if(ya&&ya.type==='date')moveY=helpers.encodeDate(moveY);}modifyItem('path',shapeOptions.path=movePath(pathIn,moveX,moveY));}else{if(xPixelSized){modifyItem('xanchor',shapeOptions.xanchor=p2x(xAnchor+dx));}else{modifyItem('x0',shapeOptions.x0=p2x(x0+dx));modifyItem('x1',shapeOptions.x1=p2x(x1+dx));}if(yPixelSized){modifyItem('yanchor',shapeOptions.yanchor=p2y(yAnchor+dy));}else{modifyItem('y0',shapeOptions.y0=p2y(y0+dy));modifyItem('y1',shapeOptions.y1=p2y(y1+dy));}}shapePath.attr('d',getPathString(gd,shapeOptions));renderVisualCues(shapeLayer,shapeOptions);}function resizeShape(dx,dy){if(isPath){// TODO: implement path resize, don't forget to update dragMode code\nvar noOp=function noOp(coord){return coord;};var moveX=noOp;var moveY=noOp;if(xPixelSized){modifyItem('xanchor',shapeOptions.xanchor=p2x(xAnchor+dx));}else{moveX=function moveX(x){return p2x(x2p(x)+dx);};if(xa&&xa.type==='date')moveX=helpers.encodeDate(moveX);}if(yPixelSized){modifyItem('yanchor',shapeOptions.yanchor=p2y(yAnchor+dy));}else{moveY=function moveY(y){return p2y(y2p(y)+dy);};if(ya&&ya.type==='date')moveY=helpers.encodeDate(moveY);}modifyItem('path',shapeOptions.path=movePath(pathIn,moveX,moveY));}else if(isLine){if(dragMode==='resize-over-start-point'){var newX0=x0+dx;var newY0=yPixelSized?y0-dy:y0+dy;modifyItem('x0',shapeOptions.x0=xPixelSized?newX0:p2x(newX0));modifyItem('y0',shapeOptions.y0=yPixelSized?newY0:p2y(newY0));}else if(dragMode==='resize-over-end-point'){var newX1=x1+dx;var newY1=yPixelSized?y1-dy:y1+dy;modifyItem('x1',shapeOptions.x1=xPixelSized?newX1:p2x(newX1));modifyItem('y1',shapeOptions.y1=yPixelSized?newY1:p2y(newY1));}}else{var newN=~dragMode.indexOf('n')?n0+dy:n0;var newS=~dragMode.indexOf('s')?s0+dy:s0;var newW=~dragMode.indexOf('w')?w0+dx:w0;var newE=~dragMode.indexOf('e')?e0+dx:e0;// Do things in opposing direction for y-axis.\n// Hint: for data-sized shapes the reversal of axis direction is done in p2y.\nif(~dragMode.indexOf('n')&&yPixelSized)newN=n0-dy;if(~dragMode.indexOf('s')&&yPixelSized)newS=s0-dy;// Update shape eventually. Again, be aware of the\n// opposing direction of the y-axis of fixed size shapes.\nif(!yPixelSized&&newS-newN>MINHEIGHT||yPixelSized&&newN-newS>MINHEIGHT){modifyItem(optN,shapeOptions[optN]=yPixelSized?newN:p2y(newN));modifyItem(optS,shapeOptions[optS]=yPixelSized?newS:p2y(newS));}if(newE-newW>MINWIDTH){modifyItem(optW,shapeOptions[optW]=xPixelSized?newW:p2x(newW));modifyItem(optE,shapeOptions[optE]=xPixelSized?newE:p2x(newE));}}shapePath.attr('d',getPathString(gd,shapeOptions));renderVisualCues(shapeLayer,shapeOptions);}function renderVisualCues(shapeLayer,shapeOptions){if(xPixelSized||yPixelSized){renderAnchor();}function renderAnchor(){var isNotPath=shapeOptions.type!=='path';// d3 join with dummy data to satisfy d3 data-binding\nvar visualCues=shapeLayer.selectAll('.visual-cue').data([0]);// Enter\nvar strokeWidth=1;visualCues.enter().append('path').attr({'fill':'#fff','fill-rule':'evenodd','stroke':'#000','stroke-width':strokeWidth}).classed('visual-cue',true);// Update\nvar posX=x2p(xPixelSized?shapeOptions.xanchor:Lib.midRange(isNotPath?[shapeOptions.x0,shapeOptions.x1]:helpers.extractPathCoords(shapeOptions.path,constants.paramIsX)));var posY=y2p(yPixelSized?shapeOptions.yanchor:Lib.midRange(isNotPath?[shapeOptions.y0,shapeOptions.y1]:helpers.extractPathCoords(shapeOptions.path,constants.paramIsY)));posX=helpers.roundPositionForSharpStrokeRendering(posX,strokeWidth);posY=helpers.roundPositionForSharpStrokeRendering(posY,strokeWidth);if(xPixelSized&&yPixelSized){var crossPath='M'+(posX-1-strokeWidth)+','+(posY-1-strokeWidth)+'h-8v2h8 v8h2v-8 h8v-2h-8 v-8h-2 Z';visualCues.attr('d',crossPath);}else if(xPixelSized){var vBarPath='M'+(posX-1-strokeWidth)+','+(posY-9-strokeWidth)+'v18 h2 v-18 Z';visualCues.attr('d',vBarPath);}else{var hBarPath='M'+(posX-9-strokeWidth)+','+(posY-1-strokeWidth)+'h18 v2 h-18 Z';visualCues.attr('d',hBarPath);}}}function removeVisualCues(shapeLayer){shapeLayer.selectAll('.visual-cue').remove();}function deactivateClipPathTemporarily(shapePath,shapeOptions,gd){var xref=shapeOptions.xref;var yref=shapeOptions.yref;var xa=Axes.getFromId(gd,xref);var ya=Axes.getFromId(gd,yref);var clipAxes='';if(xref!=='paper'&&!xa.autorange)clipAxes+=xref;if(yref!=='paper'&&!ya.autorange)clipAxes+=yref;Drawing.setClipUrl(shapePath,clipAxes?'clip'+gd._fullLayout._uid+clipAxes:null,gd);}}function getPathString(gd,options){var type=options.type;var xa=Axes.getFromId(gd,options.xref);var ya=Axes.getFromId(gd,options.yref);var gs=gd._fullLayout._size;var x2r,x2p,y2r,y2p;var x0,x1,y0,y1;if(xa){x2r=helpers.shapePositionToRange(xa);x2p=function x2p(v){return xa._offset+xa.r2p(x2r(v,true));};}else{x2p=function x2p(v){return gs.l+gs.w*v;};}if(ya){y2r=helpers.shapePositionToRange(ya);y2p=function y2p(v){return ya._offset+ya.r2p(y2r(v,true));};}else{y2p=function y2p(v){return gs.t+gs.h*(1-v);};}if(type==='path'){if(xa&&xa.type==='date')x2p=helpers.decodeDate(x2p);if(ya&&ya.type==='date')y2p=helpers.decodeDate(y2p);return convertPath(options,x2p,y2p);}if(options.xsizemode==='pixel'){var xAnchorPos=x2p(options.xanchor);x0=xAnchorPos+options.x0;x1=xAnchorPos+options.x1;}else{x0=x2p(options.x0);x1=x2p(options.x1);}if(options.ysizemode==='pixel'){var yAnchorPos=y2p(options.yanchor);y0=yAnchorPos-options.y0;y1=yAnchorPos-options.y1;}else{y0=y2p(options.y0);y1=y2p(options.y1);}if(type==='line')return'M'+x0+','+y0+'L'+x1+','+y1;if(type==='rect')return'M'+x0+','+y0+'H'+x1+'V'+y1+'H'+x0+'Z';// circle\nvar cx=(x0+x1)/2;var cy=(y0+y1)/2;var rx=Math.abs(cx-x0);var ry=Math.abs(cy-y0);var rArc='A'+rx+','+ry;var rightPt=cx+rx+','+cy;var topPt=cx+','+(cy-ry);return'M'+rightPt+rArc+' 0 1,1 '+topPt+rArc+' 0 0,1 '+rightPt+'Z';}function convertPath(options,x2p,y2p){var pathIn=options.path;var xSizemode=options.xsizemode;var ySizemode=options.ysizemode;var xAnchor=options.xanchor;var yAnchor=options.yanchor;return pathIn.replace(constants.segmentRE,function(segment){var paramNumber=0;var segmentType=segment.charAt(0);var xParams=constants.paramIsX[segmentType];var yParams=constants.paramIsY[segmentType];var nParams=constants.numParams[segmentType];var paramString=segment.substr(1).replace(constants.paramRE,function(param){if(xParams[paramNumber]){if(xSizemode==='pixel')param=x2p(xAnchor)+Number(param);else param=x2p(param);}else if(yParams[paramNumber]){if(ySizemode==='pixel')param=y2p(yAnchor)-Number(param);else param=y2p(param);}paramNumber++;if(paramNumber>nParams)param='X';return param;});if(paramNumber>nParams){paramString=paramString.replace(/[\\s,]*X.*/,'');Lib.log('Ignoring extra params in segment '+segment);}return segmentType+paramString;});}function movePath(pathIn,moveX,moveY){return pathIn.replace(constants.segmentRE,function(segment){var paramNumber=0;var segmentType=segment.charAt(0);var xParams=constants.paramIsX[segmentType];var yParams=constants.paramIsY[segmentType];var nParams=constants.numParams[segmentType];var paramString=segment.substr(1).replace(constants.paramRE,function(param){if(paramNumber>=nParams)return param;if(xParams[paramNumber])param=moveX(param);else if(yParams[paramNumber])param=moveY(param);paramNumber++;return param;});return segmentType+paramString;});}},{\"../../lib\":423,\"../../lib/setcursor\":442,\"../../plot_api/plot_template\":459,\"../../plots/cartesian/axes\":469,\"../../registry\":521,\"../color\":299,\"../dragelement\":317,\"../drawing\":320,\"./constants\":377,\"./helpers\":380}],380:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var constants=_dereq_('./constants');var Lib=_dereq_('../../lib');// special position conversion functions... category axis positions can't be\n// specified by their data values, because they don't make a continuous mapping.\n// so these have to be specified in terms of the category serial numbers,\n// but can take fractional values. Other axis types we specify position based on\n// the actual data values.\n// TODO: in V2.0 (when log axis ranges are in data units) range and shape position\n// will be identical, so rangeToShapePosition and shapePositionToRange can be\n// removed entirely.\nexports.rangeToShapePosition=function(ax){return ax.type==='log'?ax.r2d:function(v){return v;};};exports.shapePositionToRange=function(ax){return ax.type==='log'?ax.d2r:function(v){return v;};};exports.decodeDate=function(convertToPx){return function(v){if(v.replace)v=v.replace('_',' ');return convertToPx(v);};};exports.encodeDate=function(convertToDate){return function(v){return convertToDate(v).replace(' ','_');};};exports.extractPathCoords=function(path,paramsToUse){var extractedCoordinates=[];var segments=path.match(constants.segmentRE);segments.forEach(function(segment){var relevantParamIdx=paramsToUse[segment.charAt(0)].drawn;if(relevantParamIdx===undefined)return;var params=segment.substr(1).match(constants.paramRE);if(!params||params.length<relevantParamIdx)return;extractedCoordinates.push(Lib.cleanNumber(params[relevantParamIdx]));});return extractedCoordinates;};exports.getDataToPixel=function(gd,axis,isVertical){var gs=gd._fullLayout._size;var dataToPixel;if(axis){var d2r=exports.shapePositionToRange(axis);dataToPixel=function dataToPixel(v){return axis._offset+axis.r2p(d2r(v,true));};if(axis.type==='date')dataToPixel=exports.decodeDate(dataToPixel);}else if(isVertical){dataToPixel=function dataToPixel(v){return gs.t+gs.h*(1-v);};}else{dataToPixel=function dataToPixel(v){return gs.l+gs.w*v;};}return dataToPixel;};exports.getPixelToData=function(gd,axis,isVertical){var gs=gd._fullLayout._size;var pixelToData;if(axis){var r2d=exports.rangeToShapePosition(axis);pixelToData=function pixelToData(p){return r2d(axis.p2r(p-axis._offset));};}else if(isVertical){pixelToData=function pixelToData(p){return 1-(p-gs.t)/gs.h;};}else{pixelToData=function pixelToData(p){return(p-gs.l)/gs.w;};}return pixelToData;};/**\n * Based on the given stroke width, rounds the passed\n * position value to represent either a full or half pixel.\n *\n * In case of an odd stroke width (e.g. 1), this measure ensures\n * that a stroke positioned at the returned position isn't rendered\n * blurry due to anti-aliasing.\n *\n * In case of an even stroke width (e.g. 2), this measure ensures\n * that the position value is transformed to a full pixel value\n * so that anti-aliasing doesn't take effect either.\n *\n * @param {number} pos The raw position value to be transformed\n * @param {number} strokeWidth The stroke width\n * @returns {number} either an integer or a .5 decimal number\n */exports.roundPositionForSharpStrokeRendering=function(pos,strokeWidth){var strokeWidthIsOdd=Math.round(strokeWidth%2)===1;var posValAsInt=Math.round(pos);return strokeWidthIsOdd?posValAsInt+0.5:posValAsInt;};},{\"../../lib\":423,\"./constants\":377}],381:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var drawModule=_dereq_('./draw');module.exports={moduleType:'component',name:'shapes',layoutAttributes:_dereq_('./attributes'),supplyLayoutDefaults:_dereq_('./defaults'),includeBasePlot:_dereq_('../../plots/cartesian/include_components')('shapes'),calcAutorange:_dereq_('./calc_autorange'),draw:drawModule.draw,drawOne:drawModule.drawOne};},{\"../../plots/cartesian/include_components\":480,\"./attributes\":375,\"./calc_autorange\":376,\"./defaults\":378,\"./draw\":379}],382:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var fontAttrs=_dereq_('../../plots/font_attributes');var padAttrs=_dereq_('../../plots/pad_attributes');var extendDeepAll=_dereq_('../../lib/extend').extendDeepAll;var overrideAll=_dereq_('../../plot_api/edit_types').overrideAll;var animationAttrs=_dereq_('../../plots/animation_attributes');var templatedArray=_dereq_('../../plot_api/plot_template').templatedArray;var constants=_dereq_('./constants');var stepsAttrs=templatedArray('step',{visible:{valType:'boolean',dflt:true},method:{valType:'enumerated',values:['restyle','relayout','animate','update','skip'],dflt:'restyle'},args:{valType:'info_array',freeLength:true,items:[{valType:'any'},{valType:'any'},{valType:'any'}]},label:{valType:'string'},value:{valType:'string'},execute:{valType:'boolean',dflt:true}});module.exports=overrideAll(templatedArray('slider',{visible:{valType:'boolean',dflt:true},active:{valType:'number',min:0,dflt:0},steps:stepsAttrs,lenmode:{valType:'enumerated',values:['fraction','pixels'],dflt:'fraction'},len:{valType:'number',min:0,dflt:1},x:{valType:'number',min:-2,max:3,dflt:0},pad:extendDeepAll(padAttrs({editType:'arraydraw'}),{},{t:{dflt:20}}),xanchor:{valType:'enumerated',values:['auto','left','center','right'],dflt:'left'},y:{valType:'number',min:-2,max:3,dflt:0},yanchor:{valType:'enumerated',values:['auto','top','middle','bottom'],dflt:'top'},transition:{duration:{valType:'number',min:0,dflt:150},easing:{valType:'enumerated',values:animationAttrs.transition.easing.values,dflt:'cubic-in-out'}},currentvalue:{visible:{valType:'boolean',dflt:true},xanchor:{valType:'enumerated',values:['left','center','right'],dflt:'left'},offset:{valType:'number',dflt:10},prefix:{valType:'string'},suffix:{valType:'string'},font:fontAttrs({})},font:fontAttrs({}),activebgcolor:{valType:'color',dflt:constants.gripBgActiveColor},bgcolor:{valType:'color',dflt:constants.railBgColor},bordercolor:{valType:'color',dflt:constants.railBorderColor},borderwidth:{valType:'number',min:0,dflt:constants.railBorderWidth},ticklen:{valType:'number',min:0,dflt:constants.tickLength},tickcolor:{valType:'color',dflt:constants.tickColor},tickwidth:{valType:'number',min:0,dflt:1},minorticklen:{valType:'number',min:0,dflt:constants.minorTickLength}}),'arraydraw','from-root');},{\"../../lib/extend\":416,\"../../plot_api/edit_types\":452,\"../../plot_api/plot_template\":459,\"../../plots/animation_attributes\":464,\"../../plots/font_attributes\":496,\"../../plots/pad_attributes\":512,\"./constants\":383}],383:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={// layout attribute name\nname:'sliders',// class names\ncontainerClassName:'slider-container',groupClassName:'slider-group',inputAreaClass:'slider-input-area',railRectClass:'slider-rail-rect',railTouchRectClass:'slider-rail-touch-rect',gripRectClass:'slider-grip-rect',tickRectClass:'slider-tick-rect',inputProxyClass:'slider-input-proxy',labelsClass:'slider-labels',labelGroupClass:'slider-label-group',labelClass:'slider-label',currentValueClass:'slider-current-value',railHeight:5,// DOM attribute name in button group keeping track\n// of active update menu\nmenuIndexAttrName:'slider-active-index',// id root pass to Plots.autoMargin\nautoMarginIdRoot:'slider-',// min item width / height\nminWidth:30,minHeight:30,// padding around item text\ntextPadX:40,// arrow offset off right edge\narrowOffsetX:4,railRadius:2,railWidth:5,railBorder:4,railBorderWidth:1,railBorderColor:'#bec8d9',railBgColor:'#f8fafc',// The distance of the rail from the edge of the touchable area\n// Slightly less than the step inset because of the curved edges\n// of the rail\nrailInset:8,// The distance from the extremal tick marks to the edge of the\n// touchable area. This is basically the same as the grip radius,\n// but for other styles it wouldn't really need to be.\nstepInset:10,gripRadius:10,gripWidth:20,gripHeight:20,gripBorder:20,gripBorderWidth:1,gripBorderColor:'#bec8d9',gripBgColor:'#f6f8fa',gripBgActiveColor:'#dbdde0',labelPadding:8,labelOffset:0,tickWidth:1,tickColor:'#333',tickOffset:25,tickLength:7,minorTickOffset:25,minorTickColor:'#333',minorTickLength:4,// Extra space below the current value label:\ncurrentValuePadding:8,currentValueInset:0};},{}],384:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var handleArrayContainerDefaults=_dereq_('../../plots/array_container_defaults');var attributes=_dereq_('./attributes');var constants=_dereq_('./constants');var name=constants.name;var stepAttrs=attributes.steps;module.exports=function slidersDefaults(layoutIn,layoutOut){handleArrayContainerDefaults(layoutIn,layoutOut,{name:name,handleItemDefaults:sliderDefaults});};function sliderDefaults(sliderIn,sliderOut,layoutOut){function coerce(attr,dflt){return Lib.coerce(sliderIn,sliderOut,attributes,attr,dflt);}var steps=handleArrayContainerDefaults(sliderIn,sliderOut,{name:'steps',handleItemDefaults:stepDefaults});var stepCount=0;for(var i=0;i<steps.length;i++){if(steps[i].visible)stepCount++;}var visible;// If it has fewer than two options, it's not really a slider\nif(stepCount<2)visible=sliderOut.visible=false;else visible=coerce('visible');if(!visible)return;sliderOut._stepCount=stepCount;var visSteps=sliderOut._visibleSteps=Lib.filterVisible(steps);var active=coerce('active');if(!(steps[active]||{}).visible)sliderOut.active=visSteps[0]._index;coerce('x');coerce('y');Lib.noneOrAll(sliderIn,sliderOut,['x','y']);coerce('xanchor');coerce('yanchor');coerce('len');coerce('lenmode');coerce('pad.t');coerce('pad.r');coerce('pad.b');coerce('pad.l');Lib.coerceFont(coerce,'font',layoutOut.font);var currentValueIsVisible=coerce('currentvalue.visible');if(currentValueIsVisible){coerce('currentvalue.xanchor');coerce('currentvalue.prefix');coerce('currentvalue.suffix');coerce('currentvalue.offset');Lib.coerceFont(coerce,'currentvalue.font',sliderOut.font);}coerce('transition.duration');coerce('transition.easing');coerce('bgcolor');coerce('activebgcolor');coerce('bordercolor');coerce('borderwidth');coerce('ticklen');coerce('tickwidth');coerce('tickcolor');coerce('minorticklen');}function stepDefaults(valueIn,valueOut){function coerce(attr,dflt){return Lib.coerce(valueIn,valueOut,stepAttrs,attr,dflt);}var visible;if(valueIn.method!=='skip'&&!Array.isArray(valueIn.args)){visible=valueOut.visible=false;}else visible=coerce('visible');if(visible){coerce('method');coerce('args');var label=coerce('label','step-'+valueOut._index);coerce('value',label);coerce('execute');}}},{\"../../lib\":423,\"../../plots/array_container_defaults\":465,\"./attributes\":382,\"./constants\":383}],385:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Plots=_dereq_('../../plots/plots');var Color=_dereq_('../color');var Drawing=_dereq_('../drawing');var Lib=_dereq_('../../lib');var svgTextUtils=_dereq_('../../lib/svg_text_utils');var arrayEditor=_dereq_('../../plot_api/plot_template').arrayEditor;var constants=_dereq_('./constants');var alignmentConstants=_dereq_('../../constants/alignment');var LINE_SPACING=alignmentConstants.LINE_SPACING;var FROM_TL=alignmentConstants.FROM_TL;var FROM_BR=alignmentConstants.FROM_BR;module.exports=function draw(gd){var fullLayout=gd._fullLayout;var sliderData=makeSliderData(fullLayout,gd);// draw a container for *all* sliders:\nvar sliders=fullLayout._infolayer.selectAll('g.'+constants.containerClassName).data(sliderData.length>0?[0]:[]);sliders.enter().append('g').classed(constants.containerClassName,true).style('cursor','ew-resize');function clearSlider(sliderOpts){if(sliderOpts._commandObserver){sliderOpts._commandObserver.remove();delete sliderOpts._commandObserver;}// Most components don't need to explicitly remove autoMargin, because\n// marginPushers does this - but slider updates don't go through\n// a full replot so we need to explicitly remove it.\nPlots.autoMargin(gd,autoMarginId(sliderOpts));}sliders.exit().each(function(){d3.select(this).selectAll('g.'+constants.groupClassName).each(clearSlider);}).remove();// Return early if no menus visible:\nif(sliderData.length===0)return;var sliderGroups=sliders.selectAll('g.'+constants.groupClassName).data(sliderData,keyFunction);sliderGroups.enter().append('g').classed(constants.groupClassName,true);sliderGroups.exit().each(clearSlider).remove();// Find the dimensions of the sliders:\nfor(var i=0;i<sliderData.length;i++){var sliderOpts=sliderData[i];findDimensions(gd,sliderOpts);}sliderGroups.each(function(sliderOpts){var gSlider=d3.select(this);computeLabelSteps(sliderOpts);Plots.manageCommandObserver(gd,sliderOpts,sliderOpts._visibleSteps,function(data){// NB: Same as below. This is *not* always the same as sliderOpts since\n// if a new set of steps comes in, the reference in this callback would\n// be invalid. We need to refetch it from the slider group, which is\n// the join data that creates this slider. So if this slider still exists,\n// the group should be valid, *to the best of my knowledge.* If not,\n// we'd have to look it up by d3 data join index/key.\nvar opts=gSlider.data()[0];if(opts.active===data.index)return;if(opts._dragging)return;setActive(gd,gSlider,opts,data.index,false,true);});drawSlider(gd,d3.select(this),sliderOpts);});};function autoMarginId(sliderOpts){return constants.autoMarginIdRoot+sliderOpts._index;}// This really only just filters by visibility:\nfunction makeSliderData(fullLayout,gd){var contOpts=fullLayout[constants.name];var sliderData=[];for(var i=0;i<contOpts.length;i++){var item=contOpts[i];if(!item.visible)continue;item._gd=gd;sliderData.push(item);}return sliderData;}// This is set in the defaults step:\nfunction keyFunction(opts){return opts._index;}// Compute the dimensions (mutates sliderOpts):\nfunction findDimensions(gd,sliderOpts){var sliderLabels=Drawing.tester.selectAll('g.'+constants.labelGroupClass).data(sliderOpts._visibleSteps);sliderLabels.enter().append('g').classed(constants.labelGroupClass,true);// loop over fake buttons to find width / height\nvar maxLabelWidth=0;var labelHeight=0;sliderLabels.each(function(stepOpts){var labelGroup=d3.select(this);var text=drawLabel(labelGroup,{step:stepOpts},sliderOpts);var textNode=text.node();if(textNode){var bBox=Drawing.bBox(textNode);labelHeight=Math.max(labelHeight,bBox.height);maxLabelWidth=Math.max(maxLabelWidth,bBox.width);}});sliderLabels.remove();var dims=sliderOpts._dims={};dims.inputAreaWidth=Math.max(constants.railWidth,constants.gripHeight);// calculate some overall dimensions - some of these are needed for\n// calculating the currentValue dimensions\nvar graphSize=gd._fullLayout._size;dims.lx=graphSize.l+graphSize.w*sliderOpts.x;dims.ly=graphSize.t+graphSize.h*(1-sliderOpts.y);if(sliderOpts.lenmode==='fraction'){// fraction:\ndims.outerLength=Math.round(graphSize.w*sliderOpts.len);}else{// pixels:\ndims.outerLength=sliderOpts.len;}// The length of the rail, *excluding* padding on either end:\ndims.inputAreaStart=0;dims.inputAreaLength=Math.round(dims.outerLength-sliderOpts.pad.l-sliderOpts.pad.r);var textableInputLength=dims.inputAreaLength-2*constants.stepInset;var availableSpacePerLabel=textableInputLength/(sliderOpts._stepCount-1);var computedSpacePerLabel=maxLabelWidth+constants.labelPadding;dims.labelStride=Math.max(1,Math.ceil(computedSpacePerLabel/availableSpacePerLabel));dims.labelHeight=labelHeight;// loop over all possible values for currentValue to find the\n// area we need for it\ndims.currentValueMaxWidth=0;dims.currentValueHeight=0;dims.currentValueTotalHeight=0;dims.currentValueMaxLines=1;if(sliderOpts.currentvalue.visible){// Get the dimensions of the current value label:\nvar dummyGroup=Drawing.tester.append('g');sliderLabels.each(function(stepOpts){var curValPrefix=drawCurrentValue(dummyGroup,sliderOpts,stepOpts.label);var curValSize=curValPrefix.node()&&Drawing.bBox(curValPrefix.node())||{width:0,height:0};var lines=svgTextUtils.lineCount(curValPrefix);dims.currentValueMaxWidth=Math.max(dims.currentValueMaxWidth,Math.ceil(curValSize.width));dims.currentValueHeight=Math.max(dims.currentValueHeight,Math.ceil(curValSize.height));dims.currentValueMaxLines=Math.max(dims.currentValueMaxLines,lines);});dims.currentValueTotalHeight=dims.currentValueHeight+sliderOpts.currentvalue.offset;dummyGroup.remove();}dims.height=dims.currentValueTotalHeight+constants.tickOffset+sliderOpts.ticklen+constants.labelOffset+dims.labelHeight+sliderOpts.pad.t+sliderOpts.pad.b;var xanchor='left';if(Lib.isRightAnchor(sliderOpts)){dims.lx-=dims.outerLength;xanchor='right';}if(Lib.isCenterAnchor(sliderOpts)){dims.lx-=dims.outerLength/2;xanchor='center';}var yanchor='top';if(Lib.isBottomAnchor(sliderOpts)){dims.ly-=dims.height;yanchor='bottom';}if(Lib.isMiddleAnchor(sliderOpts)){dims.ly-=dims.height/2;yanchor='middle';}dims.outerLength=Math.ceil(dims.outerLength);dims.height=Math.ceil(dims.height);dims.lx=Math.round(dims.lx);dims.ly=Math.round(dims.ly);var marginOpts={y:sliderOpts.y,b:dims.height*FROM_BR[yanchor],t:dims.height*FROM_TL[yanchor]};if(sliderOpts.lenmode==='fraction'){marginOpts.l=0;marginOpts.xl=sliderOpts.x-sliderOpts.len*FROM_TL[xanchor];marginOpts.r=0;marginOpts.xr=sliderOpts.x+sliderOpts.len*FROM_BR[xanchor];}else{marginOpts.x=sliderOpts.x;marginOpts.l=dims.outerLength*FROM_TL[xanchor];marginOpts.r=dims.outerLength*FROM_BR[xanchor];}Plots.autoMargin(gd,autoMarginId(sliderOpts),marginOpts);}function drawSlider(gd,sliderGroup,sliderOpts){// This is related to the other long notes in this file regarding what happens\n// when slider steps disappear. This particular fix handles what happens when\n// the *current* slider step is removed. The drawing functions will error out\n// when they fail to find it, so the fix for now is that it will just draw the\n// slider in the first position but will not execute the command.\nif(!(sliderOpts.steps[sliderOpts.active]||{}).visible){sliderOpts.active=sliderOpts._visibleSteps[0]._index;}// These are carefully ordered for proper z-ordering:\nsliderGroup.call(drawCurrentValue,sliderOpts).call(drawRail,sliderOpts).call(drawLabelGroup,sliderOpts).call(drawTicks,sliderOpts).call(drawTouchRect,gd,sliderOpts).call(drawGrip,gd,sliderOpts);var dims=sliderOpts._dims;// Position the rectangle:\nDrawing.setTranslate(sliderGroup,dims.lx+sliderOpts.pad.l,dims.ly+sliderOpts.pad.t);sliderGroup.call(setGripPosition,sliderOpts,false);sliderGroup.call(drawCurrentValue,sliderOpts);}function drawCurrentValue(sliderGroup,sliderOpts,valueOverride){if(!sliderOpts.currentvalue.visible)return;var dims=sliderOpts._dims;var x0,textAnchor;switch(sliderOpts.currentvalue.xanchor){case'right':// This is anchored left and adjusted by the width of the longest label\n// so that the prefix doesn't move. The goal of this is to emphasize\n// what's actually changing and make the update less distracting.\nx0=dims.inputAreaLength-constants.currentValueInset-dims.currentValueMaxWidth;textAnchor='left';break;case'center':x0=dims.inputAreaLength*0.5;textAnchor='middle';break;default:x0=constants.currentValueInset;textAnchor='left';}var text=Lib.ensureSingle(sliderGroup,'text',constants.labelClass,function(s){s.classed('user-select-none',true).attr({'text-anchor':textAnchor,'data-notex':1});});var str=sliderOpts.currentvalue.prefix?sliderOpts.currentvalue.prefix:'';if(typeof valueOverride==='string'){str+=valueOverride;}else{var curVal=sliderOpts.steps[sliderOpts.active].label;str+=curVal;}if(sliderOpts.currentvalue.suffix){str+=sliderOpts.currentvalue.suffix;}text.call(Drawing.font,sliderOpts.currentvalue.font).text(str).call(svgTextUtils.convertToTspans,sliderOpts._gd);var lines=svgTextUtils.lineCount(text);var y0=(dims.currentValueMaxLines+1-lines)*sliderOpts.currentvalue.font.size*LINE_SPACING;svgTextUtils.positionText(text,x0,y0);return text;}function drawGrip(sliderGroup,gd,sliderOpts){var grip=Lib.ensureSingle(sliderGroup,'rect',constants.gripRectClass,function(s){s.call(attachGripEvents,gd,sliderGroup,sliderOpts).style('pointer-events','all');});grip.attr({width:constants.gripWidth,height:constants.gripHeight,rx:constants.gripRadius,ry:constants.gripRadius}).call(Color.stroke,sliderOpts.bordercolor).call(Color.fill,sliderOpts.bgcolor).style('stroke-width',sliderOpts.borderwidth+'px');}function drawLabel(item,data,sliderOpts){var text=Lib.ensureSingle(item,'text',constants.labelClass,function(s){s.classed('user-select-none',true).attr({'text-anchor':'middle','data-notex':1});});text.call(Drawing.font,sliderOpts.font).text(data.step.label).call(svgTextUtils.convertToTspans,sliderOpts._gd);return text;}function drawLabelGroup(sliderGroup,sliderOpts){var labels=Lib.ensureSingle(sliderGroup,'g',constants.labelsClass);var dims=sliderOpts._dims;var labelItems=labels.selectAll('g.'+constants.labelGroupClass).data(dims.labelSteps);labelItems.enter().append('g').classed(constants.labelGroupClass,true);labelItems.exit().remove();labelItems.each(function(d){var item=d3.select(this);item.call(drawLabel,d,sliderOpts);Drawing.setTranslate(item,normalizedValueToPosition(sliderOpts,d.fraction),constants.tickOffset+sliderOpts.ticklen+// position is the baseline of the top line of text only, even\n// if the label spans multiple lines\nsliderOpts.font.size*LINE_SPACING+constants.labelOffset+dims.currentValueTotalHeight);});}function handleInput(gd,sliderGroup,sliderOpts,normalizedPosition,doTransition){var quantizedPosition=Math.round(normalizedPosition*(sliderOpts._stepCount-1));var quantizedIndex=sliderOpts._visibleSteps[quantizedPosition]._index;if(quantizedIndex!==sliderOpts.active){setActive(gd,sliderGroup,sliderOpts,quantizedIndex,true,doTransition);}}function setActive(gd,sliderGroup,sliderOpts,index,doCallback,doTransition){var previousActive=sliderOpts.active;sliderOpts.active=index;// due to templating, it's possible this slider doesn't even exist yet\narrayEditor(gd.layout,constants.name,sliderOpts).applyUpdate('active',index);var step=sliderOpts.steps[sliderOpts.active];sliderGroup.call(setGripPosition,sliderOpts,doTransition);sliderGroup.call(drawCurrentValue,sliderOpts);gd.emit('plotly_sliderchange',{slider:sliderOpts,step:sliderOpts.steps[sliderOpts.active],interaction:doCallback,previousActive:previousActive});if(step&&step.method&&doCallback){if(sliderGroup._nextMethod){// If we've already queued up an update, just overwrite it with the most recent:\nsliderGroup._nextMethod.step=step;sliderGroup._nextMethod.doCallback=doCallback;sliderGroup._nextMethod.doTransition=doTransition;}else{sliderGroup._nextMethod={step:step,doCallback:doCallback,doTransition:doTransition};sliderGroup._nextMethodRaf=window.requestAnimationFrame(function(){var _step=sliderGroup._nextMethod.step;if(!_step.method)return;if(_step.execute){Plots.executeAPICommand(gd,_step.method,_step.args);}sliderGroup._nextMethod=null;sliderGroup._nextMethodRaf=null;});}}}function attachGripEvents(item,gd,sliderGroup){var node=sliderGroup.node();var $gd=d3.select(gd);// NB: This is *not* the same as sliderOpts itself! These callbacks\n// are in a closure so this array won't actually be correct if the\n// steps have changed since this was initialized. The sliderGroup,\n// however, has not changed since that *is* the slider, so it must\n// be present to receive mouse events.\nfunction getSliderOpts(){return sliderGroup.data()[0];}item.on('mousedown',function(){var sliderOpts=getSliderOpts();gd.emit('plotly_sliderstart',{slider:sliderOpts});var grip=sliderGroup.select('.'+constants.gripRectClass);d3.event.stopPropagation();d3.event.preventDefault();grip.call(Color.fill,sliderOpts.activebgcolor);var normalizedPosition=positionToNormalizedValue(sliderOpts,d3.mouse(node)[0]);handleInput(gd,sliderGroup,sliderOpts,normalizedPosition,true);sliderOpts._dragging=true;$gd.on('mousemove',function(){var sliderOpts=getSliderOpts();var normalizedPosition=positionToNormalizedValue(sliderOpts,d3.mouse(node)[0]);handleInput(gd,sliderGroup,sliderOpts,normalizedPosition,false);});$gd.on('mouseup',function(){var sliderOpts=getSliderOpts();sliderOpts._dragging=false;grip.call(Color.fill,sliderOpts.bgcolor);$gd.on('mouseup',null);$gd.on('mousemove',null);gd.emit('plotly_sliderend',{slider:sliderOpts,step:sliderOpts.steps[sliderOpts.active]});});});}function drawTicks(sliderGroup,sliderOpts){var tick=sliderGroup.selectAll('rect.'+constants.tickRectClass).data(sliderOpts._visibleSteps);var dims=sliderOpts._dims;tick.enter().append('rect').classed(constants.tickRectClass,true);tick.exit().remove();tick.attr({width:sliderOpts.tickwidth+'px','shape-rendering':'crispEdges'});tick.each(function(d,i){var isMajor=i%dims.labelStride===0;var item=d3.select(this);item.attr({height:isMajor?sliderOpts.ticklen:sliderOpts.minorticklen}).call(Color.fill,isMajor?sliderOpts.tickcolor:sliderOpts.tickcolor);Drawing.setTranslate(item,normalizedValueToPosition(sliderOpts,i/(sliderOpts._stepCount-1))-0.5*sliderOpts.tickwidth,(isMajor?constants.tickOffset:constants.minorTickOffset)+dims.currentValueTotalHeight);});}function computeLabelSteps(sliderOpts){var dims=sliderOpts._dims;dims.labelSteps=[];var nsteps=sliderOpts._stepCount;for(var i=0;i<nsteps;i+=dims.labelStride){dims.labelSteps.push({fraction:i/(nsteps-1),step:sliderOpts._visibleSteps[i]});}}function setGripPosition(sliderGroup,sliderOpts,doTransition){var grip=sliderGroup.select('rect.'+constants.gripRectClass);var quantizedIndex=0;for(var i=0;i<sliderOpts._stepCount;i++){if(sliderOpts._visibleSteps[i]._index===sliderOpts.active){quantizedIndex=i;break;}}var x=normalizedValueToPosition(sliderOpts,quantizedIndex/(sliderOpts._stepCount-1));// If this is true, then *this component* is already invoking its own command\n// and has triggered its own animation.\nif(sliderOpts._invokingCommand)return;var el=grip;if(doTransition&&sliderOpts.transition.duration>0){el=el.transition().duration(sliderOpts.transition.duration).ease(sliderOpts.transition.easing);}// Drawing.setTranslate doesn't work here becasue of the transition duck-typing.\n// It's also not necessary because there are no other transitions to preserve.\nel.attr('transform','translate('+(x-constants.gripWidth*0.5)+','+sliderOpts._dims.currentValueTotalHeight+')');}// Convert a number from [0-1] to a pixel position relative to the slider group container:\nfunction normalizedValueToPosition(sliderOpts,normalizedPosition){var dims=sliderOpts._dims;return dims.inputAreaStart+constants.stepInset+(dims.inputAreaLength-2*constants.stepInset)*Math.min(1,Math.max(0,normalizedPosition));}// Convert a position relative to the slider group to a nubmer in [0, 1]\nfunction positionToNormalizedValue(sliderOpts,position){var dims=sliderOpts._dims;return Math.min(1,Math.max(0,(position-constants.stepInset-dims.inputAreaStart)/(dims.inputAreaLength-2*constants.stepInset-2*dims.inputAreaStart)));}function drawTouchRect(sliderGroup,gd,sliderOpts){var dims=sliderOpts._dims;var rect=Lib.ensureSingle(sliderGroup,'rect',constants.railTouchRectClass,function(s){s.call(attachGripEvents,gd,sliderGroup,sliderOpts).style('pointer-events','all');});rect.attr({width:dims.inputAreaLength,height:Math.max(dims.inputAreaWidth,constants.tickOffset+sliderOpts.ticklen+dims.labelHeight)}).call(Color.fill,sliderOpts.bgcolor).attr('opacity',0);Drawing.setTranslate(rect,0,dims.currentValueTotalHeight);}function drawRail(sliderGroup,sliderOpts){var dims=sliderOpts._dims;var computedLength=dims.inputAreaLength-constants.railInset*2;var rect=Lib.ensureSingle(sliderGroup,'rect',constants.railRectClass);rect.attr({width:computedLength,height:constants.railWidth,rx:constants.railRadius,ry:constants.railRadius,'shape-rendering':'crispEdges'}).call(Color.stroke,sliderOpts.bordercolor).call(Color.fill,sliderOpts.bgcolor).style('stroke-width',sliderOpts.borderwidth+'px');Drawing.setTranslate(rect,constants.railInset,(dims.inputAreaWidth-constants.railWidth)*0.5+dims.currentValueTotalHeight);}},{\"../../constants/alignment\":394,\"../../lib\":423,\"../../lib/svg_text_utils\":446,\"../../plot_api/plot_template\":459,\"../../plots/plots\":513,\"../color\":299,\"../drawing\":320,\"./constants\":383,\"d3\":71}],386:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var constants=_dereq_('./constants');module.exports={moduleType:'component',name:constants.name,layoutAttributes:_dereq_('./attributes'),supplyLayoutDefaults:_dereq_('./defaults'),draw:_dereq_('./draw')};},{\"./attributes\":382,\"./constants\":383,\"./defaults\":384,\"./draw\":385}],387:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var isNumeric=_dereq_('fast-isnumeric');var Plots=_dereq_('../../plots/plots');var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var Drawing=_dereq_('../drawing');var Color=_dereq_('../color');var svgTextUtils=_dereq_('../../lib/svg_text_utils');var interactConstants=_dereq_('../../constants/interactions');module.exports={draw:draw};var numStripRE=/ [XY][0-9]* /;/**\n * Titles - (re)draw titles on the axes and plot:\n * @param {DOM element} gd - the graphDiv\n * @param {string} titleClass - the css class of this title\n * @param {object} options - how and what to draw\n *      propContainer - the layout object containing `title` and `titlefont`\n *          attributes that apply to this title\n *      propName - the full name of the title property (for Plotly.relayout)\n *      [traceIndex] - include only if this property applies to one trace\n *          (such as a colorbar title) - then editing pipes to Plotly.restyle\n *          instead of Plotly.relayout\n *      placeholder - placeholder text for an empty editable title\n *      [avoid] {object} - include if this title should move to avoid other elements\n *          selection - d3 selection of elements to avoid\n *          side - which direction to move if there is a conflict\n *          [offsetLeft] - if these elements are subject to a translation\n *              wrt the title element\n *          [offsetTop]\n *      attributes {object} - position and alignment attributes\n *          x - pixels\n *          y - pixels\n *          text-anchor - start|middle|end\n *      transform {object} - how to transform the title after positioning\n *          rotate - degrees\n *          offset - shift up/down in the rotated frame (unused?)\n *      containerGroup - if an svg <g> element already exists to hold this\n *          title, include here. Otherwise it will go in fullLayout._infolayer\n *\n *  @return {selection} d3 selection of title container group\n */function draw(gd,titleClass,options){var cont=options.propContainer;var prop=options.propName;var placeholder=options.placeholder;var traceIndex=options.traceIndex;var avoid=options.avoid||{};var attributes=options.attributes;var transform=options.transform;var group=options.containerGroup;var fullLayout=gd._fullLayout;var opacity=1;var isplaceholder=false;var title=cont.title;var txt=(title&&title.text?title.text:'').trim();var font=title&&title.font?title.font:{};var fontFamily=font.family;var fontSize=font.size;var fontColor=font.color;// only make this title editable if we positively identify its property\n// as one that has editing enabled.\nvar editAttr;if(prop==='title.text')editAttr='titleText';else if(prop.indexOf('axis')!==-1)editAttr='axisTitleText';else if(prop.indexOf('colorbar'!==-1))editAttr='colorbarTitleText';var editable=gd._context.edits[editAttr];if(txt==='')opacity=0;// look for placeholder text while stripping out numbers from eg X2, Y3\n// this is just for backward compatibility with the old version that had\n// \"Click to enter X2 title\" and may have gotten saved in some old plots,\n// we don't want this to show up when these are displayed.\nelse if(txt.replace(numStripRE,' % ')===placeholder.replace(numStripRE,' % ')){opacity=0.2;isplaceholder=true;if(!editable)txt='';}var elShouldExist=txt||editable;if(!group){group=Lib.ensureSingle(fullLayout._infolayer,'g','g-'+titleClass);}var el=group.selectAll('text').data(elShouldExist?[0]:[]);el.enter().append('text');el.text(txt)// this is hacky, but convertToTspans uses the class\n// to determine whether to rotate mathJax...\n// so we need to clear out any old class and put the\n// correct one (only relevant for colorbars, at least\n// for now) - ie don't use .classed\n.attr('class',titleClass);el.exit().remove();if(!elShouldExist)return group;function titleLayout(titleEl){Lib.syncOrAsync([drawTitle,scootTitle],titleEl);}function drawTitle(titleEl){var transformVal;if(transform){transformVal='';if(transform.rotate){transformVal+='rotate('+[transform.rotate,attributes.x,attributes.y]+')';}if(transform.offset){transformVal+='translate(0, '+transform.offset+')';}}else{transformVal=null;}titleEl.attr('transform',transformVal);titleEl.style({'font-family':fontFamily,'font-size':d3.round(fontSize,2)+'px',fill:Color.rgb(fontColor),opacity:opacity*Color.opacity(fontColor),'font-weight':Plots.fontWeight}).attr(attributes).call(svgTextUtils.convertToTspans,gd);return Plots.previousPromises(gd);}function scootTitle(titleElIn){var titleGroup=d3.select(titleElIn.node().parentNode);if(avoid&&avoid.selection&&avoid.side&&txt){titleGroup.attr('transform',null);// move toward avoid.side (= left, right, top, bottom) if needed\n// can include pad (pixels, default 2)\nvar shift=0;var backside={left:'right',right:'left',top:'bottom',bottom:'top'}[avoid.side];var shiftSign=['left','top'].indexOf(avoid.side)!==-1?-1:1;var pad=isNumeric(avoid.pad)?avoid.pad:2;var titlebb=Drawing.bBox(titleGroup.node());var paperbb={left:0,top:0,right:fullLayout.width,bottom:fullLayout.height};var maxshift=avoid.maxShift||(paperbb[avoid.side]-titlebb[avoid.side])*(avoid.side==='left'||avoid.side==='top'?-1:1);// Prevent the title going off the paper\nif(maxshift<0)shift=maxshift;else{// so we don't have to offset each avoided element,\n// give the title the opposite offset\nvar offsetLeft=avoid.offsetLeft||0;var offsetTop=avoid.offsetTop||0;titlebb.left-=offsetLeft;titlebb.right-=offsetLeft;titlebb.top-=offsetTop;titlebb.bottom-=offsetTop;// iterate over a set of elements (avoid.selection)\n// to avoid collisions with\navoid.selection.each(function(){var avoidbb=Drawing.bBox(this);if(Lib.bBoxIntersect(titlebb,avoidbb,pad)){shift=Math.max(shift,shiftSign*(avoidbb[avoid.side]-titlebb[backside])+pad);}});shift=Math.min(maxshift,shift);}if(shift>0||maxshift<0){var shiftTemplate={left:[-shift,0],right:[shift,0],top:[0,-shift],bottom:[0,shift]}[avoid.side];titleGroup.attr('transform','translate('+shiftTemplate+')');}}}el.call(titleLayout);function setPlaceholder(){opacity=0;isplaceholder=true;el.text(placeholder).on('mouseover.opacity',function(){d3.select(this).transition().duration(interactConstants.SHOW_PLACEHOLDER).style('opacity',1);}).on('mouseout.opacity',function(){d3.select(this).transition().duration(interactConstants.HIDE_PLACEHOLDER).style('opacity',0);});}if(editable){if(!txt)setPlaceholder();else el.on('.opacity',null);el.call(svgTextUtils.makeEditable,{gd:gd}).on('edit',function(text){if(traceIndex!==undefined){Registry.call('_guiRestyle',gd,prop,text,traceIndex);}else{Registry.call('_guiRelayout',gd,prop,text);}}).on('cancel',function(){this.text(this.attr('data-unformatted')).call(titleLayout);}).on('input',function(d){this.text(d||' ').call(svgTextUtils.positionText,attributes.x,attributes.y);});}el.classed('js-placeholder',isplaceholder);return group;}},{\"../../constants/interactions\":397,\"../../lib\":423,\"../../lib/svg_text_utils\":446,\"../../plots/plots\":513,\"../../registry\":521,\"../color\":299,\"../drawing\":320,\"d3\":71,\"fast-isnumeric\":80}],388:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var fontAttrs=_dereq_('../../plots/font_attributes');var colorAttrs=_dereq_('../color/attributes');var extendFlat=_dereq_('../../lib/extend').extendFlat;var overrideAll=_dereq_('../../plot_api/edit_types').overrideAll;var padAttrs=_dereq_('../../plots/pad_attributes');var templatedArray=_dereq_('../../plot_api/plot_template').templatedArray;var buttonsAttrs=templatedArray('button',{visible:{valType:'boolean'},method:{valType:'enumerated',values:['restyle','relayout','animate','update','skip'],dflt:'restyle'},args:{valType:'info_array',freeLength:true,items:[{valType:'any'},{valType:'any'},{valType:'any'}]},label:{valType:'string',dflt:''},execute:{valType:'boolean',dflt:true}});module.exports=overrideAll(templatedArray('updatemenu',{_arrayAttrRegexps:[/^updatemenus\\[(0|[1-9][0-9]+)\\]\\.buttons/],visible:{valType:'boolean'},type:{valType:'enumerated',values:['dropdown','buttons'],dflt:'dropdown'},direction:{valType:'enumerated',values:['left','right','up','down'],dflt:'down'},active:{valType:'integer',min:-1,dflt:0},showactive:{valType:'boolean',dflt:true},buttons:buttonsAttrs,x:{valType:'number',min:-2,max:3,dflt:-0.05},xanchor:{valType:'enumerated',values:['auto','left','center','right'],dflt:'right'},y:{valType:'number',min:-2,max:3,dflt:1},yanchor:{valType:'enumerated',values:['auto','top','middle','bottom'],dflt:'top'},pad:extendFlat(padAttrs({editType:'arraydraw'}),{}),font:fontAttrs({}),bgcolor:{valType:'color'},bordercolor:{valType:'color',dflt:colorAttrs.borderLine},borderwidth:{valType:'number',min:0,dflt:1,editType:'arraydraw'}}),'arraydraw','from-root');},{\"../../lib/extend\":416,\"../../plot_api/edit_types\":452,\"../../plot_api/plot_template\":459,\"../../plots/font_attributes\":496,\"../../plots/pad_attributes\":512,\"../color/attributes\":298}],389:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={// layout attribute name\nname:'updatemenus',// class names\ncontainerClassName:'updatemenu-container',headerGroupClassName:'updatemenu-header-group',headerClassName:'updatemenu-header',headerArrowClassName:'updatemenu-header-arrow',dropdownButtonGroupClassName:'updatemenu-dropdown-button-group',dropdownButtonClassName:'updatemenu-dropdown-button',buttonClassName:'updatemenu-button',itemRectClassName:'updatemenu-item-rect',itemTextClassName:'updatemenu-item-text',// DOM attribute name in button group keeping track\n// of active update menu\nmenuIndexAttrName:'updatemenu-active-index',// id root pass to Plots.autoMargin\nautoMarginIdRoot:'updatemenu-',// options when 'active: -1'\nblankHeaderOpts:{label:'  '},// min item width / height\nminWidth:30,minHeight:30,// padding around item text\ntextPadX:24,arrowPadX:16,// item rect radii\nrx:2,ry:2,// item  text x offset off left edge\ntextOffsetX:12,// item  text y offset (w.r.t. middle)\ntextOffsetY:3,// arrow offset off right edge\narrowOffsetX:4,// gap between header and buttons\ngapButtonHeader:5,// gap between between buttons\ngapButton:2,// color given to active buttons\nactiveColor:'#F4FAFF',// color given to hovered buttons\nhoverColor:'#F4FAFF',// symbol for menu open arrow\narrowSymbol:{left:'◄',right:'►',up:'▲',down:'▼'}};},{}],390:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var handleArrayContainerDefaults=_dereq_('../../plots/array_container_defaults');var attributes=_dereq_('./attributes');var constants=_dereq_('./constants');var name=constants.name;var buttonAttrs=attributes.buttons;module.exports=function updateMenusDefaults(layoutIn,layoutOut){var opts={name:name,handleItemDefaults:menuDefaults};handleArrayContainerDefaults(layoutIn,layoutOut,opts);};function menuDefaults(menuIn,menuOut,layoutOut){function coerce(attr,dflt){return Lib.coerce(menuIn,menuOut,attributes,attr,dflt);}var buttons=handleArrayContainerDefaults(menuIn,menuOut,{name:'buttons',handleItemDefaults:buttonDefaults});var visible=coerce('visible',buttons.length>0);if(!visible)return;coerce('active');coerce('direction');coerce('type');coerce('showactive');coerce('x');coerce('y');Lib.noneOrAll(menuIn,menuOut,['x','y']);coerce('xanchor');coerce('yanchor');coerce('pad.t');coerce('pad.r');coerce('pad.b');coerce('pad.l');Lib.coerceFont(coerce,'font',layoutOut.font);coerce('bgcolor',layoutOut.paper_bgcolor);coerce('bordercolor');coerce('borderwidth');}function buttonDefaults(buttonIn,buttonOut){function coerce(attr,dflt){return Lib.coerce(buttonIn,buttonOut,buttonAttrs,attr,dflt);}var visible=coerce('visible',buttonIn.method==='skip'||Array.isArray(buttonIn.args));if(visible){coerce('method');coerce('args');coerce('label');coerce('execute');}}},{\"../../lib\":423,\"../../plots/array_container_defaults\":465,\"./attributes\":388,\"./constants\":389}],391:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Plots=_dereq_('../../plots/plots');var Color=_dereq_('../color');var Drawing=_dereq_('../drawing');var Lib=_dereq_('../../lib');var svgTextUtils=_dereq_('../../lib/svg_text_utils');var arrayEditor=_dereq_('../../plot_api/plot_template').arrayEditor;var LINE_SPACING=_dereq_('../../constants/alignment').LINE_SPACING;var constants=_dereq_('./constants');var ScrollBox=_dereq_('./scrollbox');module.exports=function draw(gd){var fullLayout=gd._fullLayout;var menuData=Lib.filterVisible(fullLayout[constants.name]);/* Update menu data is bound to the header-group.\n     * The items in the header group are always present.\n     *\n     * Upon clicking on a header its corresponding button\n     * data is bound to the button-group.\n     *\n     * We draw all headers in one group before all buttons\n     * so that the buttons *always* appear above the headers.\n     *\n     * Note that only one set of buttons are visible at once.\n     *\n     * <g container />\n     *\n     *     <g header-group />\n     *         <g item header />\n     *         <text item header-arrow />\n     *     <g header-group />\n     *         <g item header />\n     *         <text item header-arrow />\n     *     ...\n     *\n     *     <g button-group />\n     *         <g item button />\n     *         <g item button />\n     *         ...\n     */function clearAutoMargin(menuOpts){Plots.autoMargin(gd,autoMarginId(menuOpts));}// draw update menu container\nvar menus=fullLayout._menulayer.selectAll('g.'+constants.containerClassName).data(menuData.length>0?[0]:[]);menus.enter().append('g').classed(constants.containerClassName,true).style('cursor','pointer');menus.exit().each(function(){// Most components don't need to explicitly remove autoMargin, because\n// marginPushers does this - but updatemenu updates don't go through\n// a full replot so we need to explicitly remove it.\n// This is for removing *all* updatemenus, removing individuals is\n// handled below, in headerGroups.exit\nd3.select(this).selectAll('g.'+constants.headerGroupClassName).each(clearAutoMargin);}).remove();// return early if no update menus are visible\nif(menuData.length===0)return;// join header group\nvar headerGroups=menus.selectAll('g.'+constants.headerGroupClassName).data(menuData,keyFunction);headerGroups.enter().append('g').classed(constants.headerGroupClassName,true);// draw dropdown button container\nvar gButton=Lib.ensureSingle(menus,'g',constants.dropdownButtonGroupClassName,function(s){s.style('pointer-events','all');});// find dimensions before plotting anything (this mutates menuOpts)\nfor(var i=0;i<menuData.length;i++){var menuOpts=menuData[i];findDimensions(gd,menuOpts);}// setup scrollbox\nvar scrollBoxId='updatemenus'+fullLayout._uid;var scrollBox=new ScrollBox(gd,gButton,scrollBoxId);// remove exiting header, remove dropped buttons and reset margins\nif(headerGroups.enter().size()){// make sure gButton is on top of all headers\ngButton.node().parentNode.appendChild(gButton.node());gButton.call(removeAllButtons);}headerGroups.exit().each(function(menuOpts){gButton.call(removeAllButtons);clearAutoMargin(menuOpts);}).remove();// draw headers!\nheaderGroups.each(function(menuOpts){var gHeader=d3.select(this);var _gButton=menuOpts.type==='dropdown'?gButton:null;Plots.manageCommandObserver(gd,menuOpts,menuOpts.buttons,function(data){setActive(gd,menuOpts,menuOpts.buttons[data.index],gHeader,_gButton,scrollBox,data.index,true);});if(menuOpts.type==='dropdown'){drawHeader(gd,gHeader,gButton,scrollBox,menuOpts);// if this menu is active, update the dropdown container\nif(isActive(gButton,menuOpts)){drawButtons(gd,gHeader,gButton,scrollBox,menuOpts);}}else{drawButtons(gd,gHeader,null,null,menuOpts);}});};// Note that '_index' is set at the default step,\n// it corresponds to the menu index in the user layout update menu container.\n// Because a menu can be set invisible,\n// this is a more 'consistent' field than the index in the menuData.\nfunction keyFunction(menuOpts){return menuOpts._index;}function isFolded(gButton){return+gButton.attr(constants.menuIndexAttrName)===-1;}function isActive(gButton,menuOpts){return+gButton.attr(constants.menuIndexAttrName)===menuOpts._index;}function setActive(gd,menuOpts,buttonOpts,gHeader,gButton,scrollBox,buttonIndex,isSilentUpdate){// update 'active' attribute in menuOpts\nmenuOpts.active=buttonIndex;// due to templating, it's possible this slider doesn't even exist yet\narrayEditor(gd.layout,constants.name,menuOpts).applyUpdate('active',buttonIndex);if(menuOpts.type==='buttons'){drawButtons(gd,gHeader,null,null,menuOpts);}else if(menuOpts.type==='dropdown'){// fold up buttons and redraw header\ngButton.attr(constants.menuIndexAttrName,'-1');drawHeader(gd,gHeader,gButton,scrollBox,menuOpts);if(!isSilentUpdate){drawButtons(gd,gHeader,gButton,scrollBox,menuOpts);}}}function drawHeader(gd,gHeader,gButton,scrollBox,menuOpts){var header=Lib.ensureSingle(gHeader,'g',constants.headerClassName,function(s){s.style('pointer-events','all');});var dims=menuOpts._dims;var active=menuOpts.active;var headerOpts=menuOpts.buttons[active]||constants.blankHeaderOpts;var posOpts={y:menuOpts.pad.t,yPad:0,x:menuOpts.pad.l,xPad:0,index:0};var positionOverrides={width:dims.headerWidth,height:dims.headerHeight};header.call(drawItem,menuOpts,headerOpts,gd).call(setItemPosition,menuOpts,posOpts,positionOverrides);// draw drop arrow at the right edge\nvar arrow=Lib.ensureSingle(gHeader,'text',constants.headerArrowClassName,function(s){s.classed('user-select-none',true).attr('text-anchor','end').call(Drawing.font,menuOpts.font).text(constants.arrowSymbol[menuOpts.direction]);});arrow.attr({x:dims.headerWidth-constants.arrowOffsetX+menuOpts.pad.l,y:dims.headerHeight/2+constants.textOffsetY+menuOpts.pad.t});header.on('click',function(){gButton.call(removeAllButtons,String(isActive(gButton,menuOpts)?-1:menuOpts._index));drawButtons(gd,gHeader,gButton,scrollBox,menuOpts);});header.on('mouseover',function(){header.call(styleOnMouseOver);});header.on('mouseout',function(){header.call(styleOnMouseOut,menuOpts);});// translate header group\nDrawing.setTranslate(gHeader,dims.lx,dims.ly);}function drawButtons(gd,gHeader,gButton,scrollBox,menuOpts){// If this is a set of buttons, set pointer events = all since we play\n// some minor games with which container is which in order to simplify\n// the drawing of *either* buttons or menus\nif(!gButton){gButton=gHeader;gButton.attr('pointer-events','all');}var buttonData=!isFolded(gButton)||menuOpts.type==='buttons'?menuOpts.buttons:[];var klass=menuOpts.type==='dropdown'?constants.dropdownButtonClassName:constants.buttonClassName;var buttons=gButton.selectAll('g.'+klass).data(Lib.filterVisible(buttonData));var enter=buttons.enter().append('g').classed(klass,true);var exit=buttons.exit();if(menuOpts.type==='dropdown'){enter.attr('opacity','0').transition().attr('opacity','1');exit.transition().attr('opacity','0').remove();}else{exit.remove();}var x0=0;var y0=0;var dims=menuOpts._dims;var isVertical=['up','down'].indexOf(menuOpts.direction)!==-1;if(menuOpts.type==='dropdown'){if(isVertical){y0=dims.headerHeight+constants.gapButtonHeader;}else{x0=dims.headerWidth+constants.gapButtonHeader;}}if(menuOpts.type==='dropdown'&&menuOpts.direction==='up'){y0=-constants.gapButtonHeader+constants.gapButton-dims.openHeight;}if(menuOpts.type==='dropdown'&&menuOpts.direction==='left'){x0=-constants.gapButtonHeader+constants.gapButton-dims.openWidth;}var posOpts={x:dims.lx+x0+menuOpts.pad.l,y:dims.ly+y0+menuOpts.pad.t,yPad:constants.gapButton,xPad:constants.gapButton,index:0};var scrollBoxPosition={l:posOpts.x+menuOpts.borderwidth,t:posOpts.y+menuOpts.borderwidth};buttons.each(function(buttonOpts,buttonIndex){var button=d3.select(this);button.call(drawItem,menuOpts,buttonOpts,gd).call(setItemPosition,menuOpts,posOpts);button.on('click',function(){// skip `dragend` events\nif(d3.event.defaultPrevented)return;setActive(gd,menuOpts,buttonOpts,gHeader,gButton,scrollBox,buttonIndex);if(buttonOpts.execute){Plots.executeAPICommand(gd,buttonOpts.method,buttonOpts.args);}gd.emit('plotly_buttonclicked',{menu:menuOpts,button:buttonOpts,active:menuOpts.active});});button.on('mouseover',function(){button.call(styleOnMouseOver);});button.on('mouseout',function(){button.call(styleOnMouseOut,menuOpts);buttons.call(styleButtons,menuOpts);});});buttons.call(styleButtons,menuOpts);if(isVertical){scrollBoxPosition.w=Math.max(dims.openWidth,dims.headerWidth);scrollBoxPosition.h=posOpts.y-scrollBoxPosition.t;}else{scrollBoxPosition.w=posOpts.x-scrollBoxPosition.l;scrollBoxPosition.h=Math.max(dims.openHeight,dims.headerHeight);}scrollBoxPosition.direction=menuOpts.direction;if(scrollBox){if(buttons.size()){drawScrollBox(gd,gHeader,gButton,scrollBox,menuOpts,scrollBoxPosition);}else{hideScrollBox(scrollBox);}}}function drawScrollBox(gd,gHeader,gButton,scrollBox,menuOpts,position){// enable the scrollbox\nvar direction=menuOpts.direction;var isVertical=direction==='up'||direction==='down';var dims=menuOpts._dims;var active=menuOpts.active;var translateX,translateY;var i;if(isVertical){translateY=0;for(i=0;i<active;i++){translateY+=dims.heights[i]+constants.gapButton;}}else{translateX=0;for(i=0;i<active;i++){translateX+=dims.widths[i]+constants.gapButton;}}scrollBox.enable(position,translateX,translateY);if(scrollBox.hbar){scrollBox.hbar.attr('opacity','0').transition().attr('opacity','1');}if(scrollBox.vbar){scrollBox.vbar.attr('opacity','0').transition().attr('opacity','1');}}function hideScrollBox(scrollBox){var hasHBar=!!scrollBox.hbar;var hasVBar=!!scrollBox.vbar;if(hasHBar){scrollBox.hbar.transition().attr('opacity','0').each('end',function(){hasHBar=false;if(!hasVBar)scrollBox.disable();});}if(hasVBar){scrollBox.vbar.transition().attr('opacity','0').each('end',function(){hasVBar=false;if(!hasHBar)scrollBox.disable();});}}function drawItem(item,menuOpts,itemOpts,gd){item.call(drawItemRect,menuOpts).call(drawItemText,menuOpts,itemOpts,gd);}function drawItemRect(item,menuOpts){var rect=Lib.ensureSingle(item,'rect',constants.itemRectClassName,function(s){s.attr({rx:constants.rx,ry:constants.ry,'shape-rendering':'crispEdges'});});rect.call(Color.stroke,menuOpts.bordercolor).call(Color.fill,menuOpts.bgcolor).style('stroke-width',menuOpts.borderwidth+'px');}function drawItemText(item,menuOpts,itemOpts,gd){var text=Lib.ensureSingle(item,'text',constants.itemTextClassName,function(s){s.classed('user-select-none',true).attr({'text-anchor':'start','data-notex':1});});text.call(Drawing.font,menuOpts.font).text(itemOpts.label).call(svgTextUtils.convertToTspans,gd);}function styleButtons(buttons,menuOpts){var active=menuOpts.active;buttons.each(function(buttonOpts,i){var button=d3.select(this);if(i===active&&menuOpts.showactive){button.select('rect.'+constants.itemRectClassName).call(Color.fill,constants.activeColor);}});}function styleOnMouseOver(item){item.select('rect.'+constants.itemRectClassName).call(Color.fill,constants.hoverColor);}function styleOnMouseOut(item,menuOpts){item.select('rect.'+constants.itemRectClassName).call(Color.fill,menuOpts.bgcolor);}// find item dimensions (this mutates menuOpts)\nfunction findDimensions(gd,menuOpts){var dims=menuOpts._dims={width1:0,height1:0,heights:[],widths:[],totalWidth:0,totalHeight:0,openWidth:0,openHeight:0,lx:0,ly:0};var fakeButtons=Drawing.tester.selectAll('g.'+constants.dropdownButtonClassName).data(Lib.filterVisible(menuOpts.buttons));fakeButtons.enter().append('g').classed(constants.dropdownButtonClassName,true);var isVertical=['up','down'].indexOf(menuOpts.direction)!==-1;// loop over fake buttons to find width / height\nfakeButtons.each(function(buttonOpts,i){var button=d3.select(this);button.call(drawItem,menuOpts,buttonOpts,gd);var text=button.select('.'+constants.itemTextClassName);// width is given by max width of all buttons\nvar tWidth=text.node()&&Drawing.bBox(text.node()).width;var wEff=Math.max(tWidth+constants.textPadX,constants.minWidth);// height is determined by item text\nvar tHeight=menuOpts.font.size*LINE_SPACING;var tLines=svgTextUtils.lineCount(text);var hEff=Math.max(tHeight*tLines,constants.minHeight)+constants.textOffsetY;hEff=Math.ceil(hEff);wEff=Math.ceil(wEff);// Store per-item sizes since a row of horizontal buttons, for example,\n// don't all need to be the same width:\ndims.widths[i]=wEff;dims.heights[i]=hEff;// Height and width of individual element:\ndims.height1=Math.max(dims.height1,hEff);dims.width1=Math.max(dims.width1,wEff);if(isVertical){dims.totalWidth=Math.max(dims.totalWidth,wEff);dims.openWidth=dims.totalWidth;dims.totalHeight+=hEff+constants.gapButton;dims.openHeight+=hEff+constants.gapButton;}else{dims.totalWidth+=wEff+constants.gapButton;dims.openWidth+=wEff+constants.gapButton;dims.totalHeight=Math.max(dims.totalHeight,hEff);dims.openHeight=dims.totalHeight;}});if(isVertical){dims.totalHeight-=constants.gapButton;}else{dims.totalWidth-=constants.gapButton;}dims.headerWidth=dims.width1+constants.arrowPadX;dims.headerHeight=dims.height1;if(menuOpts.type==='dropdown'){if(isVertical){dims.width1+=constants.arrowPadX;dims.totalHeight=dims.height1;}else{dims.totalWidth=dims.width1;}dims.totalWidth+=constants.arrowPadX;}fakeButtons.remove();var paddedWidth=dims.totalWidth+menuOpts.pad.l+menuOpts.pad.r;var paddedHeight=dims.totalHeight+menuOpts.pad.t+menuOpts.pad.b;var graphSize=gd._fullLayout._size;dims.lx=graphSize.l+graphSize.w*menuOpts.x;dims.ly=graphSize.t+graphSize.h*(1-menuOpts.y);var xanchor='left';if(Lib.isRightAnchor(menuOpts)){dims.lx-=paddedWidth;xanchor='right';}if(Lib.isCenterAnchor(menuOpts)){dims.lx-=paddedWidth/2;xanchor='center';}var yanchor='top';if(Lib.isBottomAnchor(menuOpts)){dims.ly-=paddedHeight;yanchor='bottom';}if(Lib.isMiddleAnchor(menuOpts)){dims.ly-=paddedHeight/2;yanchor='middle';}dims.totalWidth=Math.ceil(dims.totalWidth);dims.totalHeight=Math.ceil(dims.totalHeight);dims.lx=Math.round(dims.lx);dims.ly=Math.round(dims.ly);Plots.autoMargin(gd,autoMarginId(menuOpts),{x:menuOpts.x,y:menuOpts.y,l:paddedWidth*({right:1,center:0.5}[xanchor]||0),r:paddedWidth*({left:1,center:0.5}[xanchor]||0),b:paddedHeight*({top:1,middle:0.5}[yanchor]||0),t:paddedHeight*({bottom:1,middle:0.5}[yanchor]||0)});}function autoMarginId(menuOpts){return constants.autoMarginIdRoot+menuOpts._index;}// set item positions (mutates posOpts)\nfunction setItemPosition(item,menuOpts,posOpts,overrideOpts){overrideOpts=overrideOpts||{};var rect=item.select('.'+constants.itemRectClassName);var text=item.select('.'+constants.itemTextClassName);var borderWidth=menuOpts.borderwidth;var index=posOpts.index;var dims=menuOpts._dims;Drawing.setTranslate(item,borderWidth+posOpts.x,borderWidth+posOpts.y);var isVertical=['up','down'].indexOf(menuOpts.direction)!==-1;var finalHeight=overrideOpts.height||(isVertical?dims.heights[index]:dims.height1);rect.attr({x:0,y:0,width:overrideOpts.width||(isVertical?dims.width1:dims.widths[index]),height:finalHeight});var tHeight=menuOpts.font.size*LINE_SPACING;var tLines=svgTextUtils.lineCount(text);var spanOffset=(tLines-1)*tHeight/2;svgTextUtils.positionText(text,constants.textOffsetX,finalHeight/2-spanOffset+constants.textOffsetY);if(isVertical){posOpts.y+=dims.heights[index]+posOpts.yPad;}else{posOpts.x+=dims.widths[index]+posOpts.xPad;}posOpts.index++;}function removeAllButtons(gButton,newMenuIndexAttr){gButton.attr(constants.menuIndexAttrName,newMenuIndexAttr||'-1').selectAll('g.'+constants.dropdownButtonClassName).remove();}},{\"../../constants/alignment\":394,\"../../lib\":423,\"../../lib/svg_text_utils\":446,\"../../plot_api/plot_template\":459,\"../../plots/plots\":513,\"../color\":299,\"../drawing\":320,\"./constants\":389,\"./scrollbox\":393,\"d3\":71}],392:[function(_dereq_,module,exports){arguments[4][386][0].apply(exports,arguments);},{\"./attributes\":388,\"./constants\":389,\"./defaults\":390,\"./draw\":391,\"dup\":386}],393:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports=ScrollBox;var d3=_dereq_('d3');var Color=_dereq_('../color');var Drawing=_dereq_('../drawing');var Lib=_dereq_('../../lib');/**\n * Helper class to setup a scroll box\n *\n * @class\n * @param           gd          Plotly's graph div\n * @param           container   Container to be scroll-boxed (as a D3 selection)\n * @param {string}  id          Id for the clip path to implement the scroll box\n */function ScrollBox(gd,container,id){this.gd=gd;this.container=container;this.id=id;// See ScrollBox.prototype.enable for further definition\nthis.position=null;// scrollbox position\nthis.translateX=null;// scrollbox horizontal translation\nthis.translateY=null;// scrollbox vertical translation\nthis.hbar=null;// horizontal scrollbar D3 selection\nthis.vbar=null;// vertical scrollbar D3 selection\n// <rect> element to capture pointer events\nthis.bg=this.container.selectAll('rect.scrollbox-bg').data([0]);this.bg.exit().on('.drag',null).on('wheel',null).remove();this.bg.enter().append('rect').classed('scrollbox-bg',true).style('pointer-events','all').attr({opacity:0,x:0,y:0,width:0,height:0});}// scroll bar dimensions\nScrollBox.barWidth=2;ScrollBox.barLength=20;ScrollBox.barRadius=2;ScrollBox.barPad=1;ScrollBox.barColor='#808BA4';/**\n * If needed, setup a clip path and scrollbars\n *\n * @method\n * @param {Object}  position\n * @param {number}  position.l  Left side position (in pixels)\n * @param {number}  position.t  Top side (in pixels)\n * @param {number}  position.w  Width (in pixels)\n * @param {number}  position.h  Height (in pixels)\n * @param {string}  [position.direction='down']\n *                  Either 'down', 'left', 'right' or 'up'\n * @param {number}  [translateX=0]  Horizontal offset (in pixels)\n * @param {number}  [translateY=0]  Vertical offset (in pixels)\n */ScrollBox.prototype.enable=function enable(position,translateX,translateY){var fullLayout=this.gd._fullLayout;var fullWidth=fullLayout.width;var fullHeight=fullLayout.height;// compute position of scrollbox\nthis.position=position;var l=this.position.l;var w=this.position.w;var t=this.position.t;var h=this.position.h;var direction=this.position.direction;var isDown=direction==='down';var isLeft=direction==='left';var isRight=direction==='right';var isUp=direction==='up';var boxW=w;var boxH=h;var boxL,boxR;var boxT,boxB;if(!isDown&&!isLeft&&!isRight&&!isUp){this.position.direction='down';isDown=true;}var isVertical=isDown||isUp;if(isVertical){boxL=l;boxR=boxL+boxW;if(isDown){// anchor to top side\nboxT=t;boxB=Math.min(boxT+boxH,fullHeight);boxH=boxB-boxT;}else{// anchor to bottom side\nboxB=t+boxH;boxT=Math.max(boxB-boxH,0);boxH=boxB-boxT;}}else{boxT=t;boxB=boxT+boxH;if(isLeft){// anchor to right side\nboxR=l+boxW;boxL=Math.max(boxR-boxW,0);boxW=boxR-boxL;}else{// anchor to left side\nboxL=l;boxR=Math.min(boxL+boxW,fullWidth);boxW=boxR-boxL;}}this._box={l:boxL,t:boxT,w:boxW,h:boxH};// compute position of horizontal scroll bar\nvar needsHorizontalScrollBar=w>boxW;var hbarW=ScrollBox.barLength+2*ScrollBox.barPad;var hbarH=ScrollBox.barWidth+2*ScrollBox.barPad;// draw horizontal scrollbar on the bottom side\nvar hbarL=l;var hbarT=t+h;if(hbarT+hbarH>fullHeight)hbarT=fullHeight-hbarH;var hbar=this.container.selectAll('rect.scrollbar-horizontal').data(needsHorizontalScrollBar?[0]:[]);hbar.exit().on('.drag',null).remove();hbar.enter().append('rect').classed('scrollbar-horizontal',true).call(Color.fill,ScrollBox.barColor);if(needsHorizontalScrollBar){this.hbar=hbar.attr({'rx':ScrollBox.barRadius,'ry':ScrollBox.barRadius,'x':hbarL,'y':hbarT,'width':hbarW,'height':hbarH});// hbar center moves between hbarXMin and hbarXMin + hbarTranslateMax\nthis._hbarXMin=hbarL+hbarW/2;this._hbarTranslateMax=boxW-hbarW;}else{delete this.hbar;delete this._hbarXMin;delete this._hbarTranslateMax;}// compute position of vertical scroll bar\nvar needsVerticalScrollBar=h>boxH;var vbarW=ScrollBox.barWidth+2*ScrollBox.barPad;var vbarH=ScrollBox.barLength+2*ScrollBox.barPad;// draw vertical scrollbar on the right side\nvar vbarL=l+w;var vbarT=t;if(vbarL+vbarW>fullWidth)vbarL=fullWidth-vbarW;var vbar=this.container.selectAll('rect.scrollbar-vertical').data(needsVerticalScrollBar?[0]:[]);vbar.exit().on('.drag',null).remove();vbar.enter().append('rect').classed('scrollbar-vertical',true).call(Color.fill,ScrollBox.barColor);if(needsVerticalScrollBar){this.vbar=vbar.attr({'rx':ScrollBox.barRadius,'ry':ScrollBox.barRadius,'x':vbarL,'y':vbarT,'width':vbarW,'height':vbarH});// vbar center moves between vbarYMin and vbarYMin + vbarTranslateMax\nthis._vbarYMin=vbarT+vbarH/2;this._vbarTranslateMax=boxH-vbarH;}else{delete this.vbar;delete this._vbarYMin;delete this._vbarTranslateMax;}// setup a clip path (if scroll bars are needed)\nvar clipId=this.id;var clipL=boxL-0.5;var clipR=needsVerticalScrollBar?boxR+vbarW+0.5:boxR+0.5;var clipT=boxT-0.5;var clipB=needsHorizontalScrollBar?boxB+hbarH+0.5:boxB+0.5;var clipPath=fullLayout._topdefs.selectAll('#'+clipId).data(needsHorizontalScrollBar||needsVerticalScrollBar?[0]:[]);clipPath.exit().remove();clipPath.enter().append('clipPath').attr('id',clipId).append('rect');if(needsHorizontalScrollBar||needsVerticalScrollBar){this._clipRect=clipPath.select('rect').attr({x:Math.floor(clipL),y:Math.floor(clipT),width:Math.ceil(clipR)-Math.floor(clipL),height:Math.ceil(clipB)-Math.floor(clipT)});this.container.call(Drawing.setClipUrl,clipId,this.gd);this.bg.attr({x:l,y:t,width:w,height:h});}else{this.bg.attr({width:0,height:0});this.container.on('wheel',null).on('.drag',null).call(Drawing.setClipUrl,null);delete this._clipRect;}// set up drag listeners (if scroll bars are needed)\nif(needsHorizontalScrollBar||needsVerticalScrollBar){var onBoxDrag=d3.behavior.drag().on('dragstart',function(){d3.event.sourceEvent.preventDefault();}).on('drag',this._onBoxDrag.bind(this));this.container.on('wheel',null).on('wheel',this._onBoxWheel.bind(this)).on('.drag',null).call(onBoxDrag);var onBarDrag=d3.behavior.drag().on('dragstart',function(){d3.event.sourceEvent.preventDefault();d3.event.sourceEvent.stopPropagation();}).on('drag',this._onBarDrag.bind(this));if(needsHorizontalScrollBar){this.hbar.on('.drag',null).call(onBarDrag);}if(needsVerticalScrollBar){this.vbar.on('.drag',null).call(onBarDrag);}}// set scrollbox translation\nthis.setTranslate(translateX,translateY);};/**\n * If present, remove clip-path and scrollbars\n *\n * @method\n */ScrollBox.prototype.disable=function disable(){if(this.hbar||this.vbar){this.bg.attr({width:0,height:0});this.container.on('wheel',null).on('.drag',null).call(Drawing.setClipUrl,null);delete this._clipRect;}if(this.hbar){this.hbar.on('.drag',null);this.hbar.remove();delete this.hbar;delete this._hbarXMin;delete this._hbarTranslateMax;}if(this.vbar){this.vbar.on('.drag',null);this.vbar.remove();delete this.vbar;delete this._vbarYMin;delete this._vbarTranslateMax;}};/**\n * Handles scroll box drag events\n *\n * @method\n */ScrollBox.prototype._onBoxDrag=function onBarDrag(){var translateX=this.translateX;var translateY=this.translateY;if(this.hbar){translateX-=d3.event.dx;}if(this.vbar){translateY-=d3.event.dy;}this.setTranslate(translateX,translateY);};/**\n * Handles scroll box wheel events\n *\n * @method\n */ScrollBox.prototype._onBoxWheel=function onBarWheel(){var translateX=this.translateX;var translateY=this.translateY;if(this.hbar){translateX+=d3.event.deltaY;}if(this.vbar){translateY+=d3.event.deltaY;}this.setTranslate(translateX,translateY);};/**\n * Handles scroll bar drag events\n *\n * @method\n */ScrollBox.prototype._onBarDrag=function onBarDrag(){var translateX=this.translateX;var translateY=this.translateY;if(this.hbar){var xMin=translateX+this._hbarXMin;var xMax=xMin+this._hbarTranslateMax;var x=Lib.constrain(d3.event.x,xMin,xMax);var xf=(x-xMin)/(xMax-xMin);var translateXMax=this.position.w-this._box.w;translateX=xf*translateXMax;}if(this.vbar){var yMin=translateY+this._vbarYMin;var yMax=yMin+this._vbarTranslateMax;var y=Lib.constrain(d3.event.y,yMin,yMax);var yf=(y-yMin)/(yMax-yMin);var translateYMax=this.position.h-this._box.h;translateY=yf*translateYMax;}this.setTranslate(translateX,translateY);};/**\n * Set clip path and scroll bar translate transform\n *\n * @method\n * @param {number}  [translateX=0]  Horizontal offset (in pixels)\n * @param {number}  [translateY=0]  Vertical offset (in pixels)\n */ScrollBox.prototype.setTranslate=function setTranslate(translateX,translateY){// store translateX and translateY (needed by mouse event handlers)\nvar translateXMax=this.position.w-this._box.w;var translateYMax=this.position.h-this._box.h;translateX=Lib.constrain(translateX||0,0,translateXMax);translateY=Lib.constrain(translateY||0,0,translateYMax);this.translateX=translateX;this.translateY=translateY;this.container.call(Drawing.setTranslate,this._box.l-this.position.l-translateX,this._box.t-this.position.t-translateY);if(this._clipRect){this._clipRect.attr({x:Math.floor(this.position.l+translateX-0.5),y:Math.floor(this.position.t+translateY-0.5)});}if(this.hbar){var xf=translateX/translateXMax;this.hbar.call(Drawing.setTranslate,translateX+xf*this._hbarTranslateMax,translateY);}if(this.vbar){var yf=translateY/translateYMax;this.vbar.call(Drawing.setTranslate,translateX,translateY+yf*this._vbarTranslateMax);}};},{\"../../lib\":423,\"../color\":299,\"../drawing\":320,\"d3\":71}],394:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';// fraction of some size to get to a named position\nmodule.exports={// from bottom left: this is the origin of our paper-reference\n// positioning system\nFROM_BL:{left:0,center:0.5,right:1,bottom:0,middle:0.5,top:1},// from top left: this is the screen pixel positioning origin\nFROM_TL:{left:0,center:0.5,right:1,bottom:1,middle:0.5,top:0},// from bottom right: sometimes you just need the opposite of ^^\nFROM_BR:{left:1,center:0.5,right:0,bottom:0,middle:0.5,top:1},// multiple of fontSize to get the vertical offset between lines\nLINE_SPACING:1.3,// multiple of fontSize to shift from the baseline\n// to the cap (captical letter) line\n// (to use when we don't calculate this shift from Drawing.bBox)\n// This is an approximation since in reality cap height can differ\n// from font to font. However, according to Wikipedia\n//   an \"average\" font might have a cap height of 70% of the em\n// https://en.wikipedia.org/wiki/Em_(typography)#History\nCAP_SHIFT:0.70,// half the cap height (distance between baseline and cap line)\n// of an \"average\" font (for more info see above).\nMID_SHIFT:0.35,OPPOSITE_SIDE:{left:'right',right:'left',top:'bottom',bottom:'top'}};},{}],395:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={solid:[[],0],dot:[[0.5,1],200],dash:[[0.5,1],50],longdash:[[0.5,1],10],dashdot:[[0.5,0.625,0.875,1],50],longdashdot:[[0.5,0.7,0.8,1],10]};},{}],396:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={circle:'●','circle-open':'○',square:'■','square-open':'□',diamond:'◆','diamond-open':'◇',cross:'+',x:'❌'};},{}],397:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={/**\n     * Timing information for interactive elements\n     */SHOW_PLACEHOLDER:100,HIDE_PLACEHOLDER:1000,// ms between first mousedown and 2nd mouseup to constitute dblclick...\n// we don't seem to have access to the system setting\nDBLCLICKDELAY:300,// opacity dimming fraction for points that are not in selection\nDESELECTDIM:0.2};},{}],398:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={/**\n     * Standardize all missing data in calcdata to use undefined\n     * never null or NaN.\n     * That way we can use !==undefined, or !== BADNUM,\n     * to test for real data\n     */BADNUM:undefined,/*\n     * Limit certain operations to well below floating point max value\n     * to avoid glitches: Make sure that even when you multiply it by the\n     * number of pixels on a giant screen it still works\n     */FP_SAFE:Number.MAX_VALUE/10000,/*\n     * conversion of date units to milliseconds\n     * year and month constants are marked \"AVG\"\n     * to remind us that not all years and months\n     * have the same length\n     */ONEAVGYEAR:31557600000,// 365.25 days\nONEAVGMONTH:2629800000,// 1/12 of ONEAVGYEAR\nONEDAY:86400000,ONEHOUR:3600000,ONEMIN:60000,ONESEC:1000,/*\n     * For fast conversion btwn world calendars and epoch ms, the Julian Day Number\n     * of the unix epoch. From calendars.instance().newDate(1970, 1, 1).toJD()\n     */EPOCHJD:2440587.5,/*\n     * Are two values nearly equal? Compare to 1PPM\n     */ALMOST_EQUAL:1-1e-6,/*\n     * If we're asked to clip a non-positive log value, how far off-screen\n     * do we put it?\n     */LOG_CLIP:10,/*\n     * not a number, but for displaying numbers: the \"minus sign\" symbol is\n     * wider than the regular ascii dash \"-\"\n     */MINUS_SIGN:\"\\u2212\"};},{}],399:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';exports.xmlns='http://www.w3.org/2000/xmlns/';exports.svg='http://www.w3.org/2000/svg';exports.xlink='http://www.w3.org/1999/xlink';// the 'old' d3 quirk got fix in v3.5.7\n// https://github.com/mbostock/d3/commit/a6f66e9dd37f764403fc7c1f26be09ab4af24fed\nexports.svgAttrs={xmlns:exports.svg,'xmlns:xlink':exports.xlink};},{}],400:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';// package version injected by `npm run preprocess`\nexports.version='1.43.2';// inject promise polyfill\n_dereq_('es6-promise').polyfill();// inject plot css\n_dereq_('../build/plotcss');// inject default MathJax config\n_dereq_('./fonts/mathjax_config')();// include registry module and expose register method\nvar Registry=_dereq_('./registry');var register=exports.register=Registry.register;// expose plot api methods\nvar plotApi=_dereq_('./plot_api');var methodNames=Object.keys(plotApi);for(var i=0;i<methodNames.length;i++){var name=methodNames[i];// _ -> private API methods, but still registered for internal use\nif(name.charAt(0)!=='_')exports[name]=plotApi[name];register({moduleType:'apiMethod',name:name,fn:plotApi[name]});}// scatter is the only trace included by default\nregister(_dereq_('./traces/scatter'));// register all registrable components modules\nregister([_dereq_('./components/fx'),_dereq_('./components/legend'),_dereq_('./components/annotations'),_dereq_('./components/annotations3d'),_dereq_('./components/shapes'),_dereq_('./components/images'),_dereq_('./components/updatemenus'),_dereq_('./components/sliders'),_dereq_('./components/rangeslider'),_dereq_('./components/rangeselector'),_dereq_('./components/grid'),_dereq_('./components/errorbars'),_dereq_('./components/colorscale')]);// locales en and en-US are required for default behavior\nregister([_dereq_('./locale-en'),_dereq_('./locale-en-us')]);// plot icons\nexports.Icons=_dereq_('../build/ploticon');// unofficial 'beta' plot methods, use at your own risk\nexports.Plots=_dereq_('./plots/plots');exports.Fx=_dereq_('./components/fx');exports.Snapshot=_dereq_('./snapshot');exports.PlotSchema=_dereq_('./plot_api/plot_schema');exports.Queue=_dereq_('./lib/queue');// export d3 used in the bundle\nexports.d3=_dereq_('d3');},{\"../build/plotcss\":1,\"../build/ploticon\":2,\"./components/annotations\":292,\"./components/annotations3d\":297,\"./components/colorscale\":311,\"./components/errorbars\":326,\"./components/fx\":338,\"./components/grid\":342,\"./components/images\":347,\"./components/legend\":355,\"./components/rangeselector\":366,\"./components/rangeslider\":373,\"./components/shapes\":381,\"./components/sliders\":386,\"./components/updatemenus\":392,\"./fonts/mathjax_config\":401,\"./lib/queue\":437,\"./locale-en\":450,\"./locale-en-us\":449,\"./plot_api\":454,\"./plot_api/plot_schema\":458,\"./plots/plots\":513,\"./registry\":521,\"./snapshot\":526,\"./traces/scatter\":545,\"d3\":71,\"es6-promise\":78}],401:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/* global MathJax:false */module.exports=function(){if(typeof MathJax!=='undefined'){var globalConfig=(window.PlotlyConfig||{}).MathJaxConfig!=='local';if(globalConfig){MathJax.Hub.Config({messageStyle:'none',skipStartupTypeset:true,displayAlign:'left',tex2jax:{inlineMath:[['$','$'],['\\\\(','\\\\)']]}});MathJax.Hub.Configured();}}};},{}],402:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports=_dereq_('ndpack-image')(595,595,4,\"\");},{\"ndpack-image\":193}],403:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports=function(a){return!a&&a!==0?'':a.toString();};},{}],404:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\"use strict\";var vectorizeText=_dereq_(\"vectorize-text\");module.exports=getGlyph;var GLYPH_CACHE={};function getGlyph(symbol,font){var fontCache=GLYPH_CACHE[font];if(!fontCache){fontCache=GLYPH_CACHE[font]={};}if(symbol in fontCache){return fontCache[symbol];}var config={textAlign:\"center\",textBaseline:\"middle\",lineHeight:1.0,font:font,lineSpacing:1.25,styletags:{breaklines:true,bolds:true,italics:true,subscripts:true,superscripts:true}//Get line and triangle meshes for glyph\n};config.triangles=true;var triSymbol=vectorizeText(symbol,config);config.triangles=false;var lineSymbol=vectorizeText(symbol,config);//Calculate bounding box\nvar bounds=[[Infinity,Infinity],[-Infinity,-Infinity]];var n=lineSymbol.positions.length;for(var i=0;i<n;++i){var p=lineSymbol.positions[i];for(var j=0;j<2;++j){bounds[0][j]=Math.min(bounds[0][j],p[j]);bounds[1][j]=Math.max(bounds[1][j],p[j]);}}//Save cached symbol\nreturn fontCache[symbol]=[triSymbol,lineSymbol,bounds];}},{\"vectorize-text\":273}],405:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var createShaderWrapper=_dereq_('gl-shader');var glslify=_dereq_('glslify');var perspectiveVertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nattribute vec3 position;\\nattribute vec4 color;\\nattribute float pointsize;\\nattribute vec4 id;\\n\\nuniform vec4 highlightId;\\nuniform float highlightScale;\\nuniform mat4 model, view, projection;\\nuniform vec3 clipBounds[2];\\n\\nvarying vec4 interpColor;\\nvarying vec4 pickId;\\nvarying vec3 dataCoordinate;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], position)) {\\n\\n    gl_Position = vec4(0,0,0,0);\\n  } else {\\n    float scale = 1.0;\\n    if(distance(highlightId, id) < 0.0001) {\\n      scale = highlightScale;\\n    }\\n\\n    vec4 worldPosition = model * vec4(position, 1);\\n    vec4 viewPosition = view * worldPosition;\\n    viewPosition = viewPosition / viewPosition.w;\\n    vec4 clipPosition = projection * viewPosition;\\n\\n    gl_Position = clipPosition;\\n    gl_PointSize = pointsize;\\n    interpColor = color;\\n    pickId = id;\\n    dataCoordinate = position;\\n  }\\n}\"]);var orthographicVertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nattribute vec3 position;\\nattribute vec4 color;\\nattribute float pointsize;\\nattribute vec4 id;\\n\\nuniform mat4 model, view, projection;\\nuniform vec2 screenSize;\\nuniform vec3 clipBounds[2];\\nuniform float highlightScale, pixelRatio;\\nuniform vec4 highlightId;\\n\\nvarying vec4 interpColor;\\nvarying vec4 pickId;\\nvarying vec3 dataCoordinate;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], position)) {\\n\\n    gl_Position = vec4(0,0,0,0);\\n  } else {\\n    float scale = pixelRatio;\\n    if(distance(highlightId.bgr, id.bgr) < 0.001) {\\n      scale *= highlightScale;\\n    }\\n\\n    vec4 worldPosition = model * vec4(position, 1.0);\\n    vec4 viewPosition = view * worldPosition;\\n    vec4 clipPosition = projection * viewPosition;\\n    clipPosition /= clipPosition.w;\\n\\n    gl_Position = clipPosition;\\n    gl_PointSize = pointsize;\\n    interpColor = color;\\n    pickId = id;\\n    dataCoordinate = position;\\n  }\\n}\"]);var projectionVertSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nattribute vec3 position;\\nattribute vec4 color;\\nattribute vec2 glyph;\\nattribute vec4 id;\\n\\nuniform float highlightScale;\\nuniform vec4 highlightId;\\nuniform vec3 axes[2];\\nuniform mat4 model, view, projection;\\nuniform vec2 screenSize;\\nuniform vec3 clipBounds[2];\\nuniform float scale, pixelRatio;\\n\\nvarying vec4 interpColor;\\nvarying vec4 pickId;\\nvarying vec3 dataCoordinate;\\n\\nvoid main() {\\n  if (outOfRange(clipBounds[0], clipBounds[1], position)) {\\n\\n    gl_Position = vec4(0,0,0,0);\\n  } else {\\n    float lscale = pixelRatio * scale;\\n    if(distance(highlightId, id) < 0.0001) {\\n      lscale *= highlightScale;\\n    }\\n\\n    vec4 clipCenter   = projection * view * model * vec4(position, 1);\\n    vec3 dataPosition = position + 0.5*lscale*(axes[0] * glyph.x + axes[1] * glyph.y) * clipCenter.w * screenSize.y;\\n    vec4 clipPosition = projection * view * model * vec4(dataPosition, 1);\\n\\n    gl_Position = clipPosition;\\n    interpColor = color;\\n    pickId = id;\\n    dataCoordinate = dataPosition;\\n  }\\n}\\n\"]);var drawFragSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nuniform vec3 fragClipBounds[2];\\nuniform float opacity;\\nuniform int useSprite;\\nuniform sampler2D sprite;\\n\\nvarying vec4 interpColor;\\nvarying vec4 pickId;\\nvarying vec3 dataCoordinate;\\n\\nvoid main() {\\n  if (outOfRange(fragClipBounds[0], fragClipBounds[1], dataCoordinate)) discard;\\n\\n  gl_FragColor = interpColor * opacity;\\n\\n  vec4 smpColor = vec4(1.0);\\n  if( useSprite==1 ) {\\n    smpColor = texture2D(sprite, gl_PointCoord);\\n  }\\n  if(smpColor.a == 0.0){\\n    discard;\\n  }\\n  gl_FragColor = gl_FragColor * smpColor * vec4(vec3(1.0),opacity);\\n}\\n\"]);var pickFragSrc=glslify([\"precision mediump float;\\n#define GLSLIFY 1\\n\\nbool outOfRange(float a, float b, float p) {\\n  return ((p > max(a, b)) || \\n          (p < min(a, b)));\\n}\\n\\nbool outOfRange(vec2 a, vec2 b, vec2 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y));\\n}\\n\\nbool outOfRange(vec3 a, vec3 b, vec3 p) {\\n  return (outOfRange(a.x, b.x, p.x) ||\\n          outOfRange(a.y, b.y, p.y) ||\\n          outOfRange(a.z, b.z, p.z));\\n}\\n\\nbool outOfRange(vec4 a, vec4 b, vec4 p) {\\n  return outOfRange(a.xyz, b.xyz, p.xyz);\\n}\\n\\nuniform vec3 fragClipBounds[2];\\nuniform float pickGroup;\\n\\nvarying vec4 pickId;\\nvarying vec3 dataCoordinate;\\n\\nvoid main() {\\n  if (outOfRange(fragClipBounds[0], fragClipBounds[1], dataCoordinate)) discard;\\n\\n  gl_FragColor = vec4(pickGroup, pickId.bgr);\\n}\"]);var ATTRIBUTES=[{name:'position',type:'vec3'},{name:'color',type:'vec4'},{name:'pointsize',type:'float'},{name:'id',type:'vec4'}];var perspective={vertex:perspectiveVertSrc,fragment:drawFragSrc,attributes:ATTRIBUTES},ortho={vertex:orthographicVertSrc,fragment:drawFragSrc,attributes:ATTRIBUTES},project={vertex:projectionVertSrc,fragment:drawFragSrc,attributes:ATTRIBUTES},pickPerspective={vertex:perspectiveVertSrc,fragment:pickFragSrc,attributes:ATTRIBUTES},pickOrtho={vertex:orthographicVertSrc,fragment:pickFragSrc,attributes:ATTRIBUTES},pickProject={vertex:projectionVertSrc,fragment:pickFragSrc,attributes:ATTRIBUTES};function createShader(gl,src){var shader=createShaderWrapper(gl,src);var attr=shader.attributes;attr.position.location=0;attr.color.location=1;attr.pointsize.location=2;attr.id.location=3;return shader;}exports.createPerspective=function(gl){return createShader(gl,perspective);};exports.createOrtho=function(gl){return createShader(gl,ortho);};exports.createProject=function(gl){return createShader(gl,project);};exports.createPickPerspective=function(gl){return createShader(gl,pickPerspective);};exports.createPickOrtho=function(gl){return createShader(gl,pickOrtho);};exports.createPickProject=function(gl){return createShader(gl,pickProject);};},{\"gl-shader\":133,\"glslify\":162}],406:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isAllBlank=_dereq_('is-string-blank');var createBuffer=_dereq_('gl-buffer');var createVAO=_dereq_('gl-vao');var createTexture=_dereq_('gl-texture2d');var pool=_dereq_('typedarray-pool');var mat4mult=_dereq_('gl-mat4/multiply');var getExtension=_dereq_('gl-extension');var shaders=_dereq_('./lib/shaders');var getGlyph=_dereq_('./lib/glyphs');var getSimpleString=_dereq_('./lib/get-simple-string');var circleImage=_dereq_('./asset/sphere.js');var IDENTITY=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];module.exports=createPointCloud;function transformMat4(x,m){var x0=x[0];var x1=x[1];var x2=x[2];var x3=x[3];x[0]=m[0]*x0+m[4]*x1+m[8]*x2+m[12]*x3;x[1]=m[1]*x0+m[5]*x1+m[9]*x2+m[13]*x3;x[2]=m[2]*x0+m[6]*x1+m[10]*x2+m[14]*x3;x[3]=m[3]*x0+m[7]*x1+m[11]*x2+m[15]*x3;return x;}function project(p,v,m,x){transformMat4(x,x,m);transformMat4(x,x,v);return transformMat4(x,x,p);}function clampVec(v){var result=new Array(3);for(var i=0;i<3;++i){result[i]=Math.min(Math.max(v[i],-1e8),1e8);}return result;}function ScatterPlotPickResult(index,position){this.index=index;this.dataCoordinate=this.position=position;}var MAX_OPACITY=1;function fixOpacity(a){if(a===true)return MAX_OPACITY;if(a>MAX_OPACITY)return MAX_OPACITY;return a;}function PointCloud(gl,shader,orthoShader,projectShader,pointBuffer,colorBuffer,pointsizeBuffer,idBuffer,vao,sprite,pickPerspectiveShader,pickOrthoShader,pickProjectShader){this.gl=gl;this.pixelRatio=1;this.shader=shader;this.orthoShader=orthoShader;this.projectShader=projectShader;this.pointBuffer=pointBuffer;this.colorBuffer=colorBuffer;this.pointsizeBuffer=pointsizeBuffer;this.idBuffer=idBuffer;this.vao=vao;this.vertexCount=0;this.opacity=MAX_OPACITY;this.projectScale=[2.0/3.0,2.0/3.0,2.0/3.0];this.projectOpacity=[MAX_OPACITY,MAX_OPACITY,MAX_OPACITY];this.pickId=0;this.pickPerspectiveShader=pickPerspectiveShader;this.pickOrthoShader=pickOrthoShader;this.pickProjectShader=pickProjectShader;this.points=[];this._selectResult=new ScatterPlotPickResult(0,[0,0,0]);this.useOrtho=true;this.bounds=[[Infinity,Infinity,Infinity],[-Infinity,-Infinity,-Infinity]];//Axes projections\nthis.axesProject=[false,false,false];this.axesBounds=[[-Infinity,-Infinity,-Infinity],[Infinity,Infinity,Infinity]];this.highlightId=[1,1,1,1];this.highlightScale=2;this.clipBounds=[[-Infinity,-Infinity,-Infinity],[Infinity,Infinity,Infinity]];this.dirty=true;this.instancedArrays=getExtension(gl,'ANGLE_instanced_arrays');this.sprite=sprite;}var proto=PointCloud.prototype;proto.pickSlots=1;proto.setPickBase=function(pickBase){this.pickId=pickBase;};proto.isTransparent=function(){if(this.opacity<MAX_OPACITY){return true;}for(var i=0;i<3;++i){if(this.axesProject[i]&&this.projectOpacity[i]<MAX_OPACITY){return true;}}return false;};proto.isOpaque=function(){if(this.opacity>=MAX_OPACITY){return true;}for(var i=0;i<3;++i){if(this.axesProject[i]&&this.projectOpacity[i]>=MAX_OPACITY){return true;}}return false;};var VIEW_SHAPE=[0,0];var U_VEC=[0,0,0];var V_VEC=[0,0,0];var MU_VEC=[0,0,0,1];var MV_VEC=[0,0,0,1];var SCRATCH_MATRIX=IDENTITY.slice();var SCRATCH_VEC=[0,0,0];var CLIP_BOUNDS=[[0,0,0],[0,0,0]];function zeroVec(a){a[0]=a[1]=a[2]=0;return a;}function augment(hg,af){hg[0]=af[0];hg[1]=af[1];hg[2]=af[2];hg[3]=1;return hg;}function setComponent(out,v,i,x){out[0]=v[0];out[1]=v[1];out[2]=v[2];out[i]=x;return out;}function getClipBounds(bounds){var result=CLIP_BOUNDS;for(var i=0;i<2;++i){for(var j=0;j<3;++j){result[i][j]=Math.max(Math.min(bounds[i][j],1e8),-1e8);}}return result;}function drawProject(shader,points,camera){var axesProject=points.axesProject;var gl=points.gl;var uniforms=shader.uniforms;var model=camera.model||IDENTITY;var view=camera.view||IDENTITY;var projection=camera.projection||IDENTITY;var bounds=points.axesBounds;var clipBounds=getClipBounds(points.clipBounds);var cubeAxis;if(points.axes&&points.axes.lastCubeProps){cubeAxis=points.axes.lastCubeProps.axis;}else{cubeAxis=[1,1,1];}VIEW_SHAPE[0]=2.0/gl.drawingBufferWidth;VIEW_SHAPE[1]=2.0/gl.drawingBufferHeight;shader.bind();uniforms.view=view;uniforms.projection=projection;uniforms.screenSize=VIEW_SHAPE;uniforms.highlightId=points.highlightId;uniforms.highlightScale=points.highlightScale;uniforms.clipBounds=clipBounds;uniforms.pickGroup=points.pickId/255.0;uniforms.pixelRatio=points.pixelRatio;for(var i=0;i<3;++i){if(!axesProject[i]){continue;}uniforms.scale=points.projectScale[i];uniforms.opacity=points.projectOpacity[i];//Project model matrix\nvar pmodel=SCRATCH_MATRIX;for(var j=0;j<16;++j){pmodel[j]=0;}for(var j=0;j<4;++j){pmodel[5*j]=1;}pmodel[5*i]=0;if(cubeAxis[i]<0){pmodel[12+i]=bounds[0][i];}else{pmodel[12+i]=bounds[1][i];}mat4mult(pmodel,model,pmodel);uniforms.model=pmodel;//Compute initial axes\nvar u=(i+1)%3;var v=(i+2)%3;var du=zeroVec(U_VEC);var dv=zeroVec(V_VEC);du[u]=1;dv[v]=1;//Align orientation relative to viewer\nvar mdu=project(projection,view,model,augment(MU_VEC,du));var mdv=project(projection,view,model,augment(MV_VEC,dv));if(Math.abs(mdu[1])>Math.abs(mdv[1])){var tmp=mdu;mdu=mdv;mdv=tmp;tmp=du;du=dv;dv=tmp;var t=u;u=v;v=t;}if(mdu[0]<0){du[u]=-1;}if(mdv[1]>0){dv[v]=-1;}var su=0.0;var sv=0.0;for(var j=0;j<4;++j){su+=Math.pow(model[4*u+j],2);sv+=Math.pow(model[4*v+j],2);}du[u]/=Math.sqrt(su);dv[v]/=Math.sqrt(sv);uniforms.axes[0]=du;uniforms.axes[1]=dv;//Update fragment clip bounds\nuniforms.fragClipBounds[0]=setComponent(SCRATCH_VEC,clipBounds[0],i,-1e8);uniforms.fragClipBounds[1]=setComponent(SCRATCH_VEC,clipBounds[1],i,1e8);points.vao.bind();//Draw interior\npoints.vao.draw(gl.POINTS,points.vertexCount);points.vao.unbind();}}var NEG_INFINITY3=[-1e8,-1e8,-1e8];var POS_INFINITY3=[1e8,1e8,1e8];var CLIP_GROUP=[NEG_INFINITY3,POS_INFINITY3];function drawFull(shader,pshader,points,camera,transparent,forceDraw,useSprite){var gl=points.gl;if(transparent===points.projectOpacity<MAX_OPACITY||forceDraw){drawProject(pshader,points,camera);}if(transparent===points.opacity<MAX_OPACITY||forceDraw){shader.bind();var uniforms=shader.uniforms;uniforms.model=camera.model||IDENTITY;uniforms.view=camera.view||IDENTITY;uniforms.projection=camera.projection||IDENTITY;VIEW_SHAPE[0]=2.0/gl.drawingBufferWidth;VIEW_SHAPE[1]=2.0/gl.drawingBufferHeight;uniforms.screenSize=VIEW_SHAPE;uniforms.highlightId=points.highlightId;uniforms.highlightScale=points.highlightScale;uniforms.fragClipBounds=CLIP_GROUP;uniforms.clipBounds=points.axes.bounds;uniforms.opacity=points.opacity;uniforms.pickGroup=points.pickId/255.0;uniforms.pixelRatio=points.pixelRatio;uniforms.useSprite=useSprite;uniforms.sprite=points.sprite;points.vao.bind();//Draw interior\npoints.vao.draw(gl.POINTS,points.vertexCount);points.vao.unbind();}}proto.draw=function(camera){var shader=this.useOrtho?this.orthoShader:this.shader;drawFull(shader,this.projectShader,this,camera,false,false,this.useSprite);};proto.drawTransparent=function(camera){var shader=this.useOrtho?this.orthoShader:this.shader;drawFull(shader,this.projectShader,this,camera,true,false,this.useSprite);};proto.drawPick=function(camera){var shader=this.useOrtho?this.pickOrthoShader:this.pickPerspectiveShader;drawFull(shader,this.pickProjectShader,this,camera,true,true,this.useSprite);};proto.pick=function(selected){if(!selected){return null;}if(selected.id!==this.pickId){return null;}var x=selected.value[2]+(selected.value[1]<<8)+(selected.value[0]<<16);if(x>=this.pointCount||x<0){return null;}//Unpack result\nvar coord=this.points[x];var result=this._selectResult;result.index=x;for(var i=0;i<3;++i){result.position[i]=result.dataCoordinate[i]=coord[i];}return result;};proto.highlight=function(selection){if(!selection){this.highlightId=[1,1,1,1];}else{var pointId=selection.index;var a0=pointId&0xff;var a1=pointId>>8&0xff;var a2=pointId>>16&0xff;this.highlightId=[a0/255.0,a1/255.0,a2/255.0,0];}};proto.update=function(options){options=options||{};if('perspective'in options){this.useOrtho=!options.perspective;}if('orthographic'in options){this.useOrtho=!!options.orthographic;}if('project'in options){if(Array.isArray(options.project)){this.axesProject=options.project;}else{var v=!!options.project;this.axesProject=[v,v,v];}}if('projectScale'in options){if(Array.isArray(options.projectScale)){this.projectScale=options.projectScale.slice();}else{var s=+options.projectScale;this.projectScale=[s,s,s];}}if('projectOpacity'in options){if(Array.isArray(options.projectOpacity)){this.projectOpacity=options.projectOpacity.slice();}else{var s=+options.projectOpacity;this.projectOpacity=[s,s,s];}for(var i=0;i<3;++i){this.projectOpacity[i]=fixOpacity(this.projectOpacity[i]);}}if('opacity'in options){this.opacity=fixOpacity(options.opacity);}if('useSprite'in options){this.useSprite=!this.instancedArrays||!!options.useSprite;}//Set dirty flag\nthis.dirty=true;//Create new buffers\nvar points=options.position;//Bounds\nvar lowerBound=[Infinity,Infinity,Infinity];var upperBound=[-Infinity,-Infinity,-Infinity];//Unpack options\nvar colors=options.color;var sizes=options.size;//Picking geometry\nvar pickCounter=-1;//First do pass to compute buffer sizes\nvar vertexCount=0;var numPoints=0;if(points.length){//Count number of points and buffer size\nnumPoints=points.length;count_loop:for(var i=0;i<numPoints;++i){var x=points[i];for(var j=0;j<3;++j){if(isNaN(x[j])||!isFinite(x[j])){continue count_loop;}}vertexCount+=3;}}//Preallocate data\nvar positionArray=pool.mallocFloat(3*vertexCount);var colorArray=pool.mallocFloat(4*vertexCount);var pointsizeArray=pool.mallocFloat(vertexCount);var idArray=pool.mallocUint32(vertexCount);if(vertexCount>0){var color=[0,0,0,1];var isColorArray=Array.isArray(colors)&&Array.isArray(colors[0]);var offset=0;fill_loop:for(var i=0;i<numPoints;++i){//Increment pickCounter\npickCounter+=1;var x=points[i];for(var j=0;j<3;++j){if(isNaN(x[j])||!isFinite(x[j])){continue fill_loop;}upperBound[j]=Math.max(upperBound[j],x[j]);lowerBound[j]=Math.min(lowerBound[j],x[j]);}//Get color\nif(Array.isArray(colors)){var c;if(isColorArray){if(i<colors.length){c=colors[i];}else{c=[0,0,0,0];}}else{c=colors;}if(c.length===3){for(var j=0;j<3;++j){color[j]=c[j];}color[3]=1;}else if(c.length===4){for(var j=0;j<4;++j){color[j]=c[j];}}}else{color[0]=color[1]=color[2]=0;color[3]=1;}var size=0.5;if(Array.isArray(sizes)){if(i<sizes.length){size=+sizes[i];}else{size=12;}}else if(sizes){size=+sizes;}else if(this.useOrtho){size=12;}//Write out inner marker\nfor(var l=0;l<3;++l){positionArray[3*offset+l]=x[l];}for(var l=0;l<4;++l){colorArray[4*offset+l]=color[l];}pointsizeArray[offset]=size;idArray[offset]=pickCounter;offset+=1;}}//Update bounds\nthis.bounds=[lowerBound,upperBound];//Save points\nthis.points=points;//Save number of points\nthis.pointCount=points.length;//Update vertex counts\nthis.vertexCount=vertexCount;this.pointBuffer.update(positionArray);this.colorBuffer.update(colorArray);this.pointsizeBuffer.update(pointsizeArray);//this.idBuffer.update(new Uint32Array(idArray))\nthis.idBuffer.update(idArray);pool.free(positionArray);pool.free(colorArray);pool.free(pointsizeArray);pool.free(idArray);};proto.dispose=function(){//Shaders\nthis.shader.dispose();this.orthoShader.dispose();this.pickPerspectiveShader.dispose();this.pickOrthoShader.dispose();//Vertex array\nthis.vao.dispose();//Buffers\nthis.pointBuffer.dispose();this.colorBuffer.dispose();this.idBuffer.dispose();};function createPointCloud(options){var gl=options.gl;var shader=shaders.createPerspective(gl);var orthoShader=shaders.createOrtho(gl);var projectShader=shaders.createProject(gl);var pickPerspectiveShader=shaders.createPickPerspective(gl);var pickOrthoShader=shaders.createPickOrtho(gl);var pickProjectShader=shaders.createPickProject(gl);var pointBuffer=createBuffer(gl);var colorBuffer=createBuffer(gl);var pointsizeBuffer=createBuffer(gl);var idBuffer=createBuffer(gl);var vao=createVAO(gl,[{buffer:pointBuffer,size:3,type:gl.FLOAT},{buffer:colorBuffer,size:4,type:gl.FLOAT},{buffer:pointsizeBuffer,size:1,type:gl.FLOAT},{buffer:idBuffer,size:4,type:gl.UNSIGNED_BYTE,normalized:true}]);var sprite=createTexture(gl,circleImage);var pointCloud=new PointCloud(gl,shader,orthoShader,projectShader,pointBuffer,colorBuffer,pointsizeBuffer,idBuffer,vao,sprite,pickPerspectiveShader,pickOrthoShader,pickProjectShader);pointCloud.update(options);return pointCloud;}},{\"./asset/sphere.js\":402,\"./lib/get-simple-string\":403,\"./lib/glyphs\":404,\"./lib/shaders\":405,\"gl-buffer\":93,\"gl-extension\":98,\"gl-mat4/multiply\":113,\"gl-texture2d\":142,\"gl-vao\":146,\"is-string-blank\":174,\"typedarray-pool\":270}],407:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/**\n * Determine the position anchor property of x/y xanchor/yanchor components.\n *\n * - values < 1/3 align the low side at that fraction,\n * - values [1/3, 2/3] align the center at that fraction,\n * - values > 2/3 align the right at that fraction.\n */exports.isLeftAnchor=function isLeftAnchor(opts){return opts.xanchor==='left'||opts.xanchor==='auto'&&opts.x<=1/3;};exports.isCenterAnchor=function isCenterAnchor(opts){return opts.xanchor==='center'||opts.xanchor==='auto'&&opts.x>1/3&&opts.x<2/3;};exports.isRightAnchor=function isRightAnchor(opts){return opts.xanchor==='right'||opts.xanchor==='auto'&&opts.x>=2/3;};exports.isTopAnchor=function isTopAnchor(opts){return opts.yanchor==='top'||opts.yanchor==='auto'&&opts.y>=2/3;};exports.isMiddleAnchor=function isMiddleAnchor(opts){return opts.yanchor==='middle'||opts.yanchor==='auto'&&opts.y>1/3&&opts.y<2/3;};exports.isBottomAnchor=function isBottomAnchor(opts){return opts.yanchor==='bottom'||opts.yanchor==='auto'&&opts.y<=1/3;};},{}],408:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var modModule=_dereq_('./mod');var mod=modModule.mod;var modHalf=modModule.modHalf;var PI=Math.PI;var twoPI=2*PI;function deg2rad(deg){return deg/180*PI;}function rad2deg(rad){return rad/PI*180;}/**\n * is sector a full circle?\n * ... this comes up a lot in SVG path-drawing routines\n *\n * N.B. we consider all sectors that span more that 2pi 'full' circles\n *\n * @param {2-item array} aBnds : angular bounds in *radians*\n * @return {boolean}\n */function isFullCircle(aBnds){return Math.abs(aBnds[1]-aBnds[0])>twoPI-1e-15;}/**\n * angular delta between angle 'a' and 'b'\n * solution taken from: https://stackoverflow.com/a/2007279\n *\n * @param {number} a : first angle in *radians*\n * @param {number} b : second angle in *radians*\n * @return {number} angular delta in *radians*\n */function angleDelta(a,b){return modHalf(b-a,twoPI);}/**\n * angular distance between angle 'a' and 'b'\n *\n * @param {number} a : first angle in *radians*\n * @param {number} b : second angle in *radians*\n * @return {number} angular distance in *radians*\n */function angleDist(a,b){return Math.abs(angleDelta(a,b));}/**\n * is angle inside sector?\n *\n * @param {number} a : angle to test in *radians*\n * @param {2-item array} aBnds : sector's angular bounds in *radians*\n * @param {boolean}\n */function isAngleInsideSector(a,aBnds){if(isFullCircle(aBnds))return true;var s0,s1;if(aBnds[0]<aBnds[1]){s0=aBnds[0];s1=aBnds[1];}else{s0=aBnds[1];s1=aBnds[0];}s0=mod(s0,twoPI);s1=mod(s1,twoPI);if(s0>s1)s1+=twoPI;var a0=mod(a,twoPI);var a1=a0+twoPI;return a0>=s0&&a0<=s1||a1>=s0&&a1<=s1;}/**\n * is pt (r,a) inside sector?\n *\n * @param {number} r : pt's radial coordinate\n * @param {number} a : pt's angular coordinate in *radians*\n * @param {2-item array} rBnds : sector's radial bounds\n * @param {2-item array} aBnds : sector's angular bounds in *radians*\n * @return {boolean}\n */function isPtInsideSector(r,a,rBnds,aBnds){if(!isAngleInsideSector(a,aBnds))return false;var r0,r1;if(rBnds[0]<rBnds[1]){r0=rBnds[0];r1=rBnds[1];}else{r0=rBnds[1];r1=rBnds[0];}return r>=r0&&r<=r1;}// common to pathArc, pathSector and pathAnnulus\nfunction _path(r0,r1,a0,a1,cx,cy,isClosed){cx=cx||0;cy=cy||0;var isCircle=isFullCircle([a0,a1]);var aStart,aMid,aEnd;var rStart,rEnd;if(isCircle){aStart=0;aMid=PI;aEnd=twoPI;}else{if(a0<a1){aStart=a0;aEnd=a1;}else{aStart=a1;aEnd=a0;}}if(r0<r1){rStart=r0;rEnd=r1;}else{rStart=r1;rEnd=r0;}// N.B. svg coordinates here, where y increases downward\nfunction pt(r,a){return[r*Math.cos(a)+cx,cy-r*Math.sin(a)];}var largeArc=Math.abs(aEnd-aStart)<=PI?0:1;function arc(r,a,cw){return'A'+[r,r]+' '+[0,largeArc,cw]+' '+pt(r,a);}var p;if(isCircle){if(rStart===null){p='M'+pt(rEnd,aStart)+arc(rEnd,aMid,0)+arc(rEnd,aEnd,0)+'Z';}else{p='M'+pt(rStart,aStart)+arc(rStart,aMid,0)+arc(rStart,aEnd,0)+'Z'+'M'+pt(rEnd,aStart)+arc(rEnd,aMid,1)+arc(rEnd,aEnd,1)+'Z';}}else{if(rStart===null){p='M'+pt(rEnd,aStart)+arc(rEnd,aEnd,0);if(isClosed)p+='L0,0Z';}else{p='M'+pt(rStart,aStart)+'L'+pt(rEnd,aStart)+arc(rEnd,aEnd,0)+'L'+pt(rStart,aEnd)+arc(rStart,aStart,1)+'Z';}}return p;}/**\n * path an arc\n *\n * @param {number} r : radius\n * @param {number} a0 : first angular coordinate in *radians*\n * @param {number} a1 : second angular coordinate in *radians*\n * @param {number (optional)} cx : x coordinate of center\n * @param {number (optional)} cy : y coordinate of center\n * @return {string} svg path\n */function pathArc(r,a0,a1,cx,cy){return _path(null,r,a0,a1,cx,cy,0);}/**\n * path a sector\n *\n * @param {number} r : radius\n * @param {number} a0 : first angular coordinate in *radians*\n * @param {number} a1 : second angular coordinate in *radians*\n * @param {number (optional)} cx : x coordinate of center\n * @param {number (optional)} cy : y coordinate of center\n * @return {string} svg path\n */function pathSector(r,a0,a1,cx,cy){return _path(null,r,a0,a1,cx,cy,1);}/**\n * path an annulus\n *\n * @param {number} r0 : first radial coordinate\n * @param {number} r1 : second radial coordinate\n * @param {number} a0 : first angular coordinate in *radians*\n * @param {number} a1 : second angular coordinate in *radians*\n * @param {number (optional)} cx : x coordinate of center\n * @param {number (optional)} cy : y coordinate of center\n * @return {string} svg path\n */function pathAnnulus(r0,r1,a0,a1,cx,cy){return _path(r0,r1,a0,a1,cx,cy,1);}module.exports={deg2rad:deg2rad,rad2deg:rad2deg,angleDelta:angleDelta,angleDist:angleDist,isFullCircle:isFullCircle,isAngleInsideSector:isAngleInsideSector,isPtInsideSector:isPtInsideSector,pathArc:pathArc,pathSector:pathSector,pathAnnulus:pathAnnulus};},{\"./mod\":430}],409:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isArray=Array.isArray;// IE9 fallbacks\nvar ab=typeof ArrayBuffer==='undefined'||!ArrayBuffer.isView?{isView:function isView(){return false;}}:ArrayBuffer;var dv=typeof DataView==='undefined'?function(){}:DataView;function isTypedArray(a){return ab.isView(a)&&!(a instanceof dv);}exports.isTypedArray=isTypedArray;function isArrayOrTypedArray(a){return isArray(a)||isTypedArray(a);}exports.isArrayOrTypedArray=isArrayOrTypedArray;/*\n * Test whether an input object is 1D.\n *\n * Assumes we already know the object is an array.\n *\n * Looks only at the first element, if the dimensionality is\n * not consistent we won't figure that out here.\n */function isArray1D(a){return!isArrayOrTypedArray(a[0]);}exports.isArray1D=isArray1D;/*\n * Ensures an array has the right amount of storage space. If it doesn't\n * exist, it creates an array. If it does exist, it returns it if too\n * short or truncates it in-place.\n *\n * The goal is to just reuse memory to avoid a bit of excessive garbage\n * collection.\n */exports.ensureArray=function(out,n){// TODO: typed array support here? This is only used in\n// traces/carpet/compute_control_points\nif(!isArray(out))out=[];// If too long, truncate. (If too short, it will grow\n// automatically so we don't care about that case)\nout.length=n;return out;};/*\n * TypedArray-compatible concatenation of n arrays\n * if all arrays are the same type it will preserve that type,\n * otherwise it falls back on Array.\n * Also tries to avoid copying, in case one array has zero length\n * But never mutates an existing array\n */exports.concat=function(){var args=[];var allArray=true;var totalLen=0;var _constructor,arg0,i,argi,posi,leni,out,j;for(i=0;i<arguments.length;i++){argi=arguments[i];leni=argi.length;if(leni){if(arg0)args.push(argi);else{arg0=argi;posi=leni;}if(isArray(argi)){_constructor=false;}else{allArray=false;if(!totalLen){_constructor=argi.constructor;}else if(_constructor!==argi.constructor){// TODO: in principle we could upgrade here,\n// ie keep typed array but convert all to Float64Array?\n_constructor=false;}}totalLen+=leni;}}if(!totalLen)return[];if(!args.length)return arg0;if(allArray)return arg0.concat.apply(arg0,args);if(_constructor){// matching typed arrays\nout=new _constructor(totalLen);out.set(arg0);for(i=0;i<args.length;i++){argi=args[i];out.set(argi,posi);posi+=argi.length;}return out;}// mismatched types or Array + typed\nout=new Array(totalLen);for(j=0;j<arg0.length;j++){out[j]=arg0[j];}for(i=0;i<args.length;i++){argi=args[i];for(j=0;j<argi.length;j++){out[posi+j]=argi[j];}posi+=j;}return out;};exports.maxRowLength=function(z){return _rowLength(z,Math.max,0);};exports.minRowLength=function(z){return _rowLength(z,Math.min,Infinity);};function _rowLength(z,fn,len0){if(isArrayOrTypedArray(z)){if(isArrayOrTypedArray(z[0])){var len=len0;for(var i=0;i<z.length;i++){len=fn(len,z[i].length);}return len;}else{return z.length;}}return 0;}},{}],410:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var BADNUM=_dereq_('../constants/numerical').BADNUM;// precompile for speed\nvar JUNK=/^['\"%,$#\\s']+|[, ]|['\"%,$#\\s']+$/g;/**\n * cleanNumber: remove common leading and trailing cruft\n * Always returns either a number or BADNUM.\n */module.exports=function cleanNumber(v){if(typeof v==='string'){v=v.replace(JUNK,'');}if(isNumeric(v))return Number(v);return BADNUM;};},{\"../constants/numerical\":398,\"fast-isnumeric\":80}],411:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/**\n * Clear gl frame (if any). This is a common pattern as\n * we usually set `preserveDrawingBuffer: true` during\n * gl context creation (e.g. via `reglUtils.prepare`).\n *\n * @param {DOM node or object} gd : graph div object\n */module.exports=function clearGlCanvases(gd){var fullLayout=gd._fullLayout;if(fullLayout._glcanvas&&fullLayout._glcanvas.size()){fullLayout._glcanvas.each(function(d){if(d.regl)d.regl.clear({color:true,depth:true});});}};},{}],412:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/**\n * Clear responsive handlers (if any).\n *\n * @param {DOM node or object} gd : graph div object\n */module.exports=function clearResponsive(gd){if(gd._responsiveChartHandler){window.removeEventListener('resize',gd._responsiveChartHandler);delete gd._responsiveChartHandler;}};},{}],413:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var tinycolor=_dereq_('tinycolor2');var baseTraceAttrs=_dereq_('../plots/attributes');var scales=_dereq_('../components/colorscale/scales');var DESELECTDIM=_dereq_('../constants/interactions').DESELECTDIM;var nestedProperty=_dereq_('./nested_property');var counterRegex=_dereq_('./regex').counter;var modHalf=_dereq_('./mod').modHalf;var isArrayOrTypedArray=_dereq_('./array').isArrayOrTypedArray;exports.valObjectMeta={data_array:{// You can use *dflt=[] to force said array to exist though.\ncoerceFunction:function coerceFunction(v,propOut,dflt){// TODO maybe `v: {type: 'float32', vals: [/* ... */]}` also\nif(isArrayOrTypedArray(v))propOut.set(v);else if(dflt!==undefined)propOut.set(dflt);}},enumerated:{coerceFunction:function coerceFunction(v,propOut,dflt,opts){if(opts.coerceNumber)v=+v;if(opts.values.indexOf(v)===-1)propOut.set(dflt);else propOut.set(v);},validateFunction:function validateFunction(v,opts){if(opts.coerceNumber)v=+v;var values=opts.values;for(var i=0;i<values.length;i++){var k=String(values[i]);if(k.charAt(0)==='/'&&k.charAt(k.length-1)==='/'){var regex=new RegExp(k.substr(1,k.length-2));if(regex.test(v))return true;}else if(v===values[i])return true;}return false;}},'boolean':{coerceFunction:function coerceFunction(v,propOut,dflt){if(v===true||v===false)propOut.set(v);else propOut.set(dflt);}},number:{coerceFunction:function coerceFunction(v,propOut,dflt,opts){if(!isNumeric(v)||opts.min!==undefined&&v<opts.min||opts.max!==undefined&&v>opts.max){propOut.set(dflt);}else propOut.set(+v);}},integer:{coerceFunction:function coerceFunction(v,propOut,dflt,opts){if(v%1||!isNumeric(v)||opts.min!==undefined&&v<opts.min||opts.max!==undefined&&v>opts.max){propOut.set(dflt);}else propOut.set(+v);}},string:{// TODO 'values shouldn't be in there (edge case: 'dash' in Scatter)\ncoerceFunction:function coerceFunction(v,propOut,dflt,opts){if(typeof v!=='string'){var okToCoerce=typeof v==='number';if(opts.strict===true||!okToCoerce)propOut.set(dflt);else propOut.set(String(v));}else if(opts.noBlank&&!v)propOut.set(dflt);else propOut.set(v);}},color:{coerceFunction:function coerceFunction(v,propOut,dflt){if(tinycolor(v).isValid())propOut.set(v);else propOut.set(dflt);}},colorlist:{coerceFunction:function coerceFunction(v,propOut,dflt){function isColor(color){return tinycolor(color).isValid();}if(!Array.isArray(v)||!v.length)propOut.set(dflt);else if(v.every(isColor))propOut.set(v);else propOut.set(dflt);}},colorscale:{coerceFunction:function coerceFunction(v,propOut,dflt){propOut.set(scales.get(v,dflt));}},angle:{coerceFunction:function coerceFunction(v,propOut,dflt){if(v==='auto')propOut.set('auto');else if(!isNumeric(v))propOut.set(dflt);else propOut.set(modHalf(+v,360));}},subplotid:{coerceFunction:function coerceFunction(v,propOut,dflt,opts){var regex=opts.regex||counterRegex(dflt);if(typeof v==='string'&&regex.test(v)){propOut.set(v);return;}propOut.set(dflt);},validateFunction:function validateFunction(v,opts){var dflt=opts.dflt;if(v===dflt)return true;if(typeof v!=='string')return false;if(counterRegex(dflt).test(v))return true;return false;}},flaglist:{coerceFunction:function coerceFunction(v,propOut,dflt,opts){if(typeof v!=='string'){propOut.set(dflt);return;}if((opts.extras||[]).indexOf(v)!==-1){propOut.set(v);return;}var vParts=v.split('+');var i=0;while(i<vParts.length){var vi=vParts[i];if(opts.flags.indexOf(vi)===-1||vParts.indexOf(vi)<i){vParts.splice(i,1);}else i++;}if(!vParts.length)propOut.set(dflt);else propOut.set(vParts.join('+'));}},any:{coerceFunction:function coerceFunction(v,propOut,dflt){if(v===undefined)propOut.set(dflt);else propOut.set(v);}},info_array:{// set `dimensions=2` for a 2D array or '1-2' for either\n// `items` may be a single object instead of an array, in which case\n// `freeLength` must be true.\n// if `dimensions='1-2'` and items is a 1D array, then the value can\n// either be a matching 1D array or an array of such matching 1D arrays\ncoerceFunction:function coerceFunction(v,propOut,dflt,opts){// simplified coerce function just for array items\nfunction coercePart(v,opts,dflt){var out;var propPart={set:function set(v){out=v;}};if(dflt===undefined)dflt=opts.dflt;exports.valObjectMeta[opts.valType].coerceFunction(v,propPart,dflt,opts);return out;}var twoD=opts.dimensions===2||opts.dimensions==='1-2'&&Array.isArray(v)&&Array.isArray(v[0]);if(!Array.isArray(v)){propOut.set(dflt);return;}var items=opts.items;var vOut=[];var arrayItems=Array.isArray(items);var arrayItems2D=arrayItems&&twoD&&Array.isArray(items[0]);var innerItemsOnly=twoD&&arrayItems&&!arrayItems2D;var len=arrayItems&&!innerItemsOnly?items.length:v.length;var i,j,row,item,len2,vNew;dflt=Array.isArray(dflt)?dflt:[];if(twoD){for(i=0;i<len;i++){vOut[i]=[];row=Array.isArray(v[i])?v[i]:[];if(innerItemsOnly)len2=items.length;else if(arrayItems)len2=items[i].length;else len2=row.length;for(j=0;j<len2;j++){if(innerItemsOnly)item=items[j];else if(arrayItems)item=items[i][j];else item=items;vNew=coercePart(row[j],item,(dflt[i]||[])[j]);if(vNew!==undefined)vOut[i][j]=vNew;}}}else{for(i=0;i<len;i++){vNew=coercePart(v[i],arrayItems?items[i]:items,dflt[i]);if(vNew!==undefined)vOut[i]=vNew;}}propOut.set(vOut);},validateFunction:function validateFunction(v,opts){if(!Array.isArray(v))return false;var items=opts.items;var arrayItems=Array.isArray(items);var twoD=opts.dimensions===2;// when free length is off, input and declared lengths must match\nif(!opts.freeLength&&v.length!==items.length)return false;// valid when all input items are valid\nfor(var i=0;i<v.length;i++){if(twoD){if(!Array.isArray(v[i])||!opts.freeLength&&v[i].length!==items[i].length){return false;}for(var j=0;j<v[i].length;j++){if(!validate(v[i][j],arrayItems?items[i][j]:items)){return false;}}}else if(!validate(v[i],arrayItems?items[i]:items))return false;}return true;}}};/**\n * Ensures that container[attribute] has a valid value.\n *\n * attributes[attribute] is an object with possible keys:\n * - valType: data_array, enumerated, boolean, ... as in valObjectMeta\n * - values: (enumerated only) array of allowed vals\n * - min, max: (number, integer only) inclusive bounds on allowed vals\n *      either or both may be omitted\n * - dflt: if attribute is invalid or missing, use this default\n *      if dflt is provided as an argument to lib.coerce it takes precedence\n *      as a convenience, returns the value it finally set\n */exports.coerce=function(containerIn,containerOut,attributes,attribute,dflt){var opts=nestedProperty(attributes,attribute).get();var propIn=nestedProperty(containerIn,attribute);var propOut=nestedProperty(containerOut,attribute);var v=propIn.get();var template=containerOut._template;if(v===undefined&&template){v=nestedProperty(template,attribute).get();// already used the template value, so short-circuit the second check\ntemplate=0;}if(dflt===undefined)dflt=opts.dflt;/**\n     * arrayOk: value MAY be an array, then we do no value checking\n     * at this point, because it can be more complicated than the\n     * individual form (eg. some array vals can be numbers, even if the\n     * single values must be color strings)\n     */if(opts.arrayOk&&isArrayOrTypedArray(v)){propOut.set(v);return v;}var coerceFunction=exports.valObjectMeta[opts.valType].coerceFunction;coerceFunction(v,propOut,dflt,opts);var out=propOut.get();// in case v was provided but invalid, try the template again so it still\n// overrides the regular default\nif(template&&out===dflt&&!validate(v,opts)){v=nestedProperty(template,attribute).get();coerceFunction(v,propOut,dflt,opts);out=propOut.get();}return out;};/**\n * Variation on coerce\n *\n * Uses coerce to get attribute value if user input is valid,\n * returns attribute default if user input it not valid or\n * returns false if there is no user input.\n */exports.coerce2=function(containerIn,containerOut,attributes,attribute,dflt){var propIn=nestedProperty(containerIn,attribute);var propOut=exports.coerce(containerIn,containerOut,attributes,attribute,dflt);var valIn=propIn.get();return valIn!==undefined&&valIn!==null?propOut:false;};/*\n * Shortcut to coerce the three font attributes\n *\n * 'coerce' is a lib.coerce wrapper with implied first three arguments\n */exports.coerceFont=function(coerce,attr,dfltObj){var out={};dfltObj=dfltObj||{};out.family=coerce(attr+'.family',dfltObj.family);out.size=coerce(attr+'.size',dfltObj.size);out.color=coerce(attr+'.color',dfltObj.color);return out;};/** Coerce shortcut for 'hoverinfo'\n * handling 1-vs-multi-trace dflt logic\n *\n * @param {object} traceIn : user trace object\n * @param {object} traceOut : full trace object (requires _module ref)\n * @param {object} layoutOut : full layout object (require _dataLength ref)\n * @return {any} : the coerced value\n */exports.coerceHoverinfo=function(traceIn,traceOut,layoutOut){var moduleAttrs=traceOut._module.attributes;var attrs=moduleAttrs.hoverinfo?moduleAttrs:baseTraceAttrs;var valObj=attrs.hoverinfo;var dflt;if(layoutOut._dataLength===1){var flags=valObj.dflt==='all'?valObj.flags.slice():valObj.dflt.split('+');flags.splice(flags.indexOf('name'),1);dflt=flags.join('+');}return exports.coerce(traceIn,traceOut,attrs,'hoverinfo',dflt);};/** Coerce shortcut for [un]selected.marker.opacity,\n *  which has special default logic, to ensure that it corresponds to the\n *  default selection behavior while allowing to be overtaken by any other\n *  [un]selected attribute.\n *\n *  N.B. This must be called *after* coercing all the other [un]selected attrs,\n *  to give the intended result.\n *\n * @param {object} traceOut : fullData item\n * @param {function} coerce : lib.coerce wrapper with implied first three arguments\n */exports.coerceSelectionMarkerOpacity=function(traceOut,coerce){if(!traceOut.marker)return;var mo=traceOut.marker.opacity;// you can still have a `marker` container with no markers if there's text\nif(mo===undefined)return;var smoDflt;var usmoDflt;// Don't give [un]selected.marker.opacity a default value if\n// marker.opacity is an array: handle this during style step.\n//\n// Only give [un]selected.marker.opacity a default value if you don't\n// set any other [un]selected attributes.\nif(!isArrayOrTypedArray(mo)&&!traceOut.selected&&!traceOut.unselected){smoDflt=mo;usmoDflt=DESELECTDIM*mo;}coerce('selected.marker.opacity',smoDflt);coerce('unselected.marker.opacity',usmoDflt);};function validate(value,opts){var valObjectDef=exports.valObjectMeta[opts.valType];if(opts.arrayOk&&isArrayOrTypedArray(value))return true;if(valObjectDef.validateFunction){return valObjectDef.validateFunction(value,opts);}var failed={};var out=failed;var propMock={set:function set(v){out=v;}};// 'failed' just something mutable that won't be === anything else\nvalObjectDef.coerceFunction(value,propMock,failed,opts);return out!==failed;}exports.validate=validate;},{\"../components/colorscale/scales\":314,\"../constants/interactions\":397,\"../plots/attributes\":466,\"./array\":409,\"./mod\":430,\"./nested_property\":431,\"./regex\":438,\"fast-isnumeric\":80,\"tinycolor2\":264}],414:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var isNumeric=_dereq_('fast-isnumeric');var Loggers=_dereq_('./loggers');var mod=_dereq_('./mod').mod;var constants=_dereq_('../constants/numerical');var BADNUM=constants.BADNUM;var ONEDAY=constants.ONEDAY;var ONEHOUR=constants.ONEHOUR;var ONEMIN=constants.ONEMIN;var ONESEC=constants.ONESEC;var EPOCHJD=constants.EPOCHJD;var Registry=_dereq_('../registry');var utcFormat=d3.time.format.utc;var DATETIME_REGEXP=/^\\s*(-?\\d\\d\\d\\d|\\d\\d)(-(\\d?\\d)(-(\\d?\\d)([ Tt]([01]?\\d|2[0-3])(:([0-5]\\d)(:([0-5]\\d(\\.\\d+)?))?(Z|z|[+\\-]\\d\\d:?\\d\\d)?)?)?)?)?\\s*$/m;// special regex for chinese calendars to support yyyy-mmi-dd etc for intercalary months\nvar DATETIME_REGEXP_CN=/^\\s*(-?\\d\\d\\d\\d|\\d\\d)(-(\\d?\\di?)(-(\\d?\\d)([ Tt]([01]?\\d|2[0-3])(:([0-5]\\d)(:([0-5]\\d(\\.\\d+)?))?(Z|z|[+\\-]\\d\\d:?\\d\\d)?)?)?)?)?\\s*$/m;// for 2-digit years, the first year we map them onto\nvar YFIRST=new Date().getFullYear()-70;function isWorldCalendar(calendar){return calendar&&Registry.componentsRegistry.calendars&&typeof calendar==='string'&&calendar!=='gregorian';}/*\n * dateTick0: get the canonical tick for this calendar\n *\n * bool sunday is for week ticks, shift it to a Sunday.\n */exports.dateTick0=function(calendar,sunday){if(isWorldCalendar(calendar)){return sunday?Registry.getComponentMethod('calendars','CANONICAL_SUNDAY')[calendar]:Registry.getComponentMethod('calendars','CANONICAL_TICK')[calendar];}else{return sunday?'2000-01-02':'2000-01-01';}};/*\n * dfltRange: for each calendar, give a valid default range\n */exports.dfltRange=function(calendar){if(isWorldCalendar(calendar)){return Registry.getComponentMethod('calendars','DFLTRANGE')[calendar];}else{return['2000-01-01','2001-01-01'];}};// is an object a javascript date?\nexports.isJSDate=function(v){return _typeof(v)==='object'&&v!==null&&typeof v.getTime==='function';};// The absolute limits of our date-time system\n// This is a little weird: we use MIN_MS and MAX_MS in dateTime2ms\n// but we use dateTime2ms to calculate them (after defining it!)\nvar MIN_MS,MAX_MS;/**\n * dateTime2ms - turn a date object or string s into milliseconds\n * (relative to 1970-01-01, per javascript standard)\n * optional calendar (string) to use a non-gregorian calendar\n *\n * Returns BADNUM if it doesn't find a date\n *\n * strings should have the form:\n *\n *    -?YYYY-mm-dd<sep>HH:MM:SS.sss<tzInfo>?\n *\n * <sep>: space (our normal standard) or T or t (ISO-8601)\n * <tzInfo>: Z, z, or [+\\-]HH:?MM and we THROW IT AWAY\n * this format comes from https://tools.ietf.org/html/rfc3339#section-5.6\n * but we allow it even with a space as the separator\n *\n * May truncate after any full field, and sss can be any length\n * even >3 digits, though javascript dates truncate to milliseconds,\n * we keep as much as javascript numeric precision can hold, but we only\n * report back up to 100 microsecond precision, because most dates support\n * this precision (close to 1970 support more, very far away support less)\n *\n * Expanded to support negative years to -9999 but you must always\n * give 4 digits, except for 2-digit positive years which we assume are\n * near the present time.\n * Note that we follow ISO 8601:2004: there *is* a year 0, which\n * is 1BC/BCE, and -1===2BC etc.\n *\n * World calendars: not all of these *have* agreed extensions to this full range,\n * if you have another calendar system but want a date range outside its validity,\n * you can use a gregorian date string prefixed with 'G' or 'g'.\n *\n * Where to cut off 2-digit years between 1900s and 2000s?\n * from http://support.microsoft.com/kb/244664:\n *   1930-2029 (the most retro of all...)\n * but in my mac chrome from eg. d=new Date(Date.parse('8/19/50')):\n *   1950-2049\n * by Java, from http://stackoverflow.com/questions/2024273/:\n *   now-80 - now+19\n * or FileMaker Pro, from\n *      http://www.filemaker.com/12help/html/add_view_data.4.21.html:\n *   now-70 - now+29\n * but python strptime etc, via\n *      http://docs.python.org/py3k/library/time.html:\n *   1969-2068 (super forward-looking, but static, not sliding!)\n *\n * lets go with now-70 to now+29, and if anyone runs into this problem\n * they can learn the hard way not to use 2-digit years, as no choice we\n * make now will cover all possibilities. mostly this will all be taken\n * care of in initial parsing, should only be an issue for hand-entered data\n * currently (2016) this range is:\n *   1946-2045\n */exports.dateTime2ms=function(s,calendar){// first check if s is a date object\nif(exports.isJSDate(s)){// Convert to the UTC milliseconds that give the same\n// hours as this date has in the local timezone\nvar tzOffset=s.getTimezoneOffset()*ONEMIN;var offsetTweak=(s.getUTCMinutes()-s.getMinutes())*ONEMIN+(s.getUTCSeconds()-s.getSeconds())*ONESEC+(s.getUTCMilliseconds()-s.getMilliseconds());if(offsetTweak){var comb=3*ONEMIN;tzOffset=tzOffset-comb/2+mod(offsetTweak-tzOffset+comb/2,comb);}s=Number(s)-tzOffset;if(s>=MIN_MS&&s<=MAX_MS)return s;return BADNUM;}// otherwise only accept strings and numbers\nif(typeof s!=='string'&&typeof s!=='number')return BADNUM;s=String(s);var isWorld=isWorldCalendar(calendar);// to handle out-of-range dates in international calendars, accept\n// 'G' as a prefix to force the built-in gregorian calendar.\nvar s0=s.charAt(0);if(isWorld&&(s0==='G'||s0==='g')){s=s.substr(1);calendar='';}var isChinese=isWorld&&calendar.substr(0,7)==='chinese';var match=s.match(isChinese?DATETIME_REGEXP_CN:DATETIME_REGEXP);if(!match)return BADNUM;var y=match[1];var m=match[3]||'1';var d=Number(match[5]||1);var H=Number(match[7]||0);var M=Number(match[9]||0);var S=Number(match[11]||0);if(isWorld){// disallow 2-digit years for world calendars\nif(y.length===2)return BADNUM;y=Number(y);var cDate;try{var calInstance=Registry.getComponentMethod('calendars','getCal')(calendar);if(isChinese){var isIntercalary=m.charAt(m.length-1)==='i';m=parseInt(m,10);cDate=calInstance.newDate(y,calInstance.toMonthIndex(y,m,isIntercalary),d);}else{cDate=calInstance.newDate(y,Number(m),d);}}catch(e){return BADNUM;}// Invalid ... date\nif(!cDate)return BADNUM;return(cDate.toJD()-EPOCHJD)*ONEDAY+H*ONEHOUR+M*ONEMIN+S*ONESEC;}if(y.length===2){y=(Number(y)+2000-YFIRST)%100+YFIRST;}else y=Number(y);// new Date uses months from 0; subtract 1 here just so we\n// don't have to do it again during the validity test below\nm-=1;// javascript takes new Date(0..99,m,d) to mean 1900-1999, so\n// to support years 0-99 we need to use setFullYear explicitly\n// Note that 2000 is a leap year.\nvar date=new Date(Date.UTC(2000,m,d,H,M));date.setUTCFullYear(y);if(date.getUTCMonth()!==m)return BADNUM;if(date.getUTCDate()!==d)return BADNUM;return date.getTime()+S*ONESEC;};MIN_MS=exports.MIN_MS=exports.dateTime2ms('-9999');MAX_MS=exports.MAX_MS=exports.dateTime2ms('9999-12-31 23:59:59.9999');// is string s a date? (see above)\nexports.isDateTime=function(s,calendar){return exports.dateTime2ms(s,calendar)!==BADNUM;};// pad a number with zeroes, to given # of digits before the decimal point\nfunction lpad(val,digits){return String(val+Math.pow(10,digits)).substr(1);}/**\n * Turn ms into string of the form YYYY-mm-dd HH:MM:SS.ssss\n * Crop any trailing zeros in time, except never stop right after hours\n * (we could choose to crop '-01' from date too but for now we always\n * show the whole date)\n * Optional range r is the data range that applies, also in ms.\n * If rng is big, the later parts of time will be omitted\n */var NINETYDAYS=90*ONEDAY;var THREEHOURS=3*ONEHOUR;var FIVEMIN=5*ONEMIN;exports.ms2DateTime=function(ms,r,calendar){if(typeof ms!=='number'||!(ms>=MIN_MS&&ms<=MAX_MS))return BADNUM;if(!r)r=0;var msecTenths=Math.floor(mod(ms+0.05,1)*10);var msRounded=Math.round(ms-msecTenths/10);var dateStr,h,m,s,msec10,d;if(isWorldCalendar(calendar)){var dateJD=Math.floor(msRounded/ONEDAY)+EPOCHJD;var timeMs=Math.floor(mod(ms,ONEDAY));try{dateStr=Registry.getComponentMethod('calendars','getCal')(calendar).fromJD(dateJD).formatDate('yyyy-mm-dd');}catch(e){// invalid date in this calendar - fall back to Gyyyy-mm-dd\ndateStr=utcFormat('G%Y-%m-%d')(new Date(msRounded));}// yyyy does NOT guarantee 4-digit years. YYYY mostly does, but does\n// other things for a few calendars, so we can't trust it. Just pad\n// it manually (after the '-' if there is one)\nif(dateStr.charAt(0)==='-'){while(dateStr.length<11){dateStr='-0'+dateStr.substr(1);}}else{while(dateStr.length<10){dateStr='0'+dateStr;}}// TODO: if this is faster, we could use this block for extracting\n// the time components of regular gregorian too\nh=r<NINETYDAYS?Math.floor(timeMs/ONEHOUR):0;m=r<NINETYDAYS?Math.floor(timeMs%ONEHOUR/ONEMIN):0;s=r<THREEHOURS?Math.floor(timeMs%ONEMIN/ONESEC):0;msec10=r<FIVEMIN?timeMs%ONESEC*10+msecTenths:0;}else{d=new Date(msRounded);dateStr=utcFormat('%Y-%m-%d')(d);// <90 days: add hours and minutes - never *only* add hours\nh=r<NINETYDAYS?d.getUTCHours():0;m=r<NINETYDAYS?d.getUTCMinutes():0;// <3 hours: add seconds\ns=r<THREEHOURS?d.getUTCSeconds():0;// <5 minutes: add ms (plus one extra digit, this is msec*10)\nmsec10=r<FIVEMIN?d.getUTCMilliseconds()*10+msecTenths:0;}return includeTime(dateStr,h,m,s,msec10);};// For converting old-style milliseconds to date strings,\n// we use the local timezone rather than UTC like we use\n// everywhere else, both for backward compatibility and\n// because that's how people mostly use javasript date objects.\n// Clip one extra day off our date range though so we can't get\n// thrown beyond the range by the timezone shift.\nexports.ms2DateTimeLocal=function(ms){if(!(ms>=MIN_MS+ONEDAY&&ms<=MAX_MS-ONEDAY))return BADNUM;var msecTenths=Math.floor(mod(ms+0.05,1)*10);var d=new Date(Math.round(ms-msecTenths/10));var dateStr=d3.time.format('%Y-%m-%d')(d);var h=d.getHours();var m=d.getMinutes();var s=d.getSeconds();var msec10=d.getUTCMilliseconds()*10+msecTenths;return includeTime(dateStr,h,m,s,msec10);};function includeTime(dateStr,h,m,s,msec10){// include each part that has nonzero data in or after it\nif(h||m||s||msec10){dateStr+=' '+lpad(h,2)+':'+lpad(m,2);if(s||msec10){dateStr+=':'+lpad(s,2);if(msec10){var digits=4;while(msec10%10===0){digits-=1;msec10/=10;}dateStr+='.'+lpad(msec10,digits);}}}return dateStr;}// normalize date format to date string, in case it starts as\n// a Date object or milliseconds\n// optional dflt is the return value if cleaning fails\nexports.cleanDate=function(v,dflt,calendar){// let us use cleanDate to provide a missing default without an error\nif(v===BADNUM)return dflt;if(exports.isJSDate(v)||typeof v==='number'&&isFinite(v)){// do not allow milliseconds (old) or jsdate objects (inherently\n// described as gregorian dates) with world calendars\nif(isWorldCalendar(calendar)){Loggers.error('JS Dates and milliseconds are incompatible with world calendars',v);return dflt;}// NOTE: if someone puts in a year as a number rather than a string,\n// this will mistakenly convert it thinking it's milliseconds from 1970\n// that is: '2012' -> Jan. 1, 2012, but 2012 -> 2012 epoch milliseconds\nv=exports.ms2DateTimeLocal(+v);if(!v&&dflt!==undefined)return dflt;}else if(!exports.isDateTime(v,calendar)){Loggers.error('unrecognized date',v);return dflt;}return v;};/*\n *  Date formatting for ticks and hovertext\n */ /*\n * modDateFormat: Support world calendars, and add one item to\n * d3's vocabulary:\n * %{n}f where n is the max number of digits of fractional seconds\n */var fracMatch=/%\\d?f/g;function modDateFormat(fmt,x,formatter,calendar){fmt=fmt.replace(fracMatch,function(match){var digits=Math.min(+match.charAt(1)||6,6);var fracSecs=(x/1000%1+2).toFixed(digits).substr(2).replace(/0+$/,'')||'0';return fracSecs;});var d=new Date(Math.floor(x+0.05));if(isWorldCalendar(calendar)){try{fmt=Registry.getComponentMethod('calendars','worldCalFmt')(fmt,x,calendar);}catch(e){return'Invalid';}}return formatter(fmt)(d);}/*\n * formatTime: create a time string from:\n *   x: milliseconds\n *   tr: tickround ('M', 'S', or # digits)\n * only supports UTC times (where every day is 24 hours and 0 is at midnight)\n */var MAXSECONDS=[59,59.9,59.99,59.999,59.9999];function formatTime(x,tr){var timePart=mod(x+0.05,ONEDAY);var timeStr=lpad(Math.floor(timePart/ONEHOUR),2)+':'+lpad(mod(Math.floor(timePart/ONEMIN),60),2);if(tr!=='M'){if(!isNumeric(tr))tr=0;// should only be 'S'\n/*\n         * this is a weird one - and shouldn't come up unless people\n         * monkey with tick0 in weird ways, but we need to do something!\n         * IN PARTICULAR we had better not display garbage (see below)\n         * for numbers we always round to the nearest increment of the\n         * precision we're showing, and this seems like the right way to\n         * handle seconds and milliseconds, as they have a decimal point\n         * and people will interpret that to mean rounding like numbers.\n         * but for larger increments we floor the value: it's always\n         * 2013 until the ball drops on the new year. We could argue about\n         * which field it is where we start rounding (should 12:08:59\n         * round to 12:09 if we're stopping at minutes?) but for now I'll\n         * say we round seconds but floor everything else. BUT that means\n         * we need to never round up to 60 seconds, ie 23:59:60\n         */var sec=Math.min(mod(x/ONESEC,60),MAXSECONDS[tr]);var secStr=(100+sec).toFixed(tr).substr(1);if(tr>0){secStr=secStr.replace(/0+$/,'').replace(/[\\.]$/,'');}timeStr+=':'+secStr;}return timeStr;}/*\n * formatDate: turn a date into tick or hover label text.\n *\n *   x: milliseconds, the value to convert\n *   fmt: optional, an explicit format string (d3 format, even for world calendars)\n *   tr: tickround ('y', 'm', 'd', 'M', 'S', or # digits)\n *      used if no explicit fmt is provided\n *   formatter: locale-aware d3 date formatter for standard gregorian calendars\n *      should be the result of exports.getD3DateFormat(gd)\n *   calendar: optional string, the world calendar system to use\n *\n * returns the date/time as a string, potentially with the leading portion\n * on a separate line (after '\\n')\n * Note that this means if you provide an explicit format which includes '\\n'\n * the axis may choose to strip things after it when they don't change from\n * one tick to the next (as it does with automatic formatting)\n */exports.formatDate=function(x,fmt,tr,formatter,calendar,extraFormat){calendar=isWorldCalendar(calendar)&&calendar;if(!fmt){if(tr==='y')fmt=extraFormat.year;else if(tr==='m')fmt=extraFormat.month;else if(tr==='d'){fmt=extraFormat.dayMonth+'\\n'+extraFormat.year;}else{return formatTime(x,tr)+'\\n'+modDateFormat(extraFormat.dayMonthYear,x,formatter,calendar);}}return modDateFormat(fmt,x,formatter,calendar);};/*\n * incrementMonth: make a new milliseconds value from the given one,\n * having changed the month\n *\n * special case for world calendars: multiples of 12 are treated as years,\n * even for calendar systems that don't have (always or ever) 12 months/year\n * TODO: perhaps we need a different code for year increments to support this?\n *\n * ms (number): the initial millisecond value\n * dMonth (int): the (signed) number of months to shift\n * calendar (string): the calendar system to use\n *\n * changing month does not (and CANNOT) always preserve day, since\n * months have different lengths. The worst example of this is:\n *   d = new Date(1970,0,31); d.setMonth(1) -> Feb 31 turns into Mar 3\n *\n * But we want to be able to iterate over the last day of each month,\n * regardless of what its number is.\n * So shift 3 days forward, THEN set the new month, then unshift:\n *   1/31 -> 2/28 (or 29) -> 3/31 -> 4/30 -> ...\n *\n * Note that odd behavior still exists if you start from the 26th-28th:\n *   1/28 -> 2/28 -> 3/31\n * but at least you can't shift any dates into the wrong month,\n * and ticks on these days incrementing by month would be very unusual\n */var THREEDAYS=3*ONEDAY;exports.incrementMonth=function(ms,dMonth,calendar){calendar=isWorldCalendar(calendar)&&calendar;// pull time out and operate on pure dates, then add time back at the end\n// this gives maximum precision - not that we *normally* care if we're\n// incrementing by month, but better to be safe!\nvar timeMs=mod(ms,ONEDAY);ms=Math.round(ms-timeMs);if(calendar){try{var dateJD=Math.round(ms/ONEDAY)+EPOCHJD;var calInstance=Registry.getComponentMethod('calendars','getCal')(calendar);var cDate=calInstance.fromJD(dateJD);if(dMonth%12)calInstance.add(cDate,dMonth,'m');else calInstance.add(cDate,dMonth/12,'y');return(cDate.toJD()-EPOCHJD)*ONEDAY+timeMs;}catch(e){Loggers.error('invalid ms '+ms+' in calendar '+calendar);// then keep going in gregorian even though the result will be 'Invalid'\n}}var y=new Date(ms+THREEDAYS);return y.setUTCMonth(y.getUTCMonth()+dMonth)+timeMs-THREEDAYS;};/*\n * findExactDates: what fraction of data is exact days, months, or years?\n *\n * data: array of millisecond values\n * calendar (string) the calendar to test against\n */exports.findExactDates=function(data,calendar){var exactYears=0;var exactMonths=0;var exactDays=0;var blankCount=0;var d;var di;var calInstance=isWorldCalendar(calendar)&&Registry.getComponentMethod('calendars','getCal')(calendar);for(var i=0;i<data.length;i++){di=data[i];// not date data at all\nif(!isNumeric(di)){blankCount++;continue;}// not an exact date\nif(di%ONEDAY)continue;if(calInstance){try{d=calInstance.fromJD(di/ONEDAY+EPOCHJD);if(d.day()===1){if(d.month()===1)exactYears++;else exactMonths++;}else exactDays++;}catch(e){// invalid date in this calendar - ignore it here.\n}}else{d=new Date(di);if(d.getUTCDate()===1){if(d.getUTCMonth()===0)exactYears++;else exactMonths++;}else exactDays++;}}exactMonths+=exactYears;exactDays+=exactMonths;var dataCount=data.length-blankCount;return{exactYears:exactYears/dataCount,exactMonths:exactMonths/dataCount,exactDays:exactDays/dataCount};};},{\"../constants/numerical\":398,\"../registry\":521,\"./loggers\":427,\"./mod\":430,\"d3\":71,\"fast-isnumeric\":80}],415:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/* global jQuery:false */var EventEmitter=_dereq_('events').EventEmitter;var Events={init:function init(plotObj){/*\n         * If we have already instantiated an emitter for this plot\n         * return early.\n         */if(plotObj._ev instanceof EventEmitter)return plotObj;var ev=new EventEmitter();var internalEv=new EventEmitter();/*\n         * Assign to plot._ev while we still live in a land\n         * where plot is a DOM element with stuff attached to it.\n         * In the future we can make plot the event emitter itself.\n         */plotObj._ev=ev;/*\n         * Create a second event handler that will manage events *internally*.\n         * This allows parts of plotly to respond to thing like relayout without\n         * having to use the user-facing event handler. They cannot peacefully\n         * coexist on the same handler because a user invoking\n         * plotObj.removeAllListeners() would detach internal events, breaking\n         * plotly.\n         */plotObj._internalEv=internalEv;/*\n         * Assign bound methods from the ev to the plot object. These methods\n         * will reference the 'this' of plot._ev even though they are methods\n         * of plot. This will keep the event machinery away from the plot object\n         * which currently is often a DOM element but presents an API that will\n         * continue to function when plot becomes an emitter. Not all EventEmitter\n         * methods have been bound to `plot` as some do not currently add value to\n         * the Plotly event API.\n         */plotObj.on=ev.on.bind(ev);plotObj.once=ev.once.bind(ev);plotObj.removeListener=ev.removeListener.bind(ev);plotObj.removeAllListeners=ev.removeAllListeners.bind(ev);/*\n         * Create functions for managing internal events. These are *only* triggered\n         * by the mirroring of external events via the emit function.\n         */plotObj._internalOn=internalEv.on.bind(internalEv);plotObj._internalOnce=internalEv.once.bind(internalEv);plotObj._removeInternalListener=internalEv.removeListener.bind(internalEv);plotObj._removeAllInternalListeners=internalEv.removeAllListeners.bind(internalEv);/*\n         * We must wrap emit to continue to support JQuery events. The idea\n         * is to check to see if the user is using JQuery events, if they are\n         * we emit JQuery events to trigger user handlers as well as the EventEmitter\n         * events.\n         */plotObj.emit=function(event,data){if(typeof jQuery!=='undefined'){jQuery(plotObj).trigger(event,data);}ev.emit(event,data);internalEv.emit(event,data);};return plotObj;},/*\n     * This function behaves like jQuery's triggerHandler. It calls\n     * all handlers for a particular event and returns the return value\n     * of the LAST handler. This function also triggers jQuery's\n     * triggerHandler for backwards compatibility.\n     */triggerHandler:function triggerHandler(plotObj,event,data){var jQueryHandlerValue;var nodeEventHandlerValue;/*\n         * If jQuery exists run all its handlers for this event and\n         * collect the return value of the LAST handler function\n         */if(typeof jQuery!=='undefined'){jQueryHandlerValue=jQuery(plotObj).triggerHandler(event,data);}/*\n         * Now run all the node style event handlers\n         */var ev=plotObj._ev;if(!ev)return jQueryHandlerValue;var handlers=ev._events[event];if(!handlers)return jQueryHandlerValue;// making sure 'this' is the EventEmitter instance\nfunction apply(handler){// The 'once' case, we can't just call handler() as we need\n// the return value here. So,\n// - remove handler\n// - call listener and grab return value!\n// - stash 'fired' key to not call handler twice\nif(handler.listener){ev.removeListener(event,handler.listener);if(!handler.fired){handler.fired=true;return handler.listener.apply(ev,[data]);}}else{return handler.apply(ev,[data]);}}// handlers can be function or an array of functions\nhandlers=Array.isArray(handlers)?handlers:[handlers];var i;for(i=0;i<handlers.length-1;i++){apply(handlers[i]);}// now call the final handler and collect its value\nnodeEventHandlerValue=apply(handlers[i]);/*\n         * Return either the jQuery handler value if it exists or the\n         * nodeEventHandler value. jQuery event value supersedes nodejs\n         * events for backwards compatibility reasons.\n         */return jQueryHandlerValue!==undefined?jQueryHandlerValue:nodeEventHandlerValue;},purge:function purge(plotObj){delete plotObj._ev;delete plotObj.on;delete plotObj.once;delete plotObj.removeListener;delete plotObj.removeAllListeners;delete plotObj.emit;delete plotObj._ev;delete plotObj._internalEv;delete plotObj._internalOn;delete plotObj._internalOnce;delete plotObj._removeInternalListener;delete plotObj._removeAllInternalListeners;return plotObj;}};module.exports=Events;},{\"events\":42}],416:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isPlainObject=_dereq_('./is_plain_object.js');var isArray=Array.isArray;function primitivesLoopSplice(source,target){var i,value;for(i=0;i<source.length;i++){value=source[i];if(value!==null&&_typeof(value)==='object'){return false;}if(value!==void 0){target[i]=value;}}return true;}exports.extendFlat=function(){return _extend(arguments,false,false,false);};exports.extendDeep=function(){return _extend(arguments,true,false,false);};exports.extendDeepAll=function(){return _extend(arguments,true,true,false);};exports.extendDeepNoArrays=function(){return _extend(arguments,true,false,true);};/*\n * Inspired by https://github.com/justmoon/node-extend/blob/master/index.js\n * All credit to the jQuery authors for perfecting this amazing utility.\n *\n * API difference with jQuery version:\n * - No optional boolean (true -> deep extend) first argument,\n *   use `extendFlat` for first-level only extend and\n *   use `extendDeep` for a deep extend.\n *\n * Other differences with jQuery version:\n * - Uses a modern (and faster) isPlainObject routine.\n * - Expected to work with object {} and array [] arguments only.\n * - Does not check for circular structure.\n *   FYI: jQuery only does a check across one level.\n *   Warning: this might result in infinite loops.\n *\n */function _extend(inputs,isDeep,keepAllKeys,noArrayCopies){var target=inputs[0];var length=inputs.length;var input,key,src,copy,copyIsArray,clone,allPrimitives;// TODO does this do the right thing for typed arrays?\nif(length===2&&isArray(target)&&isArray(inputs[1])&&target.length===0){allPrimitives=primitivesLoopSplice(inputs[1],target);if(allPrimitives){return target;}else{target.splice(0,target.length);// reset target and continue to next block\n}}for(var i=1;i<length;i++){input=inputs[i];for(key in input){src=target[key];copy=input[key];// Stop early and just transfer the array if array copies are disallowed:\nif(noArrayCopies&&isArray(copy)){target[key]=copy;}// recurse if we're merging plain objects or arrays\nelse if(isDeep&&copy&&(isPlainObject(copy)||(copyIsArray=isArray(copy)))){if(copyIsArray){copyIsArray=false;clone=src&&isArray(src)?src:[];}else{clone=src&&isPlainObject(src)?src:{};}// never move original objects, clone them\ntarget[key]=_extend([clone,copy],isDeep,keepAllKeys,noArrayCopies);}// don't bring in undefined values, except for extendDeepAll\nelse if(typeof copy!=='undefined'||keepAllKeys){target[key]=copy;}}}return target;}},{\"./is_plain_object.js\":424}],417:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/**\n * Return news array containing only the unique items\n * found in input array.\n *\n * IMPORTANT: Note that items are considered unique\n * if `String({})` is unique. For example;\n *\n *  Lib.filterUnique([ { a: 1 }, { b: 2 } ])\n *\n *  returns [{ a: 1 }]\n *\n * and\n *\n *  Lib.filterUnique([ '1', 1 ])\n *\n *  returns ['1']\n *\n *\n * @param {array} array base array\n * @return {array} new filtered array\n */module.exports=function filterUnique(array){var seen={};var out=[];var j=0;for(var i=0;i<array.length;i++){var item=array[i];if(seen[item]!==1){seen[item]=1;out[j++]=item;}}return out;};},{}],418:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/** Filter out object items with visible !== true\n *  insider array container.\n *\n *  @param {array of objects} container\n *  @return {array of objects} of length <= container\n *\n */module.exports=function filterVisible(container){var filterFn=isCalcData(container)?calcDataFilter:baseFilter;var out=[];for(var i=0;i<container.length;i++){var item=container[i];if(filterFn(item))out.push(item);}return out;};function baseFilter(item){return item.visible===true;}function calcDataFilter(item){return item[0].trace.visible===true;}function isCalcData(cont){return Array.isArray(cont)&&Array.isArray(cont[0])&&cont[0][0]&&cont[0][0].trace;}},{}],419:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var mod=_dereq_('./mod').mod;/*\n * look for intersection of two line segments\n *   (1->2 and 3->4) - returns array [x,y] if they do, null if not\n */exports.segmentsIntersect=segmentsIntersect;function segmentsIntersect(x1,y1,x2,y2,x3,y3,x4,y4){var a=x2-x1;var b=x3-x1;var c=x4-x3;var d=y2-y1;var e=y3-y1;var f=y4-y3;var det=a*f-c*d;// parallel lines? intersection is undefined\n// ignore the case where they are colinear\nif(det===0)return null;var t=(b*f-c*e)/det;var u=(b*d-a*e)/det;// segments do not intersect?\nif(u<0||u>1||t<0||t>1)return null;return{x:x1+a*t,y:y1+d*t};}/*\n * find the minimum distance between two line segments (1->2 and 3->4)\n */exports.segmentDistance=function segmentDistance(x1,y1,x2,y2,x3,y3,x4,y4){if(segmentsIntersect(x1,y1,x2,y2,x3,y3,x4,y4))return 0;// the two segments and their lengths squared\nvar x12=x2-x1;var y12=y2-y1;var x34=x4-x3;var y34=y4-y3;var ll12=x12*x12+y12*y12;var ll34=x34*x34+y34*y34;// calculate distance squared, then take the sqrt at the very end\nvar dist2=Math.min(perpDistance2(x12,y12,ll12,x3-x1,y3-y1),perpDistance2(x12,y12,ll12,x4-x1,y4-y1),perpDistance2(x34,y34,ll34,x1-x3,y1-y3),perpDistance2(x34,y34,ll34,x2-x3,y2-y3));return Math.sqrt(dist2);};/*\n * distance squared from segment ab to point c\n * [xab, yab] is the vector b-a\n * [xac, yac] is the vector c-a\n * llab is the length squared of (b-a), just to simplify calculation\n */function perpDistance2(xab,yab,llab,xac,yac){var fcAB=xac*xab+yac*yab;if(fcAB<0){// point c is closer to point a\nreturn xac*xac+yac*yac;}else if(fcAB>llab){// point c is closer to point b\nvar xbc=xac-xab;var ybc=yac-yab;return xbc*xbc+ybc*ybc;}else{// perpendicular distance is the shortest\nvar crossProduct=xac*yab-yac*xab;return crossProduct*crossProduct/llab;}}// a very short-term cache for getTextLocation, just because\n// we're often looping over the same locations multiple times\n// invalidated as soon as we look at a different path\nvar locationCache,workingPath,workingTextWidth;// turn a path and position along it into x, y, and angle for the given text\nexports.getTextLocation=function getTextLocation(path,totalPathLen,positionOnPath,textWidth){if(path!==workingPath||textWidth!==workingTextWidth){locationCache={};workingPath=path;workingTextWidth=textWidth;}if(locationCache[positionOnPath]){return locationCache[positionOnPath];}// for the angle, use points on the path separated by the text width\n// even though due to curvature, the text will cover a bit more than that\nvar p0=path.getPointAtLength(mod(positionOnPath-textWidth/2,totalPathLen));var p1=path.getPointAtLength(mod(positionOnPath+textWidth/2,totalPathLen));// note: atan handles 1/0 nicely\nvar theta=Math.atan((p1.y-p0.y)/(p1.x-p0.x));// center the text at 2/3 of the center position plus 1/3 the p0/p1 midpoint\n// that's the average position of this segment, assuming it's roughly quadratic\nvar pCenter=path.getPointAtLength(mod(positionOnPath,totalPathLen));var x=(pCenter.x*4+p0.x+p1.x)/6;var y=(pCenter.y*4+p0.y+p1.y)/6;var out={x:x,y:y,theta:theta};locationCache[positionOnPath]=out;return out;};exports.clearLocationCache=function(){workingPath=null;};/*\n * Find the segment of `path` that's within the visible area\n * given by `bounds` {left, right, top, bottom}, to within a\n * precision of `buffer` px\n *\n * returns: undefined if nothing is visible, else object:\n * {\n *   min: position where the path first enters bounds, or 0 if it\n *        starts within bounds\n *   max: position where the path last exits bounds, or the path length\n *        if it finishes within bounds\n *   len: max - min, ie the length of visible path\n *   total: the total path length - just included so the caller doesn't\n *        need to call path.getTotalLength() again\n *   isClosed: true iff the start and end points of the path are both visible\n *        and are at the same point\n * }\n *\n * Works by starting from either end and repeatedly finding the distance from\n * that point to the plot area, and if it's outside the plot, moving along the\n * path by that distance (because the plot must be at least that far away on\n * the path). Note that if a path enters, exits, and re-enters the plot, we\n * will not capture this behavior.\n */exports.getVisibleSegment=function getVisibleSegment(path,bounds,buffer){var left=bounds.left;var right=bounds.right;var top=bounds.top;var bottom=bounds.bottom;var pMin=0;var pTotal=path.getTotalLength();var pMax=pTotal;var pt0,ptTotal;function getDistToPlot(len){var pt=path.getPointAtLength(len);// hold on to the start and end points for `closed`\nif(len===0)pt0=pt;else if(len===pTotal)ptTotal=pt;var dx=pt.x<left?left-pt.x:pt.x>right?pt.x-right:0;var dy=pt.y<top?top-pt.y:pt.y>bottom?pt.y-bottom:0;return Math.sqrt(dx*dx+dy*dy);}var distToPlot=getDistToPlot(pMin);while(distToPlot){pMin+=distToPlot+buffer;if(pMin>pMax)return;distToPlot=getDistToPlot(pMin);}distToPlot=getDistToPlot(pMax);while(distToPlot){pMax-=distToPlot+buffer;if(pMin>pMax)return;distToPlot=getDistToPlot(pMax);}return{min:pMin,max:pMax,len:pMax-pMin,total:pTotal,isClosed:pMin===0&&pMax===pTotal&&Math.abs(pt0.x-ptTotal.x)<0.1&&Math.abs(pt0.y-ptTotal.y)<0.1};};/**\n * Find point on SVG path corresponding to a given constraint coordinate\n *\n * @param {SVGPathElement} path\n * @param {Number} val : constraint coordinate value\n * @param {String} coord : 'x' or 'y' the constraint coordinate\n * @param {Object} opts :\n *  - {Number} pathLength : supply total path length before hand\n *  - {Number} tolerance\n *  - {Number} iterationLimit\n * @return {SVGPoint}\n */exports.findPointOnPath=function findPointOnPath(path,val,coord,opts){opts=opts||{};var pathLength=opts.pathLength||path.getTotalLength();var tolerance=opts.tolerance||1e-3;var iterationLimit=opts.iterationLimit||30;// if path starts at a val greater than the path tail (like on vertical violins),\n// we must flip the sign of the computed diff.\nvar mul=path.getPointAtLength(0)[coord]>path.getPointAtLength(pathLength)[coord]?-1:1;var i=0;var b0=0;var b1=pathLength;var mid;var pt;var diff;while(i<iterationLimit){mid=(b0+b1)/2;pt=path.getPointAtLength(mid);diff=pt[coord]-val;if(Math.abs(diff)<tolerance){return pt;}else{if(mul*diff>0){b1=mid;}else{b0=mid;}i++;}}return pt;};},{\"./mod\":430}],420:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/**\n * Allow referencing a graph DOM element either directly\n * or by its id string\n *\n * @param {HTMLDivElement|string} gd: a graph element or its id\n *\n * @returns {HTMLDivElement} the DOM element of the graph\n */module.exports=function(gd){var gdElement;if(typeof gd==='string'){gdElement=document.getElementById(gd);if(gdElement===null){throw new Error('No DOM element with id \\''+gd+'\\' exists on the page.');}return gdElement;}else if(gd===null||gd===undefined){throw new Error('DOM element provided is null or undefined');}return gd;// otherwise assume that gd is a DOM element\n};},{}],421:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var tinycolor=_dereq_('tinycolor2');var rgba=_dereq_('color-normalize');var Colorscale=_dereq_('../components/colorscale');var colorDflt=_dereq_('../components/color/attributes').defaultLine;var isArrayOrTypedArray=_dereq_('./array').isArrayOrTypedArray;var colorDfltRgba=rgba(colorDflt);var opacityDflt=1;function calculateColor(colorIn,opacityIn){var colorOut=colorIn;colorOut[3]*=opacityIn;return colorOut;}function validateColor(colorIn){if(isNumeric(colorIn))return colorDfltRgba;var colorOut=rgba(colorIn);return colorOut.length?colorOut:colorDfltRgba;}function validateOpacity(opacityIn){return isNumeric(opacityIn)?opacityIn:opacityDflt;}function formatColor(containerIn,opacityIn,len){var colorIn=containerIn.color;var isArrayColorIn=isArrayOrTypedArray(colorIn);var isArrayOpacityIn=isArrayOrTypedArray(opacityIn);var colorOut=[];var sclFunc,getColor,getOpacity,colori,opacityi;if(containerIn.colorscale!==undefined){sclFunc=Colorscale.makeColorScaleFunc(Colorscale.extractScale(containerIn,{cLetter:'c'}));}else{sclFunc=validateColor;}if(isArrayColorIn){getColor=function getColor(c,i){// FIXME: there is double work, considering that sclFunc does the opposite\nreturn c[i]===undefined?colorDfltRgba:rgba(sclFunc(c[i]));};}else getColor=validateColor;if(isArrayOpacityIn){getOpacity=function getOpacity(o,i){return o[i]===undefined?opacityDflt:validateOpacity(o[i]);};}else getOpacity=validateOpacity;if(isArrayColorIn||isArrayOpacityIn){for(var i=0;i<len;i++){colori=getColor(colorIn,i);opacityi=getOpacity(opacityIn,i);colorOut[i]=calculateColor(colori,opacityi);}}else colorOut=calculateColor(rgba(colorIn),opacityIn);return colorOut;}function parseColorScale(cont,alpha){if(alpha===undefined)alpha=1;var colorscale=cont.reversescale?Colorscale.flipScale(cont.colorscale):cont.colorscale;return colorscale.map(function(elem){var index=elem[0];var color=tinycolor(elem[1]);var rgb=color.toRgb();return{index:index,rgb:[rgb.r,rgb.g,rgb.b,alpha]};});}module.exports={formatColor:formatColor,parseColorScale:parseColorScale};},{\"../components/color/attributes\":298,\"../components/colorscale\":311,\"./array\":409,\"color-normalize\":54,\"fast-isnumeric\":80,\"tinycolor2\":264}],422:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';// Simple helper functions\n// none of these need any external deps\nmodule.exports=function identity(d){return d;};},{}],423:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var isNumeric=_dereq_('fast-isnumeric');var numConstants=_dereq_('../constants/numerical');var FP_SAFE=numConstants.FP_SAFE;var BADNUM=numConstants.BADNUM;var lib=module.exports={};lib.nestedProperty=_dereq_('./nested_property');lib.keyedContainer=_dereq_('./keyed_container');lib.relativeAttr=_dereq_('./relative_attr');lib.isPlainObject=_dereq_('./is_plain_object');lib.toLogRange=_dereq_('./to_log_range');lib.relinkPrivateKeys=_dereq_('./relink_private');var arrayModule=_dereq_('./array');lib.isTypedArray=arrayModule.isTypedArray;lib.isArrayOrTypedArray=arrayModule.isArrayOrTypedArray;lib.isArray1D=arrayModule.isArray1D;lib.ensureArray=arrayModule.ensureArray;lib.concat=arrayModule.concat;lib.maxRowLength=arrayModule.maxRowLength;lib.minRowLength=arrayModule.minRowLength;var modModule=_dereq_('./mod');lib.mod=modModule.mod;lib.modHalf=modModule.modHalf;var coerceModule=_dereq_('./coerce');lib.valObjectMeta=coerceModule.valObjectMeta;lib.coerce=coerceModule.coerce;lib.coerce2=coerceModule.coerce2;lib.coerceFont=coerceModule.coerceFont;lib.coerceHoverinfo=coerceModule.coerceHoverinfo;lib.coerceSelectionMarkerOpacity=coerceModule.coerceSelectionMarkerOpacity;lib.validate=coerceModule.validate;var datesModule=_dereq_('./dates');lib.dateTime2ms=datesModule.dateTime2ms;lib.isDateTime=datesModule.isDateTime;lib.ms2DateTime=datesModule.ms2DateTime;lib.ms2DateTimeLocal=datesModule.ms2DateTimeLocal;lib.cleanDate=datesModule.cleanDate;lib.isJSDate=datesModule.isJSDate;lib.formatDate=datesModule.formatDate;lib.incrementMonth=datesModule.incrementMonth;lib.dateTick0=datesModule.dateTick0;lib.dfltRange=datesModule.dfltRange;lib.findExactDates=datesModule.findExactDates;lib.MIN_MS=datesModule.MIN_MS;lib.MAX_MS=datesModule.MAX_MS;var searchModule=_dereq_('./search');lib.findBin=searchModule.findBin;lib.sorterAsc=searchModule.sorterAsc;lib.sorterDes=searchModule.sorterDes;lib.distinctVals=searchModule.distinctVals;lib.roundUp=searchModule.roundUp;lib.sort=searchModule.sort;lib.findIndexOfMin=searchModule.findIndexOfMin;var statsModule=_dereq_('./stats');lib.aggNums=statsModule.aggNums;lib.len=statsModule.len;lib.mean=statsModule.mean;lib.midRange=statsModule.midRange;lib.variance=statsModule.variance;lib.stdev=statsModule.stdev;lib.interp=statsModule.interp;var matrixModule=_dereq_('./matrix');lib.init2dArray=matrixModule.init2dArray;lib.transposeRagged=matrixModule.transposeRagged;lib.dot=matrixModule.dot;lib.translationMatrix=matrixModule.translationMatrix;lib.rotationMatrix=matrixModule.rotationMatrix;lib.rotationXYMatrix=matrixModule.rotationXYMatrix;lib.apply2DTransform=matrixModule.apply2DTransform;lib.apply2DTransform2=matrixModule.apply2DTransform2;var anglesModule=_dereq_('./angles');lib.deg2rad=anglesModule.deg2rad;lib.rad2deg=anglesModule.rad2deg;lib.angleDelta=anglesModule.angleDelta;lib.angleDist=anglesModule.angleDist;lib.isFullCircle=anglesModule.isFullCircle;lib.isAngleInsideSector=anglesModule.isAngleInsideSector;lib.isPtInsideSector=anglesModule.isPtInsideSector;lib.pathArc=anglesModule.pathArc;lib.pathSector=anglesModule.pathSector;lib.pathAnnulus=anglesModule.pathAnnulus;var anchorUtils=_dereq_('./anchor_utils');lib.isLeftAnchor=anchorUtils.isLeftAnchor;lib.isCenterAnchor=anchorUtils.isCenterAnchor;lib.isRightAnchor=anchorUtils.isRightAnchor;lib.isTopAnchor=anchorUtils.isTopAnchor;lib.isMiddleAnchor=anchorUtils.isMiddleAnchor;lib.isBottomAnchor=anchorUtils.isBottomAnchor;var geom2dModule=_dereq_('./geometry2d');lib.segmentsIntersect=geom2dModule.segmentsIntersect;lib.segmentDistance=geom2dModule.segmentDistance;lib.getTextLocation=geom2dModule.getTextLocation;lib.clearLocationCache=geom2dModule.clearLocationCache;lib.getVisibleSegment=geom2dModule.getVisibleSegment;lib.findPointOnPath=geom2dModule.findPointOnPath;var extendModule=_dereq_('./extend');lib.extendFlat=extendModule.extendFlat;lib.extendDeep=extendModule.extendDeep;lib.extendDeepAll=extendModule.extendDeepAll;lib.extendDeepNoArrays=extendModule.extendDeepNoArrays;var loggersModule=_dereq_('./loggers');lib.log=loggersModule.log;lib.warn=loggersModule.warn;lib.error=loggersModule.error;var regexModule=_dereq_('./regex');lib.counterRegex=regexModule.counter;var throttleModule=_dereq_('./throttle');lib.throttle=throttleModule.throttle;lib.throttleDone=throttleModule.done;lib.clearThrottle=throttleModule.clear;lib.getGraphDiv=_dereq_('./get_graph_div');lib.clearResponsive=_dereq_('./clear_responsive');lib.makeTraceGroups=_dereq_('./make_trace_groups');lib._=_dereq_('./localize');lib.notifier=_dereq_('./notifier');lib.filterUnique=_dereq_('./filter_unique');lib.filterVisible=_dereq_('./filter_visible');lib.pushUnique=_dereq_('./push_unique');lib.cleanNumber=_dereq_('./clean_number');lib.ensureNumber=function num(v){if(!isNumeric(v))return BADNUM;v=Number(v);if(v<-FP_SAFE||v>FP_SAFE)return BADNUM;return isNumeric(v)?Number(v):BADNUM;};/**\n * Is v a valid array index? Accepts numeric strings as well as numbers.\n *\n * @param {any} v: the value to test\n * @param {Optional[integer]} len: the array length we are indexing\n *\n * @return {bool}: v is a valid array index\n */lib.isIndex=function(v,len){if(len!==undefined&&v>=len)return false;return isNumeric(v)&&v>=0&&v%1===0;};lib.noop=_dereq_('./noop');lib.identity=_dereq_('./identity');/**\n * create an array of length 'cnt' filled with 'v' at all indices\n *\n * @param {any} v\n * @param {number} cnt\n * @return {array}\n */lib.repeat=function(v,cnt){var out=new Array(cnt);for(var i=0;i<cnt;i++){out[i]=v;}return out;};/**\n * swap x and y of the same attribute in container cont\n * specify attr with a ? in place of x/y\n * you can also swap other things than x/y by providing part1 and part2\n */lib.swapAttrs=function(cont,attrList,part1,part2){if(!part1)part1='x';if(!part2)part2='y';for(var i=0;i<attrList.length;i++){var attr=attrList[i];var xp=lib.nestedProperty(cont,attr.replace('?',part1));var yp=lib.nestedProperty(cont,attr.replace('?',part2));var temp=xp.get();xp.set(yp.get());yp.set(temp);}};/**\n * SVG painter's algo worked around with reinsertion\n */lib.raiseToTop=function raiseToTop(elem){elem.parentNode.appendChild(elem);};/**\n * cancel a possibly pending transition; returned selection may be used by caller\n */lib.cancelTransition=function(selection){return selection.transition().duration(0);};// constrain - restrict a number v to be between v0 and v1\nlib.constrain=function(v,v0,v1){if(v0>v1)return Math.max(v1,Math.min(v0,v));return Math.max(v0,Math.min(v1,v));};/**\n * do two bounding boxes from getBoundingClientRect,\n * ie {left,right,top,bottom,width,height}, overlap?\n * takes optional padding pixels\n */lib.bBoxIntersect=function(a,b,pad){pad=pad||0;return a.left<=b.right+pad&&b.left<=a.right+pad&&a.top<=b.bottom+pad&&b.top<=a.bottom+pad;};/*\n * simpleMap: alternative to Array.map that only\n * passes on the element and up to 2 extra args you\n * provide (but not the array index or the whole array)\n *\n * array: the array to map it to\n * func: the function to apply\n * x1, x2: optional extra args\n */lib.simpleMap=function(array,func,x1,x2){var len=array.length;var out=new Array(len);for(var i=0;i<len;i++){out[i]=func(array[i],x1,x2);}return out;};/**\n * Random string generator\n *\n * @param {object} existing\n *     pass in strings to avoid as keys with truthy values\n * @param {int} bits\n *     bits of information in the output string, default 24\n * @param {int} base\n *     base of string representation, default 16. Should be a power of 2.\n */lib.randstr=function randstr(existing,bits,base,_recursion){if(!base)base=16;if(bits===undefined)bits=24;if(bits<=0)return'0';var digits=Math.log(Math.pow(2,bits))/Math.log(base);var res='';var i,b,x;for(i=2;digits===Infinity;i*=2){digits=Math.log(Math.pow(2,bits/i))/Math.log(base)*i;}var rem=digits-Math.floor(digits);for(i=0;i<Math.floor(digits);i++){x=Math.floor(Math.random()*base).toString(base);res=x+res;}if(rem){b=Math.pow(base,rem);x=Math.floor(Math.random()*b).toString(base);res=x+res;}var parsed=parseInt(res,base);if(existing&&existing[res]||parsed!==Infinity&&parsed>=Math.pow(2,bits)){if(_recursion>10){lib.warn('randstr failed uniqueness');return res;}return randstr(existing,bits,base,(_recursion||0)+1);}else return res;};lib.OptionControl=function(opt,optname){/*\n     * An environment to contain all option setters and\n     * getters that collectively modify opts.\n     *\n     * You can call up opts from any function in new object\n     * as this.optname || this.opt\n     *\n     * See FitOpts for example of usage\n     */if(!opt)opt={};if(!optname)optname='opt';var self={};self.optionList=[];self._newoption=function(optObj){optObj[optname]=opt;self[optObj.name]=optObj;self.optionList.push(optObj);};self['_'+optname]=opt;return self;};/**\n * lib.smooth: smooth arrayIn by convolving with\n * a hann window with given full width at half max\n * bounce the ends in, so the output has the same length as the input\n */lib.smooth=function(arrayIn,FWHM){FWHM=Math.round(FWHM)||0;// only makes sense for integers\nif(FWHM<2)return arrayIn;var alen=arrayIn.length;var alen2=2*alen;var wlen=2*FWHM-1;var w=new Array(wlen);var arrayOut=new Array(alen);var i;var j;var k;var v;// first make the window array\nfor(i=0;i<wlen;i++){w[i]=(1-Math.cos(Math.PI*(i+1)/FWHM))/(2*FWHM);}// now do the convolution\nfor(i=0;i<alen;i++){v=0;for(j=0;j<wlen;j++){k=i+j+1-FWHM;// multibounce\nif(k<-alen)k-=alen2*Math.round(k/alen2);else if(k>=alen2)k-=alen2*Math.floor(k/alen2);// single bounce\nif(k<0)k=-1-k;else if(k>=alen)k=alen2-1-k;v+=arrayIn[k]*w[j];}arrayOut[i]=v;}return arrayOut;};/**\n * syncOrAsync: run a sequence of functions synchronously\n * as long as its returns are not promises (ie have no .then)\n * includes one argument arg to send to all functions...\n * this is mainly just to prevent us having to make wrapper functions\n * when the only purpose of the wrapper is to reference gd\n * and a final step to be executed at the end\n * TODO: if there's an error and everything is sync,\n * this doesn't happen yet because we want to make sure\n * that it gets reported\n */lib.syncOrAsync=function(sequence,arg,finalStep){var ret,fni;function continueAsync(){return lib.syncOrAsync(sequence,arg,finalStep);}while(sequence.length){fni=sequence.splice(0,1)[0];ret=fni(arg);if(ret&&ret.then){return ret.then(continueAsync).then(undefined,lib.promiseError);}}return finalStep&&finalStep(arg);};/**\n * Helper to strip trailing slash, from\n * http://stackoverflow.com/questions/6680825/return-string-without-trailing-slash\n */lib.stripTrailingSlash=function(str){if(str.substr(-1)==='/')return str.substr(0,str.length-1);return str;};lib.noneOrAll=function(containerIn,containerOut,attrList){/**\n     * some attributes come together, so if you have one of them\n     * in the input, you should copy the default values of the others\n     * to the input as well.\n     */if(!containerIn)return;var hasAny=false;var hasAll=true;var i;var val;for(i=0;i<attrList.length;i++){val=containerIn[attrList[i]];if(val!==undefined&&val!==null)hasAny=true;else hasAll=false;}if(hasAny&&!hasAll){for(i=0;i<attrList.length;i++){containerIn[attrList[i]]=containerOut[attrList[i]];}}};/** merges calcdata field (given by cdAttr) with traceAttr values\n *\n * N.B. Loop over minimum of cd.length and traceAttr.length\n * i.e. it does not try to fill in beyond traceAttr.length-1\n *\n * @param {array} traceAttr : trace attribute\n * @param {object} cd : calcdata trace\n * @param {string} cdAttr : calcdata key\n */lib.mergeArray=function(traceAttr,cd,cdAttr){if(lib.isArrayOrTypedArray(traceAttr)){var imax=Math.min(traceAttr.length,cd.length);for(var i=0;i<imax;i++){cd[i][cdAttr]=traceAttr[i];}}};/** fills calcdata field (given by cdAttr) with traceAttr values\n *  or function of traceAttr values (e.g. some fallback)\n *\n * N.B. Loops over all cd items.\n *\n * @param {array} traceAttr : trace attribute\n * @param {object} cd : calcdata trace\n * @param {string} cdAttr : calcdata key\n * @param {function} [fn] : optional function to apply to each array item\n */lib.fillArray=function(traceAttr,cd,cdAttr,fn){fn=fn||lib.identity;if(lib.isArrayOrTypedArray(traceAttr)){for(var i=0;i<cd.length;i++){cd[i][cdAttr]=fn(traceAttr[i]);}}};/** Handler for trace-wide vs per-point options\n *\n * @param {object} trace : (full) trace object\n * @param {number} ptNumber : index of the point in question\n * @param {string} astr : attribute string\n * @param {function} [fn] : optional function to apply to each array item\n *\n * @return {any}\n */lib.castOption=function(trace,ptNumber,astr,fn){fn=fn||lib.identity;var val=lib.nestedProperty(trace,astr).get();if(lib.isArrayOrTypedArray(val)){if(Array.isArray(ptNumber)&&lib.isArrayOrTypedArray(val[ptNumber[0]])){return fn(val[ptNumber[0]][ptNumber[1]]);}else{return fn(val[ptNumber]);}}else{return val;}};/** Extract option from calcdata item, correctly falling back to\n *  trace value if not found.\n *\n *  @param {object} calcPt : calcdata[i][j] item\n *  @param {object} trace : (full) trace object\n *  @param {string} calcKey : calcdata key\n *  @param {string} traceKey : aka trace attribute string\n *  @return {any}\n */lib.extractOption=function(calcPt,trace,calcKey,traceKey){if(calcKey in calcPt)return calcPt[calcKey];// fallback to trace value,\n//   must check if value isn't itself an array\n//   which means the trace attribute has a corresponding\n//   calcdata key, but its value is falsy\nvar traceVal=lib.nestedProperty(trace,traceKey).get();if(!Array.isArray(traceVal))return traceVal;};function makePtIndex2PtNumber(indexToPoints){var ptIndex2ptNumber={};for(var k in indexToPoints){var pts=indexToPoints[k];for(var j=0;j<pts.length;j++){ptIndex2ptNumber[pts[j]]=+k;}}return ptIndex2ptNumber;}/** Tag selected calcdata items\n *\n * N.B. note that point 'index' corresponds to input data array index\n *  whereas 'number' is its post-transform version.\n *\n * @param {array} calcTrace\n * @param {object} trace\n *  - selectedpoints {array}\n *  - _indexToPoints {object}\n * @param {ptNumber2cdIndex} ptNumber2cdIndex (optional)\n *  optional map object for trace types that do not have 1-to-1 point number to\n *  calcdata item index correspondence (e.g. histogram)\n */lib.tagSelected=function(calcTrace,trace,ptNumber2cdIndex){var selectedpoints=trace.selectedpoints;var indexToPoints=trace._indexToPoints;var ptIndex2ptNumber;// make pt index-to-number map object, which takes care of transformed traces\nif(indexToPoints){ptIndex2ptNumber=makePtIndex2PtNumber(indexToPoints);}function isCdIndexValid(v){return v!==undefined&&v<calcTrace.length;}for(var i=0;i<selectedpoints.length;i++){var ptIndex=selectedpoints[i];if(lib.isIndex(ptIndex)){var ptNumber=ptIndex2ptNumber?ptIndex2ptNumber[ptIndex]:ptIndex;var cdIndex=ptNumber2cdIndex?ptNumber2cdIndex[ptNumber]:ptNumber;if(isCdIndexValid(cdIndex)){calcTrace[cdIndex].selected=1;}}}};lib.selIndices2selPoints=function(trace){var selectedpoints=trace.selectedpoints;var indexToPoints=trace._indexToPoints;if(indexToPoints){var ptIndex2ptNumber=makePtIndex2PtNumber(indexToPoints);var out=[];for(var i=0;i<selectedpoints.length;i++){var ptIndex=selectedpoints[i];if(lib.isIndex(ptIndex)){var ptNumber=ptIndex2ptNumber[ptIndex];if(lib.isIndex(ptNumber)){out.push(ptNumber);}}}return out;}else{return selectedpoints;}};/** Returns target as set by 'target' transform attribute\n *\n * @param {object} trace : full trace object\n * @param {object} transformOpts : transform option object\n *  - target (string} :\n *      either an attribute string referencing an array in the trace object, or\n *      a set array.\n *\n * @return {array or false} : the target array (NOT a copy!!) or false if invalid\n */lib.getTargetArray=function(trace,transformOpts){var target=transformOpts.target;if(typeof target==='string'&&target){var array=lib.nestedProperty(trace,target).get();return Array.isArray(array)?array:false;}else if(Array.isArray(target)){return target;}return false;};/**\n * modified version of jQuery's extend to strip out private objs and functions,\n * and cut arrays down to first <arraylen> or 1 elements\n * because extend-like algorithms are hella slow\n * obj2 is assumed to already be clean of these things (including no arrays)\n */lib.minExtend=function(obj1,obj2){var objOut={};if(_typeof(obj2)!=='object')obj2={};var arrayLen=3;var keys=Object.keys(obj1);var i,k,v;for(i=0;i<keys.length;i++){k=keys[i];v=obj1[k];if(k.charAt(0)==='_'||typeof v==='function')continue;else if(k==='module')objOut[k]=v;else if(Array.isArray(v)){if(k==='colorscale'){objOut[k]=v.slice();}else{objOut[k]=v.slice(0,arrayLen);}}else if(v&&_typeof(v)==='object')objOut[k]=lib.minExtend(obj1[k],obj2[k]);else objOut[k]=v;}keys=Object.keys(obj2);for(i=0;i<keys.length;i++){k=keys[i];v=obj2[k];if(_typeof(v)!=='object'||!(k in objOut)||_typeof(objOut[k])!=='object'){objOut[k]=v;}}return objOut;};lib.titleCase=function(s){return s.charAt(0).toUpperCase()+s.substr(1);};lib.containsAny=function(s,fragments){for(var i=0;i<fragments.length;i++){if(s.indexOf(fragments[i])!==-1)return true;}return false;};lib.isPlotDiv=function(el){var el3=d3.select(el);return el3.node()instanceof HTMLElement&&el3.size()&&el3.classed('js-plotly-plot');};lib.removeElement=function(el){var elParent=el&&el.parentNode;if(elParent)elParent.removeChild(el);};/**\n * for dynamically adding style rules\n * makes one stylesheet that contains all rules added\n * by all calls to this function\n */lib.addStyleRule=function(selector,styleString){lib.addRelatedStyleRule('global',selector,styleString);};/**\n * for dynamically adding style rules\n * to a stylesheet uniquely identified by a uid\n */lib.addRelatedStyleRule=function(uid,selector,styleString){var id='plotly.js-style-'+uid;var style=document.getElementById(id);if(!style){style=document.createElement('style');style.setAttribute('id',id);// WebKit hack :(\nstyle.appendChild(document.createTextNode(''));document.head.appendChild(style);}var styleSheet=style.sheet;if(styleSheet.insertRule){styleSheet.insertRule(selector+'{'+styleString+'}',0);}else if(styleSheet.addRule){styleSheet.addRule(selector,styleString,0);}else lib.warn('addStyleRule failed');};/**\n * to remove from the page a stylesheet identified by a given uid\n */lib.deleteRelatedStyleRule=function(uid){var id='plotly.js-style-'+uid;var style=document.getElementById(id);if(style)lib.removeElement(style);};lib.isIE=function(){return typeof window.navigator.msSaveBlob!=='undefined';};/**\n * Duck typing to recognize a d3 selection, mostly for IE9's benefit\n * because it doesn't handle instanceof like modern browsers\n */lib.isD3Selection=function(obj){return obj&&typeof obj.classed==='function';};/**\n * Append element to DOM only if not present.\n *\n * @param {d3 selection} parent : parent selection of the element in question\n * @param {string} nodeType : node type of element to append\n * @param {string} className (optional) : class name of element in question\n * @param {fn} enterFn (optional) : optional fn applied to entering elements only\n * @return {d3 selection} selection of new layer\n *\n * Previously, we were using the following pattern:\n *\n * ```\n * var sel = parent.selectAll('.' + className)\n *     .data([0]);\n *\n * sel.enter().append(nodeType)\n *     .classed(className, true);\n *\n * return sel;\n * ```\n *\n * in numerous places in our codebase to achieve the same behavior.\n *\n * The logic below performs much better, mostly as we are using\n * `.select` instead `.selectAll` that is `querySelector` instead of\n * `querySelectorAll`.\n *\n */lib.ensureSingle=function(parent,nodeType,className,enterFn){var sel=parent.select(nodeType+(className?'.'+className:''));if(sel.size())return sel;var layer=parent.append(nodeType);if(className)layer.classed(className,true);if(enterFn)layer.call(enterFn);return layer;};/**\n * Same as Lib.ensureSingle, but using id as selector.\n * This version is mostly used for clipPath nodes.\n *\n * @param {d3 selection} parent : parent selection of the element in question\n * @param {string} nodeType : node type of element to append\n * @param {string} id : id of element in question\n * @param {fn} enterFn (optional) : optional fn applied to entering elements only\n * @return {d3 selection} selection of new layer\n */lib.ensureSingleById=function(parent,nodeType,id,enterFn){var sel=parent.select(nodeType+'#'+id);if(sel.size())return sel;var layer=parent.append(nodeType).attr('id',id);if(enterFn)layer.call(enterFn);return layer;};/**\n * Converts a string path to an object.\n *\n * When given a string containing an array element, it will create a `null`\n * filled array of the given size.\n *\n * @example\n * lib.objectFromPath('nested.test[2].path', 'value');\n * // returns { nested: { test: [null, null, { path: 'value' }]}\n *\n * @param   {string}    path to nested value\n * @param   {*}         any value to be set\n *\n * @return {Object} the constructed object with a full nested path\n */lib.objectFromPath=function(path,value){var keys=path.split('.');var tmpObj;var obj=tmpObj={};for(var i=0;i<keys.length;i++){var key=keys[i];var el=null;var parts=keys[i].match(/(.*)\\[([0-9]+)\\]/);if(parts){key=parts[1];el=parts[2];tmpObj=tmpObj[key]=[];if(i===keys.length-1){tmpObj[el]=value;}else{tmpObj[el]={};}tmpObj=tmpObj[el];}else{if(i===keys.length-1){tmpObj[key]=value;}else{tmpObj[key]={};}tmpObj=tmpObj[key];}}return obj;};/**\n * Iterate through an object in-place, converting dotted properties to objects.\n *\n * Examples:\n *\n *   lib.expandObjectPaths({'nested.test.path': 'value'});\n *     => { nested: { test: {path: 'value'}}}\n *\n * It also handles array notation, e.g.:\n *\n *   lib.expandObjectPaths({'foo[1].bar': 'value'});\n *     => { foo: [null, {bar: value}] }\n *\n * It handles merges the results when two properties are specified in parallel:\n *\n *   lib.expandObjectPaths({'foo[1].bar': 10, 'foo[0].bar': 20});\n *     => { foo: [{bar: 10}, {bar: 20}] }\n *\n * It does NOT, however, merge mulitple mutliply-nested arrays::\n *\n *   lib.expandObjectPaths({'marker[1].range[1]': 5, 'marker[1].range[0]': 4})\n *     => { marker: [null, {range: 4}] }\n */ // Store this to avoid recompiling regex on *every* prop since this may happen many\n// many times for animations. Could maybe be inside the function. Not sure about\n// scoping vs. recompilation tradeoff, but at least it's not just inlining it into\n// the inner loop.\nvar dottedPropertyRegex=/^([^\\[\\.]+)\\.(.+)?/;var indexedPropertyRegex=/^([^\\.]+)\\[([0-9]+)\\](\\.)?(.+)?/;lib.expandObjectPaths=function(data){var match,key,prop,datum,idx,dest,trailingPath;if(_typeof(data)==='object'&&!Array.isArray(data)){for(key in data){if(data.hasOwnProperty(key)){if(match=key.match(dottedPropertyRegex)){datum=data[key];prop=match[1];delete data[key];data[prop]=lib.extendDeepNoArrays(data[prop]||{},lib.objectFromPath(key,lib.expandObjectPaths(datum))[prop]);}else if(match=key.match(indexedPropertyRegex)){datum=data[key];prop=match[1];idx=parseInt(match[2]);delete data[key];data[prop]=data[prop]||[];if(match[3]==='.'){// This is the case where theere are subsequent properties into which\n// we must recurse, e.g. transforms[0].value\ntrailingPath=match[4];dest=data[prop][idx]=data[prop][idx]||{};// NB: Extend deep no arrays prevents this from working on multiple\n// nested properties in the same object, e.g.\n//\n// {\n//   foo[0].bar[1].range\n//   foo[0].bar[0].range\n// }\n//\n// In this case, the extendDeepNoArrays will overwrite one array with\n// the other, so that both properties *will not* be present in the\n// result. Fixing this would require a more intelligent tracking\n// of changes and merging than extendDeepNoArrays currently accomplishes.\nlib.extendDeepNoArrays(dest,lib.objectFromPath(trailingPath,lib.expandObjectPaths(datum)));}else{// This is the case where this property is the end of the line,\n// e.g. xaxis.range[0]\ndata[prop][idx]=lib.expandObjectPaths(datum);}}else{data[key]=lib.expandObjectPaths(data[key]);}}}}return data;};/**\n * Converts value to string separated by the provided separators.\n *\n * @example\n * lib.numSeparate(2016, '.,');\n * // returns '2016'\n *\n * @example\n * lib.numSeparate(3000, '.,', true);\n * // returns '3,000'\n *\n * @example\n * lib.numSeparate(1234.56, '|,')\n * // returns '1,234|56'\n *\n * @param   {string|number} value       the value to be converted\n * @param   {string}    separators  string of decimal, then thousands separators\n * @param   {boolean}    separatethousands  boolean, 4-digit integers are separated if true\n *\n * @return  {string}    the value that has been separated\n */lib.numSeparate=function(value,separators,separatethousands){if(!separatethousands)separatethousands=false;if(typeof separators!=='string'||separators.length===0){throw new Error('Separator string required for formatting!');}if(typeof value==='number'){value=String(value);}var thousandsRe=/(\\d+)(\\d{3})/;var decimalSep=separators.charAt(0);var thouSep=separators.charAt(1);var x=value.split('.');var x1=x[0];var x2=x.length>1?decimalSep+x[1]:'';// Years are ignored for thousands separators\nif(thouSep&&(x.length>1||x1.length>4||separatethousands)){while(thousandsRe.test(x1)){x1=x1.replace(thousandsRe,'$1'+thouSep+'$2');}}return x1+x2;};var TEMPLATE_STRING_REGEX=/%{([^\\s%{}:]*)(:[^}]*)?}/g;var SIMPLE_PROPERTY_REGEX=/^\\w*$/;/**\n * Substitute values from an object into a string\n *\n * Examples:\n *  Lib.templateString('name: %{trace}', {trace: 'asdf'}) --\x3e 'name: asdf'\n *  Lib.templateString('name: %{trace[0].name}', {trace: [{name: 'asdf'}]}) --\x3e 'name: asdf'\n *\n * @param {string}  input string containing %{...} template strings\n * @param {obj}     data object containing substitution values\n *\n * @return {string} templated string\n */lib.templateString=function(string,obj){// Not all that useful, but cache nestedProperty instantiation\n// just in case it speeds things up *slightly*:\nvar getterCache={};return string.replace(TEMPLATE_STRING_REGEX,function(dummy,key){if(SIMPLE_PROPERTY_REGEX.test(key)){return obj[key]||'';}getterCache[key]=getterCache[key]||lib.nestedProperty(obj,key).get;return getterCache[key]()||'';});};var TEMPLATE_STRING_FORMAT_SEPARATOR=/^:/;var numberOfHoverTemplateWarnings=0;var maximumNumberOfHoverTemplateWarnings=10;/**\n * Substitute values from an object into a string and optionally formats them using d3-format,\n * or fallback to associated labels.\n *\n * Examples:\n *  Lib.templateString('name: %{trace}', {trace: 'asdf'}) --\x3e 'name: asdf'\n *  Lib.templateString('name: %{trace[0].name}', {trace: [{name: 'asdf'}]}) --\x3e 'name: asdf'\n *  Lib.templateString('price: %{y:$.2f}', {y: 1}) --\x3e 'price: $1.00'\n *\n * @param {string}  input string containing %{...:...} template strings\n * @param {obj}     data object containing fallback text when no formatting is specified, ex.: {yLabel: 'formattedYValue'}\n * @param {obj}     data objects containing substitution values\n *\n * @return {string} templated string\n */lib.hovertemplateString=function(string,labels){var args=arguments;// Not all that useful, but cache nestedProperty instantiation\n// just in case it speeds things up *slightly*:\nvar getterCache={};return string.replace(TEMPLATE_STRING_REGEX,function(match,key,format){var obj,value,i;for(i=2;i<args.length;i++){obj=args[i];if(obj.hasOwnProperty(key)){value=obj[key];break;}if(!SIMPLE_PROPERTY_REGEX.test(key)){value=getterCache[key]||lib.nestedProperty(obj,key).get();if(value)getterCache[key]=value;}if(value!==undefined)break;}if(value===undefined){if(numberOfHoverTemplateWarnings<maximumNumberOfHoverTemplateWarnings){lib.warn('Variable \\''+key+'\\' in hovertemplate could not be found!');value=match;}if(numberOfHoverTemplateWarnings===maximumNumberOfHoverTemplateWarnings){lib.warn('Too many hovertemplate warnings - additional warnings will be suppressed');}numberOfHoverTemplateWarnings++;}if(format){value=d3.format(format.replace(TEMPLATE_STRING_FORMAT_SEPARATOR,''))(value);}else{if(labels.hasOwnProperty(key+'Label'))value=labels[key+'Label'];}return value;});};/*\n * alphanumeric string sort, tailored for subplot IDs like scene2, scene10, x10y13 etc\n */var char0=48;var char9=57;lib.subplotSort=function(a,b){var l=Math.min(a.length,b.length)+1;var numA=0;var numB=0;for(var i=0;i<l;i++){var charA=a.charCodeAt(i)||0;var charB=b.charCodeAt(i)||0;var isNumA=charA>=char0&&charA<=char9;var isNumB=charB>=char0&&charB<=char9;if(isNumA)numA=10*numA+charA-char0;if(isNumB)numB=10*numB+charB-char0;if(!isNumA||!isNumB){if(numA!==numB)return numA-numB;if(charA!==charB)return charA-charB;}}return numB-numA;};// repeatable pseudorandom generator\nvar randSeed=2000000000;lib.seedPseudoRandom=function(){randSeed=2000000000;};lib.pseudoRandom=function(){var lastVal=randSeed;randSeed=(69069*randSeed+1)%4294967296;// don't let consecutive vals be too close together\n// gets away from really trying to be random, in favor of better local uniformity\nif(Math.abs(randSeed-lastVal)<429496729)return lib.pseudoRandom();return randSeed/4294967296;};},{\"../constants/numerical\":398,\"./anchor_utils\":407,\"./angles\":408,\"./array\":409,\"./clean_number\":410,\"./clear_responsive\":412,\"./coerce\":413,\"./dates\":414,\"./extend\":416,\"./filter_unique\":417,\"./filter_visible\":418,\"./geometry2d\":419,\"./get_graph_div\":420,\"./identity\":422,\"./is_plain_object\":424,\"./keyed_container\":425,\"./localize\":426,\"./loggers\":427,\"./make_trace_groups\":428,\"./matrix\":429,\"./mod\":430,\"./nested_property\":431,\"./noop\":432,\"./notifier\":433,\"./push_unique\":436,\"./regex\":438,\"./relative_attr\":439,\"./relink_private\":440,\"./search\":441,\"./stats\":444,\"./throttle\":447,\"./to_log_range\":448,\"d3\":71,\"fast-isnumeric\":80}],424:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';// more info: http://stackoverflow.com/questions/18531624/isplainobject-thing\nmodule.exports=function isPlainObject(obj){// We need to be a little less strict in the `imagetest` container because\n// of how async image requests are handled.\n//\n// N.B. isPlainObject(new Constructor()) will return true in `imagetest`\nif(window&&window.process&&window.process.versions){return Object.prototype.toString.call(obj)==='[object Object]';}return Object.prototype.toString.call(obj)==='[object Object]'&&Object.getPrototypeOf(obj)===Object.prototype;};},{}],425:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var nestedProperty=_dereq_('./nested_property');var SIMPLE_PROPERTY_REGEX=/^\\w*$/;// bitmask for deciding what's updated. Sometimes the name needs to be updated,\n// sometimes the value needs to be updated, and sometimes both do. This is just\n// a simple way to track what's updated such that it's a simple OR operation to\n// assimilate new updates.\n//\n// The only exception is the UNSET bit that tracks when we need to explicitly\n// unset and remove the property. This concrn arises because of the special\n// way in which nestedProperty handles null/undefined. When you specify `null`,\n// it prunes any unused items in the tree. I ran into some issues with it getting\n// null vs undefined confused, so UNSET is just a bit that forces the property\n// update to send `null`, removing the property explicitly rather than setting\n// it to undefined.\nvar NONE=0;var NAME=1;var VALUE=2;var BOTH=3;var UNSET=4;module.exports=function keyedContainer(baseObj,path,keyName,valueName){keyName=keyName||'name';valueName=valueName||'value';var i,arr,baseProp;var changeTypes={};if(path&&path.length){baseProp=nestedProperty(baseObj,path);arr=baseProp.get();}else{arr=baseObj;}path=path||'';// Construct an index:\nvar indexLookup={};if(arr){for(i=0;i<arr.length;i++){indexLookup[arr[i][keyName]]=i;}}var isSimpleValueProp=SIMPLE_PROPERTY_REGEX.test(valueName);var obj={set:function set(name,value){var changeType=value===null?UNSET:NONE;// create the base array if necessary\nif(!arr){if(!baseProp||changeType===UNSET)return;arr=[];baseProp.set(arr);}var idx=indexLookup[name];if(idx===undefined){if(changeType===UNSET)return;changeType=changeType|BOTH;idx=arr.length;indexLookup[name]=idx;}else if(value!==(isSimpleValueProp?arr[idx][valueName]:nestedProperty(arr[idx],valueName).get())){changeType=changeType|VALUE;}var newValue=arr[idx]=arr[idx]||{};newValue[keyName]=name;if(isSimpleValueProp){newValue[valueName]=value;}else{nestedProperty(newValue,valueName).set(value);}// If it's not an unset, force that bit to be unset. This is all related to the fact\n// that undefined and null are a bit specially implemented in nestedProperties.\nif(value!==null){changeType=changeType&~UNSET;}changeTypes[idx]=changeTypes[idx]|changeType;return obj;},get:function get(name){if(!arr)return;var idx=indexLookup[name];if(idx===undefined){return undefined;}else if(isSimpleValueProp){return arr[idx][valueName];}else{return nestedProperty(arr[idx],valueName).get();}},rename:function rename(name,newName){var idx=indexLookup[name];if(idx===undefined)return obj;changeTypes[idx]=changeTypes[idx]|NAME;indexLookup[newName]=idx;delete indexLookup[name];arr[idx][keyName]=newName;return obj;},remove:function remove(name){var idx=indexLookup[name];if(idx===undefined)return obj;var object=arr[idx];if(Object.keys(object).length>2){// This object contains more than just the key/value, so unset\n// the value without modifying the entry otherwise:\nchangeTypes[idx]=changeTypes[idx]|VALUE;return obj.set(name,null);}if(isSimpleValueProp){for(i=idx;i<arr.length;i++){changeTypes[i]=changeTypes[i]|BOTH;}for(i=idx;i<arr.length;i++){indexLookup[arr[i][keyName]]--;}arr.splice(idx,1);delete indexLookup[name];}else{// Perform this update *strictly* so we can check whether the result's\n// been pruned. If so, it's a removal. If not, it's a value unset only.\nnestedProperty(object,valueName).set(null);// Now check if the top level nested property has any keys left. If so,\n// the object still has values so we only want to unset the key. If not,\n// the entire object can be removed since there's no other data.\n// var topLevelKeys = Object.keys(object[valueName.split('.')[0]] || []);\nchangeTypes[idx]=changeTypes[idx]|VALUE|UNSET;}return obj;},constructUpdate:function constructUpdate(){var astr,idx;var update={};var changed=Object.keys(changeTypes);for(var i=0;i<changed.length;i++){idx=changed[i];astr=path+'['+idx+']';if(arr[idx]){if(changeTypes[idx]&NAME){update[astr+'.'+keyName]=arr[idx][keyName];}if(changeTypes[idx]&VALUE){if(isSimpleValueProp){update[astr+'.'+valueName]=changeTypes[idx]&UNSET?null:arr[idx][valueName];}else{update[astr+'.'+valueName]=changeTypes[idx]&UNSET?null:nestedProperty(arr[idx],valueName).get();}}}else{update[astr]=null;}}return update;}};return obj;};},{\"./nested_property\":431}],426:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../registry');/**\n * localize: translate a string for the current locale\n *\n * @param {object} gd: the graphDiv for context\n *  gd._context.locale determines the language (& optional region/country)\n *  the dictionary for each locale may either be supplied in\n *  gd._context.locales or globally via Plotly.register\n * @param {string} s: the string to translate\n */module.exports=function localize(gd,s){var locale=gd._context.locale;/*\n     * Priority of lookup:\n     *     contextDicts[locale],\n     *     registeredDicts[locale],\n     *     contextDicts[baseLocale], (if baseLocale is distinct)\n     *     registeredDicts[baseLocale]\n     * Return the first translation we find.\n     * This way if you have a regionalization you are allowed to specify\n     * only what's different from the base locale, everything else will\n     * fall back on the base.\n     */for(var i=0;i<2;i++){var locales=gd._context.locales;for(var j=0;j<2;j++){var dict=(locales[locale]||{}).dictionary;if(dict){var out=dict[s];if(out)return out;}locales=Registry.localeRegistry;}var baseLocale=locale.split('-')[0];if(baseLocale===locale)break;locale=baseLocale;}return s;};},{\"../registry\":521}],427:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/* eslint-disable no-console */var config=_dereq_('../plot_api/plot_config');var loggers=module.exports={};/**\n * ------------------------------------------\n * debugging tools\n * ------------------------------------------\n */loggers.log=function(){if(config.logging>1){var messages=['LOG:'];for(var i=0;i<arguments.length;i++){messages.push(arguments[i]);}apply(console.trace||console.log,messages);}};loggers.warn=function(){if(config.logging>0){var messages=['WARN:'];for(var i=0;i<arguments.length;i++){messages.push(arguments[i]);}apply(console.trace||console.log,messages);}};loggers.error=function(){if(config.logging>0){var messages=['ERROR:'];for(var i=0;i<arguments.length;i++){messages.push(arguments[i]);}apply(console.error,messages);}};/*\n * Robust apply, for IE9 where console.log doesn't support\n * apply like other functions do\n */function apply(f,args){if(f&&f.apply){try{// `this` should always be console, since here we're always\n// applying a method of the console object.\nf.apply(console,args);return;}catch(e){/* in case apply failed, fall back on the code below */}}// no apply - just try calling the function on each arg independently\nfor(var i=0;i<args.length;i++){try{f(args[i]);}catch(e){// still fails - last resort simple console.log\nconsole.log(args[i]);}}}},{\"../plot_api/plot_config\":457}],428:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/**\n * General helper to manage trace groups based on calcdata\n *\n * @param {d3.selection} traceLayer: a selection containing a single group\n *     to draw these traces into\n * @param {array} cdModule: array of calcdata items for this\n *     module and subplot combination. Assumes the calcdata item for each\n *     trace is an array with the fullData trace attached to the first item.\n * @param {string} cls: the class attribute to give each trace group\n *     so you can give multiple classes separated by spaces\n */module.exports=function makeTraceGroups(traceLayer,cdModule,cls){var traces=traceLayer.selectAll('g.'+cls.replace(/\\s/g,'.')).data(cdModule,function(cd){return cd[0].trace.uid;});traces.exit().remove();traces.enter().append('g').attr('class',cls);traces.order();return traces;};},{}],429:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';exports.init2dArray=function(rowLength,colLength){var array=new Array(rowLength);for(var i=0;i<rowLength;i++){array[i]=new Array(colLength);}return array;};/**\n * transpose a (possibly ragged) 2d array z. inspired by\n * http://stackoverflow.com/questions/17428587/\n * transposing-a-2d-array-in-javascript\n */exports.transposeRagged=function(z){var maxlen=0;var zlen=z.length;var i,j;// Maximum row length:\nfor(i=0;i<zlen;i++){maxlen=Math.max(maxlen,z[i].length);}var t=new Array(maxlen);for(i=0;i<maxlen;i++){t[i]=new Array(zlen);for(j=0;j<zlen;j++){t[i][j]=z[j][i];}}return t;};// our own dot function so that we don't need to include numeric\nexports.dot=function(x,y){if(!(x.length&&y.length)||x.length!==y.length)return null;var len=x.length;var out;var i;if(x[0].length){// mat-vec or mat-mat\nout=new Array(len);for(i=0;i<len;i++){out[i]=exports.dot(x[i],y);}}else if(y[0].length){// vec-mat\nvar yTranspose=exports.transposeRagged(y);out=new Array(yTranspose.length);for(i=0;i<yTranspose.length;i++){out[i]=exports.dot(x,yTranspose[i]);}}else{// vec-vec\nout=0;for(i=0;i<len;i++){out+=x[i]*y[i];}}return out;};// translate by (x,y)\nexports.translationMatrix=function(x,y){return[[1,0,x],[0,1,y],[0,0,1]];};// rotate by alpha around (0,0)\nexports.rotationMatrix=function(alpha){var a=alpha*Math.PI/180;return[[Math.cos(a),-Math.sin(a),0],[Math.sin(a),Math.cos(a),0],[0,0,1]];};// rotate by alpha around (x,y)\nexports.rotationXYMatrix=function(a,x,y){return exports.dot(exports.dot(exports.translationMatrix(x,y),exports.rotationMatrix(a)),exports.translationMatrix(-x,-y));};// applies a 2D transformation matrix to either x and y params or an [x,y] array\nexports.apply2DTransform=function(transform){return function(){var args=arguments;if(args.length===3){args=args[0];}// from map\nvar xy=arguments.length===1?args[0]:[args[0],args[1]];return exports.dot(transform,[xy[0],xy[1],1]).slice(0,2);};};// applies a 2D transformation matrix to an [x1,y1,x2,y2] array (to transform a segment)\nexports.apply2DTransform2=function(transform){var at=exports.apply2DTransform(transform);return function(xys){return at(xys.slice(0,2)).concat(at(xys.slice(2,4)));};};},{}],430:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/**\n * sanitized modulus function that always returns in the range [0, d)\n * rather than (-d, 0] if v is negative\n */function mod(v,d){var out=v%d;return out<0?out+d:out;}/**\n * sanitized modulus function that always returns in the range [-d/2, d/2]\n * rather than (-d, 0] if v is negative\n */function modHalf(v,d){return Math.abs(v)>d/2?v-Math.round(v/d)*d:v;}module.exports={mod:mod,modHalf:modHalf};},{}],431:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var isArrayOrTypedArray=_dereq_('./array').isArrayOrTypedArray;/**\n * convert a string s (such as 'xaxis.range[0]')\n * representing a property of nested object into set and get methods\n * also return the string and object so we don't have to keep track of them\n * allows [-1] for an array index, to set a property inside all elements\n * of an array\n * eg if obj = {arr: [{a: 1}, {a: 2}]}\n * you can do p = nestedProperty(obj, 'arr[-1].a')\n * but you cannot set the array itself this way, to do that\n * just set the whole array.\n * eg if obj = {arr: [1, 2, 3]}\n * you can't do nestedProperty(obj, 'arr[-1]').set(5)\n * but you can do nestedProperty(obj, 'arr').set([5, 5, 5])\n */module.exports=function nestedProperty(container,propStr){if(isNumeric(propStr))propStr=String(propStr);else if(typeof propStr!=='string'||propStr.substr(propStr.length-4)==='[-1]'){throw'bad property string';}var j=0;var propParts=propStr.split('.');var indexed;var indices;var i;// check for parts of the nesting hierarchy that are numbers (ie array elements)\nwhile(j<propParts.length){// look for non-bracket chars, then any number of [##] blocks\nindexed=String(propParts[j]).match(/^([^\\[\\]]*)((\\[\\-?[0-9]*\\])+)$/);if(indexed){if(indexed[1])propParts[j]=indexed[1];// allow propStr to start with bracketed array indices\nelse if(j===0)propParts.splice(0,1);else throw'bad property string';indices=indexed[2].substr(1,indexed[2].length-2).split('][');for(i=0;i<indices.length;i++){j++;propParts.splice(j,0,Number(indices[i]));}}j++;}if(_typeof(container)!=='object'){return badContainer(container,propStr,propParts);}return{set:npSet(container,propParts,propStr),get:npGet(container,propParts),astr:propStr,parts:propParts,obj:container};};function npGet(cont,parts){return function(){var curCont=cont;var curPart;var allSame;var out;var i;var j;for(i=0;i<parts.length-1;i++){curPart=parts[i];if(curPart===-1){allSame=true;out=[];for(j=0;j<curCont.length;j++){out[j]=npGet(curCont[j],parts.slice(i+1))();if(out[j]!==out[0])allSame=false;}return allSame?out[0]:out;}if(typeof curPart==='number'&&!isArrayOrTypedArray(curCont)){return undefined;}curCont=curCont[curPart];if(_typeof(curCont)!=='object'||curCont===null){return undefined;}}// only hit this if parts.length === 1\nif(_typeof(curCont)!=='object'||curCont===null)return undefined;out=curCont[parts[i]];if(out===null)return undefined;return out;};}/*\n * Can this value be deleted? We can delete `undefined`, and `null` except INSIDE an\n * *args* array.\n *\n * Previously we also deleted some `{}` and `[]`, in order to try and make set/unset\n * a net noop; but this causes far more complication than it's worth, and still had\n * lots of exceptions. See https://github.com/plotly/plotly.js/issues/1410\n *\n * *args* arrays get passed directly to API methods and we should respect null if\n * the user put it there, but otherwise null is deleted as we use it as code\n * in restyle/relayout/update for \"delete this value\" whereas undefined means\n * \"ignore this edit\"\n */var ARGS_PATTERN=/(^|\\.)args\\[/;function isDeletable(val,propStr){return val===undefined||val===null&&!propStr.match(ARGS_PATTERN);}function npSet(cont,parts,propStr){return function(val){var curCont=cont;var propPart='';var containerLevels=[[cont,propPart]];var toDelete=isDeletable(val,propStr);var curPart;var i;for(i=0;i<parts.length-1;i++){curPart=parts[i];if(typeof curPart==='number'&&!isArrayOrTypedArray(curCont)){throw'array index but container is not an array';}// handle special -1 array index\nif(curPart===-1){toDelete=!setArrayAll(curCont,parts.slice(i+1),val,propStr);if(toDelete)break;else return;}if(!checkNewContainer(curCont,curPart,parts[i+1],toDelete)){break;}curCont=curCont[curPart];if(_typeof(curCont)!=='object'||curCont===null){throw'container is not an object';}propPart=joinPropStr(propPart,curPart);containerLevels.push([curCont,propPart]);}if(toDelete){if(i===parts.length-1){delete curCont[parts[i]];// The one bit of pruning we still do: drop `undefined` from the end of arrays.\n// In case someone has already unset previous items, continue until we hit a\n// non-undefined value.\nif(Array.isArray(curCont)&&+parts[i]===curCont.length-1){while(curCont.length&&curCont[curCont.length-1]===undefined){curCont.pop();}}}}else curCont[parts[i]]=val;};}function joinPropStr(propStr,newPart){var toAdd=newPart;if(isNumeric(newPart))toAdd='['+newPart+']';else if(propStr)toAdd='.'+newPart;return propStr+toAdd;}// handle special -1 array index\nfunction setArrayAll(containerArray,innerParts,val,propStr){var arrayVal=isArrayOrTypedArray(val);var allSet=true;var thisVal=val;var thisPropStr=propStr.replace('-1',0);var deleteThis=arrayVal?false:isDeletable(val,thisPropStr);var firstPart=innerParts[0];var i;for(i=0;i<containerArray.length;i++){thisPropStr=propStr.replace('-1',i);if(arrayVal){thisVal=val[i%val.length];deleteThis=isDeletable(thisVal,thisPropStr);}if(deleteThis)allSet=false;if(!checkNewContainer(containerArray,i,firstPart,deleteThis)){continue;}npSet(containerArray[i],innerParts,propStr.replace('-1',i))(thisVal);}return allSet;}/**\n * make new sub-container as needed.\n * returns false if there's no container and none is needed\n * because we're only deleting an attribute\n */function checkNewContainer(container,part,nextPart,toDelete){if(container[part]===undefined){if(toDelete)return false;if(typeof nextPart==='number')container[part]=[];else container[part]={};}return true;}function badContainer(container,propStr,propParts){return{set:function set(){throw'bad container';},get:function get(){},astr:propStr,parts:propParts,obj:container};}},{\"./array\":409,\"fast-isnumeric\":80}],432:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';// Simple helper functions\n// none of these need any external deps\nmodule.exports=function noop(){};},{}],433:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var isNumeric=_dereq_('fast-isnumeric');var NOTEDATA=[];/**\n * notifier\n * @param {String} text The person's user name\n * @param {Number} [delay=1000] The delay time in milliseconds\n *          or 'long' which provides 2000 ms delay time.\n * @return {undefined} this function does not return a value\n */module.exports=function(text,displayLength){if(NOTEDATA.indexOf(text)!==-1)return;NOTEDATA.push(text);var ts=1000;if(isNumeric(displayLength))ts=displayLength;else if(displayLength==='long')ts=3000;var notifierContainer=d3.select('body').selectAll('.plotly-notifier').data([0]);notifierContainer.enter().append('div').classed('plotly-notifier',true);var notes=notifierContainer.selectAll('.notifier-note').data(NOTEDATA);function killNote(transition){transition.duration(700).style('opacity',0).each('end',function(thisText){var thisIndex=NOTEDATA.indexOf(thisText);if(thisIndex!==-1)NOTEDATA.splice(thisIndex,1);d3.select(this).remove();});}notes.enter().append('div').classed('notifier-note',true).style('opacity',0).each(function(thisText){var note=d3.select(this);note.append('button').classed('notifier-close',true).html('&times;').on('click',function(){note.transition().call(killNote);});var p=note.append('p');var lines=thisText.split(/<br\\s*\\/?>/g);for(var i=0;i<lines.length;i++){if(i)p.append('br');p.append('span').text(lines[i]);}note.transition().duration(700).style('opacity',1).transition().delay(ts).call(killNote);});};},{\"d3\":71,\"fast-isnumeric\":80}],434:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var setCursor=_dereq_('./setcursor');var STASHATTR='data-savedcursor';var NO_CURSOR='!!';/*\n * works with our CSS cursor classes (see css/_cursor.scss)\n * to override a previous cursor set on d3 single-element selections,\n * by moving the name of the original cursor to the data-savedcursor attr.\n * omit cursor to revert to the previously set value.\n */module.exports=function overrideCursor(el3,csr){var savedCursor=el3.attr(STASHATTR);if(csr){if(!savedCursor){var classes=(el3.attr('class')||'').split(' ');for(var i=0;i<classes.length;i++){var cls=classes[i];if(cls.indexOf('cursor-')===0){el3.attr(STASHATTR,cls.substr(7)).classed(cls,false);}}if(!el3.attr(STASHATTR)){el3.attr(STASHATTR,NO_CURSOR);}}setCursor(el3,csr);}else if(savedCursor){el3.attr(STASHATTR,null);if(savedCursor===NO_CURSOR)setCursor(el3);else setCursor(el3,savedCursor);}};},{\"./setcursor\":442}],435:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var dot=_dereq_('./matrix').dot;var BADNUM=_dereq_('../constants/numerical').BADNUM;var polygon=module.exports={};/**\n * Turn an array of [x, y] pairs into a polygon object\n * that can test if points are inside it\n *\n * @param ptsIn Array of [x, y] pairs\n *\n * @returns polygon Object {xmin, xmax, ymin, ymax, pts, contains}\n *      (x|y)(min|max) are the bounding rect of the polygon\n *      pts is the original array, with the first pair repeated at the end\n *      contains is a function: (pt, omitFirstEdge)\n *          pt is the [x, y] pair to test\n *          omitFirstEdge truthy means points exactly on the first edge don't\n *              count. This is for use adding one polygon to another so we\n *              don't double-count the edge where they meet.\n *          returns boolean: is pt inside the polygon (including on its edges)\n */polygon.tester=function tester(ptsIn){var pts=ptsIn.slice();var xmin=pts[0][0];var xmax=xmin;var ymin=pts[0][1];var ymax=ymin;var i;pts.push(pts[0]);for(i=1;i<pts.length;i++){xmin=Math.min(xmin,pts[i][0]);xmax=Math.max(xmax,pts[i][0]);ymin=Math.min(ymin,pts[i][1]);ymax=Math.max(ymax,pts[i][1]);}// do we have a rectangle? Handle this here, so we can use the same\n// tester for the rectangular case without sacrificing speed\nvar isRect=false;var rectFirstEdgeTest;if(pts.length===5){if(pts[0][0]===pts[1][0]){// vert, horz, vert, horz\nif(pts[2][0]===pts[3][0]&&pts[0][1]===pts[3][1]&&pts[1][1]===pts[2][1]){isRect=true;rectFirstEdgeTest=function rectFirstEdgeTest(pt){return pt[0]===pts[0][0];};}}else if(pts[0][1]===pts[1][1]){// horz, vert, horz, vert\nif(pts[2][1]===pts[3][1]&&pts[0][0]===pts[3][0]&&pts[1][0]===pts[2][0]){isRect=true;rectFirstEdgeTest=function rectFirstEdgeTest(pt){return pt[1]===pts[0][1];};}}}function rectContains(pt,omitFirstEdge){var x=pt[0];var y=pt[1];if(x===BADNUM||x<xmin||x>xmax||y===BADNUM||y<ymin||y>ymax){// pt is outside the bounding box of polygon\nreturn false;}if(omitFirstEdge&&rectFirstEdgeTest(pt))return false;return true;}function contains(pt,omitFirstEdge){var x=pt[0];var y=pt[1];if(x===BADNUM||x<xmin||x>xmax||y===BADNUM||y<ymin||y>ymax){// pt is outside the bounding box of polygon\nreturn false;}var imax=pts.length;var x1=pts[0][0];var y1=pts[0][1];var crossings=0;var i;var x0;var y0;var xmini;var ycross;for(i=1;i<imax;i++){// find all crossings of a vertical line upward from pt with\n// polygon segments\n// crossings exactly at xmax don't count, unless the point is\n// exactly on the segment, then it counts as inside.\nx0=x1;y0=y1;x1=pts[i][0];y1=pts[i][1];xmini=Math.min(x0,x1);// outside the bounding box of this segment, it's only a crossing\n// if it's below the box.\nif(x<xmini||x>Math.max(x0,x1)||y>Math.max(y0,y1)){continue;}else if(y<Math.min(y0,y1)){// don't count the left-most point of the segment as a crossing\n// because we don't want to double-count adjacent crossings\n// UNLESS the polygon turns past vertical at exactly this x\n// Note that this is repeated below, but we can't factor it out\n// because\nif(x!==xmini)crossings++;}// inside the bounding box, check the actual line intercept\nelse{// vertical segment - we know already that the point is exactly\n// on the segment, so mark the crossing as exactly at the point.\nif(x1===x0)ycross=y;// any other angle\nelse ycross=y0+(x-x0)*(y1-y0)/(x1-x0);// exactly on the edge: counts as inside the polygon, unless it's the\n// first edge and we're omitting it.\nif(y===ycross){if(i===1&&omitFirstEdge)return false;return true;}if(y<=ycross&&x!==xmini)crossings++;}}// if we've gotten this far, odd crossings means inside, even is outside\nreturn crossings%2===1;}// detect if poly is degenerate\nvar degenerate=true;var lastPt=pts[0];for(i=1;i<pts.length;i++){if(lastPt[0]!==pts[i][0]||lastPt[1]!==pts[i][1]){degenerate=false;break;}}return{xmin:xmin,xmax:xmax,ymin:ymin,ymax:ymax,pts:pts,contains:isRect?rectContains:contains,isRect:isRect,degenerate:degenerate};};/**\n * Test if a segment of a points array is bent or straight\n *\n * @param pts Array of [x, y] pairs\n * @param start the index of the proposed start of the straight section\n * @param end the index of the proposed end point\n * @param tolerance the max distance off the line connecting start and end\n *      before the line counts as bent\n * @returns boolean: true means this segment is bent, false means straight\n */var isBent=polygon.isSegmentBent=function isBent(pts,start,end,tolerance){var startPt=pts[start];var segment=[pts[end][0]-startPt[0],pts[end][1]-startPt[1]];var segmentSquared=dot(segment,segment);var segmentLen=Math.sqrt(segmentSquared);var unitPerp=[-segment[1]/segmentLen,segment[0]/segmentLen];var i;var part;var partParallel;for(i=start+1;i<end;i++){part=[pts[i][0]-startPt[0],pts[i][1]-startPt[1]];partParallel=dot(part,segment);if(partParallel<0||partParallel>segmentSquared||Math.abs(dot(part,unitPerp))>tolerance)return true;}return false;};/**\n * Make a filtering polygon, to minimize the number of segments\n *\n * @param pts Array of [x, y] pairs (must start with at least 1 pair)\n * @param tolerance the maximum deviation from straight allowed for\n *      removing points to simplify the polygon\n *\n * @returns Object {addPt, raw, filtered}\n *      addPt is a function(pt: [x, y] pair) to add a raw point and\n *          continue filtering\n *      raw is all the input points\n *      filtered is the resulting filtered Array of [x, y] pairs\n */polygon.filter=function filter(pts,tolerance){var ptsFiltered=[pts[0]];var doneRawIndex=0;var doneFilteredIndex=0;function addPt(pt){pts.push(pt);var prevFilterLen=ptsFiltered.length;var iLast=doneRawIndex;ptsFiltered.splice(doneFilteredIndex+1);for(var i=iLast+1;i<pts.length;i++){if(i===pts.length-1||isBent(pts,iLast,i+1,tolerance)){ptsFiltered.push(pts[i]);if(ptsFiltered.length<prevFilterLen-2){doneRawIndex=i;doneFilteredIndex=ptsFiltered.length-1;}iLast=i;}}}if(pts.length>1){var lastPt=pts.pop();addPt(lastPt);}return{addPt:addPt,raw:pts,filtered:ptsFiltered};};},{\"../constants/numerical\":398,\"./matrix\":429}],436:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/**\n * Push array with unique items\n *\n * Ignores falsy items, except 0 so we can use it to construct arrays of indices.\n *\n * @param {array} array\n *  array to be filled\n * @param {any} item\n *  item to be or not to be inserted\n * @return {array}\n *  ref to array (now possibly containing one more item)\n *\n */module.exports=function pushUnique(array,item){if(item instanceof RegExp){var itemStr=item.toString();for(var i=0;i<array.length;i++){if(array[i]instanceof RegExp&&array[i].toString()===itemStr){return array;}}array.push(item);}else if((item||item===0)&&array.indexOf(item)===-1)array.push(item);return array;};},{}],437:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../lib');var config=_dereq_('../plot_api/plot_config');/**\n * Copy arg array *without* removing `undefined` values from objects.\n *\n * @param gd\n * @param args\n * @returns {Array}\n */function copyArgArray(gd,args){var copy=[];var arg;for(var i=0;i<args.length;i++){arg=args[i];if(arg===gd)copy[i]=arg;else if(_typeof(arg)==='object'){copy[i]=Array.isArray(arg)?Lib.extendDeep([],arg):Lib.extendDeepAll({},arg);}else copy[i]=arg;}return copy;}// -----------------------------------------------------\n// Undo/Redo queue for plots\n// -----------------------------------------------------\nvar queue={};// TODO: disable/enable undo and redo buttons appropriately\n/**\n * Add an item to the undoQueue for a graphDiv\n *\n * @param gd\n * @param undoFunc Function undo this operation\n * @param undoArgs Args to supply undoFunc with\n * @param redoFunc Function to redo this operation\n * @param redoArgs Args to supply redoFunc with\n */queue.add=function(gd,undoFunc,undoArgs,redoFunc,redoArgs){var queueObj,queueIndex;// make sure we have the queue and our position in it\ngd.undoQueue=gd.undoQueue||{index:0,queue:[],sequence:false};queueIndex=gd.undoQueue.index;// if we're already playing an undo or redo, or if this is an auto operation\n// (like pane resize... any others?) then we don't save this to the undo queue\nif(gd.autoplay){if(!gd.undoQueue.inSequence)gd.autoplay=false;return;}// if we're not in a sequence or are just starting, we need a new queue item\nif(!gd.undoQueue.sequence||gd.undoQueue.beginSequence){queueObj={undo:{calls:[],args:[]},redo:{calls:[],args:[]}};gd.undoQueue.queue.splice(queueIndex,gd.undoQueue.queue.length-queueIndex,queueObj);gd.undoQueue.index+=1;}else{queueObj=gd.undoQueue.queue[queueIndex-1];}gd.undoQueue.beginSequence=false;// we unshift to handle calls for undo in a forward for loop later\nif(queueObj){queueObj.undo.calls.unshift(undoFunc);queueObj.undo.args.unshift(undoArgs);queueObj.redo.calls.push(redoFunc);queueObj.redo.args.push(redoArgs);}if(gd.undoQueue.queue.length>config.queueLength){gd.undoQueue.queue.shift();gd.undoQueue.index--;}};/**\n * Begin a sequence of undoQueue changes\n *\n * @param gd\n */queue.startSequence=function(gd){gd.undoQueue=gd.undoQueue||{index:0,queue:[],sequence:false};gd.undoQueue.sequence=true;gd.undoQueue.beginSequence=true;};/**\n * Stop a sequence of undoQueue changes\n *\n * Call this *after* you're sure your undo chain has ended\n *\n * @param gd\n */queue.stopSequence=function(gd){gd.undoQueue=gd.undoQueue||{index:0,queue:[],sequence:false};gd.undoQueue.sequence=false;gd.undoQueue.beginSequence=false;};/**\n * Move one step back in the undo queue, and undo the object there.\n *\n * @param gd\n */queue.undo=function undo(gd){var queueObj,i;if(gd.framework&&gd.framework.isPolar){gd.framework.undo();return;}if(gd.undoQueue===undefined||isNaN(gd.undoQueue.index)||gd.undoQueue.index<=0){return;}// index is pointing to next *forward* queueObj, point to the one we're undoing\ngd.undoQueue.index--;// get the queueObj for instructions on how to undo\nqueueObj=gd.undoQueue.queue[gd.undoQueue.index];// this sequence keeps things from adding to the queue during undo/redo\ngd.undoQueue.inSequence=true;for(i=0;i<queueObj.undo.calls.length;i++){queue.plotDo(gd,queueObj.undo.calls[i],queueObj.undo.args[i]);}gd.undoQueue.inSequence=false;gd.autoplay=false;};/**\n * Redo the current object in the undo, then move forward in the queue.\n *\n * @param gd\n */queue.redo=function redo(gd){var queueObj,i;if(gd.framework&&gd.framework.isPolar){gd.framework.redo();return;}if(gd.undoQueue===undefined||isNaN(gd.undoQueue.index)||gd.undoQueue.index>=gd.undoQueue.queue.length){return;}// get the queueObj for instructions on how to undo\nqueueObj=gd.undoQueue.queue[gd.undoQueue.index];// this sequence keeps things from adding to the queue during undo/redo\ngd.undoQueue.inSequence=true;for(i=0;i<queueObj.redo.calls.length;i++){queue.plotDo(gd,queueObj.redo.calls[i],queueObj.redo.args[i]);}gd.undoQueue.inSequence=false;gd.autoplay=false;// index is pointing to the thing we just redid, move it\ngd.undoQueue.index++;};/**\n * Called by undo/redo to make the actual changes.\n *\n * Not meant to be called publically, but included for mocking out in tests.\n *\n * @param gd\n * @param func\n * @param args\n */queue.plotDo=function(gd,func,args){gd.autoplay=true;// this *won't* copy gd and it preserves `undefined` properties!\nargs=copyArgArray(gd,args);// call the supplied function\nfunc.apply(null,args);};module.exports=queue;},{\"../lib\":423,\"../plot_api/plot_config\":457}],438:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/*\n * make a regex for matching counter ids/names ie xaxis, xaxis2, xaxis10...\n *\n * @param {string} head: the head of the pattern, eg 'x' matches 'x', 'x2', 'x10' etc.\n *      'xy' is a special case for cartesian subplots: it matches 'x2y3' etc\n * @param {Optional(string)} tail: a fixed piece after the id\n *      eg counterRegex('scene', '.annotations') for scene2.annotations etc.\n * @param {boolean} openEnded: if true, the string may continue past the match.\n * @param {boolean} matchBeginning: if false, the string may start before the match.\n */exports.counter=function(head,tail,openEnded,matchBeginning){var fullTail=(tail||'')+(openEnded?'':'$');var startWithPrefix=matchBeginning===false?'':'^';if(head==='xy'){return new RegExp(startWithPrefix+'x([2-9]|[1-9][0-9]+)?y([2-9]|[1-9][0-9]+)?'+fullTail);}return new RegExp(startWithPrefix+head+'([2-9]|[1-9][0-9]+)?'+fullTail);};},{}],439:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';// ASCEND: chop off the last nesting level - either [<n>] or .<key> - to ascend\n// the attribute tree. the remaining attrString is in match[1]\nvar ASCEND=/^(.*)(\\.[^\\.\\[\\]]+|\\[\\d\\])$/;// SIMPLEATTR: is this an un-nested attribute? (no dots or brackets)\nvar SIMPLEATTR=/^[^\\.\\[\\]]+$/;/*\n * calculate a relative attribute string, similar to a relative path\n *\n * @param {string} baseAttr:\n *   an attribute string, such as 'annotations[3].x'. The \"current location\"\n *   is the attribute string minus the last component ('annotations[3]')\n * @param {string} relativeAttr:\n *   a route to the desired attribute string, using '^' to ascend\n *\n * @return {string} attrString:\n *   for example:\n *     relativeAttr('annotations[3].x', 'y') = 'annotations[3].y'\n *     relativeAttr('annotations[3].x', '^[2].z') = 'annotations[2].z'\n *     relativeAttr('annotations[3].x', '^^margin') = 'margin'\n *     relativeAttr('annotations[3].x', '^^margin.r') = 'margin.r'\n */module.exports=function(baseAttr,relativeAttr){while(relativeAttr){var match=baseAttr.match(ASCEND);if(match)baseAttr=match[1];else if(baseAttr.match(SIMPLEATTR))baseAttr='';else throw new Error('bad relativeAttr call:'+[baseAttr,relativeAttr]);if(relativeAttr.charAt(0)==='^')relativeAttr=relativeAttr.slice(1);else break;}if(baseAttr&&relativeAttr.charAt(0)!=='['){return baseAttr+'.'+relativeAttr;}return baseAttr+relativeAttr;};},{}],440:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isArrayOrTypedArray=_dereq_('./array').isArrayOrTypedArray;var isPlainObject=_dereq_('./is_plain_object');/**\n * Relink private _keys and keys with a function value from one container\n * to the new container.\n * Relink means copying if object is pass-by-value and adding a reference\n * if object is pass-by-ref.\n * This prevents deepCopying massive structures like a webgl context.\n */module.exports=function relinkPrivateKeys(toContainer,fromContainer){for(var k in fromContainer){var fromVal=fromContainer[k];var toVal=toContainer[k];if(toVal===fromVal){continue;}if(k.charAt(0)==='_'||typeof fromVal==='function'){// if it already exists at this point, it's something\n// that we recreate each time around, so ignore it\nif(k in toContainer)continue;toContainer[k]=fromVal;}else if(isArrayOrTypedArray(fromVal)&&isArrayOrTypedArray(toVal)&&isPlainObject(fromVal[0])){// filter out data_array items that can contain user objects\n// most of the time the toVal === fromVal check will catch these early\n// but if the user makes new ones we also don't want to recurse in.\nif(k==='customdata'||k==='ids')continue;// recurse into arrays containers\nvar minLen=Math.min(fromVal.length,toVal.length);for(var j=0;j<minLen;j++){if(toVal[j]!==fromVal[j]&&isPlainObject(fromVal[j])&&isPlainObject(toVal[j])){relinkPrivateKeys(toVal[j],fromVal[j]);}}}else if(isPlainObject(fromVal)&&isPlainObject(toVal)){// recurse into objects, but only if they still exist\nrelinkPrivateKeys(toVal,fromVal);if(!Object.keys(toVal).length)delete toContainer[k];}}};},{\"./array\":409,\"./is_plain_object\":424}],441:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var loggers=_dereq_('./loggers');var identity=_dereq_('./identity');// don't trust floating point equality - fraction of bin size to call\n// \"on the line\" and ensure that they go the right way specified by\n// linelow\nvar roundingError=1e-9;/**\n * findBin - find the bin for val - note that it can return outside the\n * bin range any pos. or neg. integer for linear bins, or -1 or\n * bins.length-1 for explicit.\n * bins is either an object {start,size,end} or an array length #bins+1\n * bins can be either increasing or decreasing but must be monotonic\n * for linear bins, we can just calculate. For listed bins, run a binary\n * search linelow (truthy) says the bin boundary should be attributed to\n * the lower bin rather than the default upper bin\n */exports.findBin=function(val,bins,linelow){if(isNumeric(bins.start)){return linelow?Math.ceil((val-bins.start)/bins.size-roundingError)-1:Math.floor((val-bins.start)/bins.size+roundingError);}else{var n1=0;var n2=bins.length;var c=0;var binSize=n2>1?(bins[n2-1]-bins[0])/(n2-1):1;var n,test;if(binSize>=0){test=linelow?lessThan:lessOrEqual;}else{test=linelow?greaterOrEqual:greaterThan;}val+=binSize*roundingError*(linelow?-1:1)*(binSize>=0?1:-1);// c is just to avoid infinite loops if there's an error\nwhile(n1<n2&&c++<100){n=Math.floor((n1+n2)/2);if(test(bins[n],val))n1=n+1;else n2=n;}if(c>90)loggers.log('Long binary search...');return n1-1;}};function lessThan(a,b){return a<b;}function lessOrEqual(a,b){return a<=b;}function greaterThan(a,b){return a>b;}function greaterOrEqual(a,b){return a>=b;}exports.sorterAsc=function(a,b){return a-b;};exports.sorterDes=function(a,b){return b-a;};/**\n * find distinct values in an array, lumping together ones that appear to\n * just be off by a rounding error\n * return the distinct values and the minimum difference between any two\n */exports.distinctVals=function(valsIn){var vals=valsIn.slice();// otherwise we sort the original array...\nvals.sort(exports.sorterAsc);var l=vals.length-1;var minDiff=vals[l]-vals[0]||1;var errDiff=minDiff/(l||1)/10000;var v2=[vals[0]];for(var i=0;i<l;i++){// make sure values aren't just off by a rounding error\nif(vals[i+1]>vals[i]+errDiff){minDiff=Math.min(minDiff,vals[i+1]-vals[i]);v2.push(vals[i+1]);}}return{vals:v2,minDiff:minDiff};};/**\n * return the smallest element from (sorted) array arrayIn that's bigger than val,\n * or (reverse) the largest element smaller than val\n * used to find the best tick given the minimum (non-rounded) tick\n * particularly useful for date/time where things are not powers of 10\n * binary search is probably overkill here...\n */exports.roundUp=function(val,arrayIn,reverse){var low=0;var high=arrayIn.length-1;var mid;var c=0;var dlow=reverse?0:1;var dhigh=reverse?1:0;var rounded=reverse?Math.ceil:Math.floor;// c is just to avoid infinite loops if there's an error\nwhile(low<high&&c++<100){mid=rounded((low+high)/2);if(arrayIn[mid]<=val)low=mid+dlow;else high=mid-dhigh;}return arrayIn[low];};/**\n * Tweak to Array.sort(sortFn) that improves performance for pre-sorted arrays\n *\n * Note that newer browsers (such as Chrome v70+) are starting to pick up\n * on pre-sorted arrays which may render the following optimization unnecessary\n * in the future.\n *\n * Motivation: sometimes we need to sort arrays but the input is likely to\n * already be sorted. Browsers don't seem to pick up on pre-sorted arrays,\n * and in fact Chrome is actually *slower* sorting pre-sorted arrays than purely\n * random arrays. FF is at least faster if the array is pre-sorted, but still\n * not as fast as it could be.\n * Here's how this plays out sorting a length-1e6 array:\n *\n * Calls to Sort FN  |  Chrome bare  |  FF bare  |  Chrome tweak  |  FF tweak\n *                   |  v68.0 Mac    |  v61.0 Mac|                |\n * ------------------+---------------+-----------+----------------+------------\n * ordered           |  30.4e6       |  10.1e6   |  1e6           |  1e6\n * reversed          |  29.4e6       |  9.9e6    |  1e6 + reverse |  1e6 + reverse\n * random            |  ~21e6        |  ~18.7e6  |  ~21e6         |  ~18.7e6\n *\n * So this is a substantial win for pre-sorted (ordered or exactly reversed)\n * arrays. Including this wrapper on an unsorted array adds a penalty that will\n * in general be only a few calls to the sort function. The only case this\n * penalty will be significant is if the array is mostly sorted but there are\n * a few unsorted items near the end, but the penalty is still at most N calls\n * out of (for N=1e6) ~20N total calls\n *\n * @param {Array} array: the array, to be sorted in place\n * @param {function} sortFn: As in Array.sort, function(a, b) that puts\n *     item a before item b if the return is negative, a after b if positive,\n *     and no change if zero.\n * @return {Array}: the original array, sorted in place.\n */exports.sort=function(array,sortFn){var notOrdered=0;var notReversed=0;for(var i=1;i<array.length;i++){var pairOrder=sortFn(array[i],array[i-1]);if(pairOrder<0)notOrdered=1;else if(pairOrder>0)notReversed=1;if(notOrdered&&notReversed)return array.sort(sortFn);}return notReversed?array:array.reverse();};/**\n * find index in array 'arr' that minimizes 'fn'\n *\n * @param {array} arr : array where to search\n * @param {fn (optional)} fn : function to minimize,\n *   if not given, fn is the identity function\n * @return {integer}\n */exports.findIndexOfMin=function(arr,fn){fn=fn||identity;var min=Infinity;var ind;for(var i=0;i<arr.length;i++){var v=fn(arr[i]);if(v<min){min=v;ind=i;}}return ind;};},{\"./identity\":422,\"./loggers\":427,\"fast-isnumeric\":80}],442:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';// works with our CSS cursor classes (see css/_cursor.scss)\n// to apply cursors to d3 single-element selections.\n// omit cursor to revert to the default.\nmodule.exports=function setCursor(el3,csr){(el3.attr('class')||'').split(' ').forEach(function(cls){if(cls.indexOf('cursor-')===0)el3.classed(cls,false);});if(csr)el3.classed('cursor-'+csr,true);};},{}],443:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Color=_dereq_('../components/color');var noop=function noop(){};/**\n * Prints a no webgl error message into the scene container\n * @param {scene instance} scene\n *\n * Expects 'scene' to have property 'container'\n *\n */module.exports=function showNoWebGlMsg(scene){for(var prop in scene){if(typeof scene[prop]==='function')scene[prop]=noop;}scene.destroy=function(){scene.container.parentNode.removeChild(scene.container);};var div=document.createElement('div');div.className='no-webgl';div.style.cursor='pointer';div.style.fontSize='24px';div.style.color=Color.defaults[0];div.style.position='absolute';div.style.left=div.style.top='0px';div.style.width=div.style.height='100%';div.style['background-color']=Color.lightLine;div.style['z-index']=30;var p=document.createElement('p');p.textContent='WebGL is not supported by your browser - visit https://get.webgl.org for more info';p.style.position='relative';p.style.top='50%';p.style.left='50%';p.style.height='30%';p.style.width='50%';p.style.margin='-15% 0 0 -25%';div.appendChild(p);scene.container.appendChild(div);scene.container.style.background='#FFFFFF';scene.container.onclick=function(){window.open('https://get.webgl.org');};// return before setting up camera and onrender methods\nreturn false;};},{\"../components/color\":299}],444:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var isArrayOrTypedArray=_dereq_('./array').isArrayOrTypedArray;/**\n * aggNums() returns the result of an aggregate function applied to an array of\n * values, where non-numerical values have been tossed out.\n *\n * @param {function} f - aggregation function (e.g., Math.min)\n * @param {Number} v - initial value (continuing from previous calls)\n *      if there's no continuing value, use null for selector-type\n *      functions (max,min), or 0 for summations\n * @param {Array} a - array to aggregate (may be nested, we will recurse,\n *                    but all elements must have the same dimension)\n * @param {Number} len - maximum length of a to aggregate\n * @return {Number} - result of f applied to a starting from v\n */exports.aggNums=function(f,v,a,len){var i,b;if(!len||len>a.length)len=a.length;if(!isNumeric(v))v=false;if(isArrayOrTypedArray(a[0])){b=new Array(len);for(i=0;i<len;i++){b[i]=exports.aggNums(f,v,a[i]);}a=b;}for(i=0;i<len;i++){if(!isNumeric(v))v=a[i];else if(isNumeric(a[i]))v=f(+v,+a[i]);}return v;};/**\n * mean & std dev functions using aggNums, so it handles non-numerics nicely\n * even need to use aggNums instead of .length, to toss out non-numerics\n */exports.len=function(data){return exports.aggNums(function(a){return a+1;},0,data);};exports.mean=function(data,len){if(!len)len=exports.len(data);return exports.aggNums(function(a,b){return a+b;},0,data)/len;};exports.midRange=function(numArr){if(numArr===undefined||numArr.length===0)return undefined;return(exports.aggNums(Math.max,null,numArr)+exports.aggNums(Math.min,null,numArr))/2;};exports.variance=function(data,len,mean){if(!len)len=exports.len(data);if(!isNumeric(mean))mean=exports.mean(data,len);return exports.aggNums(function(a,b){return a+Math.pow(b-mean,2);},0,data)/len;};exports.stdev=function(data,len,mean){return Math.sqrt(exports.variance(data,len,mean));};/**\n * interp() computes a percentile (quantile) for a given distribution.\n * We interpolate the distribution (to compute quantiles, we follow method #10 here:\n * http://www.amstat.org/publications/jse/v14n3/langford.html).\n * Typically the index or rank (n * arr.length) may be non-integer.\n * For reference: ends are clipped to the extreme values in the array;\n * For box plots: index you get is half a point too high (see\n * http://en.wikipedia.org/wiki/Percentile#Nearest_rank) but note that this definition\n * indexes from 1 rather than 0, so we subtract 1/2 (instead of add).\n *\n * @param {Array} arr - This array contains the values that make up the distribution.\n * @param {Number} n - Between 0 and 1, n = p/100 is such that we compute the p^th percentile.\n * For example, the 50th percentile (or median) corresponds to n = 0.5\n * @return {Number} - percentile\n */exports.interp=function(arr,n){if(!isNumeric(n))throw'n should be a finite number';n=n*arr.length-0.5;if(n<0)return arr[0];if(n>arr.length-1)return arr[arr.length-1];var frac=n%1;return frac*arr[Math.ceil(n)]+(1-frac)*arr[Math.floor(n)];};},{\"./array\":409,\"fast-isnumeric\":80}],445:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var rgba=_dereq_('color-normalize');function str2RgbaArray(color){if(!color)return[0,0,0,1];return rgba(color);}module.exports=str2RgbaArray;},{\"color-normalize\":54}],446:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/* global MathJax:false */var d3=_dereq_('d3');var Lib=_dereq_('../lib');var xmlnsNamespaces=_dereq_('../constants/xmlns_namespaces');var LINE_SPACING=_dereq_('../constants/alignment').LINE_SPACING;// text converter\nfunction getSize(_selection,_dimension){return _selection.node().getBoundingClientRect()[_dimension];}var FIND_TEX=/([^$]*)([$]+[^$]*[$]+)([^$]*)/;exports.convertToTspans=function(_context,gd,_callback){var str=_context.text();// Until we get tex integrated more fully (so it can be used along with non-tex)\n// allow some elements to prohibit it by attaching 'data-notex' to the original\nvar tex=!_context.attr('data-notex')&&typeof MathJax!=='undefined'&&str.match(FIND_TEX);var parent=d3.select(_context.node().parentNode);if(parent.empty())return;var svgClass=_context.attr('class')?_context.attr('class').split(' ')[0]:'text';svgClass+='-math';parent.selectAll('svg.'+svgClass).remove();parent.selectAll('g.'+svgClass+'-group').remove();_context.style('display',null).attr({// some callers use data-unformatted *from the <text> element* in 'cancel'\n// so we need it here even if we're going to turn it into math\n// these two (plus style and text-anchor attributes) form the key we're\n// going to use for Drawing.bBox\n'data-unformatted':str,'data-math':'N'});function showText(){if(!parent.empty()){svgClass=_context.attr('class')+'-math';parent.select('svg.'+svgClass).remove();}_context.text('').style('white-space','pre');var hasLink=buildSVGText(_context.node(),str);if(hasLink){// at least in Chrome, pointer-events does not seem\n// to be honored in children of <text> elements\n// so if we have an anchor, we have to make the\n// whole element respond\n_context.style('pointer-events','all');}exports.positionText(_context);if(_callback)_callback.call(_context);}if(tex){(gd&&gd._promises||[]).push(new Promise(function(resolve){_context.style('display','none');var fontSize=parseInt(_context.node().style.fontSize,10);var config={fontSize:fontSize};texToSVG(tex[2],config,function(_svgEl,_glyphDefs,_svgBBox){parent.selectAll('svg.'+svgClass).remove();parent.selectAll('g.'+svgClass+'-group').remove();var newSvg=_svgEl&&_svgEl.select('svg');if(!newSvg||!newSvg.node()){showText();resolve();return;}var mathjaxGroup=parent.append('g').classed(svgClass+'-group',true).attr({'pointer-events':'none','data-unformatted':str,'data-math':'Y'});mathjaxGroup.node().appendChild(newSvg.node());// stitch the glyph defs\nif(_glyphDefs&&_glyphDefs.node()){newSvg.node().insertBefore(_glyphDefs.node().cloneNode(true),newSvg.node().firstChild);}newSvg.attr({'class':svgClass,height:_svgBBox.height,preserveAspectRatio:'xMinYMin meet'}).style({overflow:'visible','pointer-events':'none'});var fill=_context.node().style.fill||'black';newSvg.select('g').attr({fill:fill,stroke:fill});var newSvgW=getSize(newSvg,'width');var newSvgH=getSize(newSvg,'height');var newX=+_context.attr('x')-newSvgW*{start:0,middle:0.5,end:1}[_context.attr('text-anchor')||'start'];// font baseline is about 1/4 fontSize below centerline\nvar textHeight=fontSize||getSize(_context,'height');var dy=-textHeight/4;if(svgClass[0]==='y'){mathjaxGroup.attr({transform:'rotate('+[-90,+_context.attr('x'),+_context.attr('y')]+') translate('+[-newSvgW/2,dy-newSvgH/2]+')'});newSvg.attr({x:+_context.attr('x'),y:+_context.attr('y')});}else if(svgClass[0]==='l'){newSvg.attr({x:_context.attr('x'),y:dy-newSvgH/2});}else if(svgClass[0]==='a'){newSvg.attr({x:0,y:dy});}else{newSvg.attr({x:newX,y:+_context.attr('y')+dy-newSvgH/2});}if(_callback)_callback.call(_context,mathjaxGroup);resolve(mathjaxGroup);});}));}else showText();return _context;};// MathJax\nvar LT_MATCH=/(<|&lt;|&#60;)/g;var GT_MATCH=/(>|&gt;|&#62;)/g;function cleanEscapesForTex(s){return s.replace(LT_MATCH,'\\\\lt ').replace(GT_MATCH,'\\\\gt ');}function texToSVG(_texString,_config,_callback){var originalRenderer,originalConfig,originalProcessSectionDelay,tmpDiv;MathJax.Hub.Queue(function(){originalConfig=Lib.extendDeepAll({},MathJax.Hub.config);originalProcessSectionDelay=MathJax.Hub.processSectionDelay;if(MathJax.Hub.processSectionDelay!==undefined){// MathJax 2.5+\nMathJax.Hub.processSectionDelay=0;}return MathJax.Hub.Config({messageStyle:'none',tex2jax:{inlineMath:[['$','$'],['\\\\(','\\\\)']]},displayAlign:'left'});},function(){// Get original renderer\noriginalRenderer=MathJax.Hub.config.menuSettings.renderer;if(originalRenderer!=='SVG'){return MathJax.Hub.setRenderer('SVG');}},function(){var randomID='math-output-'+Lib.randstr({},64);tmpDiv=d3.select('body').append('div').attr({id:randomID}).style({visibility:'hidden',position:'absolute'}).style({'font-size':_config.fontSize+'px'}).text(cleanEscapesForTex(_texString));return MathJax.Hub.Typeset(tmpDiv.node());},function(){var glyphDefs=d3.select('body').select('#MathJax_SVG_glyphs');if(tmpDiv.select('.MathJax_SVG').empty()||!tmpDiv.select('svg').node()){Lib.log('There was an error in the tex syntax.',_texString);_callback();}else{var svgBBox=tmpDiv.select('svg').node().getBoundingClientRect();_callback(tmpDiv.select('.MathJax_SVG'),glyphDefs,svgBBox);}tmpDiv.remove();if(originalRenderer!=='SVG'){return MathJax.Hub.setRenderer(originalRenderer);}},function(){if(originalProcessSectionDelay!==undefined){MathJax.Hub.processSectionDelay=originalProcessSectionDelay;}return MathJax.Hub.Config(originalConfig);});}var TAG_STYLES={// would like to use baseline-shift for sub/sup but FF doesn't support it\n// so we need to use dy along with the uber hacky shift-back-to\n// baseline below\nsup:'font-size:70%',sub:'font-size:70%',b:'font-weight:bold',i:'font-style:italic',a:'cursor:pointer',span:'',em:'font-style:italic;font-weight:bold'};// baseline shifts for sub and sup\nvar SHIFT_DY={sub:'0.3em',sup:'-0.6em'};// reset baseline by adding a tspan (empty except for a zero-width space)\n// with dy of -70% * SHIFT_DY (because font-size=70%)\nvar RESET_DY={sub:'-0.21em',sup:'0.42em'};var ZERO_WIDTH_SPACE=\"\\u200B\";/*\n * Whitelist of protocols in user-supplied urls. Mostly we want to avoid javascript\n * and related attack vectors. The empty items are there for IE, that in various\n * versions treats relative paths as having different flavors of no protocol, while\n * other browsers have these explicitly inherit the protocol of the page they're in.\n */var PROTOCOLS=['http:','https:','mailto:','',undefined,':'];var STRIP_TAGS=new RegExp('</?('+Object.keys(TAG_STYLES).join('|')+')( [^>]*)?/?>','g');var NEWLINES=/(\\r\\n?|\\n)/g;var SPLIT_TAGS=/(<[^<>]*>)/;var ONE_TAG=/<(\\/?)([^ >]*)(\\s+(.*))?>/i;var BR_TAG=/<br(\\s+.*)?>/i;/*\n * style and href: pull them out of either single or double quotes. Also\n * - target: (_blank|_self|_parent|_top|framename)\n *     note that you can't use target to get a popup but if you use popup,\n *     a `framename` will be passed along as the name of the popup window.\n *     per the spec, cannot contain whitespace.\n *     for backward compatibility we default to '_blank'\n * - popup: a custom one for us to enable popup (new window) links. String\n *     for window.open -> strWindowFeatures, like 'menubar=yes,width=500,height=550'\n *     note that at least in Chrome, you need to give at least one property\n *     in this string or the page will open in a new tab anyway. We follow this\n *     convention and will not make a popup if this string is empty.\n *     per the spec, cannot contain whitespace.\n *\n * Because we hack in other attributes with style (sub & sup), drop any trailing\n * semicolon in user-supplied styles so we can consistently append the tag-dependent style\n *\n * These are for tag attributes; Chrome anyway will convert entities in\n * attribute values, but not in attribute names\n * you can test this by for example:\n * > p = document.createElement('p')\n * > p.innerHTML = '<span styl&#x65;=\"font-color:r&#x65;d;\">Hi</span>'\n * > p.innerHTML\n * <- '<span styl&#x65;=\"font-color:red;\">Hi</span>'\n */var STYLEMATCH=/(^|[\\s\"'])style\\s*=\\s*(\"([^\"]*);?\"|'([^']*);?')/i;var HREFMATCH=/(^|[\\s\"'])href\\s*=\\s*(\"([^\"]*)\"|'([^']*)')/i;var TARGETMATCH=/(^|[\\s\"'])target\\s*=\\s*(\"([^\"\\s]*)\"|'([^'\\s]*)')/i;var POPUPMATCH=/(^|[\\s\"'])popup\\s*=\\s*(\"([\\w=,]*)\"|'([\\w=,]*)')/i;// dedicated matcher for these quoted regexes, that can return their results\n// in two different places\nfunction getQuotedMatch(_str,re){if(!_str)return null;var match=_str.match(re);var result=match&&(match[3]||match[4]);return result&&convertEntities(result);}var COLORMATCH=/(^|;)\\s*color:/;exports.plainText=function(_str){// strip out our pseudo-html so we have a readable\n// version to put into text fields\nreturn(_str||'').replace(STRIP_TAGS,' ');};/*\n * N.B. HTML entities are listed without the leading '&' and trailing ';'\n * https://www.freeformatter.com/html-entities.html\n *\n * FWIW if we wanted to support the full set, it has 2261 entries:\n * https://www.w3.org/TR/html5/entities.json\n * though I notice that some of these are duplicates and/or are missing \";\"\n * eg: \"&amp;\", \"&amp\", \"&AMP;\", and \"&AMP\" all map to \"&\"\n * We no longer need to include numeric entities here, these are now handled\n * by String.fromCodePoint/fromCharCode\n *\n * Anyway the only ones that are really important to allow are the HTML special\n * chars <, >, and &, because these ones can trigger special processing if not\n * replaced by the corresponding entity.\n */var entityToUnicode={mu:'μ',amp:'&',lt:'<',gt:'>',nbsp:' ',times:'×',plusmn:'±',deg:'°'};// NOTE: in general entities can contain uppercase too (so [a-zA-Z]) but all the\n// ones we support use only lowercase. If we ever change that, update the regex.\nvar ENTITY_MATCH=/&(#\\d+|#x[\\da-fA-F]+|[a-z]+);/g;function convertEntities(_str){return _str.replace(ENTITY_MATCH,function(fullMatch,innerMatch){var outChar;if(innerMatch.charAt(0)==='#'){// cannot use String.fromCodePoint in IE\noutChar=fromCodePoint(innerMatch.charAt(1)==='x'?parseInt(innerMatch.substr(2),16):parseInt(innerMatch.substr(1),10));}else outChar=entityToUnicode[innerMatch];// as in regular HTML, if we didn't decode the entity just\n// leave the raw text in place.\nreturn outChar||fullMatch;});}exports.convertEntities=convertEntities;function fromCodePoint(code){// Don't allow overflow. In Chrome this turns into � but I feel like it's\n// more useful to just not convert it at all.\nif(code>0x10FFFF)return;var stringFromCodePoint=String.fromCodePoint;if(stringFromCodePoint)return stringFromCodePoint(code);// IE doesn't have String.fromCodePoint\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\nvar stringFromCharCode=String.fromCharCode;if(code<=0xFFFF)return stringFromCharCode(code);return stringFromCharCode((code>>10)+0xD7C0,code%0x400+0xDC00);}/*\n * buildSVGText: convert our pseudo-html into SVG tspan elements, and attach these\n * to containerNode\n *\n * @param {svg text element} containerNode: the <text> node to insert this text into\n * @param {string} str: the pseudo-html string to convert to svg\n *\n * @returns {bool}: does the result contain any links? We need to handle the text element\n *   somewhat differently if it does, so just keep track of this when it happens.\n */function buildSVGText(containerNode,str){/*\n     * Normalize behavior between IE and others wrt newlines and whitespace:pre\n     * this combination makes IE barf https://github.com/plotly/plotly.js/issues/746\n     * Chrome and FF display \\n, \\r, or \\r\\n as a space in this mode.\n     * I feel like at some point we turned these into <br> but currently we don't so\n     * I'm just going to cement what we do now in Chrome and FF\n     */str=str.replace(NEWLINES,' ');var hasLink=false;// as we're building the text, keep track of what elements we're nested inside\n// nodeStack will be an array of {node, type, style, href, target, popup}\n// where only type: 'a' gets the last 3 and node is only added when it's created\nvar nodeStack=[];var currentNode;var currentLine=-1;function newLine(){currentLine++;var lineNode=document.createElementNS(xmlnsNamespaces.svg,'tspan');d3.select(lineNode).attr({class:'line',dy:currentLine*LINE_SPACING+'em'});containerNode.appendChild(lineNode);currentNode=lineNode;var oldNodeStack=nodeStack;nodeStack=[{node:lineNode}];if(oldNodeStack.length>1){for(var i=1;i<oldNodeStack.length;i++){enterNode(oldNodeStack[i]);}}}function enterNode(nodeSpec){var type=nodeSpec.type;var nodeAttrs={};var nodeType;if(type==='a'){nodeType='a';var target=nodeSpec.target;var href=nodeSpec.href;var popup=nodeSpec.popup;if(href){nodeAttrs={'xlink:xlink:show':target==='_blank'||target.charAt(0)!=='_'?'new':'replace',target:target,'xlink:xlink:href':href};if(popup){// security: href and target are not inserted as code but\n// as attributes. popup is, but limited to /[A-Za-z0-9_=,]/\nnodeAttrs.onclick='window.open(this.href.baseVal,this.target.baseVal,\"'+popup+'\");return false;';}}}else nodeType='tspan';if(nodeSpec.style)nodeAttrs.style=nodeSpec.style;var newNode=document.createElementNS(xmlnsNamespaces.svg,nodeType);if(type==='sup'||type==='sub'){addTextNode(currentNode,ZERO_WIDTH_SPACE);currentNode.appendChild(newNode);var resetter=document.createElementNS(xmlnsNamespaces.svg,'tspan');addTextNode(resetter,ZERO_WIDTH_SPACE);d3.select(resetter).attr('dy',RESET_DY[type]);nodeAttrs.dy=SHIFT_DY[type];currentNode.appendChild(newNode);currentNode.appendChild(resetter);}else{currentNode.appendChild(newNode);}d3.select(newNode).attr(nodeAttrs);currentNode=nodeSpec.node=newNode;nodeStack.push(nodeSpec);}function addTextNode(node,text){node.appendChild(document.createTextNode(text));}function exitNode(type){// A bare closing tag can't close the root node. If we encounter this it\n// means there's an extra closing tag that can just be ignored:\nif(nodeStack.length===1){Lib.log('Ignoring unexpected end tag </'+type+'>.',str);return;}var innerNode=nodeStack.pop();if(type!==innerNode.type){Lib.log('Start tag <'+innerNode.type+'> doesnt match end tag <'+type+'>. Pretending it did match.',str);}currentNode=nodeStack[nodeStack.length-1].node;}var hasLines=BR_TAG.test(str);if(hasLines)newLine();else{currentNode=containerNode;nodeStack=[{node:containerNode}];}var parts=str.split(SPLIT_TAGS);for(var i=0;i<parts.length;i++){var parti=parts[i];var match=parti.match(ONE_TAG);var tagType=match&&match[2].toLowerCase();var tagStyle=TAG_STYLES[tagType];if(tagType==='br'){newLine();}else if(tagStyle===undefined){addTextNode(currentNode,convertEntities(parti));}else{// tag - open or close\nif(match[1]){exitNode(tagType);}else{var extra=match[4];var nodeSpec={type:tagType};// now add style, from both the tag name and any extra css\n// Most of the svg css that users will care about is just like html,\n// but font color is different (uses fill). Let our users ignore this.\nvar css=getQuotedMatch(extra,STYLEMATCH);if(css){css=css.replace(COLORMATCH,'$1 fill:');if(tagStyle)css+=';'+tagStyle;}else if(tagStyle)css=tagStyle;if(css)nodeSpec.style=css;if(tagType==='a'){hasLink=true;var href=getQuotedMatch(extra,HREFMATCH);if(href){// check safe protocols\nvar dummyAnchor=document.createElement('a');dummyAnchor.href=href;if(PROTOCOLS.indexOf(dummyAnchor.protocol)!==-1){// Decode href to allow both already encoded and not encoded\n// URIs. Without decoding prior encoding, an already encoded\n// URI would be encoded twice producing a semantically different URI.\nnodeSpec.href=encodeURI(decodeURI(href));nodeSpec.target=getQuotedMatch(extra,TARGETMATCH)||'_blank';nodeSpec.popup=getQuotedMatch(extra,POPUPMATCH);}}}enterNode(nodeSpec);}}}return hasLink;}exports.lineCount=function lineCount(s){return s.selectAll('tspan.line').size()||1;};exports.positionText=function positionText(s,x,y){return s.each(function(){var text=d3.select(this);function setOrGet(attr,val){if(val===undefined){val=text.attr(attr);if(val===null){text.attr(attr,0);val=0;}}else text.attr(attr,val);return val;}var thisX=setOrGet('x',x);var thisY=setOrGet('y',y);if(this.nodeName==='text'){text.selectAll('tspan.line').attr({x:thisX,y:thisY});}});};function alignHTMLWith(_base,container,options){var alignH=options.horizontalAlign;var alignV=options.verticalAlign||'top';var bRect=_base.node().getBoundingClientRect();var cRect=container.node().getBoundingClientRect();var thisRect;var getTop;var getLeft;if(alignV==='bottom'){getTop=function getTop(){return bRect.bottom-thisRect.height;};}else if(alignV==='middle'){getTop=function getTop(){return bRect.top+(bRect.height-thisRect.height)/2;};}else{// default: top\ngetTop=function getTop(){return bRect.top;};}if(alignH==='right'){getLeft=function getLeft(){return bRect.right-thisRect.width;};}else if(alignH==='center'){getLeft=function getLeft(){return bRect.left+(bRect.width-thisRect.width)/2;};}else{// default: left\ngetLeft=function getLeft(){return bRect.left;};}return function(){thisRect=this.node().getBoundingClientRect();this.style({top:getTop()-cRect.top+'px',left:getLeft()-cRect.left+'px','z-index':1000});return this;};}/*\n * Editable title\n * @param {d3.selection} context: the element being edited. Normally text,\n *   but if it isn't, you should provide the styling options\n * @param {object} options:\n *   @param {div} options.gd: graphDiv\n *   @param {d3.selection} options.delegate: item to bind events to if not this\n *   @param {boolean} options.immediate: start editing now (true) or on click (false, default)\n *   @param {string} options.fill: font color if not as shown\n *   @param {string} options.background: background color if not as shown\n *   @param {string} options.text: initial text, if not as shown\n *   @param {string} options.horizontalAlign: alignment of the edit box wrt. the bound element\n *   @param {string} options.verticalAlign: alignment of the edit box wrt. the bound element\n */exports.makeEditable=function(context,options){var gd=options.gd;var _delegate=options.delegate;var dispatch=d3.dispatch('edit','input','cancel');var handlerElement=_delegate||context;context.style({'pointer-events':_delegate?'none':'all'});if(context.size()!==1)throw new Error('boo');function handleClick(){appendEditable();context.style({opacity:0});// also hide any mathjax svg\nvar svgClass=handlerElement.attr('class');var mathjaxClass;if(svgClass)mathjaxClass='.'+svgClass.split(' ')[0]+'-math-group';else mathjaxClass='[class*=-math-group]';if(mathjaxClass){d3.select(context.node().parentNode).select(mathjaxClass).style({opacity:0});}}function selectElementContents(_el){var el=_el.node();var range=document.createRange();range.selectNodeContents(el);var sel=window.getSelection();sel.removeAllRanges();sel.addRange(range);el.focus();}function appendEditable(){var plotDiv=d3.select(gd);var container=plotDiv.select('.svg-container');var div=container.append('div');var cStyle=context.node().style;var fontSize=parseFloat(cStyle.fontSize||12);var initialText=options.text;if(initialText===undefined)initialText=context.attr('data-unformatted');div.classed('plugin-editable editable',true).style({position:'absolute','font-family':cStyle.fontFamily||'Arial','font-size':fontSize,color:options.fill||cStyle.fill||'black',opacity:1,'background-color':options.background||'transparent',outline:'#ffffff33 1px solid',margin:[-fontSize/8+1,0,0,-1].join('px ')+'px',padding:'0','box-sizing':'border-box'}).attr({contenteditable:true}).text(initialText).call(alignHTMLWith(context,container,options)).on('blur',function(){gd._editing=false;context.text(this.textContent).style({opacity:1});var svgClass=d3.select(this).attr('class');var mathjaxClass;if(svgClass)mathjaxClass='.'+svgClass.split(' ')[0]+'-math-group';else mathjaxClass='[class*=-math-group]';if(mathjaxClass){d3.select(context.node().parentNode).select(mathjaxClass).style({opacity:0});}var text=this.textContent;d3.select(this).transition().duration(0).remove();d3.select(document).on('mouseup',null);dispatch.edit.call(context,text);}).on('focus',function(){var editDiv=this;gd._editing=true;d3.select(document).on('mouseup',function(){if(d3.event.target===editDiv)return false;if(document.activeElement===div.node())div.node().blur();});}).on('keyup',function(){if(d3.event.which===27){gd._editing=false;context.style({opacity:1});d3.select(this).style({opacity:0}).on('blur',function(){return false;}).transition().remove();dispatch.cancel.call(context,this.textContent);}else{dispatch.input.call(context,this.textContent);d3.select(this).call(alignHTMLWith(context,container,options));}}).on('keydown',function(){if(d3.event.which===13)this.blur();}).call(selectElementContents);}if(options.immediate)handleClick();else handlerElement.on('click',handleClick);return d3.rebind(context,dispatch,'on');};},{\"../constants/alignment\":394,\"../constants/xmlns_namespaces\":399,\"../lib\":423,\"d3\":71}],447:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var timerCache={};/**\n * Throttle a callback. `callback` executes synchronously only if\n * more than `minInterval` milliseconds have already elapsed since the latest\n * call (if any). Otherwise we wait until `minInterval` is over and execute the\n * last callback received while waiting.\n * So the first and last events in a train are always executed (eventually)\n * but some of the events in the middle can be dropped.\n *\n * @param {string} id: an identifier to mark events to throttle together\n * @param {number} minInterval: minimum time, in milliseconds, between\n *   invocations of `callback`\n * @param {function} callback: the function to throttle. `callback` itself\n *   should be a purely synchronous function.\n */exports.throttle=function throttle(id,minInterval,callback){var cache=timerCache[id];var now=Date.now();if(!cache){/*\n         * Throw out old items before making a new one, to prevent the cache\n         * getting overgrown, for example from old plots that have been replaced.\n         * 1 minute age is arbitrary.\n         */for(var idi in timerCache){if(timerCache[idi].ts<now-60000){delete timerCache[idi];}}cache=timerCache[id]={ts:0,timer:null};}_clearTimeout(cache);function exec(){callback();cache.ts=Date.now();if(cache.onDone){cache.onDone();cache.onDone=null;}}if(now>cache.ts+minInterval){exec();return;}cache.timer=setTimeout(function(){exec();cache.timer=null;},minInterval);};exports.done=function(id){var cache=timerCache[id];if(!cache||!cache.timer)return Promise.resolve();return new Promise(function(resolve){var previousOnDone=cache.onDone;cache.onDone=function onDone(){if(previousOnDone)previousOnDone();resolve();cache.onDone=null;};});};/**\n * Clear the throttle cache for one or all timers\n * @param {optional string} id:\n *   if provided, clear just this timer\n *   if omitted, clear all timers (mainly useful for testing)\n */exports.clear=function(id){if(id){_clearTimeout(timerCache[id]);delete timerCache[id];}else{for(var idi in timerCache){exports.clear(idi);}}};function _clearTimeout(cache){if(cache&&cache.timer!==null){clearTimeout(cache.timer);cache.timer=null;}}},{}],448:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');/**\n * convert a linear value into a logged value, folding negative numbers into\n * the given range\n */module.exports=function toLogRange(val,range){if(val>0)return Math.log(val)/Math.LN10;// move a negative value reference to a log axis - just put the\n// result at the lowest range value on the plot (or if the range also went negative,\n// one millionth of the top of the range)\nvar newVal=Math.log(Math.min(range[0],range[1]))/Math.LN10;if(!isNumeric(newVal))newVal=Math.log(Math.max(range[0],range[1]))/Math.LN10-6;return newVal;};},{\"fast-isnumeric\":80}],449:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={moduleType:'locale',name:'en-US',dictionary:{'Click to enter Colorscale title':'Click to enter Colorscale title'},format:{date:'%m/%d/%Y'}};},{}],450:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={moduleType:'locale',name:'en',dictionary:{'Click to enter Colorscale title':'Click to enter Colourscale title'},format:{days:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],shortDays:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],months:['January','February','March','April','May','June','July','August','September','October','November','December'],shortMonths:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],periods:['AM','PM'],dateTime:'%a %b %e %X %Y',date:'%d/%m/%Y',time:'%H:%M:%S',decimal:'.',thousands:',',grouping:[3],currency:['$',''],year:'%Y',month:'%b %Y',dayMonth:'%b %-d',dayMonthYear:'%b %-d, %Y'}};},{}],451:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../registry');/*\n * containerArrayMatch: does this attribute string point into a\n * layout container array?\n *\n * @param {String} astr: an attribute string, like *annotations[2].text*\n *\n * @returns {Object | false} Returns false if `astr` doesn't match a container\n *  array. If it does, returns:\n *     {array: {String}, index: {Number}, property: {String}}\n *  ie the attribute string for the array, the index within the array (or ''\n *  if the whole array) and the property within that (or '' if the whole array\n *  or the whole object)\n */module.exports=function containerArrayMatch(astr){var rootContainers=Registry.layoutArrayContainers;var regexpContainers=Registry.layoutArrayRegexes;var rootPart=astr.split('[')[0];var arrayStr;var match;// look for regexp matches first, because they may be nested inside root matches\n// eg updatemenus[i].buttons is nested inside updatemenus\nfor(var i=0;i<regexpContainers.length;i++){match=astr.match(regexpContainers[i]);if(match&&match.index===0){arrayStr=match[0];break;}}// now look for root matches\nif(!arrayStr)arrayStr=rootContainers[rootContainers.indexOf(rootPart)];if(!arrayStr)return false;var tail=astr.substr(arrayStr.length);if(!tail)return{array:arrayStr,index:'',property:''};match=tail.match(/^\\[(0|[1-9][0-9]*)\\](\\.(.+))?$/);if(!match)return false;return{array:arrayStr,index:Number(match[1]),property:match[3]||''};};},{\"../registry\":521}],452:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../lib');var extendFlat=Lib.extendFlat;var isPlainObject=Lib.isPlainObject;var traceOpts={valType:'flaglist',extras:['none'],flags:['calc','clearAxisTypes','plot','style','markerSize','colorbars']};var layoutOpts={valType:'flaglist',extras:['none'],flags:['calc','plot','legend','ticks','axrange','layoutstyle','modebar','camera','arraydraw']};// flags for inside restyle/relayout include a few extras\n// that shouldn't be used in attributes, to deal with certain\n// combinations and conditionals efficiently\nvar traceEditTypeFlags=traceOpts.flags.slice().concat(['fullReplot']);var layoutEditTypeFlags=layoutOpts.flags.slice().concat('layoutReplot');module.exports={traces:traceOpts,layout:layoutOpts,/*\n     * default (all false) edit flags for restyle (traces)\n     * creates a new object each call, so the caller can mutate freely\n     */traceFlags:function traceFlags(){return falseObj(traceEditTypeFlags);},/*\n     * default (all false) edit flags for relayout\n     * creates a new object each call, so the caller can mutate freely\n     */layoutFlags:function layoutFlags(){return falseObj(layoutEditTypeFlags);},/*\n     * update `flags` with the `editType` values found in `attr`\n     */update:function update(flags,attr){var editType=attr.editType;if(editType&&editType!=='none'){var editTypeParts=editType.split('+');for(var i=0;i<editTypeParts.length;i++){flags[editTypeParts[i]]=true;}}},overrideAll:overrideAll};function falseObj(keys){var out={};for(var i=0;i<keys.length;i++){out[keys[i]]=false;}return out;}/**\n * For attributes that are largely copied from elsewhere into a plot type that doesn't\n * support partial redraws - overrides the editType field of all attributes in the object\n *\n * @param {object} attrs: the attributes to override. Will not be mutated.\n * @param {string} editTypeOverride: the new editType to use\n * @param {'nested'|'from-root'} overrideContainers:\n *   - 'nested' will override editType for nested containers but not the root.\n *   - 'from-root' will also override editType of the root container.\n *   Containers below the absolute top level (trace or layout root) DO need an\n *   editType even if they are not `valObject`s themselves (eg `scatter.marker`)\n *   to handle the case where you edit the whole container.\n *\n * @return {object} a new attributes object with `editType` modified as directed\n */function overrideAll(attrs,editTypeOverride,overrideContainers){var out=extendFlat({},attrs);for(var key in out){var attr=out[key];if(isPlainObject(attr)){out[key]=overrideOne(attr,editTypeOverride,overrideContainers,key);}}if(overrideContainers==='from-root')out.editType=editTypeOverride;return out;}function overrideOne(attr,editTypeOverride,overrideContainers,key){if(attr.valType){var out=extendFlat({},attr);out.editType=editTypeOverride;if(Array.isArray(attr.items)){out.items=new Array(attr.items.length);for(var i=0;i<attr.items.length;i++){out.items[i]=overrideOne(attr.items[i],editTypeOverride,'from-root');}}return out;}else{// don't provide an editType for the _deprecated container\nreturn overrideAll(attr,editTypeOverride,key.charAt(0)==='_'?'nested':'from-root');}}},{\"../lib\":423}],453:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var m4FromQuat=_dereq_('gl-mat4/fromQuat');var Registry=_dereq_('../registry');var Lib=_dereq_('../lib');var Plots=_dereq_('../plots/plots');var AxisIds=_dereq_('../plots/cartesian/axis_ids');var cleanId=AxisIds.cleanId;var getFromTrace=AxisIds.getFromTrace;var Color=_dereq_('../components/color');// clear the promise queue if one of them got rejected\nexports.clearPromiseQueue=function(gd){if(Array.isArray(gd._promises)&&gd._promises.length>0){Lib.log('Clearing previous rejected promises from queue.');}gd._promises=[];};// make a few changes to the layout right away\n// before it gets used for anything\n// backward compatibility and cleanup of nonstandard options\nexports.cleanLayout=function(layout){var i,j;if(!layout)layout={};// cannot have (x|y)axis1, numbering goes axis, axis2, axis3...\nif(layout.xaxis1){if(!layout.xaxis)layout.xaxis=layout.xaxis1;delete layout.xaxis1;}if(layout.yaxis1){if(!layout.yaxis)layout.yaxis=layout.yaxis1;delete layout.yaxis1;}if(layout.scene1){if(!layout.scene)layout.scene=layout.scene1;delete layout.scene1;}var axisAttrRegex=(Plots.subplotsRegistry.cartesian||{}).attrRegex;var polarAttrRegex=(Plots.subplotsRegistry.polar||{}).attrRegex;var ternaryAttrRegex=(Plots.subplotsRegistry.ternary||{}).attrRegex;var sceneAttrRegex=(Plots.subplotsRegistry.gl3d||{}).attrRegex;var keys=Object.keys(layout);for(i=0;i<keys.length;i++){var key=keys[i];// modifications to cartesian axes\nif(axisAttrRegex&&axisAttrRegex.test(key)){var ax=layout[key];if(ax.anchor&&ax.anchor!=='free'){ax.anchor=cleanId(ax.anchor);}if(ax.overlaying)ax.overlaying=cleanId(ax.overlaying);// old method of axis type - isdate and islog (before category existed)\nif(!ax.type){if(ax.isdate)ax.type='date';else if(ax.islog)ax.type='log';else if(ax.isdate===false&&ax.islog===false)ax.type='linear';}if(ax.autorange==='withzero'||ax.autorange==='tozero'){ax.autorange=true;ax.rangemode='tozero';}delete ax.islog;delete ax.isdate;delete ax.categories;// replaced by _categories\n// prune empty domain arrays made before the new nestedProperty\nif(emptyContainer(ax,'domain'))delete ax.domain;// autotick -> tickmode\nif(ax.autotick!==undefined){if(ax.tickmode===undefined){ax.tickmode=ax.autotick?'auto':'linear';}delete ax.autotick;}cleanTitle(ax);}// modifications for polar\nelse if(polarAttrRegex&&polarAttrRegex.test(key)){var polar=layout[key];cleanTitle(polar.radialaxis);}// modifications for ternary\nelse if(ternaryAttrRegex&&ternaryAttrRegex.test(key)){var ternary=layout[key];cleanTitle(ternary.aaxis);cleanTitle(ternary.baxis);cleanTitle(ternary.caxis);}// modifications for 3D scenes\nelse if(sceneAttrRegex&&sceneAttrRegex.test(key)){var scene=layout[key];// clean old Camera coords\nvar cameraposition=scene.cameraposition;if(Array.isArray(cameraposition)&&cameraposition[0].length===4){var rotation=cameraposition[0];var center=cameraposition[1];var radius=cameraposition[2];var mat=m4FromQuat([],rotation);var eye=[];for(j=0;j<3;++j){eye[j]=center[j]+radius*mat[2+4*j];}scene.camera={eye:{x:eye[0],y:eye[1],z:eye[2]},center:{x:center[0],y:center[1],z:center[2]},up:{x:0,y:0,z:1// we just ignore calculating camera z up in this case\n}};delete scene.cameraposition;}// clean axis titles\ncleanTitle(scene.xaxis);cleanTitle(scene.yaxis);cleanTitle(scene.zaxis);}}var annotationsLen=Array.isArray(layout.annotations)?layout.annotations.length:0;for(i=0;i<annotationsLen;i++){var ann=layout.annotations[i];if(!Lib.isPlainObject(ann))continue;if(ann.ref){if(ann.ref==='paper'){ann.xref='paper';ann.yref='paper';}else if(ann.ref==='data'){ann.xref='x';ann.yref='y';}delete ann.ref;}cleanAxRef(ann,'xref');cleanAxRef(ann,'yref');}var shapesLen=Array.isArray(layout.shapes)?layout.shapes.length:0;for(i=0;i<shapesLen;i++){var shape=layout.shapes[i];if(!Lib.isPlainObject(shape))continue;cleanAxRef(shape,'xref');cleanAxRef(shape,'yref');}var legend=layout.legend;if(legend){// check for old-style legend positioning (x or y is +/- 100)\nif(legend.x>3){legend.x=1.02;legend.xanchor='left';}else if(legend.x<-2){legend.x=-0.02;legend.xanchor='right';}if(legend.y>3){legend.y=1.02;legend.yanchor='bottom';}else if(legend.y<-2){legend.y=-0.02;legend.yanchor='top';}}// clean plot title\ncleanTitle(layout);/*\n     * Moved from rotate -> orbit for dragmode\n     */if(layout.dragmode==='rotate')layout.dragmode='orbit';// sanitize rgb(fractions) and rgba(fractions) that old tinycolor\n// supported, but new tinycolor does not because they're not valid css\nColor.clean(layout);// clean the layout container in layout.template\nif(layout.template&&layout.template.layout){exports.cleanLayout(layout.template.layout);}return layout;};function cleanAxRef(container,attr){var valIn=container[attr];var axLetter=attr.charAt(0);if(valIn&&valIn!=='paper'){container[attr]=cleanId(valIn,axLetter);}}/**\n * Cleans up old title attribute structure (flat) in favor of the new one (nested).\n *\n * @param {Object} titleContainer - an object potentially including deprecated title attributes\n */function cleanTitle(titleContainer){if(titleContainer){// title -> title.text\n// (although title used to be a string attribute,\n// numbers are accepted as well)\nif(typeof titleContainer.title==='string'||typeof titleContainer.title==='number'){titleContainer.title={text:titleContainer.title};}rewireAttr('titlefont','font');rewireAttr('titleposition','position');rewireAttr('titleside','side');rewireAttr('titleoffset','offset');}function rewireAttr(oldAttrName,newAttrName){var oldAttrSet=titleContainer[oldAttrName];var newAttrSet=titleContainer.title&&titleContainer.title[newAttrName];if(oldAttrSet&&!newAttrSet){// Ensure title object exists\nif(!titleContainer.title){titleContainer.title={};}titleContainer.title[newAttrName]=titleContainer[oldAttrName];delete titleContainer[oldAttrName];}}}/*\n * cleanData: Make a few changes to the data for backward compatibility\n * before it gets used for anything. Modifies the data traces users provide.\n *\n * Important: if you're going to add something here that modifies a data array,\n * update it in place so the new array === the old one.\n */exports.cleanData=function(data){for(var tracei=0;tracei<data.length;tracei++){var trace=data[tracei];var i;// use xbins to bin data in x, and ybins to bin data in y\nif(trace.type==='histogramy'&&'xbins'in trace&&!('ybins'in trace)){trace.ybins=trace.xbins;delete trace.xbins;}// error_y.opacity is obsolete - merge into color\nif(trace.error_y&&'opacity'in trace.error_y){var dc=Color.defaults;var yeColor=trace.error_y.color||(Registry.traceIs(trace,'bar')?Color.defaultLine:dc[tracei%dc.length]);trace.error_y.color=Color.addOpacity(Color.rgb(yeColor),Color.opacity(yeColor)*trace.error_y.opacity);delete trace.error_y.opacity;}// convert bardir to orientation, and put the data into\n// the axes it's eventually going to be used with\nif('bardir'in trace){if(trace.bardir==='h'&&(Registry.traceIs(trace,'bar')||trace.type.substr(0,9)==='histogram')){trace.orientation='h';exports.swapXYData(trace);}delete trace.bardir;}// now we have only one 1D histogram type, and whether\n// it uses x or y data depends on trace.orientation\nif(trace.type==='histogramy')exports.swapXYData(trace);if(trace.type==='histogramx'||trace.type==='histogramy'){trace.type='histogram';}// scl->scale, reversescl->reversescale\nif('scl'in trace&&!('colorscale'in trace)){trace.colorscale=trace.scl;delete trace.scl;}if('reversescl'in trace&&!('reversescale'in trace)){trace.reversescale=trace.reversescl;delete trace.reversescl;}// axis ids x1 -> x, y1-> y\nif(trace.xaxis)trace.xaxis=cleanId(trace.xaxis,'x');if(trace.yaxis)trace.yaxis=cleanId(trace.yaxis,'y');// scene ids scene1 -> scene\nif(Registry.traceIs(trace,'gl3d')&&trace.scene){trace.scene=Plots.subplotsRegistry.gl3d.cleanId(trace.scene);}if(!Registry.traceIs(trace,'pie')&&!Registry.traceIs(trace,'bar')){if(Array.isArray(trace.textposition)){for(i=0;i<trace.textposition.length;i++){trace.textposition[i]=cleanTextPosition(trace.textposition[i]);}}else if(trace.textposition){trace.textposition=cleanTextPosition(trace.textposition);}}// fix typo in colorscale definition\nvar _module=Registry.getModule(trace);if(_module&&_module.colorbar){var containerName=_module.colorbar.container;var container=containerName?trace[containerName]:trace;if(container&&container.colorscale){if(container.colorscale==='YIGnBu')container.colorscale='YlGnBu';if(container.colorscale==='YIOrRd')container.colorscale='YlOrRd';}}// fix typo in surface 'highlight*' definitions\nif(trace.type==='surface'&&Lib.isPlainObject(trace.contours)){var dims=['x','y','z'];for(i=0;i<dims.length;i++){var opts=trace.contours[dims[i]];if(!Lib.isPlainObject(opts))continue;if(opts.highlightColor){opts.highlightcolor=opts.highlightColor;delete opts.highlightColor;}if(opts.highlightWidth){opts.highlightwidth=opts.highlightWidth;delete opts.highlightWidth;}}}// fixes from converting finance from transforms to real trace types\nif(trace.type==='candlestick'||trace.type==='ohlc'){var increasingShowlegend=(trace.increasing||{}).showlegend!==false;var decreasingShowlegend=(trace.decreasing||{}).showlegend!==false;var increasingName=cleanFinanceDir(trace.increasing);var decreasingName=cleanFinanceDir(trace.decreasing);// now figure out something smart to do with the separate direction\n// names we removed\nif(increasingName!==false&&decreasingName!==false){// both sub-names existed: base name previously had no effect\n// so ignore it and try to find a shared part of the sub-names\nvar newName=commonPrefix(increasingName,decreasingName,increasingShowlegend,decreasingShowlegend);// if no common part, leave whatever name was (or wasn't) there\nif(newName)trace.name=newName;}else if((increasingName||decreasingName)&&!trace.name){// one sub-name existed but not the base name - just use the sub-name\ntrace.name=increasingName||decreasingName;}}// transforms backward compatibility fixes\nif(Array.isArray(trace.transforms)){var transforms=trace.transforms;for(i=0;i<transforms.length;i++){var transform=transforms[i];if(!Lib.isPlainObject(transform))continue;switch(transform.type){case'filter':if(transform.filtersrc){transform.target=transform.filtersrc;delete transform.filtersrc;}if(transform.calendar){if(!transform.valuecalendar){transform.valuecalendar=transform.calendar;}delete transform.calendar;}break;case'groupby':// Name has changed from `style` to `styles`, so use `style` but prefer `styles`:\ntransform.styles=transform.styles||transform.style;if(transform.styles&&!Array.isArray(transform.styles)){var prevStyles=transform.styles;var styleKeys=Object.keys(prevStyles);transform.styles=[];for(var j=0;j<styleKeys.length;j++){transform.styles.push({target:styleKeys[j],value:prevStyles[styleKeys[j]]});}}break;}}}// prune empty containers made before the new nestedProperty\nif(emptyContainer(trace,'line'))delete trace.line;if('marker'in trace){if(emptyContainer(trace.marker,'line'))delete trace.marker.line;if(emptyContainer(trace,'marker'))delete trace.marker;}// sanitize rgb(fractions) and rgba(fractions) that old tinycolor\n// supported, but new tinycolor does not because they're not valid css\nColor.clean(trace);// remove obsolete autobin(x|y) attributes, but only if true\n// if false, this needs to happen in Histogram.calc because it\n// can be a one-time autobin so we need to know the results before\n// we can push them back into the trace.\nif(trace.autobinx){delete trace.autobinx;delete trace.xbins;}if(trace.autobiny){delete trace.autobiny;delete trace.ybins;}cleanTitle(trace);if(trace.colorbar)cleanTitle(trace.colorbar);if(trace.marker&&trace.marker.colorbar)cleanTitle(trace.marker.colorbar);if(trace.line&&trace.line.colorbar)cleanTitle(trace.line.colorbar);if(trace.aaxis)cleanTitle(trace.aaxis);if(trace.baxis)cleanTitle(trace.baxis);}};function cleanFinanceDir(dirContainer){if(!Lib.isPlainObject(dirContainer))return false;var dirName=dirContainer.name;delete dirContainer.name;delete dirContainer.showlegend;return(typeof dirName==='string'||typeof dirName==='number')&&String(dirName);}function commonPrefix(name1,name2,show1,show2){// if only one is shown in the legend, use that\nif(show1&&!show2)return name1;if(show2&&!show1)return name2;// if both or neither are in the legend, check if one is blank (or whitespace)\n// and use the other one\n// note that hover labels can still use the name even if the legend doesn't\nif(!name1.trim())return name2;if(!name2.trim())return name1;var minLen=Math.min(name1.length,name2.length);var i;for(i=0;i<minLen;i++){if(name1.charAt(i)!==name2.charAt(i))break;}var out=name1.substr(0,i);return out.trim();}// textposition - support partial attributes (ie just 'top')\n// and incorrect use of middle / center etc.\nfunction cleanTextPosition(textposition){var posY='middle';var posX='center';if(typeof textposition==='string'){if(textposition.indexOf('top')!==-1)posY='top';else if(textposition.indexOf('bottom')!==-1)posY='bottom';if(textposition.indexOf('left')!==-1)posX='left';else if(textposition.indexOf('right')!==-1)posX='right';}return posY+' '+posX;}function emptyContainer(outer,innerStr){return innerStr in outer&&_typeof(outer[innerStr])==='object'&&Object.keys(outer[innerStr]).length===0;}// swap all the data and data attributes associated with x and y\nexports.swapXYData=function(trace){var i;Lib.swapAttrs(trace,['?','?0','d?','?bins','nbins?','autobin?','?src','error_?']);if(Array.isArray(trace.z)&&Array.isArray(trace.z[0])){if(trace.transpose)delete trace.transpose;else trace.transpose=true;}if(trace.error_x&&trace.error_y){var errorY=trace.error_y;var copyYstyle='copy_ystyle'in errorY?errorY.copy_ystyle:!(errorY.color||errorY.thickness||errorY.width);Lib.swapAttrs(trace,['error_?.copy_ystyle']);if(copyYstyle){Lib.swapAttrs(trace,['error_?.color','error_?.thickness','error_?.width']);}}if(typeof trace.hoverinfo==='string'){var hoverInfoParts=trace.hoverinfo.split('+');for(i=0;i<hoverInfoParts.length;i++){if(hoverInfoParts[i]==='x')hoverInfoParts[i]='y';else if(hoverInfoParts[i]==='y')hoverInfoParts[i]='x';}trace.hoverinfo=hoverInfoParts.join('+');}};// coerce traceIndices input to array of trace indices\nexports.coerceTraceIndices=function(gd,traceIndices){if(isNumeric(traceIndices)){return[traceIndices];}else if(!Array.isArray(traceIndices)||!traceIndices.length){return gd.data.map(function(_,i){return i;});}else if(Array.isArray(traceIndices)){var traceIndicesOut=[];for(var i=0;i<traceIndices.length;i++){if(Lib.isIndex(traceIndices[i],gd.data.length)){traceIndicesOut.push(traceIndices[i]);}else{Lib.warn('trace index (',traceIndices[i],') is not a number or is out of bounds');}}return traceIndicesOut;}return traceIndices;};/**\n * Manages logic around array container item creation / deletion / update\n * that nested property alone can't handle.\n *\n * @param {Object} np\n *  nested property of update attribute string about trace or layout object\n * @param {*} newVal\n *  update value passed to restyle / relayout / update\n * @param {Object} undoit\n *  undo hash (N.B. undoit may be mutated here).\n *\n */exports.manageArrayContainers=function(np,newVal,undoit){var obj=np.obj;var parts=np.parts;var pLength=parts.length;var pLast=parts[pLength-1];var pLastIsNumber=isNumeric(pLast);// delete item\nif(pLastIsNumber&&newVal===null){// Clear item in array container when new value is null\nvar contPath=parts.slice(0,pLength-1).join('.');var cont=Lib.nestedProperty(obj,contPath).get();cont.splice(pLast,1);// Note that nested property clears null / undefined at end of\n// array container, but not within them.\n}// create item\nelse if(pLastIsNumber&&np.get()===undefined){// When adding a new item, make sure undo command will remove it\nif(np.get()===undefined)undoit[np.astr]=null;np.set(newVal);}// update item\nelse{// If the last part of attribute string isn't a number,\n// np.set is all we need.\nnp.set(newVal);}};/*\n * Match the part to strip off to turn an attribute into its parent\n * really it should be either '.some_characters' or '[number]'\n * but we're a little more permissive here and match either\n * '.not_brackets_or_dot' or '[not_brackets_or_dot]'\n */var ATTR_TAIL_RE=/(\\.[^\\[\\]\\.]+|\\[[^\\[\\]\\.]+\\])$/;function getParent(attr){var tail=attr.search(ATTR_TAIL_RE);if(tail>0)return attr.substr(0,tail);}/*\n * hasParent: does an attribute object contain a parent of the given attribute?\n * for example, given 'images[2].x' do we also have 'images' or 'images[2]'?\n *\n * @param {Object} aobj\n *  update object, whose keys are attribute strings and values are their new settings\n * @param {string} attr\n *  the attribute string to test against\n * @returns {Boolean}\n *  is a parent of attr present in aobj?\n */exports.hasParent=function(aobj,attr){var attrParent=getParent(attr);while(attrParent){if(attrParent in aobj)return true;attrParent=getParent(attrParent);}return false;};/**\n * Empty out types for all axes containing these traces so we auto-set them again\n *\n * @param {object} gd\n * @param {[integer]} traces: trace indices to search for axes to clear the types of\n * @param {object} layoutUpdate: any update being done concurrently to the layout,\n *   which may supercede clearing the axis types\n */var axLetters=['x','y','z'];exports.clearAxisTypes=function(gd,traces,layoutUpdate){for(var i=0;i<traces.length;i++){var trace=gd._fullData[i];for(var j=0;j<3;j++){var ax=getFromTrace(gd,trace,axLetters[j]);// do not clear log type - that's never an auto result so must have been intentional\nif(ax&&ax.type!=='log'){var axAttr=ax._name;var sceneName=ax._id.substr(1);if(sceneName.substr(0,5)==='scene'){if(layoutUpdate[sceneName]!==undefined)continue;axAttr=sceneName+'.'+axAttr;}var typeAttr=axAttr+'.type';if(layoutUpdate[axAttr]===undefined&&layoutUpdate[typeAttr]===undefined){Lib.nestedProperty(gd.layout,typeAttr).set(null);}}}}};},{\"../components/color\":299,\"../lib\":423,\"../plots/cartesian/axis_ids\":472,\"../plots/plots\":513,\"../registry\":521,\"fast-isnumeric\":80,\"gl-mat4/fromQuat\":108}],454:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var main=_dereq_('./plot_api');exports.plot=main.plot;exports.newPlot=main.newPlot;exports.restyle=main.restyle;exports.relayout=main.relayout;exports.redraw=main.redraw;exports.update=main.update;exports._guiRestyle=main._guiRestyle;exports._guiRelayout=main._guiRelayout;exports._guiUpdate=main._guiUpdate;exports._storeDirectGUIEdit=main._storeDirectGUIEdit;exports.react=main.react;exports.extendTraces=main.extendTraces;exports.prependTraces=main.prependTraces;exports.addTraces=main.addTraces;exports.deleteTraces=main.deleteTraces;exports.moveTraces=main.moveTraces;exports.purge=main.purge;exports.addFrames=main.addFrames;exports.deleteFrames=main.deleteFrames;exports.animate=main.animate;exports.setPlotConfig=main.setPlotConfig;exports.toImage=_dereq_('./to_image');exports.validate=_dereq_('./validate');exports.downloadImage=_dereq_('../snapshot/download');var templateApi=_dereq_('./template_api');exports.makeTemplate=templateApi.makeTemplate;exports.validateTemplate=templateApi.validateTemplate;},{\"../snapshot/download\":523,\"./plot_api\":456,\"./template_api\":461,\"./to_image\":462,\"./validate\":463}],455:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isPlainObject=_dereq_('../lib/is_plain_object');var noop=_dereq_('../lib/noop');var Loggers=_dereq_('../lib/loggers');var sorterAsc=_dereq_('../lib/search').sorterAsc;var Registry=_dereq_('../registry');exports.containerArrayMatch=_dereq_('./container_array_match');var isAddVal=exports.isAddVal=function isAddVal(val){return val==='add'||isPlainObject(val);};var isRemoveVal=exports.isRemoveVal=function isRemoveVal(val){return val===null||val==='remove';};/*\n * applyContainerArrayChanges: for managing arrays of layout components in relayout\n * handles them all with a consistent interface.\n *\n * Here are the supported actions -> relayout calls -> edits we get here\n * (as prepared in _relayout):\n *\n * add an empty obj -> {'annotations[2]': 'add'} -> {2: {'': 'add'}}\n * add a specific obj -> {'annotations[2]': {attrs}} -> {2: {'': {attrs}}}\n * delete an obj -> {'annotations[2]': 'remove'} -> {2: {'': 'remove'}}\n *               -> {'annotations[2]': null} -> {2: {'': null}}\n * delete the whole array -> {'annotations': 'remove'} -> {'': {'': 'remove'}}\n *                        -> {'annotations': null} -> {'': {'': null}}\n * edit an object -> {'annotations[2].text': 'boo'} -> {2: {'text': 'boo'}}\n *\n * You can combine many edits to different objects. Objects are added and edited\n * in ascending order, then removed in descending order.\n * For example, starting with [a, b, c], if you want to:\n * - replace b with d:\n *   {'annotations[1]': d, 'annotations[2]': null} (b is item 2 after adding d)\n * - add a new item d between a and b, and edit b:\n *    {'annotations[1]': d, 'annotations[2].x': newX} (b is item 2 after adding d)\n * - delete b and edit c:\n *    {'annotations[1]': null, 'annotations[2].x': newX} (c is edited before b is removed)\n *\n * You CANNOT combine adding/deleting an item at index `i` with edits to the same index `i`\n * You CANNOT combine replacing/deleting the whole array with anything else (for the same array).\n *\n * @param {HTMLDivElement} gd\n *  the DOM element of the graph container div\n * @param {Lib.nestedProperty} componentType: the array we are editing\n * @param {Object} edits\n *  the changes to make; keys are indices to edit, values are themselves objects:\n *  {attr: newValue} of changes to make to that index (with add/remove behavior\n *  in special values of the empty attr)\n * @param {Object} flags\n *  the flags for which actions we're going to perform to display these (and\n *  any other) changes. If we're already `recalc`ing, we don't need to redraw\n *  individual items\n * @param {function} _nestedProperty\n *  a (possibly modified for gui edits) nestedProperty constructor\n *  The modified version takes a 3rd argument, for a prefix to the attribute\n *  string necessary for storing GUI edits\n *\n * @returns {bool} `true` if it managed to complete drawing of the changes\n *  `false` would mean the parent should replot.\n */exports.applyContainerArrayChanges=function applyContainerArrayChanges(gd,np,edits,flags,_nestedProperty){var componentType=np.astr;var supplyComponentDefaults=Registry.getComponentMethod(componentType,'supplyLayoutDefaults');var draw=Registry.getComponentMethod(componentType,'draw');var drawOne=Registry.getComponentMethod(componentType,'drawOne');var replotLater=flags.replot||flags.recalc||supplyComponentDefaults===noop||draw===noop;var layout=gd.layout;var fullLayout=gd._fullLayout;if(edits['']){if(Object.keys(edits).length>1){Loggers.warn('Full array edits are incompatible with other edits',componentType);}var fullVal=edits[''][''];if(isRemoveVal(fullVal))np.set(null);else if(Array.isArray(fullVal))np.set(fullVal);else{Loggers.warn('Unrecognized full array edit value',componentType,fullVal);return true;}if(replotLater)return false;supplyComponentDefaults(layout,fullLayout);draw(gd);return true;}var componentNums=Object.keys(edits).map(Number).sort(sorterAsc);var componentArrayIn=np.get();var componentArray=componentArrayIn||[];// componentArrayFull is used just to keep splices in line between\n// full and input arrays, so private keys can be copied over after\n// redoing supplyDefaults\n// TODO: this assumes componentArray is in gd.layout - which will not be\n// true after we extend this to restyle\nvar componentArrayFull=_nestedProperty(fullLayout,componentType).get();var deletes=[];var firstIndexChange=-1;var maxIndex=componentArray.length;var i;var j;var componentNum;var objEdits;var objKeys;var objVal;var adding,prefix;// first make the add and edit changes\nfor(i=0;i<componentNums.length;i++){componentNum=componentNums[i];objEdits=edits[componentNum];objKeys=Object.keys(objEdits);objVal=objEdits[''],adding=isAddVal(objVal);if(componentNum<0||componentNum>componentArray.length-(adding?0:1)){Loggers.warn('index out of range',componentType,componentNum);continue;}if(objVal!==undefined){if(objKeys.length>1){Loggers.warn('Insertion & removal are incompatible with edits to the same index.',componentType,componentNum);}if(isRemoveVal(objVal)){deletes.push(componentNum);}else if(adding){if(objVal==='add')objVal={};componentArray.splice(componentNum,0,objVal);if(componentArrayFull)componentArrayFull.splice(componentNum,0,{});}else{Loggers.warn('Unrecognized full object edit value',componentType,componentNum,objVal);}if(firstIndexChange===-1)firstIndexChange=componentNum;}else{for(j=0;j<objKeys.length;j++){prefix=componentType+'['+componentNum+'].';_nestedProperty(componentArray[componentNum],objKeys[j],prefix).set(objEdits[objKeys[j]]);}}}// now do deletes\nfor(i=deletes.length-1;i>=0;i--){componentArray.splice(deletes[i],1);// TODO: this drops private keys that had been stored in componentArrayFull\n// does this have any ill effects?\nif(componentArrayFull)componentArrayFull.splice(deletes[i],1);}if(!componentArray.length)np.set(null);else if(!componentArrayIn)np.set(componentArray);if(replotLater)return false;supplyComponentDefaults(layout,fullLayout);// finally draw all the components we need to\n// if we added or removed any, redraw all after it\nif(drawOne!==noop){var indicesToDraw;if(firstIndexChange===-1){// there's no re-indexing to do, so only redraw components that changed\nindicesToDraw=componentNums;}else{// in case the component array was shortened, we still need do call\n// drawOne on the latter items so they get properly removed\nmaxIndex=Math.max(componentArray.length,maxIndex);indicesToDraw=[];for(i=0;i<componentNums.length;i++){componentNum=componentNums[i];if(componentNum>=firstIndexChange)break;indicesToDraw.push(componentNum);}for(i=firstIndexChange;i<maxIndex;i++){indicesToDraw.push(i);}}for(i=0;i<indicesToDraw.length;i++){drawOne(gd,indicesToDraw[i]);}}else draw(gd);return true;};},{\"../lib/is_plain_object\":424,\"../lib/loggers\":427,\"../lib/noop\":432,\"../lib/search\":441,\"../registry\":521,\"./container_array_match\":451}],456:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var isNumeric=_dereq_('fast-isnumeric');var hasHover=_dereq_('has-hover');var Lib=_dereq_('../lib');var nestedProperty=Lib.nestedProperty;var Events=_dereq_('../lib/events');var Queue=_dereq_('../lib/queue');var Registry=_dereq_('../registry');var PlotSchema=_dereq_('./plot_schema');var Plots=_dereq_('../plots/plots');var Polar=_dereq_('../plots/polar/legacy');var Axes=_dereq_('../plots/cartesian/axes');var Drawing=_dereq_('../components/drawing');var Color=_dereq_('../components/color');var connectColorbar=_dereq_('../components/colorbar/connect');var initInteractions=_dereq_('../plots/cartesian/graph_interact').initInteractions;var xmlnsNamespaces=_dereq_('../constants/xmlns_namespaces');var svgTextUtils=_dereq_('../lib/svg_text_utils');var defaultConfig=_dereq_('./plot_config');var manageArrays=_dereq_('./manage_arrays');var helpers=_dereq_('./helpers');var subroutines=_dereq_('./subroutines');var editTypes=_dereq_('./edit_types');var AX_NAME_PATTERN=_dereq_('../plots/cartesian/constants').AX_NAME_PATTERN;var numericNameWarningCount=0;var numericNameWarningCountLimit=5;/**\n * Main plot-creation function\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n * @param {array of objects} data\n *      array of traces, containing the data and display information for each trace\n * @param {object} layout\n *      object describing the overall display of the plot,\n *      all the stuff that doesn't pertain to any individual trace\n * @param {object} config\n *      configuration options (see ./plot_config.js for more info)\n *\n * OR\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n * @param {object} figure\n *      object containing `data`, `layout`, `config`, and `frames` members\n *\n */exports.plot=function(gd,data,layout,config){var frames;gd=Lib.getGraphDiv(gd);// Events.init is idempotent and bails early if gd has already been init'd\nEvents.init(gd);if(Lib.isPlainObject(data)){var obj=data;data=obj.data;layout=obj.layout;config=obj.config;frames=obj.frames;}var okToPlot=Events.triggerHandler(gd,'plotly_beforeplot',[data,layout,config]);if(okToPlot===false)return Promise.reject();// if there's no data or layout, and this isn't yet a plotly plot\n// container, log a warning to help plotly.js users debug\nif(!data&&!layout&&!Lib.isPlotDiv(gd)){Lib.warn('Calling Plotly.plot as if redrawing '+'but this container doesn\\'t yet have a plot.',gd);}function addFrames(){if(frames){return exports.addFrames(gd,frames);}}// transfer configuration options to gd until we move over to\n// a more OO like model\nsetPlotContext(gd,config);if(!layout)layout={};// hook class for plots main container (in case of plotly.js\n// this won't be #embedded-graph or .js-tab-contents)\nd3.select(gd).classed('js-plotly-plot',true);// off-screen getBoundingClientRect testing space,\n// in #js-plotly-tester (and stored as Drawing.tester)\n// so we can share cached text across tabs\nDrawing.makeTester();// collect promises for any async actions during plotting\n// any part of the plotting code can push to gd._promises, then\n// before we move to the next step, we check that they're all\n// complete, and empty out the promise list again.\nif(!Array.isArray(gd._promises))gd._promises=[];var graphWasEmpty=(gd.data||[]).length===0&&Array.isArray(data);// if there is already data on the graph, append the new data\n// if you only want to redraw, pass a non-array for data\nif(Array.isArray(data)){helpers.cleanData(data);if(graphWasEmpty)gd.data=data;else gd.data.push.apply(gd.data,data);// for routines outside graph_obj that want a clean tab\n// (rather than appending to an existing one) gd.empty\n// is used to determine whether to make a new tab\ngd.empty=false;}if(!gd.layout||graphWasEmpty)gd.layout=helpers.cleanLayout(layout);// if the user is trying to drag the axes, allow new data and layout\n// to come in but don't allow a replot.\nif(gd._dragging&&!gd._transitioning){// signal to drag handler that after everything else is done\n// we need to replot, because something has changed\ngd._replotPending=true;return Promise.reject();}else{// we're going ahead with a replot now\ngd._replotPending=false;}Plots.supplyDefaults(gd);var fullLayout=gd._fullLayout;var hasCartesian=fullLayout._has('cartesian');// Legacy polar plots\nif(!fullLayout._has('polar')&&data&&data[0]&&data[0].r){Lib.log('Legacy polar charts are deprecated!');return plotLegacyPolar(gd,data,layout);}// so we don't try to re-call Plotly.plot from inside\n// legend and colorbar, if margins changed\nfullLayout._replotting=true;// make or remake the framework if we need to\nif(graphWasEmpty)makePlotFramework(gd);// polar need a different framework\nif(gd.framework!==makePlotFramework){gd.framework=makePlotFramework;makePlotFramework(gd);}// clear gradient defs on each .plot call, because we know we'll loop through all traces\nDrawing.initGradients(gd);// save initial show spikes once per graph\nif(graphWasEmpty)Axes.saveShowSpikeInitial(gd);// prepare the data and find the autorange\n// generate calcdata, if we need to\n// to force redoing calcdata, just delete it before calling Plotly.plot\nvar recalc=!gd.calcdata||gd.calcdata.length!==(gd._fullData||[]).length;if(recalc)Plots.doCalcdata(gd);// in case it has changed, attach fullData traces to calcdata\nfor(var i=0;i<gd.calcdata.length;i++){gd.calcdata[i][0].trace=gd._fullData[i];}// make the figure responsive\nif(gd._context.responsive){if(!gd._responsiveChartHandler){// Keep a reference to the resize handler to purge it down the road\ngd._responsiveChartHandler=function(){Plots.resize(gd);};// Listen to window resize\nwindow.addEventListener('resize',gd._responsiveChartHandler);}}else{Lib.clearResponsive(gd);}/*\n     * start async-friendly code - now we're actually drawing things\n     */var oldmargins=JSON.stringify(fullLayout._size);// draw framework first so that margin-pushing\n// components can position themselves correctly\nvar drawFrameworkCalls=0;function drawFramework(){var basePlotModules=fullLayout._basePlotModules;for(var i=0;i<basePlotModules.length;i++){if(basePlotModules[i].drawFramework){basePlotModules[i].drawFramework(gd);}}if(!fullLayout._glcanvas&&fullLayout._has('gl')){fullLayout._glcanvas=fullLayout._glcontainer.selectAll('.gl-canvas').data([{key:'contextLayer',context:true,pick:false},{key:'focusLayer',context:false,pick:false},{key:'pickLayer',context:false,pick:true}],function(d){return d.key;});fullLayout._glcanvas.enter().append('canvas').attr('class',function(d){return'gl-canvas gl-canvas-'+d.key.replace('Layer','');}).style({'position':'absolute','top':0,'left':0,'width':'100%','height':'100%','overflow':'visible','pointer-events':'none'});}if(fullLayout._glcanvas){fullLayout._glcanvas.attr('width',fullLayout.width).attr('height',fullLayout.height);var regl=fullLayout._glcanvas.data()[0].regl;if(regl){// Unfortunately, this can happen when relayouting to large\n// width/height on some browsers.\nif(Math.floor(fullLayout.width)!==regl._gl.drawingBufferWidth||Math.floor(fullLayout.height)!==regl._gl.drawingBufferHeight){var msg='WebGL context buffer and canvas dimensions do not match due to browser/WebGL bug.';if(drawFrameworkCalls){Lib.error(msg);}else{Lib.log(msg+' Clearing graph and plotting again.');Plots.cleanPlot([],{},gd._fullData,fullLayout);Plots.supplyDefaults(gd);fullLayout=gd._fullLayout;Plots.doCalcdata(gd);drawFrameworkCalls++;return drawFramework();}}}}return Plots.previousPromises(gd);}// draw anything that can affect margins.\nfunction marginPushers(){var calcdata=gd.calcdata;var i,cd,trace;// First reset the list of things that are allowed to change the margins\n// So any deleted traces or components will be wiped out of the\n// automargin calculation.\n// This means *every* margin pusher must be listed here, even if it\n// doesn't actually try to push the margins until later.\nPlots.clearAutoMarginIds(gd);subroutines.drawMarginPushers(gd);Axes.allowAutoMargin(gd);for(i=0;i<calcdata.length;i++){cd=calcdata[i];trace=cd[0].trace;var colorbarOpts=trace._module.colorbar;if(trace.visible!==true||!colorbarOpts){Plots.autoMargin(gd,'cb'+trace.uid);}else connectColorbar(gd,cd,colorbarOpts);}Plots.doAutoMargin(gd);return Plots.previousPromises(gd);}// in case the margins changed, draw margin pushers again\nfunction marginPushersAgain(){if(JSON.stringify(fullLayout._size)===oldmargins)return;return Lib.syncOrAsync([marginPushers,subroutines.layoutStyles],gd);}function positionAndAutorange(){if(!recalc){doAutoRangeAndConstraints();return;}// TODO: autosize extra for text markers and images\n// see https://github.com/plotly/plotly.js/issues/1111\nreturn Lib.syncOrAsync([Registry.getComponentMethod('shapes','calcAutorange'),Registry.getComponentMethod('annotations','calcAutorange'),doAutoRangeAndConstraints],gd);}function doAutoRangeAndConstraints(){if(gd._transitioning)return;subroutines.doAutoRangeAndConstraints(gd);// store initial ranges *after* enforcing constraints, otherwise\n// we will never look like we're at the initial ranges\nif(graphWasEmpty)Axes.saveRangeInitial(gd);// this one is different from shapes/annotations calcAutorange\n// the others incorporate those components into ax._extremes,\n// this one actually sets the ranges in rangesliders.\nRegistry.getComponentMethod('rangeslider','calcAutorange')(gd);}// draw ticks, titles, and calculate axis scaling (._b, ._m)\nfunction drawAxes(){return Axes.draw(gd,graphWasEmpty?'':'redraw');}var seq=[Plots.previousPromises,addFrames,drawFramework,marginPushers,marginPushersAgain];if(hasCartesian)seq.push(positionAndAutorange);seq.push(subroutines.layoutStyles);if(hasCartesian)seq.push(drawAxes);seq.push(subroutines.drawData,subroutines.finalDraw,initInteractions,Plots.addLinks,Plots.rehover,// TODO: doAutoMargin is only needed here for axis automargin, which\n// happens outside of marginPushers where all the other automargins are\n// calculated. Would be much better to separate margin calculations from\n// component drawing - see https://github.com/plotly/plotly.js/issues/2704\nPlots.doAutoMargin,Plots.previousPromises);// even if everything we did was synchronous, return a promise\n// so that the caller doesn't care which route we took\nvar plotDone=Lib.syncOrAsync(seq,gd);if(!plotDone||!plotDone.then)plotDone=Promise.resolve();return plotDone.then(function(){emitAfterPlot(gd);return gd;});};function emitAfterPlot(gd){var fullLayout=gd._fullLayout;if(fullLayout._redrawFromAutoMarginCount){fullLayout._redrawFromAutoMarginCount--;}else{gd.emit('plotly_afterplot');}}exports.setPlotConfig=function setPlotConfig(obj){return Lib.extendFlat(defaultConfig,obj);};function setBackground(gd,bgColor){try{gd._fullLayout._paper.style('background',bgColor);}catch(e){Lib.error(e);}}function opaqueSetBackground(gd,bgColor){var blend=Color.combine(bgColor,'white');setBackground(gd,blend);}function setPlotContext(gd,config){if(!gd._context){gd._context=Lib.extendDeep({},defaultConfig);// stash <base> href, used to make robust clipPath URLs\nvar base=d3.select('base');gd._context._baseUrl=base.size()&&base.attr('href')?window.location.href.split('#')[0]:'';}var context=gd._context;var i,keys,key;if(config){keys=Object.keys(config);for(i=0;i<keys.length;i++){key=keys[i];if(key==='editable'||key==='edits')continue;if(key in context){if(key==='setBackground'&&config[key]==='opaque'){context[key]=opaqueSetBackground;}else{context[key]=config[key];}}}// map plot3dPixelRatio to plotGlPixelRatio for backward compatibility\nif(config.plot3dPixelRatio&&!context.plotGlPixelRatio){context.plotGlPixelRatio=context.plot3dPixelRatio;}// now deal with editable and edits - first editable overrides\n// everything, then edits refines\nvar editable=config.editable;if(editable!==undefined){// we're not going to *use* context.editable, we're only going to\n// use context.edits... but keep it for the record\ncontext.editable=editable;keys=Object.keys(context.edits);for(i=0;i<keys.length;i++){context.edits[keys[i]]=editable;}}if(config.edits){keys=Object.keys(config.edits);for(i=0;i<keys.length;i++){key=keys[i];if(key in context.edits){context.edits[key]=config.edits[key];}}}// not part of the user-facing config options\ncontext._exportedPlot=config._exportedPlot;}// staticPlot forces a bunch of others:\nif(context.staticPlot){context.editable=false;context.edits={};context.autosizable=false;context.scrollZoom=false;context.doubleClick=false;context.showTips=false;context.showLink=false;context.displayModeBar=false;}// make sure hover-only devices have mode bar visible\nif(context.displayModeBar==='hover'&&!hasHover){context.displayModeBar=true;}// default and fallback for setBackground\nif(context.setBackground==='transparent'||typeof context.setBackground!=='function'){context.setBackground=setBackground;}// Check if gd has a specified widht/height to begin with\ncontext._hasZeroHeight=context._hasZeroHeight||gd.clientHeight===0;context._hasZeroWidth=context._hasZeroWidth||gd.clientWidth===0;}function plotLegacyPolar(gd,data,layout){// build or reuse the container skeleton\nvar plotContainer=d3.select(gd).selectAll('.plot-container').data([0]);plotContainer.enter().insert('div',':first-child').classed('plot-container plotly',true);var paperDiv=plotContainer.selectAll('.svg-container').data([0]);paperDiv.enter().append('div').classed('svg-container',true).style('position','relative');// empty it everytime for now\npaperDiv.html('');// fulfill gd requirements\nif(data)gd.data=data;if(layout)gd.layout=layout;Polar.manager.fillLayout(gd);// resize canvas\npaperDiv.style({width:gd._fullLayout.width+'px',height:gd._fullLayout.height+'px'});// instantiate framework\ngd.framework=Polar.manager.framework(gd);// plot\ngd.framework({data:gd.data,layout:gd.layout},paperDiv.node());// set undo point\ngd.framework.setUndoPoint();// get the resulting svg for extending it\nvar polarPlotSVG=gd.framework.svg();// editable title\nvar opacity=1;var txt=gd._fullLayout.title?gd._fullLayout.title.text:'';if(txt===''||!txt)opacity=0;var titleLayout=function titleLayout(){this.call(svgTextUtils.convertToTspans,gd);// TODO: html/mathjax\n// TODO: center title\n};var title=polarPlotSVG.select('.title-group text').call(titleLayout);if(gd._context.edits.titleText){var placeholderText=Lib._(gd,'Click to enter Plot title');if(!txt||txt===placeholderText){opacity=0.2;// placeholder is not going through convertToTspans\n// so needs explicit data-unformatted\ntitle.attr({'data-unformatted':placeholderText}).text(placeholderText).style({opacity:opacity}).on('mouseover.opacity',function(){d3.select(this).transition().duration(100).style('opacity',1);}).on('mouseout.opacity',function(){d3.select(this).transition().duration(1000).style('opacity',0);});}var setContenteditable=function setContenteditable(){this.call(svgTextUtils.makeEditable,{gd:gd}).on('edit',function(text){gd.framework({layout:{title:{text:text}}});this.text(text).call(titleLayout);this.call(setContenteditable);}).on('cancel',function(){var txt=this.attr('data-unformatted');this.text(txt).call(titleLayout);});};title.call(setContenteditable);}gd._context.setBackground(gd,gd._fullLayout.paper_bgcolor);Plots.addLinks(gd);return Promise.resolve();}// convenience function to force a full redraw, mostly for use by plotly.js\nexports.redraw=function(gd){gd=Lib.getGraphDiv(gd);if(!Lib.isPlotDiv(gd)){throw new Error('This element is not a Plotly plot: '+gd);}helpers.cleanData(gd.data);helpers.cleanLayout(gd.layout);gd.calcdata=undefined;return exports.plot(gd).then(function(){gd.emit('plotly_redraw');return gd;});};/**\n * Convenience function to make idempotent plot option obvious to users.\n *\n * @param gd\n * @param {Object[]} data\n * @param {Object} layout\n * @param {Object} config\n */exports.newPlot=function(gd,data,layout,config){gd=Lib.getGraphDiv(gd);// remove gl contexts\nPlots.cleanPlot([],{},gd._fullData||[],gd._fullLayout||{});Plots.purge(gd);return exports.plot(gd,data,layout,config);};/**\n * Wrap negative indicies to their positive counterparts.\n *\n * @param {Number[]} indices An array of indices\n * @param {Number} maxIndex The maximum index allowable (arr.length - 1)\n */function positivifyIndices(indices,maxIndex){var parentLength=maxIndex+1;var positiveIndices=[];var i;var index;for(i=0;i<indices.length;i++){index=indices[i];if(index<0){positiveIndices.push(parentLength+index);}else{positiveIndices.push(index);}}return positiveIndices;}/**\n * Ensures that an index array for manipulating gd.data is valid.\n *\n * Intended for use with addTraces, deleteTraces, and moveTraces.\n *\n * @param gd\n * @param indices\n * @param arrayName\n */function assertIndexArray(gd,indices,arrayName){var i,index;for(i=0;i<indices.length;i++){index=indices[i];// validate that indices are indeed integers\nif(index!==parseInt(index,10)){throw new Error('all values in '+arrayName+' must be integers');}// check that all indices are in bounds for given gd.data array length\nif(index>=gd.data.length||index<-gd.data.length){throw new Error(arrayName+' must be valid indices for gd.data.');}// check that indices aren't repeated\nif(indices.indexOf(index,i+1)>-1||index>=0&&indices.indexOf(-gd.data.length+index)>-1||index<0&&indices.indexOf(gd.data.length+index)>-1){throw new Error('each index in '+arrayName+' must be unique.');}}}/**\n * Private function used by Plotly.moveTraces to check input args\n *\n * @param gd\n * @param currentIndices\n * @param newIndices\n */function checkMoveTracesArgs(gd,currentIndices,newIndices){// check that gd has attribute 'data' and 'data' is array\nif(!Array.isArray(gd.data)){throw new Error('gd.data must be an array.');}// validate currentIndices array\nif(typeof currentIndices==='undefined'){throw new Error('currentIndices is a required argument.');}else if(!Array.isArray(currentIndices)){currentIndices=[currentIndices];}assertIndexArray(gd,currentIndices,'currentIndices');// validate newIndices array if it exists\nif(typeof newIndices!=='undefined'&&!Array.isArray(newIndices)){newIndices=[newIndices];}if(typeof newIndices!=='undefined'){assertIndexArray(gd,newIndices,'newIndices');}// check currentIndices and newIndices are the same length if newIdices exists\nif(typeof newIndices!=='undefined'&&currentIndices.length!==newIndices.length){throw new Error('current and new indices must be of equal length.');}}/**\n * A private function to reduce the type checking clutter in addTraces.\n *\n * @param gd\n * @param traces\n * @param newIndices\n */function checkAddTracesArgs(gd,traces,newIndices){var i,value;// check that gd has attribute 'data' and 'data' is array\nif(!Array.isArray(gd.data)){throw new Error('gd.data must be an array.');}// make sure traces exists\nif(typeof traces==='undefined'){throw new Error('traces must be defined.');}// make sure traces is an array\nif(!Array.isArray(traces)){traces=[traces];}// make sure each value in traces is an object\nfor(i=0;i<traces.length;i++){value=traces[i];if(_typeof(value)!=='object'||Array.isArray(value)||value===null){throw new Error('all values in traces array must be non-array objects');}}// make sure we have an index for each trace\nif(typeof newIndices!=='undefined'&&!Array.isArray(newIndices)){newIndices=[newIndices];}if(typeof newIndices!=='undefined'&&newIndices.length!==traces.length){throw new Error('if indices is specified, traces.length must equal indices.length');}}/**\n * A private function to reduce the type checking clutter in spliceTraces.\n * Get all update Properties from gd.data. Validate inputs and outputs.\n * Used by prependTrace and extendTraces\n *\n * @param gd\n * @param update\n * @param indices\n * @param maxPoints\n */function assertExtendTracesArgs(gd,update,indices,maxPoints){var maxPointsIsObject=Lib.isPlainObject(maxPoints);if(!Array.isArray(gd.data)){throw new Error('gd.data must be an array');}if(!Lib.isPlainObject(update)){throw new Error('update must be a key:value object');}if(typeof indices==='undefined'){throw new Error('indices must be an integer or array of integers');}assertIndexArray(gd,indices,'indices');for(var key in update){/*\n         * Verify that the attribute to be updated contains as many trace updates\n         * as indices. Failure must result in throw and no-op\n         */if(!Array.isArray(update[key])||update[key].length!==indices.length){throw new Error('attribute '+key+' must be an array of length equal to indices array length');}/*\n         * if maxPoints is an object it must match keys and array lengths of 'update' 1:1\n         */if(maxPointsIsObject&&(!(key in maxPoints)||!Array.isArray(maxPoints[key])||maxPoints[key].length!==update[key].length)){throw new Error('when maxPoints is set as a key:value object it must contain a 1:1 '+'corrispondence with the keys and number of traces in the update object');}}}/**\n * A private function to reduce the type checking clutter in spliceTraces.\n *\n * @param {Object|HTMLDivElement} gd\n * @param {Object} update\n * @param {Number[]} indices\n * @param {Number||Object} maxPoints\n * @return {Object[]}\n */function getExtendProperties(gd,update,indices,maxPoints){var maxPointsIsObject=Lib.isPlainObject(maxPoints);var updateProps=[];var trace,target,prop,insert,maxp;// allow scalar index to represent a single trace position\nif(!Array.isArray(indices))indices=[indices];// negative indices are wrapped around to their positive value. Equivalent to python indexing.\nindices=positivifyIndices(indices,gd.data.length-1);// loop through all update keys and traces and harvest validated data.\nfor(var key in update){for(var j=0;j<indices.length;j++){/*\n             * Choose the trace indexed by the indices map argument and get the prop setter-getter\n             * instance that references the key and value for this particular trace.\n             */trace=gd.data[indices[j]];prop=nestedProperty(trace,key);/*\n             * Target is the existing gd.data.trace.dataArray value like \"x\" or \"marker.size\"\n             * Target must exist as an Array to allow the extend operation to be performed.\n             */target=prop.get();insert=update[key][j];if(!Lib.isArrayOrTypedArray(insert)){throw new Error('attribute: '+key+' index: '+j+' must be an array');}if(!Lib.isArrayOrTypedArray(target)){throw new Error('cannot extend missing or non-array attribute: '+key);}if(target.constructor!==insert.constructor){throw new Error('cannot extend array with an array of a different type: '+key);}/*\n             * maxPoints may be an object map or a scalar. If object select the key:value, else\n             * Use the scalar maxPoints for all key and trace combinations.\n             */maxp=maxPointsIsObject?maxPoints[key][j]:maxPoints;// could have chosen null here, -1 just tells us to not take a window\nif(!isNumeric(maxp))maxp=-1;/*\n             * Wrap the nestedProperty in an object containing required data\n             * for lengthening and windowing this particular trace - key combination.\n             * Flooring maxp mirrors the behaviour of floats in the Array.slice JSnative function.\n             */updateProps.push({prop:prop,target:target,insert:insert,maxp:Math.floor(maxp)});}}// all target and insertion data now validated\nreturn updateProps;}/**\n * A private function to key Extend and Prepend traces DRY\n *\n * @param {Object|HTMLDivElement} gd\n * @param {Object} update\n * @param {Number[]} indices\n * @param {Number||Object} maxPoints\n * @param {Function} updateArray\n * @return {Object}\n */function spliceTraces(gd,update,indices,maxPoints,updateArray){assertExtendTracesArgs(gd,update,indices,maxPoints);var updateProps=getExtendProperties(gd,update,indices,maxPoints);var undoUpdate={};var undoPoints={};for(var i=0;i<updateProps.length;i++){var prop=updateProps[i].prop;var maxp=updateProps[i].maxp;// return new array and remainder\nvar out=updateArray(updateProps[i].target,updateProps[i].insert,maxp);prop.set(out[0]);// build the inverse update object for the undo operation\nif(!Array.isArray(undoUpdate[prop.astr]))undoUpdate[prop.astr]=[];undoUpdate[prop.astr].push(out[1]);// build the matching maxPoints undo object containing original trace lengths\nif(!Array.isArray(undoPoints[prop.astr]))undoPoints[prop.astr]=[];undoPoints[prop.astr].push(updateProps[i].target.length);}return{update:undoUpdate,maxPoints:undoPoints};}function concatTypedArray(arr0,arr1){var arr2=new arr0.constructor(arr0.length+arr1.length);arr2.set(arr0);arr2.set(arr1,arr0.length);return arr2;}/**\n * extend && prepend traces at indices with update arrays, window trace lengths to maxPoints\n *\n * Extend and Prepend have identical APIs. Prepend inserts an array at the head while Extend\n * inserts an array off the tail. Prepend truncates the tail of the array - counting maxPoints\n * from the head, whereas Extend truncates the head of the array, counting backward maxPoints\n * from the tail.\n *\n * If maxPoints is undefined, nonNumeric, negative or greater than extended trace length no\n * truncation / windowing will be performed. If its zero, well the whole trace is truncated.\n *\n * @param {Object|HTMLDivElement} gd The graph div\n * @param {Object} update The key:array map of target attributes to extend\n * @param {Number|Number[]} indices The locations of traces to be extended\n * @param {Number|Object} [maxPoints] Number of points for trace window after lengthening.\n *\n */exports.extendTraces=function extendTraces(gd,update,indices,maxPoints){gd=Lib.getGraphDiv(gd);function updateArray(target,insert,maxp){var newArray,remainder;if(Lib.isTypedArray(target)){if(maxp<0){var none=new target.constructor(0);var both=concatTypedArray(target,insert);if(maxp<0){newArray=both;remainder=none;}else{newArray=none;remainder=both;}}else{newArray=new target.constructor(maxp);remainder=new target.constructor(target.length+insert.length-maxp);if(maxp===insert.length){newArray.set(insert);remainder.set(target);}else if(maxp<insert.length){var numberOfItemsFromInsert=insert.length-maxp;newArray.set(insert.subarray(numberOfItemsFromInsert));remainder.set(target);remainder.set(insert.subarray(0,numberOfItemsFromInsert),target.length);}else{var numberOfItemsFromTarget=maxp-insert.length;var targetBegin=target.length-numberOfItemsFromTarget;newArray.set(target.subarray(targetBegin));newArray.set(insert,numberOfItemsFromTarget);remainder.set(target.subarray(0,targetBegin));}}}else{newArray=target.concat(insert);remainder=maxp>=0&&maxp<newArray.length?newArray.splice(0,newArray.length-maxp):[];}return[newArray,remainder];}var undo=spliceTraces(gd,update,indices,maxPoints,updateArray);var promise=exports.redraw(gd);var undoArgs=[gd,undo.update,indices,undo.maxPoints];Queue.add(gd,exports.prependTraces,undoArgs,extendTraces,arguments);return promise;};exports.prependTraces=function prependTraces(gd,update,indices,maxPoints){gd=Lib.getGraphDiv(gd);function updateArray(target,insert,maxp){var newArray,remainder;if(Lib.isTypedArray(target)){if(maxp<=0){var none=new target.constructor(0);var both=concatTypedArray(insert,target);if(maxp<0){newArray=both;remainder=none;}else{newArray=none;remainder=both;}}else{newArray=new target.constructor(maxp);remainder=new target.constructor(target.length+insert.length-maxp);if(maxp===insert.length){newArray.set(insert);remainder.set(target);}else if(maxp<insert.length){var numberOfItemsFromInsert=insert.length-maxp;newArray.set(insert.subarray(0,numberOfItemsFromInsert));remainder.set(insert.subarray(numberOfItemsFromInsert));remainder.set(target,numberOfItemsFromInsert);}else{var numberOfItemsFromTarget=maxp-insert.length;newArray.set(insert);newArray.set(target.subarray(0,numberOfItemsFromTarget),insert.length);remainder.set(target.subarray(numberOfItemsFromTarget));}}}else{newArray=insert.concat(target);remainder=maxp>=0&&maxp<newArray.length?newArray.splice(maxp,newArray.length):[];}return[newArray,remainder];}var undo=spliceTraces(gd,update,indices,maxPoints,updateArray);var promise=exports.redraw(gd);var undoArgs=[gd,undo.update,indices,undo.maxPoints];Queue.add(gd,exports.extendTraces,undoArgs,prependTraces,arguments);return promise;};/**\n * Add data traces to an existing graph div.\n *\n * @param {Object|HTMLDivElement} gd The graph div\n * @param {Object[]} gd.data The array of traces we're adding to\n * @param {Object[]|Object} traces The object or array of objects to add\n * @param {Number[]|Number} [newIndices=[gd.data.length]] Locations to add traces\n *\n */exports.addTraces=function addTraces(gd,traces,newIndices){gd=Lib.getGraphDiv(gd);var currentIndices=[];var undoFunc=exports.deleteTraces;var redoFunc=addTraces;var undoArgs=[gd,currentIndices];var redoArgs=[gd,traces];// no newIndices here\nvar i;var promise;// all validation is done elsewhere to remove clutter here\ncheckAddTracesArgs(gd,traces,newIndices);// make sure traces is an array\nif(!Array.isArray(traces)){traces=[traces];}// make sure traces do not repeat existing ones\ntraces=traces.map(function(trace){return Lib.extendFlat({},trace);});helpers.cleanData(traces);// add the traces to gd.data (no redrawing yet!)\nfor(i=0;i<traces.length;i++){gd.data.push(traces[i]);}// to continue, we need to call moveTraces which requires currentIndices\nfor(i=0;i<traces.length;i++){currentIndices.push(-traces.length+i);}// if the user didn't define newIndices, they just want the traces appended\n// i.e., we can simply redraw and be done\nif(typeof newIndices==='undefined'){promise=exports.redraw(gd);Queue.add(gd,undoFunc,undoArgs,redoFunc,redoArgs);return promise;}// make sure indices is property defined\nif(!Array.isArray(newIndices)){newIndices=[newIndices];}try{// this is redundant, but necessary to not catch later possible errors!\ncheckMoveTracesArgs(gd,currentIndices,newIndices);}catch(error){// something went wrong, reset gd to be safe and rethrow error\ngd.data.splice(gd.data.length-traces.length,traces.length);throw error;}// if we're here, the user has defined specific places to place the new traces\n// this requires some extra work that moveTraces will do\nQueue.startSequence(gd);Queue.add(gd,undoFunc,undoArgs,redoFunc,redoArgs);promise=exports.moveTraces(gd,currentIndices,newIndices);Queue.stopSequence(gd);return promise;};/**\n * Delete traces at `indices` from gd.data array.\n *\n * @param {Object|HTMLDivElement} gd The graph div\n * @param {Object[]} gd.data The array of traces we're removing from\n * @param {Number|Number[]} indices The indices\n */exports.deleteTraces=function deleteTraces(gd,indices){gd=Lib.getGraphDiv(gd);var traces=[];var undoFunc=exports.addTraces;var redoFunc=deleteTraces;var undoArgs=[gd,traces,indices];var redoArgs=[gd,indices];var i;var deletedTrace;// make sure indices are defined\nif(typeof indices==='undefined'){throw new Error('indices must be an integer or array of integers.');}else if(!Array.isArray(indices)){indices=[indices];}assertIndexArray(gd,indices,'indices');// convert negative indices to positive indices\nindices=positivifyIndices(indices,gd.data.length-1);// we want descending here so that splicing later doesn't affect indexing\nindices.sort(Lib.sorterDes);for(i=0;i<indices.length;i+=1){deletedTrace=gd.data.splice(indices[i],1)[0];traces.push(deletedTrace);}var promise=exports.redraw(gd);Queue.add(gd,undoFunc,undoArgs,redoFunc,redoArgs);return promise;};/**\n * Move traces at currentIndices array to locations in newIndices array.\n *\n * If newIndices is omitted, currentIndices will be moved to the end. E.g.,\n * these are equivalent:\n *\n * Plotly.moveTraces(gd, [1, 2, 3], [-3, -2, -1])\n * Plotly.moveTraces(gd, [1, 2, 3])\n *\n * @param {Object|HTMLDivElement} gd The graph div\n * @param {Object[]} gd.data The array of traces we're removing from\n * @param {Number|Number[]} currentIndices The locations of traces to be moved\n * @param {Number|Number[]} [newIndices] The locations to move traces to\n *\n * Example calls:\n *\n *      // move trace i to location x\n *      Plotly.moveTraces(gd, i, x)\n *\n *      // move trace i to end of array\n *      Plotly.moveTraces(gd, i)\n *\n *      // move traces i, j, k to end of array (i != j != k)\n *      Plotly.moveTraces(gd, [i, j, k])\n *\n *      // move traces [i, j, k] to [x, y, z] (i != j != k) (x != y != z)\n *      Plotly.moveTraces(gd, [i, j, k], [x, y, z])\n *\n *      // reorder all traces (assume there are 5--a, b, c, d, e)\n *      Plotly.moveTraces(gd, [b, d, e, a, c])  // same as 'move to end'\n */exports.moveTraces=function moveTraces(gd,currentIndices,newIndices){gd=Lib.getGraphDiv(gd);var newData=[];var movingTraceMap=[];var undoFunc=moveTraces;var redoFunc=moveTraces;var undoArgs=[gd,newIndices,currentIndices];var redoArgs=[gd,currentIndices,newIndices];var i;// to reduce complexity here, check args elsewhere\n// this throws errors where appropriate\ncheckMoveTracesArgs(gd,currentIndices,newIndices);// make sure currentIndices is an array\ncurrentIndices=Array.isArray(currentIndices)?currentIndices:[currentIndices];// if undefined, define newIndices to point to the end of gd.data array\nif(typeof newIndices==='undefined'){newIndices=[];for(i=0;i<currentIndices.length;i++){newIndices.push(-currentIndices.length+i);}}// make sure newIndices is an array if it's user-defined\nnewIndices=Array.isArray(newIndices)?newIndices:[newIndices];// convert negative indices to positive indices (they're the same length)\ncurrentIndices=positivifyIndices(currentIndices,gd.data.length-1);newIndices=positivifyIndices(newIndices,gd.data.length-1);// at this point, we've coerced the index arrays into predictable forms\n// get the traces that aren't being moved around\nfor(i=0;i<gd.data.length;i++){// if index isn't in currentIndices, include it in ignored!\nif(currentIndices.indexOf(i)===-1){newData.push(gd.data[i]);}}// get a mapping of indices to moving traces\nfor(i=0;i<currentIndices.length;i++){movingTraceMap.push({newIndex:newIndices[i],trace:gd.data[currentIndices[i]]});}// reorder this mapping by newIndex, ascending\nmovingTraceMap.sort(function(a,b){return a.newIndex-b.newIndex;});// now, add the moving traces back in, in order!\nfor(i=0;i<movingTraceMap.length;i+=1){newData.splice(movingTraceMap[i].newIndex,0,movingTraceMap[i].trace);}gd.data=newData;var promise=exports.redraw(gd);Queue.add(gd,undoFunc,undoArgs,redoFunc,redoArgs);return promise;};/**\n * restyle: update trace attributes of an existing plot\n *\n * Can be called two ways.\n *\n * Signature 1:\n * @param {String | HTMLDivElement} gd\n *  the id or DOM element of the graph container div\n * @param {String} astr\n *  attribute string (like `'marker.symbol'`) to update\n * @param {*} val\n *  value to give this attribute\n * @param {Number[] | Number} [traces]\n *  integer or array of integers for the traces to alter (all if omitted)\n *\n * Signature 2:\n * @param {String | HTMLDivElement} gd\n *  (as in signature 1)\n * @param {Object} aobj\n *  attribute object `{astr1: val1, astr2: val2 ...}`\n *  allows setting multiple attributes simultaneously\n * @param {Number[] | Number} [traces]\n *  (as in signature 1)\n *\n * `val` (or `val1`, `val2` ... in the object form) can be an array,\n * to apply different values to each trace.\n *\n * If the array is too short, it will wrap around (useful for\n * style files that want to specify cyclical default values).\n */function restyle(gd,astr,val,_traces){gd=Lib.getGraphDiv(gd);helpers.clearPromiseQueue(gd);var aobj={};if(typeof astr==='string')aobj[astr]=val;else if(Lib.isPlainObject(astr)){// the 3-arg form\naobj=Lib.extendFlat({},astr);if(_traces===undefined)_traces=val;}else{Lib.warn('Restyle fail.',astr,val,_traces);return Promise.reject();}if(Object.keys(aobj).length)gd.changed=true;var traces=helpers.coerceTraceIndices(gd,_traces);var specs=_restyle(gd,aobj,traces);var flags=specs.flags;// clear calcdata and/or axis types if required so they get regenerated\nif(flags.calc)gd.calcdata=undefined;if(flags.clearAxisTypes)helpers.clearAxisTypes(gd,traces,{});// fill in redraw sequence\nvar seq=[];if(flags.fullReplot){seq.push(exports.plot);}else{seq.push(Plots.previousPromises);// maybe only call Plots.supplyDataDefaults in the splom case,\n// to skip over long and slow axes defaults\nPlots.supplyDefaults(gd);if(flags.markerSize){Plots.doCalcdata(gd);addAxRangeSequence(seq);// TODO\n// if all axes have autorange:false, then\n// proceed to subroutines.doTraceStyle(),\n// otherwise we must go through addAxRangeSequence,\n// which in general must redraws 'all' axes\n}if(flags.style)seq.push(subroutines.doTraceStyle);if(flags.colorbars)seq.push(subroutines.doColorBars);seq.push(emitAfterPlot);}seq.push(Plots.rehover);Queue.add(gd,restyle,[gd,specs.undoit,specs.traces],restyle,[gd,specs.redoit,specs.traces]);var plotDone=Lib.syncOrAsync(seq,gd);if(!plotDone||!plotDone.then)plotDone=Promise.resolve();return plotDone.then(function(){gd.emit('plotly_restyle',specs.eventData);return gd;});}exports.restyle=restyle;// for undo: undefined initial vals must be turned into nulls\n// so that we unset rather than ignore them\nfunction undefinedToNull(val){if(val===undefined)return null;return val;}/**\n * Factory function to wrap nestedProperty with GUI edits if necessary\n * with GUI edits we add an optional prefix to the nestedProperty constructor\n * to prepend to the attribute string in the preGUI store.\n */function makeNP(preGUI,guiEditFlag){if(!guiEditFlag)return nestedProperty;return function(container,attr,prefix){var np=nestedProperty(container,attr);var npSet=np.set;np.set=function(val){var fullAttr=(prefix||'')+attr;storeCurrent(fullAttr,np.get(),val,preGUI);npSet(val);};return np;};}function storeCurrent(attr,val,newVal,preGUI){if(Array.isArray(val)||Array.isArray(newVal)){var arrayVal=Array.isArray(val)?val:[];var arrayNew=Array.isArray(newVal)?newVal:[];var maxLen=Math.max(arrayVal.length,arrayNew.length);for(var i=0;i<maxLen;i++){storeCurrent(attr+'['+i+']',arrayVal[i],arrayNew[i],preGUI);}}else if(Lib.isPlainObject(val)||Lib.isPlainObject(newVal)){var objVal=Lib.isPlainObject(val)?val:{};var objNew=Lib.isPlainObject(newVal)?newVal:{};var objBoth=Lib.extendFlat({},objVal,objNew);for(var key in objBoth){storeCurrent(attr+'.'+key,objVal[key],objNew[key],preGUI);}}else if(preGUI[attr]===undefined){preGUI[attr]=undefinedToNull(val);}}/**\n * storeDirectGUIEdit: for routines that skip restyle/relayout and mock it\n * by emitting a plotly_restyle or plotly_relayout event, this routine\n * keeps track of the initial state in _preGUI for use by uirevision\n * Does *not* apply these changes to data/layout - that's the responsibility\n * of the calling routine.\n *\n * @param {object} container: the input attributes container (eg `layout` or a `trace`)\n * @param {object} preGUI: where original values should be stored, either\n *     `layout._preGUI` or `layout._tracePreGUI[uid]`\n * @param {object} edits: the {attr: val} object as normally passed to `relayout` etc\n */exports._storeDirectGUIEdit=function(container,preGUI,edits){for(var attr in edits){var np=nestedProperty(container,attr);storeCurrent(attr,np.get(),edits[attr],preGUI);}};function _restyle(gd,aobj,traces){var fullLayout=gd._fullLayout;var fullData=gd._fullData;var data=gd.data;var guiEditFlag=fullLayout._guiEditing;var layoutNP=makeNP(fullLayout._preGUI,guiEditFlag);var eventData=Lib.extendDeepAll({},aobj);var i;cleanDeprecatedAttributeKeys(aobj);// initialize flags\nvar flags=editTypes.traceFlags();// copies of the change (and previous values of anything affected)\n// for the undo / redo queue\nvar redoit={};var undoit={};var axlist;// make a new empty vals array for undoit\nfunction a0(){return traces.map(function(){return undefined;});}// for autoranging multiple axes\nfunction addToAxlist(axid){var axName=Axes.id2name(axid);if(axlist.indexOf(axName)===-1)axlist.push(axName);}function autorangeAttr(axName){return'LAYOUT'+axName+'.autorange';}function rangeAttr(axName){return'LAYOUT'+axName+'.range';}function getFullTrace(traceIndex){// usually fullData maps 1:1 onto data, but with groupby transforms\n// the fullData index can be greater. Take the *first* matching trace.\nfor(var j=traceIndex;j<fullData.length;j++){if(fullData[j]._input===data[traceIndex])return fullData[j];}// should never get here - and if we *do* it should cause an error\n// later on undefined fullTrace is passed to nestedProperty.\n}// for attrs that interact (like scales & autoscales), save the\n// old vals before making the change\n// val=undefined will not set a value, just record what the value was.\n// val=null will delete the attribute\n// attr can be an array to set several at once (all to the same val)\nfunction doextra(attr,val,i){if(Array.isArray(attr)){attr.forEach(function(a){doextra(a,val,i);});return;}// quit if explicitly setting this elsewhere\nif(attr in aobj||helpers.hasParent(aobj,attr))return;var extraparam;if(attr.substr(0,6)==='LAYOUT'){extraparam=layoutNP(gd.layout,attr.replace('LAYOUT',''));}else{var tracei=traces[i];var preGUI=fullLayout._tracePreGUI[getFullTrace(tracei)._fullInput.uid];extraparam=makeNP(preGUI,guiEditFlag)(data[tracei],attr);}if(!(attr in undoit)){undoit[attr]=a0();}if(undoit[attr][i]===undefined){undoit[attr][i]=undefinedToNull(extraparam.get());}if(val!==undefined){extraparam.set(val);}}function allBins(binAttr){return function(j){return fullData[j][binAttr];};}function arrayBins(binAttr){return function(vij,j){return vij===false?fullData[traces[j]][binAttr]:null;};}// now make the changes to gd.data (and occasionally gd.layout)\n// and figure out what kind of graphics update we need to do\nfor(var ai in aobj){if(helpers.hasParent(aobj,ai)){throw new Error('cannot set '+ai+'and a parent attribute simultaneously');}var vi=aobj[ai];var cont;var contFull;var param;var oldVal;var newVal;var valObject;// Backward compatibility shim for turning histogram autobin on,\n// or freezing previous autobinned values.\n// Replace obsolete `autobin(x|y): true` with `(x|y)bins: null`\n// and `autobin(x|y): false` with the `(x|y)bins` in `fullData`\nif(ai==='autobinx'||ai==='autobiny'){ai=ai.charAt(ai.length-1)+'bins';if(Array.isArray(vi))vi=vi.map(arrayBins(ai));else if(vi===false)vi=traces.map(allBins(ai));else vi=null;}redoit[ai]=vi;if(ai.substr(0,6)==='LAYOUT'){param=layoutNP(gd.layout,ai.replace('LAYOUT',''));undoit[ai]=[undefinedToNull(param.get())];// since we're allowing val to be an array, allow it here too,\n// even though that's meaningless\nparam.set(Array.isArray(vi)?vi[0]:vi);// ironically, the layout attrs in restyle only require replot,\n// not relayout\nflags.calc=true;continue;}// set attribute in gd.data\nundoit[ai]=a0();for(i=0;i<traces.length;i++){cont=data[traces[i]];contFull=getFullTrace(traces[i]);var preGUI=fullLayout._tracePreGUI[contFull._fullInput.uid];param=makeNP(preGUI,guiEditFlag)(cont,ai);oldVal=param.get();newVal=Array.isArray(vi)?vi[i%vi.length]:vi;if(newVal===undefined)continue;var finalPart=param.parts[param.parts.length-1];var prefix=ai.substr(0,ai.length-finalPart.length-1);var prefixDot=prefix?prefix+'.':'';var innerContFull=prefix?nestedProperty(contFull,prefix).get():contFull;valObject=PlotSchema.getTraceValObject(contFull,param.parts);if(valObject&&valObject.impliedEdits&&newVal!==null){for(var impliedKey in valObject.impliedEdits){doextra(Lib.relativeAttr(ai,impliedKey),valObject.impliedEdits[impliedKey],i);}}// changing colorbar size modes,\n// make the resulting size not change\n// note that colorbar fractional sizing is based on the\n// original plot size, before anything (like a colorbar)\n// increases the margins\nelse if((finalPart==='thicknessmode'||finalPart==='lenmode')&&oldVal!==newVal&&(newVal==='fraction'||newVal==='pixels')&&innerContFull){var gs=fullLayout._size;var orient=innerContFull.orient;var topOrBottom=orient==='top'||orient==='bottom';if(finalPart==='thicknessmode'){var thicknorm=topOrBottom?gs.h:gs.w;doextra(prefixDot+'thickness',innerContFull.thickness*(newVal==='fraction'?1/thicknorm:thicknorm),i);}else{var lennorm=topOrBottom?gs.w:gs.h;doextra(prefixDot+'len',innerContFull.len*(newVal==='fraction'?1/lennorm:lennorm),i);}}else if(ai==='type'&&newVal==='pie'!==(oldVal==='pie')){var labelsTo='x';var valuesTo='y';if((newVal==='bar'||oldVal==='bar')&&cont.orientation==='h'){labelsTo='y';valuesTo='x';}Lib.swapAttrs(cont,['?','?src'],'labels',labelsTo);Lib.swapAttrs(cont,['d?','?0'],'label',labelsTo);Lib.swapAttrs(cont,['?','?src'],'values',valuesTo);if(oldVal==='pie'){nestedProperty(cont,'marker.color').set(nestedProperty(cont,'marker.colors').get());// super kludgy - but if all pies are gone we won't remove them otherwise\nfullLayout._pielayer.selectAll('g.trace').remove();}else if(Registry.traceIs(cont,'cartesian')){nestedProperty(cont,'marker.colors').set(nestedProperty(cont,'marker.color').get());}}undoit[ai][i]=undefinedToNull(oldVal);// set the new value - if val is an array, it's one el per trace\n// first check for attributes that get more complex alterations\nvar swapAttrs=['swapxy','swapxyaxes','orientation','orientationaxes'];if(swapAttrs.indexOf(ai)!==-1){// setting an orientation: make sure it's changing\n// before we swap everything else\nif(ai==='orientation'){param.set(newVal);// obnoxious that we need this level of coupling... but in order to\n// properly handle setting orientation to `null` we need to mimic\n// the logic inside Bars.supplyDefaults for default orientation\nvar defaultOrientation=cont.x&&!cont.y?'h':'v';if((param.get()||defaultOrientation)===contFull.orientation){continue;}}// orientationaxes has no value,\n// it flips everything and the axes\nelse if(ai==='orientationaxes'){cont.orientation={v:'h',h:'v'}[contFull.orientation];}helpers.swapXYData(cont);flags.calc=flags.clearAxisTypes=true;}else if(Plots.dataArrayContainers.indexOf(param.parts[0])!==-1){// TODO: use manageArrays.applyContainerArrayChanges here too\nhelpers.manageArrayContainers(param,newVal,undoit);flags.calc=true;}else{if(valObject){// must redo calcdata when restyling array values of arrayOk attributes\n// ... but no need to this for regl-based traces\nif(valObject.arrayOk&&!Registry.traceIs(contFull,'regl')&&(Lib.isArrayOrTypedArray(newVal)||Lib.isArrayOrTypedArray(oldVal))){flags.calc=true;}else editTypes.update(flags,valObject);}else{/*\n                     * if we couldn't find valObject,  assume a full recalc.\n                     * This can happen if you're changing type and making\n                     * some other edits too, so the modules we're\n                     * looking at don't have these attributes in them.\n                     */flags.calc=true;}// all the other ones, just modify that one attribute\nparam.set(newVal);}}// swap the data attributes of the relevant x and y axes?\nif(['swapxyaxes','orientationaxes'].indexOf(ai)!==-1){Axes.swap(gd,traces);}// swap hovermode if set to \"compare x/y data\"\nif(ai==='orientationaxes'){var hovermode=nestedProperty(gd.layout,'hovermode');if(hovermode.get()==='x'){hovermode.set('y');}else if(hovermode.get()==='y'){hovermode.set('x');}}// Major enough changes deserve autoscale and\n// non-reversed axes so people don't get confused\n//\n// Note: autobin (or its new analog bin clearing) is not included here\n// since we're not pushing bins back to gd.data, so if we have bin\n// info it was explicitly provided by the user.\nif(['orientation','type'].indexOf(ai)!==-1){axlist=[];for(i=0;i<traces.length;i++){var trace=data[traces[i]];if(Registry.traceIs(trace,'cartesian')){addToAxlist(trace.xaxis||'x');addToAxlist(trace.yaxis||'y');}}doextra(axlist.map(autorangeAttr),true,0);doextra(axlist.map(rangeAttr),[0,1],0);}}if(flags.calc||flags.plot){flags.fullReplot=true;}return{flags:flags,undoit:undoit,redoit:redoit,traces:traces,eventData:Lib.extendDeepNoArrays([],[eventData,traces])};}/**\n * Converts deprecated attribute keys to\n * the current API to ensure backwards compatibility.\n *\n * This is needed for the update mechanism to determine which\n * subroutines to run based on the actual attribute\n * definitions (that don't include the deprecated ones).\n *\n * E.g. Maps {'xaxis.title': 'A chart'} to {'xaxis.title.text': 'A chart'}\n * and {titlefont: {...}} to {'title.font': {...}}.\n *\n * @param aobj\n */function cleanDeprecatedAttributeKeys(aobj){var oldAxisTitleRegex=Lib.counterRegex('axis','\\.title',false,false);var colorbarRegex=/colorbar\\.title$/;var keys=Object.keys(aobj);var i,key,value;for(i=0;i<keys.length;i++){key=keys[i];value=aobj[key];if((key==='title'||oldAxisTitleRegex.test(key)||colorbarRegex.test(key))&&(typeof value==='string'||typeof value==='number')){replace(key,key.replace('title','title.text'));}else if(key.indexOf('titlefont')>-1){replace(key,key.replace('titlefont','title.font'));}else if(key.indexOf('titleposition')>-1){replace(key,key.replace('titleposition','title.position'));}else if(key.indexOf('titleside')>-1){replace(key,key.replace('titleside','title.side'));}else if(key.indexOf('titleoffset')>-1){replace(key,key.replace('titleoffset','title.offset'));}}function replace(oldAttrStr,newAttrStr){aobj[newAttrStr]=aobj[oldAttrStr];delete aobj[oldAttrStr];}}/**\n * relayout: update layout attributes of an existing plot\n *\n * Can be called two ways:\n *\n * Signature 1:\n * @param {String | HTMLDivElement} gd\n *  the id or dom element of the graph container div\n * @param {String} astr\n *  attribute string (like `'xaxis.range[0]'`) to update\n * @param {*} val\n *  value to give this attribute\n *\n * Signature 2:\n * @param {String | HTMLDivElement} gd\n *  (as in signature 1)\n * @param {Object} aobj\n *  attribute object `{astr1: val1, astr2: val2 ...}`\n *  allows setting multiple attributes simultaneously\n */function relayout(gd,astr,val){gd=Lib.getGraphDiv(gd);helpers.clearPromiseQueue(gd);if(gd.framework&&gd.framework.isPolar){return Promise.resolve(gd);}var aobj={};if(typeof astr==='string'){aobj[astr]=val;}else if(Lib.isPlainObject(astr)){aobj=Lib.extendFlat({},astr);}else{Lib.warn('Relayout fail.',astr,val);return Promise.reject();}if(Object.keys(aobj).length)gd.changed=true;var specs=_relayout(gd,aobj);var flags=specs.flags;// clear calcdata if required\nif(flags.calc)gd.calcdata=undefined;// fill in redraw sequence\n// even if we don't have anything left in aobj,\n// something may have happened within relayout that we\n// need to wait for\nvar seq=[Plots.previousPromises];if(flags.layoutReplot){seq.push(subroutines.layoutReplot);}else if(Object.keys(aobj).length){axRangeSupplyDefaultsByPass(gd,flags,specs)||Plots.supplyDefaults(gd);if(flags.legend)seq.push(subroutines.doLegend);if(flags.layoutstyle)seq.push(subroutines.layoutStyles);if(flags.axrange)addAxRangeSequence(seq,specs.rangesAltered);if(flags.ticks)seq.push(subroutines.doTicksRelayout);if(flags.modebar)seq.push(subroutines.doModeBar);if(flags.camera)seq.push(subroutines.doCamera);seq.push(emitAfterPlot);}seq.push(Plots.rehover);Queue.add(gd,relayout,[gd,specs.undoit],relayout,[gd,specs.redoit]);var plotDone=Lib.syncOrAsync(seq,gd);if(!plotDone||!plotDone.then)plotDone=Promise.resolve(gd);return plotDone.then(function(){gd.emit('plotly_relayout',specs.eventData);return gd;});}exports.relayout=relayout;// Optimization mostly for large splom traces where\n// Plots.supplyDefaults can take > 100ms\nfunction axRangeSupplyDefaultsByPass(gd,flags,specs){var k;if(!flags.axrange)return false;for(k in flags){if(k!=='axrange'&&flags[k])return false;}for(k in specs.rangesAltered){var axName=Axes.id2name(k);var axIn=gd.layout[axName];var axOut=gd._fullLayout[axName];axOut.autorange=axIn.autorange;axOut.range=axIn.range.slice();axOut.cleanRange();}return true;}function addAxRangeSequence(seq,rangesAltered){// N.B. leave as sequence of subroutines (for now) instead of\n// subroutine of its own so that finalDraw always gets\n// executed after drawData\nvar drawAxes=rangesAltered?function(gd){var opts={skipTitle:true};for(var id in rangesAltered){if(Axes.getFromId(gd,id).automargin){opts={};break;}}return Axes.draw(gd,Object.keys(rangesAltered),opts);}:function(gd){return Axes.draw(gd,'redraw');};seq.push(subroutines.doAutoRangeAndConstraints,drawAxes,subroutines.drawData,subroutines.finalDraw);}var AX_RANGE_RE=/^[xyz]axis[0-9]*\\.range(\\[[0|1]\\])?$/;var AX_AUTORANGE_RE=/^[xyz]axis[0-9]*\\.autorange$/;var AX_DOMAIN_RE=/^[xyz]axis[0-9]*\\.domain(\\[[0|1]\\])?$/;function _relayout(gd,aobj){var layout=gd.layout;var fullLayout=gd._fullLayout;var guiEditFlag=fullLayout._guiEditing;var layoutNP=makeNP(fullLayout._preGUI,guiEditFlag);var keys=Object.keys(aobj);var axes=Axes.list(gd);var eventData=Lib.extendDeepAll({},aobj);var arrayEdits={};var arrayStr,i,j;cleanDeprecatedAttributeKeys(aobj);keys=Object.keys(aobj);// look for 'allaxes', split out into all axes\n// in case of 3D the axis are nested within a scene which is held in _id\nfor(i=0;i<keys.length;i++){if(keys[i].indexOf('allaxes')===0){for(j=0;j<axes.length;j++){var scene=axes[j]._id.substr(1);var axisAttr=scene.indexOf('scene')!==-1?scene+'.':'';var newkey=keys[i].replace('allaxes',axisAttr+axes[j]._name);if(!aobj[newkey])aobj[newkey]=aobj[keys[i]];}delete aobj[keys[i]];}}// initialize flags\nvar flags=editTypes.layoutFlags();// copies of the change (and previous values of anything affected)\n// for the undo / redo queue\nvar redoit={};var undoit={};// for attrs that interact (like scales & autoscales), save the\n// old vals before making the change\n// val=undefined will not set a value, just record what the value was.\n// attr can be an array to set several at once (all to the same val)\nfunction doextra(attr,val){if(Array.isArray(attr)){attr.forEach(function(a){doextra(a,val);});return;}// if we have another value for this attribute (explicitly or\n// via a parent) do not override with this auto-generated extra\nif(attr in aobj||helpers.hasParent(aobj,attr))return;var p=layoutNP(layout,attr);if(!(attr in undoit)){undoit[attr]=undefinedToNull(p.get());}if(val!==undefined)p.set(val);}// for constraint enforcement: keep track of all axes (as {id: name})\n// we're editing the (auto)range of, so we can tell the others constrained\n// to scale with them that it's OK for them to shrink\nvar rangesAltered={};var axId;function recordAlteredAxis(pleafPlus){var axId=Axes.name2id(pleafPlus.split('.')[0]);rangesAltered[axId]=1;return axId;}// alter gd.layout\nfor(var ai in aobj){if(helpers.hasParent(aobj,ai)){throw new Error('cannot set '+ai+'and a parent attribute simultaneously');}var p=layoutNP(layout,ai);var vi=aobj[ai];var plen=p.parts.length;// p.parts may end with an index integer if the property is an array\nvar pend=plen-1;while(pend>0&&typeof p.parts[pend]!=='string'){pend--;}// last property in chain (leaf node)\nvar pleaf=p.parts[pend];// leaf plus immediate parent\nvar pleafPlus=p.parts[pend-1]+'.'+pleaf;// trunk nodes (everything except the leaf)\nvar ptrunk=p.parts.slice(0,pend).join('.');var parentIn=nestedProperty(gd.layout,ptrunk).get();var parentFull=nestedProperty(fullLayout,ptrunk).get();var vOld=p.get();if(vi===undefined)continue;redoit[ai]=vi;// axis reverse is special - it is its own inverse\n// op and has no flag.\nundoit[ai]=pleaf==='reverse'?vi:undefinedToNull(vOld);var valObject=PlotSchema.getLayoutValObject(fullLayout,p.parts);if(valObject&&valObject.impliedEdits&&vi!==null){for(var impliedKey in valObject.impliedEdits){doextra(Lib.relativeAttr(ai,impliedKey),valObject.impliedEdits[impliedKey]);}}// Setting width or height to null must reset the graph's width / height\n// back to its initial value as computed during the first pass in Plots.plotAutoSize.\n//\n// To do so, we must manually set them back here using the _initialAutoSize cache.\n// can't use impliedEdits for this because behavior depends on vi\nif(['width','height'].indexOf(ai)!==-1){if(vi){doextra('autosize',null);// currently we don't support autosize one dim only - so\n// explicitly set the other one. Note that doextra will\n// ignore this if the same relayout call also provides oppositeAttr\nvar oppositeAttr=ai==='height'?'width':'height';doextra(oppositeAttr,fullLayout[oppositeAttr]);}else{fullLayout[ai]=gd._initialAutoSize[ai];}}else if(ai==='autosize'){// depends on vi here too, so again can't use impliedEdits\ndoextra('width',vi?null:fullLayout.width);doextra('height',vi?null:fullLayout.height);}// check autorange vs range\nelse if(pleafPlus.match(AX_RANGE_RE)){recordAlteredAxis(pleafPlus);nestedProperty(fullLayout,ptrunk+'._inputRange').set(null);}else if(pleafPlus.match(AX_AUTORANGE_RE)){recordAlteredAxis(pleafPlus);nestedProperty(fullLayout,ptrunk+'._inputRange').set(null);var axFull=nestedProperty(fullLayout,ptrunk).get();if(axFull._inputDomain){// if we're autoranging and this axis has a constrained domain,\n// reset it so we don't get locked into a shrunken size\naxFull._input.domain=axFull._inputDomain.slice();}}else if(pleafPlus.match(AX_DOMAIN_RE)){nestedProperty(fullLayout,ptrunk+'._inputDomain').set(null);}// toggling axis type between log and linear: we need to convert\n// positions for components that are still using linearized values,\n// not data values like newer components.\n// previously we did this for log <-> not-log, but now only do it\n// for log <-> linear\nif(pleaf==='type'){var ax=parentIn;var toLog=parentFull.type==='linear'&&vi==='log';var fromLog=parentFull.type==='log'&&vi==='linear';if(toLog||fromLog){if(!ax||!ax.range){// 2D never gets here, but 3D does\n// I don't think this is needed, but left here in case there\n// are edge cases I'm not thinking of.\ndoextra(ptrunk+'.autorange',true);}else if(!parentFull.autorange){// toggling log without autorange: need to also recalculate ranges\n// because log axes use linearized values for range endpoints\nvar r0=ax.range[0];var r1=ax.range[1];if(toLog){// if both limits are negative, autorange\nif(r0<=0&&r1<=0){doextra(ptrunk+'.autorange',true);}// if one is negative, set it 6 orders below the other.\nif(r0<=0)r0=r1/1e6;else if(r1<=0)r1=r0/1e6;// now set the range values as appropriate\ndoextra(ptrunk+'.range[0]',Math.log(r0)/Math.LN10);doextra(ptrunk+'.range[1]',Math.log(r1)/Math.LN10);}else{doextra(ptrunk+'.range[0]',Math.pow(10,r0));doextra(ptrunk+'.range[1]',Math.pow(10,r1));}}else if(toLog){// just make sure the range is positive and in the right\n// order, it'll get recalculated later\nax.range=ax.range[1]>ax.range[0]?[1,2]:[2,1];}// clear polar view initial stash for radial range so that\n// value get recomputed in correct units\nif(Array.isArray(fullLayout._subplots.polar)&&fullLayout._subplots.polar.length&&fullLayout[p.parts[0]]&&p.parts[1]==='radialaxis'){delete fullLayout[p.parts[0]]._subplot.viewInitial['radialaxis.range'];}// Annotations and images also need to convert to/from linearized coords\n// Shapes do not need this :)\nRegistry.getComponentMethod('annotations','convertCoords')(gd,parentFull,vi,doextra);Registry.getComponentMethod('images','convertCoords')(gd,parentFull,vi,doextra);}else{// any other type changes: the range from the previous type\n// will not make sense, so autorange it.\ndoextra(ptrunk+'.autorange',true);doextra(ptrunk+'.range',null);}nestedProperty(fullLayout,ptrunk+'._inputRange').set(null);}else if(pleaf.match(AX_NAME_PATTERN)){var fullProp=nestedProperty(fullLayout,ai).get();var newType=(vi||{}).type;// This can potentially cause strange behavior if the autotype is not\n// numeric (linear, because we don't auto-log) but the previous type\n// was log. That's a very strange edge case though\nif(!newType||newType==='-')newType='linear';Registry.getComponentMethod('annotations','convertCoords')(gd,fullProp,newType,doextra);Registry.getComponentMethod('images','convertCoords')(gd,fullProp,newType,doextra);}// alter gd.layout\n// collect array component edits for execution all together\n// so we can ensure consistent behavior adding/removing items\n// and order-independence for add/remove/edit all together in\n// one relayout call\nvar containerArrayMatch=manageArrays.containerArrayMatch(ai);if(containerArrayMatch){arrayStr=containerArrayMatch.array;i=containerArrayMatch.index;var propStr=containerArrayMatch.property;var updateValObject=valObject||{editType:'calc'};if(i!==''&&propStr===''){// special handling of undoit if we're adding or removing an element\n// ie 'annotations[2]' which can be {...} (add) or null,\n// does not work when replacing the entire array\nif(manageArrays.isAddVal(vi)){undoit[ai]=null;}else if(manageArrays.isRemoveVal(vi)){undoit[ai]=(nestedProperty(layout,arrayStr).get()||[])[i];}else{Lib.warn('unrecognized full object value',aobj);}}editTypes.update(flags,updateValObject);// prepare the edits object we'll send to applyContainerArrayChanges\nif(!arrayEdits[arrayStr])arrayEdits[arrayStr]={};var objEdits=arrayEdits[arrayStr][i];if(!objEdits)objEdits=arrayEdits[arrayStr][i]={};objEdits[propStr]=vi;delete aobj[ai];}// handle axis reversal explicitly, as there's no 'reverse' attribute\nelse if(pleaf==='reverse'){if(parentIn.range)parentIn.range.reverse();else{doextra(ptrunk+'.autorange',true);parentIn.range=[1,0];}if(parentFull.autorange)flags.calc=true;else flags.plot=true;}else{if(fullLayout._has('scatter-like')&&fullLayout._has('regl')&&ai==='dragmode'&&(vi==='lasso'||vi==='select')&&!(vOld==='lasso'||vOld==='select')){flags.plot=true;}else if(valObject)editTypes.update(flags,valObject);else flags.calc=true;p.set(vi);}}// now we've collected component edits - execute them all together\nfor(arrayStr in arrayEdits){var finished=manageArrays.applyContainerArrayChanges(gd,layoutNP(layout,arrayStr),arrayEdits[arrayStr],flags,layoutNP);if(!finished)flags.plot=true;}// figure out if we need to recalculate axis constraints\nvar constraints=fullLayout._axisConstraintGroups||[];for(axId in rangesAltered){for(i=0;i<constraints.length;i++){var group=constraints[i];if(group[axId]){// Always recalc if we're changing constrained ranges.\n// Otherwise it's possible to violate the constraints by\n// specifying arbitrary ranges for all axes in the group.\n// this way some ranges may expand beyond what's specified,\n// as they do at first draw, to satisfy the constraints.\nflags.calc=true;for(var groupAxId in group){if(!rangesAltered[groupAxId]){Axes.getFromId(gd,groupAxId)._constraintShrinkable=true;}}}}}// If the autosize changed or height or width was explicitly specified,\n// this triggers a redraw\n// TODO: do we really need special aobj.height/width handling here?\n// couldn't editType do this?\nif(updateAutosize(gd)||aobj.height||aobj.width)flags.plot=true;if(flags.plot||flags.calc){flags.layoutReplot=true;}// now all attribute mods are done, as are\n// redo and undo so we can save them\nreturn{flags:flags,rangesAltered:rangesAltered,undoit:undoit,redoit:redoit,eventData:eventData};}/*\n * updateAutosize: we made a change, does it change the autosize result?\n * puts the new size into fullLayout\n * returns true if either height or width changed\n */function updateAutosize(gd){var fullLayout=gd._fullLayout;var oldWidth=fullLayout.width;var oldHeight=fullLayout.height;// calculate autosizing\nif(gd.layout.autosize)Plots.plotAutoSize(gd,gd.layout,fullLayout);return fullLayout.width!==oldWidth||fullLayout.height!==oldHeight;}/**\n * update: update trace and layout attributes of an existing plot\n *\n * @param {String | HTMLDivElement} gd\n *  the id or DOM element of the graph container div\n * @param {Object} traceUpdate\n *  attribute object `{astr1: val1, astr2: val2 ...}`\n *  corresponding to updates in the plot's traces\n * @param {Object} layoutUpdate\n *  attribute object `{astr1: val1, astr2: val2 ...}`\n *  corresponding to updates in the plot's layout\n * @param {Number[] | Number} [traces]\n *  integer or array of integers for the traces to alter (all if omitted)\n *\n */function update(gd,traceUpdate,layoutUpdate,_traces){gd=Lib.getGraphDiv(gd);helpers.clearPromiseQueue(gd);if(gd.framework&&gd.framework.isPolar){return Promise.resolve(gd);}if(!Lib.isPlainObject(traceUpdate))traceUpdate={};if(!Lib.isPlainObject(layoutUpdate))layoutUpdate={};if(Object.keys(traceUpdate).length)gd.changed=true;if(Object.keys(layoutUpdate).length)gd.changed=true;var traces=helpers.coerceTraceIndices(gd,_traces);var restyleSpecs=_restyle(gd,Lib.extendFlat({},traceUpdate),traces);var restyleFlags=restyleSpecs.flags;var relayoutSpecs=_relayout(gd,Lib.extendFlat({},layoutUpdate));var relayoutFlags=relayoutSpecs.flags;// clear calcdata and/or axis types if required\nif(restyleFlags.calc||relayoutFlags.calc)gd.calcdata=undefined;if(restyleFlags.clearAxisTypes)helpers.clearAxisTypes(gd,traces,layoutUpdate);// fill in redraw sequence\nvar seq=[];if(restyleFlags.fullReplot&&relayoutFlags.layoutReplot){var data=gd.data;var layout=gd.layout;// clear existing data/layout on gd\n// so that Plotly.plot doesn't try to extend them\ngd.data=undefined;gd.layout=undefined;seq.push(function(){return exports.plot(gd,data,layout);});}else if(restyleFlags.fullReplot){seq.push(exports.plot);}else if(relayoutFlags.layoutReplot){seq.push(subroutines.layoutReplot);}else{seq.push(Plots.previousPromises);axRangeSupplyDefaultsByPass(gd,relayoutFlags,relayoutSpecs)||Plots.supplyDefaults(gd);if(restyleFlags.style)seq.push(subroutines.doTraceStyle);if(restyleFlags.colorbars)seq.push(subroutines.doColorBars);if(relayoutFlags.legend)seq.push(subroutines.doLegend);if(relayoutFlags.layoutstyle)seq.push(subroutines.layoutStyles);if(relayoutFlags.axrange)addAxRangeSequence(seq,relayoutSpecs.rangesAltered);if(relayoutFlags.ticks)seq.push(subroutines.doTicksRelayout);if(relayoutFlags.modebar)seq.push(subroutines.doModeBar);if(relayoutFlags.camera)seq.push(subroutines.doCamera);seq.push(emitAfterPlot);}seq.push(Plots.rehover);Queue.add(gd,update,[gd,restyleSpecs.undoit,relayoutSpecs.undoit,restyleSpecs.traces],update,[gd,restyleSpecs.redoit,relayoutSpecs.redoit,restyleSpecs.traces]);var plotDone=Lib.syncOrAsync(seq,gd);if(!plotDone||!plotDone.then)plotDone=Promise.resolve(gd);return plotDone.then(function(){gd.emit('plotly_update',{data:restyleSpecs.eventData,layout:relayoutSpecs.eventData});return gd;});}exports.update=update;/*\n * internal-use-only restyle/relayout/update variants that record the initial\n * values in (fullLayout|fullTrace)._preGUI so changes can be persisted across\n * Plotly.react data updates, dependent on uirevision attributes\n */function guiEdit(func){return function wrappedEdit(gd){gd._fullLayout._guiEditing=true;var p=func.apply(null,arguments);gd._fullLayout._guiEditing=false;return p;};}exports._guiRestyle=guiEdit(restyle);exports._guiRelayout=guiEdit(relayout);exports._guiUpdate=guiEdit(update);// For connecting edited layout attributes to uirevision attrs\n// If no `attr` we use `match[1] + '.uirevision'`\n// Ordered by most common edits first, to minimize our search time\nvar layoutUIControlPatterns=[{pattern:/^hiddenlabels/,attr:'legend.uirevision'},{pattern:/^((x|y)axis\\d*)\\.((auto)?range|title\\.text)/},// showspikes and modes include those nested inside scenes\n{pattern:/axis\\d*\\.showspikes$/,attr:'modebar.uirevision'},{pattern:/(hover|drag)mode$/,attr:'modebar.uirevision'},{pattern:/^(scene\\d*)\\.camera/},{pattern:/^(geo\\d*)\\.(projection|center)/},{pattern:/^(ternary\\d*\\.[abc]axis)\\.(min|title\\.text)$/},{pattern:/^(polar\\d*\\.radialaxis)\\.((auto)?range|angle|title\\.text)/},{pattern:/^(polar\\d*\\.angularaxis)\\.rotation/},{pattern:/^(mapbox\\d*)\\.(center|zoom|bearing|pitch)/},{pattern:/^legend\\.(x|y)$/,attr:'editrevision'},{pattern:/^(shapes|annotations)/,attr:'editrevision'},{pattern:/^title\\.text$/,attr:'editrevision'}];// same for trace attributes: if `attr` is given it's in layout,\n// or with no `attr` we use `trace.uirevision`\nvar traceUIControlPatterns=[{pattern:/^selectedpoints$/,attr:'selectionrevision'},// \"visible\" includes trace.transforms[i].styles[j].value.visible\n{pattern:/(^|value\\.)visible$/,attr:'legend.uirevision'},{pattern:/^dimensions\\[\\d+\\]\\.constraintrange/},// below this you must be in editable: true mode\n// TODO: I still put name and title with `trace.uirevision`\n// reasonable or should these be `editrevision`?\n// Also applies to axis titles up in the layout section\n// \"name\" also includes transform.styles\n{pattern:/(^|value\\.)name$/},// including nested colorbar attributes (ie marker.colorbar)\n{pattern:/colorbar\\.title\\.text$/},{pattern:/colorbar\\.(x|y)$/,attr:'editrevision'}];function findUIPattern(key,patternSpecs){for(var i=0;i<patternSpecs.length;i++){var spec=patternSpecs[i];var match=key.match(spec.pattern);if(match){return{head:match[1],attr:spec.attr};}}}// We're finding the new uirevision before supplyDefaults, so do the\n// inheritance manually. Note that only `undefined` inherits - other\n// falsy values are returned.\nfunction getNewRev(revAttr,container){var newRev=nestedProperty(container,revAttr).get();if(newRev!==undefined)return newRev;var parts=revAttr.split('.');parts.pop();while(parts.length>1){parts.pop();newRev=nestedProperty(container,parts.join('.')+'.uirevision').get();if(newRev!==undefined)return newRev;}return container.uirevision;}function getFullTraceIndexFromUid(uid,fullData){for(var i=0;i<fullData.length;i++){if(fullData[i]._fullInput.uid===uid)return i;}return-1;}function getTraceIndexFromUid(uid,data,tracei){for(var i=0;i<data.length;i++){if(data[i].uid===uid)return i;}// fall back on trace order, but only if user didn't provide a uid for that trace\nreturn data[tracei].uid?-1:tracei;}function valsMatch(v1,v2){var v1IsObj=Lib.isPlainObject(v1);var v1IsArray=Array.isArray(v1);if(v1IsObj||v1IsArray){return(v1IsObj&&Lib.isPlainObject(v2)||v1IsArray&&Array.isArray(v2))&&JSON.stringify(v1)===JSON.stringify(v2);}return v1===v2;}function applyUIRevisions(data,layout,oldFullData,oldFullLayout){var layoutPreGUI=oldFullLayout._preGUI;var key,revAttr,oldRev,newRev,match,preGUIVal,newNP,newVal;var bothInheritAutorange=[];var newRangeAccepted={};for(key in layoutPreGUI){match=findUIPattern(key,layoutUIControlPatterns);if(match){revAttr=match.attr||match.head+'.uirevision';oldRev=nestedProperty(oldFullLayout,revAttr).get();newRev=oldRev&&getNewRev(revAttr,layout);if(newRev&&newRev===oldRev){preGUIVal=layoutPreGUI[key];if(preGUIVal===null)preGUIVal=undefined;newNP=nestedProperty(layout,key);newVal=newNP.get();if(valsMatch(newVal,preGUIVal)){if(newVal===undefined&&key.substr(key.length-9)==='autorange'){bothInheritAutorange.push(key.substr(0,key.length-10));}newNP.set(undefinedToNull(nestedProperty(oldFullLayout,key).get()));continue;}}}else{Lib.warn('unrecognized GUI edit: '+key);}// if we got this far, the new value was accepted as the new starting\n// point (either because it changed or revision changed)\n// so remove it from _preGUI for next time.\ndelete layoutPreGUI[key];if(key.substr(key.length-8,6)==='range['){newRangeAccepted[key.substr(0,key.length-9)]=1;}}// Special logic for `autorange`, since it interacts with `range`:\n// If the new figure's matching `range` was kept, and `autorange`\n// wasn't supplied explicitly in either the original or the new figure,\n// we shouldn't alter that - but we may just have done that, so fix it.\nfor(var i=0;i<bothInheritAutorange.length;i++){var axAttr=bothInheritAutorange[i];if(newRangeAccepted[axAttr]){var newAx=nestedProperty(layout,axAttr).get();if(newAx)delete newAx.autorange;}}// Now traces - try to match them up by uid (in case we added/deleted in\n// the middle), then fall back on index.\nvar allTracePreGUI=oldFullLayout._tracePreGUI;for(var uid in allTracePreGUI){var tracePreGUI=allTracePreGUI[uid];var newTrace=null;var fullInput;for(key in tracePreGUI){// wait until we know we have preGUI values to look for traces\n// but if we don't find both, stop looking at this uid\nif(!newTrace){var fulli=getFullTraceIndexFromUid(uid,oldFullData);if(fulli<0){// Somehow we didn't even have this trace in oldFullData...\n// I guess this could happen with `deleteTraces` or something\ndelete allTracePreGUI[uid];break;}var fullTrace=oldFullData[fulli];fullInput=fullTrace._fullInput;var newTracei=getTraceIndexFromUid(uid,data,fullInput.index);if(newTracei<0){// No match in new data\ndelete allTracePreGUI[uid];break;}newTrace=data[newTracei];}match=findUIPattern(key,traceUIControlPatterns);if(match){if(match.attr){oldRev=nestedProperty(oldFullLayout,match.attr).get();newRev=oldRev&&getNewRev(match.attr,layout);}else{oldRev=fullInput.uirevision;// inheritance for trace.uirevision is simple, just layout.uirevision\nnewRev=newTrace.uirevision;if(newRev===undefined)newRev=layout.uirevision;}if(newRev&&newRev===oldRev){preGUIVal=tracePreGUI[key];if(preGUIVal===null)preGUIVal=undefined;newNP=nestedProperty(newTrace,key);newVal=newNP.get();if(valsMatch(newVal,preGUIVal)){newNP.set(undefinedToNull(nestedProperty(fullInput,key).get()));continue;}}}else{Lib.warn('unrecognized GUI edit: '+key+' in trace uid '+uid);}delete tracePreGUI[key];}}}/**\n * Plotly.react:\n * A plot/update method that takes the full plot state (same API as plot/newPlot)\n * and diffs to determine the minimal update pathway\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n * @param {array of objects} data\n *      array of traces, containing the data and display information for each trace\n * @param {object} layout\n *      object describing the overall display of the plot,\n *      all the stuff that doesn't pertain to any individual trace\n * @param {object} config\n *      configuration options (see ./plot_config.js for more info)\n *\n * OR\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n * @param {object} figure\n *      object containing `data`, `layout`, `config`, and `frames` members\n *\n */exports.react=function(gd,data,layout,config){var frames,plotDone;function addFrames(){return exports.addFrames(gd,frames);}gd=Lib.getGraphDiv(gd);var oldFullData=gd._fullData;var oldFullLayout=gd._fullLayout;// you can use this as the initial draw as well as to update\nif(!Lib.isPlotDiv(gd)||!oldFullData||!oldFullLayout){plotDone=exports.newPlot(gd,data,layout,config);}else{if(Lib.isPlainObject(data)){var obj=data;data=obj.data;layout=obj.layout;config=obj.config;frames=obj.frames;}var configChanged=false;// assume that if there's a config at all, we're reacting to it too,\n// and completely replace the previous config\nif(config){var oldConfig=Lib.extendDeep({},gd._context);gd._context=undefined;setPlotContext(gd,config);configChanged=diffConfig(oldConfig,gd._context);}gd.data=data||[];helpers.cleanData(gd.data);gd.layout=layout||{};helpers.cleanLayout(gd.layout);applyUIRevisions(gd.data,gd.layout,oldFullData,oldFullLayout);// \"true\" skips updating calcdata and remapping arrays from calcTransforms,\n// which supplyDefaults usually does at the end, but we may need to NOT do\n// if the diff (which we haven't determined yet) says we'll recalc\nPlots.supplyDefaults(gd,{skipUpdateCalc:true});var newFullData=gd._fullData;var newFullLayout=gd._fullLayout;var immutable=newFullLayout.datarevision===undefined;var restyleFlags=diffData(gd,oldFullData,newFullData,immutable);var relayoutFlags=diffLayout(gd,oldFullLayout,newFullLayout,immutable);// TODO: how to translate this part of relayout to Plotly.react?\n// // Setting width or height to null must reset the graph's width / height\n// // back to its initial value as computed during the first pass in Plots.plotAutoSize.\n// //\n// // To do so, we must manually set them back here using the _initialAutoSize cache.\n// if(['width', 'height'].indexOf(ai) !== -1 && vi === null) {\n//     fullLayout[ai] = gd._initialAutoSize[ai];\n// }\nif(updateAutosize(gd))relayoutFlags.layoutReplot=true;// clear calcdata if required\nif(restyleFlags.calc||relayoutFlags.calc)gd.calcdata=undefined;// otherwise do the calcdata updates and calcTransform array remaps that we skipped earlier\nelse Plots.supplyDefaultsUpdateCalc(gd.calcdata,newFullData);// Note: what restyle/relayout use impliedEdits and clearAxisTypes for\n// must be handled by the user when using Plotly.react.\n// fill in redraw sequence\nvar seq=[];if(frames){gd._transitionData={};Plots.createTransitionData(gd);seq.push(addFrames);}if(restyleFlags.fullReplot||relayoutFlags.layoutReplot||configChanged){gd._fullLayout._skipDefaults=true;seq.push(exports.plot);}else{for(var componentType in relayoutFlags.arrays){var indices=relayoutFlags.arrays[componentType];if(indices.length){var drawOne=Registry.getComponentMethod(componentType,'drawOne');if(drawOne!==Lib.noop){for(var i=0;i<indices.length;i++){drawOne(gd,indices[i]);}}else{var draw=Registry.getComponentMethod(componentType,'draw');if(draw===Lib.noop){throw new Error('cannot draw components: '+componentType);}draw(gd);}}}seq.push(Plots.previousPromises);if(restyleFlags.style)seq.push(subroutines.doTraceStyle);if(restyleFlags.colorbars)seq.push(subroutines.doColorBars);if(relayoutFlags.legend)seq.push(subroutines.doLegend);if(relayoutFlags.layoutstyle)seq.push(subroutines.layoutStyles);if(relayoutFlags.axrange)addAxRangeSequence(seq);if(relayoutFlags.ticks)seq.push(subroutines.doTicksRelayout);if(relayoutFlags.modebar)seq.push(subroutines.doModeBar);if(relayoutFlags.camera)seq.push(subroutines.doCamera);seq.push(emitAfterPlot);}seq.push(Plots.rehover);plotDone=Lib.syncOrAsync(seq,gd);if(!plotDone||!plotDone.then)plotDone=Promise.resolve(gd);}return plotDone.then(function(){gd.emit('plotly_react',{data:data,layout:layout});return gd;});};function diffData(gd,oldFullData,newFullData,immutable){if(oldFullData.length!==newFullData.length){return{fullReplot:true,calc:true};}var flags=editTypes.traceFlags();flags.arrays={};var i,trace;function getTraceValObject(parts){return PlotSchema.getTraceValObject(trace,parts);}var diffOpts={getValObject:getTraceValObject,flags:flags,immutable:immutable,gd:gd};var seenUIDs={};for(i=0;i<oldFullData.length;i++){trace=newFullData[i]._fullInput;if(Plots.hasMakesDataTransform(trace))trace=newFullData[i];if(seenUIDs[trace.uid])continue;seenUIDs[trace.uid]=1;getDiffFlags(oldFullData[i]._fullInput,trace,[],diffOpts);}if(flags.calc||flags.plot){flags.fullReplot=true;}return flags;}function diffLayout(gd,oldFullLayout,newFullLayout,immutable){var flags=editTypes.layoutFlags();flags.arrays={};function getLayoutValObject(parts){return PlotSchema.getLayoutValObject(newFullLayout,parts);}var diffOpts={getValObject:getLayoutValObject,flags:flags,immutable:immutable,gd:gd};getDiffFlags(oldFullLayout,newFullLayout,[],diffOpts);if(flags.plot||flags.calc){flags.layoutReplot=true;}return flags;}function getDiffFlags(oldContainer,newContainer,outerparts,opts){var valObject,key;var getValObject=opts.getValObject;var flags=opts.flags;var immutable=opts.immutable;var inArray=opts.inArray;var arrayIndex=opts.arrayIndex;function changed(){var editType=valObject.editType;if(inArray&&editType.indexOf('arraydraw')!==-1){Lib.pushUnique(flags.arrays[inArray],arrayIndex);return;}editTypes.update(flags,valObject);}function valObjectCanBeDataArray(valObject){return valObject.valType==='data_array'||valObject.arrayOk;}for(key in oldContainer){// short-circuit based on previous calls or previous keys that already maximized the pathway\nif(flags.calc)return;var oldVal=oldContainer[key];var newVal=newContainer[key];if(key.charAt(0)==='_'||typeof oldVal==='function'||oldVal===newVal)continue;// FIXME: ax.tick0 and dtick get filled in during plotting (except for geo subplots),\n// and unlike other auto values they don't make it back into the input,\n// so newContainer won't have them.\nif((key==='tick0'||key==='dtick')&&outerparts[0]!=='geo'){var tickMode=newContainer.tickmode;if(tickMode==='auto'||tickMode==='array'||!tickMode)continue;}// FIXME: Similarly for axis ranges for 3D\n// contourcarpet doesn't HAVE zmin/zmax, they're just auto-added. It needs them.\nif(key==='range'&&newContainer.autorange)continue;if((key==='zmin'||key==='zmax')&&newContainer.type==='contourcarpet')continue;var parts=outerparts.concat(key);valObject=getValObject(parts);// in case type changed, we may not even *have* a valObject.\nif(!valObject)continue;if(valObject._compareAsJSON&&JSON.stringify(oldVal)===JSON.stringify(newVal))continue;var valType=valObject.valType;var i;var canBeDataArray=valObjectCanBeDataArray(valObject);var wasArray=Array.isArray(oldVal);var nowArray=Array.isArray(newVal);// hack for traces that modify the data in supplyDefaults, like\n// converting 1D to 2D arrays, which will always create new objects\nif(wasArray&&nowArray){var inputKey='_input_'+key;var oldValIn=oldContainer[inputKey];var newValIn=newContainer[inputKey];if(Array.isArray(oldValIn)&&oldValIn===newValIn)continue;}if(newVal===undefined){if(canBeDataArray&&wasArray)flags.calc=true;else changed();}else if(valObject._isLinkedToArray){var arrayEditIndices=[];var extraIndices=false;if(!inArray)flags.arrays[key]=arrayEditIndices;var minLen=Math.min(oldVal.length,newVal.length);var maxLen=Math.max(oldVal.length,newVal.length);if(minLen!==maxLen){if(valObject.editType==='arraydraw'){extraIndices=true;}else{changed();continue;}}for(i=0;i<minLen;i++){getDiffFlags(oldVal[i],newVal[i],parts.concat(i),// add array indices, but not if we're already in an array\nLib.extendFlat({inArray:key,arrayIndex:i},opts));}// put this at the end so that we know our collected array indices are sorted\n// but the check for length changes happens up front so we can short-circuit\n// diffing if appropriate\nif(extraIndices){for(i=minLen;i<maxLen;i++){arrayEditIndices.push(i);}}}else if(!valType&&Lib.isPlainObject(oldVal)){getDiffFlags(oldVal,newVal,parts,opts);}else if(canBeDataArray){if(wasArray&&nowArray){// don't try to diff two data arrays. If immutable we know the data changed,\n// if not, assume it didn't and let `layout.datarevision` tell us if it did\nif(immutable){flags.calc=true;}}else if(wasArray!==nowArray){flags.calc=true;}else changed();}else if(wasArray&&nowArray){// info array, colorscale, 'any' - these are short, just stringify.\n// I don't *think* that covers up any real differences post-validation, does it?\n// otherwise we need to dive in 1 (info_array) or 2 (colorscale) levels and compare\n// all elements.\nif(oldVal.length!==newVal.length||String(oldVal)!==String(newVal)){changed();}}else{changed();}}for(key in newContainer){if(!(key in oldContainer||key.charAt(0)==='_'||typeof newContainer[key]==='function')){valObject=getValObject(outerparts.concat(key));if(valObjectCanBeDataArray(valObject)&&Array.isArray(newContainer[key])){flags.calc=true;return;}else changed();}}}/*\n * simple diff for config - for now, just treat all changes as equivalent\n */function diffConfig(oldConfig,newConfig){var key;for(key in oldConfig){if(key.charAt(0)==='_')continue;var oldVal=oldConfig[key];var newVal=newConfig[key];if(oldVal!==newVal){if(Lib.isPlainObject(oldVal)&&Lib.isPlainObject(newVal)){if(diffConfig(oldVal,newVal)){return true;}}else if(Array.isArray(oldVal)&&Array.isArray(newVal)){if(oldVal.length!==newVal.length){return true;}for(var i=0;i<oldVal.length;i++){if(oldVal[i]!==newVal[i]){if(Lib.isPlainObject(oldVal[i])&&Lib.isPlainObject(newVal[i])){if(diffConfig(oldVal[i],newVal[i])){return true;}}else{return true;}}}}else{return true;}}}}/**\n * Animate to a frame, sequence of frame, frame group, or frame definition\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n *\n * @param {string or object or array of strings or array of objects} frameOrGroupNameOrFrameList\n *      a single frame, array of frames, or group to which to animate. The intent is\n *      inferred by the type of the input. Valid inputs are:\n *\n *      - string, e.g. 'groupname': animate all frames of a given `group` in the order\n *            in which they are defined via `Plotly.addFrames`.\n *\n *      - array of strings, e.g. ['frame1', frame2']: a list of frames by name to which\n *            to animate in sequence\n *\n *      - object: {data: ...}: a frame definition to which to animate. The frame is not\n *            and does not need to be added via `Plotly.addFrames`. It may contain any of\n *            the properties of a frame, including `data`, `layout`, and `traces`. The\n *            frame is used as provided and does not use the `baseframe` property.\n *\n *      - array of objects, e.g. [{data: ...}, {data: ...}]: a list of frame objects,\n *            each following the same rules as a single `object`.\n *\n * @param {object} animationOpts\n *      configuration for the animation\n */exports.animate=function(gd,frameOrGroupNameOrFrameList,animationOpts){gd=Lib.getGraphDiv(gd);if(!Lib.isPlotDiv(gd)){throw new Error('This element is not a Plotly plot: '+gd+'. It\\'s likely that you\\'ve failed '+'to create a plot before animating it. For more details, see '+'https://plot.ly/javascript/animations/');}var trans=gd._transitionData;// This is the queue of frames that will be animated as soon as possible. They\n// are popped immediately upon the *start* of a transition:\nif(!trans._frameQueue){trans._frameQueue=[];}animationOpts=Plots.supplyAnimationDefaults(animationOpts);var transitionOpts=animationOpts.transition;var frameOpts=animationOpts.frame;// Since frames are popped immediately, an empty queue only means all frames have\n// *started* to transition, not that the animation is complete. To solve that,\n// track a separate counter that increments at the same time as frames are added\n// to the queue, but decrements only when the transition is complete.\nif(trans._frameWaitingCnt===undefined){trans._frameWaitingCnt=0;}function getTransitionOpts(i){if(Array.isArray(transitionOpts)){if(i>=transitionOpts.length){return transitionOpts[0];}else{return transitionOpts[i];}}else{return transitionOpts;}}function getFrameOpts(i){if(Array.isArray(frameOpts)){if(i>=frameOpts.length){return frameOpts[0];}else{return frameOpts[i];}}else{return frameOpts;}}// Execute a callback after the wrapper function has been called n times.\n// This is used to defer the resolution until a transition has resovled *and*\n// the frame has completed. If it's not done this way, then we get a race\n// condition in which the animation might resolve before a transition is complete\n// or vice versa.\nfunction callbackOnNthTime(cb,n){var cnt=0;return function(){if(cb&&++cnt===n){return cb();}};}return new Promise(function(resolve,reject){function discardExistingFrames(){if(trans._frameQueue.length===0){return;}while(trans._frameQueue.length){var next=trans._frameQueue.pop();if(next.onInterrupt){next.onInterrupt();}}gd.emit('plotly_animationinterrupted',[]);}function queueFrames(frameList){if(frameList.length===0)return;for(var i=0;i<frameList.length;i++){var computedFrame;if(frameList[i].type==='byname'){// If it's a named frame, compute it:\ncomputedFrame=Plots.computeFrame(gd,frameList[i].name);}else{// Otherwise we must have been given a simple object, so treat\n// the input itself as the computed frame.\ncomputedFrame=frameList[i].data;}var frameOpts=getFrameOpts(i);var transitionOpts=getTransitionOpts(i);// It doesn't make much sense for the transition duration to be greater than\n// the frame duration, so limit it:\ntransitionOpts.duration=Math.min(transitionOpts.duration,frameOpts.duration);var nextFrame={frame:computedFrame,name:frameList[i].name,frameOpts:frameOpts,transitionOpts:transitionOpts};if(i===frameList.length-1){// The last frame in this .animate call stores the promise resolve\n// and reject callbacks. This is how we ensure that the animation\n// loop (which may exist as a result of a *different* .animate call)\n// still resolves or rejecdts this .animate call's promise. once it's\n// complete.\nnextFrame.onComplete=callbackOnNthTime(resolve,2);nextFrame.onInterrupt=reject;}trans._frameQueue.push(nextFrame);}// Set it as never having transitioned to a frame. This will cause the animation\n// loop to immediately transition to the next frame (which, for immediate mode,\n// is the first frame in the list since all others would have been discarded\n// below)\nif(animationOpts.mode==='immediate'){trans._lastFrameAt=-Infinity;}// Only it's not already running, start a RAF loop. This could be avoided in the\n// case that there's only one frame, but it significantly complicated the logic\n// and only sped things up by about 5% or so for a lorenz attractor simulation.\n// It would be a fine thing to implement, but the benefit of that optimization\n// doesn't seem worth the extra complexity.\nif(!trans._animationRaf){beginAnimationLoop();}}function stopAnimationLoop(){gd.emit('plotly_animated');// Be sure to unset also since it's how we know whether a loop is already running:\nwindow.cancelAnimationFrame(trans._animationRaf);trans._animationRaf=null;}function nextFrame(){if(trans._currentFrame&&trans._currentFrame.onComplete){// Execute the callback and unset it to ensure it doesn't\n// accidentally get called twice\ntrans._currentFrame.onComplete();}var newFrame=trans._currentFrame=trans._frameQueue.shift();if(newFrame){// Since it's sometimes necessary to do deep digging into frame data,\n// we'll consider it not 100% impossible for nulls or numbers to sneak through,\n// so check when casting the name, just to be absolutely certain:\nvar stringName=newFrame.name?newFrame.name.toString():null;gd._fullLayout._currentFrame=stringName;trans._lastFrameAt=Date.now();trans._timeToNext=newFrame.frameOpts.duration;// This is simply called and it's left to .transition to decide how to manage\n// interrupting current transitions. That means we don't need to worry about\n// how it resolves or what happens after this:\nPlots.transition(gd,newFrame.frame.data,newFrame.frame.layout,helpers.coerceTraceIndices(gd,newFrame.frame.traces),newFrame.frameOpts,newFrame.transitionOpts).then(function(){if(newFrame.onComplete){newFrame.onComplete();}});gd.emit('plotly_animatingframe',{name:stringName,frame:newFrame.frame,animation:{frame:newFrame.frameOpts,transition:newFrame.transitionOpts}});}else{// If there are no more frames, then stop the RAF loop:\nstopAnimationLoop();}}function beginAnimationLoop(){gd.emit('plotly_animating');// If no timer is running, then set last frame = long ago so that the next\n// frame is immediately transitioned:\ntrans._lastFrameAt=-Infinity;trans._timeToNext=0;trans._runningTransitions=0;trans._currentFrame=null;var doFrame=function doFrame(){// This *must* be requested before nextFrame since nextFrame may decide\n// to cancel it if there's nothing more to animated:\ntrans._animationRaf=window.requestAnimationFrame(doFrame);// Check if we're ready for a new frame:\nif(Date.now()-trans._lastFrameAt>trans._timeToNext){nextFrame();}};doFrame();}// This is an animate-local counter that helps match up option input list\n// items with the particular frame.\nvar configCounter=0;function setTransitionConfig(frame){if(Array.isArray(transitionOpts)){if(configCounter>=transitionOpts.length){frame.transitionOpts=transitionOpts[configCounter];}else{frame.transitionOpts=transitionOpts[0];}}else{frame.transitionOpts=transitionOpts;}configCounter++;return frame;}// Disambiguate what's sort of frames have been received\nvar i,frame;var frameList=[];var allFrames=frameOrGroupNameOrFrameList===undefined||frameOrGroupNameOrFrameList===null;var isFrameArray=Array.isArray(frameOrGroupNameOrFrameList);var isSingleFrame=!allFrames&&!isFrameArray&&Lib.isPlainObject(frameOrGroupNameOrFrameList);if(isSingleFrame){// In this case, a simple object has been passed to animate.\nframeList.push({type:'object',data:setTransitionConfig(Lib.extendFlat({},frameOrGroupNameOrFrameList))});}else if(allFrames||['string','number'].indexOf(_typeof(frameOrGroupNameOrFrameList))!==-1){// In this case, null or undefined has been passed so that we want to\n// animate *all* currently defined frames\nfor(i=0;i<trans._frames.length;i++){frame=trans._frames[i];if(!frame)continue;if(allFrames||String(frame.group)===String(frameOrGroupNameOrFrameList)){frameList.push({type:'byname',name:String(frame.name),data:setTransitionConfig({name:frame.name})});}}}else if(isFrameArray){for(i=0;i<frameOrGroupNameOrFrameList.length;i++){var frameOrName=frameOrGroupNameOrFrameList[i];if(['number','string'].indexOf(_typeof(frameOrName))!==-1){frameOrName=String(frameOrName);// In this case, there's an array and this frame is a string name:\nframeList.push({type:'byname',name:frameOrName,data:setTransitionConfig({name:frameOrName})});}else if(Lib.isPlainObject(frameOrName)){frameList.push({type:'object',data:setTransitionConfig(Lib.extendFlat({},frameOrName))});}}}// Verify that all of these frames actually exist; return and reject if not:\nfor(i=0;i<frameList.length;i++){frame=frameList[i];if(frame.type==='byname'&&!trans._frameHash[frame.data.name]){Lib.warn('animate failure: frame not found: \"'+frame.data.name+'\"');reject();return;}}// If the mode is either next or immediate, then all currently queued frames must\n// be dumped and the corresponding .animate promises rejected.\nif(['next','immediate'].indexOf(animationOpts.mode)!==-1){discardExistingFrames();}if(animationOpts.direction==='reverse'){frameList.reverse();}var currentFrame=gd._fullLayout._currentFrame;if(currentFrame&&animationOpts.fromcurrent){var idx=-1;for(i=0;i<frameList.length;i++){frame=frameList[i];if(frame.type==='byname'&&frame.name===currentFrame){idx=i;break;}}if(idx>0&&idx<frameList.length-1){var filteredFrameList=[];for(i=0;i<frameList.length;i++){frame=frameList[i];if(frameList[i].type!=='byname'||i>idx){filteredFrameList.push(frame);}}frameList=filteredFrameList;}}if(frameList.length>0){queueFrames(frameList);}else{// This is the case where there were simply no frames. It's a little strange\n// since there's not much to do:\ngd.emit('plotly_animated');resolve();}});};/**\n * Register new frames\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n *\n * @param {array of objects} frameList\n *      list of frame definitions, in which each object includes any of:\n *      - name: {string} name of frame to add\n *      - data: {array of objects} trace data\n *      - layout {object} layout definition\n *      - traces {array} trace indices\n *      - baseframe {string} name of frame from which this frame gets defaults\n *\n *  @param {array of integers} indices\n *      an array of integer indices matching the respective frames in `frameList`. If not\n *      provided, an index will be provided in serial order. If already used, the frame\n *      will be overwritten.\n */exports.addFrames=function(gd,frameList,indices){gd=Lib.getGraphDiv(gd);if(frameList===null||frameList===undefined){return Promise.resolve();}if(!Lib.isPlotDiv(gd)){throw new Error('This element is not a Plotly plot: '+gd+'. It\\'s likely that you\\'ve failed '+'to create a plot before adding frames. For more details, see '+'https://plot.ly/javascript/animations/');}var i,frame,j,idx;var _frames=gd._transitionData._frames;var _frameHash=gd._transitionData._frameHash;if(!Array.isArray(frameList)){throw new Error('addFrames failure: frameList must be an Array of frame definitions'+frameList);}// Create a sorted list of insertions since we run into lots of problems if these\n// aren't in ascending order of index:\n//\n// Strictly for sorting. Make sure this is guaranteed to never collide with any\n// already-exisisting indices:\nvar bigIndex=_frames.length+frameList.length*2;var insertions=[];var _frameHashLocal={};for(i=frameList.length-1;i>=0;i--){if(!Lib.isPlainObject(frameList[i]))continue;// The entire logic for checking for this type of name collision can be removed once we migrate to ES6 and\n// use a Map instead of an Object instance, as Map keys aren't converted to strings.\nvar lookupName=frameList[i].name;var name=(_frameHash[lookupName]||_frameHashLocal[lookupName]||{}).name;var newName=frameList[i].name;var collisionPresent=_frameHash[name]||_frameHashLocal[name];if(name&&newName&&typeof newName==='number'&&collisionPresent&&numericNameWarningCount<numericNameWarningCountLimit){numericNameWarningCount++;Lib.warn('addFrames: overwriting frame \"'+(_frameHash[name]||_frameHashLocal[name]).name+'\" with a frame whose name of type \"number\" also equates to \"'+name+'\". This is valid but may potentially lead to unexpected '+'behavior since all plotly.js frame names are stored internally '+'as strings.');if(numericNameWarningCount===numericNameWarningCountLimit){Lib.warn('addFrames: This API call has yielded too many of these warnings. '+'For the rest of this call, further warnings about numeric frame '+'names will be suppressed.');}}_frameHashLocal[lookupName]={name:lookupName};insertions.push({frame:Plots.supplyFrameDefaults(frameList[i]),index:indices&&indices[i]!==undefined&&indices[i]!==null?indices[i]:bigIndex+i});}// Sort this, taking note that undefined insertions end up at the end:\ninsertions.sort(function(a,b){if(a.index>b.index)return-1;if(a.index<b.index)return 1;return 0;});var ops=[];var revops=[];var frameCount=_frames.length;for(i=insertions.length-1;i>=0;i--){frame=insertions[i].frame;if(typeof frame.name==='number'){Lib.warn('Warning: addFrames accepts frames with numeric names, but the numbers are'+'implicitly cast to strings');}if(!frame.name){// Repeatedly assign a default name, incrementing the counter each time until\n// we get a name that's not in the hashed lookup table:\nwhile(_frameHash[frame.name='frame '+gd._transitionData._counter++]){;}}if(_frameHash[frame.name]){// If frame is present, overwrite its definition:\nfor(j=0;j<_frames.length;j++){if((_frames[j]||{}).name===frame.name)break;}ops.push({type:'replace',index:j,value:frame});revops.unshift({type:'replace',index:j,value:_frames[j]});}else{// Otherwise insert it at the end of the list:\nidx=Math.max(0,Math.min(insertions[i].index,frameCount));ops.push({type:'insert',index:idx,value:frame});revops.unshift({type:'delete',index:idx});frameCount++;}}var undoFunc=Plots.modifyFrames;var redoFunc=Plots.modifyFrames;var undoArgs=[gd,revops];var redoArgs=[gd,ops];if(Queue)Queue.add(gd,undoFunc,undoArgs,redoFunc,redoArgs);return Plots.modifyFrames(gd,ops);};/**\n * Delete frame\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n *\n * @param {array of integers} frameList\n *      list of integer indices of frames to be deleted\n */exports.deleteFrames=function(gd,frameList){gd=Lib.getGraphDiv(gd);if(!Lib.isPlotDiv(gd)){throw new Error('This element is not a Plotly plot: '+gd);}var i,idx;var _frames=gd._transitionData._frames;var ops=[];var revops=[];if(!frameList){frameList=[];for(i=0;i<_frames.length;i++){frameList.push(i);}}frameList=frameList.slice(0);frameList.sort();for(i=frameList.length-1;i>=0;i--){idx=frameList[i];ops.push({type:'delete',index:idx});revops.unshift({type:'insert',index:idx,value:_frames[idx]});}var undoFunc=Plots.modifyFrames;var redoFunc=Plots.modifyFrames;var undoArgs=[gd,revops];var redoArgs=[gd,ops];if(Queue)Queue.add(gd,undoFunc,undoArgs,redoFunc,redoArgs);return Plots.modifyFrames(gd,ops);};/**\n * Purge a graph container div back to its initial pre-Plotly.plot state\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n */exports.purge=function purge(gd){gd=Lib.getGraphDiv(gd);var fullLayout=gd._fullLayout||{};var fullData=gd._fullData||[];// remove gl contexts\nPlots.cleanPlot([],{},fullData,fullLayout);// purge properties\nPlots.purge(gd);// purge event emitter methods\nEvents.purge(gd);// remove plot container\nif(fullLayout._container)fullLayout._container.remove();// in contrast to Plotly.Plots.purge which does NOT clear _context!\ndelete gd._context;return gd;};// -------------------------------------------------------\n// makePlotFramework: Create the plot container and axes\n// -------------------------------------------------------\nfunction makePlotFramework(gd){var gd3=d3.select(gd);var fullLayout=gd._fullLayout;// Plot container\nfullLayout._container=gd3.selectAll('.plot-container').data([0]);fullLayout._container.enter().insert('div',':first-child').classed('plot-container',true).classed('plotly',true);// Make the svg container\nfullLayout._paperdiv=fullLayout._container.selectAll('.svg-container').data([0]);fullLayout._paperdiv.enter().append('div').classed('svg-container',true).style('position','relative');// Make the graph containers\n// start fresh each time we get here, so we know the order comes out\n// right, rather than enter/exit which can muck up the order\n// TODO: sort out all the ordering so we don't have to\n// explicitly delete anything\n// FIXME: parcoords reuses this object, not the best pattern\nfullLayout._glcontainer=fullLayout._paperdiv.selectAll('.gl-container').data([{}]);fullLayout._glcontainer.enter().append('div').classed('gl-container',true);fullLayout._paperdiv.selectAll('.main-svg').remove();fullLayout._paper=fullLayout._paperdiv.insert('svg',':first-child').classed('main-svg',true);fullLayout._toppaper=fullLayout._paperdiv.append('svg').classed('main-svg',true);if(!fullLayout._uid){var otherUids={};d3.selectAll('defs').each(function(){if(this.id)otherUids[this.id.split('-')[1]]=1;});fullLayout._uid=Lib.randstr(otherUids);}fullLayout._paperdiv.selectAll('.main-svg').attr(xmlnsNamespaces.svgAttrs);fullLayout._defs=fullLayout._paper.append('defs').attr('id','defs-'+fullLayout._uid);fullLayout._clips=fullLayout._defs.append('g').classed('clips',true);fullLayout._topdefs=fullLayout._toppaper.append('defs').attr('id','topdefs-'+fullLayout._uid);fullLayout._topclips=fullLayout._topdefs.append('g').classed('clips',true);fullLayout._bgLayer=fullLayout._paper.append('g').classed('bglayer',true);fullLayout._draggers=fullLayout._paper.append('g').classed('draglayer',true);// lower shape/image layer - note that this is behind\n// all subplots data/grids but above the backgrounds\n// except inset subplots, whose backgrounds are drawn\n// inside their own group so that they appear above\n// the data for the main subplot\n// lower shapes and images which are fully referenced to\n// a subplot still get drawn within the subplot's group\n// so they will work correctly on insets\nvar layerBelow=fullLayout._paper.append('g').classed('layer-below',true);fullLayout._imageLowerLayer=layerBelow.append('g').classed('imagelayer',true);fullLayout._shapeLowerLayer=layerBelow.append('g').classed('shapelayer',true);// single cartesian layer for the whole plot\nfullLayout._cartesianlayer=fullLayout._paper.append('g').classed('cartesianlayer',true);// single polar layer for the whole plot\nfullLayout._polarlayer=fullLayout._paper.append('g').classed('polarlayer',true);// single ternary layer for the whole plot\nfullLayout._ternarylayer=fullLayout._paper.append('g').classed('ternarylayer',true);// single geo layer for the whole plot\nfullLayout._geolayer=fullLayout._paper.append('g').classed('geolayer',true);// single pie layer for the whole plot\nfullLayout._pielayer=fullLayout._paper.append('g').classed('pielayer',true);// fill in image server scrape-svg\nfullLayout._glimages=fullLayout._paper.append('g').classed('glimages',true);// lastly upper shapes, info (legend, annotations) and hover layers go on top\n// these are in a different svg element normally, but get collapsed into a single\n// svg when exporting (after inserting 3D)\n// upper shapes/images are only those drawn above the whole plot, including subplots\nvar layerAbove=fullLayout._toppaper.append('g').classed('layer-above',true);fullLayout._imageUpperLayer=layerAbove.append('g').classed('imagelayer',true);fullLayout._shapeUpperLayer=layerAbove.append('g').classed('shapelayer',true);fullLayout._infolayer=fullLayout._toppaper.append('g').classed('infolayer',true);fullLayout._menulayer=fullLayout._toppaper.append('g').classed('menulayer',true);fullLayout._zoomlayer=fullLayout._toppaper.append('g').classed('zoomlayer',true);fullLayout._hoverlayer=fullLayout._toppaper.append('g').classed('hoverlayer',true);gd.emit('plotly_framework');}},{\"../components/color\":299,\"../components/colorbar/connect\":301,\"../components/drawing\":320,\"../constants/xmlns_namespaces\":399,\"../lib\":423,\"../lib/events\":415,\"../lib/queue\":437,\"../lib/svg_text_utils\":446,\"../plots/cartesian/axes\":469,\"../plots/cartesian/constants\":475,\"../plots/cartesian/graph_interact\":479,\"../plots/plots\":513,\"../plots/polar/legacy\":516,\"../registry\":521,\"./edit_types\":452,\"./helpers\":453,\"./manage_arrays\":455,\"./plot_config\":457,\"./plot_schema\":458,\"./subroutines\":460,\"d3\":71,\"fast-isnumeric\":80,\"has-hover\":163}],457:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/**\n * This will be transferred over to gd and overridden by\n * config args to Plotly.plot.\n *\n * The defaults are the appropriate settings for plotly.js,\n * so we get the right experience without any config argument.\n */module.exports={// no interactivity, for export or image generation\nstaticPlot:false,// base URL for the 'Edit in Chart Studio' (aka sendDataToCloud) mode bar button\n// and the showLink/sendData on-graph link\nplotlyServerURL:'https://plot.ly',/*\n     * we can edit titles, move annotations, etc - sets all pieces of `edits`\n     * unless a separate `edits` config item overrides individual parts\n     */editable:false,edits:{/*\n         * annotationPosition: the main anchor of the annotation, which is the\n         * text (if no arrow) or the arrow (which drags the whole thing leaving\n         * the arrow length & direction unchanged)\n         */annotationPosition:false,// just for annotations with arrows, change the length  and direction of the arrow\nannotationTail:false,annotationText:false,axisTitleText:false,colorbarPosition:false,colorbarTitleText:false,legendPosition:false,// edit the trace name fields from the legend\nlegendText:false,shapePosition:false,// the global `layout.title`\ntitleText:false},/*\n     * DO autosize once regardless of layout.autosize\n     * (use default width or height values otherwise)\n     */autosizable:false,/*\n     * responsive: determines whether to change the layout size when window is resized.\n     * In v2, this option will be removed and will always be true.\n     */responsive:false,// set the length of the undo/redo queue\nqueueLength:0,// if we DO autosize, do we fill the container or the screen?\nfillFrame:false,// if we DO autosize, set the frame margins in percents of plot size\nframeMargins:0,// mousewheel or two-finger scroll zooms the plot\nscrollZoom:false,// double click interaction (false, 'reset', 'autosize' or 'reset+autosize')\ndoubleClick:'reset+autosize',// new users see some hints about interactivity\nshowTips:true,// enable axis pan/zoom drag handles\nshowAxisDragHandles:true,/*\n     * enable direct range entry at the pan/zoom drag points\n     * (drag handles must be enabled above)\n     */showAxisRangeEntryBoxes:true,/*\n     * Add a text link to open this plot in plotly?\n     * This link shows up in the bottom right corner of the plot, and works\n     * identically to the newer ModeBar button controlled by `showSendToCloud`\n     * unless `sendData: false` is used.\n     */showLink:false,/*\n     * If we show a text link (`showLink: true`), does it contain data or just\n     * a reference to a plotly cloud file? This option should only be used on\n     * plot.ly or another plotly server, and is not supported by the newer\n     * ModeBar button `showSendToCloud`.\n     */sendData:true,/*\n     * Should we include a ModeBar button, labeled \"Edit in Chart Studio\",\n     * that sends this chart to plot.ly or another plotly server as specified\n     * by `plotlyServerURL` for editing, export, etc? Prior to version 1.43.0\n     * this button was included by default, now it is opt-in using this flag.\n     *\n     * Note that this button can (depending on `plotlyServerURL`) send your data\n     * to an external server. However that server doesn't persist your data\n     * until you arrive at the Chart Studio and explicitly click \"Save\".\n     */showSendToCloud:false,// text appearing in the sendData link\nlinkText:'Edit chart',// false or function adding source(s) to linkText <text>\nshowSources:false,// display the mode bar (true, false, or 'hover')\ndisplayModeBar:'hover',/*\n     * remove mode bar button by name\n     * (see ../components/modebar/buttons.js for the list of names)\n     */modeBarButtonsToRemove:[],/*\n     * add mode bar button using config objects\n     * (see ./components/modebar/buttons.js for list of arguments)\n     */modeBarButtonsToAdd:[],/*\n     * fully custom mode bar buttons as nested array,\n     * where the outer arrays represents button groups, and\n     * the inner arrays have buttons config objects or names of default buttons\n     * (see ../components/modebar/buttons.js for more info)\n     */modeBarButtons:false,// statically override options for toImage modebar button\n// allowed keys are format, filename, width, height, scale\n// see ../components/modebar/buttons.js\ntoImageButtonOptions:{},// add the plotly logo on the end of the mode bar\ndisplaylogo:true,// watermark the images with the company's logo\nwatermark:false,// increase the pixel ratio for Gl plot images\nplotGlPixelRatio:2,/*\n     * background setting function\n     * 'transparent' sets the background `layout.paper_color`\n     * 'opaque' blends bg color with white ensuring an opaque background\n     * or any other custom function of gd\n     */setBackground:'transparent',// URL to topojson files used in geo charts\ntopojsonURL:'https://cdn.plot.ly/',/*\n     * Mapbox access token (required to plot mapbox trace types)\n     * If using an Mapbox Atlas server, set this option to '',\n     * so that plotly.js won't attempt to authenticate to the public Mapbox server.\n     */mapboxAccessToken:null,/*\n     * Turn all console logging on or off (errors will be thrown)\n     * This should ONLY be set via Plotly.setPlotConfig\n     * 0: no logs\n     * 1: warnings and errors, but not informational messages\n     * 2: verbose logs\n     */logging:1,/*\n     * Set global transform to be applied to all traces with no\n     * specification needed\n     */globalTransforms:[],/*\n     * Which localization should we use?\n     * Should be a string like 'en' or 'en-US'.\n     */locale:'en-US',/*\n     * Localization definitions\n     * Locales can be provided either here (specific to one chart) or globally\n     * by registering them as modules.\n     * Should be an object of objects {locale: {dictionary: {...}, format: {...}}}\n     * {\n     *     da: {\n     *         dictionary: {'Reset axes': 'Nulstil aksler', ...},\n     *         format: {months: [...], shortMonths: [...]}\n     *     },\n     *     ...\n     * }\n     * All parts are optional. When looking for translation or format fields, we\n     * look first for an exact match in a config locale, then in a registered\n     * module. If those fail, we strip off any regionalization ('en-US' -> 'en')\n     * and try each (config, registry) again. The final fallback for translation\n     * is untranslated (which is US English) and for formats is the base English\n     * (the only consequence being the last fallback date format %x is DD/MM/YYYY\n     * instead of MM/DD/YYYY). Currently `grouping` and `currency` are ignored\n     * for our automatic number formatting, but can be used in custom formats.\n     */locales:{}};},{}],458:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../registry');var Lib=_dereq_('../lib');var baseAttributes=_dereq_('../plots/attributes');var baseLayoutAttributes=_dereq_('../plots/layout_attributes');var frameAttributes=_dereq_('../plots/frame_attributes');var animationAttributes=_dereq_('../plots/animation_attributes');// polar attributes are not part of the Registry yet\nvar polarAreaAttrs=_dereq_('../plots/polar/legacy/area_attributes');var polarAxisAttrs=_dereq_('../plots/polar/legacy/axis_attributes');var editTypes=_dereq_('./edit_types');var extendFlat=Lib.extendFlat;var extendDeepAll=Lib.extendDeepAll;var isPlainObject=Lib.isPlainObject;var IS_SUBPLOT_OBJ='_isSubplotObj';var IS_LINKED_TO_ARRAY='_isLinkedToArray';var ARRAY_ATTR_REGEXPS='_arrayAttrRegexps';var DEPRECATED='_deprecated';var UNDERSCORE_ATTRS=[IS_SUBPLOT_OBJ,IS_LINKED_TO_ARRAY,ARRAY_ATTR_REGEXPS,DEPRECATED];exports.IS_SUBPLOT_OBJ=IS_SUBPLOT_OBJ;exports.IS_LINKED_TO_ARRAY=IS_LINKED_TO_ARRAY;exports.DEPRECATED=DEPRECATED;exports.UNDERSCORE_ATTRS=UNDERSCORE_ATTRS;/** Outputs the full plotly.js plot schema\n *\n * @return {object}\n *  - defs\n *  - traces\n *  - layout\n *  - transforms\n *  - frames\n *  - animations\n *  - config (coming soon ...)\n */exports.get=function(){var traces={};Registry.allTypes.concat('area').forEach(function(type){traces[type]=getTraceAttributes(type);});var transforms={};Object.keys(Registry.transformsRegistry).forEach(function(type){transforms[type]=getTransformAttributes(type);});return{defs:{valObjects:Lib.valObjectMeta,metaKeys:UNDERSCORE_ATTRS.concat(['description','role','editType','impliedEdits']),editType:{traces:editTypes.traces,layout:editTypes.layout},impliedEdits:{}},traces:traces,layout:getLayoutAttributes(),transforms:transforms,frames:getFramesAttributes(),animation:formatAttributes(animationAttributes)};};/**\n * Crawl the attribute tree, recursively calling a callback function\n *\n * @param {object} attrs\n *  The node of the attribute tree (e.g. the root) from which recursion originates\n * @param {Function} callback\n *  A callback function with the signature:\n *          @callback callback\n *          @param {object} attr an attribute\n *          @param {String} attrName name string\n *          @param {object[]} attrs all the attributes\n *          @param {Number} level the recursion level, 0 at the root\n *          @param {String} fullAttrString full attribute name (ie 'marker.line')\n * @param {Number} [specifiedLevel]\n *  The level in the tree, in order to let the callback function detect descend or backtrack,\n *  typically unsupplied (implied 0), just used by the self-recursive call.\n *  The necessity arises because the tree traversal is not controlled by callback return values.\n *  The decision to not use callback return values for controlling tree pruning arose from\n *  the goal of keeping the crawler backwards compatible. Observe that one of the pruning conditions\n *  precedes the callback call.\n * @param {string} [attrString]\n *  the path to the current attribute, as an attribute string (ie 'marker.line')\n *  typically unsupplied, but you may supply it if you want to disambiguate which attrs tree you\n *  are starting from\n *\n * @return {object} transformOut\n *  copy of transformIn that contains attribute defaults\n */exports.crawl=function(attrs,callback,specifiedLevel,attrString){var level=specifiedLevel||0;attrString=attrString||'';Object.keys(attrs).forEach(function(attrName){var attr=attrs[attrName];if(UNDERSCORE_ATTRS.indexOf(attrName)!==-1)return;var fullAttrString=(attrString?attrString+'.':'')+attrName;callback(attr,attrName,attrs,level,fullAttrString);if(exports.isValObject(attr))return;if(isPlainObject(attr)&&attrName!=='impliedEdits'){exports.crawl(attr,callback,level+1,fullAttrString);}});};/** Is object a value object (or a container object)?\n *\n * @param {object} obj\n * @return {boolean}\n *  returns true for a valid value object and\n *  false for tree nodes in the attribute hierarchy\n */exports.isValObject=function(obj){return obj&&obj.valType!==undefined;};/**\n * Find all data array attributes in a given trace object - including\n * `arrayOk` attributes.\n *\n * @param {object} trace\n *  full trace object that contains a reference to `_module.attributes`\n *\n * @return {array} arrayAttributes\n *  list of array attributes for the given trace\n */exports.findArrayAttributes=function(trace){var arrayAttributes=[];var stack=[];var isArrayStack=[];var baseContainer,baseAttrName;function callback(attr,attrName,attrs,level){stack=stack.slice(0,level).concat([attrName]);isArrayStack=isArrayStack.slice(0,level).concat([attr&&attr._isLinkedToArray]);var splittableAttr=attr&&(attr.valType==='data_array'||attr.arrayOk===true)&&!(stack[level-1]==='colorbar'&&(attrName==='ticktext'||attrName==='tickvals'));// Manually exclude 'colorbar.tickvals' and 'colorbar.ticktext' for now\n// which are declared as `valType: 'data_array'` but scale independently of\n// the coordinate arrays.\n//\n// Down the road, we might want to add a schema field (e.g `uncorrelatedArray: true`)\n// to distinguish attributes of the likes.\nif(!splittableAttr)return;crawlIntoTrace(baseContainer,0,'');}function crawlIntoTrace(container,i,astrPartial){var item=container[stack[i]];var newAstrPartial=astrPartial+stack[i];if(i===stack.length-1){if(Lib.isArrayOrTypedArray(item)){arrayAttributes.push(baseAttrName+newAstrPartial);}}else{if(isArrayStack[i]){if(Array.isArray(item)){for(var j=0;j<item.length;j++){if(Lib.isPlainObject(item[j])){crawlIntoTrace(item[j],i+1,newAstrPartial+'['+j+'].');}}}}else if(Lib.isPlainObject(item)){crawlIntoTrace(item,i+1,newAstrPartial+'.');}}}baseContainer=trace;baseAttrName='';exports.crawl(baseAttributes,callback);if(trace._module&&trace._module.attributes){exports.crawl(trace._module.attributes,callback);}var transforms=trace.transforms;if(transforms){for(var i=0;i<transforms.length;i++){var transform=transforms[i];var module=transform._module;if(module){baseAttrName='transforms['+i+'].';baseContainer=transform;exports.crawl(module.attributes,callback);}}}return arrayAttributes;};/*\n * Find the valObject for one attribute in an existing trace\n *\n * @param {object} trace\n *  full trace object that contains a reference to `_module.attributes`\n * @param {object} parts\n *  an array of parts, like ['transforms', 1, 'value']\n *  typically from nestedProperty(...).parts\n *\n * @return {object|false}\n *  the valObject for this attribute, or the last found parent\n *  in some cases the innermost valObject will not exist, for example\n *  `valType: 'any'` attributes where we might set a part of the attribute.\n *  In that case, stop at the deepest valObject we *do* find.\n */exports.getTraceValObject=function(trace,parts){var head=parts[0];var i=1;// index to start recursing from\nvar moduleAttrs,valObject;if(head==='transforms'){if(parts.length===1){return baseAttributes.transforms;}var transforms=trace.transforms;if(!Array.isArray(transforms)||!transforms.length)return false;var tNum=parts[1];if(!isIndex(tNum)||tNum>=transforms.length){return false;}moduleAttrs=(Registry.transformsRegistry[transforms[tNum].type]||{}).attributes;valObject=moduleAttrs&&moduleAttrs[parts[2]];i=3;// start recursing only inside the transform\n}else if(trace.type==='area'){valObject=polarAreaAttrs[head];}else{// first look in the module for this trace\n// components have already merged their trace attributes in here\nvar _module=trace._module;if(!_module)_module=(Registry.modules[trace.type||baseAttributes.type.dflt]||{})._module;if(!_module)return false;moduleAttrs=_module.attributes;valObject=moduleAttrs&&moduleAttrs[head];// then look in the subplot attributes\nif(!valObject){var subplotModule=_module.basePlotModule;if(subplotModule&&subplotModule.attributes){valObject=subplotModule.attributes[head];}}// finally look in the global attributes\nif(!valObject)valObject=baseAttributes[head];}return recurseIntoValObject(valObject,parts,i);};/*\n * Find the valObject for one layout attribute\n *\n * @param {array} parts\n *  an array of parts, like ['annotations', 1, 'x']\n *  typically from nestedProperty(...).parts\n *\n * @return {object|false}\n *  the valObject for this attribute, or the last found parent\n *  in some cases the innermost valObject will not exist, for example\n *  `valType: 'any'` attributes where we might set a part of the attribute.\n *  In that case, stop at the deepest valObject we *do* find.\n */exports.getLayoutValObject=function(fullLayout,parts){var valObject=layoutHeadAttr(fullLayout,parts[0]);return recurseIntoValObject(valObject,parts,1);};function layoutHeadAttr(fullLayout,head){var i,key,_module,attributes;// look for attributes of the subplot types used on the plot\nvar basePlotModules=fullLayout._basePlotModules;if(basePlotModules){var out;for(i=0;i<basePlotModules.length;i++){_module=basePlotModules[i];if(_module.attrRegex&&_module.attrRegex.test(head)){// if a module defines overrides, these take precedence\n// initially this is to allow gl2d different editTypes from svg cartesian\nif(_module.layoutAttrOverrides)return _module.layoutAttrOverrides;// otherwise take the first attributes we find\nif(!out&&_module.layoutAttributes)out=_module.layoutAttributes;}// a module can also override the behavior of base (and component) module layout attrs\n// again see gl2d for initial use case\nvar baseOverrides=_module.baseLayoutAttrOverrides;if(baseOverrides&&head in baseOverrides)return baseOverrides[head];}if(out)return out;}// look for layout attributes contributed by traces on the plot\nvar modules=fullLayout._modules;if(modules){for(i=0;i<modules.length;i++){attributes=modules[i].layoutAttributes;if(attributes&&head in attributes){return attributes[head];}}}/*\n     * Next look in components.\n     * Components that define a schema have already merged this into\n     * base and subplot attribute defs, so ignore these.\n     * Others (older style) all put all their attributes\n     * inside a container matching the module `name`\n     * eg `attributes` (array) or `legend` (object)\n     */for(key in Registry.componentsRegistry){_module=Registry.componentsRegistry[key];if(!_module.schema&&head===_module.name){return _module.layoutAttributes;}}if(head in baseLayoutAttributes)return baseLayoutAttributes[head];// Polar doesn't populate _modules or _basePlotModules\n// just fall back on these when the others fail\nif(head==='radialaxis'||head==='angularaxis'){return polarAxisAttrs[head];}return polarAxisAttrs.layout[head]||false;}function recurseIntoValObject(valObject,parts,i){if(!valObject)return false;if(valObject._isLinkedToArray){// skip array index, abort if we try to dive into an array without an index\nif(isIndex(parts[i]))i++;else if(i<parts.length)return false;}// now recurse as far as we can. Occasionally we have an attribute\n// setting an internal part below what's in the schema; just return\n// the innermost schema item we find.\nfor(;i<parts.length;i++){var newValObject=valObject[parts[i]];if(isPlainObject(newValObject))valObject=newValObject;else break;if(i===parts.length-1)break;if(valObject._isLinkedToArray){i++;if(!isIndex(parts[i]))return false;}else if(valObject.valType==='info_array'){i++;var index=parts[i];if(!isIndex(index))return false;var items=valObject.items;if(Array.isArray(items)){if(index>=items.length)return false;if(valObject.dimensions===2){i++;if(parts.length===i)return valObject;var index2=parts[i];if(!isIndex(index2))return false;valObject=items[index][index2];}else valObject=items[index];}else{valObject=items;}}}return valObject;}// note: this is different from Lib.isIndex, this one doesn't accept numeric\n// strings, only actual numbers.\nfunction isIndex(val){return val===Math.round(val)&&val>=0;}function getTraceAttributes(type){var _module,basePlotModule;if(type==='area'){_module={attributes:polarAreaAttrs};basePlotModule={};}else{_module=Registry.modules[type]._module,basePlotModule=_module.basePlotModule;}var attributes={};// make 'type' the first attribute in the object\nattributes.type=null;var copyBaseAttributes=extendDeepAll({},baseAttributes);var copyModuleAttributes=extendDeepAll({},_module.attributes);// prune global-level trace attributes that are already defined in a trace\nexports.crawl(copyModuleAttributes,function(attr,attrName,attrs,level,fullAttrString){Lib.nestedProperty(copyBaseAttributes,fullAttrString).set(undefined);// Prune undefined attributes\nif(attr===undefined)Lib.nestedProperty(copyModuleAttributes,fullAttrString).set(undefined);});// base attributes (same for all trace types)\nextendDeepAll(attributes,copyBaseAttributes);// module attributes\nextendDeepAll(attributes,copyModuleAttributes);// subplot attributes\nif(basePlotModule.attributes){extendDeepAll(attributes,basePlotModule.attributes);}// 'type' gets overwritten by baseAttributes; reset it here\nattributes.type=type;var out={meta:_module.meta||{},attributes:formatAttributes(attributes)};// trace-specific layout attributes\nif(_module.layoutAttributes){var layoutAttributes={};extendDeepAll(layoutAttributes,_module.layoutAttributes);out.layoutAttributes=formatAttributes(layoutAttributes);}return out;}function getLayoutAttributes(){var layoutAttributes={};var key,_module;// global layout attributes\nextendDeepAll(layoutAttributes,baseLayoutAttributes);// add base plot module layout attributes\nfor(key in Registry.subplotsRegistry){_module=Registry.subplotsRegistry[key];if(!_module.layoutAttributes)continue;if(Array.isArray(_module.attr)){for(var i=0;i<_module.attr.length;i++){handleBasePlotModule(layoutAttributes,_module,_module.attr[i]);}}else{var astr=_module.attr==='subplot'?_module.name:_module.attr;handleBasePlotModule(layoutAttributes,_module,astr);}}// polar layout attributes\nlayoutAttributes=assignPolarLayoutAttrs(layoutAttributes);// add registered components layout attributes\nfor(key in Registry.componentsRegistry){_module=Registry.componentsRegistry[key];var schema=_module.schema;/*\n         * Components with defined schema have already been merged in at register time\n         * but a few components define attributes that apply only to xaxis\n         * not yaxis (rangeselector, rangeslider) - delete from y schema.\n         * Note that the input attributes for xaxis/yaxis are the same object\n         * so it's not possible to only add them to xaxis from the start.\n         * If we ever have such asymmetry the other way, or anywhere else,\n         * we will need to extend both this code and mergeComponentAttrsToSubplot\n         * (which will not find yaxis only for example)\n         */if(schema&&(schema.subplots||schema.layout)){var subplots=schema.subplots;if(subplots&&subplots.xaxis&&!subplots.yaxis){for(var xkey in subplots.xaxis){delete layoutAttributes.yaxis[xkey];}}}// older style without schema need to be explicitly merged in now\nelse if(_module.layoutAttributes){insertAttrs(layoutAttributes,_module.layoutAttributes,_module.name);}}return{layoutAttributes:formatAttributes(layoutAttributes)};}function getTransformAttributes(type){var _module=Registry.transformsRegistry[type];var attributes=extendDeepAll({},_module.attributes);// add registered components transform attributes\nObject.keys(Registry.componentsRegistry).forEach(function(k){var _module=Registry.componentsRegistry[k];if(_module.schema&&_module.schema.transforms&&_module.schema.transforms[type]){Object.keys(_module.schema.transforms[type]).forEach(function(v){insertAttrs(attributes,_module.schema.transforms[type][v],v);});}});return{attributes:formatAttributes(attributes)};}function getFramesAttributes(){var attrs={frames:Lib.extendDeepAll({},frameAttributes)};formatAttributes(attrs);return attrs.frames;}function formatAttributes(attrs){mergeValTypeAndRole(attrs);formatArrayContainers(attrs);stringify(attrs);return attrs;}function mergeValTypeAndRole(attrs){function makeSrcAttr(attrName){return{valType:'string',editType:'none'};}function callback(attr,attrName,attrs){if(exports.isValObject(attr)){if(attr.valType==='data_array'){// all 'data_array' attrs have role 'data'\nattr.role='data';// all 'data_array' attrs have a corresponding 'src' attr\nattrs[attrName+'src']=makeSrcAttr(attrName);}else if(attr.arrayOk===true){// all 'arrayOk' attrs have a corresponding 'src' attr\nattrs[attrName+'src']=makeSrcAttr(attrName);}}else if(isPlainObject(attr)){// all attrs container objects get role 'object'\nattr.role='object';}}exports.crawl(attrs,callback);}function formatArrayContainers(attrs){function callback(attr,attrName,attrs){if(!attr)return;var itemName=attr[IS_LINKED_TO_ARRAY];if(!itemName)return;delete attr[IS_LINKED_TO_ARRAY];attrs[attrName]={items:{}};attrs[attrName].items[itemName]=attr;attrs[attrName].role='object';}exports.crawl(attrs,callback);}// this can take around 10ms and should only be run from PlotSchema.get(),\n// to ensure JSON.stringify(PlotSchema.get()) gives the intended result.\nfunction stringify(attrs){function walk(attr){for(var k in attr){if(isPlainObject(attr[k])){walk(attr[k]);}else if(Array.isArray(attr[k])){for(var i=0;i<attr[k].length;i++){walk(attr[k][i]);}}else{// as JSON.stringify(/test/) // => {}\nif(attr[k]instanceof RegExp){attr[k]=attr[k].toString();}}}}walk(attrs);}function assignPolarLayoutAttrs(layoutAttributes){extendFlat(layoutAttributes,{radialaxis:polarAxisAttrs.radialaxis,angularaxis:polarAxisAttrs.angularaxis});extendFlat(layoutAttributes,polarAxisAttrs.layout);return layoutAttributes;}function handleBasePlotModule(layoutAttributes,_module,astr){var np=Lib.nestedProperty(layoutAttributes,astr);var attrs=extendDeepAll({},_module.layoutAttributes);attrs[IS_SUBPLOT_OBJ]=true;np.set(attrs);}function insertAttrs(baseAttrs,newAttrs,astr){var np=Lib.nestedProperty(baseAttrs,astr);np.set(extendDeepAll(np.get()||{},newAttrs));}},{\"../lib\":423,\"../plots/animation_attributes\":464,\"../plots/attributes\":466,\"../plots/frame_attributes\":497,\"../plots/layout_attributes\":511,\"../plots/polar/legacy/area_attributes\":514,\"../plots/polar/legacy/axis_attributes\":515,\"../registry\":521,\"./edit_types\":452}],459:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../lib');var plotAttributes=_dereq_('../plots/attributes');var TEMPLATEITEMNAME='templateitemname';var templateAttrs={name:{valType:'string',editType:'none'}};templateAttrs[TEMPLATEITEMNAME]={valType:'string',editType:'calc'};/**\n * templatedArray: decorate an attributes object with templating (and array)\n * properties.\n *\n * @param {string} name: the singular form of the array name. Sets\n *     `_isLinkedToArray` to this, so the schema knows to treat this as an array.\n * @param {object} attrs: the item attributes. Since all callers are expected\n *     to be constructing this object on the spot, we mutate it here for\n *     performance, rather than extending a new object with it.\n *\n * @returns {object}: the decorated `attrs` object\n */exports.templatedArray=function(name,attrs){attrs._isLinkedToArray=name;attrs.name=templateAttrs.name;attrs[TEMPLATEITEMNAME]=templateAttrs[TEMPLATEITEMNAME];return attrs;};/**\n * traceTemplater: logic for matching traces to trace templates\n *\n * @param {object} dataTemplate: collection of {traceType: [{template}, ...]}\n *     ie each type the template applies to contains a list of template objects,\n *     to be provided cyclically to data traces of that type.\n *\n * @returns {object}: {newTrace}, a function:\n *     newTrace(traceIn): that takes the input traceIn, coerces its type, then\n *         uses that type to find the next template to apply. returns the output\n *         traceOut with template attached, ready to continue supplyDefaults.\n */exports.traceTemplater=function(dataTemplate){var traceCounts={};var traceType,typeTemplates;for(traceType in dataTemplate){typeTemplates=dataTemplate[traceType];if(Array.isArray(typeTemplates)&&typeTemplates.length){traceCounts[traceType]=0;}}function newTrace(traceIn){traceType=Lib.coerce(traceIn,{},plotAttributes,'type');var traceOut={type:traceType,_template:null};if(traceType in traceCounts){typeTemplates=dataTemplate[traceType];// cycle through traces in the template set for this type\nvar typei=traceCounts[traceType]%typeTemplates.length;traceCounts[traceType]++;traceOut._template=typeTemplates[typei];}else{// TODO: anything we should do for types missing from the template?\n// try to apply some other type? Or just bail as we do here?\n// Actually I think yes, we should apply other types; would be nice\n// if all scatter* could inherit from each other, and if histogram\n// could inherit from bar, etc... but how to specify this? And do we\n// compose them, or if a type is present require it to be complete?\n// Actually this could apply to layout too - 3D annotations\n// inheriting from 2D, axes of different types inheriting from each\n// other...\n}return traceOut;}return{newTrace:newTrace// TODO: function to figure out what's left & what didn't work\n};};/**\n * newContainer: Create a new sub-container inside `container` and propagate any\n * applicable template to it. If there's no template, still propagates\n * `undefined` so relinkPrivate will not retain an old template!\n *\n * @param {object} container: the outer container, should already have _template\n *     if there *is* a template for this plot\n * @param {string} name: the key of the new container to make\n * @param {string} baseName: if applicable, a base attribute to take the\n *     template from, ie for xaxis3 the base would be xaxis\n *\n * @returns {object}: an object for inclusion _full*, empty except for the\n *     appropriate template piece\n */exports.newContainer=function(container,name,baseName){var template=container._template;var part=template&&(template[name]||baseName&&template[baseName]);if(!Lib.isPlainObject(part))part=null;var out=container[name]={_template:part};return out;};/**\n * arrayTemplater: special logic for templating both defaults and specific items\n * in a container array (annotations etc)\n *\n * @param {object} container: the outer container, should already have _template\n *     if there *is* a template for this plot\n * @param {string} name: the name of the array to template (ie 'annotations')\n *     will be used to find default ('annotationdefaults' object) and specific\n *     ('annotations' array) template specs.\n * @param {string} inclusionAttr: the attribute determining this item's\n *     inclusion in the output, usually 'visible' or 'enabled'\n *\n * @returns {object}: {newItem, defaultItems}, both functions:\n *     newItem(itemIn): create an output item, bare except for the correct\n *         template and name(s), as the base for supplyDefaults\n *     defaultItems(): to be called after all newItem calls, return any\n *         specific template items that have not already beeen included,\n *         also as bare output items ready for supplyDefaults.\n */exports.arrayTemplater=function(container,name,inclusionAttr){var template=container._template;var defaultsTemplate=template&&template[arrayDefaultKey(name)];var templateItems=template&&template[name];if(!Array.isArray(templateItems)||!templateItems.length){templateItems=[];}var usedNames={};function newItem(itemIn){// include name and templateitemname in the output object for ALL\n// container array items. Note: you could potentially use different\n// name and templateitemname, if you're using one template to make\n// another template. templateitemname would be the name in the original\n// template, and name is the new \"subclassed\" item name.\nvar out={name:itemIn.name,_input:itemIn};var templateItemName=out[TEMPLATEITEMNAME]=itemIn[TEMPLATEITEMNAME];// no itemname: use the default template\nif(!validItemName(templateItemName)){out._template=defaultsTemplate;return out;}// look for an item matching this itemname\n// note these do not inherit from the default template, only the item.\nfor(var i=0;i<templateItems.length;i++){var templateItem=templateItems[i];if(templateItem.name===templateItemName){// Note: it's OK to use a template item more than once\n// but using it at least once will stop it from generating\n// a default item at the end.\nusedNames[templateItemName]=1;out._template=templateItem;return out;}}// Didn't find a matching template item, so since this item is intended\n// to only be modifications it's most likely broken. Hide it unless\n// it's explicitly marked visible - in which case it gets NO template,\n// not even the default.\nout[inclusionAttr]=itemIn[inclusionAttr]||false;// special falsy value we can look for in validateTemplate\nout._template=false;return out;}function defaultItems(){var out=[];for(var i=0;i<templateItems.length;i++){var templateItem=templateItems[i];var name=templateItem.name;// only allow named items to be added as defaults,\n// and only allow each name once\nif(validItemName(name)&&!usedNames[name]){var outi={_template:templateItem,name:name,_input:{_templateitemname:name}};outi[TEMPLATEITEMNAME]=templateItem[TEMPLATEITEMNAME];out.push(outi);usedNames[name]=1;}}return out;}return{newItem:newItem,defaultItems:defaultItems};};function validItemName(name){return name&&typeof name==='string';}function arrayDefaultKey(name){var lastChar=name.length-1;if(name.charAt(lastChar)!=='s'){Lib.warn('bad argument to arrayDefaultKey: '+name);}return name.substr(0,name.length-1)+'defaults';}exports.arrayDefaultKey=arrayDefaultKey;/**\n * arrayEditor: helper for editing array items that may have come from\n *     template defaults (in which case they will not exist in the input yet)\n *\n * @param {object} parentIn: the input container (eg gd.layout)\n * @param {string} containerStr: the attribute string for the container inside\n *     `parentIn`.\n * @param {object} itemOut: the _full* item (eg gd._fullLayout.annotations[0])\n *     that we'll be editing. Assumed to have been created by `arrayTemplater`.\n *\n * @returns {object}: {modifyBase, modifyItem, getUpdateObj, applyUpdate}, all functions:\n *     modifyBase(attr, value): Add an update that's *not* related to the item.\n *         `attr` is the full attribute string.\n *     modifyItem(attr, value): Add an update to the item. `attr` is just the\n *         portion of the attribute string inside the item.\n *     getUpdateObj(): Get the final constructed update object, to use in\n *         `restyle` or `relayout`. Also resets the update object in case this\n *         update was canceled.\n *     applyUpdate(attr, value): optionally add an update `attr: value`,\n *         then apply it to `parent` which should be the parent of `containerIn`,\n *         ie the object to which `containerStr` is the attribute string.\n */exports.arrayEditor=function(parentIn,containerStr,itemOut){var lengthIn=(Lib.nestedProperty(parentIn,containerStr).get()||[]).length;var index=itemOut._index;// Check that we are indeed off the end of this container.\n// Otherwise a devious user could put a key `_templateitemname` in their\n// own input and break lots of things.\nvar templateItemName=index>=lengthIn&&(itemOut._input||{})._templateitemname;if(templateItemName)index=lengthIn;var itemStr=containerStr+'['+index+']';var update;function resetUpdate(){update={};if(templateItemName){update[itemStr]={};update[itemStr][TEMPLATEITEMNAME]=templateItemName;}}resetUpdate();function modifyBase(attr,value){update[attr]=value;}function modifyItem(attr,value){if(templateItemName){// we're making a new object: edit that object\nLib.nestedProperty(update[itemStr],attr).set(value);}else{// we're editing an existing object: include *just* the edit\nupdate[itemStr+'.'+attr]=value;}}function getUpdateObj(){var updateOut=update;resetUpdate();return updateOut;}function applyUpdate(attr,value){if(attr)modifyItem(attr,value);var updateToApply=getUpdateObj();for(var key in updateToApply){Lib.nestedProperty(parentIn,key).set(updateToApply[key]);}}return{modifyBase:modifyBase,modifyItem:modifyItem,getUpdateObj:getUpdateObj,applyUpdate:applyUpdate};};},{\"../lib\":423,\"../plots/attributes\":466}],460:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Registry=_dereq_('../registry');var Plots=_dereq_('../plots/plots');var Lib=_dereq_('../lib');var clearGlCanvases=_dereq_('../lib/clear_gl_canvases');var Color=_dereq_('../components/color');var Drawing=_dereq_('../components/drawing');var Titles=_dereq_('../components/titles');var ModeBar=_dereq_('../components/modebar');var Axes=_dereq_('../plots/cartesian/axes');var alignmentConstants=_dereq_('../constants/alignment');var axisConstraints=_dereq_('../plots/cartesian/constraints');var enforceAxisConstraints=axisConstraints.enforce;var cleanAxisConstraints=axisConstraints.clean;var doAutoRange=_dereq_('../plots/cartesian/autorange').doAutoRange;var SVG_TEXT_ANCHOR_START='start';var SVG_TEXT_ANCHOR_MIDDLE='middle';var SVG_TEXT_ANCHOR_END='end';exports.layoutStyles=function(gd){return Lib.syncOrAsync([Plots.doAutoMargin,lsInner],gd);};function overlappingDomain(xDomain,yDomain,domains){for(var i=0;i<domains.length;i++){var existingX=domains[i][0];var existingY=domains[i][1];if(existingX[0]>=xDomain[1]||existingX[1]<=xDomain[0]){continue;}if(existingY[0]<yDomain[1]&&existingY[1]>yDomain[0]){return true;}}return false;}function lsInner(gd){var fullLayout=gd._fullLayout;var gs=fullLayout._size;var pad=gs.p;var axList=Axes.list(gd,'',true);var i,subplot,plotinfo,ax,xa,ya;fullLayout._paperdiv.style({width:gd._context.responsive&&fullLayout.autosize&&!gd._context._hasZeroWidth&&!gd.layout.width?'100%':fullLayout.width+'px',height:gd._context.responsive&&fullLayout.autosize&&!gd._context._hasZeroHeight&&!gd.layout.height?'100%':fullLayout.height+'px'}).selectAll('.main-svg').call(Drawing.setSize,fullLayout.width,fullLayout.height);gd._context.setBackground(gd,fullLayout.paper_bgcolor);exports.drawMainTitle(gd);ModeBar.manage(gd);// _has('cartesian') means SVG specifically, not GL2D - but GL2D\n// can still get here because it makes some of the SVG structure\n// for shared features like selections.\nif(!fullLayout._has('cartesian')){return gd._promises.length&&Promise.all(gd._promises);}function getLinePosition(ax,counterAx,side){var lwHalf=ax._lw/2;if(ax._id.charAt(0)==='x'){if(!counterAx)return gs.t+gs.h*(1-(ax.position||0))+lwHalf%1;else if(side==='top')return counterAx._offset-pad-lwHalf;return counterAx._offset+counterAx._length+pad+lwHalf;}if(!counterAx)return gs.l+gs.w*(ax.position||0)+lwHalf%1;else if(side==='right')return counterAx._offset+counterAx._length+pad+lwHalf;return counterAx._offset-pad-lwHalf;}// some preparation of axis position info\nfor(i=0;i<axList.length;i++){ax=axList[i];var counterAx=ax._anchorAxis;// clear axis line positions, to be set in the subplot loop below\nax._linepositions={};// stash crispRounded linewidth so we don't need to pass gd all over the place\nax._lw=Drawing.crispRound(gd,ax.linewidth,1);// figure out the main axis line and main mirror line position.\n// it's easier to follow the logic if we handle these separately from\n// ax._linepositions, which are only used by mirror=allticks\n// for non-main-subplot ticks, and mirror=all(ticks)? for zero line\n// hiding logic\nax._mainLinePosition=getLinePosition(ax,counterAx,ax.side);ax._mainMirrorPosition=ax.mirror&&counterAx?getLinePosition(ax,counterAx,alignmentConstants.OPPOSITE_SIDE[ax.side]):null;}// figure out which backgrounds we need to draw,\n// and in which layers to put them\nvar lowerBackgroundIDs=[];var backgroundIds=[];var lowerDomains=[];// no need to draw background when paper and plot color are the same color,\n// activate mode just for large splom (which benefit the most from this\n// optimization), but this could apply to all cartesian subplots.\nvar noNeedForBg=Color.opacity(fullLayout.paper_bgcolor)===1&&Color.opacity(fullLayout.plot_bgcolor)===1&&fullLayout.paper_bgcolor===fullLayout.plot_bgcolor;for(subplot in fullLayout._plots){plotinfo=fullLayout._plots[subplot];if(plotinfo.mainplot){// mainplot is a reference to the main plot this one is overlaid on\n// so if it exists, this is an overlaid plot and we don't need to\n// give it its own background\nif(plotinfo.bg){plotinfo.bg.remove();}plotinfo.bg=undefined;}else{var xDomain=plotinfo.xaxis.domain;var yDomain=plotinfo.yaxis.domain;var plotgroup=plotinfo.plotgroup;if(overlappingDomain(xDomain,yDomain,lowerDomains)){var pgNode=plotgroup.node();var plotgroupBg=plotinfo.bg=Lib.ensureSingle(plotgroup,'rect','bg');pgNode.insertBefore(plotgroupBg.node(),pgNode.childNodes[0]);backgroundIds.push(subplot);}else{plotgroup.select('rect.bg').remove();lowerDomains.push([xDomain,yDomain]);if(!noNeedForBg){lowerBackgroundIDs.push(subplot);backgroundIds.push(subplot);}}}}// now create all the lower-layer backgrounds at once now that\n// we have the list of subplots that need them\nvar lowerBackgrounds=fullLayout._bgLayer.selectAll('.bg').data(lowerBackgroundIDs);lowerBackgrounds.enter().append('rect').classed('bg',true);lowerBackgrounds.exit().remove();lowerBackgrounds.each(function(subplot){fullLayout._plots[subplot].bg=d3.select(this);});// style all backgrounds\nfor(i=0;i<backgroundIds.length;i++){plotinfo=fullLayout._plots[backgroundIds[i]];xa=plotinfo.xaxis;ya=plotinfo.yaxis;if(plotinfo.bg){plotinfo.bg.call(Drawing.setRect,xa._offset-pad,ya._offset-pad,xa._length+2*pad,ya._length+2*pad).call(Color.fill,fullLayout.plot_bgcolor).style('stroke-width',0);}}if(!fullLayout._hasOnlyLargeSploms){for(subplot in fullLayout._plots){plotinfo=fullLayout._plots[subplot];xa=plotinfo.xaxis;ya=plotinfo.yaxis;// Clip so that data only shows up on the plot area.\nvar clipId=plotinfo.clipId='clip'+fullLayout._uid+subplot+'plot';var plotClip=Lib.ensureSingleById(fullLayout._clips,'clipPath',clipId,function(s){s.classed('plotclip',true).append('rect');});plotinfo.clipRect=plotClip.select('rect').attr({width:xa._length,height:ya._length});Drawing.setTranslate(plotinfo.plot,xa._offset,ya._offset);var plotClipId;var layerClipId;if(plotinfo._hasClipOnAxisFalse){plotClipId=null;layerClipId=clipId;}else{plotClipId=clipId;layerClipId=null;}Drawing.setClipUrl(plotinfo.plot,plotClipId,gd);// stash layer clipId value (null or same as clipId)\n// to DRY up Drawing.setClipUrl calls on trace-module and trace layers\n// downstream\nplotinfo.layerClipId=layerClipId;}}var xLinesXLeft,xLinesXRight,xLinesYBottom,xLinesYTop,leftYLineWidth,rightYLineWidth;var yLinesYBottom,yLinesYTop,yLinesXLeft,yLinesXRight,connectYBottom,connectYTop;var extraSubplot;function xLinePath(y){return'M'+xLinesXLeft+','+y+'H'+xLinesXRight;}function xLinePathFree(y){return'M'+xa._offset+','+y+'h'+xa._length;}function yLinePath(x){return'M'+x+','+yLinesYTop+'V'+yLinesYBottom;}function yLinePathFree(x){return'M'+x+','+ya._offset+'v'+ya._length;}function mainPath(ax,pathFn,pathFnFree){if(!ax.showline||subplot!==ax._mainSubplot)return'';if(!ax._anchorAxis)return pathFnFree(ax._mainLinePosition);var out=pathFn(ax._mainLinePosition);if(ax.mirror)out+=pathFn(ax._mainMirrorPosition);return out;}for(subplot in fullLayout._plots){plotinfo=fullLayout._plots[subplot];xa=plotinfo.xaxis;ya=plotinfo.yaxis;/*\n         * x lines get longer where they meet y lines, to make a crisp corner.\n         * The x lines get the padding (margin.pad) plus the y line width to\n         * fill up the corner nicely. Free x lines are excluded - they always\n         * span exactly the data area of the plot\n         *\n         *  | XXXXX\n         *  | XXXXX\n         *  |\n         *  +------\n         *     x1\n         *    -----\n         *     x2\n         */var xPath='M0,0';if(shouldShowLinesOrTicks(xa,subplot)){leftYLineWidth=findCounterAxisLineWidth(xa,'left',ya,axList);xLinesXLeft=xa._offset-(leftYLineWidth?pad+leftYLineWidth:0);rightYLineWidth=findCounterAxisLineWidth(xa,'right',ya,axList);xLinesXRight=xa._offset+xa._length+(rightYLineWidth?pad+rightYLineWidth:0);xLinesYBottom=getLinePosition(xa,ya,'bottom');xLinesYTop=getLinePosition(xa,ya,'top');// save axis line positions for extra ticks to reference\n// each subplot that gets ticks from \"allticks\" gets an entry:\n//    [left or bottom, right or top]\nextraSubplot=!xa._anchorAxis||subplot!==xa._mainSubplot;if(extraSubplot&&(xa.mirror==='allticks'||xa.mirror==='all')){xa._linepositions[subplot]=[xLinesYBottom,xLinesYTop];}xPath=mainPath(xa,xLinePath,xLinePathFree);if(extraSubplot&&xa.showline&&(xa.mirror==='all'||xa.mirror==='allticks')){xPath+=xLinePath(xLinesYBottom)+xLinePath(xLinesYTop);}plotinfo.xlines.style('stroke-width',xa._lw+'px').call(Color.stroke,xa.showline?xa.linecolor:'rgba(0,0,0,0)');}plotinfo.xlines.attr('d',xPath);/*\n         * y lines that meet x axes get longer only by margin.pad, because\n         * the x axes fill in the corner space. Free y axes, like free x axes,\n         * always span exactly the data area of the plot\n         *\n         *   |   | XXXX\n         * y2| y1| XXXX\n         *   |   | XXXX\n         *       |\n         *       +-----\n         */var yPath='M0,0';if(shouldShowLinesOrTicks(ya,subplot)){connectYBottom=findCounterAxisLineWidth(ya,'bottom',xa,axList);yLinesYBottom=ya._offset+ya._length+(connectYBottom?pad:0);connectYTop=findCounterAxisLineWidth(ya,'top',xa,axList);yLinesYTop=ya._offset-(connectYTop?pad:0);yLinesXLeft=getLinePosition(ya,xa,'left');yLinesXRight=getLinePosition(ya,xa,'right');extraSubplot=!ya._anchorAxis||subplot!==ya._mainSubplot;if(extraSubplot&&(ya.mirror==='allticks'||ya.mirror==='all')){ya._linepositions[subplot]=[yLinesXLeft,yLinesXRight];}yPath=mainPath(ya,yLinePath,yLinePathFree);if(extraSubplot&&ya.showline&&(ya.mirror==='all'||ya.mirror==='allticks')){yPath+=yLinePath(yLinesXLeft)+yLinePath(yLinesXRight);}plotinfo.ylines.style('stroke-width',ya._lw+'px').call(Color.stroke,ya.showline?ya.linecolor:'rgba(0,0,0,0)');}plotinfo.ylines.attr('d',yPath);}Axes.makeClipPaths(gd);return gd._promises.length&&Promise.all(gd._promises);}function shouldShowLinesOrTicks(ax,subplot){return(ax.ticks||ax.showline)&&(subplot===ax._mainSubplot||ax.mirror==='all'||ax.mirror==='allticks');}/*\n * should we draw a line on counterAx at this side of ax?\n * It's assumed that counterAx is known to overlay the subplot we're working on\n * but it may not be its main axis.\n */function shouldShowLineThisSide(ax,side,counterAx){// does counterAx get a line at all?\nif(!counterAx.showline||!counterAx._lw)return false;// are we drawing *all* lines for counterAx?\nif(counterAx.mirror==='all'||counterAx.mirror==='allticks')return true;var anchorAx=counterAx._anchorAxis;// is this a free axis? free axes can only have a subplot side-line with all(ticks)? mirroring\nif(!anchorAx)return false;// in order to handle cases where the user forgot to anchor this axis correctly\n// (because its default anchor has the same domain on the relevant end)\n// check whether the relevant position is the same.\nvar sideIndex=alignmentConstants.FROM_BL[side];if(counterAx.side===side){return anchorAx.domain[sideIndex]===ax.domain[sideIndex];}return counterAx.mirror&&anchorAx.domain[1-sideIndex]===ax.domain[1-sideIndex];}/*\n * Is there another axis intersecting `side` end of `ax`?\n * First look at `counterAx` (the axis for this subplot),\n * then at all other potential counteraxes on or overlaying this subplot.\n * Take the line width from the first one that has a line.\n */function findCounterAxisLineWidth(ax,side,counterAx,axList){if(shouldShowLineThisSide(ax,side,counterAx)){return counterAx._lw;}for(var i=0;i<axList.length;i++){var axi=axList[i];if(axi._mainAxis===counterAx._mainAxis&&shouldShowLineThisSide(ax,side,axi)){return axi._lw;}}return 0;}exports.drawMainTitle=function(gd){var fullLayout=gd._fullLayout;var textAnchor=getMainTitleTextAnchor(fullLayout);var dy=getMainTitleDy(fullLayout);Titles.draw(gd,'gtitle',{propContainer:fullLayout,propName:'title.text',placeholder:fullLayout._dfltTitle.plot,attributes:{x:getMainTitleX(fullLayout,textAnchor),y:getMainTitleY(fullLayout,dy),'text-anchor':textAnchor,dy:dy}});};function getMainTitleX(fullLayout,textAnchor){var title=fullLayout.title;var gs=fullLayout._size;var hPadShift=0;if(textAnchor===SVG_TEXT_ANCHOR_START){hPadShift=title.pad.l;}else if(textAnchor===SVG_TEXT_ANCHOR_END){hPadShift=-title.pad.r;}switch(title.xref){case'paper':return gs.l+gs.w*title.x+hPadShift;case'container':default:return fullLayout.width*title.x+hPadShift;}}function getMainTitleY(fullLayout,dy){var title=fullLayout.title;var gs=fullLayout._size;var vPadShift=0;if(dy==='0em'||!dy){vPadShift=-title.pad.b;}else if(dy===alignmentConstants.CAP_SHIFT+'em'){vPadShift=title.pad.t;}if(title.y==='auto'){return gs.t/2;}else{switch(title.yref){case'paper':return gs.t+gs.h-gs.h*title.y+vPadShift;case'container':default:return fullLayout.height-fullLayout.height*title.y+vPadShift;}}}function getMainTitleTextAnchor(fullLayout){var title=fullLayout.title;var textAnchor=SVG_TEXT_ANCHOR_MIDDLE;if(Lib.isRightAnchor(title)){textAnchor=SVG_TEXT_ANCHOR_END;}else if(Lib.isLeftAnchor(title)){textAnchor=SVG_TEXT_ANCHOR_START;}return textAnchor;}function getMainTitleDy(fullLayout){var title=fullLayout.title;var dy='0em';if(Lib.isTopAnchor(title)){dy=alignmentConstants.CAP_SHIFT+'em';}else if(Lib.isMiddleAnchor(title)){dy=alignmentConstants.MID_SHIFT+'em';}return dy;}exports.doTraceStyle=function(gd){var calcdata=gd.calcdata;var editStyleCalls=[];var i;for(i=0;i<calcdata.length;i++){var cd=calcdata[i];var cd0=cd[0]||{};var trace=cd0.trace||{};var _module=trace._module||{};// See if we need to do arraysToCalcdata\n// call it regardless of what change we made, in case\n// supplyDefaults brought in an array that was already\n// in gd.data but not in gd._fullData previously\nvar arraysToCalcdata=_module.arraysToCalcdata;if(arraysToCalcdata)arraysToCalcdata(cd,trace);var editStyle=_module.editStyle;if(editStyle)editStyleCalls.push({fn:editStyle,cd0:cd0});}if(editStyleCalls.length){for(i=0;i<editStyleCalls.length;i++){var edit=editStyleCalls[i];edit.fn(gd,edit.cd0);}clearGlCanvases(gd);exports.redrawReglTraces(gd);}Plots.style(gd);Registry.getComponentMethod('legend','draw')(gd);return Plots.previousPromises(gd);};exports.doColorBars=function(gd){for(var i=0;i<gd.calcdata.length;i++){var cdi0=gd.calcdata[i][0];if((cdi0.t||{}).cb){var trace=cdi0.trace;var cb=cdi0.t.cb;if(Registry.traceIs(trace,'contour')){cb.line({width:trace.contours.showlines!==false?trace.line.width:0,dash:trace.line.dash,color:trace.contours.coloring==='line'?cb._opts.line.color:trace.line.color});}var moduleOpts=trace._module.colorbar;var containerName=moduleOpts.container;var opts=(containerName?trace[containerName]:trace).colorbar;cb.options(opts)();}}return Plots.previousPromises(gd);};// force plot() to redo the layout and replot with the modified layout\nexports.layoutReplot=function(gd){var layout=gd.layout;gd.layout=undefined;return Registry.call('plot',gd,'',layout);};exports.doLegend=function(gd){Registry.getComponentMethod('legend','draw')(gd);return Plots.previousPromises(gd);};exports.doTicksRelayout=function(gd){Axes.draw(gd,'redraw');if(gd._fullLayout._hasOnlyLargeSploms){Registry.subplotsRegistry.splom.updateGrid(gd);clearGlCanvases(gd);exports.redrawReglTraces(gd);}exports.drawMainTitle(gd);return Plots.previousPromises(gd);};exports.doModeBar=function(gd){var fullLayout=gd._fullLayout;ModeBar.manage(gd);for(var i=0;i<fullLayout._basePlotModules.length;i++){var updateFx=fullLayout._basePlotModules[i].updateFx;if(updateFx)updateFx(gd);}return Plots.previousPromises(gd);};exports.doCamera=function(gd){var fullLayout=gd._fullLayout;var sceneIds=fullLayout._subplots.gl3d;for(var i=0;i<sceneIds.length;i++){var sceneLayout=fullLayout[sceneIds[i]];var scene=sceneLayout._scene;scene.setCamera(sceneLayout.camera);}};exports.drawData=function(gd){var fullLayout=gd._fullLayout;var calcdata=gd.calcdata;var i;// remove old colorbars explicitly\nfor(i=0;i<calcdata.length;i++){var trace=calcdata[i][0].trace;if(trace.visible!==true||!trace._module.colorbar){fullLayout._infolayer.select('.cb'+trace.uid).remove();}}clearGlCanvases(gd);// loop over the base plot modules present on graph\nvar basePlotModules=fullLayout._basePlotModules;for(i=0;i<basePlotModules.length;i++){basePlotModules[i].plot(gd);}exports.redrawReglTraces(gd);// styling separate from drawing\nPlots.style(gd);// show annotations and shapes\nRegistry.getComponentMethod('shapes','draw')(gd);Registry.getComponentMethod('annotations','draw')(gd);// Mark the first render as complete\nfullLayout._replotting=false;return Plots.previousPromises(gd);};// Draw (or redraw) all regl-based traces in one go,\n// useful during drag and selection where buffers of targeted traces are updated,\n// but all traces need to be redrawn following clearGlCanvases.\n//\n// Note that _module.plot for regl trace does NOT draw things\n// on the canvas, they only update the buffers.\n// Drawing is perform here.\n//\n// TODO try adding per-subplot option using gl.SCISSOR_TEST for\n// non-overlaying, disjoint subplots.\n//\n// TODO try to include parcoords in here.\n// https://github.com/plotly/plotly.js/issues/3069\nexports.redrawReglTraces=function(gd){var fullLayout=gd._fullLayout;if(fullLayout._has('regl')){var fullData=gd._fullData;var cartesianIds=[];var polarIds=[];var i,sp;if(fullLayout._hasOnlyLargeSploms){fullLayout._splomGrid.draw();}// N.B.\n// - Loop over fullData (not _splomScenes) to preserve splom trace-to-trace ordering\n// - Fill list if subplot ids (instead of fullLayout._subplots) to handle cases where all traces\n//   of a given module are `visible !== true`\nfor(i=0;i<fullData.length;i++){var trace=fullData[i];if(trace.visible===true){if(trace.type==='splom'){fullLayout._splomScenes[trace.uid].draw();}else if(trace.type==='scattergl'){Lib.pushUnique(cartesianIds,trace.xaxis+trace.yaxis);}else if(trace.type==='scatterpolargl'){Lib.pushUnique(polarIds,trace.subplot);}}}for(i=0;i<cartesianIds.length;i++){sp=fullLayout._plots[cartesianIds[i]];if(sp._scene)sp._scene.draw();}for(i=0;i<polarIds.length;i++){sp=fullLayout[polarIds[i]]._subplot;if(sp._scene)sp._scene.draw();}}};exports.doAutoRangeAndConstraints=function(gd){var axList=Axes.list(gd,'',true);for(var i=0;i<axList.length;i++){var ax=axList[i];cleanAxisConstraints(gd,ax);// in case margins changed, update scale\nax.setScale();doAutoRange(gd,ax);}enforceAxisConstraints(gd);};// An initial paint must be completed before these components can be\n// correctly sized and the whole plot re-margined. fullLayout._replotting must\n// be set to false before these will work properly.\nexports.finalDraw=function(gd){Registry.getComponentMethod('shapes','draw')(gd);Registry.getComponentMethod('images','draw')(gd);Registry.getComponentMethod('annotations','draw')(gd);// TODO: rangesliders really belong in marginPushers but they need to be\n// drawn after data - can we at least get the margin pushing part separated\n// out and done earlier?\nRegistry.getComponentMethod('rangeslider','draw')(gd);// TODO: rangeselector only needs to be here (in addition to drawMarginPushers)\n// because the margins need to be fully determined before we can call\n// autorange and update axis ranges (which rangeselector needs to know which\n// button is active). Can we break out its automargin step from its draw step?\nRegistry.getComponentMethod('rangeselector','draw')(gd);};exports.drawMarginPushers=function(gd){Registry.getComponentMethod('legend','draw')(gd);Registry.getComponentMethod('rangeselector','draw')(gd);Registry.getComponentMethod('sliders','draw')(gd);Registry.getComponentMethod('updatemenus','draw')(gd);};},{\"../components/color\":299,\"../components/drawing\":320,\"../components/modebar\":358,\"../components/titles\":387,\"../constants/alignment\":394,\"../lib\":423,\"../lib/clear_gl_canvases\":411,\"../plots/cartesian/autorange\":468,\"../plots/cartesian/axes\":469,\"../plots/cartesian/constraints\":477,\"../plots/plots\":513,\"../registry\":521,\"d3\":71}],461:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../lib');var isPlainObject=Lib.isPlainObject;var PlotSchema=_dereq_('./plot_schema');var Plots=_dereq_('../plots/plots');var plotAttributes=_dereq_('../plots/attributes');var Template=_dereq_('./plot_template');var dfltConfig=_dereq_('./plot_config');/**\n * Plotly.makeTemplate: create a template off an existing figure to reuse\n * style attributes on other figures.\n *\n * Note: separated from the rest of templates because otherwise we get circular\n * references due to PlotSchema.\n *\n * @param {object|DOM element} figure: The figure to base the template on\n *     should contain a trace array `figure.data`\n *     and a layout object `figure.layout`\n * @returns {object} template: the extracted template - can then be used as\n *     `layout.template` in another figure.\n */exports.makeTemplate=function(figure){figure=Lib.extendDeep({_context:dfltConfig},{data:figure.data,layout:figure.layout});Plots.supplyDefaults(figure);var data=figure.data||[];var layout=figure.layout||{};// copy over a few items to help follow the schema\nlayout._basePlotModules=figure._fullLayout._basePlotModules;layout._modules=figure._fullLayout._modules;var template={data:{},layout:{}};/*\n     * Note: we do NOT validate template values, we just take what's in the\n     * user inputs data and layout, not the validated values in fullData and\n     * fullLayout. Even if we were to validate here, there's no guarantee that\n     * these values would still be valid when applied to a new figure, which\n     * may contain different trace modes, different axes, etc. So it's\n     * important that when applying a template we still validate the template\n     * values, rather than just using them as defaults.\n     */data.forEach(function(trace){// TODO: What if no style info is extracted for this trace. We may\n// not want an empty object as the null value.\n// TODO: allow transforms to contribute to templates?\n// as it stands they are ignored, which may be for the best...\nvar traceTemplate={};walkStyleKeys(trace,traceTemplate,getTraceInfo.bind(null,trace));var traceType=Lib.coerce(trace,{},plotAttributes,'type');var typeTemplates=template.data[traceType];if(!typeTemplates)typeTemplates=template.data[traceType]=[];typeTemplates.push(traceTemplate);});walkStyleKeys(layout,template.layout,getLayoutInfo.bind(null,layout));/*\n     * Compose the new template with an existing one to the same effect\n     *\n     * NOTE: there's a possibility of slightly different behavior: if the plot\n     * has an invalid value and the old template has a valid value for the same\n     * attribute, the plot will use the old template value but this routine\n     * will pull the invalid value (resulting in the original default).\n     * In the general case it's not possible to solve this with a single value,\n     * since valid options can be context-dependent. It could be solved with\n     * a *list* of values, but that would be huge complexity for little gain.\n     */delete template.layout.template;var oldTemplate=layout.template;if(isPlainObject(oldTemplate)){var oldLayoutTemplate=oldTemplate.layout;var i,traceType,oldTypeTemplates,oldTypeLen,typeTemplates,typeLen;if(isPlainObject(oldLayoutTemplate)){mergeTemplates(oldLayoutTemplate,template.layout);}var oldDataTemplate=oldTemplate.data;if(isPlainObject(oldDataTemplate)){for(traceType in template.data){oldTypeTemplates=oldDataTemplate[traceType];if(Array.isArray(oldTypeTemplates)){typeTemplates=template.data[traceType];typeLen=typeTemplates.length;oldTypeLen=oldTypeTemplates.length;for(i=0;i<typeLen;i++){mergeTemplates(oldTypeTemplates[i%oldTypeLen],typeTemplates[i]);}for(i=typeLen;i<oldTypeLen;i++){typeTemplates.push(Lib.extendDeep({},oldTypeTemplates[i]));}}}for(traceType in oldDataTemplate){if(!(traceType in template.data)){template.data[traceType]=Lib.extendDeep([],oldDataTemplate[traceType]);}}}}return template;};function mergeTemplates(oldTemplate,newTemplate){// we don't care about speed here, just make sure we have a totally\n// distinct object from the previous template\noldTemplate=Lib.extendDeep({},oldTemplate);// sort keys so we always get annotationdefaults before annotations etc\n// so arrayTemplater will work right\nvar oldKeys=Object.keys(oldTemplate).sort();var i,j;function mergeOne(oldVal,newVal,key){if(isPlainObject(newVal)&&isPlainObject(oldVal)){mergeTemplates(oldVal,newVal);}else if(Array.isArray(newVal)&&Array.isArray(oldVal)){// Note: omitted `inclusionAttr` from arrayTemplater here,\n// it's irrelevant as we only want the resulting `_template`.\nvar templater=Template.arrayTemplater({_template:oldTemplate},key);for(j=0;j<newVal.length;j++){var item=newVal[j];var oldItem=templater.newItem(item)._template;if(oldItem)mergeTemplates(oldItem,item);}var defaultItems=templater.defaultItems();for(j=0;j<defaultItems.length;j++){newVal.push(defaultItems[j]._template);}// templateitemname only applies to receiving plots\nfor(j=0;j<newVal.length;j++){delete newVal[j].templateitemname;}}}for(i=0;i<oldKeys.length;i++){var key=oldKeys[i];var oldVal=oldTemplate[key];if(key in newTemplate){mergeOne(oldVal,newTemplate[key],key);}else newTemplate[key]=oldVal;// if this is a base key from the old template (eg xaxis), look for\n// extended keys (eg xaxis2) in the new template to merge into\nif(getBaseKey(key)===key){for(var key2 in newTemplate){var baseKey2=getBaseKey(key2);if(key2!==baseKey2&&baseKey2===key&&!(key2 in oldTemplate)){mergeOne(oldVal,newTemplate[key2],key);}}}}}function getBaseKey(key){return key.replace(/[0-9]+$/,'');}function walkStyleKeys(parent,templateOut,getAttributeInfo,path,basePath){var pathAttr=basePath&&getAttributeInfo(basePath);for(var key in parent){var child=parent[key];var nextPath=getNextPath(parent,key,path);var nextBasePath=getNextPath(parent,key,basePath);var attr=getAttributeInfo(nextBasePath);if(!attr){var baseKey=getBaseKey(key);if(baseKey!==key){nextBasePath=getNextPath(parent,baseKey,basePath);attr=getAttributeInfo(nextBasePath);}}// we'll get an attr if path starts with a valid part, then has an\n// invalid ending. Make sure we got all the way to the end.\nif(pathAttr&&pathAttr===attr)continue;if(!attr||attr._noTemplating||attr.valType==='data_array'||attr.arrayOk&&Array.isArray(child)){continue;}if(!attr.valType&&isPlainObject(child)){walkStyleKeys(child,templateOut,getAttributeInfo,nextPath,nextBasePath);}else if(attr._isLinkedToArray&&Array.isArray(child)){var dfltDone=false;var namedIndex=0;var usedNames={};for(var i=0;i<child.length;i++){var item=child[i];if(isPlainObject(item)){var name=item.name;if(name){if(!usedNames[name]){// named array items: allow all attributes except data arrays\nwalkStyleKeys(item,templateOut,getAttributeInfo,getNextPath(child,namedIndex,nextPath),getNextPath(child,namedIndex,nextBasePath));namedIndex++;usedNames[name]=1;}}else if(!dfltDone){var dfltKey=Template.arrayDefaultKey(key);var dfltPath=getNextPath(parent,dfltKey,path);// getAttributeInfo will fail if we try to use dfltKey directly.\n// Instead put this item into the next array element, then\n// pull it out and move it to dfltKey.\nvar pathInArray=getNextPath(child,namedIndex,nextPath);walkStyleKeys(item,templateOut,getAttributeInfo,pathInArray,getNextPath(child,namedIndex,nextBasePath));var itemPropInArray=Lib.nestedProperty(templateOut,pathInArray);var dfltProp=Lib.nestedProperty(templateOut,dfltPath);dfltProp.set(itemPropInArray.get());itemPropInArray.set(null);dfltDone=true;}}}}else{var templateProp=Lib.nestedProperty(templateOut,nextPath);templateProp.set(child);}}}function getLayoutInfo(layout,path){return PlotSchema.getLayoutValObject(layout,Lib.nestedProperty({},path).parts);}function getTraceInfo(trace,path){return PlotSchema.getTraceValObject(trace,Lib.nestedProperty({},path).parts);}function getNextPath(parent,key,path){var nextPath;if(!path)nextPath=key;else if(Array.isArray(parent))nextPath=path+'['+key+']';else nextPath=path+'.'+key;return nextPath;}/**\n * validateTemplate: Test for consistency between the given figure and\n * a template, either already included in the figure or given separately.\n * Note that not every issue we identify here is necessarily a problem,\n * it depends on what you're using the template for.\n *\n * @param {object|DOM element} figure: the plot, with {data, layout} members,\n *     to test the template against\n * @param {Optional(object)} template: the template, with its own {data, layout},\n *     to test. If omitted, we will look for a template already attached as the\n *     plot's `layout.template` attribute.\n *\n * @returns {array} array of error objects each containing:\n *  - {string} code\n *      error code ('missing', 'unused', 'reused', 'noLayout', 'noData')\n *  - {string} msg\n *      a full readable description of the issue.\n */exports.validateTemplate=function(figureIn,template){var figure=Lib.extendDeep({},{_context:dfltConfig,data:figureIn.data,layout:figureIn.layout});var layout=figure.layout||{};if(!isPlainObject(template))template=layout.template||{};var layoutTemplate=template.layout;var dataTemplate=template.data;var errorList=[];figure.layout=layout;figure.layout.template=template;Plots.supplyDefaults(figure);var fullLayout=figure._fullLayout;var fullData=figure._fullData;var layoutPaths={};function crawlLayoutForContainers(obj,paths){for(var key in obj){if(key.charAt(0)!=='_'&&isPlainObject(obj[key])){var baseKey=getBaseKey(key);var nextPaths=[];var i;for(i=0;i<paths.length;i++){nextPaths.push(getNextPath(obj,key,paths[i]));if(baseKey!==key)nextPaths.push(getNextPath(obj,baseKey,paths[i]));}for(i=0;i<nextPaths.length;i++){layoutPaths[nextPaths[i]]=1;}crawlLayoutForContainers(obj[key],nextPaths);}}}function crawlLayoutTemplateForContainers(obj,path){for(var key in obj){if(key.indexOf('defaults')===-1&&isPlainObject(obj[key])){var nextPath=getNextPath(obj,key,path);if(layoutPaths[nextPath]){crawlLayoutTemplateForContainers(obj[key],nextPath);}else{errorList.push({code:'unused',path:nextPath});}}}}if(!isPlainObject(layoutTemplate)){errorList.push({code:'layout'});}else{crawlLayoutForContainers(fullLayout,['layout']);crawlLayoutTemplateForContainers(layoutTemplate,'layout');}if(!isPlainObject(dataTemplate)){errorList.push({code:'data'});}else{var typeCount={};var traceType;for(var i=0;i<fullData.length;i++){var fullTrace=fullData[i];traceType=fullTrace.type;typeCount[traceType]=(typeCount[traceType]||0)+1;if(!fullTrace._fullInput._template){// this takes care of the case of traceType in the data but not\n// the template\nerrorList.push({code:'missing',index:fullTrace._fullInput.index,traceType:traceType});}}for(traceType in dataTemplate){var templateCount=dataTemplate[traceType].length;var dataCount=typeCount[traceType]||0;if(templateCount>dataCount){errorList.push({code:'unused',traceType:traceType,templateCount:templateCount,dataCount:dataCount});}else if(dataCount>templateCount){errorList.push({code:'reused',traceType:traceType,templateCount:templateCount,dataCount:dataCount});}}}// _template: false is when someone tried to modify an array item\n// but there was no template with matching name\nfunction crawlForMissingTemplates(obj,path){for(var key in obj){if(key.charAt(0)==='_')continue;var val=obj[key];var nextPath=getNextPath(obj,key,path);if(isPlainObject(val)){if(Array.isArray(obj)&&val._template===false&&val.templateitemname){errorList.push({code:'missing',path:nextPath,templateitemname:val.templateitemname});}crawlForMissingTemplates(val,nextPath);}else if(Array.isArray(val)&&hasPlainObject(val)){crawlForMissingTemplates(val,nextPath);}}}crawlForMissingTemplates({data:fullData,layout:fullLayout},'');if(errorList.length)return errorList.map(format);};function hasPlainObject(arr){for(var i=0;i<arr.length;i++){if(isPlainObject(arr[i]))return true;}}function format(opts){var msg;switch(opts.code){case'data':msg='The template has no key data.';break;case'layout':msg='The template has no key layout.';break;case'missing':if(opts.path){msg='There are no templates for item '+opts.path+' with name '+opts.templateitemname;}else{msg='There are no templates for trace '+opts.index+', of type '+opts.traceType+'.';}break;case'unused':if(opts.path){msg='The template item at '+opts.path+' was not used in constructing the plot.';}else if(opts.dataCount){msg='Some of the templates of type '+opts.traceType+' were not used. The template has '+opts.templateCount+' traces, the data only has '+opts.dataCount+' of this type.';}else{msg='The template has '+opts.templateCount+' traces of type '+opts.traceType+' but there are none in the data.';}break;case'reused':msg='Some of the templates of type '+opts.traceType+' were used more than once. The template has '+opts.templateCount+' traces, the data has '+opts.dataCount+' of this type.';break;}opts.msg=msg;return opts;}},{\"../lib\":423,\"../plots/attributes\":466,\"../plots/plots\":513,\"./plot_config\":457,\"./plot_schema\":458,\"./plot_template\":459}],462:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var plotApi=_dereq_('./plot_api');var Lib=_dereq_('../lib');var helpers=_dereq_('../snapshot/helpers');var toSVG=_dereq_('../snapshot/tosvg');var svgToImg=_dereq_('../snapshot/svgtoimg');var attrs={format:{valType:'enumerated',values:['png','jpeg','webp','svg'],dflt:'png'},width:{valType:'number',min:1},height:{valType:'number',min:1},scale:{valType:'number',min:0,dflt:1},setBackground:{valType:'any',dflt:false},imageDataOnly:{valType:'boolean',dflt:false}};var IMAGE_URL_PREFIX=/^data:image\\/\\w+;base64,/;/** Plotly.toImage\n *\n * @param {object | string | HTML div} gd\n *   can either be a data/layout/config object\n *   or an existing graph <div>\n *   or an id to an existing graph <div>\n * @param {object} opts (see above)\n * @return {promise}\n */function toImage(gd,opts){opts=opts||{};var data;var layout;var config;if(Lib.isPlainObject(gd)){data=gd.data||[];layout=gd.layout||{};config=gd.config||{};}else{gd=Lib.getGraphDiv(gd);data=Lib.extendDeep([],gd.data);layout=Lib.extendDeep({},gd.layout);config=gd._context;}function isImpliedOrValid(attr){return!(attr in opts)||Lib.validate(opts[attr],attrs[attr]);}if(!isImpliedOrValid('width')||!isImpliedOrValid('height')){throw new Error('Height and width should be pixel values.');}if(!isImpliedOrValid('format')){throw new Error('Image format is not jpeg, png, svg or webp.');}var fullOpts={};function coerce(attr,dflt){return Lib.coerce(opts,fullOpts,attrs,attr,dflt);}var format=coerce('format');var width=coerce('width');var height=coerce('height');var scale=coerce('scale');var setBackground=coerce('setBackground');var imageDataOnly=coerce('imageDataOnly');// put the cloned div somewhere off screen before attaching to DOM\nvar clonedGd=document.createElement('div');clonedGd.style.position='absolute';clonedGd.style.left='-5000px';document.body.appendChild(clonedGd);// extend layout with image options\nvar layoutImage=Lib.extendFlat({},layout);if(width)layoutImage.width=width;if(height)layoutImage.height=height;// extend config for static plot\nvar configImage=Lib.extendFlat({},config,{_exportedPlot:true,staticPlot:true,setBackground:setBackground});var redrawFunc=helpers.getRedrawFunc(clonedGd);function wait(){return new Promise(function(resolve){setTimeout(resolve,helpers.getDelay(clonedGd._fullLayout));});}function convert(){return new Promise(function(resolve,reject){var svg=toSVG(clonedGd,format,scale);var width=clonedGd._fullLayout.width;var height=clonedGd._fullLayout.height;plotApi.purge(clonedGd);document.body.removeChild(clonedGd);if(format==='svg'){if(imageDataOnly){return resolve(svg);}else{return resolve('data:image/svg+xml,'+encodeURIComponent(svg));}}var canvas=document.createElement('canvas');canvas.id=Lib.randstr();svgToImg({format:format,width:width,height:height,scale:scale,canvas:canvas,svg:svg,// ask svgToImg to return a Promise\n//  rather than EventEmitter\n//  leave EventEmitter for backward\n//  compatibility\npromise:true}).then(resolve).catch(reject);});}function urlToImageData(url){if(imageDataOnly){return url.replace(IMAGE_URL_PREFIX,'');}else{return url;}}return new Promise(function(resolve,reject){plotApi.plot(clonedGd,data,layoutImage,configImage).then(redrawFunc).then(wait).then(convert).then(function(url){resolve(urlToImageData(url));}).catch(function(err){reject(err);});});}module.exports=toImage;},{\"../lib\":423,\"../snapshot/helpers\":525,\"../snapshot/svgtoimg\":527,\"../snapshot/tosvg\":529,\"./plot_api\":456}],463:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../lib');var Plots=_dereq_('../plots/plots');var PlotSchema=_dereq_('./plot_schema');var dfltConfig=_dereq_('./plot_config');var isPlainObject=Lib.isPlainObject;var isArray=Array.isArray;var isArrayOrTypedArray=Lib.isArrayOrTypedArray;/**\n * Validate a data array and layout object.\n *\n * @param {array} data\n * @param {object} layout\n *\n * @return {array} array of error objects each containing:\n *  - {string} code\n *      error code ('object', 'array', 'schema', 'unused', 'invisible' or 'value')\n *  - {string} container\n *      container where the error occurs ('data' or 'layout')\n *  - {number} trace\n *      trace index of the 'data' container where the error occurs\n *  - {array} path\n *      nested path to the key that causes the error\n *  - {string} astr\n *      attribute string variant of 'path' compatible with Plotly.restyle and\n *      Plotly.relayout.\n *  - {string} msg\n *      error message (shown in console in logger config argument is enable)\n */module.exports=function validate(data,layout){var schema=PlotSchema.get();var errorList=[];var gd={_context:Lib.extendFlat({},dfltConfig)};var dataIn,layoutIn;if(isArray(data)){gd.data=Lib.extendDeep([],data);dataIn=data;}else{gd.data=[];dataIn=[];errorList.push(format('array','data'));}if(isPlainObject(layout)){gd.layout=Lib.extendDeep({},layout);layoutIn=layout;}else{gd.layout={};layoutIn={};if(arguments.length>1){errorList.push(format('object','layout'));}}// N.B. dataIn and layoutIn are in general not the same as\n// gd.data and gd.layout after supplyDefaults as some attributes\n// in gd.data and gd.layout (still) get mutated during this step.\nPlots.supplyDefaults(gd);var dataOut=gd._fullData;var len=dataIn.length;for(var i=0;i<len;i++){var traceIn=dataIn[i];var base=['data',i];if(!isPlainObject(traceIn)){errorList.push(format('object',base));continue;}var traceOut=dataOut[i];var traceType=traceOut.type;var traceSchema=schema.traces[traceType].attributes;// PlotSchema does something fancy with trace 'type', reset it here\n// to make the trace schema compatible with Lib.validate.\ntraceSchema.type={valType:'enumerated',values:[traceType]};if(traceOut.visible===false&&traceIn.visible!==false){errorList.push(format('invisible',base));}crawl(traceIn,traceOut,traceSchema,errorList,base);var transformsIn=traceIn.transforms;var transformsOut=traceOut.transforms;if(transformsIn){if(!isArray(transformsIn)){errorList.push(format('array',base,['transforms']));}base.push('transforms');for(var j=0;j<transformsIn.length;j++){var path=['transforms',j];var transformType=transformsIn[j].type;if(!isPlainObject(transformsIn[j])){errorList.push(format('object',base,path));continue;}var transformSchema=schema.transforms[transformType]?schema.transforms[transformType].attributes:{};// add 'type' to transform schema to validate the transform type\ntransformSchema.type={valType:'enumerated',values:Object.keys(schema.transforms)};crawl(transformsIn[j],transformsOut[j],transformSchema,errorList,base,path);}}}var layoutOut=gd._fullLayout;var layoutSchema=fillLayoutSchema(schema,dataOut);crawl(layoutIn,layoutOut,layoutSchema,errorList,'layout');// return undefined if no validation errors were found\nreturn errorList.length===0?void 0:errorList;};function crawl(objIn,objOut,schema,list,base,path){path=path||[];var keys=Object.keys(objIn);for(var i=0;i<keys.length;i++){var k=keys[i];// transforms are handled separately\nif(k==='transforms')continue;var p=path.slice();p.push(k);var valIn=objIn[k];var valOut=objOut[k];var nestedSchema=getNestedSchema(schema,k);var isInfoArray=(nestedSchema||{}).valType==='info_array';var isColorscale=(nestedSchema||{}).valType==='colorscale';var items=(nestedSchema||{}).items;if(!isInSchema(schema,k)){list.push(format('schema',base,p));}else if(isPlainObject(valIn)&&isPlainObject(valOut)){crawl(valIn,valOut,nestedSchema,list,base,p);}else if(isInfoArray&&isArray(valIn)){if(valIn.length>valOut.length){list.push(format('unused',base,p.concat(valOut.length)));}var len=valOut.length;var arrayItems=Array.isArray(items);if(arrayItems)len=Math.min(len,items.length);var m,n,item,valInPart,valOutPart;if(nestedSchema.dimensions===2){for(n=0;n<len;n++){if(isArray(valIn[n])){if(valIn[n].length>valOut[n].length){list.push(format('unused',base,p.concat(n,valOut[n].length)));}var len2=valOut[n].length;for(m=0;m<(arrayItems?Math.min(len2,items[n].length):len2);m++){item=arrayItems?items[n][m]:items;valInPart=valIn[n][m];valOutPart=valOut[n][m];if(!Lib.validate(valInPart,item)){list.push(format('value',base,p.concat(n,m),valInPart));}else if(valOutPart!==valInPart&&valOutPart!==+valInPart){list.push(format('dynamic',base,p.concat(n,m),valInPart,valOutPart));}}}else{list.push(format('array',base,p.concat(n),valIn[n]));}}}else{for(n=0;n<len;n++){item=arrayItems?items[n]:items;valInPart=valIn[n];valOutPart=valOut[n];if(!Lib.validate(valInPart,item)){list.push(format('value',base,p.concat(n),valInPart));}else if(valOutPart!==valInPart&&valOutPart!==+valInPart){list.push(format('dynamic',base,p.concat(n),valInPart,valOutPart));}}}}else if(nestedSchema.items&&!isInfoArray&&isArray(valIn)){var _nestedSchema=items[Object.keys(items)[0]];var indexList=[];var j,_p;// loop over valOut items while keeping track of their\n// corresponding input container index (given by _index)\nfor(j=0;j<valOut.length;j++){var _index=valOut[j]._index||j;_p=p.slice();_p.push(_index);if(isPlainObject(valIn[_index])&&isPlainObject(valOut[j])){indexList.push(_index);var valInj=valIn[_index];var valOutj=valOut[j];if(isPlainObject(valInj)&&valInj.visible!==false&&valOutj.visible===false){list.push(format('invisible',base,_p));}else crawl(valInj,valOutj,_nestedSchema,list,base,_p);}}// loop over valIn to determine where it went wrong for some items\nfor(j=0;j<valIn.length;j++){_p=p.slice();_p.push(j);if(!isPlainObject(valIn[j])){list.push(format('object',base,_p,valIn[j]));}else if(indexList.indexOf(j)===-1){list.push(format('unused',base,_p));}}}else if(!isPlainObject(valIn)&&isPlainObject(valOut)){list.push(format('object',base,p,valIn));}else if(!isArrayOrTypedArray(valIn)&&isArrayOrTypedArray(valOut)&&!isInfoArray&&!isColorscale){list.push(format('array',base,p,valIn));}else if(!(k in objOut)){list.push(format('unused',base,p,valIn));}else if(!Lib.validate(valIn,nestedSchema)){list.push(format('value',base,p,valIn));}else if(nestedSchema.valType==='enumerated'&&(nestedSchema.coerceNumber&&valIn!==+valOut||valIn!==valOut)){list.push(format('dynamic',base,p,valIn,valOut));}}return list;}// the 'full' layout schema depends on the traces types presents\nfunction fillLayoutSchema(schema,dataOut){var layoutSchema=schema.layout.layoutAttributes;for(var i=0;i<dataOut.length;i++){var traceOut=dataOut[i];var traceSchema=schema.traces[traceOut.type];var traceLayoutAttr=traceSchema.layoutAttributes;if(traceLayoutAttr){if(traceOut.subplot){Lib.extendFlat(layoutSchema[traceSchema.attributes.subplot.dflt],traceLayoutAttr);}else{Lib.extendFlat(layoutSchema,traceLayoutAttr);}}}return layoutSchema;}// validation error codes\nvar code2msgFunc={object:function object(base,astr){var prefix;if(base==='layout'&&astr==='')prefix='The layout argument';else if(base[0]==='data'&&astr===''){prefix='Trace '+base[1]+' in the data argument';}else prefix=inBase(base)+'key '+astr;return prefix+' must be linked to an object container';},array:function array(base,astr){var prefix;if(base==='data')prefix='The data argument';else prefix=inBase(base)+'key '+astr;return prefix+' must be linked to an array container';},schema:function schema(base,astr){return inBase(base)+'key '+astr+' is not part of the schema';},unused:function unused(base,astr,valIn){var target=isPlainObject(valIn)?'container':'key';return inBase(base)+target+' '+astr+' did not get coerced';},dynamic:function dynamic(base,astr,valIn,valOut){return[inBase(base)+'key',astr,'(set to \\''+valIn+'\\')','got reset to','\\''+valOut+'\\'','during defaults.'].join(' ');},invisible:function invisible(base,astr){return(astr?inBase(base)+'item '+astr:'Trace '+base[1])+' got defaulted to be not visible';},value:function value(base,astr,valIn){return[inBase(base)+'key '+astr,'is set to an invalid value ('+valIn+')'].join(' ');}};function inBase(base){if(isArray(base))return'In data trace '+base[1]+', ';return'In '+base+', ';}function format(code,base,path,valIn,valOut){path=path||'';var container,trace;// container is either 'data' or 'layout\n// trace is the trace index if 'data', null otherwise\nif(isArray(base)){container=base[0];trace=base[1];}else{container=base;trace=null;}var astr=convertPathToAttributeString(path);var msg=code2msgFunc[code](base,astr,valIn,valOut);// log to console if logger config option is enabled\nLib.log(msg);return{code:code,container:container,trace:trace,path:path,astr:astr,msg:msg};}function isInSchema(schema,key){var parts=splitKey(key);var keyMinusId=parts.keyMinusId;var id=parts.id;if(keyMinusId in schema&&schema[keyMinusId]._isSubplotObj&&id){return true;}return key in schema;}function getNestedSchema(schema,key){if(key in schema)return schema[key];var parts=splitKey(key);return schema[parts.keyMinusId];}var idRegex=Lib.counterRegex('([a-z]+)');function splitKey(key){var idMatch=key.match(idRegex);return{keyMinusId:idMatch&&idMatch[1],id:idMatch&&idMatch[2]};}function convertPathToAttributeString(path){if(!isArray(path))return String(path);var astr='';for(var i=0;i<path.length;i++){var p=path[i];if(typeof p==='number'){astr=astr.substr(0,astr.length-1)+'['+p+']';}else{astr+=p;}if(i<path.length-1)astr+='.';}return astr;}},{\"../lib\":423,\"../plots/plots\":513,\"./plot_config\":457,\"./plot_schema\":458}],464:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={mode:{valType:'enumerated',dflt:'afterall',values:['immediate','next','afterall']},direction:{valType:'enumerated',values:['forward','reverse'],dflt:'forward'},fromcurrent:{valType:'boolean',dflt:false},frame:{duration:{valType:'number',min:0,dflt:500},redraw:{valType:'boolean',dflt:true}},transition:{duration:{valType:'number',min:0,dflt:500},easing:{valType:'enumerated',dflt:'cubic-in-out',values:['linear','quad','cubic','sin','exp','circle','elastic','back','bounce','linear-in','quad-in','cubic-in','sin-in','exp-in','circle-in','elastic-in','back-in','bounce-in','linear-out','quad-out','cubic-out','sin-out','exp-out','circle-out','elastic-out','back-out','bounce-out','linear-in-out','quad-in-out','cubic-in-out','sin-in-out','exp-in-out','circle-in-out','elastic-in-out','back-in-out','bounce-in-out']}}};},{}],465:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../lib');var Template=_dereq_('../plot_api/plot_template');/** Convenience wrapper for making array container logic DRY and consistent\n *\n * @param {object} parentObjIn\n *  user input object where the container in question is linked\n *  (i.e. either a user trace object or the user layout object)\n *\n * @param {object} parentObjOut\n *  full object where the coerced container will be linked\n *  (i.e. either a full trace object or the full layout object)\n *\n * @param {object} opts\n *  options object:\n *   - name {string}\n *      name of the key linking the container in question\n *   - inclusionAttr {string}\n *      name of the item attribute for inclusion/exclusion. Default is 'visible'.\n *      Since inclusion is true, use eg 'enabled' instead of 'disabled'.\n *   - handleItemDefaults {function}\n *      defaults method to be called on each item in the array container in question\n *\n *      Its arguments are:\n *          - itemIn {object} item in user layout\n *          - itemOut {object} item in full layout\n *          - parentObj {object} (as in closure)\n *          - opts {object} (as in closure)\n * N.B.\n *\n *  - opts is passed to handleItemDefaults so it can also store\n *    links to supplementary data (e.g. fullData for layout components)\n *\n */module.exports=function handleArrayContainerDefaults(parentObjIn,parentObjOut,opts){var name=opts.name;var inclusionAttr=opts.inclusionAttr||'visible';var previousContOut=parentObjOut[name];var contIn=Lib.isArrayOrTypedArray(parentObjIn[name])?parentObjIn[name]:[];var contOut=parentObjOut[name]=[];var templater=Template.arrayTemplater(parentObjOut,name,inclusionAttr);var i,itemOut;for(i=0;i<contIn.length;i++){var itemIn=contIn[i];if(!Lib.isPlainObject(itemIn)){itemOut=templater.newItem({});itemOut[inclusionAttr]=false;}else{itemOut=templater.newItem(itemIn);}itemOut._index=i;if(itemOut[inclusionAttr]!==false){opts.handleItemDefaults(itemIn,itemOut,parentObjOut,opts);}contOut.push(itemOut);}var defaultItems=templater.defaultItems();for(i=0;i<defaultItems.length;i++){itemOut=defaultItems[i];itemOut._index=contOut.length;opts.handleItemDefaults({},itemOut,parentObjOut,opts,{});contOut.push(itemOut);}// in case this array gets its defaults rebuilt independent of the whole layout,\n// relink the private keys just for this array.\nif(Lib.isArrayOrTypedArray(previousContOut)){var len=Math.min(previousContOut.length,contOut.length);for(i=0;i<len;i++){Lib.relinkPrivateKeys(contOut[i],previousContOut[i]);}}return contOut;};},{\"../lib\":423,\"../plot_api/plot_template\":459}],466:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var fxAttrs=_dereq_('../components/fx/attributes');module.exports={type:{valType:'enumerated',values:[],// listed dynamically\ndflt:'scatter',editType:'calc+clearAxisTypes',_noTemplating:true// we handle this at a higher level\n},visible:{valType:'enumerated',values:[true,false,'legendonly'],dflt:true,editType:'calc'},showlegend:{valType:'boolean',dflt:true,editType:'style'},legendgroup:{valType:'string',dflt:'',editType:'style'},opacity:{valType:'number',min:0,max:1,dflt:1,editType:'style'},name:{valType:'string',editType:'style'},uid:{valType:'string',editType:'plot'},ids:{valType:'data_array',editType:'calc'},customdata:{valType:'data_array',editType:'calc'},// N.B. these cannot be 'data_array' as they do not have the same length as\n// other data arrays and arrayOk attributes in general\n//\n// Maybe add another valType:\n// https://github.com/plotly/plotly.js/issues/1894\nselectedpoints:{valType:'any',editType:'calc'},hoverinfo:{valType:'flaglist',flags:['x','y','z','text','name'],extras:['all','none','skip'],arrayOk:true,dflt:'all',editType:'none'},hoverlabel:fxAttrs.hoverlabel,stream:{token:{valType:'string',noBlank:true,strict:true,editType:'calc'},maxpoints:{valType:'number',min:0,max:10000,dflt:500,editType:'calc'},editType:'calc'},transforms:{_isLinkedToArray:'transform',editType:'calc'},uirevision:{valType:'any',editType:'none'}};},{\"../components/fx/attributes\":329}],467:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={xaxis:{valType:'subplotid',dflt:'x',editType:'calc+clearAxisTypes'},yaxis:{valType:'subplotid',dflt:'y',editType:'calc+clearAxisTypes'}};},{}],468:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var Lib=_dereq_('../../lib');var FP_SAFE=_dereq_('../../constants/numerical').FP_SAFE;var Registry=_dereq_('../../registry');module.exports={getAutoRange:getAutoRange,makePadFn:makePadFn,doAutoRange:doAutoRange,findExtremes:findExtremes,concatExtremes:concatExtremes};/**\n * getAutoRange\n *\n * Collects all _extremes values corresponding to a given axis\n * and computes its auto range.\n *\n * Note that getAutoRange uses return values from findExtremes.\n *\n * @param {object} gd:\n *   graph div object with filled-in fullData and fullLayout, in particular\n *   with filled-in '_extremes' containers:\n *   {\n *      val: calcdata value,\n *      pad: extra pixels beyond this value,\n *      extrapad: bool, does this point want 5% extra padding\n *   }\n * @param {object} ax:\n *   full axis object, in particular with filled-in '_traceIndices'\n *   and '_annIndices' / '_shapeIndices' if applicable\n * @return {array}\n *   an array of [min, max]. These are calcdata for log and category axes\n *   and data for linear and date axes.\n *\n * TODO: we want to change log to data as well, but it's hard to do this\n * maintaining backward compatibility. category will always have to use calcdata\n * though, because otherwise values between categories (or outside all categories)\n * would be impossible.\n */function getAutoRange(gd,ax){var i,j;var newRange=[];var getPad=makePadFn(ax);var extremes=concatExtremes(gd,ax);var minArray=extremes.min;var maxArray=extremes.max;if(minArray.length===0||maxArray.length===0){return Lib.simpleMap(ax.range,ax.r2l);}var minmin=minArray[0].val;var maxmax=maxArray[0].val;for(i=1;i<minArray.length;i++){if(minmin!==maxmax)break;minmin=Math.min(minmin,minArray[i].val);}for(i=1;i<maxArray.length;i++){if(minmin!==maxmax)break;maxmax=Math.max(maxmax,maxArray[i].val);}var axReverse=false;if(ax.range){var rng=Lib.simpleMap(ax.range,ax.r2l);axReverse=rng[1]<rng[0];}// one-time setting to easily reverse the axis\n// when plotting from code\nif(ax.autorange==='reversed'){axReverse=true;ax.autorange=true;}var rangeMode=ax.rangemode;var toZero=rangeMode==='tozero';var nonNegative=rangeMode==='nonnegative';var axLen=ax._length;// don't allow padding to reduce the data to < 10% of the length\nvar minSpan=axLen/10;var mbest=0;var minpt,maxpt,minbest,maxbest,dp,dv;for(i=0;i<minArray.length;i++){minpt=minArray[i];for(j=0;j<maxArray.length;j++){maxpt=maxArray[j];dv=maxpt.val-minpt.val;if(dv>0){dp=axLen-getPad(minpt)-getPad(maxpt);if(dp>minSpan){if(dv/dp>mbest){minbest=minpt;maxbest=maxpt;mbest=dv/dp;}}else if(dv/axLen>mbest){// in case of padding longer than the axis\n// at least include the unpadded data values.\nminbest={val:minpt.val,pad:0};maxbest={val:maxpt.val,pad:0};mbest=dv/axLen;}}}}function getMaxPad(prev,pt){return Math.max(prev,getPad(pt));}if(minmin===maxmax){var lower=minmin-1;var upper=minmin+1;if(toZero){if(minmin===0){// The only value we have on this axis is 0, and we want to\n// autorange so zero is one end.\n// In principle this could be [0, 1] or [-1, 0] but usually\n// 'tozero' pins 0 to the low end, so follow that.\nnewRange=[0,1];}else{var maxPad=(minmin>0?maxArray:minArray).reduce(getMaxPad,0);// we're pushing a single value away from the edge due to its\n// padding, with the other end clamped at zero\n// 0.5 means don't push it farther than the center.\nvar rangeEnd=minmin/(1-Math.min(0.5,maxPad/axLen));newRange=minmin>0?[0,rangeEnd]:[rangeEnd,0];}}else if(nonNegative){newRange=[Math.max(0,lower),Math.max(1,upper)];}else{newRange=[lower,upper];}}else{if(toZero){if(minbest.val>=0){minbest={val:0,pad:0};}if(maxbest.val<=0){maxbest={val:0,pad:0};}}else if(nonNegative){if(minbest.val-mbest*getPad(minbest)<0){minbest={val:0,pad:0};}if(maxbest.val<=0){maxbest={val:1,pad:0};}}// in case it changed again...\nmbest=(maxbest.val-minbest.val)/(axLen-getPad(minbest)-getPad(maxbest));newRange=[minbest.val-mbest*getPad(minbest),maxbest.val+mbest*getPad(maxbest)];}// maintain reversal\nif(axReverse)newRange.reverse();return Lib.simpleMap(newRange,ax.l2r||Number);}/*\n * calculate the pixel padding for ax._min and ax._max entries with\n * optional extrapad as 5% of the total axis length\n */function makePadFn(ax){// 5% padding for points that specify extrapad: true\nvar extrappad=ax._length/20;// domain-constrained axes: base extrappad on the unconstrained\n// domain so it's consistent as the domain changes\nif(ax.constrain==='domain'&&ax._inputDomain){extrappad*=(ax._inputDomain[1]-ax._inputDomain[0])/(ax.domain[1]-ax.domain[0]);}return function getPad(pt){return pt.pad+(pt.extrapad?extrappad:0);};}function concatExtremes(gd,ax){var axId=ax._id;var fullData=gd._fullData;var fullLayout=gd._fullLayout;var minArray=[];var maxArray=[];var i,j,d;function _concat(cont,indices){for(i=0;i<indices.length;i++){var item=cont[indices[i]];var extremes=(item._extremes||{})[axId];if(item.visible===true&&extremes){for(j=0;j<extremes.min.length;j++){d=extremes.min[j];collapseMinArray(minArray,d.val,d.pad,{extrapad:d.extrapad});}for(j=0;j<extremes.max.length;j++){d=extremes.max[j];collapseMaxArray(maxArray,d.val,d.pad,{extrapad:d.extrapad});}}}}_concat(fullData,ax._traceIndices);_concat(fullLayout.annotations||[],ax._annIndices||[]);_concat(fullLayout.shapes||[],ax._shapeIndices||[]);return{min:minArray,max:maxArray};}function doAutoRange(gd,ax){if(ax.autorange){ax.range=getAutoRange(gd,ax);ax._r=ax.range.slice();ax._rl=Lib.simpleMap(ax._r,ax.r2l);// doAutoRange will get called on fullLayout,\n// but we want to report its results back to layout\nvar axIn=ax._input;// before we edit _input, store preGUI values\nvar edits={};edits[ax._attr+'.range']=ax.range;edits[ax._attr+'.autorange']=ax.autorange;Registry.call('_storeDirectGUIEdit',gd.layout,gd._fullLayout._preGUI,edits);axIn.range=ax.range.slice();axIn.autorange=ax.autorange;}var anchorAx=ax._anchorAxis;if(anchorAx&&anchorAx.rangeslider){var axeRangeOpts=anchorAx.rangeslider[ax._name];if(axeRangeOpts){if(axeRangeOpts.rangemode==='auto'){axeRangeOpts.range=getAutoRange(gd,ax);}}anchorAx._input.rangeslider[ax._name]=Lib.extendFlat({},axeRangeOpts);}}/**\n * findExtremes\n *\n * Find min/max extremes of an array of coordinates on a given axis.\n *\n * Note that findExtremes is called during `calc`, when we don't yet know the axis\n * length; all the inputs should be based solely on the trace data, nothing\n * about the axis layout.\n *\n * Note that `ppad` and `vpad` as well as their asymmetric variants refer to\n * the before and after padding of the passed `data` array, not to the whole axis.\n *\n * @param {object} ax: full axis object\n *   relies on\n *   - ax.type\n *   - ax._m (just its sign)\n *   - ax.d2l\n * @param {array} data:\n *  array of numbers (i.e. already run though ax.d2c)\n * @param {object} options:\n *  available keys are:\n *      vpad: (number or number array) pad values (data value +-vpad)\n *      ppad: (number or number array) pad pixels (pixel location +-ppad)\n *      ppadplus, ppadminus, vpadplus, vpadminus:\n *          separate padding for each side, overrides symmetric\n *      padded: (boolean) add 5% padding to both ends\n *          (unless one end is overridden by tozero)\n *      tozero: (boolean) make sure to include zero if axis is linear,\n *          and make it a tight bound if possible\n *\n * @return {object}\n *  - min {array of objects}\n *  - max {array of objects}\n *  each object item has fields:\n *    - val {number}\n *    - pad {number}\n *    - extrappad {number}\n */function findExtremes(ax,data,options){if(!options)options={};if(!ax._m)ax.setScale();var minArray=[];var maxArray=[];var len=data.length;var extrapad=options.padded||false;var tozero=options.tozero&&(ax.type==='linear'||ax.type==='-');var isLog=ax.type==='log';var hasArrayOption=false;var i,v,di,dmin,dmax,ppadiplus,ppadiminus,vmin,vmax;function makePadAccessor(item){if(Array.isArray(item)){hasArrayOption=true;return function(i){return Math.max(Number(item[i]||0),0);};}else{var v=Math.max(Number(item||0),0);return function(){return v;};}}var ppadplus=makePadAccessor((ax._m>0?options.ppadplus:options.ppadminus)||options.ppad||0);var ppadminus=makePadAccessor((ax._m>0?options.ppadminus:options.ppadplus)||options.ppad||0);var vpadplus=makePadAccessor(options.vpadplus||options.vpad);var vpadminus=makePadAccessor(options.vpadminus||options.vpad);if(!hasArrayOption){// with no arrays other than `data` we don't need to consider\n// every point, only the extreme data points\nvmin=Infinity;vmax=-Infinity;if(isLog){for(i=0;i<len;i++){v=data[i];// data is not linearized yet so we still have to filter out negative logs\nif(v<vmin&&v>0)vmin=v;if(v>vmax&&v<FP_SAFE)vmax=v;}}else{for(i=0;i<len;i++){v=data[i];if(v<vmin&&v>-FP_SAFE)vmin=v;if(v>vmax&&v<FP_SAFE)vmax=v;}}data=[vmin,vmax];len=2;}var collapseOpts={tozero:tozero,extrapad:extrapad};function addItem(i){di=data[i];if(!isNumeric(di))return;ppadiplus=ppadplus(i);ppadiminus=ppadminus(i);vmin=di-vpadminus(i);vmax=di+vpadplus(i);// special case for log axes: if vpad makes this object span\n// more than an order of mag, clip it to one order. This is so\n// we don't have non-positive errors or absurdly large lower\n// range due to rounding errors\nif(isLog&&vmin<vmax/10)vmin=vmax/10;dmin=ax.c2l(vmin);dmax=ax.c2l(vmax);if(tozero){dmin=Math.min(0,dmin);dmax=Math.max(0,dmax);}if(goodNumber(dmin)){collapseMinArray(minArray,dmin,ppadiminus,collapseOpts);}if(goodNumber(dmax)){collapseMaxArray(maxArray,dmax,ppadiplus,collapseOpts);}}// For efficiency covering monotonic or near-monotonic data,\n// check a few points at both ends first and then sweep\n// through the middle\nvar iMax=Math.min(6,len);for(i=0;i<iMax;i++){addItem(i);}for(i=len-1;i>=iMax;i--){addItem(i);}return{min:minArray,max:maxArray};}function collapseMinArray(array,newVal,newPad,opts){collapseArray(array,newVal,newPad,opts,lessOrEqual);}function collapseMaxArray(array,newVal,newPad,opts){collapseArray(array,newVal,newPad,opts,greaterOrEqual);}/**\n * collapseArray\n *\n * Takes items from 'array' and compares them to 'newVal', 'newPad'.\n *\n * @param {array} array:\n *  current set of min or max extremes\n * @param {number} newVal:\n *  new value to compare against\n * @param {number} newPad:\n *  pad value associated with 'newVal'\n * @param {object} opts:\n *  - tozero {boolean}\n *  - extrapad {number}\n * @param {function} atLeastAsExtreme:\n *  comparison function, use\n *  - lessOrEqual for min 'array' and\n *  - greaterOrEqual for max 'array'\n *\n * In practice, 'array' is either\n *  - 'extremes[ax._id].min' or\n *  - 'extremes[ax._id].max\n *  found in traces and layout items that affect autorange.\n *\n * Since we don't yet know the relationship between pixels and values\n * (that's what we're trying to figure out!) AND we don't yet know how\n * many pixels `extrapad` represents (it's going to be 5% of the length,\n * but we don't want to have to redo calc just because length changed)\n * two point must satisfy three criteria simultaneously for one to supersede the other:\n *  - at least as extreme a `val`\n *  - at least as big a `pad`\n *  - an unpadded point cannot supersede a padded point, but any other combination can\n *\n * Then:\n * - If the item supersedes the new point, set includeThis false\n * - If the new pt supersedes the item, delete it from 'array'\n */function collapseArray(array,newVal,newPad,opts,atLeastAsExtreme){var tozero=opts.tozero;var extrapad=opts.extrapad;var includeThis=true;for(var j=0;j<array.length&&includeThis;j++){var v=array[j];if(atLeastAsExtreme(v.val,newVal)&&v.pad>=newPad&&(v.extrapad||!extrapad)){includeThis=false;break;}else if(atLeastAsExtreme(newVal,v.val)&&v.pad<=newPad&&(extrapad||!v.extrapad)){array.splice(j,1);j--;}}if(includeThis){var clipAtZero=tozero&&newVal===0;array.push({val:newVal,pad:clipAtZero?0:newPad,extrapad:clipAtZero?false:extrapad});}}// In order to stop overflow errors, don't consider points\n// too close to the limits of js floating point\nfunction goodNumber(v){return isNumeric(v)&&Math.abs(v)<FP_SAFE;}function lessOrEqual(v0,v1){return v0<=v1;}function greaterOrEqual(v0,v1){return v0>=v1;}},{\"../../constants/numerical\":398,\"../../lib\":423,\"../../registry\":521,\"fast-isnumeric\":80}],469:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var isNumeric=_dereq_('fast-isnumeric');var Plots=_dereq_('../../plots/plots');var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var svgTextUtils=_dereq_('../../lib/svg_text_utils');var Titles=_dereq_('../../components/titles');var Color=_dereq_('../../components/color');var Drawing=_dereq_('../../components/drawing');var axAttrs=_dereq_('./layout_attributes');var cleanTicks=_dereq_('./clean_ticks');var constants=_dereq_('../../constants/numerical');var ONEAVGYEAR=constants.ONEAVGYEAR;var ONEAVGMONTH=constants.ONEAVGMONTH;var ONEDAY=constants.ONEDAY;var ONEHOUR=constants.ONEHOUR;var ONEMIN=constants.ONEMIN;var ONESEC=constants.ONESEC;var MINUS_SIGN=constants.MINUS_SIGN;var BADNUM=constants.BADNUM;var MID_SHIFT=_dereq_('../../constants/alignment').MID_SHIFT;var LINE_SPACING=_dereq_('../../constants/alignment').LINE_SPACING;var axes=module.exports={};axes.setConvert=_dereq_('./set_convert');var autoType=_dereq_('./axis_autotype');var axisIds=_dereq_('./axis_ids');axes.id2name=axisIds.id2name;axes.name2id=axisIds.name2id;axes.cleanId=axisIds.cleanId;axes.list=axisIds.list;axes.listIds=axisIds.listIds;axes.getFromId=axisIds.getFromId;axes.getFromTrace=axisIds.getFromTrace;var autorange=_dereq_('./autorange');axes.getAutoRange=autorange.getAutoRange;axes.findExtremes=autorange.findExtremes;/*\n * find the list of possible axes to reference with an xref or yref attribute\n * and coerce it to that list\n *\n * attr: the attribute we're generating a reference for. Should end in 'x' or 'y'\n *     but can be prefixed, like 'ax' for annotation's arrow x\n * dflt: the default to coerce to, or blank to use the first axis (falling back on\n *     extraOption if there is no axis)\n * extraOption: aside from existing axes with this letter, what non-axis value is allowed?\n *     Only required if it's different from `dflt`\n */axes.coerceRef=function(containerIn,containerOut,gd,attr,dflt,extraOption){var axLetter=attr.charAt(attr.length-1);var axlist=gd._fullLayout._subplots[axLetter+'axis'];var refAttr=attr+'ref';var attrDef={};if(!dflt)dflt=axlist[0]||extraOption;if(!extraOption)extraOption=dflt;// data-ref annotations are not supported in gl2d yet\nattrDef[refAttr]={valType:'enumerated',values:axlist.concat(extraOption?[extraOption]:[]),dflt:dflt};// xref, yref\nreturn Lib.coerce(containerIn,containerOut,attrDef,refAttr);};/*\n * coerce position attributes (range-type) that can be either on axes or absolute\n * (paper or pixel) referenced. The biggest complication here is that we don't know\n * before looking at the axis whether the value must be a number or not (it may be\n * a date string), so we can't use the regular valType='number' machinery\n *\n * axRef (string): the axis this position is referenced to, or:\n *     paper: fraction of the plot area\n *     pixel: pixels relative to some starting position\n * attr (string): the attribute in containerOut we are coercing\n * dflt (number): the default position, as a fraction or pixels. If the attribute\n *     is to be axis-referenced, this will be converted to an axis data value\n *\n * Also cleans the values, since the attribute definition itself has to say\n * valType: 'any' to handle date axes. This allows us to accept:\n * - for category axes: category names, and convert them here into serial numbers.\n *   Note that this will NOT work for axis range endpoints, because we don't know\n *   the category list yet (it's set by ax.makeCalcdata during calc)\n *   but it works for component (note, shape, images) positions.\n * - for date axes: JS Dates or milliseconds, and convert to date strings\n * - for other types: coerce them to numbers\n */axes.coercePosition=function(containerOut,gd,coerce,axRef,attr,dflt){var cleanPos,pos;if(axRef==='paper'||axRef==='pixel'){cleanPos=Lib.ensureNumber;pos=coerce(attr,dflt);}else{var ax=axes.getFromId(gd,axRef);dflt=ax.fraction2r(dflt);pos=coerce(attr,dflt);cleanPos=ax.cleanPos;}containerOut[attr]=cleanPos(pos);};axes.cleanPosition=function(pos,gd,axRef){var cleanPos=axRef==='paper'||axRef==='pixel'?Lib.ensureNumber:axes.getFromId(gd,axRef).cleanPos;return cleanPos(pos);};var getDataConversions=axes.getDataConversions=function(gd,trace,target,targetArray){var ax;// If target points to an axis, use the type we already have for that\n// axis to find the data type. Otherwise use the values to autotype.\nvar d2cTarget=target==='x'||target==='y'||target==='z'?target:targetArray;// In the case of an array target, make a mock data array\n// and call supplyDefaults to the data type and\n// setup the data-to-calc method.\nif(Array.isArray(d2cTarget)){ax={type:autoType(targetArray),_categories:[]};axes.setConvert(ax);// build up ax._categories (usually done during ax.makeCalcdata()\nif(ax.type==='category'){for(var i=0;i<targetArray.length;i++){ax.d2c(targetArray[i]);}}// TODO what to do for transforms?\n}else{ax=axes.getFromTrace(gd,trace,d2cTarget);}// if 'target' has corresponding axis\n// -> use setConvert method\nif(ax)return{d2c:ax.d2c,c2d:ax.c2d};// special case for 'ids'\n// -> cast to String\nif(d2cTarget==='ids')return{d2c:toString,c2d:toString};// otherwise (e.g. numeric-array of 'marker.color' or 'marker.size')\n// -> cast to Number\nreturn{d2c:toNum,c2d:toNum};};function toNum(v){return+v;}function toString(v){return String(v);}axes.getDataToCoordFunc=function(gd,trace,target,targetArray){return getDataConversions(gd,trace,target,targetArray).d2c;};// get counteraxis letter for this axis (name or id)\n// this can also be used as the id for default counter axis\naxes.counterLetter=function(id){var axLetter=id.charAt(0);if(axLetter==='x')return'y';if(axLetter==='y')return'x';};// incorporate a new minimum difference and first tick into\n// forced\n// note that _forceTick0 is linearized, so needs to be turned into\n// a range value for setting tick0\naxes.minDtick=function(ax,newDiff,newFirst,allow){// doesn't make sense to do forced min dTick on log or category axes,\n// and the plot itself may decide to cancel (ie non-grouped bars)\nif(['log','category','multicategory'].indexOf(ax.type)!==-1||!allow){ax._minDtick=0;}// undefined means there's nothing there yet\nelse if(ax._minDtick===undefined){ax._minDtick=newDiff;ax._forceTick0=newFirst;}else if(ax._minDtick){// existing minDtick is an integer multiple of newDiff\n// (within rounding err)\n// and forceTick0 can be shifted to newFirst\nif((ax._minDtick/newDiff+1e-6)%1<2e-6&&((newFirst-ax._forceTick0)/newDiff%1+1.000001)%1<2e-6){ax._minDtick=newDiff;ax._forceTick0=newFirst;}// if the converse is true (newDiff is a multiple of minDtick and\n// newFirst can be shifted to forceTick0) then do nothing - same\n// forcing stands. Otherwise, cancel forced minimum\nelse if((newDiff/ax._minDtick+1e-6)%1>2e-6||((newFirst-ax._forceTick0)/ax._minDtick%1+1.000001)%1>2e-6){ax._minDtick=0;}}};// save a copy of the initial axis ranges in fullLayout\n// use them in mode bar and dblclick events\naxes.saveRangeInitial=function(gd,overwrite){var axList=axes.list(gd,'',true);var hasOneAxisChanged=false;for(var i=0;i<axList.length;i++){var ax=axList[i];var isNew=ax._rangeInitial===undefined;var hasChanged=isNew||!(ax.range[0]===ax._rangeInitial[0]&&ax.range[1]===ax._rangeInitial[1]);if(isNew&&ax.autorange===false||overwrite&&hasChanged){ax._rangeInitial=ax.range.slice();hasOneAxisChanged=true;}}return hasOneAxisChanged;};// save a copy of the initial spike visibility\naxes.saveShowSpikeInitial=function(gd,overwrite){var axList=axes.list(gd,'',true);var hasOneAxisChanged=false;var allSpikesEnabled='on';for(var i=0;i<axList.length;i++){var ax=axList[i];var isNew=ax._showSpikeInitial===undefined;var hasChanged=isNew||!(ax.showspikes===ax._showspikes);if(isNew||overwrite&&hasChanged){ax._showSpikeInitial=ax.showspikes;hasOneAxisChanged=true;}if(allSpikesEnabled==='on'&&!ax.showspikes){allSpikesEnabled='off';}}gd._fullLayout._cartesianSpikesEnabled=allSpikesEnabled;return hasOneAxisChanged;};axes.autoBin=function(data,ax,nbins,is2d,calendar,size){var dataMin=Lib.aggNums(Math.min,null,data);var dataMax=Lib.aggNums(Math.max,null,data);if(ax.type==='category'||ax.type==='multicategory'){return{start:dataMin-0.5,end:dataMax+0.5,size:Math.max(1,Math.round(size)||1),_dataSpan:dataMax-dataMin};}if(!calendar)calendar=ax.calendar;// piggyback off tick code to make \"nice\" bin sizes and edges\nvar dummyAx;if(ax.type==='log'){dummyAx={type:'linear',range:[dataMin,dataMax]};}else{dummyAx={type:ax.type,range:Lib.simpleMap([dataMin,dataMax],ax.c2r,0,calendar),calendar:calendar};}axes.setConvert(dummyAx);size=size&&cleanTicks.dtick(size,dummyAx.type);if(size){dummyAx.dtick=size;dummyAx.tick0=cleanTicks.tick0(undefined,dummyAx.type,calendar);}else{var size0;if(nbins)size0=(dataMax-dataMin)/nbins;else{// totally auto: scale off std deviation so the highest bin is\n// somewhat taller than the total number of bins, but don't let\n// the size get smaller than the 'nice' rounded down minimum\n// difference between values\nvar distinctData=Lib.distinctVals(data);var msexp=Math.pow(10,Math.floor(Math.log(distinctData.minDiff)/Math.LN10));var minSize=msexp*Lib.roundUp(distinctData.minDiff/msexp,[0.9,1.9,4.9,9.9],true);size0=Math.max(minSize,2*Lib.stdev(data)/Math.pow(data.length,is2d?0.25:0.4));// fallback if ax.d2c output BADNUMs\n// e.g. when user try to plot categorical bins\n// on a layout.xaxis.type: 'linear'\nif(!isNumeric(size0))size0=1;}axes.autoTicks(dummyAx,size0);}var finalSize=dummyAx.dtick;var binStart=axes.tickIncrement(axes.tickFirst(dummyAx),finalSize,'reverse',calendar);var binEnd,bincount;// check for too many data points right at the edges of bins\n// (>50% within 1% of bin edges) or all data points integral\n// and offset the bins accordingly\nif(typeof finalSize==='number'){binStart=autoShiftNumericBins(binStart,data,dummyAx,dataMin,dataMax);bincount=1+Math.floor((dataMax-binStart)/finalSize);binEnd=binStart+bincount*finalSize;}else{// month ticks - should be the only nonlinear kind we have at this point.\n// dtick (as supplied by axes.autoTick) only has nonlinear values on\n// date and log axes, but even if you display a histogram on a log axis\n// we bin it on a linear axis (which one could argue against, but that's\n// a separate issue)\nif(dummyAx.dtick.charAt(0)==='M'){binStart=autoShiftMonthBins(binStart,data,finalSize,dataMin,calendar);}// calculate the endpoint for nonlinear ticks - you have to\n// just increment until you're done\nbinEnd=binStart;bincount=0;while(binEnd<=dataMax){binEnd=axes.tickIncrement(binEnd,finalSize,false,calendar);bincount++;}}return{start:ax.c2r(binStart,0,calendar),end:ax.c2r(binEnd,0,calendar),size:finalSize,_dataSpan:dataMax-dataMin};};function autoShiftNumericBins(binStart,data,ax,dataMin,dataMax){var edgecount=0;var midcount=0;var intcount=0;var blankCount=0;function nearEdge(v){// is a value within 1% of a bin edge?\nreturn(1+(v-binStart)*100/ax.dtick)%100<2;}for(var i=0;i<data.length;i++){if(data[i]%1===0)intcount++;else if(!isNumeric(data[i]))blankCount++;if(nearEdge(data[i]))edgecount++;if(nearEdge(data[i]+ax.dtick/2))midcount++;}var dataCount=data.length-blankCount;if(intcount===dataCount&&ax.type!=='date'){// all integers: if bin size is <1, it's because\n// that was specifically requested (large nbins)\n// so respect that... but center the bins containing\n// integers on those integers\nif(ax.dtick<1){binStart=dataMin-0.5*ax.dtick;}// otherwise start half an integer down regardless of\n// the bin size, just enough to clear up endpoint\n// ambiguity about which integers are in which bins.\nelse{binStart-=0.5;if(binStart+ax.dtick<dataMin)binStart+=ax.dtick;}}else if(midcount<dataCount*0.1){if(edgecount>dataCount*0.3||nearEdge(dataMin)||nearEdge(dataMax)){// lots of points at the edge, not many in the middle\n// shift half a bin\nvar binshift=ax.dtick/2;binStart+=binStart+binshift<dataMin?binshift:-binshift;}}return binStart;}function autoShiftMonthBins(binStart,data,dtick,dataMin,calendar){var stats=Lib.findExactDates(data,calendar);// number of data points that needs to be an exact value\n// to shift that increment to (near) the bin center\nvar threshold=0.8;if(stats.exactDays>threshold){var numMonths=Number(dtick.substr(1));if(stats.exactYears>threshold&&numMonths%12===0){// The exact middle of a non-leap-year is 1.5 days into July\n// so if we start the bins here, all but leap years will\n// get hover-labeled as exact years.\nbinStart=axes.tickIncrement(binStart,'M6','reverse')+ONEDAY*1.5;}else if(stats.exactMonths>threshold){// Months are not as clean, but if we shift half the *longest*\n// month (31/2 days) then 31-day months will get labeled exactly\n// and shorter months will get labeled with the correct month\n// but shifted 12-36 hours into it.\nbinStart=axes.tickIncrement(binStart,'M1','reverse')+ONEDAY*15.5;}else{// Shifting half a day is exact, but since these are month bins it\n// will always give a somewhat odd-looking label, until we do something\n// smarter like showing the bin boundaries (or the bounds of the actual\n// data in each bin)\nbinStart-=ONEDAY/2;}var nextBinStart=axes.tickIncrement(binStart,dtick);if(nextBinStart<=dataMin)return nextBinStart;}return binStart;}// ----------------------------------------------------\n// Ticks and grids\n// ----------------------------------------------------\n// ensure we have tick0, dtick, and tick rounding calculated\naxes.prepTicks=function(ax){var rng=Lib.simpleMap(ax.range,ax.r2l);// calculate max number of (auto) ticks to display based on plot size\nif(ax.tickmode==='auto'||!ax.dtick){var nt=ax.nticks;var minPx;if(!nt){if(ax.type==='category'||ax.type==='multicategory'){minPx=ax.tickfont?(ax.tickfont.size||12)*1.2:15;nt=ax._length/minPx;}else{minPx=ax._id.charAt(0)==='y'?40:80;nt=Lib.constrain(ax._length/minPx,4,9)+1;}// radial axes span half their domain,\n// multiply nticks value by two to get correct number of auto ticks.\nif(ax._name==='radialaxis')nt*=2;}// add a couple of extra digits for filling in ticks when we\n// have explicit tickvals without tick text\nif(ax.tickmode==='array')nt*=100;axes.autoTicks(ax,Math.abs(rng[1]-rng[0])/nt);// check for a forced minimum dtick\nif(ax._minDtick>0&&ax.dtick<ax._minDtick*2){ax.dtick=ax._minDtick;ax.tick0=ax.l2r(ax._forceTick0);}}// check for missing tick0\nif(!ax.tick0){ax.tick0=ax.type==='date'?'2000-01-01':0;}// ensure we don't try to make ticks below our minimum precision\n// see https://github.com/plotly/plotly.js/issues/2892\nif(ax.type==='date'&&ax.dtick<0.1)ax.dtick=0.1;// now figure out rounding of tick values\nautoTickRound(ax);};// calculate the ticks: text, values, positioning\n// if ticks are set to automatic, determine the right values (tick0,dtick)\n// in any case, set tickround to # of digits to round tick labels to,\n// or codes to this effect for log and date scales\naxes.calcTicks=function calcTicks(ax){axes.prepTicks(ax);var rng=Lib.simpleMap(ax.range,ax.r2l);// now that we've figured out the auto values for formatting\n// in case we're missing some ticktext, we can break out for array ticks\nif(ax.tickmode==='array')return arrayTicks(ax);// find the first tick\nax._tmin=axes.tickFirst(ax);// add a tiny bit so we get ticks which may have rounded out\nvar startTick=rng[0]*1.0001-rng[1]*0.0001;var endTick=rng[1]*1.0001-rng[0]*0.0001;// check for reversed axis\nvar axrev=rng[1]<rng[0];// No visible ticks? Quit.\n// I've only seen this on category axes with all categories off the edge.\nif(ax._tmin<startTick!==axrev)return[];// return the full set of tick vals\nvar vals=[];if(ax.type==='category'||ax.type==='multicategory'){endTick=axrev?Math.max(-0.5,endTick):Math.min(ax._categories.length-0.5,endTick);}var xPrevious=null;var maxTicks=Math.max(1000,ax._length||0);for(var x=ax._tmin;axrev?x>=endTick:x<=endTick;x=axes.tickIncrement(x,ax.dtick,axrev,ax.calendar)){// prevent infinite loops - no more than one tick per pixel,\n// and make sure each value is different from the previous\nif(vals.length>maxTicks||x===xPrevious)break;xPrevious=x;vals.push(x);}// If same angle over a full circle, the last tick vals is a duplicate.\n// TODO must do something similar for angular date axes.\nif(isAngular(ax)&&Math.abs(rng[1]-rng[0])===360){vals.pop();}// save the last tick as well as first, so we can\n// show the exponent only on the last one\nax._tmax=vals[vals.length-1];// for showing the rest of a date when the main tick label is only the\n// latter part: ax._prevDateHead holds what we showed most recently.\n// Start with it cleared and mark that we're in calcTicks (ie calculating a\n// whole string of these so we should care what the previous date head was!)\nax._prevDateHead='';ax._inCalcTicks=true;var ticksOut=new Array(vals.length);for(var i=0;i<vals.length;i++){ticksOut[i]=axes.tickText(ax,vals[i]);}ax._inCalcTicks=false;return ticksOut;};function arrayTicks(ax){var vals=ax.tickvals;var text=ax.ticktext;var ticksOut=new Array(vals.length);var rng=Lib.simpleMap(ax.range,ax.r2l);var r0expanded=rng[0]*1.0001-rng[1]*0.0001;var r1expanded=rng[1]*1.0001-rng[0]*0.0001;var tickMin=Math.min(r0expanded,r1expanded);var tickMax=Math.max(r0expanded,r1expanded);var j=0;// without a text array, just format the given values as any other ticks\n// except with more precision to the numbers\nif(!Array.isArray(text))text=[];// make sure showing ticks doesn't accidentally add new categories\n// TODO multicategory, if we allow ticktext / tickvals\nvar tickVal2l=ax.type==='category'?ax.d2l_noadd:ax.d2l;// array ticks on log axes always show the full number\n// (if no explicit ticktext overrides it)\nif(ax.type==='log'&&String(ax.dtick).charAt(0)!=='L'){ax.dtick='L'+Math.pow(10,Math.floor(Math.min(ax.range[0],ax.range[1]))-1);}for(var i=0;i<vals.length;i++){var vali=tickVal2l(vals[i]);if(vali>tickMin&&vali<tickMax){if(text[i]===undefined)ticksOut[j]=axes.tickText(ax,vali);else ticksOut[j]=tickTextObj(ax,vali,String(text[i]));j++;}}if(j<vals.length)ticksOut.splice(j,vals.length-j);return ticksOut;}var roundBase10=[2,5,10];var roundBase24=[1,2,3,6,12];var roundBase60=[1,2,5,10,15,30];// 2&3 day ticks are weird, but need something btwn 1&7\nvar roundDays=[1,2,3,7,14];// approx. tick positions for log axes, showing all (1) and just 1, 2, 5 (2)\n// these don't have to be exact, just close enough to round to the right value\nvar roundLog1=[-0.046,0,0.301,0.477,0.602,0.699,0.778,0.845,0.903,0.954,1];var roundLog2=[-0.301,0,0.301,0.699,1];// N.B. `thetaunit; 'radians' angular axes must be converted to degrees\nvar roundAngles=[15,30,45,90,180];function roundDTick(roughDTick,base,roundingSet){return base*Lib.roundUp(roughDTick/base,roundingSet);}// autoTicks: calculate best guess at pleasant ticks for this axis\n// inputs:\n//      ax - an axis object\n//      roughDTick - rough tick spacing (to be turned into a nice round number)\n// outputs (into ax):\n//   tick0: starting point for ticks (not necessarily on the graph)\n//      usually 0 for numeric (=10^0=1 for log) or jan 1, 2000 for dates\n//   dtick: the actual, nice round tick spacing, usually a little larger than roughDTick\n//      if the ticks are spaced linearly (linear scale, categories,\n//          log with only full powers, date ticks < month),\n//          this will just be a number\n//      months: M#\n//      years: M# where # is 12*number of years\n//      log with linear ticks: L# where # is the linear tick spacing\n//      log showing powers plus some intermediates:\n//          D1 shows all digits, D2 shows 2 and 5\naxes.autoTicks=function(ax,roughDTick){var base;function getBase(v){return Math.pow(v,Math.floor(Math.log(roughDTick)/Math.LN10));}if(ax.type==='date'){ax.tick0=Lib.dateTick0(ax.calendar);// the criteria below are all based on the rough spacing we calculate\n// being > half of the final unit - so precalculate twice the rough val\nvar roughX2=2*roughDTick;if(roughX2>ONEAVGYEAR){roughDTick/=ONEAVGYEAR;base=getBase(10);ax.dtick='M'+12*roundDTick(roughDTick,base,roundBase10);}else if(roughX2>ONEAVGMONTH){roughDTick/=ONEAVGMONTH;ax.dtick='M'+roundDTick(roughDTick,1,roundBase24);}else if(roughX2>ONEDAY){ax.dtick=roundDTick(roughDTick,ONEDAY,roundDays);// get week ticks on sunday\n// this will also move the base tick off 2000-01-01 if dtick is\n// 2 or 3 days... but that's a weird enough case that we'll ignore it.\nax.tick0=Lib.dateTick0(ax.calendar,true);}else if(roughX2>ONEHOUR){ax.dtick=roundDTick(roughDTick,ONEHOUR,roundBase24);}else if(roughX2>ONEMIN){ax.dtick=roundDTick(roughDTick,ONEMIN,roundBase60);}else if(roughX2>ONESEC){ax.dtick=roundDTick(roughDTick,ONESEC,roundBase60);}else{// milliseconds\nbase=getBase(10);ax.dtick=roundDTick(roughDTick,base,roundBase10);}}else if(ax.type==='log'){ax.tick0=0;var rng=Lib.simpleMap(ax.range,ax.r2l);if(roughDTick>0.7){// only show powers of 10\nax.dtick=Math.ceil(roughDTick);}else if(Math.abs(rng[1]-rng[0])<1){// span is less than one power of 10\nvar nt=1.5*Math.abs((rng[1]-rng[0])/roughDTick);// ticks on a linear scale, labeled fully\nroughDTick=Math.abs(Math.pow(10,rng[1])-Math.pow(10,rng[0]))/nt;base=getBase(10);ax.dtick='L'+roundDTick(roughDTick,base,roundBase10);}else{// include intermediates between powers of 10,\n// labeled with small digits\n// ax.dtick = \"D2\" (show 2 and 5) or \"D1\" (show all digits)\nax.dtick=roughDTick>0.3?'D2':'D1';}}else if(ax.type==='category'||ax.type==='multicategory'){ax.tick0=0;ax.dtick=Math.ceil(Math.max(roughDTick,1));}else if(isAngular(ax)){ax.tick0=0;base=1;ax.dtick=roundDTick(roughDTick,base,roundAngles);}else{// auto ticks always start at 0\nax.tick0=0;base=getBase(10);ax.dtick=roundDTick(roughDTick,base,roundBase10);}// prevent infinite loops\nif(ax.dtick===0)ax.dtick=1;// TODO: this is from log axis histograms with autorange off\nif(!isNumeric(ax.dtick)&&typeof ax.dtick!=='string'){var olddtick=ax.dtick;ax.dtick=1;throw'ax.dtick error: '+String(olddtick);}};// after dtick is already known, find tickround = precision\n// to display in tick labels\n//   for numeric ticks, integer # digits after . to round to\n//   for date ticks, the last date part to show (y,m,d,H,M,S)\n//      or an integer # digits past seconds\nfunction autoTickRound(ax){var dtick=ax.dtick;ax._tickexponent=0;if(!isNumeric(dtick)&&typeof dtick!=='string'){dtick=1;}if(ax.type==='category'||ax.type==='multicategory'){ax._tickround=null;}if(ax.type==='date'){// If tick0 is unusual, give tickround a bit more information\n// not necessarily *all* the information in tick0 though, if it's really odd\n// minimal string length for tick0: 'd' is 10, 'M' is 16, 'S' is 19\n// take off a leading minus (year < 0) and i (intercalary month) so length is consistent\nvar tick0ms=ax.r2l(ax.tick0);var tick0str=ax.l2r(tick0ms).replace(/(^-|i)/g,'');var tick0len=tick0str.length;if(String(dtick).charAt(0)==='M'){// any tick0 more specific than a year: alway show the full date\nif(tick0len>10||tick0str.substr(5)!=='01-01')ax._tickround='d';// show the month unless ticks are full multiples of a year\nelse ax._tickround=+dtick.substr(1)%12===0?'y':'m';}else if(dtick>=ONEDAY&&tick0len<=10||dtick>=ONEDAY*15)ax._tickround='d';else if(dtick>=ONEMIN&&tick0len<=16||dtick>=ONEHOUR)ax._tickround='M';else if(dtick>=ONESEC&&tick0len<=19||dtick>=ONEMIN)ax._tickround='S';else{// tickround is a number of digits of fractional seconds\n// of any two adjacent ticks, at least one will have the maximum fractional digits\n// of all possible ticks - so take the max. length of tick0 and the next one\nvar tick1len=ax.l2r(tick0ms+dtick).replace(/^-/,'').length;ax._tickround=Math.max(tick0len,tick1len)-20;// We shouldn't get here... but in case there's a situation I'm\n// not thinking of where tick0str and tick1str are identical or\n// something, fall back on maximum precision\nif(ax._tickround<0)ax._tickround=4;}}else if(isNumeric(dtick)||dtick.charAt(0)==='L'){// linear or log (except D1, D2)\nvar rng=ax.range.map(ax.r2d||Number);if(!isNumeric(dtick))dtick=Number(dtick.substr(1));// 2 digits past largest digit of dtick\nax._tickround=2-Math.floor(Math.log(dtick)/Math.LN10+0.01);var maxend=Math.max(Math.abs(rng[0]),Math.abs(rng[1]));var rangeexp=Math.floor(Math.log(maxend)/Math.LN10+0.01);if(Math.abs(rangeexp)>3){if(isSIFormat(ax.exponentformat)&&!beyondSI(rangeexp)){ax._tickexponent=3*Math.round((rangeexp-1)/3);}else ax._tickexponent=rangeexp;}}// D1 or D2 (log)\nelse ax._tickround=null;}// months and years don't have constant millisecond values\n// (but a year is always 12 months so we only need months)\n// log-scale ticks are also not consistently spaced, except\n// for pure powers of 10\n// numeric ticks always have constant differences, other datetime ticks\n// can all be calculated as constant number of milliseconds\naxes.tickIncrement=function(x,dtick,axrev,calendar){var axSign=axrev?-1:1;// includes linear, all dates smaller than month, and pure 10^n in log\nif(isNumeric(dtick))return x+axSign*dtick;// everything else is a string, one character plus a number\nvar tType=dtick.charAt(0);var dtSigned=axSign*Number(dtick.substr(1));// Dates: months (or years - see Lib.incrementMonth)\nif(tType==='M')return Lib.incrementMonth(x,dtSigned,calendar);// Log scales: Linear, Digits\nelse if(tType==='L')return Math.log(Math.pow(10,x)+dtSigned)/Math.LN10;// log10 of 2,5,10, or all digits (logs just have to be\n// close enough to round)\nelse if(tType==='D'){var tickset=dtick==='D2'?roundLog2:roundLog1;var x2=x+axSign*0.01;var frac=Lib.roundUp(Lib.mod(x2,1),tickset,axrev);return Math.floor(x2)+Math.log(d3.round(Math.pow(10,frac),1))/Math.LN10;}else throw'unrecognized dtick '+String(dtick);};// calculate the first tick on an axis\naxes.tickFirst=function(ax){var r2l=ax.r2l||Number;var rng=Lib.simpleMap(ax.range,r2l);var axrev=rng[1]<rng[0];var sRound=axrev?Math.floor:Math.ceil;// add a tiny extra bit to make sure we get ticks\n// that may have been rounded out\nvar r0=rng[0]*1.0001-rng[1]*0.0001;var dtick=ax.dtick;var tick0=r2l(ax.tick0);if(isNumeric(dtick)){var tmin=sRound((r0-tick0)/dtick)*dtick+tick0;// make sure no ticks outside the category list\nif(ax.type==='category'||ax.type==='multicategory'){tmin=Lib.constrain(tmin,0,ax._categories.length-1);}return tmin;}var tType=dtick.charAt(0);var dtNum=Number(dtick.substr(1));// Dates: months (or years)\nif(tType==='M'){var cnt=0;var t0=tick0;var t1,mult,newDTick;// This algorithm should work for *any* nonlinear (but close to linear!)\n// tick spacing. Limit to 10 iterations, for gregorian months it's normally <=3.\nwhile(cnt<10){t1=axes.tickIncrement(t0,dtick,axrev,ax.calendar);if((t1-r0)*(t0-r0)<=0){// t1 and t0 are on opposite sides of r0! we've succeeded!\nif(axrev)return Math.min(t0,t1);return Math.max(t0,t1);}mult=(r0-(t0+t1)/2)/(t1-t0);newDTick=tType+(Math.abs(Math.round(mult))||1)*dtNum;t0=axes.tickIncrement(t0,newDTick,mult<0?!axrev:axrev,ax.calendar);cnt++;}Lib.error('tickFirst did not converge',ax);return t0;}// Log scales: Linear, Digits\nelse if(tType==='L'){return Math.log(sRound((Math.pow(10,r0)-tick0)/dtNum)*dtNum+tick0)/Math.LN10;}else if(tType==='D'){var tickset=dtick==='D2'?roundLog2:roundLog1;var frac=Lib.roundUp(Lib.mod(r0,1),tickset,axrev);return Math.floor(r0)+Math.log(d3.round(Math.pow(10,frac),1))/Math.LN10;}else throw'unrecognized dtick '+String(dtick);};// draw the text for one tick.\n// px,py are the location on gd.paper\n// prefix is there so the x axis ticks can be dropped a line\n// ax is the axis layout, x is the tick value\n// hover is a (truthy) flag for whether to show numbers with a bit\n// more precision for hovertext\naxes.tickText=function(ax,x,hover){var out=tickTextObj(ax,x);var arrayMode=ax.tickmode==='array';var extraPrecision=hover||arrayMode;var axType=ax.type;// TODO multicategory, if we allow ticktext / tickvals\nvar tickVal2l=axType==='category'?ax.d2l_noadd:ax.d2l;var i;if(arrayMode&&Array.isArray(ax.ticktext)){var rng=Lib.simpleMap(ax.range,ax.r2l);var minDiff=Math.abs(rng[1]-rng[0])/10000;for(i=0;i<ax.ticktext.length;i++){if(Math.abs(x-tickVal2l(ax.tickvals[i]))<minDiff)break;}if(i<ax.ticktext.length){out.text=String(ax.ticktext[i]);return out;}}function isHidden(showAttr){if(showAttr===undefined)return true;if(hover)return showAttr==='none';var firstOrLast={first:ax._tmin,last:ax._tmax}[showAttr];return showAttr!=='all'&&x!==firstOrLast;}var hideexp=hover?'never':ax.exponentformat!=='none'&&isHidden(ax.showexponent)?'hide':'';if(axType==='date')formatDate(ax,out,hover,extraPrecision);else if(axType==='log')formatLog(ax,out,hover,extraPrecision,hideexp);else if(axType==='category')formatCategory(ax,out);else if(axType==='multicategory')formatMultiCategory(ax,out,hover);else if(isAngular(ax))formatAngle(ax,out,hover,extraPrecision,hideexp);else formatLinear(ax,out,hover,extraPrecision,hideexp);// add prefix and suffix\nif(ax.tickprefix&&!isHidden(ax.showtickprefix))out.text=ax.tickprefix+out.text;if(ax.ticksuffix&&!isHidden(ax.showticksuffix))out.text+=ax.ticksuffix;// Setup ticks and grid lines boundaries\n// at 1/2 a 'category' to the left/bottom\nif(ax.tickson==='boundaries'||ax.showdividers){var inbounds=function inbounds(v){var p=ax.l2p(v);return p>=0&&p<=ax._length?v:null;};out.xbnd=[inbounds(out.x-0.5),inbounds(out.x+ax.dtick-0.5)];}return out;};/**\n * create text for a hover label on this axis, with special handling of\n * log axes (where negative values can't be displayed but can appear in hover text)\n *\n * @param {object} ax: the axis to format text for\n * @param {number} val: calcdata value to format\n * @param {Optional(number)} val2: a second value to display\n *\n * @returns {string} `val` formatted as a string appropriate to this axis, or\n *     `val` and `val2` as a range (ie '<val> - <val2>') if `val2` is provided and\n *     it's different from `val`.\n */axes.hoverLabelText=function(ax,val,val2){if(val2!==BADNUM&&val2!==val){return axes.hoverLabelText(ax,val)+' - '+axes.hoverLabelText(ax,val2);}var logOffScale=ax.type==='log'&&val<=0;var tx=axes.tickText(ax,ax.c2l(logOffScale?-val:val),'hover').text;if(logOffScale){return val===0?'0':MINUS_SIGN+tx;}// TODO: should we do something special if the axis calendar and\n// the data calendar are different? Somehow display both dates with\n// their system names? Right now it will just display in the axis calendar\n// but users could add the other one as text.\nreturn tx;};function tickTextObj(ax,x,text){var tf=ax.tickfont||{};return{x:x,dx:0,dy:0,text:text||'',fontSize:tf.size,font:tf.family,fontColor:tf.color};}function formatDate(ax,out,hover,extraPrecision){var tr=ax._tickround;var fmt=hover&&ax.hoverformat||axes.getTickFormat(ax);if(extraPrecision){// second or sub-second precision: extra always shows max digits.\n// for other fields, extra precision just adds one field.\nif(isNumeric(tr))tr=4;else tr={y:'m',m:'d',d:'M',M:'S',S:4}[tr];}var dateStr=Lib.formatDate(out.x,fmt,tr,ax._dateFormat,ax.calendar,ax._extraFormat);var headStr;var splitIndex=dateStr.indexOf('\\n');if(splitIndex!==-1){headStr=dateStr.substr(splitIndex+1);dateStr=dateStr.substr(0,splitIndex);}if(extraPrecision){// if extraPrecision led to trailing zeros, strip them off\n// actually, this can lead to removing even more zeros than\n// in the original rounding, but that's fine because in these\n// contexts uniformity is not so important (if there's even\n// anything to be uniform with!)\n// can we remove the whole time part?\nif(dateStr==='00:00:00'||dateStr==='00:00'){dateStr=headStr;headStr='';}else if(dateStr.length===8){// strip off seconds if they're zero (zero fractional seconds\n// are already omitted)\n// but we never remove minutes and leave just hours\ndateStr=dateStr.replace(/:00$/,'');}}if(headStr){if(hover){// hover puts it all on one line, so headPart works best up front\n// except for year headPart: turn this into \"Jan 1, 2000\" etc.\nif(tr==='d')dateStr+=', '+headStr;else dateStr=headStr+(dateStr?', '+dateStr:'');}else if(!ax._inCalcTicks||headStr!==ax._prevDateHead){dateStr+='<br>'+headStr;ax._prevDateHead=headStr;}}out.text=dateStr;}function formatLog(ax,out,hover,extraPrecision,hideexp){var dtick=ax.dtick;var x=out.x;var tickformat=ax.tickformat;var dtChar0=typeof dtick==='string'&&dtick.charAt(0);if(hideexp==='never'){// If this is a hover label, then we must *never* hide the exponent\n// for the sake of display, which could give the wrong value by\n// potentially many orders of magnitude. If hideexp was 'never', then\n// it's now succeeded by preventing the other condition from automating\n// this choice. Thus we can unset it so that the axis formatting takes\n// precedence.\nhideexp='';}if(extraPrecision&&dtChar0!=='L'){dtick='L3';dtChar0='L';}if(tickformat||dtChar0==='L'){out.text=numFormat(Math.pow(10,x),ax,hideexp,extraPrecision);}else if(isNumeric(dtick)||dtChar0==='D'&&Lib.mod(x+0.01,1)<0.1){var p=Math.round(x);var absP=Math.abs(p);var exponentFormat=ax.exponentformat;if(exponentFormat==='power'||isSIFormat(exponentFormat)&&beyondSI(p)){if(p===0)out.text=1;else if(p===1)out.text='10';else out.text='10<sup>'+(p>1?'':MINUS_SIGN)+absP+'</sup>';out.fontSize*=1.25;}else if((exponentFormat==='e'||exponentFormat==='E')&&absP>2){out.text='1'+exponentFormat+(p>0?'+':MINUS_SIGN)+absP;}else{out.text=numFormat(Math.pow(10,x),ax,'','fakehover');if(dtick==='D1'&&ax._id.charAt(0)==='y'){out.dy-=out.fontSize/6;}}}else if(dtChar0==='D'){out.text=String(Math.round(Math.pow(10,Lib.mod(x,1))));out.fontSize*=0.75;}else throw'unrecognized dtick '+String(dtick);// if 9's are printed on log scale, move the 10's away a bit\nif(ax.dtick==='D1'){var firstChar=String(out.text).charAt(0);if(firstChar==='0'||firstChar==='1'){if(ax._id.charAt(0)==='y'){out.dx-=out.fontSize/4;}else{out.dy+=out.fontSize/2;out.dx+=(ax.range[1]>ax.range[0]?1:-1)*out.fontSize*(x<0?0.5:0.25);}}}}function formatCategory(ax,out){var tt=ax._categories[Math.round(out.x)];if(tt===undefined)tt='';out.text=String(tt);}function formatMultiCategory(ax,out,hover){var v=Math.round(out.x);var cats=ax._categories[v]||[];var tt=cats[1]===undefined?'':String(cats[1]);var tt2=cats[0]===undefined?'':String(cats[0]);if(hover){// TODO is this what we want?\nout.text=tt2+' - '+tt;}else{// setup for secondary labels\nout.text=tt;out.text2=tt2;}}function formatLinear(ax,out,hover,extraPrecision,hideexp){if(hideexp==='never'){// If this is a hover label, then we must *never* hide the exponent\n// for the sake of display, which could give the wrong value by\n// potentially many orders of magnitude. If hideexp was 'never', then\n// it's now succeeded by preventing the other condition from automating\n// this choice. Thus we can unset it so that the axis formatting takes\n// precedence.\nhideexp='';}else if(ax.showexponent==='all'&&Math.abs(out.x/ax.dtick)<1e-6){// don't add an exponent to zero if we're showing all exponents\n// so the only reason you'd show an exponent on zero is if it's the\n// ONLY tick to get an exponent (first or last)\nhideexp='hide';}out.text=numFormat(out.x,ax,hideexp,extraPrecision);}function formatAngle(ax,out,hover,extraPrecision,hideexp){if(ax.thetaunit==='radians'&&!hover){var num=out.x/180;if(num===0){out.text='0';}else{var frac=num2frac(num);if(frac[1]>=100){out.text=numFormat(Lib.deg2rad(out.x),ax,hideexp,extraPrecision);}else{var isNeg=out.x<0;if(frac[1]===1){if(frac[0]===1)out.text='π';else out.text=frac[0]+'π';}else{out.text=['<sup>',frac[0],'</sup>','⁄','<sub>',frac[1],'</sub>','π'].join('');}if(isNeg)out.text=MINUS_SIGN+out.text;}}}else{out.text=numFormat(out.x,ax,hideexp,extraPrecision);}}// inspired by\n// https://github.com/yisibl/num2fraction/blob/master/index.js\nfunction num2frac(num){function almostEq(a,b){return Math.abs(a-b)<=1e-6;}function findGCD(a,b){return almostEq(b,0)?a:findGCD(b,a%b);}function findPrecision(n){var e=1;while(!almostEq(Math.round(n*e)/e,n)){e*=10;}return e;}var precision=findPrecision(num);var number=num*precision;var gcd=Math.abs(findGCD(number,precision));return[// numerator\nMath.round(number/gcd),// denominator\nMath.round(precision/gcd)];}// format a number (tick value) according to the axis settings\n// new, more reliable procedure than d3.round or similar:\n// add half the rounding increment, then stringify and truncate\n// also automatically switch to sci. notation\nvar SIPREFIXES=['f','p','n','μ','m','','k','M','G','T'];function isSIFormat(exponentFormat){return exponentFormat==='SI'||exponentFormat==='B';}// are we beyond the range of common SI prefixes?\n// 10^-16 -> 1x10^-16\n// 10^-15 -> 1f\n// ...\n// 10^14 -> 100T\n// 10^15 -> 1x10^15\n// 10^16 -> 1x10^16\nfunction beyondSI(exponent){return exponent>14||exponent<-15;}function numFormat(v,ax,fmtoverride,hover){var isNeg=v<0;// max number of digits past decimal point to show\nvar tickRound=ax._tickround;var exponentFormat=fmtoverride||ax.exponentformat||'B';var exponent=ax._tickexponent;var tickformat=axes.getTickFormat(ax);var separatethousands=ax.separatethousands;// special case for hover: set exponent just for this value, and\n// add a couple more digits of precision over tick labels\nif(hover){// make a dummy axis obj to get the auto rounding and exponent\nvar ah={exponentformat:exponentFormat,dtick:ax.showexponent==='none'?ax.dtick:isNumeric(v)?Math.abs(v)||1:1,// if not showing any exponents, don't change the exponent\n// from what we calculate\nrange:ax.showexponent==='none'?ax.range.map(ax.r2d):[0,v||1]};autoTickRound(ah);tickRound=(Number(ah._tickround)||0)+4;exponent=ah._tickexponent;if(ax.hoverformat)tickformat=ax.hoverformat;}if(tickformat)return ax._numFormat(tickformat)(v).replace(/-/g,MINUS_SIGN);// 'epsilon' - rounding increment\nvar e=Math.pow(10,-tickRound)/2;// exponentFormat codes:\n// 'e' (1.2e+6, default)\n// 'E' (1.2E+6)\n// 'SI' (1.2M)\n// 'B' (same as SI except 10^9=B not G)\n// 'none' (1200000)\n// 'power' (1.2x10^6)\n// 'hide' (1.2, use 3rd argument=='hide' to eg\n//      only show exponent on last tick)\nif(exponentFormat==='none')exponent=0;// take the sign out, put it back manually at the end\n// - makes cases easier\nv=Math.abs(v);if(v<e){// 0 is just 0, but may get exponent if it's the last tick\nv='0';isNeg=false;}else{v+=e;// take out a common exponent, if any\nif(exponent){v*=Math.pow(10,-exponent);tickRound+=exponent;}// round the mantissa\nif(tickRound===0)v=String(Math.floor(v));else if(tickRound<0){v=String(Math.round(v));v=v.substr(0,v.length+tickRound);for(var i=tickRound;i<0;i++){v+='0';}}else{v=String(v);var dp=v.indexOf('.')+1;if(dp)v=v.substr(0,dp+tickRound).replace(/\\.?0+$/,'');}// insert appropriate decimal point and thousands separator\nv=Lib.numSeparate(v,ax._separators,separatethousands);}// add exponent\nif(exponent&&exponentFormat!=='hide'){if(isSIFormat(exponentFormat)&&beyondSI(exponent))exponentFormat='power';var signedExponent;if(exponent<0)signedExponent=MINUS_SIGN+-exponent;else if(exponentFormat!=='power')signedExponent='+'+exponent;else signedExponent=String(exponent);if(exponentFormat==='e'||exponentFormat==='E'){v+=exponentFormat+signedExponent;}else if(exponentFormat==='power'){v+='×10<sup>'+signedExponent+'</sup>';}else if(exponentFormat==='B'&&exponent===9){v+='B';}else if(isSIFormat(exponentFormat)){v+=SIPREFIXES[exponent/3+5];}}// put sign back in and return\n// replace standard minus character (which is technically a hyphen)\n// with a true minus sign\nif(isNeg)return MINUS_SIGN+v;return v;}axes.getTickFormat=function(ax){var i;function convertToMs(dtick){return typeof dtick!=='string'?dtick:Number(dtick.replace('M',''))*ONEAVGMONTH;}function compareLogTicks(left,right){var priority=['L','D'];if(_typeof(left)===_typeof(right)){if(typeof left==='number'){return left-right;}else{var leftPriority=priority.indexOf(left.charAt(0));var rightPriority=priority.indexOf(right.charAt(0));if(leftPriority===rightPriority){return Number(left.replace(/(L|D)/g,''))-Number(right.replace(/(L|D)/g,''));}else{return leftPriority-rightPriority;}}}else{return typeof left==='number'?1:-1;}}function isProperStop(dtick,range,convert){var convertFn=convert||function(x){return x;};var leftDtick=range[0];var rightDtick=range[1];return(!leftDtick&&typeof leftDtick!=='number'||convertFn(leftDtick)<=convertFn(dtick))&&(!rightDtick&&typeof rightDtick!=='number'||convertFn(rightDtick)>=convertFn(dtick));}function isProperLogStop(dtick,range){var isLeftDtickNull=range[0]===null;var isRightDtickNull=range[1]===null;var isDtickInRangeLeft=compareLogTicks(dtick,range[0])>=0;var isDtickInRangeRight=compareLogTicks(dtick,range[1])<=0;return(isLeftDtickNull||isDtickInRangeLeft)&&(isRightDtickNull||isDtickInRangeRight);}var tickstop,stopi;if(ax.tickformatstops&&ax.tickformatstops.length>0){switch(ax.type){case'date':case'linear':{for(i=0;i<ax.tickformatstops.length;i++){stopi=ax.tickformatstops[i];if(stopi.enabled&&isProperStop(ax.dtick,stopi.dtickrange,convertToMs)){tickstop=stopi;break;}}break;}case'log':{for(i=0;i<ax.tickformatstops.length;i++){stopi=ax.tickformatstops[i];if(stopi.enabled&&isProperLogStop(ax.dtick,stopi.dtickrange)){tickstop=stopi;break;}}break;}default:}}return tickstop?tickstop.value:ax.tickformat;};// getSubplots - extract all subplot IDs we need\n// as an array of items like 'xy', 'x2y', 'x2y2'...\n// sorted by x (x,x2,x3...) then y\n// optionally restrict to only subplots containing axis object ax\n//\n// NOTE: this is currently only used OUTSIDE plotly.js (toolpanel, webapp)\n// ideally we get rid of it there (or just copy this there) and remove it here\naxes.getSubplots=function(gd,ax){var subplotObj=gd._fullLayout._subplots;var allSubplots=subplotObj.cartesian.concat(subplotObj.gl2d||[]);var out=ax?axes.findSubplotsWithAxis(allSubplots,ax):allSubplots;out.sort(function(a,b){var aParts=a.substr(1).split('y');var bParts=b.substr(1).split('y');if(aParts[0]===bParts[0])return+aParts[1]-+bParts[1];return+aParts[0]-+bParts[0];});return out;};// find all subplots with axis 'ax'\n// NOTE: this is only used in axes.getSubplots (only used outside plotly.js) and\n// gl2d/convert (where it restricts axis subplots to only those with gl2d)\naxes.findSubplotsWithAxis=function(subplots,ax){var axMatch=new RegExp(ax._id.charAt(0)==='x'?'^'+ax._id+'y':ax._id+'$');var subplotsWithAx=[];for(var i=0;i<subplots.length;i++){var sp=subplots[i];if(axMatch.test(sp))subplotsWithAx.push(sp);}return subplotsWithAx;};// makeClipPaths: prepare clipPaths for all single axes and all possible xy pairings\naxes.makeClipPaths=function(gd){var fullLayout=gd._fullLayout;// for more info: https://github.com/plotly/plotly.js/issues/2595\nif(fullLayout._hasOnlyLargeSploms)return;var fullWidth={_offset:0,_length:fullLayout.width,_id:''};var fullHeight={_offset:0,_length:fullLayout.height,_id:''};var xaList=axes.list(gd,'x',true);var yaList=axes.list(gd,'y',true);var clipList=[];var i,j;for(i=0;i<xaList.length;i++){clipList.push({x:xaList[i],y:fullHeight});for(j=0;j<yaList.length;j++){if(i===0)clipList.push({x:fullWidth,y:yaList[j]});clipList.push({x:xaList[i],y:yaList[j]});}}// selectors don't work right with camelCase tags,\n// have to use class instead\n// https://groups.google.com/forum/#!topic/d3-js/6EpAzQ2gU9I\nvar axClips=fullLayout._clips.selectAll('.axesclip').data(clipList,function(d){return d.x._id+d.y._id;});axClips.enter().append('clipPath').classed('axesclip',true).attr('id',function(d){return'clip'+fullLayout._uid+d.x._id+d.y._id;}).append('rect');axClips.exit().remove();axClips.each(function(d){d3.select(this).select('rect').attr({x:d.x._offset||0,y:d.y._offset||0,width:d.x._length||1,height:d.y._length||1});});};/**\n * Main multi-axis drawing routine!\n *\n * @param {DOM element} gd : graph div\n * @param {string or array of strings} arg : polymorphic argument\n * @param {object} opts:\n * - @param {boolean} skipTitle : optional flag to skip axis title draw/update\n *\n * Signature 1: Axes.draw(gd, 'redraw')\n *   use this to clear and redraw all axes on graph\n *\n * Signature 2: Axes.draw(gd, '')\n *   use this to draw all axes on graph w/o the selectAll().remove()\n *   of the 'redraw' signature\n *\n * Signature 3: Axes.draw(gd, [axId, axId2, ...])\n *   where the items are axis id string,\n *   use this to update multiple axes in one call\n *\n * N.B draw updates:\n * - ax._r (stored range for use by zoom/pan)\n * - ax._rl (stored linearized range for use by zoom/pan)\n */axes.draw=function(gd,arg,opts){var fullLayout=gd._fullLayout;if(arg==='redraw'){fullLayout._paper.selectAll('g.subplot').each(function(d){var id=d[0];var plotinfo=fullLayout._plots[id];var xa=plotinfo.xaxis;var ya=plotinfo.yaxis;plotinfo.xaxislayer.selectAll('.'+xa._id+'tick').remove();plotinfo.yaxislayer.selectAll('.'+ya._id+'tick').remove();plotinfo.xaxislayer.selectAll('.'+xa._id+'tick2').remove();plotinfo.yaxislayer.selectAll('.'+ya._id+'tick2').remove();plotinfo.xaxislayer.selectAll('.'+xa._id+'divider').remove();plotinfo.yaxislayer.selectAll('.'+ya._id+'divider').remove();if(plotinfo.gridlayer)plotinfo.gridlayer.selectAll('path').remove();if(plotinfo.zerolinelayer)plotinfo.zerolinelayer.selectAll('path').remove();fullLayout._infolayer.select('.g-'+xa._id+'title').remove();fullLayout._infolayer.select('.g-'+ya._id+'title').remove();});}var axList=!arg||arg==='redraw'?axes.listIds(gd):arg;return Lib.syncOrAsync(axList.map(function(axId){return function(){if(!axId)return;var ax=axes.getFromId(gd,axId);var axDone=axes.drawOne(gd,ax,opts);ax._r=ax.range.slice();ax._rl=Lib.simpleMap(ax._r,ax.r2l);return axDone;};}));};/**\n * Draw one cartesian axis\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n * @param {object} opts\n * - @param {boolean} skipTitle (set to true to skip axis title draw call)\n */axes.drawOne=function(gd,ax,opts){opts=opts||{};var i,sp,plotinfo;ax.setScale();var fullLayout=gd._fullLayout;var axId=ax._id;var axLetter=axId.charAt(0);var counterLetter=axes.counterLetter(axId);var mainSubplot=ax._mainSubplot;var mainLinePosition=ax._mainLinePosition;var mainMirrorPosition=ax._mainMirrorPosition;var mainPlotinfo=fullLayout._plots[mainSubplot];var mainAxLayer=mainPlotinfo[axLetter+'axislayer'];var subplotsWithAx=ax._subplotsWith;var vals=ax._vals=axes.calcTicks(ax);// Add a couple of axis properties that should cause us to recreate\n// elements. Used in d3 data function.\nvar axInfo=[ax.mirror,mainLinePosition,mainMirrorPosition].join('_');for(i=0;i<vals.length;i++){vals[i].axInfo=axInfo;}if(!ax.visible)return;// stash selections to avoid DOM queries e.g.\n// - stash tickLabels selection, so that drawTitle can use it to scoot title\nax._selections={};// stash tick angle (including the computed 'auto' values) per tick-label class\nax._tickAngles={};var transFn=axes.makeTransFn(ax);var tickVals;// We remove zero lines, grid lines, and inside ticks if they're within 1px of the end\n// The key case here is removing zero lines when the axis bound is zero\nvar valsClipped;if(ax.tickson==='boundaries'){var boundaryVals=getBoundaryVals(ax,vals);valsClipped=axes.clipEnds(ax,boundaryVals);tickVals=ax.ticks==='inside'?valsClipped:boundaryVals;}else{valsClipped=axes.clipEnds(ax,vals);tickVals=ax.ticks==='inside'?valsClipped:vals;}var gridVals=ax._gridVals=valsClipped;var dividerVals=getDividerVals(ax,vals);if(!fullLayout._hasOnlyLargeSploms){// keep track of which subplots (by main conteraxis) we've already\n// drawn grids for, so we don't overdraw overlaying subplots\nvar finishedGrids={};for(i=0;i<subplotsWithAx.length;i++){sp=subplotsWithAx[i];plotinfo=fullLayout._plots[sp];var counterAxis=plotinfo[counterLetter+'axis'];var mainCounterID=counterAxis._mainAxis._id;if(finishedGrids[mainCounterID])continue;finishedGrids[mainCounterID]=1;var gridPath=axLetter==='x'?'M0,'+counterAxis._offset+'v'+counterAxis._length:'M'+counterAxis._offset+',0h'+counterAxis._length;axes.drawGrid(gd,ax,{vals:gridVals,counterAxis:counterAxis,layer:plotinfo.gridlayer.select('.'+axId),path:gridPath,transFn:transFn});axes.drawZeroLine(gd,ax,{counterAxis:counterAxis,layer:plotinfo.zerolinelayer,path:gridPath,transFn:transFn});}}var tickSigns=axes.getTickSigns(ax);var tickSubplots=[];if(ax.ticks){var mainTickPath=axes.makeTickPath(ax,mainLinePosition,tickSigns[2]);var mirrorTickPath;var fullTickPath;if(ax._anchorAxis&&ax.mirror&&ax.mirror!==true){mirrorTickPath=axes.makeTickPath(ax,mainMirrorPosition,tickSigns[3]);fullTickPath=mainTickPath+mirrorTickPath;}else{mirrorTickPath='';fullTickPath=mainTickPath;}var tickPath;if(ax.showdividers&&ax.ticks==='outside'&&ax.tickson==='boundaries'){var dividerLookup={};for(i=0;i<dividerVals.length;i++){dividerLookup[dividerVals[i].x]=1;}tickPath=function tickPath(d){return dividerLookup[d.x]?mirrorTickPath:fullTickPath;};}else{tickPath=fullTickPath;}axes.drawTicks(gd,ax,{vals:tickVals,layer:mainAxLayer,path:tickPath,transFn:transFn});tickSubplots=Object.keys(ax._linepositions||{});}for(i=0;i<tickSubplots.length;i++){sp=tickSubplots[i];plotinfo=fullLayout._plots[sp];// [bottom or left, top or right], free and main are handled above\nvar linepositions=ax._linepositions[sp]||[];var spTickPath=axes.makeTickPath(ax,linepositions[0],tickSigns[0])+axes.makeTickPath(ax,linepositions[1],tickSigns[1]);axes.drawTicks(gd,ax,{vals:tickVals,layer:plotinfo[axLetter+'axislayer'],path:spTickPath,transFn:transFn});}var seq=[];// tick labels - for now just the main labels.\n// TODO: mirror labels, esp for subplots\nseq.push(function(){var labelFns=axes.makeLabelFns(ax,mainLinePosition);return axes.drawLabels(gd,ax,{vals:vals,layer:mainAxLayer,transFn:transFn,labelXFn:labelFns.labelXFn,labelYFn:labelFns.labelYFn,labelAnchorFn:labelFns.labelAnchorFn});});if(ax.type==='multicategory'){var labelLength=0;var pad={x:2,y:10}[axLetter];var sgn=tickSigns[2]*(ax.ticks==='inside'?-1:1);seq.push(function(){labelLength+=getLabelLevelSpan(ax,axId+'tick')+pad;labelLength+=ax._tickAngles[axId+'tick']?ax.tickfont.size*LINE_SPACING:0;var secondaryPosition=mainLinePosition+labelLength*sgn;var secondaryLabelFns=axes.makeLabelFns(ax,secondaryPosition);return axes.drawLabels(gd,ax,{vals:getSecondaryLabelVals(ax,vals),layer:mainAxLayer,cls:axId+'tick2',repositionOnUpdate:true,secondary:true,transFn:transFn,labelXFn:secondaryLabelFns.labelXFn,labelYFn:secondaryLabelFns.labelYFn,labelAnchorFn:secondaryLabelFns.labelAnchorFn});});seq.push(function(){labelLength+=getLabelLevelSpan(ax,axId+'tick2');ax._labelLength=labelLength;return drawDividers(gd,ax,{vals:dividerVals,layer:mainAxLayer,path:axes.makeTickPath(ax,mainLinePosition,sgn,labelLength),transFn:transFn});});}function extendRange(range,newRange){range[0]=Math.min(range[0],newRange[0]);range[1]=Math.max(range[1],newRange[1]);}function calcBoundingBox(){if(ax.showticklabels){var gdBB=gd.getBoundingClientRect();var bBox=mainAxLayer.node().getBoundingClientRect();/*\n             * the way we're going to use this, the positioning that matters\n             * is relative to the origin of gd. This is important particularly\n             * if gd is scrollable, and may have been scrolled between the time\n             * we calculate this and the time we use it\n             */ax._boundingBox={width:bBox.width,height:bBox.height,left:bBox.left-gdBB.left,right:bBox.right-gdBB.left,top:bBox.top-gdBB.top,bottom:bBox.bottom-gdBB.top};}else{var gs=fullLayout._size;var pos;// set dummy bbox for ticklabel-less axes\nif(axLetter==='x'){pos=ax.anchor==='free'?gs.t+gs.h*(1-ax.position):gs.t+gs.h*(1-ax._anchorAxis.domain[{bottom:0,top:1}[ax.side]]);ax._boundingBox={top:pos,bottom:pos,left:ax._offset,right:ax._offset+ax._length,width:ax._length,height:0};}else{pos=ax.anchor==='free'?gs.l+gs.w*ax.position:gs.l+gs.w*ax._anchorAxis.domain[{left:0,right:1}[ax.side]];ax._boundingBox={left:pos,right:pos,bottom:ax._offset+ax._length,top:ax._offset,height:ax._length,width:0};}}/*\n         * for spikelines: what's the full domain of positions in the\n         * opposite direction that are associated with this axis?\n         * This means any axes that we make a subplot with, plus the\n         * position of the axis itself if it's free.\n         */if(subplotsWithAx){var fullRange=ax._counterSpan=[Infinity,-Infinity];for(var i=0;i<subplotsWithAx.length;i++){var plotinfo=fullLayout._plots[subplotsWithAx[i]];var counterAxis=plotinfo[axLetter==='x'?'yaxis':'xaxis'];extendRange(fullRange,[counterAxis._offset,counterAxis._offset+counterAxis._length]);}if(ax.anchor==='free'){extendRange(fullRange,axLetter==='x'?[ax._boundingBox.bottom,ax._boundingBox.top]:[ax._boundingBox.right,ax._boundingBox.left]);}}}var hasRangeSlider=Registry.getComponentMethod('rangeslider','isVisible')(ax);function doAutoMargins(){var push,rangeSliderPush;if(hasRangeSlider){rangeSliderPush=Registry.getComponentMethod('rangeslider','autoMarginOpts')(gd,ax);}Plots.autoMargin(gd,rangeSliderAutoMarginID(ax),rangeSliderPush);var s=ax.side.charAt(0);if(ax.automargin&&(!hasRangeSlider||s!=='b')){push={x:0,y:0,r:0,l:0,t:0,b:0};if(axLetter==='x'){push.y=ax.anchor==='free'?ax.position:ax._anchorAxis.domain[s==='t'?1:0];push[s]+=ax._boundingBox.height;}else{push.x=ax.anchor==='free'?ax.position:ax._anchorAxis.domain[s==='r'?1:0];push[s]+=ax._boundingBox.width;}if(ax.title.text!==fullLayout._dfltTitle[axLetter]){push[s]+=ax.title.font.size;}}Plots.autoMargin(gd,axAutoMarginID(ax),push);}seq.push(calcBoundingBox,doAutoMargins);if(!opts.skipTitle&&!(hasRangeSlider&&ax._boundingBox&&ax.side==='bottom')){seq.push(function(){return drawTitle(gd,ax);});}return Lib.syncOrAsync(seq);};function getBoundaryVals(ax,vals){var out=[];var i;// boundaryVals are never used for labels;\n// no need to worry about the other tickTextObj keys\nvar _push=function _push(d,bndIndex){var xb=d.xbnd[bndIndex];if(xb!==null){out.push(Lib.extendFlat({},d,{x:xb}));}};if(vals.length){for(i=0;i<vals.length;i++){_push(vals[i],0);}_push(vals[i-1],1);}return out;}function getSecondaryLabelVals(ax,vals){var out=[];var lookup={};for(var i=0;i<vals.length;i++){var d=vals[i];if(lookup[d.text2]){lookup[d.text2].push(d.x);}else{lookup[d.text2]=[d.x];}}for(var k in lookup){out.push(tickTextObj(ax,Lib.interp(lookup[k],0.5),k));}return out;}function getDividerVals(ax,vals){var out=[];var i,current;// never used for labels;\n// no need to worry about the other tickTextObj keys\nvar _push=function _push(d,bndIndex){var xb=d.xbnd[bndIndex];if(xb!==null){out.push(Lib.extendFlat({},d,{x:xb}));}};if(ax.showdividers&&vals.length){for(i=0;i<vals.length;i++){var d=vals[i];if(d.text2!==current){_push(d,0);}current=d.text2;}_push(vals[i-1],1);}return out;}function getLabelLevelSpan(ax,cls){var axLetter=ax._id.charAt(0);var angle=ax._tickAngles[cls]||0;var rad=Lib.deg2rad(angle);var sinA=Math.sin(rad);var cosA=Math.cos(rad);var maxX=0;var maxY=0;// N.B. Drawing.bBox does not take into account rotate transforms\nax._selections[cls].each(function(){var thisLabel=selectTickLabel(this);var bb=Drawing.bBox(thisLabel.node());var w=bb.width;var h=bb.height;maxX=Math.max(maxX,cosA*w,sinA*h);maxY=Math.max(maxY,sinA*w,cosA*h);});return{x:maxY,y:maxX}[axLetter];}/**\n * Which direction do the 'ax.side' values, and free ticks go?\n *\n * @param {object} ax (full) axis object\n *  - {string} _id (starting with 'x' or 'y')\n *  - {string} side\n *  - {string} ticks\n * @return {array} all entries are either -1 or 1\n *  - [0]: sign for top/right ticks (i.e. negative SVG direction)\n *  - [1]: sign for bottom/left ticks (i.e. positive SVG direction)\n *  - [2]: sign for ticks corresponding to 'ax.side'\n *  - [3]: sign for ticks mirroring 'ax.side'\n */axes.getTickSigns=function(ax){var axLetter=ax._id.charAt(0);var sideOpposite={x:'top',y:'right'}[axLetter];var main=ax.side===sideOpposite?1:-1;var out=[-1,1,main,-main];// then we flip if outside XOR y axis\nif(ax.ticks!=='inside'===(axLetter==='x')){out=out.map(function(v){return-v;});}return out;};/**\n * Make axis translate transform function\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {number} _offset\n *  - {fn} l2p\n * @return {fn} function of calcTicks items\n */axes.makeTransFn=function(ax){var axLetter=ax._id.charAt(0);var offset=ax._offset;return axLetter==='x'?function(d){return'translate('+(offset+ax.l2p(d.x))+',0)';}:function(d){return'translate(0,'+(offset+ax.l2p(d.x))+')';};};/**\n * Make axis tick path string\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {number} ticklen\n *  - {number} linewidth\n * @param {number} shift along direction of ticklen\n * @param {1 or -1} sng tick sign\n * @param {number (optional)} len tick length\n * @return {string}\n */axes.makeTickPath=function(ax,shift,sgn,len){len=len!==undefined?len:ax.ticklen;var axLetter=ax._id.charAt(0);var pad=(ax.linewidth||1)/2;return axLetter==='x'?'M0,'+(shift+pad*sgn)+'v'+len*sgn:'M'+(shift+pad*sgn)+',0h'+len*sgn;};/**\n * Make axis tick label x, y and anchor functions\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} ticks\n *  - {number} ticklen\n *  - {string} side\n *  - {number} linewidth\n *  - {number} tickfont.size\n *  - {boolean} showline\n * @param {number} shift\n * @param {number} angle [in degrees] ...\n * @return {object}\n *  - {fn} labelXFn\n *  - {fn} labelYFn\n *  - {fn} labelAnchorFn\n *  - {number} labelStandoff\n *  - {number} labelShift\n */axes.makeLabelFns=function(ax,shift,angle){var axLetter=ax._id.charAt(0);var pad=(ax.linewidth||1)/2;var ticksOnOutsideLabels=ax.tickson!=='boundaries'&&ax.ticks==='outside';var labelStandoff=ticksOnOutsideLabels?ax.ticklen:0;var labelShift=0;if(angle&&ax.ticks==='outside'){var rad=Lib.deg2rad(angle);labelStandoff=ax.ticklen*Math.cos(rad)+1;labelShift=ax.ticklen*Math.sin(rad);}if(ax.showticklabels&&(ticksOnOutsideLabels||ax.showline)){labelStandoff+=0.2*ax.tickfont.size;}// Used in polar angular label x/y functions\n// TODO generalize makeLabelFns so that it just work for angular axes\nvar out={labelStandoff:labelStandoff,labelShift:labelShift};var x0,y0,ff,flipIt;if(axLetter==='x'){flipIt=ax.side==='bottom'?1:-1;x0=labelShift*flipIt;y0=shift+(labelStandoff+pad)*flipIt;ff=ax.side==='bottom'?1:-0.2;out.labelXFn=function(d){return d.dx+x0;};out.labelYFn=function(d){return d.dy+y0+d.fontSize*ff;};out.labelAnchorFn=function(a){if(!isNumeric(a)||a===0||a===180){return'middle';}return a*flipIt<0?'end':'start';};}else if(axLetter==='y'){flipIt=ax.side==='right'?1:-1;x0=labelStandoff+pad;y0=-labelShift*flipIt;ff=Math.abs(ax.tickangle)===90?0.5:0;out.labelXFn=function(d){return d.dx+shift+(x0+d.fontSize*ff)*flipIt;};out.labelYFn=function(d){return d.dy+y0+d.fontSize*MID_SHIFT;};out.labelAnchorFn=function(a){if(isNumeric(a)&&Math.abs(a)===90){return'middle';}return ax.side==='right'?'start':'end';};}return out;};function tickDataFn(d){return[d.text,d.x,d.axInfo,d.font,d.fontSize,d.fontColor].join('_');}/**\n * Draw axis ticks\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} ticks\n *  - {number} linewidth\n *  - {string} tickcolor\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */axes.drawTicks=function(gd,ax,opts){opts=opts||{};var cls=ax._id+'tick';var ticks=opts.layer.selectAll('path.'+cls).data(ax.ticks?opts.vals:[],tickDataFn);ticks.exit().remove();ticks.enter().append('path').classed(cls,1).classed('ticks',1).classed('crisp',opts.crisp!==false).call(Color.stroke,ax.tickcolor).style('stroke-width',Drawing.crispRound(gd,ax.tickwidth,1)+'px').attr('d',opts.path);ticks.attr('transform',opts.transFn);};/**\n * Draw axis grid\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} showgrid\n *  - {string} gridcolor\n *  - {string} gridwidth\n *  - {boolean} zeroline\n *  - {string} type\n *  - {string} dtick\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {object} counterAxis (full axis object corresponding to counter axis)\n *     optional - only required if this axis supports zero lines\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */axes.drawGrid=function(gd,ax,opts){opts=opts||{};var cls=ax._id+'grid';var vals=opts.vals;var counterAx=opts.counterAxis;if(ax.showgrid===false){vals=[];}else if(counterAx&&axes.shouldShowZeroLine(gd,ax,counterAx)){var isArrayMode=ax.tickmode==='array';for(var i=0;i<vals.length;i++){var xi=vals[i].x;if(isArrayMode?!xi:Math.abs(xi)<ax.dtick/100){vals=vals.slice(0,i).concat(vals.slice(i+1));// In array mode you can in principle have multiple\n// ticks at 0, so test them all. Otherwise once we found\n// one we can stop.\nif(isArrayMode)i--;else break;}}}var grid=opts.layer.selectAll('path.'+cls).data(vals,tickDataFn);grid.exit().remove();grid.enter().append('path').classed(cls,1).classed('crisp',opts.crisp!==false);ax._gw=Drawing.crispRound(gd,ax.gridwidth,1);grid.attr('transform',opts.transFn).attr('d',opts.path).call(Color.stroke,ax.gridcolor||'#ddd').style('stroke-width',ax._gw+'px');if(typeof opts.path==='function')grid.attr('d',opts.path);};/**\n * Draw axis zero-line\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} zeroline\n *  - {number} zerolinewidth\n *  - {string} zerolinecolor\n *  - {number (optional)} _gridWidthCrispRound\n * @param {object} opts\n * - {d3 selection} layer\n * - {object} counterAxis (full axis object corresponding to counter axis)\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */axes.drawZeroLine=function(gd,ax,opts){opts=opts||opts;var cls=ax._id+'zl';var show=axes.shouldShowZeroLine(gd,ax,opts.counterAxis);var zl=opts.layer.selectAll('path.'+cls).data(show?[{x:0,id:ax._id}]:[]);zl.exit().remove();zl.enter().append('path').classed(cls,1).classed('zl',1).classed('crisp',opts.crisp!==false).each(function(){// use the fact that only one element can enter to trigger a sort.\n// If several zerolines enter at the same time we will sort once per,\n// but generally this should be a minimal overhead.\nopts.layer.selectAll('path').sort(function(da,db){return axisIds.idSort(da.id,db.id);});});zl.attr('transform',opts.transFn).attr('d',opts.path).call(Color.stroke,ax.zerolinecolor||Color.defaultLine).style('stroke-width',Drawing.crispRound(gd,ax.zerolinewidth,ax._gw||1)+'px');};/**\n * Draw axis tick labels\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} showticklabels\n *  - {number} tickangle\n *  - {object (optional)} _selections\n *  - {object} (optional)} _tickAngles\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {string (optional)} cls (node className)\n * - {boolean} repositionOnUpdate (set to true to reposition update selection)\n * - {boolean} secondary\n * - {fn} transFn\n * - {fn} labelXFn\n * - {fn} labelYFn\n * - {fn} labelAnchorFn\n */axes.drawLabels=function(gd,ax,opts){opts=opts||{};var axId=ax._id;var axLetter=axId.charAt(0);var cls=opts.cls||axId+'tick';var vals=opts.vals;var labelXFn=opts.labelXFn;var labelYFn=opts.labelYFn;var labelAnchorFn=opts.labelAnchorFn;var tickAngle=opts.secondary?0:ax.tickangle;var lastAngle=(ax._tickAngles||{})[cls];var tickLabels=opts.layer.selectAll('g.'+cls).data(ax.showticklabels?vals:[],tickDataFn);var labelsReady=[];tickLabels.enter().append('g').classed(cls,1).append('text')// only so tex has predictable alignment that we can\n// alter later\n.attr('text-anchor','middle').each(function(d){var thisLabel=d3.select(this);var newPromise=gd._promises.length;thisLabel.call(svgTextUtils.positionText,labelXFn(d),labelYFn(d)).call(Drawing.font,d.font,d.fontSize,d.fontColor).text(d.text).call(svgTextUtils.convertToTspans,gd);if(gd._promises[newPromise]){// if we have an async label, we'll deal with that\n// all here so take it out of gd._promises and\n// instead position the label and promise this in\n// labelsReady\nlabelsReady.push(gd._promises.pop().then(function(){positionLabels(thisLabel,tickAngle);}));}else{// sync label: just position it now.\npositionLabels(thisLabel,tickAngle);}});tickLabels.exit().remove();if(opts.repositionOnUpdate){tickLabels.each(function(d){d3.select(this).select('text').call(svgTextUtils.positionText,labelXFn(d),labelYFn(d));});}// How much to shift a multi-line label to center it vertically.\nfunction getAnchorHeight(lineCount,lineHeight,angle){var h=(lineCount-1)*lineHeight;if(axLetter==='x'){if(angle<-60||60<angle){return-0.5*h;}else if(ax.side==='top'){return-h;}}else{angle*=ax.side==='left'?1:-1;if(angle<-30){return-h;}else if(angle<30){return-0.5*h;}}return 0;}function positionLabels(s,angle){s.each(function(d){var thisLabel=d3.select(this);var mathjaxGroup=thisLabel.select('.text-math-group');var anchor=labelAnchorFn(angle,d);var transform=opts.transFn.call(thisLabel.node(),d)+(isNumeric(angle)&&+angle!==0?' rotate('+angle+','+labelXFn(d)+','+(labelYFn(d)-d.fontSize/2)+')':'');var anchorHeight=getAnchorHeight(svgTextUtils.lineCount(thisLabel),LINE_SPACING*d.fontSize,isNumeric(angle)?+angle:0);if(anchorHeight){transform+=' translate(0, '+anchorHeight+')';}if(mathjaxGroup.empty()){thisLabel.select('text').attr({transform:transform,'text-anchor':anchor});}else{var mjWidth=Drawing.bBox(mathjaxGroup.node()).width;var mjShift=mjWidth*{end:-0.5,start:0.5}[anchor];mathjaxGroup.attr('transform',transform+(mjShift?'translate('+mjShift+',0)':''));}});}// make sure all labels are correctly positioned at their base angle\n// the positionLabels call above is only for newly drawn labels.\n// do this without waiting, using the last calculated angle to\n// minimize flicker, then do it again when we know all labels are\n// there, putting back the prescribed angle to check for overlaps.\npositionLabels(tickLabels,lastAngle||tickAngle);function allLabelsReady(){return labelsReady.length&&Promise.all(labelsReady);}function fixLabelOverlaps(){positionLabels(tickLabels,tickAngle);var autoangle=null;// check for auto-angling if x labels overlap\n// don't auto-angle at all for log axes with\n// base and digit format\nif(vals.length&&axLetter==='x'&&!isNumeric(tickAngle)&&(ax.type!=='log'||String(ax.dtick).charAt(0)!=='D')){autoangle=0;var maxFontSize=0;var lbbArray=[];var i;tickLabels.each(function(d){maxFontSize=Math.max(maxFontSize,d.fontSize);var x=ax.l2p(d.x);var thisLabel=selectTickLabel(this);var bb=Drawing.bBox(thisLabel.node());lbbArray.push({// ignore about y, just deal with x overlaps\ntop:0,bottom:10,height:10,left:x-bb.width/2,// impose a 2px gap\nright:x+bb.width/2+2,width:bb.width+2});});if((ax.tickson==='boundaries'||ax.showdividers)&&!opts.secondary){var gap=2;if(ax.ticks)gap+=ax.tickwidth/2;// TODO should secondary labels also fall into this fix-overlap regime?\nfor(i=0;i<lbbArray.length;i++){var xbnd=vals[i].xbnd;var lbb=lbbArray[i];if(xbnd[0]!==null&&lbb.left-ax.l2p(xbnd[0])<gap||xbnd[1]!==null&&ax.l2p(xbnd[1])-lbb.right<gap){autoangle=90;break;}}}else{var vLen=vals.length;var tickSpacing=Math.abs((vals[vLen-1].x-vals[0].x)*ax._m)/(vLen-1);var rotate90=tickSpacing<maxFontSize*2.5||ax.type==='multicategory';// any overlap at all - set 30 degrees or 90 degrees\nfor(i=0;i<lbbArray.length-1;i++){if(Lib.bBoxIntersect(lbbArray[i],lbbArray[i+1])){autoangle=rotate90?90:30;break;}}}if(autoangle){positionLabels(tickLabels,autoangle);}}if(ax._tickAngles){ax._tickAngles[cls]=autoangle===null?isNumeric(tickAngle)?tickAngle:0:autoangle;}}if(ax._selections){ax._selections[cls]=tickLabels;}var done=Lib.syncOrAsync([allLabelsReady,fixLabelOverlaps]);if(done&&done.then)gd._promises.push(done);return done;};/**\n * Draw axis dividers\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} showdividers\n *  - {number} dividerwidth\n *  - {string} dividercolor\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {fn} path\n * - {fn} transFn\n */function drawDividers(gd,ax,opts){var cls=ax._id+'divider';var vals=opts.vals;var dividers=opts.layer.selectAll('path.'+cls).data(vals,tickDataFn);dividers.exit().remove();dividers.enter().insert('path',':first-child').classed(cls,1).classed('crisp',1).call(Color.stroke,ax.dividercolor).style('stroke-width',Drawing.crispRound(gd,ax.dividerwidth,1)+'px');dividers.attr('transform',opts.transFn).attr('d',opts.path);}function drawTitle(gd,ax){var fullLayout=gd._fullLayout;var axId=ax._id;var axLetter=axId.charAt(0);var gs=fullLayout._size;var fontSize=ax.title.font.size;var titleStandoff;if(ax.type==='multicategory'){titleStandoff=ax._labelLength;}else{var offsetBase=1.5;titleStandoff=10+fontSize*offsetBase+(ax.linewidth?ax.linewidth-1:0);}var transform,counterAxis,x,y;if(axLetter==='x'){counterAxis=ax.anchor==='free'?{_offset:gs.t+(1-(ax.position||0))*gs.h,_length:0}:axisIds.getFromId(gd,ax.anchor);x=ax._offset+ax._length/2;if(ax.side==='top'){y=-titleStandoff-fontSize*(ax.showticklabels?1:0);}else{y=counterAxis._length+titleStandoff+fontSize*(ax.showticklabels?1.5:0.5);}y+=counterAxis._offset;}else{counterAxis=ax.anchor==='free'?{_offset:gs.l+(ax.position||0)*gs.w,_length:0}:axisIds.getFromId(gd,ax.anchor);y=ax._offset+ax._length/2;if(ax.side==='right'){x=counterAxis._length+titleStandoff+fontSize*(ax.showticklabels?1:0.5);}else{x=-titleStandoff-fontSize*(ax.showticklabels?0.5:0);}x+=counterAxis._offset;transform={rotate:'-90',offset:0};}var avoid;if(ax.type!=='multicategory'){var tickLabels=ax._selections[ax._id+'tick'];avoid={selection:tickLabels,side:ax.side};if(tickLabels&&tickLabels.node()&&tickLabels.node().parentNode){var translation=Drawing.getTranslate(tickLabels.node().parentNode);avoid.offsetLeft=translation.x;avoid.offsetTop=translation.y;}}return Titles.draw(gd,axId+'title',{propContainer:ax,propName:ax._name+'.title.text',placeholder:fullLayout._dfltTitle[axLetter],avoid:avoid,transform:transform,attributes:{x:x,y:y,'text-anchor':'middle'}});}axes.shouldShowZeroLine=function(gd,ax,counterAxis){var rng=Lib.simpleMap(ax.range,ax.r2l);return rng[0]*rng[1]<=0&&ax.zeroline&&(ax.type==='linear'||ax.type==='-')&&ax._gridVals.length&&(clipEnds(ax,0)||!anyCounterAxLineAtZero(gd,ax,counterAxis,rng)||hasBarsOrFill(gd,ax));};axes.clipEnds=function(ax,vals){return vals.filter(function(d){return clipEnds(ax,d.x);});};function clipEnds(ax,l){var p=ax.l2p(l);return p>1&&p<ax._length-1;}function anyCounterAxLineAtZero(gd,ax,counterAxis,rng){var mainCounterAxis=counterAxis._mainAxis;if(!mainCounterAxis)return;var fullLayout=gd._fullLayout;var axLetter=ax._id.charAt(0);var counterLetter=axes.counterLetter(ax._id);var zeroPosition=ax._offset+(Math.abs(rng[0])<Math.abs(rng[1])===(axLetter==='x')?0:ax._length);function lineNearZero(ax2){if(!ax2.showline||!ax2.linewidth)return false;var tolerance=Math.max((ax2.linewidth+ax.zerolinewidth)/2,1);function closeEnough(pos2){return typeof pos2==='number'&&Math.abs(pos2-zeroPosition)<tolerance;}if(closeEnough(ax2._mainLinePosition)||closeEnough(ax2._mainMirrorPosition)){return true;}var linePositions=ax2._linepositions||{};for(var k in linePositions){if(closeEnough(linePositions[k][0])||closeEnough(linePositions[k][1])){return true;}}}var plotinfo=fullLayout._plots[counterAxis._mainSubplot];if(!(plotinfo.mainplotinfo||plotinfo).overlays.length){return lineNearZero(counterAxis,zeroPosition);}var counterLetterAxes=axes.list(gd,counterLetter);for(var i=0;i<counterLetterAxes.length;i++){var counterAxis2=counterLetterAxes[i];if(counterAxis2._mainAxis===mainCounterAxis&&lineNearZero(counterAxis2,zeroPosition)){return true;}}}function hasBarsOrFill(gd,ax){var fullData=gd._fullData;var subplot=ax._mainSubplot;var axLetter=ax._id.charAt(0);for(var i=0;i<fullData.length;i++){var trace=fullData[i];if(trace.visible===true&&trace.xaxis+trace.yaxis===subplot&&(Registry.traceIs(trace,'bar')&&trace.orientation==={x:'h',y:'v'}[axLetter]||trace.fill&&trace.fill.charAt(trace.fill.length-1)===axLetter)){return true;}}return false;}function selectTickLabel(gTick){var s=d3.select(gTick);var mj=s.select('.text-math-group');return mj.empty()?s.select('text'):mj;}/**\n * Find all margin pushers for 2D axes and reserve them for later use\n * Both label and rangeslider automargin calculations happen later so\n * we need to explicitly allow their ids in order to not delete them.\n *\n * TODO: can we pull the actual automargin calls forward to avoid this hack?\n * We're probably also doing multiple redraws in this case, would be faster\n * if we can just do the whole calculation ahead of time and draw once.\n */axes.allowAutoMargin=function(gd){var axList=axes.list(gd,'',true);for(var i=0;i<axList.length;i++){var ax=axList[i];if(ax.automargin){Plots.allowAutoMargin(gd,axAutoMarginID(ax));}if(Registry.getComponentMethod('rangeslider','isVisible')(ax)){Plots.allowAutoMargin(gd,rangeSliderAutoMarginID(ax));}}};function axAutoMarginID(ax){return ax._id+'.automargin';}function rangeSliderAutoMarginID(ax){return ax._id+'.rangeslider';}// swap all the presentation attributes of the axes showing these traces\naxes.swap=function(gd,traces){var axGroups=makeAxisGroups(gd,traces);for(var i=0;i<axGroups.length;i++){swapAxisGroup(gd,axGroups[i].x,axGroups[i].y);}};function makeAxisGroups(gd,traces){var groups=[];var i,j;for(i=0;i<traces.length;i++){var groupsi=[];var xi=gd._fullData[traces[i]].xaxis;var yi=gd._fullData[traces[i]].yaxis;if(!xi||!yi)continue;// not a 2D cartesian trace?\nfor(j=0;j<groups.length;j++){if(groups[j].x.indexOf(xi)!==-1||groups[j].y.indexOf(yi)!==-1){groupsi.push(j);}}if(!groupsi.length){groups.push({x:[xi],y:[yi]});continue;}var group0=groups[groupsi[0]];var groupj;if(groupsi.length>1){for(j=1;j<groupsi.length;j++){groupj=groups[groupsi[j]];mergeAxisGroups(group0.x,groupj.x);mergeAxisGroups(group0.y,groupj.y);}}mergeAxisGroups(group0.x,[xi]);mergeAxisGroups(group0.y,[yi]);}return groups;}function mergeAxisGroups(intoSet,fromSet){for(var i=0;i<fromSet.length;i++){if(intoSet.indexOf(fromSet[i])===-1)intoSet.push(fromSet[i]);}}function swapAxisGroup(gd,xIds,yIds){var xFullAxes=[];var yFullAxes=[];var layout=gd.layout;var i,j;for(i=0;i<xIds.length;i++){xFullAxes.push(axes.getFromId(gd,xIds[i]));}for(i=0;i<yIds.length;i++){yFullAxes.push(axes.getFromId(gd,yIds[i]));}var allAxKeys=Object.keys(axAttrs);var noSwapAttrs=['anchor','domain','overlaying','position','side','tickangle','editType'];var numericTypes=['linear','log'];for(i=0;i<allAxKeys.length;i++){var keyi=allAxKeys[i];var xVal=xFullAxes[0][keyi];var yVal=yFullAxes[0][keyi];var allEqual=true;var coerceLinearX=false;var coerceLinearY=false;if(keyi.charAt(0)==='_'||typeof xVal==='function'||noSwapAttrs.indexOf(keyi)!==-1){continue;}for(j=1;j<xFullAxes.length&&allEqual;j++){var xVali=xFullAxes[j][keyi];if(keyi==='type'&&numericTypes.indexOf(xVal)!==-1&&numericTypes.indexOf(xVali)!==-1&&xVal!==xVali){// type is special - if we find a mixture of linear and log,\n// coerce them all to linear on flipping\ncoerceLinearX=true;}else if(xVali!==xVal)allEqual=false;}for(j=1;j<yFullAxes.length&&allEqual;j++){var yVali=yFullAxes[j][keyi];if(keyi==='type'&&numericTypes.indexOf(yVal)!==-1&&numericTypes.indexOf(yVali)!==-1&&yVal!==yVali){// type is special - if we find a mixture of linear and log,\n// coerce them all to linear on flipping\ncoerceLinearY=true;}else if(yFullAxes[j][keyi]!==yVal)allEqual=false;}if(allEqual){if(coerceLinearX)layout[xFullAxes[0]._name].type='linear';if(coerceLinearY)layout[yFullAxes[0]._name].type='linear';swapAxisAttrs(layout,keyi,xFullAxes,yFullAxes,gd._fullLayout._dfltTitle);}}// now swap x&y for any annotations anchored to these x & y\nfor(i=0;i<gd._fullLayout.annotations.length;i++){var ann=gd._fullLayout.annotations[i];if(xIds.indexOf(ann.xref)!==-1&&yIds.indexOf(ann.yref)!==-1){Lib.swapAttrs(layout.annotations[i],['?']);}}}function swapAxisAttrs(layout,key,xFullAxes,yFullAxes,dfltTitle){// in case the value is the default for either axis,\n// look at the first axis in each list and see if\n// this key's value is undefined\nvar np=Lib.nestedProperty;var xVal=np(layout[xFullAxes[0]._name],key).get();var yVal=np(layout[yFullAxes[0]._name],key).get();var i;if(key==='title'){// special handling of placeholder titles\nif(xVal&&xVal.text===dfltTitle.x){xVal.text=dfltTitle.y;}if(yVal&&yVal.text===dfltTitle.y){yVal.text=dfltTitle.x;}}for(i=0;i<xFullAxes.length;i++){np(layout,xFullAxes[i]._name+'.'+key).set(yVal);}for(i=0;i<yFullAxes.length;i++){np(layout,yFullAxes[i]._name+'.'+key).set(xVal);}}function isAngular(ax){return ax._id==='angularaxis';}},{\"../../components/color\":299,\"../../components/drawing\":320,\"../../components/titles\":387,\"../../constants/alignment\":394,\"../../constants/numerical\":398,\"../../lib\":423,\"../../lib/svg_text_utils\":446,\"../../plots/plots\":513,\"../../registry\":521,\"./autorange\":468,\"./axis_autotype\":470,\"./axis_ids\":472,\"./clean_ticks\":474,\"./layout_attributes\":482,\"./set_convert\":488,\"d3\":71,\"fast-isnumeric\":80}],470:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var Lib=_dereq_('../../lib');var BADNUM=_dereq_('../../constants/numerical').BADNUM;module.exports=function autoType(array,calendar,opts){opts=opts||{};if(!opts.noMultiCategory&&multiCategory(array))return'multicategory';if(moreDates(array,calendar))return'date';if(category(array))return'category';if(linearOK(array))return'linear';else return'-';};// is there at least one number in array? If not, we should leave\n// ax.type empty so it can be autoset later\nfunction linearOK(array){if(!array)return false;for(var i=0;i<array.length;i++){if(isNumeric(array[i]))return true;}return false;}// does the array a have mostly dates rather than numbers?\n// note: some values can be neither (such as blanks, text)\n// 2- or 4-digit integers can be both, so require twice as many\n// dates as non-dates, to exclude cases with mostly 2 & 4 digit\n// numbers and a few dates\n// as with categories, consider DISTINCT values only.\nfunction moreDates(a,calendar){// test at most 1000 points, evenly spaced\nvar inc=Math.max(1,(a.length-1)/1000);var dcnt=0;var ncnt=0;var seen={};for(var i=0;i<a.length;i+=inc){var ai=a[Math.round(i)];var stri=String(ai);if(seen[stri])continue;seen[stri]=1;if(Lib.isDateTime(ai,calendar))dcnt+=1;if(isNumeric(ai))ncnt+=1;}return dcnt>ncnt*2;}// are the (x,y)-values in gd.data mostly text?\n// require twice as many DISTINCT categories as distinct numbers\nfunction category(a){// test at most 1000 points\nvar inc=Math.max(1,(a.length-1)/1000);var curvenums=0;var curvecats=0;var seen={};for(var i=0;i<a.length;i+=inc){var ai=a[Math.round(i)];var stri=String(ai);if(seen[stri])continue;seen[stri]=1;if(typeof ai==='boolean')curvecats++;else if(Lib.cleanNumber(ai)!==BADNUM)curvenums++;else if(typeof ai==='string')curvecats++;}return curvecats>curvenums*2;}// very-loose requirements for multicategory,\n// trace modules that should never auto-type to multicategory\n// should be declared with 'noMultiCategory'\nfunction multiCategory(a){return Lib.isArrayOrTypedArray(a[0])&&Lib.isArrayOrTypedArray(a[1]);}},{\"../../constants/numerical\":398,\"../../lib\":423,\"fast-isnumeric\":80}],471:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var layoutAttributes=_dereq_('./layout_attributes');var handleTickValueDefaults=_dereq_('./tick_value_defaults');var handleTickMarkDefaults=_dereq_('./tick_mark_defaults');var handleTickLabelDefaults=_dereq_('./tick_label_defaults');var handleCategoryOrderDefaults=_dereq_('./category_order_defaults');var handleLineGridDefaults=_dereq_('./line_grid_defaults');var setConvert=_dereq_('./set_convert');/**\n * options: object containing:\n *\n *  letter: 'x' or 'y'\n *  title: name of the axis (ie 'Colorbar') to go in default title\n *  font: the default font to inherit\n *  outerTicks: boolean, should ticks default to outside?\n *  showGrid: boolean, should gridlines be shown by default?\n *  noHover: boolean, this axis doesn't support hover effects?\n *  noTickson: boolean, this axis doesn't support 'tickson'\n *  data: the plot data, used to manage categories\n *  bgColor: the plot background color, to calculate default gridline colors\n */module.exports=function handleAxisDefaults(containerIn,containerOut,coerce,options,layoutOut){var letter=options.letter;var font=options.font||{};var splomStash=options.splomStash||{};var visible=coerce('visible',!options.cheateronly);var axType=containerOut.type;if(axType==='date'){var handleCalendarDefaults=Registry.getComponentMethod('calendars','handleDefaults');handleCalendarDefaults(containerIn,containerOut,'calendar',options.calendar);}setConvert(containerOut,layoutOut);var autoRange=coerce('autorange',!containerOut.isValidRange(containerIn.range));if(autoRange&&(axType==='linear'||axType==='-'))coerce('rangemode');coerce('range');containerOut.cleanRange();handleCategoryOrderDefaults(containerIn,containerOut,coerce,options);if(axType!=='category'&&!options.noHover)coerce('hoverformat');if(!visible)return containerOut;var dfltColor=coerce('color');// if axis.color was provided, use it for fonts too; otherwise,\n// inherit from global font color in case that was provided.\n// Compare to dflt rather than to containerIn, so we can provide color via\n// template too.\nvar dfltFontColor=dfltColor!==layoutAttributes.color.dflt?dfltColor:font.color;// try to get default title from splom trace, fallback to graph-wide value\nvar dfltTitle=splomStash.label||layoutOut._dfltTitle[letter];coerce('title.text',dfltTitle);Lib.coerceFont(coerce,'title.font',{family:font.family,size:Math.round(font.size*1.2),color:dfltFontColor});handleTickValueDefaults(containerIn,containerOut,coerce,axType);handleTickLabelDefaults(containerIn,containerOut,coerce,axType,options);handleTickMarkDefaults(containerIn,containerOut,coerce,options);handleLineGridDefaults(containerIn,containerOut,coerce,{dfltColor:dfltColor,bgColor:options.bgColor,showGrid:options.showGrid,attributes:layoutAttributes});if(containerOut.showline||containerOut.ticks)coerce('mirror');if(options.automargin)coerce('automargin');var isMultiCategory=containerOut.type==='multicategory';if(!options.noTickson&&(containerOut.type==='category'||isMultiCategory)&&(containerOut.ticks||containerOut.showgrid)){var ticksonDflt;if(isMultiCategory)ticksonDflt='boundaries';coerce('tickson',ticksonDflt);}if(isMultiCategory){var showDividers=coerce('showdividers');if(showDividers){coerce('dividercolor');coerce('dividerwidth');}}return containerOut;};},{\"../../lib\":423,\"../../registry\":521,\"./category_order_defaults\":473,\"./layout_attributes\":482,\"./line_grid_defaults\":484,\"./set_convert\":488,\"./tick_label_defaults\":489,\"./tick_mark_defaults\":490,\"./tick_value_defaults\":491}],472:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../../registry');var constants=_dereq_('./constants');// convert between axis names (xaxis, xaxis2, etc, elements of gd.layout)\n// and axis id's (x, x2, etc). Would probably have ditched 'xaxis'\n// completely in favor of just 'x' if it weren't ingrained in the API etc.\nexports.id2name=function id2name(id){if(typeof id!=='string'||!id.match(constants.AX_ID_PATTERN))return;var axNum=id.substr(1);if(axNum==='1')axNum='';return id.charAt(0)+'axis'+axNum;};exports.name2id=function name2id(name){if(!name.match(constants.AX_NAME_PATTERN))return;var axNum=name.substr(5);if(axNum==='1')axNum='';return name.charAt(0)+axNum;};exports.cleanId=function cleanId(id,axLetter){if(!id.match(constants.AX_ID_PATTERN))return;if(axLetter&&id.charAt(0)!==axLetter)return;var axNum=id.substr(1).replace(/^0+/,'');if(axNum==='1')axNum='';return id.charAt(0)+axNum;};// get all axis objects, as restricted in listNames\nexports.list=function(gd,axLetter,only2d){var fullLayout=gd._fullLayout;if(!fullLayout)return[];var idList=exports.listIds(gd,axLetter);var out=new Array(idList.length);var i;for(i=0;i<idList.length;i++){var idi=idList[i];out[i]=fullLayout[idi.charAt(0)+'axis'+idi.substr(1)];}if(!only2d){var sceneIds3D=fullLayout._subplots.gl3d||[];for(i=0;i<sceneIds3D.length;i++){var scene=fullLayout[sceneIds3D[i]];if(axLetter)out.push(scene[axLetter+'axis']);else out.push(scene.xaxis,scene.yaxis,scene.zaxis);}}return out;};// get all axis ids, optionally restricted by letter\n// this only makes sense for 2d axes\nexports.listIds=function(gd,axLetter){var fullLayout=gd._fullLayout;if(!fullLayout)return[];var subplotLists=fullLayout._subplots;if(axLetter)return subplotLists[axLetter+'axis'];return subplotLists.xaxis.concat(subplotLists.yaxis);};// get an axis object from its id 'x','x2' etc\n// optionally, id can be a subplot (ie 'x2y3') and type gets x or y from it\nexports.getFromId=function(gd,id,type){var fullLayout=gd._fullLayout;if(type==='x')id=id.replace(/y[0-9]*/,'');else if(type==='y')id=id.replace(/x[0-9]*/,'');return fullLayout[exports.id2name(id)];};// get an axis object of specified type from the containing trace\nexports.getFromTrace=function(gd,fullTrace,type){var fullLayout=gd._fullLayout;var ax=null;if(Registry.traceIs(fullTrace,'gl3d')){var scene=fullTrace.scene;if(scene.substr(0,5)==='scene'){ax=fullLayout[scene][type+'axis'];}}else{ax=exports.getFromId(gd,fullTrace[type+'axis']||type);}return ax;};// sort x, x2, x10, y, y2, y10...\nexports.idSort=function(id1,id2){var letter1=id1.charAt(0);var letter2=id2.charAt(0);if(letter1!==letter2)return letter1>letter2?1:-1;return+(id1.substr(1)||1)-+(id2.substr(1)||1);};},{\"../../registry\":521,\"./constants\":475}],473:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';function findCategories(ax,opts){var dataAttr=opts.dataAttr||ax._id.charAt(0);var lookup={};var axData;var i,j;if(opts.axData){// non-x/y case\naxData=opts.axData;}else{// x/y case\naxData=[];for(i=0;i<opts.data.length;i++){var trace=opts.data[i];if(trace[dataAttr+'axis']===ax._id){axData.push(trace);}}}for(i=0;i<axData.length;i++){var vals=axData[i][dataAttr];for(j=0;j<vals.length;j++){var v=vals[j];if(v!==null&&v!==undefined){lookup[v]=1;}}}return Object.keys(lookup);}/**\n * Fills in category* default and initial categories.\n *\n * @param {object} containerIn : input axis object\n * @param {object} containerOut : full axis object\n * @param {function} coerce : Lib.coerce fn wrapper\n * @param {object} opts :\n *   - data {array} : (full) data trace\n * OR\n *   - axData {array} : (full) data associated with axis being coerced here\n *   - dataAttr {string} : attribute name corresponding to coordinate array\n */module.exports=function handleCategoryOrderDefaults(containerIn,containerOut,coerce,opts){if(containerOut.type!=='category')return;var arrayIn=containerIn.categoryarray;var isValidArray=Array.isArray(arrayIn)&&arrayIn.length>0;// override default 'categoryorder' value when non-empty array is supplied\nvar orderDefault;if(isValidArray)orderDefault='array';var order=coerce('categoryorder',orderDefault);var array;// coerce 'categoryarray' only in array order case\nif(order==='array'){array=coerce('categoryarray');}// cannot set 'categoryorder' to 'array' with an invalid 'categoryarray'\nif(!isValidArray&&order==='array'){order=containerOut.categoryorder='trace';}// set up things for makeCalcdata\nif(order==='trace'){containerOut._initialCategories=[];}else if(order==='array'){containerOut._initialCategories=array.slice();}else{array=findCategories(containerOut,opts).sort();if(order==='category ascending'){containerOut._initialCategories=array;}else if(order==='category descending'){containerOut._initialCategories=array.reverse();}}};},{}],474:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var Lib=_dereq_('../../lib');var ONEDAY=_dereq_('../../constants/numerical').ONEDAY;/**\n * Return a validated dtick value for this axis\n *\n * @param {any} dtick: the candidate dtick. valid values are numbers and strings,\n *     and further constrained depending on the axis type.\n * @param {string} axType: the axis type\n */exports.dtick=function(dtick,axType){var isLog=axType==='log';var isDate=axType==='date';var isCat=axType==='category';var dtickDflt=isDate?ONEDAY:1;if(!dtick)return dtickDflt;if(isNumeric(dtick)){dtick=Number(dtick);if(dtick<=0)return dtickDflt;if(isCat){// category dtick must be positive integers\nreturn Math.max(1,Math.round(dtick));}if(isDate){// date dtick must be at least 0.1ms (our current precision)\nreturn Math.max(0.1,dtick);}return dtick;}if(typeof dtick!=='string'||!(isDate||isLog)){return dtickDflt;}var prefix=dtick.charAt(0);var dtickNum=dtick.substr(1);dtickNum=isNumeric(dtickNum)?Number(dtickNum):0;if(dtickNum<=0||!(// \"M<n>\" gives ticks every (integer) n months\nisDate&&prefix==='M'&&dtickNum===Math.round(dtickNum)||// \"L<f>\" gives ticks linearly spaced in data (not in position) every (float) f\nisLog&&prefix==='L'||// \"D1\" gives powers of 10 with all small digits between, \"D2\" gives only 2 and 5\nisLog&&prefix==='D'&&(dtickNum===1||dtickNum===2))){return dtickDflt;}return dtick;};/**\n * Return a validated tick0 for this axis\n *\n * @param {any} tick0: the candidate tick0. Valid values are numbers and strings,\n *     further constrained depending on the axis type\n * @param {string} axType: the axis type\n * @param {string} calendar: for date axes, the calendar to validate/convert with\n * @param {any} dtick: an already valid dtick. Only used for D1 and D2 log dticks,\n *     which do not support tick0 at all.\n */exports.tick0=function(tick0,axType,calendar,dtick){if(axType==='date'){return Lib.cleanDate(tick0,Lib.dateTick0(calendar));}if(dtick==='D1'||dtick==='D2'){// D1 and D2 modes ignore tick0 entirely\nreturn undefined;}// Aside from date axes, tick0 must be numeric\nreturn isNumeric(tick0)?Number(tick0):0;};},{\"../../constants/numerical\":398,\"../../lib\":423,\"fast-isnumeric\":80}],475:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var counterRegex=_dereq_('../../lib/regex').counter;module.exports={idRegex:{x:counterRegex('x'),y:counterRegex('y')},attrRegex:counterRegex('[xy]axis'),// axis match regular expression\nxAxisMatch:counterRegex('xaxis'),yAxisMatch:counterRegex('yaxis'),// pattern matching axis ids and names\n// note that this is more permissive than counterRegex, as\n// id2name, name2id, and cleanId accept \"x1\" etc\nAX_ID_PATTERN:/^[xyz][0-9]*$/,AX_NAME_PATTERN:/^[xyz]axis[0-9]*$/,// and for 2D subplots\nSUBPLOT_PATTERN:/^x([0-9]*)y([0-9]*)$/,// pixels to move mouse before you stop clamping to starting point\nMINDRAG:8,// smallest dimension allowed for a select box\nMINSELECT:12,// smallest dimension allowed for a zoombox\nMINZOOM:20,// width of axis drag regions\nDRAGGERSIZE:20,// max pixels off straight before a lasso select line counts as bent\nBENDPX:1.5,// delay before a redraw (relayout) after smooth panning and zooming\nREDRAWDELAY:50,// throttling limit (ms) for selectPoints calls\nSELECTDELAY:100,// cache ID suffix for throttle\nSELECTID:'-select',// last resort axis ranges for x and y axes if we have no data\nDFLTRANGEX:[-1,6],DFLTRANGEY:[-1,4],// Layers to keep trace types in the right order\n// N.B. each  'unique' plot method must have its own layer\ntraceLayerClasses:['heatmaplayer','contourcarpetlayer','contourlayer','barlayer','carpetlayer','violinlayer','boxlayer','ohlclayer','scattercarpetlayer','scatterlayer'],layerValue2layerClass:{'above traces':'above','below traces':'below'}};},{\"../../lib/regex\":438}],476:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var id2name=_dereq_('./axis_ids').id2name;module.exports=function handleConstraintDefaults(containerIn,containerOut,coerce,allAxisIds,layoutOut){var constraintGroups=layoutOut._axisConstraintGroups;var thisID=containerOut._id;var letter=thisID.charAt(0);if(containerOut.fixedrange)return;// coerce the constraint mechanics even if this axis has no scaleanchor\n// because it may be the anchor of another axis.\ncoerce('constrain');Lib.coerce(containerIn,containerOut,{constraintoward:{valType:'enumerated',values:letter==='x'?['left','center','right']:['bottom','middle','top'],dflt:letter==='x'?'center':'middle'}},'constraintoward');if(!containerIn.scaleanchor)return;var constraintOpts=getConstraintOpts(constraintGroups,thisID,allAxisIds,layoutOut);var scaleanchor=Lib.coerce(containerIn,containerOut,{scaleanchor:{valType:'enumerated',values:constraintOpts.linkableAxes}},'scaleanchor');if(scaleanchor){var scaleratio=coerce('scaleratio');// TODO: I suppose I could do attribute.min: Number.MIN_VALUE to avoid zero,\n// but that seems hacky. Better way to say \"must be a positive number\"?\n// Of course if you use several super-tiny values you could eventually\n// force a product of these to zero and all hell would break loose...\n// Likewise with super-huge values.\nif(!scaleratio)scaleratio=containerOut.scaleratio=1;updateConstraintGroups(constraintGroups,constraintOpts.thisGroup,thisID,scaleanchor,scaleratio);}else if(allAxisIds.indexOf(containerIn.scaleanchor)!==-1){Lib.warn('ignored '+containerOut._name+'.scaleanchor: \"'+containerIn.scaleanchor+'\" to avoid either an infinite loop '+'and possibly inconsistent scaleratios, or because the target'+'axis has fixed range.');}};function getConstraintOpts(constraintGroups,thisID,allAxisIds,layoutOut){// If this axis is already part of a constraint group, we can't\n// scaleanchor any other axis in that group, or we'd make a loop.\n// Filter allAxisIds to enforce this, also matching axis types.\nvar thisType=layoutOut[id2name(thisID)].type;var i,j,idj,axj;var linkableAxes=[];for(j=0;j<allAxisIds.length;j++){idj=allAxisIds[j];if(idj===thisID)continue;axj=layoutOut[id2name(idj)];if(axj.type===thisType&&!axj.fixedrange)linkableAxes.push(idj);}for(i=0;i<constraintGroups.length;i++){if(constraintGroups[i][thisID]){var thisGroup=constraintGroups[i];var linkableAxesNoLoops=[];for(j=0;j<linkableAxes.length;j++){idj=linkableAxes[j];if(!thisGroup[idj])linkableAxesNoLoops.push(idj);}return{linkableAxes:linkableAxesNoLoops,thisGroup:thisGroup};}}return{linkableAxes:linkableAxes,thisGroup:null};}/*\n * Add this axis to the axis constraint groups, which is the collection\n * of axes that are all constrained together on scale.\n *\n * constraintGroups: a list of objects. each object is\n * {axis_id: scale_within_group}, where scale_within_group is\n * only important relative to the rest of the group, and defines\n * the relative scales between all axes in the group\n *\n * thisGroup: the group the current axis is already in\n * thisID: the id if the current axis\n * scaleanchor: the id of the axis to scale it with\n * scaleratio: the ratio of this axis to the scaleanchor axis\n */function updateConstraintGroups(constraintGroups,thisGroup,thisID,scaleanchor,scaleratio){var i,j,groupi,keyj,thisGroupIndex;if(thisGroup===null){thisGroup={};thisGroup[thisID]=1;thisGroupIndex=constraintGroups.length;constraintGroups.push(thisGroup);}else{thisGroupIndex=constraintGroups.indexOf(thisGroup);}var thisGroupKeys=Object.keys(thisGroup);// we know that this axis isn't in any other groups, but we don't know\n// about the scaleanchor axis. If it is, we need to merge the groups.\nfor(i=0;i<constraintGroups.length;i++){groupi=constraintGroups[i];if(i!==thisGroupIndex&&groupi[scaleanchor]){var baseScale=groupi[scaleanchor];for(j=0;j<thisGroupKeys.length;j++){keyj=thisGroupKeys[j];groupi[keyj]=baseScale*scaleratio*thisGroup[keyj];}constraintGroups.splice(thisGroupIndex,1);return;}}// otherwise, we insert the new scaleanchor axis as the base scale (1)\n// in its group, and scale the rest of the group to it\nif(scaleratio!==1){for(j=0;j<thisGroupKeys.length;j++){thisGroup[thisGroupKeys[j]]*=scaleratio;}}thisGroup[scaleanchor]=1;}},{\"../../lib\":423,\"./axis_ids\":472}],477:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var id2name=_dereq_('./axis_ids').id2name;var scaleZoom=_dereq_('./scale_zoom');var makePadFn=_dereq_('./autorange').makePadFn;var concatExtremes=_dereq_('./autorange').concatExtremes;var ALMOST_EQUAL=_dereq_('../../constants/numerical').ALMOST_EQUAL;var FROM_BL=_dereq_('../../constants/alignment').FROM_BL;exports.enforce=function enforceAxisConstraints(gd){var fullLayout=gd._fullLayout;var constraintGroups=fullLayout._axisConstraintGroups||[];var i,j,axisID,ax,normScale,mode,factor;for(i=0;i<constraintGroups.length;i++){var group=constraintGroups[i];var axisIDs=Object.keys(group);var minScale=Infinity;var maxScale=0;// mostly matchScale will be the same as minScale\n// ie we expand axis ranges to encompass *everything*\n// that's currently in any of their ranges, but during\n// autorange of a subset of axes we will ignore other\n// axes for this purpose.\nvar matchScale=Infinity;var normScales={};var axes={};var hasAnyDomainConstraint=false;// find the (normalized) scale of each axis in the group\nfor(j=0;j<axisIDs.length;j++){axisID=axisIDs[j];axes[axisID]=ax=fullLayout[id2name(axisID)];if(ax._inputDomain)ax.domain=ax._inputDomain.slice();else ax._inputDomain=ax.domain.slice();if(!ax._inputRange)ax._inputRange=ax.range.slice();// set axis scale here so we can use _m rather than\n// having to calculate it from length and range\nax.setScale();// abs: inverted scales still satisfy the constraint\nnormScales[axisID]=normScale=Math.abs(ax._m)/group[axisID];minScale=Math.min(minScale,normScale);if(ax.constrain==='domain'||!ax._constraintShrinkable){matchScale=Math.min(matchScale,normScale);}// this has served its purpose, so remove it\ndelete ax._constraintShrinkable;maxScale=Math.max(maxScale,normScale);if(ax.constrain==='domain')hasAnyDomainConstraint=true;}// Do we have a constraint mismatch? Give a small buffer for rounding errors\nif(minScale>ALMOST_EQUAL*maxScale&&!hasAnyDomainConstraint)continue;// now increase any ranges we need to until all normalized scales are equal\nfor(j=0;j<axisIDs.length;j++){axisID=axisIDs[j];normScale=normScales[axisID];ax=axes[axisID];mode=ax.constrain;// even if the scale didn't change, if we're shrinking domain\n// we need to recalculate in case `constraintoward` changed\nif(normScale!==matchScale||mode==='domain'){factor=normScale/matchScale;if(mode==='range'){scaleZoom(ax,factor);}else{// mode === 'domain'\nvar inputDomain=ax._inputDomain;var domainShrunk=(ax.domain[1]-ax.domain[0])/(inputDomain[1]-inputDomain[0]);var rangeShrunk=(ax.r2l(ax.range[1])-ax.r2l(ax.range[0]))/(ax.r2l(ax._inputRange[1])-ax.r2l(ax._inputRange[0]));factor/=domainShrunk;if(factor*rangeShrunk<1){// we've asked to magnify the axis more than we can just by\n// enlarging the domain - so we need to constrict range\nax.domain=ax._input.domain=inputDomain.slice();scaleZoom(ax,factor);continue;}if(rangeShrunk<1){// the range has previously been constricted by ^^, but we've\n// switched to the domain-constricted regime, so reset range\nax.range=ax._input.range=ax._inputRange.slice();factor*=rangeShrunk;}if(ax.autorange){/*\n                         * range & factor may need to change because range was\n                         * calculated for the larger scaling, so some pixel\n                         * paddings may get cut off when we reduce the domain.\n                         *\n                         * This is easier than the regular autorange calculation\n                         * because we already know the scaling `m`, but we still\n                         * need to cut out impossible constraints (like\n                         * annotations with super-long arrows). That's what\n                         * outerMin/Max are for - if the expansion was going to\n                         * go beyond the original domain, it must be impossible\n                         */var rl0=ax.r2l(ax.range[0]);var rl1=ax.r2l(ax.range[1]);var rangeCenter=(rl0+rl1)/2;var rangeMin=rangeCenter;var rangeMax=rangeCenter;var halfRange=Math.abs(rl1-rangeCenter);// extra tiny bit for rounding errors, in case we actually\n// *are* expanding to the full domain\nvar outerMin=rangeCenter-halfRange*factor*1.0001;var outerMax=rangeCenter+halfRange*factor*1.0001;var getPad=makePadFn(ax);updateDomain(ax,factor);var m=Math.abs(ax._m);var extremes=concatExtremes(gd,ax);var minArray=extremes.min;var maxArray=extremes.max;var newVal;var k;for(k=0;k<minArray.length;k++){newVal=minArray[k].val-getPad(minArray[k])/m;if(newVal>outerMin&&newVal<rangeMin){rangeMin=newVal;}}for(k=0;k<maxArray.length;k++){newVal=maxArray[k].val+getPad(maxArray[k])/m;if(newVal<outerMax&&newVal>rangeMax){rangeMax=newVal;}}var domainExpand=(rangeMax-rangeMin)/(2*halfRange);factor/=domainExpand;rangeMin=ax.l2r(rangeMin);rangeMax=ax.l2r(rangeMax);ax.range=ax._input.range=rl0<rl1?[rangeMin,rangeMax]:[rangeMax,rangeMin];}updateDomain(ax,factor);}}}}};// For use before autoranging, check if this axis was previously constrained\n// by domain but no longer is\nexports.clean=function cleanConstraints(gd,ax){if(ax._inputDomain){var isConstrained=false;var axId=ax._id;var constraintGroups=gd._fullLayout._axisConstraintGroups;for(var j=0;j<constraintGroups.length;j++){if(constraintGroups[j][axId]){isConstrained=true;break;}}if(!isConstrained||ax.constrain!=='domain'){ax._input.domain=ax.domain=ax._inputDomain;delete ax._inputDomain;}}};function updateDomain(ax,factor){var inputDomain=ax._inputDomain;var centerFraction=FROM_BL[ax.constraintoward];var center=inputDomain[0]+(inputDomain[1]-inputDomain[0])*centerFraction;ax.domain=ax._input.domain=[center+(inputDomain[0]-center)/factor,center+(inputDomain[1]-center)/factor];ax.setScale();}},{\"../../constants/alignment\":394,\"../../constants/numerical\":398,\"./autorange\":468,\"./axis_ids\":472,\"./scale_zoom\":486}],478:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var tinycolor=_dereq_('tinycolor2');var supportsPassive=_dereq_('has-passive-events');var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var svgTextUtils=_dereq_('../../lib/svg_text_utils');var Color=_dereq_('../../components/color');var Drawing=_dereq_('../../components/drawing');var Fx=_dereq_('../../components/fx');var Axes=_dereq_('./axes');var setCursor=_dereq_('../../lib/setcursor');var dragElement=_dereq_('../../components/dragelement');var FROM_TL=_dereq_('../../constants/alignment').FROM_TL;var clearGlCanvases=_dereq_('../../lib/clear_gl_canvases');var redrawReglTraces=_dereq_('../../plot_api/subroutines').redrawReglTraces;var Plots=_dereq_('../plots');var getFromId=_dereq_('./axis_ids').getFromId;var prepSelect=_dereq_('./select').prepSelect;var clearSelect=_dereq_('./select').clearSelect;var selectOnClick=_dereq_('./select').selectOnClick;var scaleZoom=_dereq_('./scale_zoom');var constants=_dereq_('./constants');var MINDRAG=constants.MINDRAG;var MINZOOM=constants.MINZOOM;// flag for showing \"doubleclick to zoom out\" only at the beginning\nvar SHOWZOOMOUTTIP=true;// dragBox: create an element to drag one or more axis ends\n// inputs:\n//      plotinfo - which subplot are we making dragboxes on?\n//      x,y,w,h - left, top, width, height of the box\n//      ns - how does this drag the vertical axis?\n//          'n' - top only\n//          's' - bottom only\n//          'ns' - top and bottom together, difference unchanged\n//      ew - same for horizontal axis\nfunction makeDragBox(gd,plotinfo,x,y,w,h,ns,ew){// mouseDown stores ms of first mousedown event in the last\n// DBLCLICKDELAY ms on the drag bars\n// numClicks stores how many mousedowns have been seen\n// within DBLCLICKDELAY so we can check for click or doubleclick events\n// dragged stores whether a drag has occurred, so we don't have to\n// redraw unnecessarily, ie if no move bigger than MINDRAG or MINZOOM px\nvar zoomlayer=gd._fullLayout._zoomlayer;var isMainDrag=ns+ew==='nsew';var singleEnd=(ns+ew).length===1;// main subplot x and y (i.e. found in plotinfo - the main ones)\nvar xa0,ya0;// {ax._id: ax} hash objects\nvar xaHash,yaHash;// xaHash/yaHash values (arrays)\nvar xaxes,yaxes;// main axis offsets\nvar xs,ys;// main axis lengths\nvar pw,ph;// contains keys 'xaHash', 'yaHash', 'xaxes', and 'yaxes'\n// which are the x/y {ax._id: ax} hash objects and their values\n// for linked axis relative to this subplot\nvar links;// set to ew/ns val when active, set to '' when inactive\nvar xActive,yActive;// are all axes in this subplot are fixed?\nvar allFixedRanges;// is subplot constrained?\nvar isSubplotConstrained;// do we need to edit x/y ranges?\nvar editX,editY;// graph-wide optimization flags\nvar hasScatterGl,hasSplom,hasSVG;// collected changes to be made to the plot by relayout at the end\nvar updates;function recomputeAxisLists(){xa0=plotinfo.xaxis;ya0=plotinfo.yaxis;pw=xa0._length;ph=ya0._length;xs=xa0._offset;ys=ya0._offset;xaHash={};xaHash[xa0._id]=xa0;yaHash={};yaHash[ya0._id]=ya0;// if we're dragging two axes at once, also drag overlays\nif(ns&&ew){var overlays=plotinfo.overlays;for(var i=0;i<overlays.length;i++){var xa=overlays[i].xaxis;xaHash[xa._id]=xa;var ya=overlays[i].yaxis;yaHash[ya._id]=ya;}}xaxes=hashValues(xaHash);yaxes=hashValues(yaHash);xActive=isDirectionActive(xaxes,ew);yActive=isDirectionActive(yaxes,ns);allFixedRanges=!yActive&&!xActive;links=calcLinks(gd,xaHash,yaHash);isSubplotConstrained=links.isSubplotConstrained;editX=ew||isSubplotConstrained;editY=ns||isSubplotConstrained;var fullLayout=gd._fullLayout;hasScatterGl=fullLayout._has('scattergl');hasSplom=fullLayout._has('splom');hasSVG=fullLayout._has('svg');}recomputeAxisLists();var cursor=getDragCursor(yActive+xActive,gd._fullLayout.dragmode,isMainDrag);var dragger=makeRectDragger(plotinfo,ns+ew+'drag',cursor,x,y,w,h);// still need to make the element if the axes are disabled\n// but nuke its events (except for maindrag which needs them for hover)\n// and stop there\nif(allFixedRanges&&!isMainDrag){dragger.onmousedown=null;dragger.style.pointerEvents='none';return dragger;}var dragOptions={element:dragger,gd:gd,plotinfo:plotinfo};dragOptions.prepFn=function(e,startX,startY){var dragModePrev=dragOptions.dragmode;var dragModeNow=gd._fullLayout.dragmode;if(dragModeNow!==dragModePrev){dragOptions.dragmode=dragModeNow;}recomputeAxisLists();if(!allFixedRanges){if(isMainDrag){// main dragger handles all drag modes, and changes\n// to pan (or to zoom if it already is pan) on shift\nif(e.shiftKey){if(dragModeNow==='pan')dragModeNow='zoom';else if(!isSelectOrLasso(dragModeNow))dragModeNow='pan';}else if(e.ctrlKey){dragModeNow='pan';}}// all other draggers just pan\nelse dragModeNow='pan';}if(dragModeNow==='lasso')dragOptions.minDrag=1;else dragOptions.minDrag=undefined;if(isSelectOrLasso(dragModeNow)){dragOptions.xaxes=xaxes;dragOptions.yaxes=yaxes;// this attaches moveFn, clickFn, doneFn on dragOptions\nprepSelect(e,startX,startY,dragOptions,dragModeNow);}else{dragOptions.clickFn=clickFn;if(isSelectOrLasso(dragModePrev)){// TODO Fix potential bug\n// Note: clearing / resetting selection state only happens, when user\n// triggers at least one interaction in pan/zoom mode. Otherwise, the\n// select/lasso outlines are deleted (in plots.js.cleanPlot) but the selection\n// cache isn't cleared. So when the user switches back to select/lasso and\n// 'adds to a selection' with Shift, the \"old\", seemingly removed outlines\n// are redrawn again because the selection cache still holds their coordinates.\n// However, this isn't easily solved, since plots.js would need\n// to have a reference to the dragOptions object (which holds the\n// selection cache).\nclearAndResetSelect();}if(!allFixedRanges){if(dragModeNow==='zoom'){dragOptions.moveFn=zoomMove;dragOptions.doneFn=zoomDone;// zoomMove takes care of the threshold, but we need to\n// minimize this so that constrained zoom boxes will flip\n// orientation at the right place\ndragOptions.minDrag=1;zoomPrep(e,startX,startY);}else if(dragModeNow==='pan'){dragOptions.moveFn=plotDrag;dragOptions.doneFn=dragTail;}}}};function clearAndResetSelect(){// clear selection polygon cache (if any)\ndragOptions.plotinfo.selection=false;// clear selection outlines\nclearSelect(zoomlayer);}function clickFn(numClicks,evt){var clickmode=gd._fullLayout.clickmode;removeZoombox(gd);if(numClicks===2&&!singleEnd)doubleClick();if(isMainDrag){if(clickmode.indexOf('select')>-1){selectOnClick(evt,gd,xaxes,yaxes,plotinfo.id,dragOptions);}if(clickmode.indexOf('event')>-1){Fx.click(gd,evt,plotinfo.id);}}else if(numClicks===1&&singleEnd){var ax=ns?ya0:xa0;var end=ns==='s'||ew==='w'?0:1;var attrStr=ax._name+'.range['+end+']';var initialText=getEndText(ax,end);var hAlign='left';var vAlign='middle';if(ax.fixedrange)return;if(ns){vAlign=ns==='n'?'top':'bottom';if(ax.side==='right')hAlign='right';}else if(ew==='e')hAlign='right';if(gd._context.showAxisRangeEntryBoxes){d3.select(dragger).call(svgTextUtils.makeEditable,{gd:gd,immediate:true,background:gd._fullLayout.paper_bgcolor,text:String(initialText),fill:ax.tickfont?ax.tickfont.color:'#444',horizontalAlign:hAlign,verticalAlign:vAlign}).on('edit',function(text){var v=ax.d2r(text);if(v!==undefined){Registry.call('_guiRelayout',gd,attrStr,v);}});}}}dragElement.init(dragOptions);var x0,y0,box,lum,path0,dimmed,zoomMode,zb,corners;// zoom takes over minDrag, so it also has to take over gd._dragged\nvar zoomDragged;function zoomPrep(e,startX,startY){var dragBBox=dragger.getBoundingClientRect();x0=startX-dragBBox.left;y0=startY-dragBBox.top;box={l:x0,r:x0,w:0,t:y0,b:y0,h:0};lum=gd._hmpixcount?gd._hmlumcount/gd._hmpixcount:tinycolor(gd._fullLayout.plot_bgcolor).getLuminance();path0='M0,0H'+pw+'V'+ph+'H0V0';dimmed=false;zoomMode='xy';zoomDragged=false;zb=makeZoombox(zoomlayer,lum,xs,ys,path0);corners=makeCorners(zoomlayer,xs,ys);}function zoomMove(dx0,dy0){if(gd._transitioningWithDuration){return false;}var x1=Math.max(0,Math.min(pw,dx0+x0));var y1=Math.max(0,Math.min(ph,dy0+y0));var dx=Math.abs(x1-x0);var dy=Math.abs(y1-y0);box.l=Math.min(x0,x1);box.r=Math.max(x0,x1);box.t=Math.min(y0,y1);box.b=Math.max(y0,y1);function noZoom(){zoomMode='';box.r=box.l;box.t=box.b;corners.attr('d','M0,0Z');}if(isSubplotConstrained){if(dx>MINZOOM||dy>MINZOOM){zoomMode='xy';if(dx/pw>dy/ph){dy=dx*ph/pw;if(y0>y1)box.t=y0-dy;else box.b=y0+dy;}else{dx=dy*pw/ph;if(x0>x1)box.l=x0-dx;else box.r=x0+dx;}corners.attr('d',xyCorners(box));}else{noZoom();}}// look for small drags in one direction or the other,\n// and only drag the other axis\nelse if(!yActive||dy<Math.min(Math.max(dx*0.6,MINDRAG),MINZOOM)){if(dx<MINDRAG||!xActive){noZoom();}else{box.t=0;box.b=ph;zoomMode='x';corners.attr('d',xCorners(box,y0));}}else if(!xActive||dx<Math.min(dy*0.6,MINZOOM)){box.l=0;box.r=pw;zoomMode='y';corners.attr('d',yCorners(box,x0));}else{zoomMode='xy';corners.attr('d',xyCorners(box));}box.w=box.r-box.l;box.h=box.b-box.t;if(zoomMode)zoomDragged=true;gd._dragged=zoomDragged;updateZoombox(zb,corners,box,path0,dimmed,lum);dimmed=true;}function zoomDone(){updates={};// more strict than dragged, which allows you to come back to where you started\n// and still count as dragged\nif(Math.min(box.h,box.w)<MINDRAG*2){return removeZoombox(gd);}// TODO: edit linked axes in zoomAxRanges and in dragTail\nif(zoomMode==='xy'||zoomMode==='x'){zoomAxRanges(xaxes,box.l/pw,box.r/pw,updates,links.xaxes);}if(zoomMode==='xy'||zoomMode==='y'){zoomAxRanges(yaxes,(ph-box.b)/ph,(ph-box.t)/ph,updates,links.yaxes);}removeZoombox(gd);dragTail();showDoubleClickNotifier(gd);}// scroll zoom, on all draggers except corners\nvar scrollViewBox=[0,0,pw,ph];// wait a little after scrolling before redrawing\nvar redrawTimer=null;var REDRAWDELAY=constants.REDRAWDELAY;var mainplot=plotinfo.mainplot?gd._fullLayout._plots[plotinfo.mainplot]:plotinfo;function zoomWheel(e){// deactivate mousewheel scrolling on embedded graphs\n// devs can override this with layout._enablescrollzoom,\n// but _ ensures this setting won't leave their page\nif(!gd._context.scrollZoom&&!gd._fullLayout._enablescrollzoom){return;}clearAndResetSelect();// If a transition is in progress, then disable any behavior:\nif(gd._transitioningWithDuration){e.preventDefault();e.stopPropagation();return;}var pc=gd.querySelector('.plotly');recomputeAxisLists();// if the plot has scrollbars (more than a tiny excess)\n// disable scrollzoom too.\nif(pc.scrollHeight-pc.clientHeight>10||pc.scrollWidth-pc.clientWidth>10){return;}clearTimeout(redrawTimer);var wheelDelta=-e.deltaY;if(!isFinite(wheelDelta))wheelDelta=e.wheelDelta/10;if(!isFinite(wheelDelta)){Lib.log('Did not find wheel motion attributes: ',e);return;}var zoom=Math.exp(-Math.min(Math.max(wheelDelta,-20),20)/200);var gbb=mainplot.draglayer.select('.nsewdrag').node().getBoundingClientRect();var xfrac=(e.clientX-gbb.left)/gbb.width;var yfrac=(gbb.bottom-e.clientY)/gbb.height;var i;function zoomWheelOneAxis(ax,centerFraction,zoom){if(ax.fixedrange)return;var axRange=Lib.simpleMap(ax.range,ax.r2l);var v0=axRange[0]+(axRange[1]-axRange[0])*centerFraction;function doZoom(v){return ax.l2r(v0+(v-v0)*zoom);}ax.range=axRange.map(doZoom);}if(editX){// if we're only zooming this axis because of constraints,\n// zoom it about the center\nif(!ew)xfrac=0.5;for(i=0;i<xaxes.length;i++){zoomWheelOneAxis(xaxes[i],xfrac,zoom);}scrollViewBox[2]*=zoom;scrollViewBox[0]+=scrollViewBox[2]*xfrac*(1/zoom-1);}if(editY){if(!ns)yfrac=0.5;for(i=0;i<yaxes.length;i++){zoomWheelOneAxis(yaxes[i],yfrac,zoom);}scrollViewBox[3]*=zoom;scrollViewBox[1]+=scrollViewBox[3]*(1-yfrac)*(1/zoom-1);}// viewbox redraw at first\nupdateSubplots(scrollViewBox);ticksAndAnnotations(ns,ew);// then replot after a delay to make sure\n// no more scrolling is coming\nredrawTimer=setTimeout(function(){scrollViewBox=[0,0,pw,ph];dragTail();},REDRAWDELAY);e.preventDefault();return;}// everything but the corners gets wheel zoom\nif(ns.length*ew.length!==1){attachWheelEventHandler(dragger,zoomWheel);}// plotDrag: move the plot in response to a drag\nfunction plotDrag(dx,dy){// If a transition is in progress, then disable any behavior:\nif(gd._transitioningWithDuration){return;}// prevent axis drawing from monkeying with margins until we're done\ngd._fullLayout._replotting=true;if(xActive==='ew'||yActive==='ns'){if(xActive)dragAxList(xaxes,dx);if(yActive)dragAxList(yaxes,dy);updateSubplots([xActive?-dx:0,yActive?-dy:0,pw,ph]);ticksAndAnnotations(yActive,xActive);return;}// dz: set a new value for one end (0 or 1) of an axis array axArray,\n// and return a pixel shift for that end for the viewbox\n// based on pixel drag distance d\n// TODO: this makes (generally non-fatal) errors when you get\n// near floating point limits\nfunction dz(axArray,end,d){var otherEnd=1-end;var movedAx;var newLinearizedEnd;for(var i=0;i<axArray.length;i++){var axi=axArray[i];if(axi.fixedrange)continue;movedAx=axi;newLinearizedEnd=axi._rl[otherEnd]+(axi._rl[end]-axi._rl[otherEnd])/dZoom(d/axi._length);var newEnd=axi.l2r(newLinearizedEnd);// if l2r comes back false or undefined, it means we've dragged off\n// the end of valid ranges - so stop.\nif(newEnd!==false&&newEnd!==undefined)axi.range[end]=newEnd;}return movedAx._length*(movedAx._rl[end]-newLinearizedEnd)/(movedAx._rl[end]-movedAx._rl[otherEnd]);}if(isSubplotConstrained&&xActive&&yActive){// dragging a corner of a constrained subplot:\n// respect the fixed corner, but harmonize dx and dy\nvar dxySign=xActive==='w'===(yActive==='n')?1:-1;var dxyFraction=(dx/pw+dxySign*dy/ph)/2;dx=dxyFraction*pw;dy=dxySign*dxyFraction*ph;}if(xActive==='w')dx=dz(xaxes,0,dx);else if(xActive==='e')dx=dz(xaxes,1,-dx);else if(!xActive)dx=0;if(yActive==='n')dy=dz(yaxes,1,dy);else if(yActive==='s')dy=dz(yaxes,0,-dy);else if(!yActive)dy=0;var x0=xActive==='w'?dx:0;var y0=yActive==='n'?dy:0;if(isSubplotConstrained){var i;if(!xActive&&yActive.length===1){// dragging one end of the y axis of a constrained subplot\n// scale the other axis the same about its middle\nfor(i=0;i<xaxes.length;i++){xaxes[i].range=xaxes[i]._r.slice();scaleZoom(xaxes[i],1-dy/ph);}dx=dy*pw/ph;x0=dx/2;}if(!yActive&&xActive.length===1){for(i=0;i<yaxes.length;i++){yaxes[i].range=yaxes[i]._r.slice();scaleZoom(yaxes[i],1-dx/pw);}dy=dx*ph/pw;y0=dy/2;}}updateSubplots([x0,y0,pw-dx,ph-dy]);ticksAndAnnotations(yActive,xActive);}// Draw ticks and annotations (and other components) when ranges change.\n// Also records the ranges that have changed for use by update at the end.\nfunction ticksAndAnnotations(ns,ew){var activeAxIds=[];var i;function pushActiveAxIds(axList){for(i=0;i<axList.length;i++){if(!axList[i].fixedrange)activeAxIds.push(axList[i]._id);}}if(editX){pushActiveAxIds(xaxes);pushActiveAxIds(links.xaxes);}if(editY){pushActiveAxIds(yaxes);pushActiveAxIds(links.yaxes);}updates={};for(i=0;i<activeAxIds.length;i++){var axId=activeAxIds[i];var ax=getFromId(gd,axId);Axes.drawOne(gd,ax,{skipTitle:true});updates[ax._name+'.range[0]']=ax.range[0];updates[ax._name+'.range[1]']=ax.range[1];}function redrawObjs(objArray,method,shortCircuit){for(i=0;i<objArray.length;i++){var obji=objArray[i];if(ew&&activeAxIds.indexOf(obji.xref)!==-1||ns&&activeAxIds.indexOf(obji.yref)!==-1){method(gd,i);// once is enough for images (which doesn't use the `i` arg anyway)\nif(shortCircuit)return;}}}// annotations and shapes 'draw' method is slow,\n// use the finer-grained 'drawOne' method instead\nredrawObjs(gd._fullLayout.annotations||[],Registry.getComponentMethod('annotations','drawOne'));redrawObjs(gd._fullLayout.shapes||[],Registry.getComponentMethod('shapes','drawOne'));redrawObjs(gd._fullLayout.images||[],Registry.getComponentMethod('images','draw'),true);}function doubleClick(){if(gd._transitioningWithDuration)return;var doubleClickConfig=gd._context.doubleClick;var axList=(xActive?xaxes:[]).concat(yActive?yaxes:[]);var attrs={};var ax,i,rangeInitial;// For reset+autosize mode:\n// If *any* of the main axes is not at its initial range\n// (or autoranged, if we have no initial range, to match the logic in\n// doubleClickConfig === 'reset' below), we reset.\n// If they are *all* at their initial ranges, then we autosize.\nif(doubleClickConfig==='reset+autosize'){doubleClickConfig='autosize';for(i=0;i<axList.length;i++){ax=axList[i];if(ax._rangeInitial&&(ax.range[0]!==ax._rangeInitial[0]||ax.range[1]!==ax._rangeInitial[1])||!ax._rangeInitial&&!ax.autorange){doubleClickConfig='reset';break;}}}if(doubleClickConfig==='autosize'){// don't set the linked axes here, so relayout marks them as shrinkable\n// and we autosize just to the requested axis/axes\nfor(i=0;i<axList.length;i++){ax=axList[i];if(!ax.fixedrange)attrs[ax._name+'.autorange']=true;}}else if(doubleClickConfig==='reset'){// when we're resetting, reset all linked axes too, so we get back\n// to the fully-auto-with-constraints situation\nif(xActive||isSubplotConstrained)axList=axList.concat(links.xaxes);if(yActive&&!isSubplotConstrained)axList=axList.concat(links.yaxes);if(isSubplotConstrained){if(!xActive)axList=axList.concat(xaxes);else if(!yActive)axList=axList.concat(yaxes);}for(i=0;i<axList.length;i++){ax=axList[i];if(!ax.fixedrange){if(!ax._rangeInitial){attrs[ax._name+'.autorange']=true;}else{rangeInitial=ax._rangeInitial;attrs[ax._name+'.range[0]']=rangeInitial[0];attrs[ax._name+'.range[1]']=rangeInitial[1];}}}}gd.emit('plotly_doubleclick',null);Registry.call('_guiRelayout',gd,attrs);}// dragTail - finish a drag event with a redraw\nfunction dragTail(){// put the subplot viewboxes back to default (Because we're going to)\n// be repositioning the data in the relayout. But DON'T call\n// ticksAndAnnotations again - it's unnecessary and would overwrite `updates`\nupdateSubplots([0,0,pw,ph]);// since we may have been redrawing some things during the drag, we may have\n// accumulated MathJax promises - wait for them before we relayout.\nLib.syncOrAsync([Plots.previousPromises,function(){gd._fullLayout._replotting=false;Registry.call('_guiRelayout',gd,updates);}],gd);}// x/y scaleFactor stash,\n// minimizes number of per-point DOM updates in updateSubplots below\nvar xScaleFactorOld,yScaleFactorOld;// updateSubplots - find all plot viewboxes that should be\n// affected by this drag, and update them. look for all plots\n// sharing an affected axis (including the one being dragged),\n// includes also scattergl and splom logic.\nfunction updateSubplots(viewBox){var fullLayout=gd._fullLayout;var plotinfos=fullLayout._plots;var subplots=fullLayout._subplots.cartesian;var i,sp,xa,ya;if(hasSplom){Registry.subplotsRegistry.splom.drag(gd);}if(hasScatterGl){for(i=0;i<subplots.length;i++){sp=plotinfos[subplots[i]];xa=sp.xaxis;ya=sp.yaxis;if(sp._scene){var xrng=Lib.simpleMap(xa.range,xa.r2l);var yrng=Lib.simpleMap(ya.range,ya.r2l);sp._scene.update({range:[xrng[0],yrng[0],xrng[1],yrng[1]]});}}}if(hasSplom||hasScatterGl){clearGlCanvases(gd);redrawReglTraces(gd);}if(hasSVG){var xScaleFactor=viewBox[2]/xa0._length;var yScaleFactor=viewBox[3]/ya0._length;for(i=0;i<subplots.length;i++){sp=plotinfos[subplots[i]];xa=sp.xaxis;ya=sp.yaxis;var editX2=editX&&!xa.fixedrange&&xaHash[xa._id];var editY2=editY&&!ya.fixedrange&&yaHash[ya._id];var xScaleFactor2,yScaleFactor2;var clipDx,clipDy;if(editX2){xScaleFactor2=xScaleFactor;clipDx=ew?viewBox[0]:getShift(xa,xScaleFactor2);}else{xScaleFactor2=getLinkedScaleFactor(xa,xScaleFactor,yScaleFactor);clipDx=scaleAndGetShift(xa,xScaleFactor2);}if(editY2){yScaleFactor2=yScaleFactor;clipDy=ns?viewBox[1]:getShift(ya,yScaleFactor2);}else{yScaleFactor2=getLinkedScaleFactor(ya,xScaleFactor,yScaleFactor);clipDy=scaleAndGetShift(ya,yScaleFactor2);}// don't scale at all if neither axis is scalable here\nif(!xScaleFactor2&&!yScaleFactor2){continue;}// but if only one is, reset the other axis scaling\nif(!xScaleFactor2)xScaleFactor2=1;if(!yScaleFactor2)yScaleFactor2=1;var plotDx=xa._offset-clipDx/xScaleFactor2;var plotDy=ya._offset-clipDy/yScaleFactor2;// TODO could be more efficient here:\n// setTranslate and setScale do a lot of extra work\n// when working independently, should perhaps combine\n// them into a single routine.\nsp.clipRect.call(Drawing.setTranslate,clipDx,clipDy).call(Drawing.setScale,xScaleFactor2,yScaleFactor2);sp.plot.call(Drawing.setTranslate,plotDx,plotDy).call(Drawing.setScale,1/xScaleFactor2,1/yScaleFactor2);// apply an inverse scale to individual points to counteract\n// the scale of the trace group.\n// apply only when scale changes, as adjusting the scale of\n// all the points can be expansive.\nif(xScaleFactor2!==xScaleFactorOld||yScaleFactor2!==yScaleFactorOld){Drawing.setPointGroupScale(sp.zoomScalePts,xScaleFactor2,yScaleFactor2);Drawing.setTextPointsScale(sp.zoomScaleTxt,xScaleFactor2,yScaleFactor2);}Drawing.hideOutsideRangePoints(sp.clipOnAxisFalseTraces,sp);// update x/y scaleFactor stash\nxScaleFactorOld=xScaleFactor2;yScaleFactorOld=yScaleFactor2;}}}// Find the appropriate scaling for this axis, if it's linked to the\n// dragged axes by constraints. 0 is special, it means this axis shouldn't\n// ever be scaled (will be converted to 1 if the other axis is scaled)\nfunction getLinkedScaleFactor(ax,xScaleFactor,yScaleFactor){if(ax.fixedrange)return 0;if(editX&&links.xaHash[ax._id]){return xScaleFactor;}if(editY&&(isSubplotConstrained?links.xaHash:links.yaHash)[ax._id]){return yScaleFactor;}return 0;}function scaleAndGetShift(ax,scaleFactor){if(scaleFactor){ax.range=ax._r.slice();scaleZoom(ax,scaleFactor);return getShift(ax,scaleFactor);}return 0;}function getShift(ax,scaleFactor){return ax._length*(1-scaleFactor)*FROM_TL[ax.constraintoward||'middle'];}return dragger;}function makeDragger(plotinfo,nodeName,dragClass,cursor){var dragger3=Lib.ensureSingle(plotinfo.draglayer,nodeName,dragClass,function(s){s.classed('drag',true).style({fill:'transparent','stroke-width':0}).attr('data-subplot',plotinfo.id);});dragger3.call(setCursor,cursor);return dragger3.node();}function makeRectDragger(plotinfo,dragClass,cursor,x,y,w,h){var dragger=makeDragger(plotinfo,'rect',dragClass,cursor);d3.select(dragger).call(Drawing.setRect,x,y,w,h);return dragger;}function isDirectionActive(axList,activeVal){for(var i=0;i<axList.length;i++){if(!axList[i].fixedrange)return activeVal;}return'';}function getEndText(ax,end){var initialVal=ax.range[end];var diff=Math.abs(initialVal-ax.range[1-end]);var dig;// TODO: this should basically be ax.r2d but we're doing extra\n// rounding here... can we clean up at all?\nif(ax.type==='date'){return initialVal;}else if(ax.type==='log'){dig=Math.ceil(Math.max(0,-Math.log(diff)/Math.LN10))+3;return d3.format('.'+dig+'g')(Math.pow(10,initialVal));}else{// linear numeric (or category... but just show numbers here)\ndig=Math.floor(Math.log(Math.abs(initialVal))/Math.LN10)-Math.floor(Math.log(diff)/Math.LN10)+4;return d3.format('.'+String(dig)+'g')(initialVal);}}function zoomAxRanges(axList,r0Fraction,r1Fraction,updates,linkedAxes){var i,axi,axRangeLinear0,axRangeLinearSpan;for(i=0;i<axList.length;i++){axi=axList[i];if(axi.fixedrange)continue;axRangeLinear0=axi._rl[0];axRangeLinearSpan=axi._rl[1]-axRangeLinear0;axi.range=[axi.l2r(axRangeLinear0+axRangeLinearSpan*r0Fraction),axi.l2r(axRangeLinear0+axRangeLinearSpan*r1Fraction)];updates[axi._name+'.range[0]']=axi.range[0];updates[axi._name+'.range[1]']=axi.range[1];}// zoom linked axes about their centers\nif(linkedAxes&&linkedAxes.length){var linkedR0Fraction=(r0Fraction+(1-r1Fraction))/2;zoomAxRanges(linkedAxes,linkedR0Fraction,1-linkedR0Fraction,updates);}}function dragAxList(axList,pix){for(var i=0;i<axList.length;i++){var axi=axList[i];if(!axi.fixedrange){axi.range=[axi.l2r(axi._rl[0]-pix/axi._m),axi.l2r(axi._rl[1]-pix/axi._m)];}}}// common transform for dragging one end of an axis\n// d>0 is compressing scale (cursor is over the plot,\n//  the axis end should move with the cursor)\n// d<0 is expanding (cursor is off the plot, axis end moves\n//  nonlinearly so you can expand far)\nfunction dZoom(d){return 1-(d>=0?Math.min(d,0.9):1/(1/Math.max(d,-0.3)+3.222));}function getDragCursor(nsew,dragmode,isMainDrag){if(!nsew)return'pointer';if(nsew==='nsew'){// in this case here, clear cursor and\n// use the cursor style set on <g .draglayer>\nif(isMainDrag)return'';if(dragmode==='pan')return'move';return'crosshair';}return nsew.toLowerCase()+'-resize';}function makeZoombox(zoomlayer,lum,xs,ys,path0){return zoomlayer.append('path').attr('class','zoombox').style({'fill':lum>0.2?'rgba(0,0,0,0)':'rgba(255,255,255,0)','stroke-width':0}).attr('transform','translate('+xs+', '+ys+')').attr('d',path0+'Z');}function makeCorners(zoomlayer,xs,ys){return zoomlayer.append('path').attr('class','zoombox-corners').style({fill:Color.background,stroke:Color.defaultLine,'stroke-width':1,opacity:0}).attr('transform','translate('+xs+', '+ys+')').attr('d','M0,0Z');}function updateZoombox(zb,corners,box,path0,dimmed,lum){zb.attr('d',path0+'M'+box.l+','+box.t+'v'+box.h+'h'+box.w+'v-'+box.h+'h-'+box.w+'Z');transitionZoombox(zb,corners,dimmed,lum);}function transitionZoombox(zb,corners,dimmed,lum){if(!dimmed){zb.transition().style('fill',lum>0.2?'rgba(0,0,0,0.4)':'rgba(255,255,255,0.3)').duration(200);corners.transition().style('opacity',1).duration(200);}}function removeZoombox(gd){d3.select(gd).selectAll('.zoombox,.js-zoombox-backdrop,.js-zoombox-menu,.zoombox-corners').remove();}function showDoubleClickNotifier(gd){if(SHOWZOOMOUTTIP&&gd.data&&gd._context.showTips){Lib.notifier(Lib._(gd,'Double-click to zoom back out'),'long');SHOWZOOMOUTTIP=false;}}function isSelectOrLasso(dragmode){return dragmode==='lasso'||dragmode==='select';}function xCorners(box,y0){return'M'+(box.l-0.5)+','+(y0-MINZOOM-0.5)+'h-3v'+(2*MINZOOM+1)+'h3ZM'+(box.r+0.5)+','+(y0-MINZOOM-0.5)+'h3v'+(2*MINZOOM+1)+'h-3Z';}function yCorners(box,x0){return'M'+(x0-MINZOOM-0.5)+','+(box.t-0.5)+'v-3h'+(2*MINZOOM+1)+'v3ZM'+(x0-MINZOOM-0.5)+','+(box.b+0.5)+'v3h'+(2*MINZOOM+1)+'v-3Z';}function xyCorners(box){var clen=Math.floor(Math.min(box.b-box.t,box.r-box.l,MINZOOM)/2);return'M'+(box.l-3.5)+','+(box.t-0.5+clen)+'h3v'+-clen+'h'+clen+'v-3h-'+(clen+3)+'ZM'+(box.r+3.5)+','+(box.t-0.5+clen)+'h-3v'+-clen+'h'+-clen+'v-3h'+(clen+3)+'ZM'+(box.r+3.5)+','+(box.b+0.5-clen)+'h-3v'+clen+'h'+-clen+'v3h'+(clen+3)+'ZM'+(box.l-3.5)+','+(box.b+0.5-clen)+'h3v'+clen+'h'+clen+'v3h-'+(clen+3)+'Z';}function calcLinks(gd,xaHash,yaHash){var constraintGroups=gd._fullLayout._axisConstraintGroups;var isSubplotConstrained=false;var xLinks={};var yLinks={};var xID,yID,xLinkID,yLinkID;for(var i=0;i<constraintGroups.length;i++){var group=constraintGroups[i];// check if any of the x axes we're dragging is in this constraint group\nfor(xID in xaHash){if(group[xID]){// put the rest of these axes into xLinks, if we're not already\n// dragging them, so we know to scale these axes automatically too\n// to match the changes in the dragged x axes\nfor(xLinkID in group){if(!(xLinkID.charAt(0)==='x'?xaHash:yaHash)[xLinkID]){xLinks[xLinkID]=1;}}// check if the x and y axes of THIS drag are linked\nfor(yID in yaHash){if(group[yID])isSubplotConstrained=true;}}}// now check if any of the y axes we're dragging is in this constraint group\n// only look for outside links, as we've already checked for links within the dragger\nfor(yID in yaHash){if(group[yID]){for(yLinkID in group){if(!(yLinkID.charAt(0)==='x'?xaHash:yaHash)[yLinkID]){yLinks[yLinkID]=1;}}}}}if(isSubplotConstrained){// merge xLinks and yLinks if the subplot is constrained,\n// since we'll always apply both anyway and the two will contain\n// duplicates\nLib.extendFlat(xLinks,yLinks);yLinks={};}var xaHashLinked={};var xaxesLinked=[];for(xLinkID in xLinks){var xa=getFromId(gd,xLinkID);xaxesLinked.push(xa);xaHashLinked[xa._id]=xa;}var yaHashLinked={};var yaxesLinked=[];for(yLinkID in yLinks){var ya=getFromId(gd,yLinkID);yaxesLinked.push(ya);yaHashLinked[ya._id]=ya;}return{xaHash:xaHashLinked,yaHash:yaHashLinked,xaxes:xaxesLinked,yaxes:yaxesLinked,isSubplotConstrained:isSubplotConstrained};}// still seems to be some confusion about onwheel vs onmousewheel...\nfunction attachWheelEventHandler(element,handler){if(!supportsPassive){if(element.onwheel!==undefined)element.onwheel=handler;else if(element.onmousewheel!==undefined)element.onmousewheel=handler;}else{var wheelEventName=element.onwheel!==undefined?'wheel':'mousewheel';if(element._onwheel){element.removeEventListener(wheelEventName,element._onwheel);}element._onwheel=handler;element.addEventListener(wheelEventName,handler,{passive:false});}}function hashValues(hash){var out=[];for(var k in hash){out.push(hash[k]);}return out;}module.exports={makeDragBox:makeDragBox,makeDragger:makeDragger,makeRectDragger:makeRectDragger,makeZoombox:makeZoombox,makeCorners:makeCorners,updateZoombox:updateZoombox,xyCorners:xyCorners,transitionZoombox:transitionZoombox,removeZoombox:removeZoombox,showDoubleClickNotifier:showDoubleClickNotifier,attachWheelEventHandler:attachWheelEventHandler};},{\"../../components/color\":299,\"../../components/dragelement\":317,\"../../components/drawing\":320,\"../../components/fx\":338,\"../../constants/alignment\":394,\"../../lib\":423,\"../../lib/clear_gl_canvases\":411,\"../../lib/setcursor\":442,\"../../lib/svg_text_utils\":446,\"../../plot_api/subroutines\":460,\"../../registry\":521,\"../plots\":513,\"./axes\":469,\"./axis_ids\":472,\"./constants\":475,\"./scale_zoom\":486,\"./select\":487,\"d3\":71,\"has-passive-events\":164,\"tinycolor2\":264}],479:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Fx=_dereq_('../../components/fx');var dragElement=_dereq_('../../components/dragelement');var setCursor=_dereq_('../../lib/setcursor');var makeDragBox=_dereq_('./dragbox').makeDragBox;var DRAGGERSIZE=_dereq_('./constants').DRAGGERSIZE;exports.initInteractions=function initInteractions(gd){var fullLayout=gd._fullLayout;if(gd._context.staticPlot){// this sweeps up more than just cartesian drag elements...\nd3.select(gd).selectAll('.drag').remove();return;}if(!fullLayout._has('cartesian')&&!fullLayout._has('splom'))return;var subplots=Object.keys(fullLayout._plots||{}).sort(function(a,b){// sort overlays last, then by x axis number, then y axis number\nif((fullLayout._plots[a].mainplot&&true)===(fullLayout._plots[b].mainplot&&true)){var aParts=a.split('y');var bParts=b.split('y');return aParts[0]===bParts[0]?Number(aParts[1]||1)-Number(bParts[1]||1):Number(aParts[0]||1)-Number(bParts[0]||1);}return fullLayout._plots[a].mainplot?1:-1;});subplots.forEach(function(subplot){var plotinfo=fullLayout._plots[subplot];var xa=plotinfo.xaxis;var ya=plotinfo.yaxis;// main and corner draggers need not be repeated for\n// overlaid subplots - these draggers drag them all\nif(!plotinfo.mainplot){// main dragger goes over the grids and data, so we use its\n// mousemove events for all data hover effects\nvar maindrag=makeDragBox(gd,plotinfo,xa._offset,ya._offset,xa._length,ya._length,'ns','ew');maindrag.onmousemove=function(evt){// This is on `gd._fullLayout`, *not* fullLayout because the reference\n// changes by the time this is called again.\ngd._fullLayout._rehover=function(){if(gd._fullLayout._hoversubplot===subplot){Fx.hover(gd,evt,subplot);}};Fx.hover(gd,evt,subplot);// Note that we have *not* used the cached fullLayout variable here\n// since that may be outdated when this is called as a callback later on\ngd._fullLayout._lasthover=maindrag;gd._fullLayout._hoversubplot=subplot;};/*\n             * IMPORTANT:\n             * We must check for the presence of the drag cover here.\n             * If we don't, a 'mouseout' event is triggered on the\n             * maindrag before each 'click' event, which has the effect\n             * of clearing the hoverdata; thus, cancelling the click event.\n             */maindrag.onmouseout=function(evt){if(gd._dragging)return;// When the mouse leaves this maindrag, unset the hovered subplot.\n// This may cause problems if it leaves the subplot directly *onto*\n// another subplot, but that's a tiny corner case at the moment.\ngd._fullLayout._hoversubplot=null;dragElement.unhover(gd,evt);};// corner draggers\nif(gd._context.showAxisDragHandles){makeDragBox(gd,plotinfo,xa._offset-DRAGGERSIZE,ya._offset-DRAGGERSIZE,DRAGGERSIZE,DRAGGERSIZE,'n','w');makeDragBox(gd,plotinfo,xa._offset+xa._length,ya._offset-DRAGGERSIZE,DRAGGERSIZE,DRAGGERSIZE,'n','e');makeDragBox(gd,plotinfo,xa._offset-DRAGGERSIZE,ya._offset+ya._length,DRAGGERSIZE,DRAGGERSIZE,'s','w');makeDragBox(gd,plotinfo,xa._offset+xa._length,ya._offset+ya._length,DRAGGERSIZE,DRAGGERSIZE,'s','e');}}if(gd._context.showAxisDragHandles){// x axis draggers - if you have overlaid plots,\n// these drag each axis separately\nif(subplot===xa._mainSubplot){// the y position of the main x axis line\nvar y0=xa._mainLinePosition;if(xa.side==='top')y0-=DRAGGERSIZE;makeDragBox(gd,plotinfo,xa._offset+xa._length*0.1,y0,xa._length*0.8,DRAGGERSIZE,'','ew');makeDragBox(gd,plotinfo,xa._offset,y0,xa._length*0.1,DRAGGERSIZE,'','w');makeDragBox(gd,plotinfo,xa._offset+xa._length*0.9,y0,xa._length*0.1,DRAGGERSIZE,'','e');}// y axis draggers\nif(subplot===ya._mainSubplot){// the x position of the main y axis line\nvar x0=ya._mainLinePosition;if(ya.side!=='right')x0-=DRAGGERSIZE;makeDragBox(gd,plotinfo,x0,ya._offset+ya._length*0.1,DRAGGERSIZE,ya._length*0.8,'ns','');makeDragBox(gd,plotinfo,x0,ya._offset+ya._length*0.9,DRAGGERSIZE,ya._length*0.1,'s','');makeDragBox(gd,plotinfo,x0,ya._offset,DRAGGERSIZE,ya._length*0.1,'n','');}}});// In case you mousemove over some hovertext, send it to Fx.hover too\n// we do this so that we can put the hover text in front of everything,\n// but still be able to interact with everything as if it isn't there\nvar hoverLayer=fullLayout._hoverlayer.node();hoverLayer.onmousemove=function(evt){evt.target=gd._fullLayout._lasthover;Fx.hover(gd,evt,fullLayout._hoversubplot);};hoverLayer.onclick=function(evt){evt.target=gd._fullLayout._lasthover;Fx.click(gd,evt);};// also delegate mousedowns... TODO: does this actually work?\nhoverLayer.onmousedown=function(evt){gd._fullLayout._lasthover.onmousedown(evt);};exports.updateFx(gd);};// Minimal set of update needed on 'modebar' edits.\n// We only need to update the <g .draglayer> cursor style.\n//\n// Note that changing the axis configuration and/or the fixedrange attribute\n// should trigger a full initInteractions.\nexports.updateFx=function(gd){var fullLayout=gd._fullLayout;var cursor=fullLayout.dragmode==='pan'?'move':'crosshair';setCursor(fullLayout._draggers,cursor);};},{\"../../components/dragelement\":317,\"../../components/fx\":338,\"../../lib/setcursor\":442,\"./constants\":475,\"./dragbox\":478,\"d3\":71}],480:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');/**\n * Factory function for checking component arrays for subplot references.\n *\n * @param {string} containerArrayName: the top-level array in gd.layout to check\n *   If an item in this container is found that references a cartesian x and/or y axis,\n *   ensure cartesian is marked as a base plot module and record the axes (and subplot\n *   if both refs are axes) in gd._fullLayout\n *\n * @return {function}: with args layoutIn (gd.layout) and layoutOut (gd._fullLayout)\n * as expected of a component includeBasePlot method\n */module.exports=function makeIncludeComponents(containerArrayName){return function includeComponents(layoutIn,layoutOut){var array=layoutIn[containerArrayName];if(!Array.isArray(array))return;var Cartesian=Registry.subplotsRegistry.cartesian;var idRegex=Cartesian.idRegex;var subplots=layoutOut._subplots;var xaList=subplots.xaxis;var yaList=subplots.yaxis;var cartesianList=subplots.cartesian;var hasCartesianOrGL2D=layoutOut._has('cartesian')||layoutOut._has('gl2d');for(var i=0;i<array.length;i++){var itemi=array[i];if(!Lib.isPlainObject(itemi))continue;var xref=itemi.xref;var yref=itemi.yref;var hasXref=idRegex.x.test(xref);var hasYref=idRegex.y.test(yref);if(hasXref||hasYref){if(!hasCartesianOrGL2D)Lib.pushUnique(layoutOut._basePlotModules,Cartesian);var newAxis=false;if(hasXref&&xaList.indexOf(xref)===-1){xaList.push(xref);newAxis=true;}if(hasYref&&yaList.indexOf(yref)===-1){yaList.push(yref);newAxis=true;}/*\n                 * Notice the logic here: only add a subplot for a component if\n                 * it's referencing both x and y axes AND it's creating a new axis\n                 * so for example if your plot already has xy and x2y2, an annotation\n                 * on x2y or xy2 will not create a new subplot.\n                 */if(newAxis&&hasXref&&hasYref){cartesianList.push(xref+yref);}}}};};},{\"../../lib\":423,\"../../registry\":521}],481:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var Plots=_dereq_('../plots');var Drawing=_dereq_('../../components/drawing');var getModuleCalcData=_dereq_('../get_data').getModuleCalcData;var axisIds=_dereq_('./axis_ids');var constants=_dereq_('./constants');var xmlnsNamespaces=_dereq_('../../constants/xmlns_namespaces');var ensureSingle=Lib.ensureSingle;function ensureSingleAndAddDatum(parent,nodeType,className){return Lib.ensureSingle(parent,nodeType,className,function(s){s.datum(className);});}exports.name='cartesian';exports.attr=['xaxis','yaxis'];exports.idRoot=['x','y'];exports.idRegex=constants.idRegex;exports.attrRegex=constants.attrRegex;exports.attributes=_dereq_('./attributes');exports.layoutAttributes=_dereq_('./layout_attributes');exports.supplyLayoutDefaults=_dereq_('./layout_defaults');exports.transitionAxes=_dereq_('./transition_axes');exports.finalizeSubplots=function(layoutIn,layoutOut){var subplots=layoutOut._subplots;var xList=subplots.xaxis;var yList=subplots.yaxis;var spSVG=subplots.cartesian;var spAll=spSVG.concat(subplots.gl2d||[]);var allX={};var allY={};var i,xi,yi;for(i=0;i<spAll.length;i++){var parts=spAll[i].split('y');allX[parts[0]]=1;allY['y'+parts[1]]=1;}// check for x axes with no subplot, and make one from the anchor of that x axis\nfor(i=0;i<xList.length;i++){xi=xList[i];if(!allX[xi]){yi=(layoutIn[axisIds.id2name(xi)]||{}).anchor;if(!constants.idRegex.y.test(yi))yi='y';spSVG.push(xi+yi);spAll.push(xi+yi);if(!allY[yi]){allY[yi]=1;Lib.pushUnique(yList,yi);}}}// same for y axes with no subplot\nfor(i=0;i<yList.length;i++){yi=yList[i];if(!allY[yi]){xi=(layoutIn[axisIds.id2name(yi)]||{}).anchor;if(!constants.idRegex.x.test(xi))xi='x';spSVG.push(xi+yi);spAll.push(xi+yi);if(!allX[xi]){allX[xi]=1;Lib.pushUnique(xList,xi);}}}// finally, if we've gotten here we're supposed to show cartesian...\n// so if there are NO subplots at all, make one from the first\n// x & y axes in the input layout\nif(!spAll.length){xi='';yi='';for(var ki in layoutIn){if(constants.attrRegex.test(ki)){var axLetter=ki.charAt(0);if(axLetter==='x'){if(!xi||+ki.substr(5)<+xi.substr(5)){xi=ki;}}else if(!yi||+ki.substr(5)<+yi.substr(5)){yi=ki;}}}xi=xi?axisIds.name2id(xi):'x';yi=yi?axisIds.name2id(yi):'y';xList.push(xi);yList.push(yi);spSVG.push(xi+yi);}};/**\n * Cartesian.plot\n *\n * @param {DOM div | object} gd\n * @param {array | null} (optional) traces\n *  array of traces indices to plot\n *  if undefined, plots all cartesian traces,\n *  if null, plots no traces\n * @param {object} (optional) transitionOpts\n *  transition option object\n * @param {function} (optional) makeOnCompleteCallback\n *  transition make callback function from Plots.transition\n */exports.plot=function(gd,traces,transitionOpts,makeOnCompleteCallback){var fullLayout=gd._fullLayout;var subplots=fullLayout._subplots.cartesian;var calcdata=gd.calcdata;var i;if(traces===null){// this means no updates required, must return here\n// so that plotOne doesn't remove the trace layers\nreturn;}else if(!Array.isArray(traces)){// If traces is not provided, then it's a complete replot and missing\n// traces are removed\ntraces=[];for(i=0;i<calcdata.length;i++){traces.push(i);}}for(i=0;i<subplots.length;i++){var subplot=subplots[i];var subplotInfo=fullLayout._plots[subplot];// Get all calcdata for this subplot:\nvar cdSubplot=[];var pcd;for(var j=0;j<calcdata.length;j++){var cd=calcdata[j];var trace=cd[0].trace;// Skip trace if whitelist provided and it's not whitelisted:\n// if (Array.isArray(traces) && traces.indexOf(i) === -1) continue;\nif(trace.xaxis+trace.yaxis===subplot){// XXX: Should trace carpet dependencies. Only replot all carpet plots if the carpet\n// axis has actually changed:\n//\n// If this trace is specifically requested, add it to the list:\nif(traces.indexOf(trace.index)!==-1||trace.carpet){// Okay, so example: traces 0, 1, and 2 have fill = tonext. You animate\n// traces 0 and 2. Trace 1 also needs to be updated, otherwise its fill\n// is outdated. So this retroactively adds the previous trace if the\n// traces are interdependent.\nif(pcd&&pcd[0].trace.xaxis+pcd[0].trace.yaxis===subplot&&['tonextx','tonexty','tonext'].indexOf(trace.fill)!==-1&&cdSubplot.indexOf(pcd)===-1){cdSubplot.push(pcd);}cdSubplot.push(cd);}// Track the previous trace on this subplot for the retroactive-add step\n// above:\npcd=cd;}}plotOne(gd,subplotInfo,cdSubplot,transitionOpts,makeOnCompleteCallback);}};function plotOne(gd,plotinfo,cdSubplot,transitionOpts,makeOnCompleteCallback){var traceLayerClasses=constants.traceLayerClasses;var fullLayout=gd._fullLayout;var modules=fullLayout._modules;var _module,cdModuleAndOthers,cdModule;var layerData=[];var zoomScaleQueryParts=[];for(var i=0;i<modules.length;i++){_module=modules[i];var name=_module.name;var categories=Registry.modules[name].categories;if(categories.svg){var className=_module.layerName||name+'layer';var plotMethod=_module.plot;// plot all visible traces of this type on this subplot at once\ncdModuleAndOthers=getModuleCalcData(cdSubplot,plotMethod);cdModule=cdModuleAndOthers[0];// don't need to search the found traces again - in fact we need to NOT\n// so that if two modules share the same plotter we don't double-plot\ncdSubplot=cdModuleAndOthers[1];if(cdModule.length){layerData.push({i:traceLayerClasses.indexOf(className),className:className,plotMethod:plotMethod,cdModule:cdModule});}if(categories.zoomScale){zoomScaleQueryParts.push('.'+className);}}}layerData.sort(function(a,b){return a.i-b.i;});var layers=plotinfo.plot.selectAll('g.mlayer').data(layerData,function(d){return d.className;});layers.enter().append('g').attr('class',function(d){return d.className;}).classed('mlayer',true);layers.exit().remove();layers.order();layers.each(function(d){var sel=d3.select(this);var className=d.className;d.plotMethod(gd,plotinfo,d.cdModule,sel,transitionOpts,makeOnCompleteCallback);// layers that allow `cliponaxis: false`\nif(className!=='scatterlayer'&&className!=='barlayer'){Drawing.setClipUrl(sel,plotinfo.layerClipId,gd);}});// call Scattergl.plot separately\nif(fullLayout._has('scattergl')){_module=Registry.getModule('scattergl');cdModule=getModuleCalcData(cdSubplot,_module)[0];_module.plot(gd,plotinfo,cdModule);}// stash \"hot\" selections for faster interaction on drag and scroll\nif(!gd._context.staticPlot){if(plotinfo._hasClipOnAxisFalse){plotinfo.clipOnAxisFalseTraces=plotinfo.plot.selectAll('.scatterlayer, .barlayer').selectAll('.trace');}if(zoomScaleQueryParts.length){var traces=plotinfo.plot.selectAll(zoomScaleQueryParts.join(',')).selectAll('.trace');plotinfo.zoomScalePts=traces.selectAll('path.point');plotinfo.zoomScaleTxt=traces.selectAll('.textpoint');}}}exports.clean=function(newFullData,newFullLayout,oldFullData,oldFullLayout){var oldPlots=oldFullLayout._plots||{};var newPlots=newFullLayout._plots||{};var oldSubplotList=oldFullLayout._subplots||{};var plotinfo;var i,k;// when going from a large splom graph to something else,\n// we need to clear <g subplot> so that the new cartesian subplot\n// can have the correct layer ordering\nif(oldFullLayout._hasOnlyLargeSploms&&!newFullLayout._hasOnlyLargeSploms){for(k in oldPlots){plotinfo=oldPlots[k];if(plotinfo.plotgroup)plotinfo.plotgroup.remove();}}var hadGl=oldFullLayout._has&&oldFullLayout._has('gl');var hasGl=newFullLayout._has&&newFullLayout._has('gl');if(hadGl&&!hasGl){for(k in oldPlots){plotinfo=oldPlots[k];if(plotinfo._scene)plotinfo._scene.destroy();}}// delete any titles we don't need anymore\n// check if axis list has changed, and if so clear old titles\nif(oldSubplotList.xaxis&&oldSubplotList.yaxis){var oldAxIDs=axisIds.listIds({_fullLayout:oldFullLayout});for(i=0;i<oldAxIDs.length;i++){var oldAxId=oldAxIDs[i];if(!newFullLayout[axisIds.id2name(oldAxId)]){oldFullLayout._infolayer.selectAll('.g-'+oldAxId+'title').remove();}}}// if we've gotten rid of all cartesian traces, remove all the subplot svg items\nvar hadCartesian=oldFullLayout._has&&oldFullLayout._has('cartesian');var hasCartesian=newFullLayout._has&&newFullLayout._has('cartesian');if(hadCartesian&&!hasCartesian){purgeSubplotLayers(oldFullLayout._cartesianlayer.selectAll('.subplot'),oldFullLayout);oldFullLayout._defs.selectAll('.axesclip').remove();delete oldFullLayout._axisConstraintGroups;}// otherwise look for subplots we need to remove\nelse if(oldSubplotList.cartesian){for(i=0;i<oldSubplotList.cartesian.length;i++){var oldSubplotId=oldSubplotList.cartesian[i];if(!newPlots[oldSubplotId]){var selector='.'+oldSubplotId+',.'+oldSubplotId+'-x,.'+oldSubplotId+'-y';oldFullLayout._cartesianlayer.selectAll(selector).remove();removeSubplotExtras(oldSubplotId,oldFullLayout);}}}};exports.drawFramework=function(gd){var fullLayout=gd._fullLayout;var subplotData=makeSubplotData(gd);var subplotLayers=fullLayout._cartesianlayer.selectAll('.subplot').data(subplotData,String);subplotLayers.enter().append('g').attr('class',function(d){return'subplot '+d[0];});subplotLayers.order();subplotLayers.exit().call(purgeSubplotLayers,fullLayout);subplotLayers.each(function(d){var id=d[0];var plotinfo=fullLayout._plots[id];plotinfo.plotgroup=d3.select(this);makeSubplotLayer(gd,plotinfo);// make separate drag layers for each subplot,\n// but append them to paper rather than the plot groups,\n// so they end up on top of the rest\nplotinfo.draglayer=ensureSingle(fullLayout._draggers,'g',id);});};exports.rangePlot=function(gd,plotinfo,cdSubplot){makeSubplotLayer(gd,plotinfo);plotOne(gd,plotinfo,cdSubplot);Plots.style(gd);};function makeSubplotData(gd){var fullLayout=gd._fullLayout;var ids=fullLayout._subplots.cartesian;var len=ids.length;var i,j,id,plotinfo,xa,ya;// split 'regular' and 'overlaying' subplots\nvar regulars=[];var overlays=[];for(i=0;i<len;i++){id=ids[i];plotinfo=fullLayout._plots[id];xa=plotinfo.xaxis;ya=plotinfo.yaxis;var xa2=xa._mainAxis;var ya2=ya._mainAxis;var mainplot=xa2._id+ya2._id;var mainplotinfo=fullLayout._plots[mainplot];plotinfo.overlays=[];if(mainplot!==id&&mainplotinfo){plotinfo.mainplot=mainplot;plotinfo.mainplotinfo=mainplotinfo;overlays.push(id);}else{plotinfo.mainplot=undefined;plotinfo.mainPlotinfo=undefined;regulars.push(id);}}// fill in list of overlaying subplots in 'main plot'\nfor(i=0;i<overlays.length;i++){id=overlays[i];plotinfo=fullLayout._plots[id];plotinfo.mainplotinfo.overlays.push(plotinfo);}// put 'regular' subplot data before 'overlaying'\nvar subplotIds=regulars.concat(overlays);var subplotData=new Array(len);for(i=0;i<len;i++){id=subplotIds[i];plotinfo=fullLayout._plots[id];xa=plotinfo.xaxis;ya=plotinfo.yaxis;// use info about axis layer and overlaying pattern\n// to clean what need to be cleaned up in exit selection\nvar d=[id,xa.layer,ya.layer,xa.overlaying||'',ya.overlaying||''];for(j=0;j<plotinfo.overlays.length;j++){d.push(plotinfo.overlays[j].id);}subplotData[i]=d;}return subplotData;}function makeSubplotLayer(gd,plotinfo){var plotgroup=plotinfo.plotgroup;var id=plotinfo.id;var xLayer=constants.layerValue2layerClass[plotinfo.xaxis.layer];var yLayer=constants.layerValue2layerClass[plotinfo.yaxis.layer];var hasOnlyLargeSploms=gd._fullLayout._hasOnlyLargeSploms;if(!plotinfo.mainplot){if(hasOnlyLargeSploms){// TODO could do even better\n// - we don't need plot (but we would have to mock it in lsInner\n//   and other places\n// - we don't (x|y)lines and (x|y)axislayer for most subplots\n//   usually just the bottom x and left y axes.\nplotinfo.xlines=ensureSingle(plotgroup,'path','xlines-above');plotinfo.ylines=ensureSingle(plotgroup,'path','ylines-above');plotinfo.xaxislayer=ensureSingle(plotgroup,'g','xaxislayer-above');plotinfo.yaxislayer=ensureSingle(plotgroup,'g','yaxislayer-above');}else{var backLayer=ensureSingle(plotgroup,'g','layer-subplot');plotinfo.shapelayer=ensureSingle(backLayer,'g','shapelayer');plotinfo.imagelayer=ensureSingle(backLayer,'g','imagelayer');plotinfo.gridlayer=ensureSingle(plotgroup,'g','gridlayer');plotinfo.zerolinelayer=ensureSingle(plotgroup,'g','zerolinelayer');ensureSingle(plotgroup,'path','xlines-below');ensureSingle(plotgroup,'path','ylines-below');plotinfo.overlinesBelow=ensureSingle(plotgroup,'g','overlines-below');ensureSingle(plotgroup,'g','xaxislayer-below');ensureSingle(plotgroup,'g','yaxislayer-below');plotinfo.overaxesBelow=ensureSingle(plotgroup,'g','overaxes-below');plotinfo.plot=ensureSingle(plotgroup,'g','plot');plotinfo.overplot=ensureSingle(plotgroup,'g','overplot');plotinfo.xlines=ensureSingle(plotgroup,'path','xlines-above');plotinfo.ylines=ensureSingle(plotgroup,'path','ylines-above');plotinfo.overlinesAbove=ensureSingle(plotgroup,'g','overlines-above');ensureSingle(plotgroup,'g','xaxislayer-above');ensureSingle(plotgroup,'g','yaxislayer-above');plotinfo.overaxesAbove=ensureSingle(plotgroup,'g','overaxes-above');// set refs to correct layers as determined by 'axis.layer'\nplotinfo.xlines=plotgroup.select('.xlines-'+xLayer);plotinfo.ylines=plotgroup.select('.ylines-'+yLayer);plotinfo.xaxislayer=plotgroup.select('.xaxislayer-'+xLayer);plotinfo.yaxislayer=plotgroup.select('.yaxislayer-'+yLayer);}}else{var mainplotinfo=plotinfo.mainplotinfo;var mainplotgroup=mainplotinfo.plotgroup;var xId=id+'-x';var yId=id+'-y';// now make the components of overlaid subplots\n// overlays don't have backgrounds, and append all\n// their other components to the corresponding\n// extra groups of their main plots.\nplotinfo.gridlayer=mainplotinfo.gridlayer;plotinfo.zerolinelayer=mainplotinfo.zerolinelayer;ensureSingle(mainplotinfo.overlinesBelow,'path',xId);ensureSingle(mainplotinfo.overlinesBelow,'path',yId);ensureSingle(mainplotinfo.overaxesBelow,'g',xId);ensureSingle(mainplotinfo.overaxesBelow,'g',yId);plotinfo.plot=ensureSingle(mainplotinfo.overplot,'g',id);ensureSingle(mainplotinfo.overlinesAbove,'path',xId);ensureSingle(mainplotinfo.overlinesAbove,'path',yId);ensureSingle(mainplotinfo.overaxesAbove,'g',xId);ensureSingle(mainplotinfo.overaxesAbove,'g',yId);// set refs to correct layers as determined by 'abovetraces'\nplotinfo.xlines=mainplotgroup.select('.overlines-'+xLayer).select('.'+xId);plotinfo.ylines=mainplotgroup.select('.overlines-'+yLayer).select('.'+yId);plotinfo.xaxislayer=mainplotgroup.select('.overaxes-'+xLayer).select('.'+xId);plotinfo.yaxislayer=mainplotgroup.select('.overaxes-'+yLayer).select('.'+yId);}// common attributes for all subplots, overlays or not\nif(!hasOnlyLargeSploms){ensureSingleAndAddDatum(plotinfo.gridlayer,'g',plotinfo.xaxis._id);ensureSingleAndAddDatum(plotinfo.gridlayer,'g',plotinfo.yaxis._id);plotinfo.gridlayer.selectAll('g').map(function(d){return d[0];}).sort(axisIds.idSort);}plotinfo.xlines.style('fill','none').classed('crisp',true);plotinfo.ylines.style('fill','none').classed('crisp',true);}function purgeSubplotLayers(layers,fullLayout){if(!layers)return;var overlayIdsToRemove={};layers.each(function(d){var id=d[0];var plotgroup=d3.select(this);plotgroup.remove();removeSubplotExtras(id,fullLayout);overlayIdsToRemove[id]=true;// do not remove individual axis <clipPath>s here\n// as other subplots may need them\n});// must remove overlaid subplot trace layers 'manually'\nfor(var k in fullLayout._plots){var subplotInfo=fullLayout._plots[k];var overlays=subplotInfo.overlays||[];for(var j=0;j<overlays.length;j++){var overlayInfo=overlays[j];if(overlayIdsToRemove[overlayInfo.id]){overlayInfo.plot.selectAll('.trace').remove();}}}}function removeSubplotExtras(subplotId,fullLayout){fullLayout._draggers.selectAll('g.'+subplotId).remove();fullLayout._defs.select('#clip'+fullLayout._uid+subplotId+'plot').remove();}exports.toSVG=function(gd){var imageRoot=gd._fullLayout._glimages;var root=d3.select(gd).selectAll('.svg-container');var canvases=root.filter(function(d,i){return i===root.size()-1;}).selectAll('.gl-canvas-context, .gl-canvas-focus');function canvasToImage(){var canvas=this;var imageData=canvas.toDataURL('image/png');var image=imageRoot.append('svg:image');image.attr({xmlns:xmlnsNamespaces.svg,'xlink:href':imageData,preserveAspectRatio:'none',x:0,y:0,width:canvas.width,height:canvas.height});}canvases.each(canvasToImage);};exports.updateFx=_dereq_('./graph_interact').updateFx;},{\"../../components/drawing\":320,\"../../constants/xmlns_namespaces\":399,\"../../lib\":423,\"../../registry\":521,\"../get_data\":498,\"../plots\":513,\"./attributes\":467,\"./axis_ids\":472,\"./constants\":475,\"./graph_interact\":479,\"./layout_attributes\":482,\"./layout_defaults\":483,\"./transition_axes\":492,\"d3\":71}],482:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var fontAttrs=_dereq_('../font_attributes');var colorAttrs=_dereq_('../../components/color/attributes');var dash=_dereq_('../../components/drawing/attributes').dash;var extendFlat=_dereq_('../../lib/extend').extendFlat;var templatedArray=_dereq_('../../plot_api/plot_template').templatedArray;var constants=_dereq_('./constants');module.exports={visible:{valType:'boolean',editType:'plot'},color:{valType:'color',dflt:colorAttrs.defaultLine,editType:'ticks'},title:{text:{valType:'string',editType:'ticks'},font:fontAttrs({editType:'ticks'}),editType:'ticks'},type:{valType:'enumerated',// '-' means we haven't yet run autotype or couldn't find any data\n// it gets turned into linear in gd._fullLayout but not copied back\n// to gd.data like the others are.\nvalues:['-','linear','log','date','category','multicategory'],dflt:'-',editType:'calc',// we forget when an axis has been autotyped, just writing the auto\n// value back to the input - so it doesn't make sense to template this.\n// Note: we do NOT prohibit this in `coerce`, so if someone enters a\n// type in the template explicitly it will be honored as the default.\n_noTemplating:true},autorange:{valType:'enumerated',values:[true,false,'reversed'],dflt:true,editType:'axrange',impliedEdits:{'range[0]':undefined,'range[1]':undefined}},rangemode:{valType:'enumerated',values:['normal','tozero','nonnegative'],dflt:'normal',editType:'plot'},range:{valType:'info_array',items:[{valType:'any',editType:'axrange',impliedEdits:{'^autorange':false}},{valType:'any',editType:'axrange',impliedEdits:{'^autorange':false}}],editType:'axrange',impliedEdits:{'autorange':false}},fixedrange:{valType:'boolean',dflt:false,editType:'calc'},// scaleanchor: not used directly, just put here for reference\n// values are any opposite-letter axis id\nscaleanchor:{valType:'enumerated',values:[constants.idRegex.x.toString(),constants.idRegex.y.toString()],editType:'plot'},scaleratio:{valType:'number',min:0,dflt:1,editType:'plot'},constrain:{valType:'enumerated',values:['range','domain'],dflt:'range',editType:'plot'},// constraintoward: not used directly, just put here for reference\nconstraintoward:{valType:'enumerated',values:['left','center','right','top','middle','bottom'],editType:'plot'},// ticks\ntickmode:{valType:'enumerated',values:['auto','linear','array'],editType:'ticks',impliedEdits:{tick0:undefined,dtick:undefined}},nticks:{valType:'integer',min:0,dflt:0,editType:'ticks'},tick0:{valType:'any',editType:'ticks',impliedEdits:{tickmode:'linear'}},dtick:{valType:'any',editType:'ticks',impliedEdits:{tickmode:'linear'}},tickvals:{valType:'data_array',editType:'ticks'},ticktext:{valType:'data_array',editType:'ticks'},ticks:{valType:'enumerated',values:['outside','inside',''],editType:'ticks'},tickson:{valType:'enumerated',values:['labels','boundaries'],dflt:'labels',editType:'ticks'},mirror:{valType:'enumerated',values:[true,'ticks',false,'all','allticks'],dflt:false,editType:'ticks+layoutstyle'},ticklen:{valType:'number',min:0,dflt:5,editType:'ticks'},tickwidth:{valType:'number',min:0,dflt:1,editType:'ticks'},tickcolor:{valType:'color',dflt:colorAttrs.defaultLine,editType:'ticks'},showticklabels:{valType:'boolean',dflt:true,editType:'ticks'},automargin:{valType:'boolean',dflt:false,editType:'ticks'},showspikes:{valType:'boolean',dflt:false,editType:'modebar'},spikecolor:{valType:'color',dflt:null,editType:'none'},spikethickness:{valType:'number',dflt:3,editType:'none'},spikedash:extendFlat({},dash,{dflt:'dash',editType:'none'}),spikemode:{valType:'flaglist',flags:['toaxis','across','marker'],dflt:'toaxis',editType:'none'},spikesnap:{valType:'enumerated',values:['data','cursor'],dflt:'data',editType:'none'},tickfont:fontAttrs({editType:'ticks'}),tickangle:{valType:'angle',dflt:'auto',editType:'ticks'},tickprefix:{valType:'string',dflt:'',editType:'ticks'},showtickprefix:{valType:'enumerated',values:['all','first','last','none'],dflt:'all',editType:'ticks'},ticksuffix:{valType:'string',dflt:'',editType:'ticks'},showticksuffix:{valType:'enumerated',values:['all','first','last','none'],dflt:'all',editType:'ticks'},showexponent:{valType:'enumerated',values:['all','first','last','none'],dflt:'all',editType:'ticks'},exponentformat:{valType:'enumerated',values:['none','e','E','power','SI','B'],dflt:'B',editType:'ticks'},separatethousands:{valType:'boolean',dflt:false,editType:'ticks'},tickformat:{valType:'string',dflt:'',editType:'ticks'},tickformatstops:templatedArray('tickformatstop',{enabled:{valType:'boolean',dflt:true,editType:'ticks'},dtickrange:{valType:'info_array',items:[{valType:'any',editType:'ticks'},{valType:'any',editType:'ticks'}],editType:'ticks'},value:{valType:'string',dflt:'',editType:'ticks'},editType:'ticks'}),hoverformat:{valType:'string',dflt:'',editType:'none'},// lines and grids\nshowline:{valType:'boolean',dflt:false,editType:'ticks+layoutstyle'},linecolor:{valType:'color',dflt:colorAttrs.defaultLine,editType:'layoutstyle'},linewidth:{valType:'number',min:0,dflt:1,editType:'ticks+layoutstyle'},showgrid:{valType:'boolean',editType:'ticks'},gridcolor:{valType:'color',dflt:colorAttrs.lightLine,editType:'ticks'},gridwidth:{valType:'number',min:0,dflt:1,editType:'ticks'},zeroline:{valType:'boolean',editType:'ticks'},zerolinecolor:{valType:'color',dflt:colorAttrs.defaultLine,editType:'ticks'},zerolinewidth:{valType:'number',dflt:1,editType:'ticks'},showdividers:{valType:'boolean',dflt:true,editType:'ticks'},dividercolor:{valType:'color',dflt:colorAttrs.defaultLine,editType:'ticks'},dividerwidth:{valType:'number',dflt:1,editType:'ticks'},// TODO dividerlen: that would override \"to label base\" length?\n// positioning attributes\n// anchor: not used directly, just put here for reference\n// values are any opposite-letter axis id\nanchor:{valType:'enumerated',values:['free',constants.idRegex.x.toString(),constants.idRegex.y.toString()],editType:'plot'},// side: not used directly, as values depend on direction\n// values are top, bottom for x axes, and left, right for y\nside:{valType:'enumerated',values:['top','bottom','left','right'],editType:'plot'},// overlaying: not used directly, just put here for reference\n// values are false and any other same-letter axis id that's not\n// itself overlaying anything\noverlaying:{valType:'enumerated',values:['free',constants.idRegex.x.toString(),constants.idRegex.y.toString()],editType:'plot'},layer:{valType:'enumerated',values:['above traces','below traces'],dflt:'above traces',editType:'plot'},domain:{valType:'info_array',items:[{valType:'number',min:0,max:1,editType:'plot'},{valType:'number',min:0,max:1,editType:'plot'}],dflt:[0,1],editType:'plot'},position:{valType:'number',min:0,max:1,dflt:0,editType:'plot'},categoryorder:{valType:'enumerated',values:['trace','category ascending','category descending','array'/* , 'value ascending', 'value descending'*/ // value ascending / descending to be implemented later\n],dflt:'trace',editType:'calc'},categoryarray:{valType:'data_array',editType:'calc'},uirevision:{valType:'any',editType:'none'},editType:'calc',_deprecated:{autotick:{valType:'boolean',editType:'ticks'},title:{valType:'string',editType:'ticks'},titlefont:fontAttrs({editType:'ticks'})}};},{\"../../components/color/attributes\":298,\"../../components/drawing/attributes\":319,\"../../lib/extend\":416,\"../../plot_api/plot_template\":459,\"../font_attributes\":496,\"./constants\":475}],483:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Color=_dereq_('../../components/color');var Template=_dereq_('../../plot_api/plot_template');var basePlotLayoutAttributes=_dereq_('../layout_attributes');var layoutAttributes=_dereq_('./layout_attributes');var handleTypeDefaults=_dereq_('./type_defaults');var handleAxisDefaults=_dereq_('./axis_defaults');var handleConstraintDefaults=_dereq_('./constraint_defaults');var handlePositionDefaults=_dereq_('./position_defaults');var axisIds=_dereq_('./axis_ids');var id2name=axisIds.id2name;var name2id=axisIds.name2id;var Registry=_dereq_('../../registry');var traceIs=Registry.traceIs;var getComponentMethod=Registry.getComponentMethod;function appendList(cont,k,item){if(Array.isArray(cont[k]))cont[k].push(item);else cont[k]=[item];}module.exports=function supplyLayoutDefaults(layoutIn,layoutOut,fullData){var ax2traces={};var xaCheater={};var xaNonCheater={};var outerTicks={};var noGrids={};var i,j;// look for axes in the data\nfor(i=0;i<fullData.length;i++){var trace=fullData[i];if(!traceIs(trace,'cartesian')&&!traceIs(trace,'gl2d'))continue;var xaName;if(trace.xaxis){xaName=id2name(trace.xaxis);appendList(ax2traces,xaName,trace);}else if(trace.xaxes){for(j=0;j<trace.xaxes.length;j++){appendList(ax2traces,id2name(trace.xaxes[j]),trace);}}var yaName;if(trace.yaxis){yaName=id2name(trace.yaxis);appendList(ax2traces,yaName,trace);}else if(trace.yaxes){for(j=0;j<trace.yaxes.length;j++){appendList(ax2traces,id2name(trace.yaxes[j]),trace);}}// Two things trigger axis visibility:\n// 1. is not carpet\n// 2. carpet that's not cheater\nif(!traceIs(trace,'carpet')||trace.type==='carpet'&&!trace._cheater){if(xaName)xaNonCheater[xaName]=1;}// The above check for definitely-not-cheater is not adequate. This\n// second list tracks which axes *could* be a cheater so that the\n// full condition triggering hiding is:\n//   *could* be a cheater and *is not definitely visible*\nif(trace.type==='carpet'&&trace._cheater){if(xaName)xaCheater[xaName]=1;}// check for default formatting tweaks\nif(traceIs(trace,'2dMap')){outerTicks[xaName]=1;outerTicks[yaName]=1;}if(traceIs(trace,'oriented')){var positionAxis=trace.orientation==='h'?yaName:xaName;noGrids[positionAxis]=1;}}var subplots=layoutOut._subplots;var xIds=subplots.xaxis;var yIds=subplots.yaxis;var xNames=Lib.simpleMap(xIds,id2name);var yNames=Lib.simpleMap(yIds,id2name);var axNames=xNames.concat(yNames);// plot_bgcolor only makes sense if there's a (2D) plot!\n// TODO: bgcolor for each subplot, to inherit from the main one\nvar plotBgColor=Color.background;if(xIds.length&&yIds.length){plotBgColor=Lib.coerce(layoutIn,layoutOut,basePlotLayoutAttributes,'plot_bgcolor');}var bgColor=Color.combine(plotBgColor,layoutOut.paper_bgcolor);var axName,axLetter,axLayoutIn,axLayoutOut;function coerce(attr,dflt){return Lib.coerce(axLayoutIn,axLayoutOut,layoutAttributes,attr,dflt);}function coerce2(attr,dflt){return Lib.coerce2(axLayoutIn,axLayoutOut,layoutAttributes,attr,dflt);}function getCounterAxes(axLetter){return axLetter==='x'?yIds:xIds;}var counterAxes={x:getCounterAxes('x'),y:getCounterAxes('y')};function getOverlayableAxes(axLetter,axName){var list=axLetter==='x'?xNames:yNames;var out=[];for(var j=0;j<list.length;j++){var axName2=list[j];if(axName2!==axName&&!(layoutIn[axName2]||{}).overlaying){out.push(name2id(axName2));}}return out;}// first pass creates the containers, determines types, and handles most of the settings\nfor(i=0;i<axNames.length;i++){axName=axNames[i];axLetter=axName.charAt(0);if(!Lib.isPlainObject(layoutIn[axName])){layoutIn[axName]={};}axLayoutIn=layoutIn[axName];axLayoutOut=Template.newContainer(layoutOut,axName,axLetter+'axis');var traces=ax2traces[axName]||[];axLayoutOut._traceIndices=traces.map(function(t){return t._expandedIndex;});axLayoutOut._annIndices=[];axLayoutOut._shapeIndices=[];axLayoutOut._subplotsWith=[];axLayoutOut._counterAxes=[];// set up some private properties\naxLayoutOut._name=axLayoutOut._attr=axName;var id=axLayoutOut._id=name2id(axName);var overlayableAxes=getOverlayableAxes(axLetter,axName);var defaultOptions={letter:axLetter,font:layoutOut.font,outerTicks:outerTicks[axName],showGrid:!noGrids[axName],data:traces,bgColor:bgColor,calendar:layoutOut.calendar,automargin:true,cheateronly:axLetter==='x'&&xaCheater[axName]&&!xaNonCheater[axName],splomStash:((layoutOut._splomAxes||{})[axLetter]||{})[id]};coerce('uirevision',layoutOut.uirevision);handleTypeDefaults(axLayoutIn,axLayoutOut,coerce,defaultOptions);handleAxisDefaults(axLayoutIn,axLayoutOut,coerce,defaultOptions,layoutOut);var spikecolor=coerce2('spikecolor');var spikethickness=coerce2('spikethickness');var spikedash=coerce2('spikedash');var spikemode=coerce2('spikemode');var spikesnap=coerce2('spikesnap');var showSpikes=coerce('showspikes',!!spikecolor||!!spikethickness||!!spikedash||!!spikemode||!!spikesnap);if(!showSpikes){delete axLayoutOut.spikecolor;delete axLayoutOut.spikethickness;delete axLayoutOut.spikedash;delete axLayoutOut.spikemode;delete axLayoutOut.spikesnap;}var positioningOptions={letter:axLetter,counterAxes:counterAxes[axLetter],overlayableAxes:overlayableAxes,grid:layoutOut.grid};handlePositionDefaults(axLayoutIn,axLayoutOut,coerce,positioningOptions);axLayoutOut._input=axLayoutIn;}// quick second pass for range slider and selector defaults\nvar rangeSliderDefaults=getComponentMethod('rangeslider','handleDefaults');var rangeSelectorDefaults=getComponentMethod('rangeselector','handleDefaults');for(i=0;i<xNames.length;i++){axName=xNames[i];axLayoutIn=layoutIn[axName];axLayoutOut=layoutOut[axName];rangeSliderDefaults(layoutIn,layoutOut,axName);if(axLayoutOut.type==='date'){rangeSelectorDefaults(axLayoutIn,axLayoutOut,layoutOut,yNames,axLayoutOut.calendar);}coerce('fixedrange');}for(i=0;i<yNames.length;i++){axName=yNames[i];axLayoutIn=layoutIn[axName];axLayoutOut=layoutOut[axName];var anchoredAxis=layoutOut[id2name(axLayoutOut.anchor)];var fixedRangeDflt=getComponentMethod('rangeslider','isVisible')(anchoredAxis);coerce('fixedrange',fixedRangeDflt);}// Finally, handle scale constraints. We need to do this after all axes have\n// coerced both `type` (so we link only axes of the same type) and\n// `fixedrange` (so we can avoid linking from OR TO a fixed axis).\n// sets of axes linked by `scaleanchor` along with the scaleratios compounded\n// together, populated in handleConstraintDefaults\nlayoutOut._axisConstraintGroups=[];var allAxisIds=counterAxes.x.concat(counterAxes.y);for(i=0;i<axNames.length;i++){axName=axNames[i];axLetter=axName.charAt(0);axLayoutIn=layoutIn[axName];axLayoutOut=layoutOut[axName];handleConstraintDefaults(axLayoutIn,axLayoutOut,coerce,allAxisIds,layoutOut);}};},{\"../../components/color\":299,\"../../lib\":423,\"../../plot_api/plot_template\":459,\"../../registry\":521,\"../layout_attributes\":511,\"./axis_defaults\":471,\"./axis_ids\":472,\"./constraint_defaults\":476,\"./layout_attributes\":482,\"./position_defaults\":485,\"./type_defaults\":493}],484:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var colorMix=_dereq_('tinycolor2').mix;var lightFraction=_dereq_('../../components/color/attributes').lightFraction;var Lib=_dereq_('../../lib');/**\n * @param {object} opts :\n *   - dfltColor {string} : default axis color\n *   - bgColor {string} : combined subplot bg color\n *   - blend {number, optional} : blend percentage (to compute dflt grid color)\n *   - showLine {boolean} : show line by default\n *   - showGrid {boolean} : show grid by default\n *   - noZeroLine {boolean} : don't coerce zeroline* attributes\n *   - attributes {object} : attribute object associated with input containers\n */module.exports=function handleLineGridDefaults(containerIn,containerOut,coerce,opts){opts=opts||{};var dfltColor=opts.dfltColor;function coerce2(attr,dflt){return Lib.coerce2(containerIn,containerOut,opts.attributes,attr,dflt);}var lineColor=coerce2('linecolor',dfltColor);var lineWidth=coerce2('linewidth');var showLine=coerce('showline',opts.showLine||!!lineColor||!!lineWidth);if(!showLine){delete containerOut.linecolor;delete containerOut.linewidth;}var gridColorDflt=colorMix(dfltColor,opts.bgColor,opts.blend||lightFraction).toRgbString();var gridColor=coerce2('gridcolor',gridColorDflt);var gridWidth=coerce2('gridwidth');var showGridLines=coerce('showgrid',opts.showGrid||!!gridColor||!!gridWidth);if(!showGridLines){delete containerOut.gridcolor;delete containerOut.gridwidth;}if(!opts.noZeroLine){var zeroLineColor=coerce2('zerolinecolor',dfltColor);var zeroLineWidth=coerce2('zerolinewidth');var showZeroLine=coerce('zeroline',opts.showGrid||!!zeroLineColor||!!zeroLineWidth);if(!showZeroLine){delete containerOut.zerolinecolor;delete containerOut.zerolinewidth;}}};},{\"../../components/color/attributes\":298,\"../../lib\":423,\"tinycolor2\":264}],485:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var Lib=_dereq_('../../lib');module.exports=function handlePositionDefaults(containerIn,containerOut,coerce,options){var counterAxes=options.counterAxes||[];var overlayableAxes=options.overlayableAxes||[];var letter=options.letter;var grid=options.grid;var dfltAnchor,dfltDomain,dfltSide,dfltPosition;if(grid){dfltDomain=grid._domains[letter][grid._axisMap[containerOut._id]];dfltAnchor=grid._anchors[containerOut._id];if(dfltDomain){dfltSide=grid[letter+'side'].split(' ')[0];dfltPosition=grid.domain[letter][dfltSide==='right'||dfltSide==='top'?1:0];}}// Even if there's a grid, this axis may not be in it - fall back on non-grid defaults\ndfltDomain=dfltDomain||[0,1];dfltAnchor=dfltAnchor||(isNumeric(containerIn.position)?'free':counterAxes[0]||'free');dfltSide=dfltSide||(letter==='x'?'bottom':'left');dfltPosition=dfltPosition||0;var anchor=Lib.coerce(containerIn,containerOut,{anchor:{valType:'enumerated',values:['free'].concat(counterAxes),dflt:dfltAnchor}},'anchor');if(anchor==='free')coerce('position',dfltPosition);Lib.coerce(containerIn,containerOut,{side:{valType:'enumerated',values:letter==='x'?['bottom','top']:['left','right'],dflt:dfltSide}},'side');var overlaying=false;if(overlayableAxes.length){overlaying=Lib.coerce(containerIn,containerOut,{overlaying:{valType:'enumerated',values:[false].concat(overlayableAxes),dflt:false}},'overlaying');}if(!overlaying){// TODO: right now I'm copying this domain over to overlaying axes\n// in ax.setscale()... but this means we still need (imperfect) logic\n// in the axes popover to hide domain for the overlaying axis.\n// perhaps I should make a private version _domain that all axes get???\nvar domain=coerce('domain',dfltDomain);// according to https://www.npmjs.com/package/canvas-size\n// the minimum value of max canvas width across browsers and devices is 4096\n// which applied in the calculation below:\nif(domain[0]>domain[1]-1/4096)containerOut.domain=dfltDomain;Lib.noneOrAll(containerIn.domain,containerOut.domain,dfltDomain);}coerce('layer');return containerOut;};},{\"../../lib\":423,\"fast-isnumeric\":80}],486:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var FROM_BL=_dereq_('../../constants/alignment').FROM_BL;module.exports=function scaleZoom(ax,factor,centerFraction){if(centerFraction===undefined){centerFraction=FROM_BL[ax.constraintoward||'center'];}var rangeLinear=[ax.r2l(ax.range[0]),ax.r2l(ax.range[1])];var center=rangeLinear[0]+(rangeLinear[1]-rangeLinear[0])*centerFraction;ax.range=ax._input.range=[ax.l2r(center+(rangeLinear[0]-center)*factor),ax.l2r(center+(rangeLinear[1]-center)*factor)];};},{\"../../constants/alignment\":394}],487:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var polybool=_dereq_('polybooljs');var Registry=_dereq_('../../registry');var Color=_dereq_('../../components/color');var Fx=_dereq_('../../components/fx');var polygon=_dereq_('../../lib/polygon');var throttle=_dereq_('../../lib/throttle');var makeEventData=_dereq_('../../components/fx/helpers').makeEventData;var getFromId=_dereq_('./axis_ids').getFromId;var clearGlCanvases=_dereq_('../../lib/clear_gl_canvases');var redrawReglTraces=_dereq_('../../plot_api/subroutines').redrawReglTraces;var constants=_dereq_('./constants');var MINSELECT=constants.MINSELECT;var filteredPolygon=polygon.filter;var polygonTester=polygon.tester;function getAxId(ax){return ax._id;}function prepSelect(e,startX,startY,dragOptions,mode){var gd=dragOptions.gd;var fullLayout=gd._fullLayout;var zoomLayer=fullLayout._zoomlayer;var dragBBox=dragOptions.element.getBoundingClientRect();var plotinfo=dragOptions.plotinfo;var xs=plotinfo.xaxis._offset;var ys=plotinfo.yaxis._offset;var x0=startX-dragBBox.left;var y0=startY-dragBBox.top;var x1=x0;var y1=y0;var path0='M'+x0+','+y0;var pw=dragOptions.xaxes[0]._length;var ph=dragOptions.yaxes[0]._length;var allAxes=dragOptions.xaxes.concat(dragOptions.yaxes);var subtract=e.altKey;var filterPoly,selectionTester,mergedPolygons,currentPolygon;var i,searchInfo,eventData;coerceSelectionsCache(e,gd,dragOptions);if(mode==='lasso'){filterPoly=filteredPolygon([[x0,y0]],constants.BENDPX);}var outlines=zoomLayer.selectAll('path.select-outline-'+plotinfo.id).data([1,2]);outlines.enter().append('path').attr('class',function(d){return'select-outline select-outline-'+d+' select-outline-'+plotinfo.id;}).attr('transform','translate('+xs+', '+ys+')').attr('d',path0+'Z');var corners=zoomLayer.append('path').attr('class','zoombox-corners').style({fill:Color.background,stroke:Color.defaultLine,'stroke-width':1}).attr('transform','translate('+xs+', '+ys+')').attr('d','M0,0Z');var throttleID=fullLayout._uid+constants.SELECTID;var selection=[];// find the traces to search for selection points\nvar searchTraces=determineSearchTraces(gd,dragOptions.xaxes,dragOptions.yaxes,dragOptions.subplot);function axValue(ax){var index=ax._id.charAt(0)==='y'?1:0;return function(v){return ax.p2d(v[index]);};}function ascending(a,b){return a-b;}// allow subplots to override fillRangeItems routine\nvar fillRangeItems;if(plotinfo.fillRangeItems){fillRangeItems=plotinfo.fillRangeItems;}else{if(mode==='select'){fillRangeItems=function fillRangeItems(eventData,poly){var ranges=eventData.range={};for(i=0;i<allAxes.length;i++){var ax=allAxes[i];var axLetter=ax._id.charAt(0);ranges[ax._id]=[ax.p2d(poly[axLetter+'min']),ax.p2d(poly[axLetter+'max'])].sort(ascending);}};}else{fillRangeItems=function fillRangeItems(eventData,poly,filterPoly){var dataPts=eventData.lassoPoints={};for(i=0;i<allAxes.length;i++){var ax=allAxes[i];dataPts[ax._id]=filterPoly.filtered.map(axValue(ax));}};}}dragOptions.moveFn=function(dx0,dy0){x1=Math.max(0,Math.min(pw,dx0+x0));y1=Math.max(0,Math.min(ph,dy0+y0));var dx=Math.abs(x1-x0);var dy=Math.abs(y1-y0);if(mode==='select'){var direction=fullLayout.selectdirection;if(fullLayout.selectdirection==='any'){if(dy<Math.min(dx*0.6,MINSELECT))direction='h';else if(dx<Math.min(dy*0.6,MINSELECT))direction='v';else direction='d';}else{direction=fullLayout.selectdirection;}if(direction==='h'){// horizontal motion: make a vertical box\ncurrentPolygon=[[x0,0],[x0,ph],[x1,ph],[x1,0]];currentPolygon.xmin=Math.min(x0,x1);currentPolygon.xmax=Math.max(x0,x1);currentPolygon.ymin=Math.min(0,ph);currentPolygon.ymax=Math.max(0,ph);// extras to guide users in keeping a straight selection\ncorners.attr('d','M'+currentPolygon.xmin+','+(y0-MINSELECT)+'h-4v'+2*MINSELECT+'h4Z'+'M'+(currentPolygon.xmax-1)+','+(y0-MINSELECT)+'h4v'+2*MINSELECT+'h-4Z');}else if(direction==='v'){// vertical motion: make a horizontal box\ncurrentPolygon=[[0,y0],[0,y1],[pw,y1],[pw,y0]];currentPolygon.xmin=Math.min(0,pw);currentPolygon.xmax=Math.max(0,pw);currentPolygon.ymin=Math.min(y0,y1);currentPolygon.ymax=Math.max(y0,y1);corners.attr('d','M'+(x0-MINSELECT)+','+currentPolygon.ymin+'v-4h'+2*MINSELECT+'v4Z'+'M'+(x0-MINSELECT)+','+(currentPolygon.ymax-1)+'v4h'+2*MINSELECT+'v-4Z');}else if(direction==='d'){// diagonal motion\ncurrentPolygon=[[x0,y0],[x0,y1],[x1,y1],[x1,y0]];currentPolygon.xmin=Math.min(x0,x1);currentPolygon.xmax=Math.max(x0,x1);currentPolygon.ymin=Math.min(y0,y1);currentPolygon.ymax=Math.max(y0,y1);corners.attr('d','M0,0Z');}}else if(mode==='lasso'){filterPoly.addPt([x1,y1]);currentPolygon=filterPoly.filtered;}// create outline & tester\nif(dragOptions.selectionDefs&&dragOptions.selectionDefs.length){mergedPolygons=mergePolygons(dragOptions.mergedPolygons,currentPolygon,subtract);currentPolygon.subtract=subtract;selectionTester=multiTester(dragOptions.selectionDefs.concat([currentPolygon]));}else{mergedPolygons=[currentPolygon];selectionTester=polygonTester(currentPolygon);}// draw selection\ndrawSelection(mergedPolygons,outlines);throttle.throttle(throttleID,constants.SELECTDELAY,function(){selection=[];var thisSelection;var traceSelections=[];var traceSelection;for(i=0;i<searchTraces.length;i++){searchInfo=searchTraces[i];traceSelection=searchInfo._module.selectPoints(searchInfo,selectionTester);traceSelections.push(traceSelection);thisSelection=fillSelectionItem(traceSelection,searchInfo);if(selection.length){for(var j=0;j<thisSelection.length;j++){selection.push(thisSelection[j]);}}else selection=thisSelection;}eventData={points:selection};updateSelectedState(gd,searchTraces,eventData);fillRangeItems(eventData,currentPolygon,filterPoly);dragOptions.gd.emit('plotly_selecting',eventData);});};dragOptions.clickFn=function(numClicks,evt){var clickmode=fullLayout.clickmode;corners.remove();throttle.done(throttleID).then(function(){throttle.clear(throttleID);if(numClicks===2){// clear selection on doubleclick\noutlines.remove();for(i=0;i<searchTraces.length;i++){searchInfo=searchTraces[i];searchInfo._module.selectPoints(searchInfo,false);}updateSelectedState(gd,searchTraces);clearSelectionsCache(dragOptions);gd.emit('plotly_deselect',null);}else{if(clickmode.indexOf('select')>-1){selectOnClick(evt,gd,dragOptions.xaxes,dragOptions.yaxes,dragOptions.subplot,dragOptions,outlines);}if(clickmode==='event'){// TODO: remove in v2 - this was probably never intended to work as it does,\n// but in case anyone depends on it we don't want to break it now.\n// Note that click-to-select introduced pre v2 also emitts proper\n// event data when clickmode is having 'select' in its flag list.\ngd.emit('plotly_selected',undefined);}}Fx.click(gd,evt);});};dragOptions.doneFn=function(){corners.remove();throttle.done(throttleID).then(function(){throttle.clear(throttleID);dragOptions.gd.emit('plotly_selected',eventData);if(currentPolygon&&dragOptions.selectionDefs){// save last polygons\ncurrentPolygon.subtract=subtract;dragOptions.selectionDefs.push(currentPolygon);// we have to keep reference to arrays container\ndragOptions.mergedPolygons.length=0;[].push.apply(dragOptions.mergedPolygons,mergedPolygons);}});};}function selectOnClick(evt,gd,xAxes,yAxes,subplot,dragOptions,polygonOutlines){var hoverData=gd._hoverdata;var clickmode=gd._fullLayout.clickmode;var sendEvents=clickmode.indexOf('event')>-1;var selection=[];var searchTraces,searchInfo,currentSelectionDef,selectionTester,traceSelection;var thisTracesSelection,pointOrBinSelected,subtract,eventData,i;if(isHoverDataSet(hoverData)){coerceSelectionsCache(evt,gd,dragOptions);searchTraces=determineSearchTraces(gd,xAxes,yAxes,subplot);var clickedPtInfo=extractClickedPtInfo(hoverData,searchTraces);var isBinnedTrace=clickedPtInfo.pointNumbers.length>0;// Note: potentially costly operation isPointOrBinSelected is\n// called as late as possible through the use of an assignment\n// in an if condition.\nif(isBinnedTrace?isOnlyThisBinSelected(searchTraces,clickedPtInfo):isOnlyOnePointSelected(searchTraces)&&(pointOrBinSelected=isPointOrBinSelected(clickedPtInfo))){if(polygonOutlines)polygonOutlines.remove();for(i=0;i<searchTraces.length;i++){searchInfo=searchTraces[i];searchInfo._module.selectPoints(searchInfo,false);}updateSelectedState(gd,searchTraces);clearSelectionsCache(dragOptions);if(sendEvents){gd.emit('plotly_deselect',null);}}else{subtract=evt.shiftKey&&(pointOrBinSelected!==undefined?pointOrBinSelected:isPointOrBinSelected(clickedPtInfo));currentSelectionDef=newPointSelectionDef(clickedPtInfo.pointNumber,clickedPtInfo.searchInfo,subtract);var allSelectionDefs=dragOptions.selectionDefs.concat([currentSelectionDef]);selectionTester=multiTester(allSelectionDefs);for(i=0;i<searchTraces.length;i++){traceSelection=searchTraces[i]._module.selectPoints(searchTraces[i],selectionTester);thisTracesSelection=fillSelectionItem(traceSelection,searchTraces[i]);if(selection.length){for(var j=0;j<thisTracesSelection.length;j++){selection.push(thisTracesSelection[j]);}}else selection=thisTracesSelection;}eventData={points:selection};updateSelectedState(gd,searchTraces,eventData);if(currentSelectionDef&&dragOptions){dragOptions.selectionDefs.push(currentSelectionDef);}if(polygonOutlines)drawSelection(dragOptions.mergedPolygons,polygonOutlines);if(sendEvents){gd.emit('plotly_selected',eventData);}}}}/**\n * Constructs a new point selection definition object.\n */function newPointSelectionDef(pointNumber,searchInfo,subtract){return{pointNumber:pointNumber,searchInfo:searchInfo,subtract:subtract};}function isPointSelectionDef(o){return'pointNumber'in o&&'searchInfo'in o;}/*\n * Constructs a new point number tester.\n */function newPointNumTester(pointSelectionDef){return{xmin:0,xmax:0,ymin:0,ymax:0,pts:[],contains:function contains(pt,omitFirstEdge,pointNumber,searchInfo){var idxWantedTrace=pointSelectionDef.searchInfo.cd[0].trace._expandedIndex;var idxActualTrace=searchInfo.cd[0].trace._expandedIndex;return idxActualTrace===idxWantedTrace&&pointNumber===pointSelectionDef.pointNumber;},isRect:false,degenerate:false,subtract:pointSelectionDef.subtract};}/**\n * Wraps multiple selection testers.\n *\n * @param {Array} list - An array of selection testers.\n *\n * @return a selection tester object with a contains function\n * that can be called to evaluate a point against all wrapped\n * selection testers that were passed in list.\n */function multiTester(list){var testers=[];var xmin=isPointSelectionDef(list[0])?0:list[0][0][0];var xmax=xmin;var ymin=isPointSelectionDef(list[0])?0:list[0][0][1];var ymax=ymin;for(var i=0;i<list.length;i++){if(isPointSelectionDef(list[i])){testers.push(newPointNumTester(list[i]));}else{var tester=polygon.tester(list[i]);tester.subtract=list[i].subtract;testers.push(tester);xmin=Math.min(xmin,tester.xmin);xmax=Math.max(xmax,tester.xmax);ymin=Math.min(ymin,tester.ymin);ymax=Math.max(ymax,tester.ymax);}}/**\n     * Tests if the given point is within this tester.\n     *\n     * @param {Array} pt - [0] is the x coordinate, [1] is the y coordinate of the point.\n     * @param {*} arg - An optional parameter to pass down to wrapped testers.\n     * @param {number} pointNumber - The point number of the point within the underlying data array.\n     * @param {number} searchInfo - An object identifying the trace the point is contained in.\n     *\n     * @return {boolean} true if point is considered to be selected, false otherwise.\n     */function contains(pt,arg,pointNumber,searchInfo){var contained=false;for(var i=0;i<testers.length;i++){if(testers[i].contains(pt,arg,pointNumber,searchInfo)){// if contained by subtract tester - exclude the point\ncontained=testers[i].subtract===false;}}return contained;}return{xmin:xmin,xmax:xmax,ymin:ymin,ymax:ymax,pts:[],contains:contains,isRect:false,degenerate:false};}function coerceSelectionsCache(evt,gd,dragOptions){var fullLayout=gd._fullLayout;var zoomLayer=fullLayout._zoomlayer;var plotinfo=dragOptions.plotinfo;var selectingOnSameSubplot=fullLayout._lastSelectedSubplot&&fullLayout._lastSelectedSubplot===plotinfo.id;var hasModifierKey=evt.shiftKey||evt.altKey;if(selectingOnSameSubplot&&hasModifierKey&&plotinfo.selection&&plotinfo.selection.selectionDefs&&!dragOptions.selectionDefs){// take over selection definitions from prev mode, if any\ndragOptions.selectionDefs=plotinfo.selection.selectionDefs;dragOptions.mergedPolygons=plotinfo.selection.mergedPolygons;}else if(!hasModifierKey||!plotinfo.selection){clearSelectionsCache(dragOptions);}// clear selection outline when selecting a different subplot\nif(!selectingOnSameSubplot){clearSelect(zoomLayer);fullLayout._lastSelectedSubplot=plotinfo.id;}}function clearSelectionsCache(dragOptions){var plotinfo=dragOptions.plotinfo;plotinfo.selection={};plotinfo.selection.selectionDefs=dragOptions.selectionDefs=[];plotinfo.selection.mergedPolygons=dragOptions.mergedPolygons=[];}function determineSearchTraces(gd,xAxes,yAxes,subplot){var searchTraces=[];var xAxisIds=xAxes.map(getAxId);var yAxisIds=yAxes.map(getAxId);var cd,trace,i;for(i=0;i<gd.calcdata.length;i++){cd=gd.calcdata[i];trace=cd[0].trace;if(trace.visible!==true||!trace._module||!trace._module.selectPoints)continue;if(subplot&&(trace.subplot===subplot||trace.geo===subplot)){searchTraces.push(createSearchInfo(trace._module,cd,xAxes[0],yAxes[0]));}else if(trace.type==='splom'&&// FIXME: make sure we don't have more than single axis for splom\ntrace._xaxes[xAxisIds[0]]&&trace._yaxes[yAxisIds[0]]){var info=createSearchInfo(trace._module,cd,xAxes[0],yAxes[0]);info.scene=gd._fullLayout._splomScenes[trace.uid];searchTraces.push(info);}else{if(xAxisIds.indexOf(trace.xaxis)===-1)continue;if(yAxisIds.indexOf(trace.yaxis)===-1)continue;searchTraces.push(createSearchInfo(trace._module,cd,getFromId(gd,trace.xaxis),getFromId(gd,trace.yaxis)));}}return searchTraces;function createSearchInfo(module,calcData,xaxis,yaxis){return{_module:module,cd:calcData,xaxis:xaxis,yaxis:yaxis};}}function drawSelection(polygons,outlines){var paths=[];var i,d;for(i=0;i<polygons.length;i++){var ppts=polygons[i];paths.push(ppts.join('L')+'L'+ppts[0]);}d=polygons.length>0?'M'+paths.join('M')+'Z':'M0,0Z';outlines.attr('d',d);}function isHoverDataSet(hoverData){return hoverData&&Array.isArray(hoverData)&&hoverData[0].hoverOnBox!==true;}function extractClickedPtInfo(hoverData,searchTraces){var hoverDatum=hoverData[0];var pointNumber=-1;var pointNumbers=[];var searchInfo,i;for(i=0;i<searchTraces.length;i++){searchInfo=searchTraces[i];if(hoverDatum.fullData._expandedIndex===searchInfo.cd[0].trace._expandedIndex){// Special case for box (and violin)\nif(hoverDatum.hoverOnBox===true){break;}// Hint: in some traces like histogram, one graphical element\n// doesn't correspond to one particular data point, but to\n// bins of data points. Thus, hoverDatum can have a binNumber\n// property instead of pointNumber.\nif(hoverDatum.pointNumber!==undefined){pointNumber=hoverDatum.pointNumber;}else if(hoverDatum.binNumber!==undefined){pointNumber=hoverDatum.binNumber;pointNumbers=hoverDatum.pointNumbers;}break;}}return{pointNumber:pointNumber,pointNumbers:pointNumbers,searchInfo:searchInfo};}function isPointOrBinSelected(clickedPtInfo){var trace=clickedPtInfo.searchInfo.cd[0].trace;var ptNum=clickedPtInfo.pointNumber;var ptNums=clickedPtInfo.pointNumbers;var ptNumsSet=ptNums.length>0;// When pointsNumbers is set (e.g. histogram's binning),\n// it is assumed that when the first point of\n// a bin is selected, all others are as well\nvar ptNumToTest=ptNumsSet?ptNums[0]:ptNum;// TODO potential performance improvement\n// Primarily we need this function to determine if a click adds\n// or subtracts from a selection.\n// In cases `trace.selectedpoints` is a huge array, indexOf\n// might be slow. One remedy would be to introduce a hash somewhere.\nreturn trace.selectedpoints?trace.selectedpoints.indexOf(ptNumToTest)>-1:false;}function isOnlyThisBinSelected(searchTraces,clickedPtInfo){var tracesWithSelectedPts=[];var searchInfo,trace,isSameTrace,i;for(i=0;i<searchTraces.length;i++){searchInfo=searchTraces[i];if(searchInfo.cd[0].trace.selectedpoints&&searchInfo.cd[0].trace.selectedpoints.length>0){tracesWithSelectedPts.push(searchInfo);}}if(tracesWithSelectedPts.length===1){isSameTrace=tracesWithSelectedPts[0]===clickedPtInfo.searchInfo;if(isSameTrace){trace=clickedPtInfo.searchInfo.cd[0].trace;if(trace.selectedpoints.length===clickedPtInfo.pointNumbers.length){for(i=0;i<clickedPtInfo.pointNumbers.length;i++){if(trace.selectedpoints.indexOf(clickedPtInfo.pointNumbers[i])<0){return false;}}return true;}}}return false;}function isOnlyOnePointSelected(searchTraces){var len=0;var searchInfo,trace,i;for(i=0;i<searchTraces.length;i++){searchInfo=searchTraces[i];trace=searchInfo.cd[0].trace;if(trace.selectedpoints){if(trace.selectedpoints.length>1)return false;len+=trace.selectedpoints.length;if(len>1)return false;}}return len===1;}function updateSelectedState(gd,searchTraces,eventData){var i,searchInfo,cd,trace;// before anything else, update preGUI if necessary\nfor(i=0;i<searchTraces.length;i++){var fullInputTrace=searchTraces[i].cd[0].trace._fullInput;var tracePreGUI=gd._fullLayout._tracePreGUI[fullInputTrace.uid];if(tracePreGUI.selectedpoints===undefined){tracePreGUI.selectedpoints=fullInputTrace._input.selectedpoints||null;}}if(eventData){var pts=eventData.points||[];for(i=0;i<searchTraces.length;i++){trace=searchTraces[i].cd[0].trace;trace._input.selectedpoints=trace._fullInput.selectedpoints=[];if(trace._fullInput!==trace)trace.selectedpoints=[];}for(i=0;i<pts.length;i++){var pt=pts[i];var data=pt.data;var fullData=pt.fullData;if(pt.pointIndices){[].push.apply(data.selectedpoints,pt.pointIndices);if(trace._fullInput!==trace){[].push.apply(fullData.selectedpoints,pt.pointIndices);}}else{data.selectedpoints.push(pt.pointIndex);if(trace._fullInput!==trace){fullData.selectedpoints.push(pt.pointIndex);}}}}else{for(i=0;i<searchTraces.length;i++){trace=searchTraces[i].cd[0].trace;delete trace.selectedpoints;delete trace._input.selectedpoints;if(trace._fullInput!==trace){delete trace._fullInput.selectedpoints;}}}var hasRegl=false;for(i=0;i<searchTraces.length;i++){searchInfo=searchTraces[i];cd=searchInfo.cd;trace=cd[0].trace;if(Registry.traceIs(trace,'regl')){hasRegl=true;}var _module=searchInfo._module;var fn=_module.styleOnSelect||_module.style;if(fn)fn(gd,cd);}if(hasRegl){clearGlCanvases(gd);redrawReglTraces(gd);}}function mergePolygons(list,poly,subtract){var res;if(subtract){res=polybool.difference({regions:list,inverted:false},{regions:[poly],inverted:false});return res.regions;}res=polybool.union({regions:list,inverted:false},{regions:[poly],inverted:false});return res.regions;}function fillSelectionItem(selection,searchInfo){if(Array.isArray(selection)){var cd=searchInfo.cd;var trace=searchInfo.cd[0].trace;for(var i=0;i<selection.length;i++){selection[i]=makeEventData(selection[i],trace,cd);}}return selection;}function clearSelect(zoomlayer){// until we get around to persistent selections, remove the outline\n// here. The selection itself will be removed when the plot redraws\n// at the end.\nzoomlayer.selectAll('.select-outline').remove();}module.exports={prepSelect:prepSelect,clearSelect:clearSelect,selectOnClick:selectOnClick};},{\"../../components/color\":299,\"../../components/fx\":338,\"../../components/fx/helpers\":334,\"../../lib/clear_gl_canvases\":411,\"../../lib/polygon\":435,\"../../lib/throttle\":447,\"../../plot_api/subroutines\":460,\"../../registry\":521,\"./axis_ids\":472,\"./constants\":475,\"polybooljs\":223}],488:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var isNumeric=_dereq_('fast-isnumeric');var Lib=_dereq_('../../lib');var cleanNumber=Lib.cleanNumber;var ms2DateTime=Lib.ms2DateTime;var dateTime2ms=Lib.dateTime2ms;var ensureNumber=Lib.ensureNumber;var isArrayOrTypedArray=Lib.isArrayOrTypedArray;var numConstants=_dereq_('../../constants/numerical');var FP_SAFE=numConstants.FP_SAFE;var BADNUM=numConstants.BADNUM;var LOG_CLIP=numConstants.LOG_CLIP;var constants=_dereq_('./constants');var axisIds=_dereq_('./axis_ids');function fromLog(v){return Math.pow(10,v);}function isValidCategory(v){return v!==null&&v!==undefined;}/**\n * Define the conversion functions for an axis data is used in 5 ways:\n *\n *  d: data, in whatever form it's provided\n *  c: calcdata: turned into numbers, but not linearized\n *  l: linearized - same as c except for log axes (and other nonlinear\n *      mappings later?) this is used when we need to know if it's\n *      *possible* to show some data on this axis, without caring about\n *      the current range\n *  p: pixel value - mapped to the screen with current size and zoom\n *  r: ranges, tick0, and annotation positions match one of the above\n *     but are handled differently for different types:\n *     - linear and date: data format (d)\n *     - category: calcdata format (c), and will stay that way because\n *       the data format has no continuous mapping\n *     - log: linearized (l) format\n *       TODO: in v2.0 we plan to change it to data format. At that point\n *       shapes will work the same way as ranges, tick0, and annotations\n *       so they can use this conversion too.\n *\n * Creates/updates these conversion functions, and a few more utilities\n * like cleanRange, and makeCalcdata\n *\n * also clears the autotick constraints ._minDtick, ._forceTick0\n */module.exports=function setConvert(ax,fullLayout){fullLayout=fullLayout||{};var axLetter=(ax._id||'x').charAt(0);function toLog(v,clip){if(v>0)return Math.log(v)/Math.LN10;else if(v<=0&&clip&&ax.range&&ax.range.length===2){// clip NaN (ie past negative infinity) to LOG_CLIP axis\n// length past the negative edge\nvar r0=ax.range[0];var r1=ax.range[1];return 0.5*(r0+r1-2*LOG_CLIP*Math.abs(r0-r1));}else return BADNUM;}/*\n     * wrapped dateTime2ms that:\n     * - accepts ms numbers for backward compatibility\n     * - inserts a dummy arg so calendar is the 3rd arg (see notes below).\n     * - defaults to ax.calendar\n     */function dt2ms(v,_,calendar){// NOTE: Changed this behavior: previously we took any numeric value\n// to be a ms, even if it was a string that could be a bare year.\n// Now we convert it as a date if at all possible, and only try\n// as (local) ms if that fails.\nvar ms=dateTime2ms(v,calendar||ax.calendar);if(ms===BADNUM){if(isNumeric(v)){v=+v;// keep track of tenths of ms, that `new Date` will drop\n// same logic as in Lib.ms2DateTime\nvar msecTenths=Math.floor(Lib.mod(v+0.05,1)*10);var msRounded=Math.round(v-msecTenths/10);ms=dateTime2ms(new Date(msRounded))+msecTenths/10;}else return BADNUM;}return ms;}// wrapped ms2DateTime to insert default ax.calendar\nfunction ms2dt(v,r,calendar){return ms2DateTime(v,r,calendar||ax.calendar);}function getCategoryName(v){return ax._categories[Math.round(v)];}/*\n     * setCategoryIndex: return the index of category v,\n     * inserting it in the list if it's not already there\n     *\n     * this will enter the categories in the order it\n     * encounters them, ie all the categories from the\n     * first data set, then all the ones from the second\n     * that aren't in the first etc.\n     *\n     * it is assumed that this function is being invoked in the\n     * already sorted category order; otherwise there would be\n     * a disconnect between the array and the index returned\n     */function setCategoryIndex(v){if(isValidCategory(v)){if(ax._categoriesMap===undefined){ax._categoriesMap={};}if(ax._categoriesMap[v]!==undefined){return ax._categoriesMap[v];}else{ax._categories.push(v);var curLength=ax._categories.length-1;ax._categoriesMap[v]=curLength;return curLength;}}return BADNUM;}function setMultiCategoryIndex(arrayIn,len){var arrayOut=new Array(len);for(var i=0;i<len;i++){var v0=(arrayIn[0]||[])[i];var v1=(arrayIn[1]||[])[i];arrayOut[i]=getCategoryIndex([v0,v1]);}return arrayOut;}function getCategoryIndex(v){if(ax._categoriesMap){return ax._categoriesMap[v];}}function getCategoryPosition(v){// d2l/d2c variant that that won't add categories but will also\n// allow numbers to be mapped to the linearized axis positions\nvar index=getCategoryIndex(v);if(index!==undefined)return index;if(isNumeric(v))return+v;}function l2p(v){if(!isNumeric(v))return BADNUM;// include 2 fractional digits on pixel, for PDF zooming etc\nreturn d3.round(ax._b+ax._m*v,2);}function p2l(px){return(px-ax._b)/ax._m;}// conversions among c/l/p are fairly simple - do them together for all axis types\nax.c2l=ax.type==='log'?toLog:ensureNumber;ax.l2c=ax.type==='log'?fromLog:ensureNumber;ax.l2p=l2p;ax.p2l=p2l;ax.c2p=ax.type==='log'?function(v,clip){return l2p(toLog(v,clip));}:l2p;ax.p2c=ax.type==='log'?function(px){return fromLog(p2l(px));}:p2l;/*\n     * now type-specific conversions for **ALL** other combinations\n     * they're all written out, instead of being combinations of each other, for\n     * both clarity and speed.\n     */if(['linear','-'].indexOf(ax.type)!==-1){// all are data vals, but d and r need cleaning\nax.d2r=ax.r2d=ax.d2c=ax.r2c=ax.d2l=ax.r2l=cleanNumber;ax.c2d=ax.c2r=ax.l2d=ax.l2r=ensureNumber;ax.d2p=ax.r2p=function(v){return ax.l2p(cleanNumber(v));};ax.p2d=ax.p2r=p2l;ax.cleanPos=ensureNumber;}else if(ax.type==='log'){// d and c are data vals, r and l are logged (but d and r need cleaning)\nax.d2r=ax.d2l=function(v,clip){return toLog(cleanNumber(v),clip);};ax.r2d=ax.r2c=function(v){return fromLog(cleanNumber(v));};ax.d2c=ax.r2l=cleanNumber;ax.c2d=ax.l2r=ensureNumber;ax.c2r=toLog;ax.l2d=fromLog;ax.d2p=function(v,clip){return ax.l2p(ax.d2r(v,clip));};ax.p2d=function(px){return fromLog(p2l(px));};ax.r2p=function(v){return ax.l2p(cleanNumber(v));};ax.p2r=p2l;ax.cleanPos=ensureNumber;}else if(ax.type==='date'){// r and d are date strings, l and c are ms\n/*\n         * Any of these functions with r and d on either side, calendar is the\n         * **3rd** argument. log has reserved the second argument.\n         *\n         * Unless you need the special behavior of the second arg (ms2DateTime\n         * uses this to limit precision, toLog uses true to clip negatives\n         * to offscreen low rather than undefined), it's safe to pass 0.\n         */ax.d2r=ax.r2d=Lib.identity;ax.d2c=ax.r2c=ax.d2l=ax.r2l=dt2ms;ax.c2d=ax.c2r=ax.l2d=ax.l2r=ms2dt;ax.d2p=ax.r2p=function(v,_,calendar){return ax.l2p(dt2ms(v,0,calendar));};ax.p2d=ax.p2r=function(px,r,calendar){return ms2dt(p2l(px),r,calendar);};ax.cleanPos=function(v){return Lib.cleanDate(v,BADNUM,ax.calendar);};}else if(ax.type==='category'){// d is categories (string)\n// c and l are indices (numbers)\n// r is categories or numbers\nax.d2c=ax.d2l=setCategoryIndex;ax.r2d=ax.c2d=ax.l2d=getCategoryName;ax.d2r=ax.d2l_noadd=getCategoryPosition;ax.r2c=function(v){var index=getCategoryPosition(v);return index!==undefined?index:ax.fraction2r(0.5);};ax.l2r=ax.c2r=ensureNumber;ax.r2l=getCategoryPosition;ax.d2p=function(v){return ax.l2p(ax.r2c(v));};ax.p2d=function(px){return getCategoryName(p2l(px));};ax.r2p=ax.d2p;ax.p2r=p2l;ax.cleanPos=function(v){if(typeof v==='string'&&v!=='')return v;return ensureNumber(v);};}else if(ax.type==='multicategory'){// N.B. multicategory axes don't define d2c and d2l,\n// as 'data-to-calcdata' conversion needs to take into\n// account all data array items as in ax.makeCalcdata.\nax.r2d=ax.c2d=ax.l2d=getCategoryName;ax.d2r=ax.d2l_noadd=getCategoryPosition;ax.r2c=function(v){var index=getCategoryPosition(v);return index!==undefined?index:ax.fraction2r(0.5);};ax.r2c_just_indices=getCategoryIndex;ax.l2r=ax.c2r=ensureNumber;ax.r2l=getCategoryPosition;ax.d2p=function(v){return ax.l2p(ax.r2c(v));};ax.p2d=function(px){return getCategoryName(p2l(px));};ax.r2p=ax.d2p;ax.p2r=p2l;ax.cleanPos=function(v){if(Array.isArray(v)||typeof v==='string'&&v!=='')return v;return ensureNumber(v);};ax.setupMultiCategory=function(fullData){var traceIndices=ax._traceIndices;var i,j;// [ [cnt, {$cat: index}], for 1,2 ]\nvar seen=ax._multicatSeen=[[0,{}],[0,{}]];// [ [arrayIn[0][i], arrayIn[1][i]], for i .. N ]\nvar list=ax._multicatList=[];for(i=0;i<traceIndices.length;i++){var trace=fullData[traceIndices[i]];if(axLetter in trace){var arrayIn=trace[axLetter];var len=trace._length||Lib.minRowLength(arrayIn);if(isArrayOrTypedArray(arrayIn[0])&&isArrayOrTypedArray(arrayIn[1])){for(j=0;j<len;j++){var v0=arrayIn[0][j];var v1=arrayIn[1][j];if(isValidCategory(v0)&&isValidCategory(v1)){list.push([v0,v1]);if(!(v0 in seen[0][1])){seen[0][1][v0]=seen[0][0]++;}if(!(v1 in seen[1][1])){seen[1][1][v1]=seen[1][0]++;}}}}}}list.sort(function(a,b){var ind0=seen[0][1];var d=ind0[a[0]]-ind0[b[0]];if(d)return d;var ind1=seen[1][1];return ind1[a[1]]-ind1[b[1]];});for(i=0;i<list.length;i++){setCategoryIndex(list[i]);}};}// find the range value at the specified (linear) fraction of the axis\nax.fraction2r=function(v){var rl0=ax.r2l(ax.range[0]);var rl1=ax.r2l(ax.range[1]);return ax.l2r(rl0+v*(rl1-rl0));};// find the fraction of the range at the specified range value\nax.r2fraction=function(v){var rl0=ax.r2l(ax.range[0]);var rl1=ax.r2l(ax.range[1]);return(ax.r2l(v)-rl0)/(rl1-rl0);};/*\n     * cleanRange: make sure range is a couplet of valid & distinct values\n     * keep numbers away from the limits of floating point numbers,\n     * and dates away from the ends of our date system (+/- 9999 years)\n     *\n     * optional param rangeAttr: operate on a different attribute, like\n     * ax._r, rather than ax.range\n     */ax.cleanRange=function(rangeAttr,opts){if(!opts)opts={};if(!rangeAttr)rangeAttr='range';var range=Lib.nestedProperty(ax,rangeAttr).get();var i,dflt;if(ax.type==='date')dflt=Lib.dfltRange(ax.calendar);else if(axLetter==='y')dflt=constants.DFLTRANGEY;else dflt=opts.dfltRange||constants.DFLTRANGEX;// make sure we don't later mutate the defaults\ndflt=dflt.slice();if(!range||range.length!==2){Lib.nestedProperty(ax,rangeAttr).set(dflt);return;}if(ax.type==='date'){// check if milliseconds or js date objects are provided for range\n// and convert to date strings\nrange[0]=Lib.cleanDate(range[0],BADNUM,ax.calendar);range[1]=Lib.cleanDate(range[1],BADNUM,ax.calendar);}for(i=0;i<2;i++){if(ax.type==='date'){if(!Lib.isDateTime(range[i],ax.calendar)){ax[rangeAttr]=dflt;break;}if(ax.r2l(range[0])===ax.r2l(range[1])){// split by +/- 1 second\nvar linCenter=Lib.constrain(ax.r2l(range[0]),Lib.MIN_MS+1000,Lib.MAX_MS-1000);range[0]=ax.l2r(linCenter-1000);range[1]=ax.l2r(linCenter+1000);break;}}else{if(!isNumeric(range[i])){if(isNumeric(range[1-i])){range[i]=range[1-i]*(i?10:0.1);}else{ax[rangeAttr]=dflt;break;}}if(range[i]<-FP_SAFE)range[i]=-FP_SAFE;else if(range[i]>FP_SAFE)range[i]=FP_SAFE;if(range[0]===range[1]){// somewhat arbitrary: split by 1 or 1ppm, whichever is bigger\nvar inc=Math.max(1,Math.abs(range[0]*1e-6));range[0]-=inc;range[1]+=inc;}}}};// set scaling to pixels\nax.setScale=function(usePrivateRange){var gs=fullLayout._size;// make sure we have a domain (pull it in from the axis\n// this one is overlaying if necessary)\nif(ax.overlaying){var ax2=axisIds.getFromId({_fullLayout:fullLayout},ax.overlaying);ax.domain=ax2.domain;}// While transitions are occuring, occurring, we get a double-transform\n// issue if we transform the drawn layer *and* use the new axis range to\n// draw the data. This allows us to construct setConvert using the pre-\n// interaction values of the range:\nvar rangeAttr=usePrivateRange&&ax._r?'_r':'range';var calendar=ax.calendar;ax.cleanRange(rangeAttr);var rl0=ax.r2l(ax[rangeAttr][0],calendar);var rl1=ax.r2l(ax[rangeAttr][1],calendar);if(axLetter==='y'){ax._offset=gs.t+(1-ax.domain[1])*gs.h;ax._length=gs.h*(ax.domain[1]-ax.domain[0]);ax._m=ax._length/(rl0-rl1);ax._b=-ax._m*rl1;}else{ax._offset=gs.l+ax.domain[0]*gs.w;ax._length=gs.w*(ax.domain[1]-ax.domain[0]);ax._m=ax._length/(rl1-rl0);ax._b=-ax._m*rl0;}if(!isFinite(ax._m)||!isFinite(ax._b)){fullLayout._replotting=false;throw new Error('Something went wrong with axis scaling');}};// makeCalcdata: takes an x or y array and converts it\n// to a position on the axis object \"ax\"\n// inputs:\n//      trace - a data object from gd.data\n//      axLetter - a string, either 'x' or 'y', for which item\n//          to convert (TODO: is this now always the same as\n//          the first letter of ax._id?)\n// in case the expected data isn't there, make a list of\n// integers based on the opposite data\nax.makeCalcdata=function(trace,axLetter){var arrayIn,arrayOut,i,len;var axType=ax.type;var cal=axType==='date'&&trace[axLetter+'calendar'];if(axLetter in trace){arrayIn=trace[axLetter];len=trace._length||Lib.minRowLength(arrayIn);if(Lib.isTypedArray(arrayIn)&&(axType==='linear'||axType==='log')){if(len===arrayIn.length){return arrayIn;}else if(arrayIn.subarray){return arrayIn.subarray(0,len);}}if(axType==='multicategory'){return setMultiCategoryIndex(arrayIn,len);}arrayOut=new Array(len);for(i=0;i<len;i++){arrayOut[i]=ax.d2c(arrayIn[i],0,cal);}}else{var v0=axLetter+'0'in trace?ax.d2c(trace[axLetter+'0'],0,cal):0;var dv=trace['d'+axLetter]?Number(trace['d'+axLetter]):1;// the opposing data, for size if we have x and dx etc\narrayIn=trace[{x:'y',y:'x'}[axLetter]];len=trace._length||arrayIn.length;arrayOut=new Array(len);for(i=0;i<len;i++){arrayOut[i]=v0+i*dv;}}return arrayOut;};ax.isValidRange=function(range){return Array.isArray(range)&&range.length===2&&isNumeric(ax.r2l(range[0]))&&isNumeric(ax.r2l(range[1]));};ax.isPtWithinRange=function(d,calendar){var coord=ax.c2l(d[axLetter],null,calendar);var r0=ax.r2l(ax.range[0]);var r1=ax.r2l(ax.range[1]);if(r0<r1){return r0<=coord&&coord<=r1;}else{// Reversed axis case.\nreturn r1<=coord&&coord<=r0;}};ax.clearCalc=function(){// initialize the category list, if there is one, so we start over\n// to be filled in later by ax.d2c\nax._categories=(ax._initialCategories||[]).slice();// Build the lookup map for initialized categories\nax._categoriesMap={};for(var j=0;j<ax._categories.length;j++){ax._categoriesMap[ax._categories[j]]=j;}};// Propagate localization into the axis so that\n// methods in Axes can use it w/o having to pass fullLayout\n// Default (non-d3) number formatting uses separators directly\n// dates and d3-formatted numbers use the d3 locale\n// Fall back on default format for dummy axes that don't care about formatting\nvar locale=fullLayout._d3locale;if(ax.type==='date'){ax._dateFormat=locale?locale.timeFormat.utc:d3.time.format.utc;ax._extraFormat=fullLayout._extraFormat;}// occasionally we need _numFormat to pass through\n// even though it won't be needed by this axis\nax._separators=fullLayout.separators;ax._numFormat=locale?locale.numberFormat:d3.format;// and for bar charts and box plots: reset forced minimum tick spacing\ndelete ax._minDtick;delete ax._forceTick0;};},{\"../../constants/numerical\":398,\"../../lib\":423,\"./axis_ids\":472,\"./constants\":475,\"d3\":71,\"fast-isnumeric\":80}],489:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var layoutAttributes=_dereq_('./layout_attributes');var handleArrayContainerDefaults=_dereq_('../array_container_defaults');module.exports=function handleTickLabelDefaults(containerIn,containerOut,coerce,axType,options){var showAttrDflt=getShowAttrDflt(containerIn);var tickPrefix=coerce('tickprefix');if(tickPrefix)coerce('showtickprefix',showAttrDflt);var tickSuffix=coerce('ticksuffix',options.tickSuffixDflt);if(tickSuffix)coerce('showticksuffix',showAttrDflt);var showTickLabels=coerce('showticklabels');if(showTickLabels){var font=options.font||{};var contColor=containerOut.color;// as with titlefont.color, inherit axis.color only if one was\n// explicitly provided\nvar dfltFontColor=contColor&&contColor!==layoutAttributes.color.dflt?contColor:font.color;Lib.coerceFont(coerce,'tickfont',{family:font.family,size:font.size,color:dfltFontColor});coerce('tickangle');if(axType!=='category'){var tickFormat=coerce('tickformat');var tickformatStops=containerIn.tickformatstops;if(Array.isArray(tickformatStops)&&tickformatStops.length){handleArrayContainerDefaults(containerIn,containerOut,{name:'tickformatstops',inclusionAttr:'enabled',handleItemDefaults:tickformatstopDefaults});}if(!tickFormat&&axType!=='date'){coerce('showexponent',showAttrDflt);coerce('exponentformat');coerce('separatethousands');}}}};/*\n * Attributes 'showexponent', 'showtickprefix' and 'showticksuffix'\n * share values.\n *\n * If only 1 attribute is set,\n * the remaining attributes inherit that value.\n *\n * If 2 attributes are set to the same value,\n * the remaining attribute inherits that value.\n *\n * If 2 attributes are set to different values,\n * the remaining is set to its dflt value.\n *\n */function getShowAttrDflt(containerIn){var showAttrsAll=['showexponent','showtickprefix','showticksuffix'];var showAttrs=showAttrsAll.filter(function(a){return containerIn[a]!==undefined;});var sameVal=function sameVal(a){return containerIn[a]===containerIn[showAttrs[0]];};if(showAttrs.every(sameVal)||showAttrs.length===1){return containerIn[showAttrs[0]];}}function tickformatstopDefaults(valueIn,valueOut){function coerce(attr,dflt){return Lib.coerce(valueIn,valueOut,layoutAttributes.tickformatstops,attr,dflt);}var enabled=coerce('enabled');if(enabled){coerce('dtickrange');coerce('value');}}},{\"../../lib\":423,\"../array_container_defaults\":465,\"./layout_attributes\":482}],490:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var layoutAttributes=_dereq_('./layout_attributes');/**\n * options: inherits outerTicks from axes.handleAxisDefaults\n */module.exports=function handleTickDefaults(containerIn,containerOut,coerce,options){var tickLen=Lib.coerce2(containerIn,containerOut,layoutAttributes,'ticklen');var tickWidth=Lib.coerce2(containerIn,containerOut,layoutAttributes,'tickwidth');var tickColor=Lib.coerce2(containerIn,containerOut,layoutAttributes,'tickcolor',containerOut.color);var showTicks=coerce('ticks',options.outerTicks||tickLen||tickWidth||tickColor?'outside':'');if(!showTicks){delete containerOut.ticklen;delete containerOut.tickwidth;delete containerOut.tickcolor;}};},{\"../../lib\":423,\"./layout_attributes\":482}],491:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var cleanTicks=_dereq_('./clean_ticks');module.exports=function handleTickValueDefaults(containerIn,containerOut,coerce,axType){var tickmode;if(containerIn.tickmode==='array'&&(axType==='log'||axType==='date')){tickmode=containerOut.tickmode='auto';}else{var tickmodeDefault=Array.isArray(containerIn.tickvals)?'array':containerIn.dtick?'linear':'auto';tickmode=coerce('tickmode',tickmodeDefault);}if(tickmode==='auto')coerce('nticks');else if(tickmode==='linear'){// dtick is usually a positive number, but there are some\n// special strings available for log or date axes\n// tick0 also has special logic\nvar dtick=containerOut.dtick=cleanTicks.dtick(containerIn.dtick,axType);containerOut.tick0=cleanTicks.tick0(containerIn.tick0,axType,containerOut.calendar,dtick);}else if(axType!=='multicategory'){var tickvals=coerce('tickvals');if(tickvals===undefined)containerOut.tickmode='auto';else coerce('ticktext');}};},{\"./clean_ticks\":474}],492:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Registry=_dereq_('../../registry');var Drawing=_dereq_('../../components/drawing');var Axes=_dereq_('./axes');var axisRegex=_dereq_('./constants').attrRegex;module.exports=function transitionAxes(gd,newLayout,transitionOpts,makeOnCompleteCallback){var fullLayout=gd._fullLayout;var axes=[];function computeUpdates(layout){var ai,attrList,match,axis,update;var updates={};for(ai in layout){attrList=ai.split('.');match=attrList[0].match(axisRegex);if(match){var axisLetter=ai.charAt(0);var axisName=attrList[0];axis=fullLayout[axisName];update={};if(Array.isArray(layout[ai])){update.to=layout[ai].slice(0);}else{if(Array.isArray(layout[ai].range)){update.to=layout[ai].range.slice(0);}}if(!update.to)continue;update.axisName=axisName;update.length=axis._length;axes.push(axisLetter);updates[axisLetter]=update;}}return updates;}function computeAffectedSubplots(fullLayout,updatedAxisIds,updates){var plotName;var plotinfos=fullLayout._plots;var affectedSubplots=[];var toX,toY;for(plotName in plotinfos){var plotinfo=plotinfos[plotName];if(affectedSubplots.indexOf(plotinfo)!==-1)continue;var x=plotinfo.xaxis._id;var y=plotinfo.yaxis._id;var fromX=plotinfo.xaxis.range;var fromY=plotinfo.yaxis.range;// Store the initial range at the beginning of this transition:\nplotinfo.xaxis._r=plotinfo.xaxis.range.slice();plotinfo.yaxis._r=plotinfo.yaxis.range.slice();if(updates[x]){toX=updates[x].to;}else{toX=fromX;}if(updates[y]){toY=updates[y].to;}else{toY=fromY;}if(fromX[0]===toX[0]&&fromX[1]===toX[1]&&fromY[0]===toY[0]&&fromY[1]===toY[1])continue;if(updatedAxisIds.indexOf(x)!==-1||updatedAxisIds.indexOf(y)!==-1){affectedSubplots.push(plotinfo);}}return affectedSubplots;}var updates=computeUpdates(newLayout);var updatedAxisIds=Object.keys(updates);var affectedSubplots=computeAffectedSubplots(fullLayout,updatedAxisIds,updates);function updateLayoutObjs(){function redrawObjs(objArray,method,shortCircuit){for(var i=0;i<objArray.length;i++){method(gd,i);// once is enough for images (which doesn't use the `i` arg anyway)\nif(shortCircuit)return;}}redrawObjs(fullLayout.annotations||[],Registry.getComponentMethod('annotations','drawOne'));redrawObjs(fullLayout.shapes||[],Registry.getComponentMethod('shapes','drawOne'));redrawObjs(fullLayout.images||[],Registry.getComponentMethod('images','draw'),true);}if(!affectedSubplots.length){updateLayoutObjs();return false;}function ticksAndAnnotations(xa,ya){var activeAxIds=[xa._id,ya._id];var i;Axes.drawOne(gd,xa,{skipTitle:true});Axes.drawOne(gd,ya,{skipTitle:true});function redrawObjs(objArray,method,shortCircuit){for(i=0;i<objArray.length;i++){var obji=objArray[i];if(activeAxIds.indexOf(obji.xref)!==-1||activeAxIds.indexOf(obji.yref)!==-1){method(gd,i);}// once is enough for images (which doesn't use the `i` arg anyway)\nif(shortCircuit)return;}}redrawObjs(fullLayout.annotations||[],Registry.getComponentMethod('annotations','drawOne'));redrawObjs(fullLayout.shapes||[],Registry.getComponentMethod('shapes','drawOne'));redrawObjs(fullLayout.images||[],Registry.getComponentMethod('images','draw'),true);}function unsetSubplotTransform(subplot){var xa2=subplot.xaxis;var ya2=subplot.yaxis;fullLayout._defs.select('#'+subplot.clipId+'> rect').call(Drawing.setTranslate,0,0).call(Drawing.setScale,1,1);subplot.plot.call(Drawing.setTranslate,xa2._offset,ya2._offset).call(Drawing.setScale,1,1);var traceGroups=subplot.plot.selectAll('.scatterlayer .trace');// This is specifically directed at scatter traces, applying an inverse\n// scale to individual points to counteract the scale of the trace\n// as a whole:\ntraceGroups.selectAll('.point').call(Drawing.setPointGroupScale,1,1);traceGroups.selectAll('.textpoint').call(Drawing.setTextPointsScale,1,1);traceGroups.call(Drawing.hideOutsideRangePoints,subplot);}function updateSubplot(subplot,progress){var axis,r0,r1;var xUpdate=updates[subplot.xaxis._id];var yUpdate=updates[subplot.yaxis._id];var viewBox=[];if(xUpdate){axis=gd._fullLayout[xUpdate.axisName];r0=axis._r;r1=xUpdate.to;viewBox[0]=(r0[0]*(1-progress)+progress*r1[0]-r0[0])/(r0[1]-r0[0])*subplot.xaxis._length;var dx1=r0[1]-r0[0];var dx2=r1[1]-r1[0];axis.range[0]=r0[0]*(1-progress)+progress*r1[0];axis.range[1]=r0[1]*(1-progress)+progress*r1[1];viewBox[2]=subplot.xaxis._length*(1-progress+progress*dx2/dx1);}else{viewBox[0]=0;viewBox[2]=subplot.xaxis._length;}if(yUpdate){axis=gd._fullLayout[yUpdate.axisName];r0=axis._r;r1=yUpdate.to;viewBox[1]=(r0[1]*(1-progress)+progress*r1[1]-r0[1])/(r0[0]-r0[1])*subplot.yaxis._length;var dy1=r0[1]-r0[0];var dy2=r1[1]-r1[0];axis.range[0]=r0[0]*(1-progress)+progress*r1[0];axis.range[1]=r0[1]*(1-progress)+progress*r1[1];viewBox[3]=subplot.yaxis._length*(1-progress+progress*dy2/dy1);}else{viewBox[1]=0;viewBox[3]=subplot.yaxis._length;}ticksAndAnnotations(subplot.xaxis,subplot.yaxis);var xa2=subplot.xaxis;var ya2=subplot.yaxis;var editX=!!xUpdate;var editY=!!yUpdate;var xScaleFactor=editX?xa2._length/viewBox[2]:1;var yScaleFactor=editY?ya2._length/viewBox[3]:1;var clipDx=editX?viewBox[0]:0;var clipDy=editY?viewBox[1]:0;var fracDx=editX?viewBox[0]/viewBox[2]*xa2._length:0;var fracDy=editY?viewBox[1]/viewBox[3]*ya2._length:0;var plotDx=xa2._offset-fracDx;var plotDy=ya2._offset-fracDy;subplot.clipRect.call(Drawing.setTranslate,clipDx,clipDy).call(Drawing.setScale,1/xScaleFactor,1/yScaleFactor);subplot.plot.call(Drawing.setTranslate,plotDx,plotDy).call(Drawing.setScale,xScaleFactor,yScaleFactor);// apply an inverse scale to individual points to counteract\n// the scale of the trace group.\nDrawing.setPointGroupScale(subplot.zoomScalePts,1/xScaleFactor,1/yScaleFactor);Drawing.setTextPointsScale(subplot.zoomScaleTxt,1/xScaleFactor,1/yScaleFactor);}var onComplete;if(makeOnCompleteCallback){// This module makes the choice whether or not it notifies Plotly.transition\n// about completion:\nonComplete=makeOnCompleteCallback();}function transitionComplete(){var aobj={};for(var i=0;i<updatedAxisIds.length;i++){var axi=gd._fullLayout[updates[updatedAxisIds[i]].axisName];var to=updates[updatedAxisIds[i]].to;aobj[axi._name+'.range[0]']=to[0];aobj[axi._name+'.range[1]']=to[1];axi.range=to.slice();}// Signal that this transition has completed:\nonComplete&&onComplete();return Registry.call('relayout',gd,aobj).then(function(){for(var i=0;i<affectedSubplots.length;i++){unsetSubplotTransform(affectedSubplots[i]);}});}function transitionInterrupt(){var aobj={};for(var i=0;i<updatedAxisIds.length;i++){var axi=gd._fullLayout[updatedAxisIds[i]+'axis'];aobj[axi._name+'.range[0]']=axi.range[0];aobj[axi._name+'.range[1]']=axi.range[1];axi.range=axi._r.slice();}return Registry.call('relayout',gd,aobj).then(function(){for(var i=0;i<affectedSubplots.length;i++){unsetSubplotTransform(affectedSubplots[i]);}});}var t1,t2,raf;var easeFn=d3.ease(transitionOpts.easing);gd._transitionData._interruptCallbacks.push(function(){window.cancelAnimationFrame(raf);raf=null;return transitionInterrupt();});function doFrame(){t2=Date.now();var tInterp=Math.min(1,(t2-t1)/transitionOpts.duration);var progress=easeFn(tInterp);for(var i=0;i<affectedSubplots.length;i++){updateSubplot(affectedSubplots[i],progress);}if(t2-t1>transitionOpts.duration){transitionComplete();raf=window.cancelAnimationFrame(doFrame);}else{raf=window.requestAnimationFrame(doFrame);}}t1=Date.now();raf=window.requestAnimationFrame(doFrame);return Promise.resolve();};},{\"../../components/drawing\":320,\"../../registry\":521,\"./axes\":469,\"./constants\":475,\"d3\":71}],493:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var traceIs=_dereq_('../../registry').traceIs;var autoType=_dereq_('./axis_autotype');/*\n *  data: the plot data to use in choosing auto type\n *  name: axis object name (ie 'xaxis') if one should be stored\n */module.exports=function handleTypeDefaults(containerIn,containerOut,coerce,options){var axType=coerce('type',(options.splomStash||{}).type);if(axType==='-'){setAutoType(containerOut,options.data);if(containerOut.type==='-'){containerOut.type='linear';}else{// copy autoType back to input axis\n// note that if this object didn't exist\n// in the input layout, we have to put it in\n// this happens in the main supplyDefaults function\ncontainerIn.type=containerOut.type;}}};function setAutoType(ax,data){// new logic: let people specify any type they want,\n// only autotype if type is '-'\nif(ax.type!=='-')return;var id=ax._id;var axLetter=id.charAt(0);// support 3d\nif(id.indexOf('scene')!==-1)id=axLetter;var d0=getFirstNonEmptyTrace(data,id,axLetter);if(!d0)return;// first check for histograms, as the count direction\n// should always default to a linear axis\nif(d0.type==='histogram'&&axLetter==={v:'y',h:'x'}[d0.orientation||'v']){ax.type='linear';return;}var calAttr=axLetter+'calendar';var calendar=d0[calAttr];var opts={noMultiCategory:!traceIs(d0,'cartesian')||traceIs(d0,'noMultiCategory')};var i;// check all boxes on this x axis to see\n// if they're dates, numbers, or categories\nif(isBoxWithoutPositionCoords(d0,axLetter)){var posLetter=getBoxPosLetter(d0);var boxPositions=[];for(i=0;i<data.length;i++){var trace=data[i];if(!traceIs(trace,'box-violin')||(trace[axLetter+'axis']||axLetter)!==id)continue;if(trace[posLetter]!==undefined)boxPositions.push(trace[posLetter][0]);else if(trace.name!==undefined)boxPositions.push(trace.name);else boxPositions.push('text');if(trace[calAttr]!==calendar)calendar=undefined;}ax.type=autoType(boxPositions,calendar,opts);}else if(d0.type==='splom'){var dimensions=d0.dimensions;var diag=d0._diag;for(i=0;i<dimensions.length;i++){var dim=dimensions[i];if(dim.visible&&(diag[i][0]===id||diag[i][1]===id)){ax.type=autoType(dim.values,calendar,opts);break;}}}else{ax.type=autoType(d0[axLetter]||[d0[axLetter+'0']],calendar,opts);}}function getFirstNonEmptyTrace(data,id,axLetter){for(var i=0;i<data.length;i++){var trace=data[i];if(trace.type==='splom'&&trace._length>0&&(trace['_'+axLetter+'axes']||{})[id]){return trace;}if((trace[axLetter+'axis']||axLetter)===id){if(isBoxWithoutPositionCoords(trace,axLetter)){return trace;}else if((trace[axLetter]||[]).length||trace[axLetter+'0']){return trace;}}}}function getBoxPosLetter(trace){return{v:'x',h:'y'}[trace.orientation||'v'];}function isBoxWithoutPositionCoords(trace,axLetter){var posLetter=getBoxPosLetter(trace);var isBox=traceIs(trace,'box-violin');var isCandlestick=traceIs(trace._fullInput||{},'candlestick');return isBox&&!isCandlestick&&axLetter===posLetter&&trace[posLetter]===undefined&&trace[posLetter+'0']===undefined;}},{\"../../registry\":521,\"./axis_autotype\":470}],494:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../registry');var Lib=_dereq_('../lib');/*\n * Create or update an observer. This function is designed to be\n * idempotent so that it can be called over and over as the component\n * updates, and will attach and detach listeners as needed.\n *\n * @param {optional object} container\n *      An object on which the observer is stored. This is the mechanism\n *      by which it is idempotent. If it already exists, another won't be\n *      added. Each time it's called, the value lookup table is updated.\n * @param {array} commandList\n *      An array of commands, following either `buttons` of `updatemenus`\n *      or `steps` of `sliders`.\n * @param {function} onchange\n *      A listener called when the value is changed. Receives data object\n *      with information about the new state.\n */exports.manageCommandObserver=function(gd,container,commandList,onchange){var ret={};var enabled=true;if(container&&container._commandObserver){ret=container._commandObserver;}if(!ret.cache){ret.cache={};}// Either create or just recompute this:\nret.lookupTable={};var binding=exports.hasSimpleAPICommandBindings(gd,commandList,ret.lookupTable);if(container&&container._commandObserver){if(!binding){// If container exists and there are no longer any bindings,\n// remove existing:\nif(container._commandObserver.remove){container._commandObserver.remove();container._commandObserver=null;return ret;}}else{// If container exists and there *are* bindings, then the lookup\n// table should have been updated and check is already attached,\n// so there's nothing to be done:\nreturn ret;}}// Determine whether there's anything to do for this binding:\nif(binding){// Build the cache:\nbindingValueHasChanged(gd,binding,ret.cache);ret.check=function check(){if(!enabled)return;var update=bindingValueHasChanged(gd,binding,ret.cache);if(update.changed&&onchange){// Disable checks for the duration of this command in order to avoid\n// infinite loops:\nif(ret.lookupTable[update.value]!==undefined){ret.disable();Promise.resolve(onchange({value:update.value,type:binding.type,prop:binding.prop,traces:binding.traces,index:ret.lookupTable[update.value]})).then(ret.enable,ret.enable);}}return update.changed;};var checkEvents=['plotly_relayout','plotly_redraw','plotly_restyle','plotly_update','plotly_animatingframe','plotly_afterplot'];for(var i=0;i<checkEvents.length;i++){gd._internalOn(checkEvents[i],ret.check);}ret.remove=function(){for(var i=0;i<checkEvents.length;i++){gd._removeInternalListener(checkEvents[i],ret.check);}};}else{// TODO: It'd be really neat to actually give a *reason* for this, but at least a warning\n// is a start\nLib.log('Unable to automatically bind plot updates to API command');ret.lookupTable={};ret.remove=function(){};}ret.disable=function disable(){enabled=false;};ret.enable=function enable(){enabled=true;};if(container){container._commandObserver=ret;}return ret;};/*\n * This function checks to see if an array of objects containing\n * method and args properties is compatible with automatic two-way\n * binding. The criteria right now are that\n *\n *   1. multiple traces may be affected\n *   2. only one property may be affected\n *   3. the same property must be affected by all commands\n */exports.hasSimpleAPICommandBindings=function(gd,commandList,bindingsByValue){var i;var n=commandList.length;var refBinding;for(i=0;i<n;i++){var binding;var command=commandList[i];var method=command.method;var args=command.args;if(!Array.isArray(args))args=[];// If any command has no method, refuse to bind:\nif(!method){return false;}var bindings=exports.computeAPICommandBindings(gd,method,args);// Right now, handle one and *only* one property being set:\nif(bindings.length!==1){return false;}if(!refBinding){refBinding=bindings[0];if(Array.isArray(refBinding.traces)){refBinding.traces.sort();}}else{binding=bindings[0];if(binding.type!==refBinding.type){return false;}if(binding.prop!==refBinding.prop){return false;}if(Array.isArray(refBinding.traces)){if(Array.isArray(binding.traces)){binding.traces.sort();for(var j=0;j<refBinding.traces.length;j++){if(refBinding.traces[j]!==binding.traces[j]){return false;}}}else{return false;}}else{if(binding.prop!==refBinding.prop){return false;}}}binding=bindings[0];var value=binding.value;if(Array.isArray(value)){if(value.length===1){value=value[0];}else{return false;}}if(bindingsByValue){bindingsByValue[value]=i;}}return refBinding;};function bindingValueHasChanged(gd,binding,cache){var container,value,obj;var changed=false;if(binding.type==='data'){// If it's data, we need to get a trace. Based on the limited scope\n// of what we cover, we can just take the first trace from the list,\n// or otherwise just the first trace:\ncontainer=gd._fullData[binding.traces!==null?binding.traces[0]:0];}else if(binding.type==='layout'){container=gd._fullLayout;}else{return false;}value=Lib.nestedProperty(container,binding.prop).get();obj=cache[binding.type]=cache[binding.type]||{};if(obj.hasOwnProperty(binding.prop)){if(obj[binding.prop]!==value){changed=true;}}obj[binding.prop]=value;return{changed:changed,value:value};}/*\n * Execute an API command. There's really not much to this; it just provides\n * a common hook so that implementations don't need to be synchronized across\n * multiple components with the ability to invoke API commands.\n *\n * @param {string} method\n *      The name of the plotly command to execute. Must be one of 'animate',\n *      'restyle', 'relayout', 'update'.\n * @param {array} args\n *      A list of arguments passed to the API command\n */exports.executeAPICommand=function(gd,method,args){if(method==='skip')return Promise.resolve();var _method=Registry.apiMethodRegistry[method];var allArgs=[gd];if(!Array.isArray(args))args=[];for(var i=0;i<args.length;i++){allArgs.push(args[i]);}return _method.apply(null,allArgs).catch(function(err){Lib.warn('API call to Plotly.'+method+' rejected.',err);return Promise.reject(err);});};exports.computeAPICommandBindings=function(gd,method,args){var bindings;if(!Array.isArray(args))args=[];switch(method){case'restyle':bindings=computeDataBindings(gd,args);break;case'relayout':bindings=computeLayoutBindings(gd,args);break;case'update':bindings=computeDataBindings(gd,[args[0],args[2]]).concat(computeLayoutBindings(gd,[args[1]]));break;case'animate':bindings=computeAnimateBindings(gd,args);break;default:// This is the case where intelligent logic about what affects\n// this command is not implemented. It causes no ill effects.\n// For example, addFrames simply won't bind to a control component.\nbindings=[];}return bindings;};function computeAnimateBindings(gd,args){// We'll assume that the only relevant modification an animation\n// makes that's meaningfully tracked is the frame:\nif(Array.isArray(args[0])&&args[0].length===1&&['string','number'].indexOf(_typeof(args[0][0]))!==-1){return[{type:'layout',prop:'_currentFrame',value:args[0][0].toString()}];}else{return[];}}function computeLayoutBindings(gd,args){var bindings=[];var astr=args[0];var aobj={};if(typeof astr==='string'){aobj[astr]=args[1];}else if(Lib.isPlainObject(astr)){aobj=astr;}else{return bindings;}crawl(aobj,function(path,attrName,attr){bindings.push({type:'layout',prop:path,value:attr});},'',0);return bindings;}function computeDataBindings(gd,args){var traces,astr,val,aobj;var bindings=[];// Logic copied from Plotly.restyle:\nastr=args[0];val=args[1];traces=args[2];aobj={};if(typeof astr==='string'){aobj[astr]=val;}else if(Lib.isPlainObject(astr)){// the 3-arg form\naobj=astr;if(traces===undefined){traces=val;}}else{return bindings;}if(traces===undefined){// Explicitly assign this to null instead of undefined:\ntraces=null;}crawl(aobj,function(path,attrName,attr){var thisTraces;if(Array.isArray(attr)){var nAttr=Math.min(attr.length,gd.data.length);if(traces){nAttr=Math.min(nAttr,traces.length);}thisTraces=[];for(var j=0;j<nAttr;j++){thisTraces[j]=traces?traces[j]:j;}}else{thisTraces=traces?traces.slice(0):null;}// Convert [7] to just 7 when traces is null:\nif(thisTraces===null){if(Array.isArray(attr)){attr=attr[0];}}else if(Array.isArray(thisTraces)){if(!Array.isArray(attr)){var tmp=attr;attr=[];for(var i=0;i<thisTraces.length;i++){attr[i]=tmp;}}attr.length=Math.min(thisTraces.length,attr.length);}bindings.push({type:'data',prop:path,traces:thisTraces,value:attr});},'',0);return bindings;}function crawl(attrs,callback,path,depth){Object.keys(attrs).forEach(function(attrName){var attr=attrs[attrName];if(attrName[0]==='_')return;var thisPath=path+(depth>0?'.':'')+attrName;if(Lib.isPlainObject(attr)){crawl(attr,callback,thisPath,depth+1);}else{// Only execute the callback on leaf nodes:\ncallback(thisPath,attrName,attr);}});}},{\"../lib\":423,\"../registry\":521}],495:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var extendFlat=_dereq_('../lib/extend').extendFlat;/**\n * Make a xy domain attribute group\n *\n * @param {object} opts\n *   @param {string}\n *     opts.name: name to be inserted in the default description\n *   @param {boolean}\n *     opts.trace: set to true for trace containers\n *   @param {string}\n *     opts.editType: editType for all pieces\n *   @param {boolean}\n *     opts.noGridCell: set to true to omit `row` and `column`\n *\n * @param {object} extra\n *   @param {string}\n *     extra.description: extra description. N.B we use\n *     a separate extra container to make it compatible with\n *     the compress_attributes transform.\n *\n * @return {object} attributes object containing {x,y} as specified\n */exports.attributes=function(opts,extra){opts=opts||{};extra=extra||{};var base={valType:'info_array',editType:opts.editType,items:[{valType:'number',min:0,max:1,editType:opts.editType},{valType:'number',min:0,max:1,editType:opts.editType}],dflt:[0,1]};var namePart=opts.name?opts.name+' ':'';var contPart=opts.trace?'trace ':'subplot ';var descPart=extra.description?' '+extra.description:'';var out={x:extendFlat({},base,{}),y:extendFlat({},base,{}),editType:opts.editType};if(!opts.noGridCell){out.row={valType:'integer',min:0,dflt:0,editType:opts.editType};out.column={valType:'integer',min:0,dflt:0,editType:opts.editType};}return out;};exports.defaults=function(containerOut,layout,coerce,dfltDomains){var dfltX=dfltDomains&&dfltDomains.x||[0,1];var dfltY=dfltDomains&&dfltDomains.y||[0,1];var grid=layout.grid;if(grid){var column=coerce('domain.column');if(column!==undefined){if(column<grid.columns)dfltX=grid._domains.x[column];else delete containerOut.domain.column;}var row=coerce('domain.row');if(row!==undefined){if(row<grid.rows)dfltY=grid._domains.y[row];else delete containerOut.domain.row;}}coerce('domain.x',dfltX);coerce('domain.y',dfltY);};},{\"../lib/extend\":416}],496:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/*\n * make a font attribute group\n *\n * @param {object} opts\n *   @param {string}\n *     opts.description: where & how this font is used\n *   @param {optional bool} arrayOk:\n *     should each part (family, size, color) be arrayOk? default false.\n *   @param {string} editType:\n *     the editType for all pieces of this font\n *   @param {optional string} colorEditType:\n *     a separate editType just for color\n *\n * @return {object} attributes object containing {family, size, color} as specified\n */module.exports=function(opts){var editType=opts.editType;var colorEditType=opts.colorEditType;if(colorEditType===undefined)colorEditType=editType;var attrs={family:{valType:'string',noBlank:true,strict:true,editType:editType},size:{valType:'number',min:1,editType:editType},color:{valType:'color',editType:colorEditType},editType:editType// blank strings so compress_attributes can remove\n// TODO - that's uber hacky... better solution?\n};if(opts.arrayOk){attrs.family.arrayOk=true;attrs.size.arrayOk=true;attrs.color.arrayOk=true;}return attrs;};},{}],497:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={_isLinkedToArray:'frames_entry',group:{valType:'string'},name:{valType:'string'},traces:{valType:'any'},baseframe:{valType:'string'},data:{valType:'any'},layout:{valType:'any'}};},{}],498:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../registry');var SUBPLOT_PATTERN=_dereq_('./cartesian/constants').SUBPLOT_PATTERN;/**\n * Get calcdata trace(s) associated with a given subplot\n *\n * @param {array} calcData: as in gd.calcdata\n * @param {string} type: subplot type\n * @param {string} subplotId: subplot id to look for\n *\n * @return {array} array of calcdata traces\n */exports.getSubplotCalcData=function(calcData,type,subplotId){var basePlotModule=Registry.subplotsRegistry[type];if(!basePlotModule)return[];var attr=basePlotModule.attr;var subplotCalcData=[];for(var i=0;i<calcData.length;i++){var calcTrace=calcData[i];var trace=calcTrace[0].trace;if(trace[attr]===subplotId)subplotCalcData.push(calcTrace);}return subplotCalcData;};/**\n * Get calcdata trace(s) that can be plotted with a given module\n * NOTE: this isn't necessarily just exactly matching trace type,\n * if multiple trace types use the same plotting routine, they will be\n * collected here.\n * In order to not plot the same thing multiple times, we return two arrays,\n * the calcdata we *will* plot with this module, and the ones we *won't*\n *\n * @param {array} calcdata: as in gd.calcdata\n * @param {object|string|fn} arg1:\n *  the plotting module, or its name, or its plot method\n *\n * @return {array[array]} [foundCalcdata, remainingCalcdata]\n */exports.getModuleCalcData=function(calcdata,arg1){var moduleCalcData=[];var remainingCalcData=[];var plotMethod;if(typeof arg1==='string'){plotMethod=Registry.getModule(arg1).plot;}else if(typeof arg1==='function'){plotMethod=arg1;}else{plotMethod=arg1.plot;}if(!plotMethod){return[moduleCalcData,calcdata];}for(var i=0;i<calcdata.length;i++){var cd=calcdata[i];var trace=cd[0].trace;// N.B. 'legendonly' traces do not make it past here\nif(trace.visible!==true)continue;// group calcdata trace not by 'module' (as the name of this function\n// would suggest), but by 'module plot method' so that if some traces\n// share the same module plot method (e.g. bar and histogram), we\n// only call it one!\nif(trace._module.plot===plotMethod){moduleCalcData.push(cd);}else{remainingCalcData.push(cd);}}return[moduleCalcData,remainingCalcData];};/**\n * Get the data trace(s) associated with a given subplot.\n *\n * @param {array} data  plotly full data array.\n * @param {string} type subplot type to look for.\n * @param {string} subplotId subplot id to look for.\n *\n * @return {array} list of trace objects.\n *\n */exports.getSubplotData=function getSubplotData(data,type,subplotId){if(!Registry.subplotsRegistry[type])return[];var attr=Registry.subplotsRegistry[type].attr;var subplotData=[];var trace,subplotX,subplotY;if(type==='gl2d'){var spmatch=subplotId.match(SUBPLOT_PATTERN);subplotX='x'+spmatch[1];subplotY='y'+spmatch[2];}for(var i=0;i<data.length;i++){trace=data[i];if(type==='gl2d'&&Registry.traceIs(trace,'gl2d')){if(trace[attr[0]]===subplotX&&trace[attr[1]]===subplotY){subplotData.push(trace);}}else{if(trace[attr]===subplotId)subplotData.push(trace);}}return subplotData;};},{\"../registry\":521,\"./cartesian/constants\":475}],499:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports=createCamera;var now=_dereq_('right-now');var createView=_dereq_('3d-view');var mouseChange=_dereq_('mouse-change');var mouseWheel=_dereq_('mouse-wheel');var mouseOffset=_dereq_('mouse-event-offset');var supportsPassive=_dereq_('has-passive-events');function createCamera(element,options){element=element||document.body;options=options||{};var limits=[0.01,Infinity];if('distanceLimits'in options){limits[0]=options.distanceLimits[0];limits[1]=options.distanceLimits[1];}if('zoomMin'in options){limits[0]=options.zoomMin;}if('zoomMax'in options){limits[1]=options.zoomMax;}var view=createView({center:options.center||[0,0,0],up:options.up||[0,1,0],eye:options.eye||[0,0,10],mode:options.mode||'orbit',distanceLimits:limits});var pmatrix=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];var distance=0.0;var width=element.clientWidth;var height=element.clientHeight;var camera={keyBindingMode:'rotate',view:view,element:element,delay:options.delay||16,rotateSpeed:options.rotateSpeed||1,zoomSpeed:options.zoomSpeed||1,translateSpeed:options.translateSpeed||1,flipX:!!options.flipX,flipY:!!options.flipY,modes:view.modes,tick:function tick(){var t=now();var delay=this.delay;var ctime=t-2*delay;view.idle(t-delay);view.recalcMatrix(ctime);view.flush(t-(100+delay*2));var allEqual=true;var matrix=view.computedMatrix;for(var i=0;i<16;++i){allEqual=allEqual&&pmatrix[i]===matrix[i];pmatrix[i]=matrix[i];}var sizeChanged=element.clientWidth===width&&element.clientHeight===height;width=element.clientWidth;height=element.clientHeight;if(allEqual)return!sizeChanged;distance=Math.exp(view.computedRadius[0]);return true;},lookAt:function lookAt(center,eye,up){view.lookAt(view.lastT(),center,eye,up);},rotate:function rotate(pitch,yaw,roll){view.rotate(view.lastT(),pitch,yaw,roll);},pan:function pan(dx,dy,dz){view.pan(view.lastT(),dx,dy,dz);},translate:function translate(dx,dy,dz){view.translate(view.lastT(),dx,dy,dz);}};Object.defineProperties(camera,{matrix:{get:function get(){return view.computedMatrix;},set:function set(mat){view.setMatrix(view.lastT(),mat);return view.computedMatrix;},enumerable:true},mode:{get:function get(){return view.getMode();},set:function set(mode){var curUp=view.computedUp.slice();var curEye=view.computedEye.slice();var curCenter=view.computedCenter.slice();view.setMode(mode);if(mode==='turntable'){// Hacky time warping stuff to generate smooth animation\nvar t0=now();view._active.lookAt(t0,curEye,curCenter,curUp);view._active.lookAt(t0+500,curEye,curCenter,[0,0,1]);view._active.flush(t0);}return view.getMode();},enumerable:true},center:{get:function get(){return view.computedCenter;},set:function set(ncenter){view.lookAt(view.lastT(),null,ncenter);return view.computedCenter;},enumerable:true},eye:{get:function get(){return view.computedEye;},set:function set(neye){view.lookAt(view.lastT(),neye);return view.computedEye;},enumerable:true},up:{get:function get(){return view.computedUp;},set:function set(nup){view.lookAt(view.lastT(),null,null,nup);return view.computedUp;},enumerable:true},distance:{get:function get(){return distance;},set:function set(d){view.setDistance(view.lastT(),d);return d;},enumerable:true},distanceLimits:{get:function get(){return view.getDistanceLimits(limits);},set:function set(v){view.setDistanceLimits(v);return v;},enumerable:true}});element.addEventListener('contextmenu',function(ev){ev.preventDefault();return false;});var lastX=0;var lastY=0;var lastMods={shift:false,control:false,alt:false,meta:false};camera.mouseListener=mouseChange(element,handleInteraction);// enable simple touch interactions\nelement.addEventListener('touchstart',function(ev){var xy=mouseOffset(ev.changedTouches[0],element);handleInteraction(0,xy[0],xy[1],lastMods);handleInteraction(1,xy[0],xy[1],lastMods);ev.preventDefault();},supportsPassive?{passive:false}:false);element.addEventListener('touchmove',function(ev){var xy=mouseOffset(ev.changedTouches[0],element);handleInteraction(1,xy[0],xy[1],lastMods);ev.preventDefault();},supportsPassive?{passive:false}:false);element.addEventListener('touchend',function(ev){handleInteraction(0,lastX,lastY,lastMods);ev.preventDefault();},supportsPassive?{passive:false}:false);function handleInteraction(buttons,x,y,mods){var keyBindingMode=camera.keyBindingMode;if(keyBindingMode===false)return;var rotate=keyBindingMode==='rotate';var pan=keyBindingMode==='pan';var zoom=keyBindingMode==='zoom';var ctrl=!!mods.control;var alt=!!mods.alt;var shift=!!mods.shift;var left=!!(buttons&1);var right=!!(buttons&2);var middle=!!(buttons&4);var scale=1.0/element.clientHeight;var dx=scale*(x-lastX);var dy=scale*(y-lastY);var flipX=camera.flipX?1:-1;var flipY=camera.flipY?1:-1;var t=now();var drot=Math.PI*camera.rotateSpeed;if(rotate&&left&&!ctrl&&!alt&&!shift||left&&!ctrl&&!alt&&shift){// Rotate\nview.rotate(t,flipX*drot*dx,-flipY*drot*dy,0);}if(pan&&left&&!ctrl&&!alt&&!shift||right||left&&ctrl&&!alt&&!shift){// Pan\nview.pan(t,-camera.translateSpeed*dx*distance,camera.translateSpeed*dy*distance,0);}if(zoom&&left&&!ctrl&&!alt&&!shift||middle||left&&!ctrl&&alt&&!shift){// Zoom\nvar kzoom=-camera.zoomSpeed*dy/window.innerHeight*(t-view.lastT())*100;view.pan(t,0,0,distance*(Math.exp(kzoom)-1));}lastX=x;lastY=y;lastMods=mods;return true;}camera.wheelListener=mouseWheel(element,function(dx,dy){if(camera.keyBindingMode===false)return;var flipX=camera.flipX?1:-1;var flipY=camera.flipY?1:-1;var t=now();if(Math.abs(dx)>Math.abs(dy)){view.rotate(t,0,0,-dx*flipX*Math.PI*camera.rotateSpeed/window.innerWidth);}else{var kzoom=-camera.zoomSpeed*flipY*dy/window.innerHeight*(t-view.lastT())/20.0;view.pan(t,0,0,distance*(Math.exp(kzoom)-1));}},true);return camera;}},{\"3d-view\":8,\"has-passive-events\":164,\"mouse-change\":184,\"mouse-event-offset\":185,\"mouse-wheel\":187,\"right-now\":239}],500:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var overrideAll=_dereq_('../../plot_api/edit_types').overrideAll;var fxAttrs=_dereq_('../../components/fx/layout_attributes');var Scene=_dereq_('./scene');var getSubplotData=_dereq_('../get_data').getSubplotData;var Lib=_dereq_('../../lib');var xmlnsNamespaces=_dereq_('../../constants/xmlns_namespaces');var GL3D='gl3d';var SCENE='scene';exports.name=GL3D;exports.attr=SCENE;exports.idRoot=SCENE;exports.idRegex=exports.attrRegex=Lib.counterRegex('scene');exports.attributes=_dereq_('./layout/attributes');exports.layoutAttributes=_dereq_('./layout/layout_attributes');exports.baseLayoutAttrOverrides=overrideAll({hoverlabel:fxAttrs.hoverlabel},'plot','nested');exports.supplyLayoutDefaults=_dereq_('./layout/defaults');exports.plot=function plotGl3d(gd){var fullLayout=gd._fullLayout;var fullData=gd._fullData;var sceneIds=fullLayout._subplots[GL3D];for(var i=0;i<sceneIds.length;i++){var sceneId=sceneIds[i];var fullSceneData=getSubplotData(fullData,GL3D,sceneId);var sceneLayout=fullLayout[sceneId];var scene=sceneLayout._scene;if(!scene){scene=new Scene({id:sceneId,graphDiv:gd,container:gd.querySelector('.gl-container'),staticPlot:gd._context.staticPlot,plotGlPixelRatio:gd._context.plotGlPixelRatio},fullLayout);// set ref to Scene instance\nsceneLayout._scene=scene;}// save 'initial' camera settings for modebar button\nif(!scene.cameraInitial){scene.cameraInitial=Lib.extendDeep({},sceneLayout.camera);}scene.plot(fullSceneData,fullLayout,gd.layout);}};exports.clean=function(newFullData,newFullLayout,oldFullData,oldFullLayout){var oldSceneKeys=oldFullLayout._subplots[GL3D]||[];for(var i=0;i<oldSceneKeys.length;i++){var oldSceneKey=oldSceneKeys[i];if(!newFullLayout[oldSceneKey]&&!!oldFullLayout[oldSceneKey]._scene){oldFullLayout[oldSceneKey]._scene.destroy();if(oldFullLayout._infolayer){oldFullLayout._infolayer.selectAll('.annotation-'+oldSceneKey).remove();}}}};exports.toSVG=function(gd){var fullLayout=gd._fullLayout;var sceneIds=fullLayout._subplots[GL3D];var size=fullLayout._size;for(var i=0;i<sceneIds.length;i++){var sceneLayout=fullLayout[sceneIds[i]];var domain=sceneLayout.domain;var scene=sceneLayout._scene;var imageData=scene.toImage('png');var image=fullLayout._glimages.append('svg:image');image.attr({xmlns:xmlnsNamespaces.svg,'xlink:href':imageData,x:size.l+size.w*domain.x[0],y:size.t+size.h*(1-domain.y[1]),width:size.w*(domain.x[1]-domain.x[0]),height:size.h*(domain.y[1]-domain.y[0]),preserveAspectRatio:'none'});scene.destroy();}};// clean scene ids, 'scene1' -> 'scene'\nexports.cleanId=function cleanId(id){if(!id.match(/^scene[0-9]*$/))return;var sceneNum=id.substr(5);if(sceneNum==='1')sceneNum='';return SCENE+sceneNum;};exports.updateFx=function(gd){var fullLayout=gd._fullLayout;var subplotIds=fullLayout._subplots[GL3D];for(var i=0;i<subplotIds.length;i++){var subplotObj=fullLayout[subplotIds[i]]._scene;subplotObj.updateFx(fullLayout.dragmode,fullLayout.hovermode);}};},{\"../../components/fx/layout_attributes\":339,\"../../constants/xmlns_namespaces\":399,\"../../lib\":423,\"../../plot_api/edit_types\":452,\"../get_data\":498,\"./layout/attributes\":501,\"./layout/defaults\":505,\"./layout/layout_attributes\":506,\"./scene\":510}],501:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={scene:{valType:'subplotid',dflt:'scene',editType:'calc+clearAxisTypes'}};},{}],502:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Color=_dereq_('../../../components/color');var axesAttrs=_dereq_('../../cartesian/layout_attributes');var extendFlat=_dereq_('../../../lib/extend').extendFlat;var overrideAll=_dereq_('../../../plot_api/edit_types').overrideAll;module.exports=overrideAll({visible:axesAttrs.visible,showspikes:{valType:'boolean',dflt:true},spikesides:{valType:'boolean',dflt:true},spikethickness:{valType:'number',min:0,dflt:2},spikecolor:{valType:'color',dflt:Color.defaultLine},showbackground:{valType:'boolean',dflt:false},backgroundcolor:{valType:'color',dflt:'rgba(204, 204, 204, 0.5)'},showaxeslabels:{valType:'boolean',dflt:true},color:axesAttrs.color,categoryorder:axesAttrs.categoryorder,categoryarray:axesAttrs.categoryarray,title:axesAttrs.title,type:extendFlat({},axesAttrs.type,{values:['-','linear','log','date','category']}),autorange:axesAttrs.autorange,rangemode:axesAttrs.rangemode,range:axesAttrs.range,// ticks\ntickmode:axesAttrs.tickmode,nticks:axesAttrs.nticks,tick0:axesAttrs.tick0,dtick:axesAttrs.dtick,tickvals:axesAttrs.tickvals,ticktext:axesAttrs.ticktext,ticks:axesAttrs.ticks,mirror:axesAttrs.mirror,ticklen:axesAttrs.ticklen,tickwidth:axesAttrs.tickwidth,tickcolor:axesAttrs.tickcolor,showticklabels:axesAttrs.showticklabels,tickfont:axesAttrs.tickfont,tickangle:axesAttrs.tickangle,tickprefix:axesAttrs.tickprefix,showtickprefix:axesAttrs.showtickprefix,ticksuffix:axesAttrs.ticksuffix,showticksuffix:axesAttrs.showticksuffix,showexponent:axesAttrs.showexponent,exponentformat:axesAttrs.exponentformat,separatethousands:axesAttrs.separatethousands,tickformat:axesAttrs.tickformat,tickformatstops:axesAttrs.tickformatstops,hoverformat:axesAttrs.hoverformat,// lines and grids\nshowline:axesAttrs.showline,linecolor:axesAttrs.linecolor,linewidth:axesAttrs.linewidth,showgrid:axesAttrs.showgrid,gridcolor:extendFlat({},axesAttrs.gridcolor,// shouldn't this be on-par with 2D?\n{dflt:'rgb(204, 204, 204)'}),gridwidth:axesAttrs.gridwidth,zeroline:axesAttrs.zeroline,zerolinecolor:axesAttrs.zerolinecolor,zerolinewidth:axesAttrs.zerolinewidth,_deprecated:{title:axesAttrs._deprecated.title,titlefont:axesAttrs._deprecated.titlefont}},'plot','from-root');},{\"../../../components/color\":299,\"../../../lib/extend\":416,\"../../../plot_api/edit_types\":452,\"../../cartesian/layout_attributes\":482}],503:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var colorMix=_dereq_('tinycolor2').mix;var Lib=_dereq_('../../../lib');var Template=_dereq_('../../../plot_api/plot_template');var layoutAttributes=_dereq_('./axis_attributes');var handleTypeDefaults=_dereq_('../../cartesian/type_defaults');var handleAxisDefaults=_dereq_('../../cartesian/axis_defaults');var axesNames=['xaxis','yaxis','zaxis'];// TODO: hard-coded lightness fraction based on gridline default colors\n// that differ from other subplot types.\nvar gridLightness=100*(204-0x44)/(255-0x44);module.exports=function supplyLayoutDefaults(layoutIn,layoutOut,options){var containerIn,containerOut;function coerce(attr,dflt){return Lib.coerce(containerIn,containerOut,layoutAttributes,attr,dflt);}for(var j=0;j<axesNames.length;j++){var axName=axesNames[j];containerIn=layoutIn[axName]||{};containerOut=Template.newContainer(layoutOut,axName);containerOut._id=axName[0]+options.scene;containerOut._name=axName;handleTypeDefaults(containerIn,containerOut,coerce,options);handleAxisDefaults(containerIn,containerOut,coerce,{font:options.font,letter:axName[0],data:options.data,showGrid:true,noTickson:true,bgColor:options.bgColor,calendar:options.calendar},options.fullLayout);coerce('gridcolor',colorMix(containerOut.color,options.bgColor,gridLightness).toRgbString());coerce('title.text',axName[0]);// shouldn't this be on-par with 2D?\ncontainerOut.setScale=Lib.noop;if(coerce('showspikes')){coerce('spikesides');coerce('spikethickness');coerce('spikecolor',containerOut.color);}coerce('showaxeslabels');if(coerce('showbackground'))coerce('backgroundcolor');}};},{\"../../../lib\":423,\"../../../plot_api/plot_template\":459,\"../../cartesian/axis_defaults\":471,\"../../cartesian/type_defaults\":493,\"./axis_attributes\":502,\"tinycolor2\":264}],504:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var str2RgbaArray=_dereq_('../../../lib/str2rgbarray');var AXES_NAMES=['xaxis','yaxis','zaxis'];function AxesOptions(){this.bounds=[[-10,-10,-10],[10,10,10]];this.ticks=[[],[],[]];this.tickEnable=[true,true,true];this.tickFont=['sans-serif','sans-serif','sans-serif'];this.tickSize=[12,12,12];this.tickAngle=[0,0,0];this.tickColor=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.tickPad=[18,18,18];this.labels=['x','y','z'];this.labelEnable=[true,true,true];this.labelFont=['Open Sans','Open Sans','Open Sans'];this.labelSize=[20,20,20];this.labelColor=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.labelPad=[30,30,30];this.lineEnable=[true,true,true];this.lineMirror=[false,false,false];this.lineWidth=[1,1,1];this.lineColor=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.lineTickEnable=[true,true,true];this.lineTickMirror=[false,false,false];this.lineTickLength=[10,10,10];this.lineTickWidth=[1,1,1];this.lineTickColor=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.gridEnable=[true,true,true];this.gridWidth=[1,1,1];this.gridColor=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.zeroEnable=[true,true,true];this.zeroLineColor=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.zeroLineWidth=[2,2,2];this.backgroundEnable=[true,true,true];this.backgroundColor=[[0.8,0.8,0.8,0.5],[0.8,0.8,0.8,0.5],[0.8,0.8,0.8,0.5]];// some default values are stored for applying model transforms\nthis._defaultTickPad=this.tickPad.slice();this._defaultLabelPad=this.labelPad.slice();this._defaultLineTickLength=this.lineTickLength.slice();}var proto=AxesOptions.prototype;proto.merge=function(sceneLayout){var opts=this;for(var i=0;i<3;++i){var axes=sceneLayout[AXES_NAMES[i]];if(!axes.visible){opts.tickEnable[i]=false;opts.labelEnable[i]=false;opts.lineEnable[i]=false;opts.lineTickEnable[i]=false;opts.gridEnable[i]=false;opts.zeroEnable[i]=false;opts.backgroundEnable[i]=false;continue;}// Axes labels\nopts.labels[i]=axes.title.text;if('font'in axes.title){if(axes.title.font.color)opts.labelColor[i]=str2RgbaArray(axes.title.font.color);if(axes.title.font.family)opts.labelFont[i]=axes.title.font.family;if(axes.title.font.size)opts.labelSize[i]=axes.title.font.size;}// Lines\nif('showline'in axes)opts.lineEnable[i]=axes.showline;if('linecolor'in axes)opts.lineColor[i]=str2RgbaArray(axes.linecolor);if('linewidth'in axes)opts.lineWidth[i]=axes.linewidth;if('showgrid'in axes)opts.gridEnable[i]=axes.showgrid;if('gridcolor'in axes)opts.gridColor[i]=str2RgbaArray(axes.gridcolor);if('gridwidth'in axes)opts.gridWidth[i]=axes.gridwidth;// Remove zeroline if axis type is log\n// otherwise the zeroline is incorrectly drawn at 1 on log axes\nif(axes.type==='log')opts.zeroEnable[i]=false;else if('zeroline'in axes)opts.zeroEnable[i]=axes.zeroline;if('zerolinecolor'in axes)opts.zeroLineColor[i]=str2RgbaArray(axes.zerolinecolor);if('zerolinewidth'in axes)opts.zeroLineWidth[i]=axes.zerolinewidth;// tick lines\nif('ticks'in axes&&!!axes.ticks)opts.lineTickEnable[i]=true;else opts.lineTickEnable[i]=false;if('ticklen'in axes){opts.lineTickLength[i]=opts._defaultLineTickLength[i]=axes.ticklen;}if('tickcolor'in axes)opts.lineTickColor[i]=str2RgbaArray(axes.tickcolor);if('tickwidth'in axes)opts.lineTickWidth[i]=axes.tickwidth;if('tickangle'in axes){opts.tickAngle[i]=axes.tickangle==='auto'?-3600:// i.e. special number to set auto option\nMath.PI*-axes.tickangle/180;}// tick labels\nif('showticklabels'in axes)opts.tickEnable[i]=axes.showticklabels;if('tickfont'in axes){if(axes.tickfont.color)opts.tickColor[i]=str2RgbaArray(axes.tickfont.color);if(axes.tickfont.family)opts.tickFont[i]=axes.tickfont.family;if(axes.tickfont.size)opts.tickSize[i]=axes.tickfont.size;}if('mirror'in axes){if(['ticks','all','allticks'].indexOf(axes.mirror)!==-1){opts.lineTickMirror[i]=true;opts.lineMirror[i]=true;}else if(axes.mirror===true){opts.lineTickMirror[i]=false;opts.lineMirror[i]=true;}else{opts.lineTickMirror[i]=false;opts.lineMirror[i]=false;}}else opts.lineMirror[i]=false;// grid background\nif('showbackground'in axes&&axes.showbackground!==false){opts.backgroundEnable[i]=true;opts.backgroundColor[i]=str2RgbaArray(axes.backgroundcolor);}else opts.backgroundEnable[i]=false;}};function createAxesOptions(plotlyOptions){var result=new AxesOptions();result.merge(plotlyOptions);return result;}module.exports=createAxesOptions;},{\"../../../lib/str2rgbarray\":445}],505:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../../lib');var Color=_dereq_('../../../components/color');var Registry=_dereq_('../../../registry');var handleSubplotDefaults=_dereq_('../../subplot_defaults');var supplyGl3dAxisLayoutDefaults=_dereq_('./axis_defaults');var layoutAttributes=_dereq_('./layout_attributes');var getSubplotData=_dereq_('../../get_data').getSubplotData;var GL3D='gl3d';module.exports=function supplyLayoutDefaults(layoutIn,layoutOut,fullData){var hasNon3D=layoutOut._basePlotModules.length>1;// some layout-wide attribute are used in all scenes\n// if 3D is the only visible plot type\nfunction getDfltFromLayout(attr){if(hasNon3D)return;var isValid=Lib.validate(layoutIn[attr],layoutAttributes[attr]);if(isValid)return layoutIn[attr];}handleSubplotDefaults(layoutIn,layoutOut,fullData,{type:GL3D,attributes:layoutAttributes,handleDefaults:handleGl3dDefaults,fullLayout:layoutOut,font:layoutOut.font,fullData:fullData,getDfltFromLayout:getDfltFromLayout,paper_bgcolor:layoutOut.paper_bgcolor,calendar:layoutOut.calendar});};function handleGl3dDefaults(sceneLayoutIn,sceneLayoutOut,coerce,opts){/*\n     * Scene numbering proceeds as follows\n     * scene\n     * scene2\n     * scene3\n     *\n     * and d.scene will be undefined or some number or number string\n     *\n     * Also write back a blank scene object to user layout so that some\n     * attributes like aspectratio can be written back dynamically.\n     */var bgcolor=coerce('bgcolor');var bgColorCombined=Color.combine(bgcolor,opts.paper_bgcolor);var cameraKeys=['up','center','eye'];for(var j=0;j<cameraKeys.length;j++){coerce('camera.'+cameraKeys[j]+'.x');coerce('camera.'+cameraKeys[j]+'.y');coerce('camera.'+cameraKeys[j]+'.z');}/*\n     * coerce to positive number (min 0) but also do not accept 0 (>0 not >=0)\n     * note that 0's go false with the !! call\n     */var hasAspect=!!coerce('aspectratio.x')&&!!coerce('aspectratio.y')&&!!coerce('aspectratio.z');var defaultAspectMode=hasAspect?'manual':'auto';var aspectMode=coerce('aspectmode',defaultAspectMode);/*\n     * We need aspectratio object in all the Layouts as it is dynamically set\n     * in the calculation steps, ie, we cant set the correct data now, it happens later.\n     * We must also account for the case the user sends bad ratio data with 'manual' set\n     * for the mode. In this case we must force change it here as the default coerce\n     * misses it above.\n     */if(!hasAspect){sceneLayoutIn.aspectratio=sceneLayoutOut.aspectratio={x:1,y:1,z:1};if(aspectMode==='manual')sceneLayoutOut.aspectmode='auto';/*\n         * kind of like autorange - we need the calculated aspectmode back in\n         * the input layout or relayout can cause problems later\n         */sceneLayoutIn.aspectmode=sceneLayoutOut.aspectmode;}var fullGl3dData=getSubplotData(opts.fullData,GL3D,opts.id);supplyGl3dAxisLayoutDefaults(sceneLayoutIn,sceneLayoutOut,{font:opts.font,scene:opts.id,data:fullGl3dData,bgColor:bgColorCombined,calendar:opts.calendar,fullLayout:opts.fullLayout});Registry.getComponentMethod('annotations3d','handleDefaults')(sceneLayoutIn,sceneLayoutOut,opts);var dragmode=opts.getDfltFromLayout('dragmode');if(dragmode!==false){if(!dragmode){dragmode='orbit';if(sceneLayoutIn.camera&&sceneLayoutIn.camera.up){var x=sceneLayoutIn.camera.up.x;var y=sceneLayoutIn.camera.up.y;var z=sceneLayoutIn.camera.up.z;if(!x||!y||!z){dragmode='turntable';}else if(z/Math.sqrt(x*x+y*y+z*z)>0.999){dragmode='turntable';}}else{dragmode='turntable';}}}coerce('dragmode',dragmode);coerce('hovermode',opts.getDfltFromLayout('hovermode'));}},{\"../../../components/color\":299,\"../../../lib\":423,\"../../../registry\":521,\"../../get_data\":498,\"../../subplot_defaults\":520,\"./axis_defaults\":503,\"./layout_attributes\":506}],506:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var gl3dAxisAttrs=_dereq_('./axis_attributes');var domainAttrs=_dereq_('../../domain').attributes;var extendFlat=_dereq_('../../../lib/extend').extendFlat;var counterRegex=_dereq_('../../../lib').counterRegex;function makeCameraVector(x,y,z){return{x:{valType:'number',dflt:x,editType:'camera'},y:{valType:'number',dflt:y,editType:'camera'},z:{valType:'number',dflt:z,editType:'camera'},editType:'camera'};}module.exports={_arrayAttrRegexps:[counterRegex('scene','.annotations',true)],bgcolor:{valType:'color',dflt:'rgba(0,0,0,0)',editType:'plot'},camera:{up:extendFlat(makeCameraVector(0,0,1),{}),center:extendFlat(makeCameraVector(0,0,0),{}),eye:extendFlat(makeCameraVector(1.25,1.25,1.25),{}),editType:'camera'},domain:domainAttrs({name:'scene',editType:'plot'}),aspectmode:{valType:'enumerated',values:['auto','cube','data','manual'],dflt:'auto',editType:'plot',impliedEdits:{'aspectratio.x':undefined,'aspectratio.y':undefined,'aspectratio.z':undefined}},aspectratio:{// must be positive (0's are coerced to 1)\nx:{valType:'number',min:0,editType:'plot',impliedEdits:{'^aspectmode':'manual'}},y:{valType:'number',min:0,editType:'plot',impliedEdits:{'^aspectmode':'manual'}},z:{valType:'number',min:0,editType:'plot',impliedEdits:{'^aspectmode':'manual'}},editType:'plot',impliedEdits:{aspectmode:'manual'}},xaxis:gl3dAxisAttrs,yaxis:gl3dAxisAttrs,zaxis:gl3dAxisAttrs,dragmode:{valType:'enumerated',values:['orbit','turntable','zoom','pan',false],editType:'plot'},hovermode:{valType:'enumerated',values:['closest',false],dflt:'closest',editType:'modebar'},uirevision:{valType:'any',editType:'none'},editType:'plot',_deprecated:{cameraposition:{valType:'info_array',editType:'camera'}}};},{\"../../../lib\":423,\"../../../lib/extend\":416,\"../../domain\":495,\"./axis_attributes\":502}],507:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var str2RGBArray=_dereq_('../../../lib/str2rgbarray');var AXES_NAMES=['xaxis','yaxis','zaxis'];function SpikeOptions(){this.enabled=[true,true,true];this.colors=[[0,0,0,1],[0,0,0,1],[0,0,0,1]];this.drawSides=[true,true,true];this.lineWidth=[1,1,1];}var proto=SpikeOptions.prototype;proto.merge=function(sceneLayout){for(var i=0;i<3;++i){var axes=sceneLayout[AXES_NAMES[i]];if(!axes.visible){this.enabled[i]=false;this.drawSides[i]=false;continue;}this.enabled[i]=axes.showspikes;this.colors[i]=str2RGBArray(axes.spikecolor);this.drawSides[i]=axes.spikesides;this.lineWidth[i]=axes.spikethickness;}};function createSpikeOptions(layout){var result=new SpikeOptions();result.merge(layout);return result;}module.exports=createSpikeOptions;},{\"../../../lib/str2rgbarray\":445}],508:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/ /* eslint block-scoped-var: 0*/ /* eslint no-redeclare: 0*/'use strict';module.exports=computeTickMarks;var Axes=_dereq_('../../cartesian/axes');var Lib=_dereq_('../../../lib');var AXES_NAMES=['xaxis','yaxis','zaxis'];var centerPoint=[0,0,0];function contourLevelsFromTicks(ticks){var result=new Array(3);for(var i=0;i<3;++i){var tlevel=ticks[i];var clevel=new Array(tlevel.length);for(var j=0;j<tlevel.length;++j){clevel[j]=tlevel[j].x;}result[i]=clevel;}return result;}function computeTickMarks(scene){var axesOptions=scene.axesOptions;var glRange=scene.glplot.axesPixels;var sceneLayout=scene.fullSceneLayout;var ticks=[[],[],[]];for(var i=0;i<3;++i){var axes=sceneLayout[AXES_NAMES[i]];axes._length=(glRange[i].hi-glRange[i].lo)*glRange[i].pixelsPerDataUnit/scene.dataScale[i];if(Math.abs(axes._length)===Infinity||isNaN(axes._length)){ticks[i]=[];}else{axes._input_range=axes.range.slice();axes.range[0]=glRange[i].lo/scene.dataScale[i];axes.range[1]=glRange[i].hi/scene.dataScale[i];axes._m=1.0/(scene.dataScale[i]*glRange[i].pixelsPerDataUnit);if(axes.range[0]===axes.range[1]){axes.range[0]-=1;axes.range[1]+=1;}// this is necessary to short-circuit the 'y' handling\n// in autotick part of calcTicks... Treating all axes as 'y' in this case\n// running the autoticks here, then setting\n// autoticks to false to get around the 2D handling in calcTicks.\nvar tickModeCached=axes.tickmode;if(axes.tickmode==='auto'){axes.tickmode='linear';var nticks=axes.nticks||Lib.constrain(axes._length/40,4,9);Axes.autoTicks(axes,Math.abs(axes.range[1]-axes.range[0])/nticks);}var dataTicks=Axes.calcTicks(axes);for(var j=0;j<dataTicks.length;++j){dataTicks[j].x=dataTicks[j].x*scene.dataScale[i];if(axes.type==='date'){dataTicks[j].text=dataTicks[j].text.replace(/\\<br\\>/g,' ');}}ticks[i]=dataTicks;axes.tickmode=tickModeCached;}}axesOptions.ticks=ticks;// Calculate tick lengths dynamically\nfor(var i=0;i<3;++i){centerPoint[i]=0.5*(scene.glplot.bounds[0][i]+scene.glplot.bounds[1][i]);for(var j=0;j<2;++j){axesOptions.bounds[j][i]=scene.glplot.bounds[j][i];}}scene.contourLevels=contourLevelsFromTicks(ticks);}},{\"../../../lib\":423,\"../../cartesian/axes\":469}],509:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';function xformMatrix(m,v){var out=[0,0,0,0];var i,j;for(i=0;i<4;++i){for(j=0;j<4;++j){out[j]+=m[4*i+j]*v[i];}}return out;}function project(camera,v){var p=xformMatrix(camera.projection,xformMatrix(camera.view,xformMatrix(camera.model,[v[0],v[1],v[2],1])));return p;}module.exports=project;},{}],510:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var createPlot=_dereq_('gl-plot3d');var getContext=_dereq_('webgl-context');var passiveSupported=_dereq_('has-passive-events');var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var Axes=_dereq_('../../plots/cartesian/axes');var Fx=_dereq_('../../components/fx');var str2RGBAarray=_dereq_('../../lib/str2rgbarray');var showNoWebGlMsg=_dereq_('../../lib/show_no_webgl_msg');var createCamera=_dereq_('./camera');var project=_dereq_('./project');var createAxesOptions=_dereq_('./layout/convert');var createSpikeOptions=_dereq_('./layout/spikes');var computeTickMarks=_dereq_('./layout/tick_marks');var STATIC_CANVAS,STATIC_CONTEXT;function render(scene){var trace;// update size of svg container\nvar svgContainer=scene.svgContainer;var clientRect=scene.container.getBoundingClientRect();var width=clientRect.width;var height=clientRect.height;svgContainer.setAttributeNS(null,'viewBox','0 0 '+width+' '+height);svgContainer.setAttributeNS(null,'width',width);svgContainer.setAttributeNS(null,'height',height);computeTickMarks(scene);scene.glplot.axes.update(scene.axesOptions);// check if pick has changed\nvar keys=Object.keys(scene.traces);var lastPicked=null;var selection=scene.glplot.selection;for(var i=0;i<keys.length;++i){trace=scene.traces[keys[i]];if(trace.data.hoverinfo!=='skip'&&trace.handlePick(selection)){lastPicked=trace;}if(trace.setContourLevels)trace.setContourLevels();}function formatter(axisName,val){var axis=scene.fullSceneLayout[axisName];return Axes.tickText(axis,axis.d2l(val),'hover').text;}var oldEventData;if(lastPicked!==null){var pdata=project(scene.glplot.cameraParams,selection.dataCoordinate);trace=lastPicked.data;var ptNumber=selection.index;var hoverinfo=Fx.castHoverinfo(trace,scene.fullLayout,ptNumber);var hoverinfoParts=hoverinfo.split('+');var isHoverinfoAll=hoverinfo==='all';var xVal=formatter('xaxis',selection.traceCoordinate[0]);var yVal=formatter('yaxis',selection.traceCoordinate[1]);var zVal=formatter('zaxis',selection.traceCoordinate[2]);if(!isHoverinfoAll){if(hoverinfoParts.indexOf('x')===-1)xVal=undefined;if(hoverinfoParts.indexOf('y')===-1)yVal=undefined;if(hoverinfoParts.indexOf('z')===-1)zVal=undefined;if(hoverinfoParts.indexOf('text')===-1)selection.textLabel=undefined;if(hoverinfoParts.indexOf('name')===-1)lastPicked.name=undefined;}var tx;if(trace.type==='cone'||trace.type==='streamtube'){var vectorTx=[];if(isHoverinfoAll||hoverinfoParts.indexOf('u')!==-1){vectorTx.push('u: '+formatter('xaxis',selection.traceCoordinate[3]));}if(isHoverinfoAll||hoverinfoParts.indexOf('v')!==-1){vectorTx.push('v: '+formatter('yaxis',selection.traceCoordinate[4]));}if(isHoverinfoAll||hoverinfoParts.indexOf('w')!==-1){vectorTx.push('w: '+formatter('zaxis',selection.traceCoordinate[5]));}if(isHoverinfoAll||hoverinfoParts.indexOf('norm')!==-1){vectorTx.push('norm: '+selection.traceCoordinate[6].toPrecision(3));}if(trace.type==='streamtube'&&(isHoverinfoAll||hoverinfoParts.indexOf('divergence')!==-1)){vectorTx.push('divergence: '+selection.traceCoordinate[7].toPrecision(3));}if(selection.textLabel){vectorTx.push(selection.textLabel);}tx=vectorTx.join('<br>');}else{tx=selection.textLabel;}if(scene.fullSceneLayout.hovermode){Fx.loneHover({x:(0.5+0.5*pdata[0]/pdata[3])*width,y:(0.5-0.5*pdata[1]/pdata[3])*height,xLabel:xVal,yLabel:yVal,zLabel:zVal,text:tx,name:lastPicked.name,color:Fx.castHoverOption(trace,ptNumber,'bgcolor')||lastPicked.color,borderColor:Fx.castHoverOption(trace,ptNumber,'bordercolor'),fontFamily:Fx.castHoverOption(trace,ptNumber,'font.family'),fontSize:Fx.castHoverOption(trace,ptNumber,'font.size'),fontColor:Fx.castHoverOption(trace,ptNumber,'font.color')},{container:svgContainer,gd:scene.graphDiv});}// TODO not sure if streamtube x/y/z should be emitted as x/y/z\nvar pointData={x:selection.traceCoordinate[0],y:selection.traceCoordinate[1],z:selection.traceCoordinate[2],data:trace._input,fullData:trace,curveNumber:trace.index,pointNumber:ptNumber};if(trace._module.eventData){pointData=trace._module.eventData(pointData,selection,trace,{},ptNumber);}Fx.appendArrayPointValue(pointData,trace,ptNumber);var eventData={points:[pointData]};if(selection.buttons&&selection.distance<5){scene.graphDiv.emit('plotly_click',eventData);}else{scene.graphDiv.emit('plotly_hover',eventData);}oldEventData=eventData;}else{Fx.loneUnhover(svgContainer);scene.graphDiv.emit('plotly_unhover',oldEventData);}scene.drawAnnotations(scene);}function initializeGLPlot(scene,canvas,gl){var gd=scene.graphDiv;var glplotOptions={canvas:canvas,gl:gl,container:scene.container,axes:scene.axesOptions,spikes:scene.spikeOptions,pickRadius:10,snapToData:true,autoScale:true,autoBounds:false};// for static plots, we reuse the WebGL context\n//  as WebKit doesn't collect them reliably\nif(scene.staticMode){if(!STATIC_CONTEXT){STATIC_CANVAS=document.createElement('canvas');STATIC_CONTEXT=getContext({canvas:STATIC_CANVAS,preserveDrawingBuffer:true,premultipliedAlpha:true,antialias:true});if(!STATIC_CONTEXT){throw new Error('error creating static canvas/context for image server');}}glplotOptions.pixelRatio=scene.pixelRatio;glplotOptions.gl=STATIC_CONTEXT;glplotOptions.canvas=STATIC_CANVAS;}try{scene.glplot=createPlot(glplotOptions);}catch(e){/*\n        * createPlot will throw when webgl is not enabled in the client.\n        * Lets return an instance of the module with all functions noop'd.\n        * The destroy method - which will remove the container from the DOM\n        * is overridden with a function that removes the container only.\n        */return showNoWebGlMsg(scene);}var relayoutCallback=function relayoutCallback(scene){if(scene.fullSceneLayout.dragmode===false)return;var update={};update[scene.id+'.camera']=getLayoutCamera(scene.camera);scene.saveCamera(gd.layout);scene.graphDiv.emit('plotly_relayout',update);};scene.glplot.canvas.addEventListener('mouseup',relayoutCallback.bind(null,scene));scene.glplot.canvas.addEventListener('wheel',relayoutCallback.bind(null,scene),passiveSupported?{passive:false}:false);if(!scene.staticMode){scene.glplot.canvas.addEventListener('webglcontextlost',function(event){if(gd&&gd.emit){gd.emit('plotly_webglcontextlost',{event:event,layer:scene.id});}},false);}if(!scene.camera){var cameraData=scene.fullSceneLayout.camera;scene.camera=createCamera(scene.container,{center:[cameraData.center.x,cameraData.center.y,cameraData.center.z],eye:[cameraData.eye.x,cameraData.eye.y,cameraData.eye.z],up:[cameraData.up.x,cameraData.up.y,cameraData.up.z],zoomMin:0.1,zoomMax:100,mode:'orbit'});}scene.glplot.camera=scene.camera;scene.glplot.oncontextloss=function(){scene.recoverContext();};scene.glplot.onrender=render.bind(null,scene);// List of scene objects\nscene.traces={};return true;}function Scene(options,fullLayout){// create sub container for plot\nvar sceneContainer=document.createElement('div');var plotContainer=options.container;// keep a ref to the graph div to fire hover+click events\nthis.graphDiv=options.graphDiv;// create SVG container for hover text\nvar svgContainer=document.createElementNS('http://www.w3.org/2000/svg','svg');svgContainer.style.position='absolute';svgContainer.style.top=svgContainer.style.left='0px';svgContainer.style.width=svgContainer.style.height='100%';svgContainer.style['z-index']=20;svgContainer.style['pointer-events']='none';sceneContainer.appendChild(svgContainer);this.svgContainer=svgContainer;// Tag the container with the sceneID\nsceneContainer.id=options.id;sceneContainer.style.position='absolute';sceneContainer.style.top=sceneContainer.style.left='0px';sceneContainer.style.width=sceneContainer.style.height='100%';plotContainer.appendChild(sceneContainer);this.fullLayout=fullLayout;this.id=options.id||'scene';this.fullSceneLayout=fullLayout[this.id];// Saved from last call to plot()\nthis.plotArgs=[[],{},{}];/*\n     * Move this to calc step? Why does it work here?\n     */this.axesOptions=createAxesOptions(fullLayout[this.id]);this.spikeOptions=createSpikeOptions(fullLayout[this.id]);this.container=sceneContainer;this.staticMode=!!options.staticPlot;this.pixelRatio=options.plotGlPixelRatio||2;// Coordinate rescaling\nthis.dataScale=[1,1,1];this.contourLevels=[[],[],[]];this.convertAnnotations=Registry.getComponentMethod('annotations3d','convert');this.drawAnnotations=Registry.getComponentMethod('annotations3d','draw');if(!initializeGLPlot(this))return;// todo check the necessity for this line\n}var proto=Scene.prototype;proto.recoverContext=function(){var scene=this;var gl=this.glplot.gl;var canvas=this.glplot.canvas;this.glplot.dispose();function tryRecover(){if(gl.isContextLost()){requestAnimationFrame(tryRecover);return;}if(!initializeGLPlot(scene,canvas,gl)){Lib.error('Catastrophic and unrecoverable WebGL error. Context lost.');return;}scene.plot.apply(scene,scene.plotArgs);}requestAnimationFrame(tryRecover);};var axisProperties=['xaxis','yaxis','zaxis'];function computeTraceBounds(scene,trace,bounds){var sceneLayout=scene.fullSceneLayout;for(var d=0;d<3;d++){var axisName=axisProperties[d];var axLetter=axisName.charAt(0);var ax=sceneLayout[axisName];var coords=trace[axLetter];var calendar=trace[axLetter+'calendar'];var len=trace['_'+axLetter+'length'];if(!Lib.isArrayOrTypedArray(coords)){bounds[0][d]=Math.min(bounds[0][d],0);bounds[1][d]=Math.max(bounds[1][d],len-1);}else{var v;for(var i=0;i<(len||coords.length);i++){if(Lib.isArrayOrTypedArray(coords[i])){for(var j=0;j<coords[i].length;++j){v=ax.d2l(coords[i][j],0,calendar);if(!isNaN(v)&&isFinite(v)){bounds[0][d]=Math.min(bounds[0][d],v);bounds[1][d]=Math.max(bounds[1][d],v);}}}else{v=ax.d2l(coords[i],0,calendar);if(!isNaN(v)&&isFinite(v)){bounds[0][d]=Math.min(bounds[0][d],v);bounds[1][d]=Math.max(bounds[1][d],v);}}}}}}proto.plot=function(sceneData,fullLayout,layout){// Save parameters\nthis.plotArgs=[sceneData,fullLayout,layout];if(this.glplot.contextLost)return;var data,trace;var i,j,axis,axisType;var fullSceneLayout=fullLayout[this.id];var sceneLayout=layout[this.id];if(fullSceneLayout.bgcolor)this.glplot.clearColor=str2RGBAarray(fullSceneLayout.bgcolor);else this.glplot.clearColor=[0,0,0,0];this.glplot.snapToData=true;// Update layout\nthis.fullLayout=fullLayout;this.fullSceneLayout=fullSceneLayout;this.glplotLayout=fullSceneLayout;this.axesOptions.merge(fullSceneLayout);this.spikeOptions.merge(fullSceneLayout);// Update camera and camera mode\nthis.setCamera(fullSceneLayout.camera);this.updateFx(fullSceneLayout.dragmode,fullSceneLayout.hovermode);// Update scene\nthis.glplot.update({});// Update axes functions BEFORE updating traces\nthis.setConvert(axis);// Convert scene data\nif(!sceneData)sceneData=[];else if(!Array.isArray(sceneData))sceneData=[sceneData];// Compute trace bounding box\nvar dataBounds=[[Infinity,Infinity,Infinity],[-Infinity,-Infinity,-Infinity]];for(i=0;i<sceneData.length;++i){data=sceneData[i];if(data.visible!==true)continue;computeTraceBounds(this,data,dataBounds);}var dataScale=[1,1,1];for(j=0;j<3;++j){if(dataBounds[1][j]===dataBounds[0][j]){dataScale[j]=1.0;}else{dataScale[j]=1.0/(dataBounds[1][j]-dataBounds[0][j]);}}// Save scale\nthis.dataScale=dataScale;// after computeTraceBounds where ax._categories are filled in\nthis.convertAnnotations(this);// Update traces\nfor(i=0;i<sceneData.length;++i){data=sceneData[i];if(data.visible!==true){continue;}trace=this.traces[data.uid];if(trace){if(trace.data.type===data.type){trace.update(data);}else{trace.dispose();trace=data._module.plot(this,data);this.traces[data.uid]=trace;}}else{trace=data._module.plot(this,data);this.traces[data.uid]=trace;}trace.name=data.name;}// Remove empty traces\nvar traceIds=Object.keys(this.traces);traceIdLoop:for(i=0;i<traceIds.length;++i){for(j=0;j<sceneData.length;++j){if(sceneData[j].uid===traceIds[i]&&sceneData[j].visible===true){continue traceIdLoop;}}trace=this.traces[traceIds[i]];trace.dispose();delete this.traces[traceIds[i]];}// order object per trace index\nthis.glplot.objects.sort(function(a,b){return a._trace.data.index-b._trace.data.index;});// Update ranges (needs to be called *after* objects are added due to updates)\nvar sceneBounds=[[0,0,0],[0,0,0]];var axisDataRange=[];var axisTypeRatios={};for(i=0;i<3;++i){axis=fullSceneLayout[axisProperties[i]];axisType=axis.type;if(axisType in axisTypeRatios){axisTypeRatios[axisType].acc*=dataScale[i];axisTypeRatios[axisType].count+=1;}else{axisTypeRatios[axisType]={acc:dataScale[i],count:1};}if(axis.autorange){sceneBounds[0][i]=Infinity;sceneBounds[1][i]=-Infinity;var objects=this.glplot.objects;var annotations=this.fullSceneLayout.annotations||[];var axLetter=axis._name.charAt(0);for(j=0;j<objects.length;j++){var obj=objects[j];var objBounds=obj.bounds;var pad=obj._trace.data._pad||0;if(obj.constructor.name==='ErrorBars'&&axis._lowerLogErrorBound){sceneBounds[0][i]=Math.min(sceneBounds[0][i],axis._lowerLogErrorBound);}else{sceneBounds[0][i]=Math.min(sceneBounds[0][i],objBounds[0][i]/dataScale[i]-pad);}sceneBounds[1][i]=Math.max(sceneBounds[1][i],objBounds[1][i]/dataScale[i]+pad);}for(j=0;j<annotations.length;j++){var ann=annotations[j];// N.B. not taking into consideration the arrowhead\nif(ann.visible){var pos=axis.r2l(ann[axLetter]);sceneBounds[0][i]=Math.min(sceneBounds[0][i],pos);sceneBounds[1][i]=Math.max(sceneBounds[1][i],pos);}}if('rangemode'in axis&&axis.rangemode==='tozero'){sceneBounds[0][i]=Math.min(sceneBounds[0][i],0);sceneBounds[1][i]=Math.max(sceneBounds[1][i],0);}if(sceneBounds[0][i]>sceneBounds[1][i]){sceneBounds[0][i]=-1;sceneBounds[1][i]=1;}else{var d=sceneBounds[1][i]-sceneBounds[0][i];sceneBounds[0][i]-=d/32.0;sceneBounds[1][i]+=d/32.0;}if(axis.autorange==='reversed'){// swap bounds:\nvar tmp=sceneBounds[0][i];sceneBounds[0][i]=sceneBounds[1][i];sceneBounds[1][i]=tmp;}}else{var range=axis.range;sceneBounds[0][i]=axis.r2l(range[0]);sceneBounds[1][i]=axis.r2l(range[1]);}if(sceneBounds[0][i]===sceneBounds[1][i]){sceneBounds[0][i]-=1;sceneBounds[1][i]+=1;}axisDataRange[i]=sceneBounds[1][i]-sceneBounds[0][i];// Update plot bounds\nthis.glplot.bounds[0][i]=sceneBounds[0][i]*dataScale[i];this.glplot.bounds[1][i]=sceneBounds[1][i]*dataScale[i];}var axesScaleRatio=[1,1,1];// Compute axis scale per category\nfor(i=0;i<3;++i){axis=fullSceneLayout[axisProperties[i]];axisType=axis.type;var axisRatio=axisTypeRatios[axisType];axesScaleRatio[i]=Math.pow(axisRatio.acc,1.0/axisRatio.count)/dataScale[i];}/*\n     * Dynamically set the aspect ratio depending on the users aspect settings\n     */var axisAutoScaleFactor=4;var aspectRatio;if(fullSceneLayout.aspectmode==='auto'){if(Math.max.apply(null,axesScaleRatio)/Math.min.apply(null,axesScaleRatio)<=axisAutoScaleFactor){/*\n             * USE DATA MODE WHEN AXIS RANGE DIMENSIONS ARE RELATIVELY EQUAL\n             */aspectRatio=axesScaleRatio;}else{/*\n             * USE EQUAL MODE WHEN AXIS RANGE DIMENSIONS ARE HIGHLY UNEQUAL\n             */aspectRatio=[1,1,1];}}else if(fullSceneLayout.aspectmode==='cube'){aspectRatio=[1,1,1];}else if(fullSceneLayout.aspectmode==='data'){aspectRatio=axesScaleRatio;}else if(fullSceneLayout.aspectmode==='manual'){var userRatio=fullSceneLayout.aspectratio;aspectRatio=[userRatio.x,userRatio.y,userRatio.z];}else{throw new Error('scene.js aspectRatio was not one of the enumerated types');}/*\n     * Write aspect Ratio back to user data and fullLayout so that it is modifies as user\n     * manipulates the aspectmode settings and the fullLayout is up-to-date.\n     */fullSceneLayout.aspectratio.x=sceneLayout.aspectratio.x=aspectRatio[0];fullSceneLayout.aspectratio.y=sceneLayout.aspectratio.y=aspectRatio[1];fullSceneLayout.aspectratio.z=sceneLayout.aspectratio.z=aspectRatio[2];/*\n     * Finally assign the computed aspecratio to the glplot module. This will have an effect\n     * on the next render cycle.\n     */this.glplot.aspect=aspectRatio;// Update frame position for multi plots\nvar domain=fullSceneLayout.domain||null;var size=fullLayout._size||null;if(domain&&size){var containerStyle=this.container.style;containerStyle.position='absolute';containerStyle.left=size.l+domain.x[0]*size.w+'px';containerStyle.top=size.t+(1-domain.y[1])*size.h+'px';containerStyle.width=size.w*(domain.x[1]-domain.x[0])+'px';containerStyle.height=size.h*(domain.y[1]-domain.y[0])+'px';}// force redraw so that promise is returned when rendering is completed\nthis.glplot.redraw();};proto.destroy=function(){if(!this.glplot)return;this.camera.mouseListener.enabled=false;this.container.removeEventListener('wheel',this.camera.wheelListener);this.camera=this.glplot.camera=null;this.glplot.dispose();this.container.parentNode.removeChild(this.container);this.glplot=null;};// getOrbitCamera :: plotly_coords -> orbit_camera_coords\n// inverse of getLayoutCamera\nfunction getOrbitCamera(camera){return[[camera.eye.x,camera.eye.y,camera.eye.z],[camera.center.x,camera.center.y,camera.center.z],[camera.up.x,camera.up.y,camera.up.z]];}// getLayoutCamera :: orbit_camera_coords -> plotly_coords\n// inverse of getOrbitCamera\nfunction getLayoutCamera(camera){return{up:{x:camera.up[0],y:camera.up[1],z:camera.up[2]},center:{x:camera.center[0],y:camera.center[1],z:camera.center[2]},eye:{x:camera.eye[0],y:camera.eye[1],z:camera.eye[2]}};}// get camera position in plotly coords from 'orbit-camera' coords\nproto.getCamera=function getCamera(){this.glplot.camera.view.recalcMatrix(this.camera.view.lastT());return getLayoutCamera(this.glplot.camera);};// set camera position with a set of plotly coords\nproto.setCamera=function setCamera(cameraData){this.glplot.camera.lookAt.apply(this,getOrbitCamera(cameraData));};// save camera to user layout (i.e. gd.layout)\nproto.saveCamera=function saveCamera(layout){var fullLayout=this.fullLayout;var cameraData=this.getCamera();var cameraNestedProp=Lib.nestedProperty(layout,this.id+'.camera');var cameraDataLastSave=cameraNestedProp.get();var hasChanged=false;function same(x,y,i,j){var vectors=['up','center','eye'];var components=['x','y','z'];return y[vectors[i]]&&x[vectors[i]][components[j]]===y[vectors[i]][components[j]];}if(cameraDataLastSave===undefined){hasChanged=true;}else{for(var i=0;i<3;i++){for(var j=0;j<3;j++){if(!same(cameraData,cameraDataLastSave,i,j)){hasChanged=true;break;}}}}if(hasChanged){var preGUI={};preGUI[this.id+'.camera']=cameraDataLastSave;Registry.call('_storeDirectGUIEdit',layout,fullLayout._preGUI,preGUI);cameraNestedProp.set(cameraData);var cameraFullNP=Lib.nestedProperty(fullLayout,this.id+'.camera');cameraFullNP.set(cameraData);}return hasChanged;};proto.updateFx=function(dragmode,hovermode){var camera=this.camera;if(camera){// rotate and orbital are synonymous\nif(dragmode==='orbit'){camera.mode='orbit';camera.keyBindingMode='rotate';}else if(dragmode==='turntable'){camera.up=[0,0,1];camera.mode='turntable';camera.keyBindingMode='rotate';// The setter for camera.mode animates the transition to z-up,\n// but only if we *don't* explicitly set z-up earlier via the\n// relayout. So push `up` back to layout & fullLayout manually now.\nvar gd=this.graphDiv;var fullLayout=gd._fullLayout;var fullCamera=this.fullSceneLayout.camera;var x=fullCamera.up.x;var y=fullCamera.up.y;var z=fullCamera.up.z;// only push `up` back to (full)layout if it's going to change\nif(z/Math.sqrt(x*x+y*y+z*z)>0.999)return;var attr=this.id+'.camera.up';var zUp={x:0,y:0,z:1};var edits={};edits[attr]=zUp;var layout=gd.layout;Registry.call('_storeDirectGUIEdit',layout,fullLayout._preGUI,edits);fullCamera.up=zUp;Lib.nestedProperty(layout,attr).set(zUp);}else{// none rotation modes [pan or zoom]\ncamera.keyBindingMode=dragmode;}}// to put dragmode and hovermode on the same grounds from relayout\nthis.fullSceneLayout.hovermode=hovermode;};proto.toImage=function(format){if(!format)format='png';if(this.staticMode)this.container.appendChild(STATIC_CANVAS);// Force redraw\nthis.glplot.redraw();// Grab context and yank out pixels\nvar gl=this.glplot.gl;var w=gl.drawingBufferWidth;var h=gl.drawingBufferHeight;gl.bindFramebuffer(gl.FRAMEBUFFER,null);var pixels=new Uint8Array(w*h*4);gl.readPixels(0,0,w,h,gl.RGBA,gl.UNSIGNED_BYTE,pixels);// Flip pixels\nfor(var j=0,k=h-1;j<k;++j,--k){for(var i=0;i<w;++i){for(var l=0;l<4;++l){var tmp=pixels[4*(w*j+i)+l];pixels[4*(w*j+i)+l]=pixels[4*(w*k+i)+l];pixels[4*(w*k+i)+l]=tmp;}}}var canvas=document.createElement('canvas');canvas.width=w;canvas.height=h;var context=canvas.getContext('2d');var imageData=context.createImageData(w,h);imageData.data.set(pixels);context.putImageData(imageData,0,0);var dataURL;switch(format){case'jpeg':dataURL=canvas.toDataURL('image/jpeg');break;case'webp':dataURL=canvas.toDataURL('image/webp');break;default:dataURL=canvas.toDataURL('image/png');}if(this.staticMode)this.container.removeChild(STATIC_CANVAS);return dataURL;};proto.setConvert=function(){for(var i=0;i<3;i++){var ax=this.fullSceneLayout[axisProperties[i]];Axes.setConvert(ax,this.fullLayout);ax.setScale=Lib.noop;}};module.exports=Scene;},{\"../../components/fx\":338,\"../../lib\":423,\"../../lib/show_no_webgl_msg\":443,\"../../lib/str2rgbarray\":445,\"../../plots/cartesian/axes\":469,\"../../registry\":521,\"./camera\":499,\"./layout/convert\":504,\"./layout/spikes\":507,\"./layout/tick_marks\":508,\"./project\":509,\"gl-plot3d\":126,\"has-passive-events\":164,\"webgl-context\":279}],511:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var fontAttrs=_dereq_('./font_attributes');var colorAttrs=_dereq_('../components/color/attributes');var colorscaleAttrs=_dereq_('../components/colorscale/layout_attributes');var padAttrs=_dereq_('./pad_attributes');var extendFlat=_dereq_('../lib/extend').extendFlat;var globalFont=fontAttrs({editType:'calc'});globalFont.family.dflt='\"Open Sans\", verdana, arial, sans-serif';globalFont.size.dflt=12;globalFont.color.dflt=colorAttrs.defaultLine;module.exports={font:globalFont,title:{text:{valType:'string',editType:'layoutstyle'},font:fontAttrs({editType:'layoutstyle'}),xref:{valType:'enumerated',dflt:'container',values:['container','paper'],editType:'layoutstyle'},yref:{valType:'enumerated',dflt:'container',values:['container','paper'],editType:'layoutstyle'},x:{valType:'number',min:0,max:1,dflt:0.5,editType:'layoutstyle'},y:{valType:'number',min:0,max:1,dflt:'auto',editType:'layoutstyle'},xanchor:{valType:'enumerated',dflt:'auto',values:['auto','left','center','right'],editType:'layoutstyle'},yanchor:{valType:'enumerated',dflt:'auto',values:['auto','top','middle','bottom'],editType:'layoutstyle'},pad:extendFlat(padAttrs({editType:'layoutstyle'}),{}),editType:'layoutstyle'},autosize:{valType:'boolean',dflt:false,// autosize, width, and height get special editType treatment in _relayout\n// so we can handle noop resizes more efficiently\neditType:'none'},width:{valType:'number',min:10,dflt:700,editType:'plot'},height:{valType:'number',min:10,dflt:450,editType:'plot'},margin:{l:{valType:'number',min:0,dflt:80,editType:'plot'},r:{valType:'number',min:0,dflt:80,editType:'plot'},t:{valType:'number',min:0,dflt:100,editType:'plot'},b:{valType:'number',min:0,dflt:80,editType:'plot'},pad:{valType:'number',min:0,dflt:0,editType:'plot'},autoexpand:{valType:'boolean',dflt:true,editType:'plot'},editType:'plot'},paper_bgcolor:{valType:'color',dflt:colorAttrs.background,editType:'plot'},plot_bgcolor:{// defined here, but set in cartesian.supplyLayoutDefaults\n// because it needs to know if there are (2D) axes or not\nvalType:'color',dflt:colorAttrs.background,editType:'layoutstyle'},separators:{valType:'string',editType:'plot'},hidesources:{valType:'boolean',dflt:false,editType:'plot'},showlegend:{// handled in legend.supplyLayoutDefaults\n// but included here because it's not in the legend object\nvalType:'boolean',editType:'legend'},colorway:{valType:'colorlist',dflt:colorAttrs.defaults,editType:'calc'},colorscale:colorscaleAttrs,datarevision:{valType:'any',editType:'calc'},uirevision:{valType:'any',editType:'none'},editrevision:{valType:'any',editType:'none'},selectionrevision:{valType:'any',editType:'none'},template:{valType:'any',editType:'calc'},modebar:{orientation:{valType:'enumerated',values:['v','h'],dflt:'h',editType:'modebar'},bgcolor:{valType:'color',editType:'modebar'},color:{valType:'color',editType:'modebar'},activecolor:{valType:'color',editType:'modebar'},uirevision:{valType:'any',editType:'none'},editType:'modebar'},_deprecated:{title:{valType:'string',editType:'layoutstyle'},titlefont:fontAttrs({editType:'layoutstyle'})}};},{\"../components/color/attributes\":298,\"../components/colorscale/layout_attributes\":312,\"../lib/extend\":416,\"./font_attributes\":496,\"./pad_attributes\":512}],512:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';/**\n * Creates a set of padding attributes.\n *\n * @param {object} opts\n *   @param {string} editType:\n *     the editType for all pieces of this padding definition\n *\n * @return {object} attributes object containing {t, r, b, l} as specified\n */module.exports=function(opts){var editType=opts.editType;return{t:{valType:'number',dflt:0,editType:editType},r:{valType:'number',dflt:0,editType:editType},b:{valType:'number',dflt:0,editType:editType},l:{valType:'number',dflt:0,editType:editType},editType:editType};};},{}],513:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var isNumeric=_dereq_('fast-isnumeric');var Registry=_dereq_('../registry');var PlotSchema=_dereq_('../plot_api/plot_schema');var Template=_dereq_('../plot_api/plot_template');var Lib=_dereq_('../lib');var Color=_dereq_('../components/color');var BADNUM=_dereq_('../constants/numerical').BADNUM;var axisIDs=_dereq_('../plots/cartesian/axis_ids');var animationAttrs=_dereq_('./animation_attributes');var frameAttrs=_dereq_('./frame_attributes');var relinkPrivateKeys=Lib.relinkPrivateKeys;var _=Lib._;var plots=module.exports={};// Expose registry methods on Plots for backward-compatibility\nLib.extendFlat(plots,Registry);plots.attributes=_dereq_('./attributes');plots.attributes.type.values=plots.allTypes;plots.fontAttrs=_dereq_('./font_attributes');plots.layoutAttributes=_dereq_('./layout_attributes');// TODO make this a plot attribute?\nplots.fontWeight='normal';var transformsRegistry=plots.transformsRegistry;var commandModule=_dereq_('./command');plots.executeAPICommand=commandModule.executeAPICommand;plots.computeAPICommandBindings=commandModule.computeAPICommandBindings;plots.manageCommandObserver=commandModule.manageCommandObserver;plots.hasSimpleAPICommandBindings=commandModule.hasSimpleAPICommandBindings;// in some cases the browser doesn't seem to know how big\n// the text is at first, so it needs to draw it,\n// then wait a little, then draw it again\nplots.redrawText=function(gd){gd=Lib.getGraphDiv(gd);// do not work if polar is present\nif(gd.data&&gd.data[0]&&gd.data[0].r)return;return new Promise(function(resolve){setTimeout(function(){Registry.getComponentMethod('annotations','draw')(gd);Registry.getComponentMethod('legend','draw')(gd);(gd.calcdata||[]).forEach(function(d){if(d[0]&&d[0].t&&d[0].t.cb)d[0].t.cb();});resolve(plots.previousPromises(gd));},300);});};// resize plot about the container size\nplots.resize=function(gd){gd=Lib.getGraphDiv(gd);return new Promise(function(resolve,reject){function isHidden(gd){var display=window.getComputedStyle(gd).display;return!display||display==='none';}if(!gd||isHidden(gd)){reject(new Error('Resize must be passed a displayed plot div element.'));}if(gd._redrawTimer)clearTimeout(gd._redrawTimer);gd._redrawTimer=setTimeout(function(){// return if there is nothing to resize or is hidden\nif(!gd.layout||gd.layout.width&&gd.layout.height||isHidden(gd)){resolve(gd);return;}delete gd.layout.width;delete gd.layout.height;// autosizing doesn't count as a change that needs saving\nvar oldchanged=gd.changed;// nor should it be included in the undo queue\ngd.autoplay=true;Registry.call('relayout',gd,{autosize:true}).then(function(){gd.changed=oldchanged;resolve(gd);});},100);});};// for use in Lib.syncOrAsync, check if there are any\n// pending promises in this plot and wait for them\nplots.previousPromises=function(gd){if((gd._promises||[]).length){return Promise.all(gd._promises).then(function(){gd._promises=[];});}};/**\n * Adds the 'Edit chart' link.\n * Note that now Plotly.plot() calls this so it can regenerate whenever it replots\n *\n * Add source links to your graph inside the 'showSources' config argument.\n */plots.addLinks=function(gd){// Do not do anything if showLink and showSources are not set to true in config\nif(!gd._context.showLink&&!gd._context.showSources)return;var fullLayout=gd._fullLayout;var linkContainer=Lib.ensureSingle(fullLayout._paper,'text','js-plot-link-container',function(s){s.style({'font-family':'\"Open Sans\", Arial, sans-serif','font-size':'12px','fill':Color.defaultLine,'pointer-events':'all'}).each(function(){var links=d3.select(this);links.append('tspan').classed('js-link-to-tool',true);links.append('tspan').classed('js-link-spacer',true);links.append('tspan').classed('js-sourcelinks',true);});});// The text node inside svg\nvar text=linkContainer.node();var attrs={y:fullLayout._paper.attr('height')-9};// If text's width is bigger than the layout\n// Check that text is a child node or document.body\n// because otherwise IE/Edge might throw an exception\n// when calling getComputedTextLength().\n// Apparently offsetParent is null for invisibles.\nif(document.body.contains(text)&&text.getComputedTextLength()>=fullLayout.width-20){// Align the text at the left\nattrs['text-anchor']='start';attrs.x=5;}else{// Align the text at the right\nattrs['text-anchor']='end';attrs.x=fullLayout._paper.attr('width')-7;}linkContainer.attr(attrs);var toolspan=linkContainer.select('.js-link-to-tool');var spacespan=linkContainer.select('.js-link-spacer');var sourcespan=linkContainer.select('.js-sourcelinks');if(gd._context.showSources)gd._context.showSources(gd);// 'view in plotly' link for embedded plots\nif(gd._context.showLink)positionPlayWithData(gd,toolspan);// separator if we have both sources and tool link\nspacespan.text(toolspan.text()&&sourcespan.text()?' - ':'');};// note that now this function is only adding the brand in\n// iframes and 3rd-party apps\nfunction positionPlayWithData(gd,container){container.text('');var link=container.append('a').attr({'xlink:xlink:href':'#','class':'link--impt link--embedview','font-weight':'bold'}).text(gd._context.linkText+' '+String.fromCharCode(187));if(gd._context.sendData){link.on('click',function(){plots.sendDataToCloud(gd);});}else{var path=window.location.pathname.split('/');var query=window.location.search;link.attr({'xlink:xlink:show':'new','xlink:xlink:href':'/'+path[2].split('.')[0]+'/'+path[1]+query});}}plots.sendDataToCloud=function(gd){gd.emit('plotly_beforeexport');var baseUrl=(window.PLOTLYENV||{}).BASE_URL||gd._context.plotlyServerURL;var hiddenformDiv=d3.select(gd).append('div').attr('id','hiddenform').style('display','none');var hiddenform=hiddenformDiv.append('form').attr({action:baseUrl+'/external',method:'post',target:'_blank'});var hiddenformInput=hiddenform.append('input').attr({type:'text',name:'data'});hiddenformInput.node().value=plots.graphJson(gd,false,'keepdata');hiddenform.node().submit();hiddenformDiv.remove();gd.emit('plotly_afterexport');return false;};var d3FormatKeys=['days','shortDays','months','shortMonths','periods','dateTime','date','time','decimal','thousands','grouping','currency'];var extraFormatKeys=['year','month','dayMonth','dayMonthYear'];/*\n * Fill in default values\n * @param {DOM element} gd\n * @param {object} opts\n * @param {boolean} opts.skipUpdateCalc: normally if the existing gd.calcdata looks\n *   compatible with the new gd._fullData we finish by linking the new _fullData traces\n *   to the old gd.calcdata, so it's correctly set if we're not going to recalc. But also,\n *   if there are calcTransforms on the trace, we first remap data arrays from the old full\n *   trace into the new one. Use skipUpdateCalc to defer this (needed by Plotly.react)\n *\n * gd.data, gd.layout:\n *   are precisely what the user specified (except as modified by cleanData/cleanLayout),\n *   these fields shouldn't be modified (except for filling in some auto values)\n *   nor used directly after the supply defaults step.\n *\n * gd._fullData, gd._fullLayout:\n *   are complete descriptions of how to draw the plot,\n *   use these fields in all required computations.\n *\n * gd._fullLayout._modules\n *   is a list of all the trace modules required to draw the plot.\n *\n * gd._fullLayout._visibleModules\n *   subset of _modules, a list of modules corresponding to visible:true traces.\n *\n * gd._fullLayout._basePlotModules\n *   is a list of all the plot modules required to draw the plot.\n *\n * gd._fullLayout._transformModules\n *   is a list of all the transform modules invoked.\n *\n */plots.supplyDefaults=function(gd,opts){var skipUpdateCalc=opts&&opts.skipUpdateCalc;var oldFullLayout=gd._fullLayout||{};if(oldFullLayout._skipDefaults){delete oldFullLayout._skipDefaults;return;}var newFullLayout=gd._fullLayout={};var newLayout=gd.layout||{};var oldFullData=gd._fullData||[];var newFullData=gd._fullData=[];var newData=gd.data||[];var oldCalcdata=gd.calcdata||[];var context=gd._context||{};var i;// Create all the storage space for frames, but only if doesn't already exist\nif(!gd._transitionData)plots.createTransitionData(gd);// So we only need to do this once (and since we have gd here)\n// get the translated placeholder titles.\n// These ones get used as default values so need to be known at supplyDefaults\n// others keep their blank defaults but render the placeholder as desired later\n// TODO: make these work the same way, only inserting the placeholder text at draw time?\n// The challenge is that this has slightly different behavior right now in editable mode:\n// using the placeholder as default makes this text permanently (but lightly) visible,\n// but explicit '' for these titles gives you a placeholder that's hidden until you mouse\n// over it - so you're not distracted by it if you really don't want a title, but if you do\n// and you're new to plotly you may not be able to find it.\n// When editable=false the two behave the same, no title is drawn.\nnewFullLayout._dfltTitle={plot:_(gd,'Click to enter Plot title'),x:_(gd,'Click to enter X axis title'),y:_(gd,'Click to enter Y axis title'),colorbar:_(gd,'Click to enter Colorscale title'),annotation:_(gd,'new text')};newFullLayout._traceWord=_(gd,'trace');var formatObj=getFormatObj(gd,d3FormatKeys);// stash the token from context so mapbox subplots can use it as default\nnewFullLayout._mapboxAccessToken=context.mapboxAccessToken;// first fill in what we can of layout without looking at data\n// because fullData needs a few things from layout\nif(oldFullLayout._initialAutoSizeIsDone){// coerce the updated layout while preserving width and height\nvar oldWidth=oldFullLayout.width;var oldHeight=oldFullLayout.height;plots.supplyLayoutGlobalDefaults(newLayout,newFullLayout,formatObj);if(!newLayout.width)newFullLayout.width=oldWidth;if(!newLayout.height)newFullLayout.height=oldHeight;plots.sanitizeMargins(newFullLayout);}else{// coerce the updated layout and autosize if needed\nplots.supplyLayoutGlobalDefaults(newLayout,newFullLayout,formatObj);var missingWidthOrHeight=!newLayout.width||!newLayout.height;var autosize=newFullLayout.autosize;var autosizable=context.autosizable;var initialAutoSize=missingWidthOrHeight&&(autosize||autosizable);if(initialAutoSize)plots.plotAutoSize(gd,newLayout,newFullLayout);else if(missingWidthOrHeight)plots.sanitizeMargins(newFullLayout);// for backwards-compatibility with Plotly v1.x.x\nif(!autosize&&missingWidthOrHeight){newLayout.width=newFullLayout.width;newLayout.height=newFullLayout.height;}}newFullLayout._d3locale=getFormatter(formatObj,newFullLayout.separators);newFullLayout._extraFormat=getFormatObj(gd,extraFormatKeys);newFullLayout._initialAutoSizeIsDone=true;// keep track of how many traces are inputted\nnewFullLayout._dataLength=newData.length;// clear the lists of trace and baseplot modules, and subplots\nnewFullLayout._modules=[];newFullLayout._visibleModules=[];newFullLayout._basePlotModules=[];var subplots=newFullLayout._subplots=emptySubplotLists();// initialize axis and subplot hash objects for splom-generated grids\nvar splomAxes=newFullLayout._splomAxes={x:{},y:{}};var splomSubplots=newFullLayout._splomSubplots={};// initialize splom grid defaults\nnewFullLayout._splomGridDflt={};// for stacked area traces to share config across traces\nnewFullLayout._scatterStackOpts={};// for the first scatter trace on each subplot (so it knows tonext->tozero)\nnewFullLayout._firstScatter={};// for traces to request a default rangeslider on their x axes\n// eg set `_requestRangeslider.x2 = true` for xaxis2\nnewFullLayout._requestRangeslider={};// pull uids from old data to use as new defaults\nnewFullLayout._traceUids=getTraceUids(oldFullData,newData);// then do the data\nnewFullLayout._globalTransforms=(gd._context||{}).globalTransforms;plots.supplyDataDefaults(newData,newFullData,newLayout,newFullLayout);// redo grid size defaults with info about splom x/y axes,\n// and fill in generated cartesian axes and subplots\nvar splomXa=Object.keys(splomAxes.x);var splomYa=Object.keys(splomAxes.y);if(splomXa.length>1&&splomYa.length>1){Registry.getComponentMethod('grid','sizeDefaults')(newLayout,newFullLayout);for(i=0;i<splomXa.length;i++){Lib.pushUnique(subplots.xaxis,splomXa[i]);}for(i=0;i<splomYa.length;i++){Lib.pushUnique(subplots.yaxis,splomYa[i]);}for(var k in splomSubplots){Lib.pushUnique(subplots.cartesian,k);}}// attach helper method to check whether a plot type is present on graph\nnewFullLayout._has=plots._hasPlotType.bind(newFullLayout);if(oldFullData.length===newFullData.length){for(i=0;i<newFullData.length;i++){relinkPrivateKeys(newFullData[i],oldFullData[i]);}}// finally, fill in the pieces of layout that may need to look at data\nplots.supplyLayoutModuleDefaults(newLayout,newFullLayout,newFullData,gd._transitionData);// Special cases that introduce interactions between traces.\n// This is after relinkPrivateKeys so we can use those in crossTraceDefaults\n// and after layout module defaults, so we can use eg barmode\nvar _modules=newFullLayout._visibleModules;var crossTraceDefaultsFuncs=[];for(i=0;i<_modules.length;i++){var funci=_modules[i].crossTraceDefaults;// some trace types share crossTraceDefaults (ie histogram2d, histogram2dcontour)\nif(funci)Lib.pushUnique(crossTraceDefaultsFuncs,funci);}for(i=0;i<crossTraceDefaultsFuncs.length;i++){crossTraceDefaultsFuncs[i](newFullData,newFullLayout);}Registry.getComponentMethod('colorscale','crossTraceDefaults')(newFullData,newFullLayout);// turn on flag to optimize large splom-only graphs\n// mostly by omitting SVG layers during Cartesian.drawFramework\nnewFullLayout._hasOnlyLargeSploms=newFullLayout._basePlotModules.length===1&&newFullLayout._basePlotModules[0].name==='splom'&&splomXa.length>15&&splomYa.length>15&&newFullLayout.shapes.length===0&&newFullLayout.images.length===0;// TODO remove in v2.0.0\n// add has-plot-type refs to fullLayout for backward compatibility\nnewFullLayout._hasCartesian=newFullLayout._has('cartesian');newFullLayout._hasGeo=newFullLayout._has('geo');newFullLayout._hasGL3D=newFullLayout._has('gl3d');newFullLayout._hasGL2D=newFullLayout._has('gl2d');newFullLayout._hasTernary=newFullLayout._has('ternary');newFullLayout._hasPie=newFullLayout._has('pie');// relink / initialize subplot axis objects\nplots.linkSubplots(newFullData,newFullLayout,oldFullData,oldFullLayout);// clean subplots and other artifacts from previous plot calls\nplots.cleanPlot(newFullData,newFullLayout,oldFullData,oldFullLayout);// relink functions and _ attributes to promote consistency between plots\nrelinkPrivateKeys(newFullLayout,oldFullLayout);// For persisting GUI-driven changes in layout\n// _preGUI and _tracePreGUI were already copied over in relinkPrivateKeys\nif(!newFullLayout._preGUI)newFullLayout._preGUI={};// track trace GUI changes by uid rather than by trace index\nif(!newFullLayout._tracePreGUI)newFullLayout._tracePreGUI={};var tracePreGUI=newFullLayout._tracePreGUI;var uids={};var uid;for(uid in tracePreGUI){uids[uid]='old';}for(i=0;i<newFullData.length;i++){uid=newFullData[i]._fullInput.uid;if(!uids[uid])tracePreGUI[uid]={};uids[uid]='new';}for(uid in uids){if(uids[uid]==='old')delete tracePreGUI[uid];}// set up containers for margin calculations\ninitMargins(newFullLayout);// collect and do some initial calculations for rangesliders\nRegistry.getComponentMethod('rangeslider','makeData')(newFullLayout);// update object references in calcdata\nif(!skipUpdateCalc&&oldCalcdata.length===newFullData.length){plots.supplyDefaultsUpdateCalc(oldCalcdata,newFullData);}};plots.supplyDefaultsUpdateCalc=function(oldCalcdata,newFullData){for(var i=0;i<newFullData.length;i++){var newTrace=newFullData[i];var cd0=oldCalcdata[i][0];if(cd0&&cd0.trace){var oldTrace=cd0.trace;if(oldTrace._hasCalcTransform){var arrayAttrs=oldTrace._arrayAttrs;var j,astr,oldArrayVal;for(j=0;j<arrayAttrs.length;j++){astr=arrayAttrs[j];oldArrayVal=Lib.nestedProperty(oldTrace,astr).get().slice();Lib.nestedProperty(newTrace,astr).set(oldArrayVal);}}cd0.trace=newTrace;}}};/**\n * Create a list of uid strings satisfying (in this order of importance):\n * 1. all unique, all strings\n * 2. matches input uids if provided\n * 3. matches previous data uids\n */function getTraceUids(oldFullData,newData){var len=newData.length;var oldFullInput=[];var i,prevFullInput;for(i=0;i<oldFullData.length;i++){var thisFullInput=oldFullData[i]._fullInput;if(thisFullInput!==prevFullInput)oldFullInput.push(thisFullInput);prevFullInput=thisFullInput;}var oldLen=oldFullInput.length;var out=new Array(len);var seenUids={};function setUid(uid,i){out[i]=uid;seenUids[uid]=1;}function tryUid(uid,i){if(uid&&typeof uid==='string'&&!seenUids[uid]){setUid(uid,i);return true;}}for(i=0;i<len;i++){if(tryUid(newData[i].uid,i))continue;if(i<oldLen&&tryUid(oldFullInput[i].uid,i))continue;setUid(Lib.randstr(seenUids),i);}return out;}/**\n * Make a container for collecting subplots we need to display.\n *\n * Finds all subplot types we need to enumerate once and caches it,\n * but makes a new output object each time.\n * Single-trace subplots (which have no `id`) such as pie, table, etc\n * do not need to be collected because we just draw all visible traces.\n */var collectableSubplotTypes;function emptySubplotLists(){var out={};var i,j;if(!collectableSubplotTypes){collectableSubplotTypes=[];var subplotsRegistry=Registry.subplotsRegistry;for(var subplotType in subplotsRegistry){var subplotModule=subplotsRegistry[subplotType];var subplotAttr=subplotModule.attr;if(subplotAttr){collectableSubplotTypes.push(subplotType);// special case, currently just for cartesian:\n// we need to enumerate axes, not just subplots\nif(Array.isArray(subplotAttr)){for(j=0;j<subplotAttr.length;j++){Lib.pushUnique(collectableSubplotTypes,subplotAttr[j]);}}}}}for(i=0;i<collectableSubplotTypes.length;i++){out[collectableSubplotTypes[i]]=[];}return out;}/**\n * getFormatObj: use _context to get the format object from locale.\n * Used to get d3.locale argument object and extraFormat argument object\n *\n * Regarding d3.locale argument :\n * decimal and thousands can be overridden later by layout.separators\n * grouping and currency are not presently used by our automatic number\n * formatting system but can be used by custom formats.\n *\n * @returns {object} d3.locale format object\n */function getFormatObj(gd,formatKeys){var locale=gd._context.locale;if(!locale)locale==='en-US';var formatDone=false;var formatObj={};function includeFormat(newFormat){var formatFinished=true;for(var i=0;i<formatKeys.length;i++){var formatKey=formatKeys[i];if(!formatObj[formatKey]){if(newFormat[formatKey]){formatObj[formatKey]=newFormat[formatKey];}else formatFinished=false;}}if(formatFinished)formatDone=true;}// same as localize, look for format parts in each format spec in the chain\nfor(var i=0;i<2;i++){var locales=gd._context.locales;for(var j=0;j<2;j++){var formatj=(locales[locale]||{}).format;if(formatj){includeFormat(formatj);if(formatDone)break;}locales=Registry.localeRegistry;}var baseLocale=locale.split('-')[0];if(formatDone||baseLocale===locale)break;locale=baseLocale;}// lastly pick out defaults from english (non-US, as DMY is so much more common)\nif(!formatDone)includeFormat(Registry.localeRegistry.en.format);return formatObj;}/**\n * getFormatter: combine the final separators with the locale formatting object\n * we pulled earlier to generate number and time formatters\n * TODO: remove separators in v2, only use locale, so we don't need this step?\n *\n * @param {object} formatObj: d3.locale format object\n * @param {string} separators: length-2 string to override decimal and thousands\n *   separators in number formatting\n *\n * @returns {object} {numberFormat, timeFormat} d3 formatter factory functions\n *   for numbers and time\n */function getFormatter(formatObj,separators){formatObj.decimal=separators.charAt(0);formatObj.thousands=separators.charAt(1);return d3.locale(formatObj);}// Create storage for all of the data related to frames and transitions:\nplots.createTransitionData=function(gd){// Set up the default keyframe if it doesn't exist:\nif(!gd._transitionData){gd._transitionData={};}if(!gd._transitionData._frames){gd._transitionData._frames=[];}if(!gd._transitionData._frameHash){gd._transitionData._frameHash={};}if(!gd._transitionData._counter){gd._transitionData._counter=0;}if(!gd._transitionData._interruptCallbacks){gd._transitionData._interruptCallbacks=[];}};// helper function to be bound to fullLayout to check\n// whether a certain plot type is present on plot\n// or trace has a category\nplots._hasPlotType=function(category){var i;// check base plot modules\nvar basePlotModules=this._basePlotModules||[];for(i=0;i<basePlotModules.length;i++){if(basePlotModules[i].name===category)return true;}// check trace modules (including non-visible:true)\nvar modules=this._modules||[];for(i=0;i<modules.length;i++){var name=modules[i].name;if(name===category)return true;// N.B. this is modules[i] along with 'categories' as a hash object\nvar _module=Registry.modules[name];if(_module&&_module.categories[category])return true;}return false;};plots.cleanPlot=function(newFullData,newFullLayout,oldFullData,oldFullLayout){var i,j;var basePlotModules=oldFullLayout._basePlotModules||[];for(i=0;i<basePlotModules.length;i++){var _module=basePlotModules[i];if(_module.clean){_module.clean(newFullData,newFullLayout,oldFullData,oldFullLayout);}}var hadGl=oldFullLayout._has&&oldFullLayout._has('gl');var hasGl=newFullLayout._has&&newFullLayout._has('gl');if(hadGl&&!hasGl){if(oldFullLayout._glcontainer!==undefined){oldFullLayout._glcontainer.selectAll('.gl-canvas').remove();oldFullLayout._glcontainer.selectAll('.no-webgl').remove();oldFullLayout._glcanvas=null;}}var hasInfoLayer=!!oldFullLayout._infolayer;oldLoop:for(i=0;i<oldFullData.length;i++){var oldTrace=oldFullData[i];var oldUid=oldTrace.uid;for(j=0;j<newFullData.length;j++){var newTrace=newFullData[j];if(oldUid===newTrace.uid)continue oldLoop;}// clean old colorbars\nif(hasInfoLayer){oldFullLayout._infolayer.select('.cb'+oldUid).remove();}}if(oldFullLayout._zoomlayer){oldFullLayout._zoomlayer.selectAll('.select-outline').remove();}};plots.linkSubplots=function(newFullData,newFullLayout,oldFullData,oldFullLayout){var i,j;var oldSubplots=oldFullLayout._plots||{};var newSubplots=newFullLayout._plots={};var newSubplotList=newFullLayout._subplots;var mockGd={_fullData:newFullData,_fullLayout:newFullLayout};var ids=newSubplotList.cartesian.concat(newSubplotList.gl2d||[]);for(i=0;i<ids.length;i++){var id=ids[i];var oldSubplot=oldSubplots[id];var xaxis=axisIDs.getFromId(mockGd,id,'x');var yaxis=axisIDs.getFromId(mockGd,id,'y');var plotinfo;// link or create subplot object\nif(oldSubplot){plotinfo=newSubplots[id]=oldSubplot;}else{plotinfo=newSubplots[id]={};plotinfo.id=id;}// add these axis ids to each others' subplot lists\nxaxis._counterAxes.push(yaxis._id);yaxis._counterAxes.push(xaxis._id);xaxis._subplotsWith.push(id);yaxis._subplotsWith.push(id);// update x and y axis layout object refs\nplotinfo.xaxis=xaxis;plotinfo.yaxis=yaxis;// By default, we clip at the subplot level,\n// but if one trace on a given subplot has *cliponaxis* set to false,\n// we need to clip at the trace module layer level;\n// find this out here, once of for all.\nplotinfo._hasClipOnAxisFalse=false;for(j=0;j<newFullData.length;j++){var trace=newFullData[j];if(trace.xaxis===plotinfo.xaxis._id&&trace.yaxis===plotinfo.yaxis._id&&trace.cliponaxis===false){plotinfo._hasClipOnAxisFalse=true;break;}}}// while we're at it, link overlaying axes to their main axes and\n// anchored axes to the axes they're anchored to\nvar axList=axisIDs.list(mockGd,null,true);var ax;for(i=0;i<axList.length;i++){ax=axList[i];var mainAx=null;if(ax.overlaying){mainAx=axisIDs.getFromId(mockGd,ax.overlaying);// you cannot overlay an axis that's already overlaying another\nif(mainAx&&mainAx.overlaying){ax.overlaying=false;mainAx=null;}}ax._mainAxis=mainAx||ax;/*\n         * For now force overlays to overlay completely... so they\n         * can drag together correctly and share backgrounds.\n         * Later perhaps we make separate axis domain and\n         * tick/line domain or something, so they can still share\n         * the (possibly larger) dragger and background but don't\n         * have to both be drawn over that whole domain\n         */if(mainAx)ax.domain=mainAx.domain.slice();ax._anchorAxis=ax.anchor==='free'?null:axisIDs.getFromId(mockGd,ax.anchor);}// finally, we can find the main subplot for each axis\n// (on which the ticks & labels are drawn)\nfor(i=0;i<axList.length;i++){ax=axList[i];ax._counterAxes.sort(axisIDs.idSort);ax._subplotsWith.sort(Lib.subplotSort);ax._mainSubplot=findMainSubplot(ax,newFullLayout);}};function findMainSubplot(ax,fullLayout){var mockGd={_fullLayout:fullLayout};var isX=ax._id.charAt(0)==='x';var anchorAx=ax._mainAxis._anchorAxis;var mainSubplotID='';var nextBestMainSubplotID='';var anchorID='';// First try the main ID with the anchor\nif(anchorAx){anchorID=anchorAx._mainAxis._id;mainSubplotID=isX?ax._id+anchorID:anchorID+ax._id;}// Then look for a subplot with the counteraxis overlaying the anchor\n// If that fails just use the first subplot including this axis\nif(!mainSubplotID||!fullLayout._plots[mainSubplotID]){mainSubplotID='';var counterIDs=ax._counterAxes;for(var j=0;j<counterIDs.length;j++){var counterPart=counterIDs[j];var id=isX?ax._id+counterPart:counterPart+ax._id;if(!nextBestMainSubplotID)nextBestMainSubplotID=id;var counterAx=axisIDs.getFromId(mockGd,counterPart);if(anchorID&&counterAx.overlaying===anchorID){mainSubplotID=id;break;}}}return mainSubplotID||nextBestMainSubplotID;}// This function clears any trace attributes with valType: color and\n// no set dflt filed in the plot schema. This is needed because groupby (which\n// is the only transform for which this currently applies) supplies parent\n// trace defaults, then expanded trace defaults. The result is that `null`\n// colors are default-supplied and inherited as a color instead of a null.\n// The result is that expanded trace default colors have no effect, with\n// the final result that groups are indistinguishable. This function clears\n// those colors so that individual groupby groups get unique colors.\nplots.clearExpandedTraceDefaultColors=function(trace){var colorAttrs,path,i;// This uses weird closure state in order to satisfy the linter rule\n// that we can't create functions in a loop.\nfunction locateColorAttrs(attr,attrName,attrs,level){path[level]=attrName;path.length=level+1;if(attr.valType==='color'&&attr.dflt===undefined){colorAttrs.push(path.join('.'));}}path=[];// Get the cached colorAttrs:\ncolorAttrs=trace._module._colorAttrs;// Or else compute and cache the colorAttrs on the module:\nif(!colorAttrs){trace._module._colorAttrs=colorAttrs=[];PlotSchema.crawl(trace._module.attributes,locateColorAttrs);}for(i=0;i<colorAttrs.length;i++){var origprop=Lib.nestedProperty(trace,'_input.'+colorAttrs[i]);if(!origprop.get()){Lib.nestedProperty(trace,colorAttrs[i]).set(null);}}};plots.supplyDataDefaults=function(dataIn,dataOut,layout,fullLayout){var modules=fullLayout._modules;var visibleModules=fullLayout._visibleModules;var basePlotModules=fullLayout._basePlotModules;var cnt=0;var colorCnt=0;var i,fullTrace,trace;fullLayout._transformModules=[];function pushModule(fullTrace){dataOut.push(fullTrace);var _module=fullTrace._module;if(!_module)return;Lib.pushUnique(modules,_module);if(fullTrace.visible===true)Lib.pushUnique(visibleModules,_module);Lib.pushUnique(basePlotModules,fullTrace._module.basePlotModule);cnt++;// TODO: do we really want color not to increment for explicitly invisible traces?\n// This logic is weird, but matches previous behavior: traces that you explicitly\n// set to visible:false do not increment the color, but traces WE determine to be\n// empty or invalid (and thus set to visible:false) DO increment color.\n// I kind of think we should just let all traces increment color, visible or not.\n// see mock: axes-autotype-empty vs. a test of restyling visible: false that\n// I can't find right now...\nif(fullTrace._input.visible!==false)colorCnt++;}var carpetIndex={};var carpetDependents=[];var dataTemplate=(layout.template||{}).data||{};var templater=Template.traceTemplater(dataTemplate);for(i=0;i<dataIn.length;i++){trace=dataIn[i];// reuse uid we may have pulled out of oldFullData\n// Note: templater supplies trace type\nfullTrace=templater.newTrace(trace);fullTrace.uid=fullLayout._traceUids[i];plots.supplyTraceDefaults(trace,fullTrace,colorCnt,fullLayout,i);fullTrace.index=i;fullTrace._input=trace;fullTrace._expandedIndex=cnt;if(fullTrace.transforms&&fullTrace.transforms.length){var sdInvisible=trace.visible!==false&&fullTrace.visible===false;var expandedTraces=applyTransforms(fullTrace,dataOut,layout,fullLayout);for(var j=0;j<expandedTraces.length;j++){var expandedTrace=expandedTraces[j];// No further templating during transforms.\nvar fullExpandedTrace={_template:fullTrace._template,type:fullTrace.type,// set uid using parent uid and expanded index\n// to promote consistency between update calls\nuid:fullTrace.uid+j};// If the first supplyDefaults created `visible: false`,\n// clear it before running supplyDefaults a second time,\n// because sometimes there are items we still want to coerce\n// inside trace modules before determining that the trace is\n// again `visible: false`, for example partial visibilities\n// in `splom` traces.\nif(sdInvisible&&expandedTrace.visible===false){delete expandedTrace.visible;}plots.supplyTraceDefaults(expandedTrace,fullExpandedTrace,cnt,fullLayout,i);// relink private (i.e. underscore) keys expanded trace to full expanded trace so\n// that transform supply-default methods can set _ keys for future use.\nrelinkPrivateKeys(fullExpandedTrace,expandedTrace);// add info about parent data trace\nfullExpandedTrace.index=i;fullExpandedTrace._input=trace;fullExpandedTrace._fullInput=fullTrace;// add info about the expanded data\nfullExpandedTrace._expandedIndex=cnt;fullExpandedTrace._expandedInput=expandedTrace;pushModule(fullExpandedTrace);}}else{// add identify refs for consistency with transformed traces\nfullTrace._fullInput=fullTrace;fullTrace._expandedInput=fullTrace;pushModule(fullTrace);}if(Registry.traceIs(fullTrace,'carpetAxis')){carpetIndex[fullTrace.carpet]=fullTrace;}if(Registry.traceIs(fullTrace,'carpetDependent')){carpetDependents.push(i);}}for(i=0;i<carpetDependents.length;i++){fullTrace=dataOut[carpetDependents[i]];if(!fullTrace.visible)continue;var carpetAxis=carpetIndex[fullTrace.carpet];fullTrace._carpet=carpetAxis;if(!carpetAxis||!carpetAxis.visible){fullTrace.visible=false;continue;}fullTrace.xaxis=carpetAxis.xaxis;fullTrace.yaxis=carpetAxis.yaxis;}};plots.supplyAnimationDefaults=function(opts){opts=opts||{};var i;var optsOut={};function coerce(attr,dflt){return Lib.coerce(opts||{},optsOut,animationAttrs,attr,dflt);}coerce('mode');coerce('direction');coerce('fromcurrent');if(Array.isArray(opts.frame)){optsOut.frame=[];for(i=0;i<opts.frame.length;i++){optsOut.frame[i]=plots.supplyAnimationFrameDefaults(opts.frame[i]||{});}}else{optsOut.frame=plots.supplyAnimationFrameDefaults(opts.frame||{});}if(Array.isArray(opts.transition)){optsOut.transition=[];for(i=0;i<opts.transition.length;i++){optsOut.transition[i]=plots.supplyAnimationTransitionDefaults(opts.transition[i]||{});}}else{optsOut.transition=plots.supplyAnimationTransitionDefaults(opts.transition||{});}return optsOut;};plots.supplyAnimationFrameDefaults=function(opts){var optsOut={};function coerce(attr,dflt){return Lib.coerce(opts||{},optsOut,animationAttrs.frame,attr,dflt);}coerce('duration');coerce('redraw');return optsOut;};plots.supplyAnimationTransitionDefaults=function(opts){var optsOut={};function coerce(attr,dflt){return Lib.coerce(opts||{},optsOut,animationAttrs.transition,attr,dflt);}coerce('duration');coerce('easing');return optsOut;};plots.supplyFrameDefaults=function(frameIn){var frameOut={};function coerce(attr,dflt){return Lib.coerce(frameIn,frameOut,frameAttrs,attr,dflt);}coerce('group');coerce('name');coerce('traces');coerce('baseframe');coerce('data');coerce('layout');return frameOut;};plots.supplyTraceDefaults=function(traceIn,traceOut,colorIndex,layout,traceInIndex){var colorway=layout.colorway||Color.defaults;var defaultColor=colorway[colorIndex%colorway.length];var i;function coerce(attr,dflt){return Lib.coerce(traceIn,traceOut,plots.attributes,attr,dflt);}var visible=coerce('visible');coerce('type');coerce('name',layout._traceWord+' '+traceInIndex);coerce('uirevision',layout.uirevision);// we want even invisible traces to make their would-be subplots visible\n// so coerce the subplot id(s) now no matter what\nvar _module=plots.getModule(traceOut);traceOut._module=_module;if(_module){var basePlotModule=_module.basePlotModule;var subplotAttr=basePlotModule.attr;var subplotAttrs=basePlotModule.attributes;if(subplotAttr&&subplotAttrs){var subplots=layout._subplots;var subplotId='';// TODO - currently if we draw an empty gl2d subplot, it draws\n// nothing then gets stuck and you can't get it back without newPlot\n// sort this out in the regl refactor? but for now just drop empty gl2d subplots\nif(basePlotModule.name!=='gl2d'||visible){if(Array.isArray(subplotAttr)){for(i=0;i<subplotAttr.length;i++){var attri=subplotAttr[i];var vali=Lib.coerce(traceIn,traceOut,subplotAttrs,attri);if(subplots[attri])Lib.pushUnique(subplots[attri],vali);subplotId+=vali;}}else{subplotId=Lib.coerce(traceIn,traceOut,subplotAttrs,subplotAttr);}if(subplots[basePlotModule.name]){Lib.pushUnique(subplots[basePlotModule.name],subplotId);}}}}function coerceUnlessPruned(attr,dflt,cb){if(_module&&attr in _module.attributes&&_module.attributes[attr]===undefined){// Pruned\n}else{if(cb&&typeof cb==='function'){cb();}else{coerce(attr,dflt);}}}if(visible){coerce('customdata');coerce('ids');if(Registry.traceIs(traceOut,'showLegend')){traceOut._dfltShowLegend=true;coerce('showlegend');coerce('legendgroup');}else{traceOut._dfltShowLegend=false;}coerceUnlessPruned('hoverlabel','',function(){Registry.getComponentMethod('fx','supplyDefaults')(traceIn,traceOut,defaultColor,layout);});// TODO add per-base-plot-module trace defaults step\nif(_module){_module.supplyDefaults(traceIn,traceOut,defaultColor,layout);if(!traceOut.hovertemplate)Lib.coerceHoverinfo(traceIn,traceOut,layout);}if(!Registry.traceIs(traceOut,'noOpacity'))coerce('opacity');if(Registry.traceIs(traceOut,'notLegendIsolatable')){// This clears out the legendonly state for traces like carpet that\n// cannot be isolated in the legend\ntraceOut.visible=!!traceOut.visible;}if(_module&&_module.selectPoints){coerce('selectedpoints');}plots.supplyTransformDefaults(traceIn,traceOut,layout);}return traceOut;};/**\n * hasMakesDataTransform: does this trace have a transform that makes its own\n * data, either by grabbing it from somewhere else or by creating it from input\n * parameters? If so, we should still keep going with supplyDefaults\n * even if the trace is invisible, which may just be because it has no data yet.\n */function hasMakesDataTransform(trace){var transforms=trace.transforms;if(Array.isArray(transforms)&&transforms.length){for(var i=0;i<transforms.length;i++){var ti=transforms[i];var _module=ti._module||transformsRegistry[ti.type];if(_module&&_module.makesData)return true;}}return false;}plots.hasMakesDataTransform=hasMakesDataTransform;plots.supplyTransformDefaults=function(traceIn,traceOut,layout){// For now we only allow transforms on 1D traces, ie those that specify a _length.\n// If we were to implement 2D transforms, we'd need to have each transform\n// describe its own applicability and disable itself when it doesn't apply.\n// Also allow transforms that make their own data, but not in globalTransforms\nif(!(traceOut._length||hasMakesDataTransform(traceIn)))return;var globalTransforms=layout._globalTransforms||[];var transformModules=layout._transformModules||[];if(!Array.isArray(traceIn.transforms)&&globalTransforms.length===0)return;var containerIn=traceIn.transforms||[];var transformList=globalTransforms.concat(containerIn);var containerOut=traceOut.transforms=[];for(var i=0;i<transformList.length;i++){var transformIn=transformList[i];var type=transformIn.type;var _module=transformsRegistry[type];var transformOut;/*\n         * Supply defaults may run twice. First pass runs all supply defaults steps\n         * and adds the _module to any output transforms.\n         * If transforms exist another pass is run so that any generated traces also\n         * go through supply defaults. This has the effect of rerunning\n         * supplyTransformDefaults. If the transform does not have a `transform`\n         * function it could not have generated any new traces and the second stage\n         * is unnecessary. We detect this case with the following variables.\n         */var isFirstStage=!(transformIn._module&&transformIn._module===_module);var doLaterStages=_module&&typeof _module.transform==='function';if(!_module)Lib.warn('Unrecognized transform type '+type+'.');if(_module&&_module.supplyDefaults&&(isFirstStage||doLaterStages)){transformOut=_module.supplyDefaults(transformIn,traceOut,layout,traceIn);transformOut.type=type;transformOut._module=_module;Lib.pushUnique(transformModules,_module);}else{transformOut=Lib.extendFlat({},transformIn);}containerOut.push(transformOut);}};function applyTransforms(fullTrace,fullData,layout,fullLayout){var container=fullTrace.transforms;var dataOut=[fullTrace];for(var i=0;i<container.length;i++){var transform=container[i];var _module=transformsRegistry[transform.type];if(_module&&_module.transform){dataOut=_module.transform(dataOut,{transform:transform,fullTrace:fullTrace,fullData:fullData,layout:layout,fullLayout:fullLayout,transformIndex:i});}}return dataOut;}plots.supplyLayoutGlobalDefaults=function(layoutIn,layoutOut,formatObj){function coerce(attr,dflt){return Lib.coerce(layoutIn,layoutOut,plots.layoutAttributes,attr,dflt);}var template=layoutIn.template;if(Lib.isPlainObject(template)){layoutOut.template=template;layoutOut._template=template.layout;layoutOut._dataTemplate=template.data;}var globalFont=Lib.coerceFont(coerce,'font');coerce('title.text',layoutOut._dfltTitle.plot);Lib.coerceFont(coerce,'title.font',{family:globalFont.family,size:Math.round(globalFont.size*1.4),color:globalFont.color});coerce('title.xref');coerce('title.yref');coerce('title.x');coerce('title.y');coerce('title.xanchor');coerce('title.yanchor');coerce('title.pad.t');coerce('title.pad.r');coerce('title.pad.b');coerce('title.pad.l');// Make sure that autosize is defaulted to *true*\n// on layouts with no set width and height for backward compatibly,\n// in particular https://plot.ly/javascript/responsive-fluid-layout/\n//\n// Before https://github.com/plotly/plotly.js/pull/635 ,\n// layouts with no set width and height were set temporary set to 'initial'\n// to pass through the autosize routine\n//\n// This behavior is subject to change in v2.\ncoerce('autosize',!(layoutIn.width&&layoutIn.height));coerce('width');coerce('height');coerce('margin.l');coerce('margin.r');coerce('margin.t');coerce('margin.b');coerce('margin.pad');coerce('margin.autoexpand');if(layoutIn.width&&layoutIn.height)plots.sanitizeMargins(layoutOut);Registry.getComponentMethod('grid','sizeDefaults')(layoutIn,layoutOut);coerce('paper_bgcolor');coerce('separators',formatObj.decimal+formatObj.thousands);coerce('hidesources');coerce('colorway');coerce('datarevision');var uirevision=coerce('uirevision');coerce('editrevision',uirevision);coerce('selectionrevision',uirevision);coerce('modebar.orientation');coerce('modebar.bgcolor',Color.addOpacity(layoutOut.paper_bgcolor,0.5));var modebarDefaultColor=Color.contrast(Color.rgb(layoutOut.modebar.bgcolor));coerce('modebar.color',Color.addOpacity(modebarDefaultColor,0.3));coerce('modebar.activecolor',Color.addOpacity(modebarDefaultColor,0.7));coerce('modebar.uirevision',uirevision);Registry.getComponentMethod('calendars','handleDefaults')(layoutIn,layoutOut,'calendar');Registry.getComponentMethod('fx','supplyLayoutGlobalDefaults')(layoutIn,layoutOut,coerce);};plots.plotAutoSize=function plotAutoSize(gd,layout,fullLayout){var context=gd._context||{};var frameMargins=context.frameMargins;var newWidth;var newHeight;var isPlotDiv=Lib.isPlotDiv(gd);if(isPlotDiv)gd.emit('plotly_autosize');// embedded in an iframe - just take the full iframe size\n// if we get to this point, with no aspect ratio restrictions\nif(context.fillFrame){newWidth=window.innerWidth;newHeight=window.innerHeight;// somehow we get a few extra px height sometimes...\n// just hide it\ndocument.body.style.overflow='hidden';}else{// plotly.js - let the developers do what they want, either\n// provide height and width for the container div,\n// specify size in layout, or take the defaults,\n// but don't enforce any ratio restrictions\nvar computedStyle=isPlotDiv?window.getComputedStyle(gd):{};newWidth=parseFloat(computedStyle.width)||parseFloat(computedStyle.maxWidth)||fullLayout.width;newHeight=parseFloat(computedStyle.height)||parseFloat(computedStyle.maxHeight)||fullLayout.height;if(isNumeric(frameMargins)&&frameMargins>0){var factor=1-2*frameMargins;newWidth=Math.round(factor*newWidth);newHeight=Math.round(factor*newHeight);}}var minWidth=plots.layoutAttributes.width.min;var minHeight=plots.layoutAttributes.height.min;if(newWidth<minWidth)newWidth=minWidth;if(newHeight<minHeight)newHeight=minHeight;var widthHasChanged=!layout.width&&Math.abs(fullLayout.width-newWidth)>1;var heightHasChanged=!layout.height&&Math.abs(fullLayout.height-newHeight)>1;if(heightHasChanged||widthHasChanged){if(widthHasChanged)fullLayout.width=newWidth;if(heightHasChanged)fullLayout.height=newHeight;}// cache initial autosize value, used in relayout when\n// width or height values are set to null\nif(!gd._initialAutoSize){gd._initialAutoSize={width:newWidth,height:newHeight};}plots.sanitizeMargins(fullLayout);};plots.supplyLayoutModuleDefaults=function(layoutIn,layoutOut,fullData,transitionData){var componentsRegistry=Registry.componentsRegistry;var basePlotModules=layoutOut._basePlotModules;var component,i,_module;var Cartesian=Registry.subplotsRegistry.cartesian;// check if any components need to add more base plot modules\n// that weren't captured by traces\nfor(component in componentsRegistry){_module=componentsRegistry[component];if(_module.includeBasePlot){_module.includeBasePlot(layoutIn,layoutOut);}}// make sure we *at least* have some cartesian axes\nif(!basePlotModules.length){basePlotModules.push(Cartesian);}// ensure all cartesian axes have at least one subplot\nif(layoutOut._has('cartesian')){Registry.getComponentMethod('grid','contentDefaults')(layoutIn,layoutOut);Cartesian.finalizeSubplots(layoutIn,layoutOut);}// sort subplot lists\nfor(var subplotType in layoutOut._subplots){layoutOut._subplots[subplotType].sort(Lib.subplotSort);}// base plot module layout defaults\nfor(i=0;i<basePlotModules.length;i++){_module=basePlotModules[i];// e.g. pie does not have a layout-defaults step\nif(_module.supplyLayoutDefaults){_module.supplyLayoutDefaults(layoutIn,layoutOut,fullData);}}// trace module layout defaults\n// use _modules rather than _visibleModules so that even\n// legendonly traces can include settings - eg barmode, which affects\n// legend.traceorder default value.\nvar modules=layoutOut._modules;for(i=0;i<modules.length;i++){_module=modules[i];if(_module.supplyLayoutDefaults){_module.supplyLayoutDefaults(layoutIn,layoutOut,fullData);}}// transform module layout defaults\nvar transformModules=layoutOut._transformModules;for(i=0;i<transformModules.length;i++){_module=transformModules[i];if(_module.supplyLayoutDefaults){_module.supplyLayoutDefaults(layoutIn,layoutOut,fullData,transitionData);}}for(component in componentsRegistry){_module=componentsRegistry[component];if(_module.supplyLayoutDefaults){_module.supplyLayoutDefaults(layoutIn,layoutOut,fullData);}}};// Remove all plotly attributes from a div so it can be replotted fresh\n// TODO: these really need to be encapsulated into a much smaller set...\nplots.purge=function(gd){// note: we DO NOT remove _context because it doesn't change when we insert\n// a new plot, and may have been set outside of our scope.\nvar fullLayout=gd._fullLayout||{};if(fullLayout._glcontainer!==undefined){fullLayout._glcontainer.selectAll('.gl-canvas').remove();fullLayout._glcontainer.remove();fullLayout._glcanvas=null;}if(fullLayout._geocontainer!==undefined)fullLayout._geocontainer.remove();// remove modebar\nif(fullLayout._modeBar)fullLayout._modeBar.destroy();if(gd._transitionData){// Ensure any dangling callbacks are simply dropped if the plot is purged.\n// This is more or less only actually important for testing.\nif(gd._transitionData._interruptCallbacks){gd._transitionData._interruptCallbacks.length=0;}if(gd._transitionData._animationRaf){window.cancelAnimationFrame(gd._transitionData._animationRaf);}}// remove any planned throttles\nLib.clearThrottle();// remove responsive handler\nLib.clearResponsive(gd);// data and layout\ndelete gd.data;delete gd.layout;delete gd._fullData;delete gd._fullLayout;delete gd.calcdata;delete gd.framework;delete gd.empty;delete gd.fid;delete gd.undoqueue;// action queue\ndelete gd.undonum;delete gd.autoplay;// are we doing an action that doesn't go in undo queue?\ndelete gd.changed;// these get recreated on Plotly.plot anyway, but just to be safe\n// (and to have a record of them...)\ndelete gd._promises;delete gd._redrawTimer;delete gd._hmlumcount;delete gd._hmpixcount;delete gd._transitionData;delete gd._transitioning;delete gd._initialAutoSize;delete gd._transitioningWithDuration;// created during certain events, that *should* clean them up\n// themselves, but may not if there was an error\ndelete gd._dragging;delete gd._dragged;delete gd._hoverdata;delete gd._snapshotInProgress;delete gd._editing;delete gd._replotPending;delete gd._mouseDownTime;delete gd._legendMouseDownTime;// remove all event listeners\nif(gd.removeAllListeners)gd.removeAllListeners();};plots.style=function(gd){var _modules=gd._fullLayout._visibleModules;var styleModules=[];var i;// some trace modules reuse the same style method,\n// make sure to not unnecessary call them multiple times.\nfor(i=0;i<_modules.length;i++){var _module=_modules[i];if(_module.style){Lib.pushUnique(styleModules,_module.style);}}for(i=0;i<styleModules.length;i++){styleModules[i](gd);}};plots.sanitizeMargins=function(fullLayout){// polar doesn't do margins...\nif(!fullLayout||!fullLayout.margin)return;var width=fullLayout.width;var height=fullLayout.height;var margin=fullLayout.margin;var plotWidth=width-(margin.l+margin.r);var plotHeight=height-(margin.t+margin.b);var correction;// if margin.l + margin.r = 0 then plotWidth > 0\n// as width >= 10 by supplyDefaults\n// similarly for margin.t + margin.b\nif(plotWidth<0){correction=(width-1)/(margin.l+margin.r);margin.l=Math.floor(correction*margin.l);margin.r=Math.floor(correction*margin.r);}if(plotHeight<0){correction=(height-1)/(margin.t+margin.b);margin.t=Math.floor(correction*margin.t);margin.b=Math.floor(correction*margin.b);}};plots.clearAutoMarginIds=function(gd){gd._fullLayout._pushmarginIds={};};plots.allowAutoMargin=function(gd,id){gd._fullLayout._pushmarginIds[id]=1;};function initMargins(fullLayout){var margin=fullLayout.margin;if(!fullLayout._size){var gs=fullLayout._size={l:Math.round(margin.l),r:Math.round(margin.r),t:Math.round(margin.t),b:Math.round(margin.b),p:Math.round(margin.pad)};gs.w=Math.round(fullLayout.width)-gs.l-gs.r;gs.h=Math.round(fullLayout.height)-gs.t-gs.b;}if(!fullLayout._pushmargin)fullLayout._pushmargin={};if(!fullLayout._pushmarginIds)fullLayout._pushmarginIds={};}/**\n * autoMargin: called by components that may need to expand the margins to\n * be rendered on-plot.\n *\n * @param {DOM element} gd\n * @param {string} id - an identifier unique (within this plot) to this object,\n *     so we can remove a previous margin expansion from the same object.\n * @param {object} o - the margin requirements of this object, or omit to delete\n *     this entry (like if it's hidden). Keys are:\n *     x, y: plot fraction of the anchor point.\n *     xl, xr, yt, yb: if the object has an extent defined in plot fraction,\n *         you can specify both edges as plot fractions in each dimension\n *     l, r, t, b: the pixels to pad past the plot fraction x[l|r] and y[t|b]\n *     pad: extra pixels to add in all directions, default 12 (why?)\n */plots.autoMargin=function(gd,id,o){var fullLayout=gd._fullLayout;var pushMargin=fullLayout._pushmargin;var pushMarginIds=fullLayout._pushmarginIds;if(fullLayout.margin.autoexpand!==false){if(!o){delete pushMargin[id];delete pushMarginIds[id];}else{var pad=o.pad;if(pad===undefined){var margin=fullLayout.margin;// if no explicit pad is given, use 12px unless there's a\n// specified margin that's smaller than that\npad=Math.min(12,margin.l,margin.r,margin.t,margin.b);}// if the item is too big, just give it enough automargin to\n// make sure you can still grab it and bring it back\nif(o.l+o.r>fullLayout.width*0.5)o.l=o.r=0;if(o.b+o.t>fullLayout.height*0.5)o.b=o.t=0;var xl=o.xl!==undefined?o.xl:o.x;var xr=o.xr!==undefined?o.xr:o.x;var yt=o.yt!==undefined?o.yt:o.y;var yb=o.yb!==undefined?o.yb:o.y;pushMargin[id]={l:{val:xl,size:o.l+pad},r:{val:xr,size:o.r+pad},b:{val:yb,size:o.b+pad},t:{val:yt,size:o.t+pad}};pushMarginIds[id]=1;}if(!fullLayout._replotting)plots.doAutoMargin(gd);}};plots.doAutoMargin=function(gd){var fullLayout=gd._fullLayout;if(!fullLayout._size)fullLayout._size={};initMargins(fullLayout);var gs=fullLayout._size;var oldmargins=JSON.stringify(gs);var margin=fullLayout.margin;// adjust margins for outside components\n// fullLayout.margin is the requested margin,\n// fullLayout._size has margins and plotsize after adjustment\nvar ml=margin.l;var mr=margin.r;var mt=margin.t;var mb=margin.b;var pushMargin=fullLayout._pushmargin;var pushMarginIds=fullLayout._pushmarginIds;if(fullLayout.margin.autoexpand!==false){for(var k in pushMargin){if(!pushMarginIds[k])delete pushMargin[k];}// fill in the requested margins\npushMargin.base={l:{val:0,size:ml},r:{val:1,size:mr},t:{val:1,size:mt},b:{val:0,size:mb}};// now cycle through all the combinations of l and r\n// (and t and b) to find the required margins\nfor(var k1 in pushMargin){var pushleft=pushMargin[k1].l||{};var pushbottom=pushMargin[k1].b||{};var fl=pushleft.val;var pl=pushleft.size;var fb=pushbottom.val;var pb=pushbottom.size;for(var k2 in pushMargin){if(isNumeric(pl)&&pushMargin[k2].r){var fr=pushMargin[k2].r.val;var pr=pushMargin[k2].r.size;if(fr>fl){var newl=(pl*fr+(pr-fullLayout.width)*fl)/(fr-fl);var newr=(pr*(1-fl)+(pl-fullLayout.width)*(1-fr))/(fr-fl);if(newl>=0&&newr>=0&&newl+newr>ml+mr){ml=newl;mr=newr;}}}if(isNumeric(pb)&&pushMargin[k2].t){var ft=pushMargin[k2].t.val;var pt=pushMargin[k2].t.size;if(ft>fb){var newb=(pb*ft+(pt-fullLayout.height)*fb)/(ft-fb);var newt=(pt*(1-fb)+(pb-fullLayout.height)*(1-ft))/(ft-fb);if(newb>=0&&newt>=0&&newb+newt>mb+mt){mb=newb;mt=newt;}}}}}}gs.l=Math.round(ml);gs.r=Math.round(mr);gs.t=Math.round(mt);gs.b=Math.round(mb);gs.p=Math.round(margin.pad);gs.w=Math.round(fullLayout.width)-gs.l-gs.r;gs.h=Math.round(fullLayout.height)-gs.t-gs.b;// if things changed and we're not already redrawing, trigger a redraw\nif(!fullLayout._replotting&&oldmargins!=='{}'&&oldmargins!==JSON.stringify(fullLayout._size)){if('_redrawFromAutoMarginCount'in fullLayout){fullLayout._redrawFromAutoMarginCount++;}else{fullLayout._redrawFromAutoMarginCount=1;}return Registry.call('plot',gd);}};/**\n * JSONify the graph data and layout\n *\n * This function needs to recurse because some src can be inside\n * sub-objects.\n *\n * It also strips out functions and private (starts with _) elements.\n * Therefore, we can add temporary things to data and layout that don't\n * get saved.\n *\n * @param gd The graphDiv\n * @param {Boolean} dataonly If true, don't return layout.\n * @param {'keepref'|'keepdata'|'keepall'} [mode='keepref'] Filter what's kept\n *      keepref: remove data for which there's a src present\n *          eg if there's xsrc present (and xsrc is well-formed,\n *          ie has : and some chars before it), strip out x\n *      keepdata: remove all src tags, don't remove the data itself\n *      keepall: keep data and src\n * @param {String} output If you specify 'object', the result will not be stringified\n * @param {Boolean} useDefaults If truthy, use _fullLayout and _fullData\n * @returns {Object|String}\n */plots.graphJson=function(gd,dataonly,mode,output,useDefaults){// if the defaults aren't supplied yet, we need to do that...\nif(useDefaults&&dataonly&&!gd._fullData||useDefaults&&!dataonly&&!gd._fullLayout){plots.supplyDefaults(gd);}var data=useDefaults?gd._fullData:gd.data;var layout=useDefaults?gd._fullLayout:gd.layout;var frames=(gd._transitionData||{})._frames;function stripObj(d){if(typeof d==='function'){return null;}if(Lib.isPlainObject(d)){var o={};var v,src;for(v in d){// remove private elements and functions\n// _ is for private, [ is a mistake ie [object Object]\nif(typeof d[v]==='function'||['_','['].indexOf(v.charAt(0))!==-1){continue;}// look for src/data matches and remove the appropriate one\nif(mode==='keepdata'){// keepdata: remove all ...src tags\nif(v.substr(v.length-3)==='src'){continue;}}else if(mode==='keepstream'){// keep sourced data if it's being streamed.\n// similar to keepref, but if the 'stream' object exists\n// in a trace, we will keep the data array.\nsrc=d[v+'src'];if(typeof src==='string'&&src.indexOf(':')>0){if(!Lib.isPlainObject(d.stream)){continue;}}}else if(mode!=='keepall'){// keepref: remove sourced data but only\n// if the source tag is well-formed\nsrc=d[v+'src'];if(typeof src==='string'&&src.indexOf(':')>0){continue;}}// OK, we're including this... recurse into it\no[v]=stripObj(d[v]);}return o;}if(Array.isArray(d)){return d.map(stripObj);}if(Lib.isTypedArray(d)){return Lib.simpleMap(d,Lib.identity);}// convert native dates to date strings...\n// mostly for external users exporting to plotly\nif(Lib.isJSDate(d))return Lib.ms2DateTimeLocal(+d);return d;}var obj={data:(data||[]).map(function(v){var d=stripObj(v);// fit has some little arrays in it that don't contain data,\n// just fit params and meta\nif(dataonly){delete d.fit;}return d;})};if(!dataonly){obj.layout=stripObj(layout);}if(gd.framework&&gd.framework.isPolar)obj=gd.framework.getConfig();if(frames)obj.frames=stripObj(frames);return output==='object'?obj:JSON.stringify(obj);};/**\n * Modify a keyframe using a list of operations:\n *\n * @param {array of objects} operations\n *      Sequence of operations to be performed on the keyframes\n */plots.modifyFrames=function(gd,operations){var i,op,frame;var _frames=gd._transitionData._frames;var _frameHash=gd._transitionData._frameHash;for(i=0;i<operations.length;i++){op=operations[i];switch(op.type){// No reason this couldn't exist, but is currently unused/untested:\n/* case 'rename':\n                frame = _frames[op.index];\n                delete _frameHash[frame.name];\n                _frameHash[op.name] = frame;\n                frame.name = op.name;\n                break;*/case'replace':frame=op.value;var oldName=(_frames[op.index]||{}).name;var newName=frame.name;_frames[op.index]=_frameHash[newName]=frame;if(newName!==oldName){// If name has changed in addition to replacement, then update\n// the lookup table:\ndelete _frameHash[oldName];_frameHash[newName]=frame;}break;case'insert':frame=op.value;_frameHash[frame.name]=frame;_frames.splice(op.index,0,frame);break;case'delete':frame=_frames[op.index];delete _frameHash[frame.name];_frames.splice(op.index,1);break;}}return Promise.resolve();};/*\n * Compute a keyframe. Merge a keyframe into its base frame(s) and\n * expand properties.\n *\n * @param {object} frameLookup\n *      An object containing frames keyed by name (i.e. gd._transitionData._frameHash)\n * @param {string} frame\n *      The name of the keyframe to be computed\n *\n * Returns: a new object with the merged content\n */plots.computeFrame=function(gd,frameName){var frameLookup=gd._transitionData._frameHash;var i,traceIndices,traceIndex,destIndex;// Null or undefined will fail on .toString(). We'll allow numbers since we\n// make it clear frames must be given string names, but we'll allow numbers\n// here since they're otherwise fine for looking up frames as long as they're\n// properly cast to strings. We really just want to ensure here that this\n// 1) doesn't fail, and\n// 2) doens't give an incorrect answer (which String(frameName) would)\nif(!frameName){throw new Error('computeFrame must be given a string frame name');}var framePtr=frameLookup[frameName.toString()];// Return false if the name is invalid:\nif(!framePtr){return false;}var frameStack=[framePtr];var frameNameStack=[framePtr.name];// Follow frame pointers:\nwhile(framePtr.baseframe&&(framePtr=frameLookup[framePtr.baseframe.toString()])){// Avoid infinite loops:\nif(frameNameStack.indexOf(framePtr.name)!==-1)break;frameStack.push(framePtr);frameNameStack.push(framePtr.name);}// A new object for the merged result:\nvar result={};// Merge, starting with the last and ending with the desired frame:\nwhile(framePtr=frameStack.pop()){if(framePtr.layout){result.layout=plots.extendLayout(result.layout,framePtr.layout);}if(framePtr.data){if(!result.data){result.data=[];}traceIndices=framePtr.traces;if(!traceIndices){// If not defined, assume serial order starting at zero\ntraceIndices=[];for(i=0;i<framePtr.data.length;i++){traceIndices[i]=i;}}if(!result.traces){result.traces=[];}for(i=0;i<framePtr.data.length;i++){// Loop through this frames data, find out where it should go,\n// and merge it!\ntraceIndex=traceIndices[i];if(traceIndex===undefined||traceIndex===null){continue;}destIndex=result.traces.indexOf(traceIndex);if(destIndex===-1){destIndex=result.data.length;result.traces[destIndex]=traceIndex;}result.data[destIndex]=plots.extendTrace(result.data[destIndex],framePtr.data[i]);}}}return result;};/*\n * Recompute the lookup table that maps frame name -> frame object. addFrames/\n * deleteFrames already manages this data one at a time, so the only time this\n * is necessary is if you poke around manually in `gd._transitionData._frames`\n * and create and haven't updated the lookup table.\n */plots.recomputeFrameHash=function(gd){var hash=gd._transitionData._frameHash={};var frames=gd._transitionData._frames;for(var i=0;i<frames.length;i++){var frame=frames[i];if(frame&&frame.name){hash[frame.name]=frame;}}};/**\n * Extend an object, treating container arrays very differently by extracting\n * their contents and merging them separately.\n *\n * This exists so that we can extendDeepNoArrays and avoid stepping into data\n * arrays without knowledge of the plot schema, but so that we may also manually\n * recurse into known container arrays, such as transforms.\n *\n * See extendTrace and extendLayout below for usage.\n */plots.extendObjectWithContainers=function(dest,src,containerPaths){var containerProp,containerVal,i,j,srcProp,destProp,srcContainer,destContainer;var copy=Lib.extendDeepNoArrays({},src||{});var expandedObj=Lib.expandObjectPaths(copy);var containerObj={};// Step through and extract any container properties. Otherwise extendDeepNoArrays\n// will clobber any existing properties with an empty array and then supplyDefaults\n// will reset everything to defaults.\nif(containerPaths&&containerPaths.length){for(i=0;i<containerPaths.length;i++){containerProp=Lib.nestedProperty(expandedObj,containerPaths[i]);containerVal=containerProp.get();if(containerVal===undefined){Lib.nestedProperty(containerObj,containerPaths[i]).set(null);}else{containerProp.set(null);Lib.nestedProperty(containerObj,containerPaths[i]).set(containerVal);}}}dest=Lib.extendDeepNoArrays(dest||{},expandedObj);if(containerPaths&&containerPaths.length){for(i=0;i<containerPaths.length;i++){srcProp=Lib.nestedProperty(containerObj,containerPaths[i]);srcContainer=srcProp.get();if(!srcContainer)continue;destProp=Lib.nestedProperty(dest,containerPaths[i]);destContainer=destProp.get();if(!Array.isArray(destContainer)){destContainer=[];destProp.set(destContainer);}for(j=0;j<srcContainer.length;j++){var srcObj=srcContainer[j];if(srcObj===null)destContainer[j]=null;else{destContainer[j]=plots.extendObjectWithContainers(destContainer[j],srcObj);}}destProp.set(destContainer);}}return dest;};plots.dataArrayContainers=['transforms','dimensions'];plots.layoutArrayContainers=Registry.layoutArrayContainers;/*\n * Extend a trace definition. This method:\n *\n *  1. directly transfers any array references\n *  2. manually recurses into container arrays like transforms\n *\n * The result is the original object reference with the new contents merged in.\n */plots.extendTrace=function(destTrace,srcTrace){return plots.extendObjectWithContainers(destTrace,srcTrace,plots.dataArrayContainers);};/*\n * Extend a layout definition. This method:\n *\n *  1. directly transfers any array references (not critically important for\n *     layout since there aren't really data arrays)\n *  2. manually recurses into container arrays like annotations\n *\n * The result is the original object reference with the new contents merged in.\n */plots.extendLayout=function(destLayout,srcLayout){return plots.extendObjectWithContainers(destLayout,srcLayout,plots.layoutArrayContainers);};/**\n * Transition to a set of new data and layout properties\n *\n * @param {DOM element} gd\n *      the DOM element of the graph container div\n * @param {Object[]} data\n *      an array of data objects following the normal Plotly data definition format\n * @param {Object} layout\n *      a layout object, following normal Plotly layout format\n * @param {Number[]} traces\n *      indices of the corresponding traces specified in `data`\n * @param {Object} frameOpts\n *      options for the frame (i.e. whether to redraw post-transition)\n * @param {Object} transitionOpts\n *      options for the transition\n */plots.transition=function(gd,data,layout,traces,frameOpts,transitionOpts){var i,traceIdx;var dataLength=Array.isArray(data)?data.length:0;var traceIndices=traces.slice(0,dataLength);var transitionedTraces=[];function prepareTransitions(){var i;for(i=0;i<traceIndices.length;i++){var traceIdx=traceIndices[i];var trace=gd._fullData[traceIdx];var module=trace._module;// There's nothing to do if this module is not defined:\nif(!module)continue;// Don't register the trace as transitioned if it doesn't know what to do.\n// If it *is* registered, it will receive a callback that it's responsible\n// for calling in order to register the transition as having completed.\nif(module.animatable){transitionedTraces.push(traceIdx);}gd.data[traceIndices[i]]=plots.extendTrace(gd.data[traceIndices[i]],data[i]);}// Follow the same procedure. Clone it so we don't mangle the input, then\n// expand any object paths so we can merge deep into gd.layout:\nvar layoutUpdate=Lib.expandObjectPaths(Lib.extendDeepNoArrays({},layout));// Before merging though, we need to modify the incoming layout. We only\n// know how to *transition* layout ranges, so it's imperative that a new\n// range not be sent to the layout before the transition has started. So\n// we must remove the things we can transition:\nvar axisAttrRe=/^[xy]axis[0-9]*$/;for(var attr in layoutUpdate){if(!axisAttrRe.test(attr))continue;delete layoutUpdate[attr].range;}plots.extendLayout(gd.layout,layoutUpdate);// Supply defaults after applying the incoming properties. Note that any attempt\n// to simplify this step and reduce the amount of work resulted in the reconstruction\n// of essentially the whole supplyDefaults step, so that it seems sensible to just use\n// supplyDefaults even though it's heavier than would otherwise be desired for\n// transitions:\n// first delete calcdata so supplyDefaults knows a calc step is coming\ndelete gd.calcdata;plots.supplyDefaults(gd);plots.doCalcdata(gd);return Promise.resolve();}function executeCallbacks(list){var p=Promise.resolve();if(!list)return p;while(list.length){p=p.then(list.shift());}return p;}function flushCallbacks(list){if(!list)return;while(list.length){list.shift();}}var aborted=false;function executeTransitions(){gd.emit('plotly_transitioning',[]);return new Promise(function(resolve){// This flag is used to disabled things like autorange:\ngd._transitioning=true;// When instantaneous updates are coming through quickly, it's too much to simply disable\n// all interaction, so store this flag so we can disambiguate whether mouse interactions\n// should be fully disabled or not:\nif(transitionOpts.duration>0){gd._transitioningWithDuration=true;}// If another transition is triggered, this callback will be executed simply because it's\n// in the interruptCallbacks queue. If this transition completes, it will instead flush\n// that queue and forget about this callback.\ngd._transitionData._interruptCallbacks.push(function(){aborted=true;});if(frameOpts.redraw){gd._transitionData._interruptCallbacks.push(function(){return Registry.call('redraw',gd);});}// Emit this and make sure it happens last:\ngd._transitionData._interruptCallbacks.push(function(){gd.emit('plotly_transitioninterrupted',[]);});// Construct callbacks that are executed on transition end. This ensures the d3 transitions\n// are *complete* before anything else is done.\nvar numCallbacks=0;var numCompleted=0;function makeCallback(){numCallbacks++;return function(){numCompleted++;// When all are complete, perform a redraw:\nif(!aborted&&numCompleted===numCallbacks){completeTransition(resolve);}};}var traceTransitionOpts;var j;var basePlotModules=gd._fullLayout._basePlotModules;var hasAxisTransition=false;if(layout){for(j=0;j<basePlotModules.length;j++){if(basePlotModules[j].transitionAxes){var newLayout=Lib.expandObjectPaths(layout);hasAxisTransition=basePlotModules[j].transitionAxes(gd,newLayout,transitionOpts,makeCallback)||hasAxisTransition;}}}// Here handle the exception that we refuse to animate scales and axes at the same\n// time. In other words, if there's an axis transition, then set the data transition\n// to instantaneous.\nif(hasAxisTransition){traceTransitionOpts=Lib.extendFlat({},transitionOpts);traceTransitionOpts.duration=0;// This means do not transition traces,\n// this happens on layout-only (e.g. axis range) animations\ntransitionedTraces=null;}else{traceTransitionOpts=transitionOpts;}for(j=0;j<basePlotModules.length;j++){// Note that we pass a callback to *create* the callback that must be invoked on completion.\n// This is since not all traces know about transitions, so it greatly simplifies matters if\n// the trace is responsible for creating a callback, if needed, and then executing it when\n// the time is right.\nbasePlotModules[j].plot(gd,transitionedTraces,traceTransitionOpts,makeCallback);}// If nothing else creates a callback, then this will trigger the completion in the next tick:\nsetTimeout(makeCallback());});}function completeTransition(callback){// This a simple workaround for tests which purge the graph before animations\n// have completed. That's not a very common case, so this is the simplest\n// fix.\nif(!gd._transitionData)return;flushCallbacks(gd._transitionData._interruptCallbacks);return Promise.resolve().then(function(){if(frameOpts.redraw){return Registry.call('redraw',gd);}}).then(function(){// Set transitioning false again once the redraw has occurred. This is used, for example,\n// to prevent the trailing redraw from autoranging:\ngd._transitioning=false;gd._transitioningWithDuration=false;gd.emit('plotly_transitioned',[]);}).then(callback);}function interruptPreviousTransitions(){// Fail-safe against purged plot:\nif(!gd._transitionData)return;// If a transition is interrupted, set this to false. At the moment, the only thing that would\n// interrupt a transition is another transition, so that it will momentarily be set to true\n// again, but this determines whether autorange or dragbox work, so it's for the sake of\n// cleanliness:\ngd._transitioning=false;return executeCallbacks(gd._transitionData._interruptCallbacks);}for(i=0;i<traceIndices.length;i++){traceIdx=traceIndices[i];var contFull=gd._fullData[traceIdx];var module=contFull._module;if(!module)continue;}var seq=[plots.previousPromises,interruptPreviousTransitions,prepareTransitions,plots.rehover,executeTransitions];var transitionStarting=Lib.syncOrAsync(seq,gd);if(!transitionStarting||!transitionStarting.then){transitionStarting=Promise.resolve();}return transitionStarting.then(function(){return gd;});};plots.doCalcdata=function(gd,traces){var axList=axisIDs.list(gd);var fullData=gd._fullData;var fullLayout=gd._fullLayout;var trace,_module,i,j;// XXX: Is this correct? Needs a closer look so that *some* traces can be recomputed without\n// *all* needing doCalcdata:\nvar calcdata=new Array(fullData.length);var oldCalcdata=(gd.calcdata||[]).slice(0);gd.calcdata=calcdata;// extra helper variables\n// how many box/violins plots do we have (in case they're grouped)\nfullLayout._numBoxes=0;fullLayout._numViolins=0;// initialize violin per-scale-group stats container\nfullLayout._violinScaleGroupStats={};// for calculating avg luminosity of heatmaps\ngd._hmpixcount=0;gd._hmlumcount=0;// for sharing colors across pies (and for legend)\nfullLayout._piecolormap={};// If traces were specified and this trace was not included,\n// then transfer it over from the old calcdata:\nfor(i=0;i<fullData.length;i++){if(Array.isArray(traces)&&traces.indexOf(i)===-1){calcdata[i]=oldCalcdata[i];continue;}}for(i=0;i<fullData.length;i++){trace=fullData[i];trace._arrayAttrs=PlotSchema.findArrayAttributes(trace);// keep track of trace extremes (for autorange) in here\ntrace._extremes={};}// add polar axes to axis list\nvar polarIds=fullLayout._subplots.polar||[];for(i=0;i<polarIds.length;i++){axList.push(fullLayout[polarIds[i]].radialaxis,fullLayout[polarIds[i]].angularaxis);}setupAxisCategories(axList,fullData);var hasCalcTransform=false;// transform loop\nfor(i=0;i<fullData.length;i++){trace=fullData[i];if(trace.visible===true&&trace.transforms){_module=trace._module;// we need one round of trace module calc before\n// the calc transform to 'fill in' the categories list\n// used for example in the data-to-coordinate method\nif(_module&&_module.calc){var cdi=_module.calc(gd,trace);// must clear scene 'batches', so that 2nd\n// _module.calc call starts from scratch\nif(cdi[0]&&cdi[0].t&&cdi[0].t._scene){delete cdi[0].t._scene.dirty;}}for(j=0;j<trace.transforms.length;j++){var transform=trace.transforms[j];_module=transformsRegistry[transform.type];if(_module&&_module.calcTransform){trace._hasCalcTransform=true;hasCalcTransform=true;_module.calcTransform(gd,trace,transform);}}}}// clear stuff that should recomputed in 'regular' loop\nif(hasCalcTransform)setupAxisCategories(axList,fullData);function calci(i,isContainer){trace=fullData[i];_module=trace._module;if(!!_module.isContainer!==isContainer)return;var cd=[];if(trace.visible===true){// clear existing ref in case it got relinked\ndelete trace._indexToPoints;// keep ref of index-to-points map object of the *last* enabled transform,\n// this index-to-points map object is required to determine the calcdata indices\n// that correspond to input indices (e.g. from 'selectedpoints')\nvar transforms=trace.transforms||[];for(j=transforms.length-1;j>=0;j--){if(transforms[j].enabled){trace._indexToPoints=transforms[j]._indexToPoints;break;}}if(_module&&_module.calc){cd=_module.calc(gd,trace);}}// Make sure there is a first point.\n//\n// This ensures there is a calcdata item for every trace,\n// even if cartesian logic doesn't handle it (for things like legends).\nif(!Array.isArray(cd)||!cd[0]){cd=[{x:BADNUM,y:BADNUM}];}// add the trace-wide properties to the first point,\n// per point properties to every point\n// t is the holder for trace-wide properties\nif(!cd[0].t)cd[0].t={};cd[0].trace=trace;calcdata[i]=cd;}// 'regular' loop - make sure container traces (eg carpet) calc before\n// contained traces (eg contourcarpet)\nfor(i=0;i<fullData.length;i++){calci(i,true);}for(i=0;i<fullData.length;i++){calci(i,false);}doCrossTraceCalc(gd);Registry.getComponentMethod('fx','calc')(gd);Registry.getComponentMethod('errorbars','calc')(gd);};function setupAxisCategories(axList,fullData){for(var i=0;i<axList.length;i++){var ax=axList[i];ax.clearCalc();if(ax.type==='multicategory'){ax.setupMultiCategory(fullData);}}}function doCrossTraceCalc(gd){var fullLayout=gd._fullLayout;var modules=fullLayout._visibleModules;var hash={};var i,j,k;// position and range calculations for traces that\n// depend on each other ie bars (stacked or grouped)\n// and boxes (grouped) push each other out of the way\nfor(j=0;j<modules.length;j++){var _module=modules[j];var fn=_module.crossTraceCalc;if(fn){var spType=_module.basePlotModule.name;if(hash[spType]){Lib.pushUnique(hash[spType],fn);}else{hash[spType]=[fn];}}}for(k in hash){var methods=hash[k];var subplots=fullLayout._subplots[k];if(Array.isArray(subplots)){for(i=0;i<subplots.length;i++){var sp=subplots[i];var spInfo=k==='cartesian'?fullLayout._plots[sp]:fullLayout[sp];for(j=0;j<methods.length;j++){methods[j](gd,spInfo,sp);}}}else{for(j=0;j<methods.length;j++){methods[j](gd);}}}}plots.rehover=function(gd){if(gd._fullLayout._rehover){gd._fullLayout._rehover();}};plots.generalUpdatePerTraceModule=function(gd,subplot,subplotCalcData,subplotLayout){var traceHashOld=subplot.traceHash;var traceHash={};var i;// build up moduleName -> calcData hash\nfor(i=0;i<subplotCalcData.length;i++){var calcTraces=subplotCalcData[i];var trace=calcTraces[0].trace;// skip over visible === false traces\n// as they don't have `_module` ref\nif(trace.visible){traceHash[trace.type]=traceHash[trace.type]||[];traceHash[trace.type].push(calcTraces);}}// when a trace gets deleted, make sure that its module's\n// plot method is called so that it is properly\n// removed from the DOM.\nfor(var moduleNameOld in traceHashOld){if(!traceHash[moduleNameOld]){var fakeCalcTrace=traceHashOld[moduleNameOld][0];var fakeTrace=fakeCalcTrace[0].trace;fakeTrace.visible=false;traceHash[moduleNameOld]=[fakeCalcTrace];}}// call module plot method\nfor(var moduleName in traceHash){var moduleCalcData=traceHash[moduleName];var _module=moduleCalcData[0][0].trace._module;_module.plot(gd,subplot,Lib.filterVisible(moduleCalcData),subplotLayout);}// update moduleName -> calcData hash\nsubplot.traceHash=traceHash;};},{\"../components/color\":299,\"../constants/numerical\":398,\"../lib\":423,\"../plot_api/plot_schema\":458,\"../plot_api/plot_template\":459,\"../plots/cartesian/axis_ids\":472,\"../registry\":521,\"./animation_attributes\":464,\"./attributes\":466,\"./command\":494,\"./font_attributes\":496,\"./frame_attributes\":497,\"./layout_attributes\":511,\"d3\":71,\"fast-isnumeric\":80}],514:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var scatterAttrs=_dereq_('../../../traces/scatter/attributes');var scatterMarkerAttrs=scatterAttrs.marker;var extendFlat=_dereq_('../../../lib/extend').extendFlat;var deprecationWarning=['Area traces are deprecated!','Please switch to the *barpolar* trace type.'].join(' ');module.exports={r:extendFlat({},scatterAttrs.r,{}),t:extendFlat({},scatterAttrs.t,{}),marker:{color:extendFlat({},scatterMarkerAttrs.color,{}),size:extendFlat({},scatterMarkerAttrs.size,{}),symbol:extendFlat({},scatterMarkerAttrs.symbol,{}),opacity:extendFlat({},scatterMarkerAttrs.opacity,{}),editType:'calc'}};},{\"../../../lib/extend\":416,\"../../../traces/scatter/attributes\":533}],515:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var axesAttrs=_dereq_('../../cartesian/layout_attributes');var extendFlat=_dereq_('../../../lib/extend').extendFlat;var overrideAll=_dereq_('../../../plot_api/edit_types').overrideAll;var deprecationWarning=['Legacy polar charts are deprecated!','Please switch to *polar* subplots.'].join(' ');var domainAttr=extendFlat({},axesAttrs.domain,{});function mergeAttrs(axisName,nonCommonAttrs){var commonAttrs={showline:{valType:'boolean'},showticklabels:{valType:'boolean'},tickorientation:{valType:'enumerated',values:['horizontal','vertical']},ticklen:{valType:'number',min:0},tickcolor:{valType:'color'},ticksuffix:{valType:'string'},endpadding:{valType:'number',description:deprecationWarning},visible:{valType:'boolean'}};return extendFlat({},nonCommonAttrs,commonAttrs);}module.exports=overrideAll({radialaxis:mergeAttrs('radial',{range:{valType:'info_array',items:[{valType:'number'},{valType:'number'}]},domain:domainAttr,orientation:{valType:'number'}}),angularaxis:mergeAttrs('angular',{range:{valType:'info_array',items:[{valType:'number',dflt:0},{valType:'number',dflt:360}]},domain:domainAttr}),// attributes that appear at layout root\nlayout:{direction:{valType:'enumerated',values:['clockwise','counterclockwise']},orientation:{valType:'angle'}}},'plot','nested');},{\"../../../lib/extend\":416,\"../../../plot_api/edit_types\":452,\"../../cartesian/layout_attributes\":482}],516:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Polar=module.exports=_dereq_('./micropolar');Polar.manager=_dereq_('./micropolar_manager');},{\"./micropolar\":517,\"./micropolar_manager\":518}],517:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/var d3=_dereq_('d3');var Lib=_dereq_('../../../lib');var extendDeepAll=Lib.extendDeepAll;var MID_SHIFT=_dereq_('../../../constants/alignment').MID_SHIFT;var µ=module.exports={version:'0.2.2'};µ.Axis=function module(){var config={data:[],layout:{}},inputConfig={},liveConfig={};var svg,container,dispatch=d3.dispatch('hover'),radialScale,angularScale;var exports={};function render(_container){container=_container||container;var data=config.data;var axisConfig=config.layout;if(typeof container=='string'||container.nodeName)container=d3.select(container);container.datum(data).each(function(_data,_index){var dataOriginal=_data.slice();liveConfig={data:µ.util.cloneJson(dataOriginal),layout:µ.util.cloneJson(axisConfig)};var colorIndex=0;dataOriginal.forEach(function(d,i){if(!d.color){d.color=axisConfig.defaultColorRange[colorIndex];colorIndex=(colorIndex+1)%axisConfig.defaultColorRange.length;}if(!d.strokeColor){d.strokeColor=d.geometry==='LinePlot'?d.color:d3.rgb(d.color).darker().toString();}liveConfig.data[i].color=d.color;liveConfig.data[i].strokeColor=d.strokeColor;liveConfig.data[i].strokeDash=d.strokeDash;liveConfig.data[i].strokeSize=d.strokeSize;});var data=dataOriginal.filter(function(d,i){var visible=d.visible;return typeof visible==='undefined'||visible===true;});var isStacked=false;var dataWithGroupId=data.map(function(d,i){isStacked=isStacked||typeof d.groupId!=='undefined';return d;});if(isStacked){var grouped=d3.nest().key(function(d,i){return typeof d.groupId!='undefined'?d.groupId:'unstacked';}).entries(dataWithGroupId);var dataYStack=[];var stacked=grouped.map(function(d,i){if(d.key==='unstacked')return d.values;else{var prevArray=d.values[0].r.map(function(d,i){return 0;});d.values.forEach(function(d,i,a){d.yStack=[prevArray];dataYStack.push(prevArray);prevArray=µ.util.sumArrays(d.r,prevArray);});return d.values;}});data=d3.merge(stacked);}data.forEach(function(d,i){d.t=Array.isArray(d.t[0])?d.t:[d.t];d.r=Array.isArray(d.r[0])?d.r:[d.r];});var radius=Math.min(axisConfig.width-axisConfig.margin.left-axisConfig.margin.right,axisConfig.height-axisConfig.margin.top-axisConfig.margin.bottom)/2;radius=Math.max(10,radius);var chartCenter=[axisConfig.margin.left+radius,axisConfig.margin.top+radius];var extent;if(isStacked){var highestStackedValue=d3.max(µ.util.sumArrays(µ.util.arrayLast(data).r[0],µ.util.arrayLast(dataYStack)));extent=[0,highestStackedValue];}else extent=d3.extent(µ.util.flattenArray(data.map(function(d,i){return d.r;})));if(axisConfig.radialAxis.domain!=µ.DATAEXTENT)extent[0]=0;radialScale=d3.scale.linear().domain(axisConfig.radialAxis.domain!=µ.DATAEXTENT&&axisConfig.radialAxis.domain?axisConfig.radialAxis.domain:extent).range([0,radius]);liveConfig.layout.radialAxis.domain=radialScale.domain();var angularDataMerged=µ.util.flattenArray(data.map(function(d,i){return d.t;}));var isOrdinal=typeof angularDataMerged[0]==='string';var ticks;if(isOrdinal){angularDataMerged=µ.util.deduplicate(angularDataMerged);ticks=angularDataMerged.slice();angularDataMerged=d3.range(angularDataMerged.length);data=data.map(function(d,i){var result=d;d.t=[angularDataMerged];if(isStacked)result.yStack=d.yStack;return result;});}var hasOnlyLineOrDotPlot=data.filter(function(d,i){return d.geometry==='LinePlot'||d.geometry==='DotPlot';}).length===data.length;var needsEndSpacing=axisConfig.needsEndSpacing===null?isOrdinal||!hasOnlyLineOrDotPlot:axisConfig.needsEndSpacing;var useProvidedDomain=axisConfig.angularAxis.domain&&axisConfig.angularAxis.domain!=µ.DATAEXTENT&&!isOrdinal&&axisConfig.angularAxis.domain[0]>=0;var angularDomain=useProvidedDomain?axisConfig.angularAxis.domain:d3.extent(angularDataMerged);var angularDomainStep=Math.abs(angularDataMerged[1]-angularDataMerged[0]);if(hasOnlyLineOrDotPlot&&!isOrdinal)angularDomainStep=0;var angularDomainWithPadding=angularDomain.slice();if(needsEndSpacing&&isOrdinal)angularDomainWithPadding[1]+=angularDomainStep;var tickCount=axisConfig.angularAxis.ticksCount||4;if(tickCount>8)tickCount=tickCount/(tickCount/8)+tickCount%8;if(axisConfig.angularAxis.ticksStep){tickCount=(angularDomainWithPadding[1]-angularDomainWithPadding[0])/tickCount;}var angularTicksStep=axisConfig.angularAxis.ticksStep||(angularDomainWithPadding[1]-angularDomainWithPadding[0])/(tickCount*(axisConfig.minorTicks+1));if(ticks)angularTicksStep=Math.max(Math.round(angularTicksStep),1);if(!angularDomainWithPadding[2])angularDomainWithPadding[2]=angularTicksStep;var angularAxisRange=d3.range.apply(this,angularDomainWithPadding);angularAxisRange=angularAxisRange.map(function(d,i){return parseFloat(d.toPrecision(12));});angularScale=d3.scale.linear().domain(angularDomainWithPadding.slice(0,2)).range(axisConfig.direction==='clockwise'?[0,360]:[360,0]);liveConfig.layout.angularAxis.domain=angularScale.domain();liveConfig.layout.angularAxis.endPadding=needsEndSpacing?angularDomainStep:0;svg=d3.select(this).select('svg.chart-root');if(typeof svg==='undefined'||svg.empty()){var skeleton=\"<svg xmlns='http://www.w3.org/2000/svg' class='chart-root'>' + '<g class='outer-group'>' + '<g class='chart-group'>' + '<circle class='background-circle'></circle>' + '<g class='geometry-group'></g>' + '<g class='radial axis-group'>' + '<circle class='outside-circle'></circle>' + '</g>' + '<g class='angular axis-group'></g>' + '<g class='guides-group'><line></line><circle r='0'></circle></g>' + '</g>' + '<g class='legend-group'></g>' + '<g class='tooltips-group'></g>' + '<g class='title-group'><text></text></g>' + '</g>' + '</svg>\";var doc=new DOMParser().parseFromString(skeleton,'application/xml');var newSvg=this.appendChild(this.ownerDocument.importNode(doc.documentElement,true));svg=d3.select(newSvg);}svg.select('.guides-group').style({'pointer-events':'none'});svg.select('.angular.axis-group').style({'pointer-events':'none'});svg.select('.radial.axis-group').style({'pointer-events':'none'});var chartGroup=svg.select('.chart-group');var lineStyle={fill:'none',stroke:axisConfig.tickColor};var fontStyle={'font-size':axisConfig.font.size,'font-family':axisConfig.font.family,fill:axisConfig.font.color,'text-shadow':['-1px 0px','1px -1px','-1px 1px','1px 1px'].map(function(d,i){return' '+d+' 0 '+axisConfig.font.outlineColor;}).join(',')};var legendContainer;if(axisConfig.showLegend){legendContainer=svg.select('.legend-group').attr({transform:'translate('+[radius,axisConfig.margin.top]+')'}).style({display:'block'});var elements=data.map(function(d,i){var datumClone=µ.util.cloneJson(d);datumClone.symbol=d.geometry==='DotPlot'?d.dotType||'circle':d.geometry!='LinePlot'?'square':'line';datumClone.visibleInLegend=typeof d.visibleInLegend==='undefined'||d.visibleInLegend;datumClone.color=d.geometry==='LinePlot'?d.strokeColor:d.color;return datumClone;});µ.Legend().config({data:data.map(function(d,i){return d.name||'Element'+i;}),legendConfig:extendDeepAll({},µ.Legend.defaultConfig().legendConfig,{container:legendContainer,elements:elements,reverseOrder:axisConfig.legend.reverseOrder})})();var legendBBox=legendContainer.node().getBBox();radius=Math.min(axisConfig.width-legendBBox.width-axisConfig.margin.left-axisConfig.margin.right,axisConfig.height-axisConfig.margin.top-axisConfig.margin.bottom)/2;radius=Math.max(10,radius);chartCenter=[axisConfig.margin.left+radius,axisConfig.margin.top+radius];radialScale.range([0,radius]);liveConfig.layout.radialAxis.domain=radialScale.domain();legendContainer.attr('transform','translate('+[chartCenter[0]+radius,chartCenter[1]-radius]+')');}else{legendContainer=svg.select('.legend-group').style({display:'none'});}svg.attr({width:axisConfig.width,height:axisConfig.height}).style({opacity:axisConfig.opacity});chartGroup.attr('transform','translate('+chartCenter+')').style({cursor:'crosshair'});var centeringOffset=[(axisConfig.width-(axisConfig.margin.left+axisConfig.margin.right+radius*2+(legendBBox?legendBBox.width:0)))/2,(axisConfig.height-(axisConfig.margin.top+axisConfig.margin.bottom+radius*2))/2];centeringOffset[0]=Math.max(0,centeringOffset[0]);centeringOffset[1]=Math.max(0,centeringOffset[1]);svg.select('.outer-group').attr('transform','translate('+centeringOffset+')');if(axisConfig.title&&axisConfig.title.text){var title=svg.select('g.title-group text').style(fontStyle).text(axisConfig.title.text);var titleBBox=title.node().getBBox();title.attr({x:chartCenter[0]-titleBBox.width/2,y:chartCenter[1]-radius-20});}var radialAxis=svg.select('.radial.axis-group');if(axisConfig.radialAxis.gridLinesVisible){var gridCircles=radialAxis.selectAll('circle.grid-circle').data(radialScale.ticks(5));gridCircles.enter().append('circle').attr({'class':'grid-circle'}).style(lineStyle);gridCircles.attr('r',radialScale);gridCircles.exit().remove();}radialAxis.select('circle.outside-circle').attr({r:radius}).style(lineStyle);var backgroundCircle=svg.select('circle.background-circle').attr({r:radius}).style({fill:axisConfig.backgroundColor,stroke:axisConfig.stroke});function currentAngle(d,i){return angularScale(d)%360+axisConfig.orientation;}if(axisConfig.radialAxis.visible){var axis=d3.svg.axis().scale(radialScale).ticks(5).tickSize(5);radialAxis.call(axis).attr({transform:'rotate('+axisConfig.radialAxis.orientation+')'});radialAxis.selectAll('.domain').style(lineStyle);radialAxis.selectAll('g>text').text(function(d,i){return this.textContent+axisConfig.radialAxis.ticksSuffix;}).style(fontStyle).style({'text-anchor':'start'}).attr({x:0,y:0,dx:0,dy:0,transform:function transform(d,i){if(axisConfig.radialAxis.tickOrientation==='horizontal'){return'rotate('+-axisConfig.radialAxis.orientation+') translate('+[0,fontStyle['font-size']]+')';}else return'translate('+[0,fontStyle['font-size']]+')';}});radialAxis.selectAll('g>line').style({stroke:'black'});}var angularAxis=svg.select('.angular.axis-group').selectAll('g.angular-tick').data(angularAxisRange);var angularAxisEnter=angularAxis.enter().append('g').classed('angular-tick',true);angularAxis.attr({transform:function transform(d,i){return'rotate('+currentAngle(d,i)+')';}}).style({display:axisConfig.angularAxis.visible?'block':'none'});angularAxis.exit().remove();angularAxisEnter.append('line').classed('grid-line',true).classed('major',function(d,i){return i%(axisConfig.minorTicks+1)==0;}).classed('minor',function(d,i){return!(i%(axisConfig.minorTicks+1)==0);}).style(lineStyle);angularAxisEnter.selectAll('.minor').style({stroke:axisConfig.minorTickColor});angularAxis.select('line.grid-line').attr({x1:axisConfig.tickLength?radius-axisConfig.tickLength:0,x2:radius}).style({display:axisConfig.angularAxis.gridLinesVisible?'block':'none'});angularAxisEnter.append('text').classed('axis-text',true).style(fontStyle);var ticksText=angularAxis.select('text.axis-text').attr({x:radius+axisConfig.labelOffset,dy:MID_SHIFT+'em',transform:function transform(d,i){var angle=currentAngle(d,i);var rad=radius+axisConfig.labelOffset;var orient=axisConfig.angularAxis.tickOrientation;if(orient=='horizontal')return'rotate('+-angle+' '+rad+' 0)';else if(orient=='radial')return angle<270&&angle>90?'rotate(180 '+rad+' 0)':null;else return'rotate('+(angle<=180&&angle>0?-90:90)+' '+rad+' 0)';}}).style({'text-anchor':'middle',display:axisConfig.angularAxis.labelsVisible?'block':'none'}).text(function(d,i){if(i%(axisConfig.minorTicks+1)!=0)return'';if(ticks){return ticks[d]+axisConfig.angularAxis.ticksSuffix;}else return d+axisConfig.angularAxis.ticksSuffix;}).style(fontStyle);if(axisConfig.angularAxis.rewriteTicks)ticksText.text(function(d,i){if(i%(axisConfig.minorTicks+1)!=0)return'';return axisConfig.angularAxis.rewriteTicks(this.textContent,i);});var rightmostTickEndX=d3.max(chartGroup.selectAll('.angular-tick text')[0].map(function(d,i){return d.getCTM().e+d.getBBox().width;}));legendContainer.attr({transform:'translate('+[radius+rightmostTickEndX,axisConfig.margin.top]+')'});var hasGeometry=svg.select('g.geometry-group').selectAll('g').size()>0;var geometryContainer=svg.select('g.geometry-group').selectAll('g.geometry').data(data);geometryContainer.enter().append('g').attr({'class':function _class(d,i){return'geometry geometry'+i;}});geometryContainer.exit().remove();if(data[0]||hasGeometry){var geometryConfigs=[];data.forEach(function(d,i){var geometryConfig={};geometryConfig.radialScale=radialScale;geometryConfig.angularScale=angularScale;geometryConfig.container=geometryContainer.filter(function(dB,iB){return iB==i;});geometryConfig.geometry=d.geometry;geometryConfig.orientation=axisConfig.orientation;geometryConfig.direction=axisConfig.direction;geometryConfig.index=i;geometryConfigs.push({data:d,geometryConfig:geometryConfig});});var geometryConfigsGrouped=d3.nest().key(function(d,i){return typeof d.data.groupId!='undefined'||'unstacked';}).entries(geometryConfigs);var geometryConfigsGrouped2=[];geometryConfigsGrouped.forEach(function(d,i){if(d.key==='unstacked')geometryConfigsGrouped2=geometryConfigsGrouped2.concat(d.values.map(function(d,i){return[d];}));else geometryConfigsGrouped2.push(d.values);});geometryConfigsGrouped2.forEach(function(d,i){var geometry;if(Array.isArray(d))geometry=d[0].geometryConfig.geometry;else geometry=d.geometryConfig.geometry;var finalGeometryConfig=d.map(function(dB,iB){return extendDeepAll(µ[geometry].defaultConfig(),dB);});µ[geometry]().config(finalGeometryConfig)();});}var guides=svg.select('.guides-group');var tooltipContainer=svg.select('.tooltips-group');var angularTooltip=µ.tooltipPanel().config({container:tooltipContainer,fontSize:8})();var radialTooltip=µ.tooltipPanel().config({container:tooltipContainer,fontSize:8})();var geometryTooltip=µ.tooltipPanel().config({container:tooltipContainer,hasTick:true})();var angularValue,radialValue;if(!isOrdinal){var angularGuideLine=guides.select('line').attr({x1:0,y1:0,y2:0}).style({stroke:'grey','pointer-events':'none'});chartGroup.on('mousemove.angular-guide',function(d,i){var mouseAngle=µ.util.getMousePos(backgroundCircle).angle;angularGuideLine.attr({x2:-radius,transform:'rotate('+mouseAngle+')'}).style({opacity:.5});var angleWithOriginOffset=(mouseAngle+180+360-axisConfig.orientation)%360;angularValue=angularScale.invert(angleWithOriginOffset);var pos=µ.util.convertToCartesian(radius+12,mouseAngle+180);angularTooltip.text(µ.util.round(angularValue)).move([pos[0]+chartCenter[0],pos[1]+chartCenter[1]]);}).on('mouseout.angular-guide',function(d,i){guides.select('line').style({opacity:0});});}var angularGuideCircle=guides.select('circle').style({stroke:'grey',fill:'none'});chartGroup.on('mousemove.radial-guide',function(d,i){var r=µ.util.getMousePos(backgroundCircle).radius;angularGuideCircle.attr({r:r}).style({opacity:.5});radialValue=radialScale.invert(µ.util.getMousePos(backgroundCircle).radius);var pos=µ.util.convertToCartesian(r,axisConfig.radialAxis.orientation);radialTooltip.text(µ.util.round(radialValue)).move([pos[0]+chartCenter[0],pos[1]+chartCenter[1]]);}).on('mouseout.radial-guide',function(d,i){angularGuideCircle.style({opacity:0});geometryTooltip.hide();angularTooltip.hide();radialTooltip.hide();});svg.selectAll('.geometry-group .mark').on('mouseover.tooltip',function(d,i){var el=d3.select(this);var color=this.style.fill;var newColor='black';var opacity=this.style.opacity||1;el.attr({'data-opacity':opacity});if(color&&color!=='none'){el.attr({'data-fill':color});newColor=d3.hsl(color).darker().toString();el.style({fill:newColor,opacity:1});var textData={t:µ.util.round(d[0]),r:µ.util.round(d[1])};if(isOrdinal)textData.t=ticks[d[0]];var text='t: '+textData.t+', r: '+textData.r;var bbox=this.getBoundingClientRect();var svgBBox=svg.node().getBoundingClientRect();var pos=[bbox.left+bbox.width/2-centeringOffset[0]-svgBBox.left,bbox.top+bbox.height/2-centeringOffset[1]-svgBBox.top];geometryTooltip.config({color:newColor}).text(text);geometryTooltip.move(pos);}else{color=this.style.stroke||'black';el.attr({'data-stroke':color});newColor=d3.hsl(color).darker().toString();el.style({stroke:newColor,opacity:1});}}).on('mousemove.tooltip',function(d,i){if(d3.event.which!=0)return false;if(d3.select(this).attr('data-fill'))geometryTooltip.show();}).on('mouseout.tooltip',function(d,i){geometryTooltip.hide();var el=d3.select(this);var fillColor=el.attr('data-fill');if(fillColor)el.style({fill:fillColor,opacity:el.attr('data-opacity')});else el.style({stroke:el.attr('data-stroke'),opacity:el.attr('data-opacity')});});});return exports;}exports.render=function(_container){render(_container);return this;};exports.config=function(_x){if(!arguments.length)return config;var xClone=µ.util.cloneJson(_x);xClone.data.forEach(function(d,i){if(!config.data[i])config.data[i]={};extendDeepAll(config.data[i],µ.Axis.defaultConfig().data[0]);extendDeepAll(config.data[i],d);});extendDeepAll(config.layout,µ.Axis.defaultConfig().layout);extendDeepAll(config.layout,xClone.layout);return this;};exports.getLiveConfig=function(){return liveConfig;};exports.getinputConfig=function(){return inputConfig;};exports.radialScale=function(_x){return radialScale;};exports.angularScale=function(_x){return angularScale;};exports.svg=function(){return svg;};d3.rebind(exports,dispatch,'on');return exports;};µ.Axis.defaultConfig=function(d,i){var config={data:[{t:[1,2,3,4],r:[10,11,12,13],name:'Line1',geometry:'LinePlot',color:null,strokeDash:'solid',strokeColor:null,strokeSize:'1',visibleInLegend:true,opacity:1}],layout:{defaultColorRange:d3.scale.category10().range(),title:null,height:450,width:500,margin:{top:40,right:40,bottom:40,left:40},font:{size:12,color:'gray',outlineColor:'white',family:'Tahoma, sans-serif'},direction:'clockwise',orientation:0,labelOffset:10,radialAxis:{domain:null,orientation:-45,ticksSuffix:'',visible:true,gridLinesVisible:true,tickOrientation:'horizontal',rewriteTicks:null},angularAxis:{domain:[0,360],ticksSuffix:'',visible:true,gridLinesVisible:true,labelsVisible:true,tickOrientation:'horizontal',rewriteTicks:null,ticksCount:null,ticksStep:null},minorTicks:0,tickLength:null,tickColor:'silver',minorTickColor:'#eee',backgroundColor:'none',needsEndSpacing:null,showLegend:true,legend:{reverseOrder:false},opacity:1}};return config;};µ.util={};µ.DATAEXTENT='dataExtent';µ.AREA='AreaChart';µ.LINE='LinePlot';µ.DOT='DotPlot';µ.BAR='BarChart';µ.util._override=function(_objA,_objB){for(var x in _objA){if(x in _objB)_objB[x]=_objA[x];}};µ.util._extend=function(_objA,_objB){for(var x in _objA){_objB[x]=_objA[x];}};µ.util._rndSnd=function(){return Math.random()*2-1+(Math.random()*2-1)+(Math.random()*2-1);};µ.util.dataFromEquation2=function(_equation,_step){var step=_step||6;var data=d3.range(0,360+step,step).map(function(deg,index){var theta=deg*Math.PI/180;var radius=_equation(theta);return[deg,radius];});return data;};µ.util.dataFromEquation=function(_equation,_step,_name){var step=_step||6;var t=[],r=[];d3.range(0,360+step,step).forEach(function(deg,index){var theta=deg*Math.PI/180;var radius=_equation(theta);t.push(deg);r.push(radius);});var result={t:t,r:r};if(_name)result.name=_name;return result;};µ.util.ensureArray=function(_val,_count){if(typeof _val==='undefined')return null;var arr=[].concat(_val);return d3.range(_count).map(function(d,i){return arr[i]||arr[0];});};µ.util.fillArrays=function(_obj,_valueNames,_count){_valueNames.forEach(function(d,i){_obj[d]=µ.util.ensureArray(_obj[d],_count);});return _obj;};µ.util.cloneJson=function(json){return JSON.parse(JSON.stringify(json));};µ.util.validateKeys=function(obj,keys){if(typeof keys==='string')keys=keys.split('.');var next=keys.shift();return obj[next]&&(!keys.length||objHasKeys(obj[next],keys));};µ.util.sumArrays=function(a,b){return d3.zip(a,b).map(function(d,i){return d3.sum(d);});};µ.util.arrayLast=function(a){return a[a.length-1];};µ.util.arrayEqual=function(a,b){var i=Math.max(a.length,b.length,1);while(i--\x3e=0&&a[i]===b[i]){;}return i===-2;};µ.util.flattenArray=function(arr){var r=[];while(!µ.util.arrayEqual(r,arr)){r=arr;arr=[].concat.apply([],arr);}return arr;};µ.util.deduplicate=function(arr){return arr.filter(function(v,i,a){return a.indexOf(v)==i;});};µ.util.convertToCartesian=function(radius,theta){var thetaRadians=theta*Math.PI/180;var x=radius*Math.cos(thetaRadians);var y=radius*Math.sin(thetaRadians);return[x,y];};µ.util.round=function(_value,_digits){var digits=_digits||2;var mult=Math.pow(10,digits);return Math.round(_value*mult)/mult;};µ.util.getMousePos=function(_referenceElement){var mousePos=d3.mouse(_referenceElement.node());var mouseX=mousePos[0];var mouseY=mousePos[1];var mouse={};mouse.x=mouseX;mouse.y=mouseY;mouse.pos=mousePos;mouse.angle=(Math.atan2(mouseY,mouseX)+Math.PI)*180/Math.PI;mouse.radius=Math.sqrt(mouseX*mouseX+mouseY*mouseY);return mouse;};µ.util.duplicatesCount=function(arr){var uniques={},val;var dups={};for(var i=0,len=arr.length;i<len;i++){val=arr[i];if(val in uniques){uniques[val]++;dups[val]=uniques[val];}else{uniques[val]=1;}}return dups;};µ.util.duplicates=function(arr){return Object.keys(µ.util.duplicatesCount(arr));};µ.util.translator=function(obj,sourceBranch,targetBranch,reverse){if(reverse){var targetBranchCopy=targetBranch.slice();targetBranch=sourceBranch;sourceBranch=targetBranchCopy;}var value=sourceBranch.reduce(function(previousValue,currentValue){if(typeof previousValue!='undefined')return previousValue[currentValue];},obj);if(typeof value==='undefined')return;sourceBranch.reduce(function(previousValue,currentValue,index){if(typeof previousValue=='undefined')return;if(index===sourceBranch.length-1)delete previousValue[currentValue];return previousValue[currentValue];},obj);targetBranch.reduce(function(previousValue,currentValue,index){if(typeof previousValue[currentValue]==='undefined')previousValue[currentValue]={};if(index===targetBranch.length-1)previousValue[currentValue]=value;return previousValue[currentValue];},obj);};µ.PolyChart=function module(){var config=[µ.PolyChart.defaultConfig()];var dispatch=d3.dispatch('hover');var dashArray={solid:'none',dash:[5,2],dot:[2,5]};var colorScale;function exports(){var geometryConfig=config[0].geometryConfig;var container=geometryConfig.container;if(typeof container=='string')container=d3.select(container);container.datum(config).each(function(_config,_index){var isStack=!!_config[0].data.yStack;var data=_config.map(function(d,i){if(isStack)return d3.zip(d.data.t[0],d.data.r[0],d.data.yStack[0]);else return d3.zip(d.data.t[0],d.data.r[0]);});var angularScale=geometryConfig.angularScale;var domainMin=geometryConfig.radialScale.domain()[0];var generator={};generator.bar=function(d,i,pI){var dataConfig=_config[pI].data;var h=geometryConfig.radialScale(d[1])-geometryConfig.radialScale(0);var stackTop=geometryConfig.radialScale(d[2]||0);var w=dataConfig.barWidth;d3.select(this).attr({'class':'mark bar',d:'M'+[[h+stackTop,-w/2],[h+stackTop,w/2],[stackTop,w/2],[stackTop,-w/2]].join('L')+'Z',transform:function transform(d,i){return'rotate('+(geometryConfig.orientation+angularScale(d[0]))+')';}});};generator.dot=function(d,i,pI){var stackedData=d[2]?[d[0],d[1]+d[2]]:d;var symbol=d3.svg.symbol().size(_config[pI].data.dotSize).type(_config[pI].data.dotType)(d,i);d3.select(this).attr({'class':'mark dot',d:symbol,transform:function transform(d,i){var coord=convertToCartesian(getPolarCoordinates(stackedData));return'translate('+[coord.x,coord.y]+')';}});};var line=d3.svg.line.radial().interpolate(_config[0].data.lineInterpolation).radius(function(d){return geometryConfig.radialScale(d[1]);}).angle(function(d){return geometryConfig.angularScale(d[0])*Math.PI/180;});generator.line=function(d,i,pI){var lineData=d[2]?data[pI].map(function(d,i){return[d[0],d[1]+d[2]];}):data[pI];d3.select(this).each(generator['dot']).style({opacity:function opacity(dB,iB){return+_config[pI].data.dotVisible;},fill:markStyle.stroke(d,i,pI)}).attr({'class':'mark dot'});if(i>0)return;var lineSelection=d3.select(this.parentNode).selectAll('path.line').data([0]);lineSelection.enter().insert('path');lineSelection.attr({'class':'line',d:line(lineData),transform:function transform(dB,iB){return'rotate('+(geometryConfig.orientation+90)+')';},'pointer-events':'none'}).style({fill:function fill(dB,iB){return markStyle.fill(d,i,pI);},'fill-opacity':0,stroke:function stroke(dB,iB){return markStyle.stroke(d,i,pI);},'stroke-width':function strokeWidth(dB,iB){return markStyle['stroke-width'](d,i,pI);},'stroke-dasharray':function strokeDasharray(dB,iB){return markStyle['stroke-dasharray'](d,i,pI);},opacity:function opacity(dB,iB){return markStyle.opacity(d,i,pI);},display:function display(dB,iB){return markStyle.display(d,i,pI);}});};var angularRange=geometryConfig.angularScale.range();var triangleAngle=Math.abs(angularRange[1]-angularRange[0])/data[0].length*Math.PI/180;var arc=d3.svg.arc().startAngle(function(d){return-triangleAngle/2;}).endAngle(function(d){return triangleAngle/2;}).innerRadius(function(d){return geometryConfig.radialScale(domainMin+(d[2]||0));}).outerRadius(function(d){return geometryConfig.radialScale(domainMin+(d[2]||0))+geometryConfig.radialScale(d[1]);});generator.arc=function(d,i,pI){d3.select(this).attr({'class':'mark arc',d:arc,transform:function transform(d,i){return'rotate('+(geometryConfig.orientation+angularScale(d[0])+90)+')';}});};var markStyle={fill:function fill(d,i,pI){return _config[pI].data.color;},stroke:function stroke(d,i,pI){return _config[pI].data.strokeColor;},'stroke-width':function strokeWidth(d,i,pI){return _config[pI].data.strokeSize+'px';},'stroke-dasharray':function strokeDasharray(d,i,pI){return dashArray[_config[pI].data.strokeDash];},opacity:function opacity(d,i,pI){return _config[pI].data.opacity;},display:function display(d,i,pI){return typeof _config[pI].data.visible==='undefined'||_config[pI].data.visible?'block':'none';}};var geometryLayer=d3.select(this).selectAll('g.layer').data(data);geometryLayer.enter().append('g').attr({'class':'layer'});var geometry=geometryLayer.selectAll('path.mark').data(function(d,i){return d;});geometry.enter().append('path').attr({'class':'mark'});geometry.style(markStyle).each(generator[geometryConfig.geometryType]);geometry.exit().remove();geometryLayer.exit().remove();function getPolarCoordinates(d,i){var r=geometryConfig.radialScale(d[1]);var t=(geometryConfig.angularScale(d[0])+geometryConfig.orientation)*Math.PI/180;return{r:r,t:t};}function convertToCartesian(polarCoordinates){var x=polarCoordinates.r*Math.cos(polarCoordinates.t);var y=polarCoordinates.r*Math.sin(polarCoordinates.t);return{x:x,y:y};}});}exports.config=function(_x){if(!arguments.length)return config;_x.forEach(function(d,i){if(!config[i])config[i]={};extendDeepAll(config[i],µ.PolyChart.defaultConfig());extendDeepAll(config[i],d);});return this;};exports.getColorScale=function(){return colorScale;};d3.rebind(exports,dispatch,'on');return exports;};µ.PolyChart.defaultConfig=function(){var config={data:{name:'geom1',t:[[1,2,3,4]],r:[[1,2,3,4]],dotType:'circle',dotSize:64,dotVisible:false,barWidth:20,color:'#ffa500',strokeSize:1,strokeColor:'silver',strokeDash:'solid',opacity:1,index:0,visible:true,visibleInLegend:true},geometryConfig:{geometry:'LinePlot',geometryType:'arc',direction:'clockwise',orientation:0,container:'body',radialScale:null,angularScale:null,colorScale:d3.scale.category20()}};return config;};µ.BarChart=function module(){return µ.PolyChart();};µ.BarChart.defaultConfig=function(){var config={geometryConfig:{geometryType:'bar'}};return config;};µ.AreaChart=function module(){return µ.PolyChart();};µ.AreaChart.defaultConfig=function(){var config={geometryConfig:{geometryType:'arc'}};return config;};µ.DotPlot=function module(){return µ.PolyChart();};µ.DotPlot.defaultConfig=function(){var config={geometryConfig:{geometryType:'dot',dotType:'circle'}};return config;};µ.LinePlot=function module(){return µ.PolyChart();};µ.LinePlot.defaultConfig=function(){var config={geometryConfig:{geometryType:'line'}};return config;};µ.Legend=function module(){var config=µ.Legend.defaultConfig();var dispatch=d3.dispatch('hover');function exports(){var legendConfig=config.legendConfig;var flattenData=config.data.map(function(d,i){return[].concat(d).map(function(dB,iB){var element=extendDeepAll({},legendConfig.elements[i]);element.name=dB;element.color=[].concat(legendConfig.elements[i].color)[iB];return element;});});var data=d3.merge(flattenData);data=data.filter(function(d,i){return legendConfig.elements[i]&&(legendConfig.elements[i].visibleInLegend||typeof legendConfig.elements[i].visibleInLegend==='undefined');});if(legendConfig.reverseOrder)data=data.reverse();var container=legendConfig.container;if(typeof container=='string'||container.nodeName)container=d3.select(container);var colors=data.map(function(d,i){return d.color;});var lineHeight=legendConfig.fontSize;var isContinuous=legendConfig.isContinuous==null?typeof data[0]==='number':legendConfig.isContinuous;var height=isContinuous?legendConfig.height:lineHeight*data.length;var legendContainerGroup=container.classed('legend-group',true);var svg=legendContainerGroup.selectAll('svg').data([0]);var svgEnter=svg.enter().append('svg').attr({width:300,height:height+lineHeight,xmlns:'http://www.w3.org/2000/svg','xmlns:xlink':'http://www.w3.org/1999/xlink',version:'1.1'});svgEnter.append('g').classed('legend-axis',true);svgEnter.append('g').classed('legend-marks',true);var dataNumbered=d3.range(data.length);var colorScale=d3.scale[isContinuous?'linear':'ordinal']().domain(dataNumbered).range(colors);var dataScale=d3.scale[isContinuous?'linear':'ordinal']().domain(dataNumbered)[isContinuous?'range':'rangePoints']([0,height]);var shapeGenerator=function shapeGenerator(_type,_size){var squareSize=_size*3;if(_type==='line'){return'M'+[[-_size/2,-_size/12],[_size/2,-_size/12],[_size/2,_size/12],[-_size/2,_size/12]]+'Z';}else if(d3.svg.symbolTypes.indexOf(_type)!=-1)return d3.svg.symbol().type(_type).size(squareSize)();else return d3.svg.symbol().type('square').size(squareSize)();};if(isContinuous){var gradient=svg.select('.legend-marks').append('defs').append('linearGradient').attr({id:'grad1',x1:'0%',y1:'0%',x2:'0%',y2:'100%'}).selectAll('stop').data(colors);gradient.enter().append('stop');gradient.attr({offset:function offset(d,i){return i/(colors.length-1)*100+'%';}}).style({'stop-color':function stopColor(d,i){return d;}});svg.append('rect').classed('legend-mark',true).attr({height:legendConfig.height,width:legendConfig.colorBandWidth,fill:'url(#grad1)'});}else{var legendElement=svg.select('.legend-marks').selectAll('path.legend-mark').data(data);legendElement.enter().append('path').classed('legend-mark',true);legendElement.attr({transform:function transform(d,i){return'translate('+[lineHeight/2,dataScale(i)+lineHeight/2]+')';},d:function d(_d2,i){var symbolType=_d2.symbol;return shapeGenerator(symbolType,lineHeight);},fill:function fill(d,i){return colorScale(i);}});legendElement.exit().remove();}var legendAxis=d3.svg.axis().scale(dataScale).orient('right');var axis=svg.select('g.legend-axis').attr({transform:'translate('+[isContinuous?legendConfig.colorBandWidth:lineHeight,lineHeight/2]+')'}).call(legendAxis);axis.selectAll('.domain').style({fill:'none',stroke:'none'});axis.selectAll('line').style({fill:'none',stroke:isContinuous?legendConfig.textColor:'none'});axis.selectAll('text').style({fill:legendConfig.textColor,'font-size':legendConfig.fontSize}).text(function(d,i){return data[i].name;});return exports;}exports.config=function(_x){if(!arguments.length)return config;extendDeepAll(config,_x);return this;};d3.rebind(exports,dispatch,'on');return exports;};µ.Legend.defaultConfig=function(d,i){var config={data:['a','b','c'],legendConfig:{elements:[{symbol:'line',color:'red'},{symbol:'square',color:'yellow'},{symbol:'diamond',color:'limegreen'}],height:150,colorBandWidth:30,fontSize:12,container:'body',isContinuous:null,textColor:'grey',reverseOrder:false}};return config;};µ.tooltipPanel=function(){var tooltipEl,tooltipTextEl,backgroundEl;var config={container:null,hasTick:false,fontSize:12,color:'white',padding:5};var id='tooltip-'+µ.tooltipPanel.uid++;var tickSize=10;var exports=function exports(){tooltipEl=config.container.selectAll('g.'+id).data([0]);var tooltipEnter=tooltipEl.enter().append('g').classed(id,true).style({'pointer-events':'none',display:'none'});backgroundEl=tooltipEnter.append('path').style({fill:'white','fill-opacity':.9}).attr({d:'M0 0'});tooltipTextEl=tooltipEnter.append('text').attr({dx:config.padding+tickSize,dy:+config.fontSize*.3});return exports;};exports.text=function(_text){var l=d3.hsl(config.color).l;var strokeColor=l>=.5?'#aaa':'white';var fillColor=l>=.5?'black':'white';var text=_text||'';tooltipTextEl.style({fill:fillColor,'font-size':config.fontSize+'px'}).text(text);var padding=config.padding;var bbox=tooltipTextEl.node().getBBox();var boxStyle={fill:config.color,stroke:strokeColor,'stroke-width':'2px'};var backGroundW=bbox.width+padding*2+tickSize;var backGroundH=bbox.height+padding*2;backgroundEl.attr({d:'M'+[[tickSize,-backGroundH/2],[tickSize,-backGroundH/4],[config.hasTick?0:tickSize,0],[tickSize,backGroundH/4],[tickSize,backGroundH/2],[backGroundW,backGroundH/2],[backGroundW,-backGroundH/2]].join('L')+'Z'}).style(boxStyle);tooltipEl.attr({transform:'translate('+[tickSize,-backGroundH/2+padding*2]+')'});tooltipEl.style({display:'block'});return exports;};exports.move=function(_pos){if(!tooltipEl)return;tooltipEl.attr({transform:'translate('+[_pos[0],_pos[1]]+')'}).style({display:'block'});return exports;};exports.hide=function(){if(!tooltipEl)return;tooltipEl.style({display:'none'});return exports;};exports.show=function(){if(!tooltipEl)return;tooltipEl.style({display:'block'});return exports;};exports.config=function(_x){extendDeepAll(config,_x);return exports;};return exports;};µ.tooltipPanel.uid=1;µ.adapter={};µ.adapter.plotly=function module(){var exports={};exports.convert=function(_inputConfig,reverse){var outputConfig={};if(_inputConfig.data){outputConfig.data=_inputConfig.data.map(function(d,i){var r=extendDeepAll({},d);var toTranslate=[[r,['marker','color'],['color']],[r,['marker','opacity'],['opacity']],[r,['marker','line','color'],['strokeColor']],[r,['marker','line','dash'],['strokeDash']],[r,['marker','line','width'],['strokeSize']],[r,['marker','symbol'],['dotType']],[r,['marker','size'],['dotSize']],[r,['marker','barWidth'],['barWidth']],[r,['line','interpolation'],['lineInterpolation']],[r,['showlegend'],['visibleInLegend']]];toTranslate.forEach(function(d,i){µ.util.translator.apply(null,d.concat(reverse));});if(!reverse)delete r.marker;if(reverse)delete r.groupId;if(!reverse){if(r.type==='scatter'){if(r.mode==='lines')r.geometry='LinePlot';else if(r.mode==='markers')r.geometry='DotPlot';else if(r.mode==='lines+markers'){r.geometry='LinePlot';r.dotVisible=true;}}else if(r.type==='area')r.geometry='AreaChart';else if(r.type==='bar')r.geometry='BarChart';delete r.mode;delete r.type;}else{if(r.geometry==='LinePlot'){r.type='scatter';if(r.dotVisible===true){delete r.dotVisible;r.mode='lines+markers';}else r.mode='lines';}else if(r.geometry==='DotPlot'){r.type='scatter';r.mode='markers';}else if(r.geometry==='AreaChart')r.type='area';else if(r.geometry==='BarChart')r.type='bar';delete r.geometry;}return r;});if(!reverse&&_inputConfig.layout&&_inputConfig.layout.barmode==='stack'){var duplicates=µ.util.duplicates(outputConfig.data.map(function(d,i){return d.geometry;}));outputConfig.data.forEach(function(d,i){var idx=duplicates.indexOf(d.geometry);if(idx!=-1)outputConfig.data[i].groupId=idx;});}}if(_inputConfig.layout){var r=extendDeepAll({},_inputConfig.layout);var toTranslate=[[r,['plot_bgcolor'],['backgroundColor']],[r,['showlegend'],['showLegend']],[r,['radialaxis'],['radialAxis']],[r,['angularaxis'],['angularAxis']],[r.angularaxis,['showline'],['gridLinesVisible']],[r.angularaxis,['showticklabels'],['labelsVisible']],[r.angularaxis,['nticks'],['ticksCount']],[r.angularaxis,['tickorientation'],['tickOrientation']],[r.angularaxis,['ticksuffix'],['ticksSuffix']],[r.angularaxis,['range'],['domain']],[r.angularaxis,['endpadding'],['endPadding']],[r.radialaxis,['showline'],['gridLinesVisible']],[r.radialaxis,['tickorientation'],['tickOrientation']],[r.radialaxis,['ticksuffix'],['ticksSuffix']],[r.radialaxis,['range'],['domain']],[r.angularAxis,['showline'],['gridLinesVisible']],[r.angularAxis,['showticklabels'],['labelsVisible']],[r.angularAxis,['nticks'],['ticksCount']],[r.angularAxis,['tickorientation'],['tickOrientation']],[r.angularAxis,['ticksuffix'],['ticksSuffix']],[r.angularAxis,['range'],['domain']],[r.angularAxis,['endpadding'],['endPadding']],[r.radialAxis,['showline'],['gridLinesVisible']],[r.radialAxis,['tickorientation'],['tickOrientation']],[r.radialAxis,['ticksuffix'],['ticksSuffix']],[r.radialAxis,['range'],['domain']],[r.font,['outlinecolor'],['outlineColor']],[r.legend,['traceorder'],['reverseOrder']],[r,['labeloffset'],['labelOffset']],[r,['defaultcolorrange'],['defaultColorRange']]];toTranslate.forEach(function(d,i){µ.util.translator.apply(null,d.concat(reverse));});if(!reverse){if(r.angularAxis&&typeof r.angularAxis.ticklen!=='undefined')r.tickLength=r.angularAxis.ticklen;if(r.angularAxis&&typeof r.angularAxis.tickcolor!=='undefined')r.tickColor=r.angularAxis.tickcolor;}else{if(typeof r.tickLength!=='undefined'){r.angularaxis.ticklen=r.tickLength;delete r.tickLength;}if(r.tickColor){r.angularaxis.tickcolor=r.tickColor;delete r.tickColor;}}if(r.legend&&typeof r.legend.reverseOrder!='boolean'){r.legend.reverseOrder=r.legend.reverseOrder!='normal';}if(r.legend&&typeof r.legend.traceorder=='boolean'){r.legend.traceorder=r.legend.traceorder?'reversed':'normal';delete r.legend.reverseOrder;}if(r.margin&&typeof r.margin.t!='undefined'){var source=['t','r','b','l','pad'];var target=['top','right','bottom','left','pad'];var margin={};d3.entries(r.margin).forEach(function(dB,iB){margin[target[source.indexOf(dB.key)]]=dB.value;});r.margin=margin;}if(reverse){delete r.needsEndSpacing;delete r.minorTickColor;delete r.minorTicks;delete r.angularaxis.ticksCount;delete r.angularaxis.ticksCount;delete r.angularaxis.ticksStep;delete r.angularaxis.rewriteTicks;delete r.angularaxis.nticks;delete r.radialaxis.ticksCount;delete r.radialaxis.ticksCount;delete r.radialaxis.ticksStep;delete r.radialaxis.rewriteTicks;delete r.radialaxis.nticks;}outputConfig.layout=r;}return outputConfig;};return exports;};},{\"../../../constants/alignment\":394,\"../../../lib\":423,\"d3\":71}],518:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/ /* eslint-disable new-cap */'use strict';var d3=_dereq_('d3');var Lib=_dereq_('../../../lib');var Color=_dereq_('../../../components/color');var micropolar=_dereq_('./micropolar');var UndoManager=_dereq_('./undo_manager');var extendDeepAll=Lib.extendDeepAll;var manager=module.exports={};manager.framework=function(_gd){var config,previousConfigClone,plot,convertedInput,container;var undoManager=new UndoManager();function exports(_inputConfig,_container){if(_container)container=_container;d3.select(d3.select(container).node().parentNode).selectAll('.svg-container>*:not(.chart-root)').remove();config=!config?_inputConfig:extendDeepAll(config,_inputConfig);if(!plot)plot=micropolar.Axis();convertedInput=micropolar.adapter.plotly().convert(config);plot.config(convertedInput).render(container);_gd.data=config.data;_gd.layout=config.layout;manager.fillLayout(_gd);return config;}exports.isPolar=true;exports.svg=function(){return plot.svg();};exports.getConfig=function(){return config;};exports.getLiveConfig=function(){return micropolar.adapter.plotly().convert(plot.getLiveConfig(),true);};exports.getLiveScales=function(){return{t:plot.angularScale(),r:plot.radialScale()};};exports.setUndoPoint=function(){var that=this;var configClone=micropolar.util.cloneJson(config);(function(_configClone,_previousConfigClone){undoManager.add({undo:function undo(){if(_previousConfigClone)that(_previousConfigClone);},redo:function redo(){that(_configClone);}});})(configClone,previousConfigClone);previousConfigClone=micropolar.util.cloneJson(configClone);};exports.undo=function(){undoManager.undo();};exports.redo=function(){undoManager.redo();};return exports;};manager.fillLayout=function(_gd){var container=d3.select(_gd).selectAll('.plot-container');var paperDiv=container.selectAll('.svg-container');var paper=_gd.framework&&_gd.framework.svg&&_gd.framework.svg();var dflts={width:800,height:600,paper_bgcolor:Color.background,_container:container,_paperdiv:paperDiv,_paper:paper};_gd._fullLayout=extendDeepAll(dflts,_gd.layout);};},{\"../../../components/color\":299,\"../../../lib\":423,\"./micropolar\":517,\"./undo_manager\":519,\"d3\":71}],519:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';// Modified from https://github.com/ArthurClemens/Javascript-Undo-Manager\n// Copyright (c) 2010-2013 Arthur Clemens, arthur@visiblearea.com\nmodule.exports=function UndoManager(){var undoCommands=[];var index=-1;var isExecuting=false;var callback;function execute(command,action){if(!command)return this;isExecuting=true;command[action]();isExecuting=false;return this;}return{add:function add(command){if(isExecuting)return this;undoCommands.splice(index+1,undoCommands.length-index);undoCommands.push(command);index=undoCommands.length-1;return this;},setCallback:function setCallback(callbackFunc){callback=callbackFunc;},undo:function undo(){var command=undoCommands[index];if(!command)return this;execute(command,'undo');index-=1;if(callback)callback(command.undo);return this;},redo:function redo(){var command=undoCommands[index+1];if(!command)return this;execute(command,'redo');index+=1;if(callback)callback(command.redo);return this;},clear:function clear(){undoCommands=[];index=-1;},hasUndo:function hasUndo(){return index!==-1;},hasRedo:function hasRedo(){return index<undoCommands.length-1;},getCommands:function getCommands(){return undoCommands;},getPreviousCommand:function getPreviousCommand(){return undoCommands[index-1];},getIndex:function getIndex(){return index;}};};},{}],520:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../lib');var Template=_dereq_('../plot_api/plot_template');var handleDomainDefaults=_dereq_('./domain').defaults;/**\n * Find and supply defaults to all subplots of a given type\n * This handles subplots that are contained within one container - so\n * gl3d, geo, ternary... but not 2d axes which have separate x and y axes\n * finds subplots, coerces their `domain` attributes, then calls the\n * given handleDefaults function to fill in everything else.\n *\n * layoutIn: the complete user-supplied input layout\n * layoutOut: the complete finished layout\n * fullData: the finished data array, used only to find subplots\n * opts: {\n *  type: subplot type string\n *  attributes: subplot attributes object\n *  partition: 'x' or 'y', which direction to divide domain space by default\n *      (default 'x', ie side-by-side subplots)\n *      TODO: this option is only here because 3D and geo made opposite\n *      choices in this regard previously and I didn't want to change it.\n *      Instead we should do:\n *      - something consistent\n *      - something more square (4 cuts 2x2, 5/6 cuts 2x3, etc.)\n *      - something that includes all subplot types in one arrangement,\n *        now that we can have them together!\n *  handleDefaults: function of (subplotLayoutIn, subplotLayoutOut, coerce, opts)\n *      this opts object is passed through to handleDefaults, so attach any\n *      additional items needed by this function here as well\n * }\n */module.exports=function handleSubplotDefaults(layoutIn,layoutOut,fullData,opts){var subplotType=opts.type;var subplotAttributes=opts.attributes;var handleDefaults=opts.handleDefaults;var partition=opts.partition||'x';var ids=layoutOut._subplots[subplotType];var idsLength=ids.length;var baseId=idsLength&&ids[0].replace(/\\d+$/,'');var subplotLayoutIn,subplotLayoutOut;function coerce(attr,dflt){return Lib.coerce(subplotLayoutIn,subplotLayoutOut,subplotAttributes,attr,dflt);}for(var i=0;i<idsLength;i++){var id=ids[i];// ternary traces get a layout ternary for free!\nif(layoutIn[id])subplotLayoutIn=layoutIn[id];else subplotLayoutIn=layoutIn[id]={};subplotLayoutOut=Template.newContainer(layoutOut,id,baseId);// All subplot containers get a `uirevision` inheriting from the base.\n// Currently all subplots containers have some user interaction\n// attributes, but if we ever add one that doesn't, we would need an\n// option to skip this step.\ncoerce('uirevision',layoutOut.uirevision);var dfltDomains={};dfltDomains[partition]=[i/idsLength,(i+1)/idsLength];handleDomainDefaults(subplotLayoutOut,layoutOut,coerce,dfltDomains);opts.id=id;handleDefaults(subplotLayoutIn,subplotLayoutOut,coerce,opts);}};},{\"../lib\":423,\"../plot_api/plot_template\":459,\"./domain\":495}],521:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Loggers=_dereq_('./lib/loggers');var noop=_dereq_('./lib/noop');var pushUnique=_dereq_('./lib/push_unique');var isPlainObject=_dereq_('./lib/is_plain_object');var ExtendModule=_dereq_('./lib/extend');var basePlotAttributes=_dereq_('./plots/attributes');var baseLayoutAttributes=_dereq_('./plots/layout_attributes');var extendFlat=ExtendModule.extendFlat;var extendDeepAll=ExtendModule.extendDeepAll;exports.modules={};exports.allCategories={};exports.allTypes=[];exports.subplotsRegistry={};exports.transformsRegistry={};exports.componentsRegistry={};exports.layoutArrayContainers=[];exports.layoutArrayRegexes=[];exports.traceLayoutAttributes={};exports.localeRegistry={};exports.apiMethodRegistry={};/**\n * Top-level register routine, exported as Plotly.register\n *\n * @param {object array or array of objects} _modules :\n *  module object or list of module object to register.\n *\n *  A valid `moduleType: 'trace'` module has fields:\n *  - name {string} : the trace type\n *  - categories {array} : categories associated with this trace type,\n *                         tested with Register.traceIs()\n *  - meta {object} : meta info (mostly for plot-schema)\n *\n *  A valid `moduleType: 'locale'` module has fields:\n *  - name {string} : the locale name. Should be a 2-digit language string ('en', 'de')\n *                    optionally with a country/region code ('en-GB', 'de-CH'). If a country\n *                    code is used but the base language locale has not yet been supplied,\n *                    we will use this locale for the base as well.\n *  - dictionary {object} : the dictionary mapping input strings to localized strings\n *                          generally the keys should be the literal input strings, but\n *                          if default translations are provided you can use any string as a key.\n *  - format {object} : a `d3.locale` format specifier for this locale\n *                      any omitted keys we'll fall back on en-US.\n *\n *  A valid `moduleType: 'transform'` module has fields:\n *  - name {string} : transform name\n *  - transform {function} : default-level transform function\n *  - calcTransform {function} : calc-level transform function\n *  - attributes {object} : transform attributes declarations\n *  - supplyDefaults {function} : attributes default-supply function\n *\n *  A valid `moduleType: 'component'` module has fields:\n *  - name {string} : the component name, used it with Register.getComponentMethod()\n *                    to employ component method.\n *\n *  A valid `moduleType: 'apiMethod'` module has fields:\n *  - name {string} : the api method name.\n *  - fn {function} : the api method called with Register.call();\n *\n */exports.register=function register(_modules){if(!_modules){throw new Error('No argument passed to Plotly.register.');}else if(_modules&&!Array.isArray(_modules)){_modules=[_modules];}for(var i=0;i<_modules.length;i++){var newModule=_modules[i];if(!newModule){throw new Error('Invalid module was attempted to be registered!');}switch(newModule.moduleType){case'trace':registerTraceModule(newModule);break;case'transform':registerTransformModule(newModule);break;case'component':registerComponentModule(newModule);break;case'locale':registerLocale(newModule);break;case'apiMethod':var name=newModule.name;exports.apiMethodRegistry[name]=newModule.fn;break;default:throw new Error('Invalid module was attempted to be registered!');}}};/**\n * Get registered module using trace object or trace type\n *\n * @param {object||string} trace\n *  trace object with prop 'type' or trace type as a string\n * @return {object}\n *  module object corresponding to trace type\n */exports.getModule=function(trace){var _module=exports.modules[getTraceType(trace)];if(!_module)return false;return _module._module;};/**\n * Determine if this trace type is in a given category\n *\n * @param {object||string} traceType\n *  a trace (object) or trace type (string)\n * @param {string} category\n *  category in question\n * @return {boolean}\n */exports.traceIs=function(traceType,category){traceType=getTraceType(traceType);// old plot.ly workspace hack, nothing to see here\nif(traceType==='various')return false;var _module=exports.modules[traceType];if(!_module){if(traceType&&traceType!=='area'){Loggers.log('Unrecognized trace type '+traceType+'.');}_module=exports.modules[basePlotAttributes.type.dflt];}return!!_module.categories[category];};/**\n * Determine if this trace has a transform of the given type and return\n * array of matching indices.\n *\n * @param {object} data\n *  a trace object (member of data or fullData)\n * @param {string} type\n *  type of trace to test\n * @return {array}\n *  array of matching indices. If none found, returns []\n */exports.getTransformIndices=function(data,type){var indices=[];var transforms=data.transforms||[];for(var i=0;i<transforms.length;i++){if(transforms[i].type===type){indices.push(i);}}return indices;};/**\n * Determine if this trace has a transform of the given type\n *\n * @param {object} data\n *  a trace object (member of data or fullData)\n * @param {string} type\n *  type of trace to test\n * @return {boolean}\n */exports.hasTransform=function(data,type){var transforms=data.transforms||[];for(var i=0;i<transforms.length;i++){if(transforms[i].type===type){return true;}}return false;};/**\n * Retrieve component module method. Falls back on noop if either the\n * module or the method is missing, so the result can always be safely called\n *\n * @param {string} name\n *  name of component (as declared in component module)\n * @param {string} method\n *  name of component module method\n * @return {function}\n */exports.getComponentMethod=function(name,method){var _module=exports.componentsRegistry[name];if(!_module)return noop;return _module[method]||noop;};/**\n * Call registered api method.\n *\n * @param {string} name : api method name\n * @param {...array} args : arguments passed to api method\n * @return {any} : returns api method output\n */exports.call=function(){var name=arguments[0];var args=[].slice.call(arguments,1);return exports.apiMethodRegistry[name].apply(null,args);};function registerTraceModule(_module){var thisType=_module.name;var categoriesIn=_module.categories;var meta=_module.meta;if(exports.modules[thisType]){Loggers.log('Type '+thisType+' already registered');return;}if(!exports.subplotsRegistry[_module.basePlotModule.name]){registerSubplot(_module.basePlotModule);}var categoryObj={};for(var i=0;i<categoriesIn.length;i++){categoryObj[categoriesIn[i]]=true;exports.allCategories[categoriesIn[i]]=true;}exports.modules[thisType]={_module:_module,categories:categoryObj};if(meta&&Object.keys(meta).length){exports.modules[thisType].meta=meta;}exports.allTypes.push(thisType);for(var componentName in exports.componentsRegistry){mergeComponentAttrsToTrace(componentName,thisType);}/*\n     * Collect all trace layout attributes in one place for easier lookup later\n     * but don't merge them into the base schema as it would confuse the docs\n     * (at least after https://github.com/plotly/documentation/issues/202 gets done!)\n     */if(_module.layoutAttributes){extendFlat(exports.traceLayoutAttributes,_module.layoutAttributes);}}function registerSubplot(_module){var plotType=_module.name;if(exports.subplotsRegistry[plotType]){Loggers.log('Plot type '+plotType+' already registered.');return;}// relayout array handling will look for component module methods with this\n// name and won't find them because this is a subplot module... but that\n// should be fine, it will just fall back on redrawing the plot.\nfindArrayRegexps(_module);// not sure what's best for the 'cartesian' type at this point\nexports.subplotsRegistry[plotType]=_module;for(var componentName in exports.componentsRegistry){mergeComponentAttrsToSubplot(componentName,_module.name);}}function registerComponentModule(_module){if(typeof _module.name!=='string'){throw new Error('Component module *name* must be a string.');}var name=_module.name;exports.componentsRegistry[name]=_module;if(_module.layoutAttributes){if(_module.layoutAttributes._isLinkedToArray){pushUnique(exports.layoutArrayContainers,name);}findArrayRegexps(_module);}for(var traceType in exports.modules){mergeComponentAttrsToTrace(name,traceType);}for(var subplotName in exports.subplotsRegistry){mergeComponentAttrsToSubplot(name,subplotName);}for(var transformType in exports.transformsRegistry){mergeComponentAttrsToTransform(name,transformType);}if(_module.schema&&_module.schema.layout){extendDeepAll(baseLayoutAttributes,_module.schema.layout);}}function registerTransformModule(_module){if(typeof _module.name!=='string'){throw new Error('Transform module *name* must be a string.');}var prefix='Transform module '+_module.name;var hasTransform=typeof _module.transform==='function';var hasCalcTransform=typeof _module.calcTransform==='function';if(!hasTransform&&!hasCalcTransform){throw new Error(prefix+' is missing a *transform* or *calcTransform* method.');}if(hasTransform&&hasCalcTransform){Loggers.log([prefix+' has both a *transform* and *calcTransform* methods.','Please note that all *transform* methods are executed','before all *calcTransform* methods.'].join(' '));}if(!isPlainObject(_module.attributes)){Loggers.log(prefix+' registered without an *attributes* object.');}if(typeof _module.supplyDefaults!=='function'){Loggers.log(prefix+' registered without a *supplyDefaults* method.');}exports.transformsRegistry[_module.name]=_module;for(var componentName in exports.componentsRegistry){mergeComponentAttrsToTransform(componentName,_module.name);}}function registerLocale(_module){var locale=_module.name;var baseLocale=locale.split('-')[0];var newDict=_module.dictionary;var newFormat=_module.format;var hasDict=newDict&&Object.keys(newDict).length;var hasFormat=newFormat&&Object.keys(newFormat).length;var locales=exports.localeRegistry;var localeObj=locales[locale];if(!localeObj)locales[locale]=localeObj={};// Should we use this dict for the base locale?\n// In case we're overwriting a previous dict for this locale, check\n// whether the base matches the full locale dict now. If we're not\n// overwriting, locales[locale] is undefined so this just checks if\n// baseLocale already had a dict or not.\n// Same logic for dateFormats\nif(baseLocale!==locale){var baseLocaleObj=locales[baseLocale];if(!baseLocaleObj)locales[baseLocale]=baseLocaleObj={};if(hasDict&&baseLocaleObj.dictionary===localeObj.dictionary){baseLocaleObj.dictionary=newDict;}if(hasFormat&&baseLocaleObj.format===localeObj.format){baseLocaleObj.format=newFormat;}}if(hasDict)localeObj.dictionary=newDict;if(hasFormat)localeObj.format=newFormat;}function findArrayRegexps(_module){if(_module.layoutAttributes){var arrayAttrRegexps=_module.layoutAttributes._arrayAttrRegexps;if(arrayAttrRegexps){for(var i=0;i<arrayAttrRegexps.length;i++){pushUnique(exports.layoutArrayRegexes,arrayAttrRegexps[i]);}}}}function mergeComponentAttrsToTrace(componentName,traceType){var componentSchema=exports.componentsRegistry[componentName].schema;if(!componentSchema||!componentSchema.traces)return;var traceAttrs=componentSchema.traces[traceType];if(traceAttrs){extendDeepAll(exports.modules[traceType]._module.attributes,traceAttrs);}}function mergeComponentAttrsToTransform(componentName,transformType){var componentSchema=exports.componentsRegistry[componentName].schema;if(!componentSchema||!componentSchema.transforms)return;var transformAttrs=componentSchema.transforms[transformType];if(transformAttrs){extendDeepAll(exports.transformsRegistry[transformType].attributes,transformAttrs);}}function mergeComponentAttrsToSubplot(componentName,subplotName){var componentSchema=exports.componentsRegistry[componentName].schema;if(!componentSchema||!componentSchema.subplots)return;var subplotModule=exports.subplotsRegistry[subplotName];var subplotAttrs=subplotModule.layoutAttributes;var subplotAttr=subplotModule.attr==='subplot'?subplotModule.name:subplotModule.attr;if(Array.isArray(subplotAttr))subplotAttr=subplotAttr[0];var componentLayoutAttrs=componentSchema.subplots[subplotAttr];if(subplotAttrs&&componentLayoutAttrs){extendDeepAll(subplotAttrs,componentLayoutAttrs);}}function getTraceType(traceType){if(_typeof(traceType)==='object')traceType=traceType.type;return traceType;}},{\"./lib/extend\":416,\"./lib/is_plain_object\":424,\"./lib/loggers\":427,\"./lib/noop\":432,\"./lib/push_unique\":436,\"./plots/attributes\":466,\"./plots/layout_attributes\":511}],522:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../lib');var extendFlat=Lib.extendFlat;var extendDeep=Lib.extendDeep;// Put default plotTile layouts here\nfunction cloneLayoutOverride(tileClass){var override;switch(tileClass){case'themes__thumb':override={autosize:true,width:150,height:150,title:{text:''},showlegend:false,margin:{l:5,r:5,t:5,b:5,pad:0},annotations:[]};break;case'thumbnail':override={title:{text:''},hidesources:true,showlegend:false,borderwidth:0,bordercolor:'',margin:{l:1,r:1,t:1,b:1,pad:0},annotations:[]};break;default:override={};}return override;}function keyIsAxis(keyName){var types=['xaxis','yaxis','zaxis'];return types.indexOf(keyName.slice(0,5))>-1;}module.exports=function clonePlot(graphObj,options){// Polar plot compatibility\nif(graphObj.framework&&graphObj.framework.isPolar){graphObj=graphObj.framework.getConfig();}var i;var oldData=graphObj.data;var oldLayout=graphObj.layout;var newData=extendDeep([],oldData);var newLayout=extendDeep({},oldLayout,cloneLayoutOverride(options.tileClass));var context=graphObj._context||{};if(options.width)newLayout.width=options.width;if(options.height)newLayout.height=options.height;if(options.tileClass==='thumbnail'||options.tileClass==='themes__thumb'){// kill annotations\nnewLayout.annotations=[];var keys=Object.keys(newLayout);for(i=0;i<keys.length;i++){if(keyIsAxis(keys[i])){newLayout[keys[i]].title={text:''};}}// kill colorbar and pie labels\nfor(i=0;i<newData.length;i++){var trace=newData[i];trace.showscale=false;if(trace.marker)trace.marker.showscale=false;if(trace.type==='pie')trace.textposition='none';}}if(Array.isArray(options.annotations)){for(i=0;i<options.annotations.length;i++){newLayout.annotations.push(options.annotations[i]);}}// TODO: does this scene modification really belong here?\n// If we still need it, can it move into the gl3d module?\nvar sceneIds=Object.keys(newLayout).filter(function(key){return key.match(/^scene\\d*$/);});if(sceneIds.length){var axesImageOverride={};if(options.tileClass==='thumbnail'){axesImageOverride={title:{text:''},showaxeslabels:false,showticklabels:false,linetickenable:false};}for(i=0;i<sceneIds.length;i++){var scene=newLayout[sceneIds[i]];if(!scene.xaxis){scene.xaxis={};}if(!scene.yaxis){scene.yaxis={};}if(!scene.zaxis){scene.zaxis={};}extendFlat(scene.xaxis,axesImageOverride);extendFlat(scene.yaxis,axesImageOverride);extendFlat(scene.zaxis,axesImageOverride);// TODO what does this do?\nscene._scene=null;}}var gd=document.createElement('div');if(options.tileClass)gd.className=options.tileClass;var plotTile={gd:gd,td:gd,// for external (image server) compatibility\nlayout:newLayout,data:newData,config:{staticPlot:options.staticPlot===undefined?true:options.staticPlot,plotGlPixelRatio:options.plotGlPixelRatio===undefined?2:options.plotGlPixelRatio,displaylogo:options.displaylogo||false,showLink:options.showLink||false,showTips:options.showTips||false,mapboxAccessToken:context.mapboxAccessToken}};if(options.setBackground!=='transparent'){plotTile.config.setBackground=options.setBackground||'opaque';}// attaching the default Layout the gd, so you can grab it later\nplotTile.gd.defaultLayout=cloneLayoutOverride(options.tileClass);return plotTile;};},{\"../lib\":423}],523:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var toImage=_dereq_('../plot_api/to_image');var Lib=_dereq_('../lib');// for isIE\nvar fileSaver=_dereq_('./filesaver');/** Plotly.downloadImage\n *\n * @param {object | string | HTML div} gd\n *   can either be a data/layout/config object\n *   or an existing graph <div>\n *   or an id to an existing graph <div>\n * @param {object} opts (see ../plot_api/to_image)\n * @return {promise}\n */function downloadImage(gd,opts){var _gd;if(!Lib.isPlainObject(gd))_gd=Lib.getGraphDiv(gd);// check for undefined opts\nopts=opts||{};// default to png\nopts.format=opts.format||'png';return new Promise(function(resolve,reject){if(_gd&&_gd._snapshotInProgress){reject(new Error('Snapshotting already in progress.'));}// see comments within svgtoimg for additional\n//   discussion of problems with IE\n//   can now draw to canvas, but CORS tainted canvas\n//   does not allow toDataURL\n//   svg format will work though\nif(Lib.isIE()&&opts.format!=='svg'){reject(new Error('Sorry IE does not support downloading from canvas. Try {format:\\'svg\\'} instead.'));}if(_gd)_gd._snapshotInProgress=true;var promise=toImage(gd,opts);var filename=opts.filename||gd.fn||'newplot';filename+='.'+opts.format;promise.then(function(result){if(_gd)_gd._snapshotInProgress=false;return fileSaver(result,filename);}).then(function(name){resolve(name);}).catch(function(err){if(_gd)_gd._snapshotInProgress=false;reject(err);});});}module.exports=downloadImage;},{\"../lib\":423,\"../plot_api/to_image\":462,\"./filesaver\":524}],524:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/ /*\n* substantial portions of this code from FileSaver.js\n* https://github.com/eligrey/FileSaver.js\n* License: https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n* 1.1.20160328\n*\n* By Eli Grey, http://eligrey.com\n* License: MIT\n*   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n*/'use strict';var fileSaver=function fileSaver(url,name){var saveLink=document.createElement('a');var canUseSaveLink='download'in saveLink;var isSafari=/Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent);var promise=new Promise(function(resolve,reject){// IE <10 is explicitly unsupported\nif(typeof navigator!=='undefined'&&/MSIE [1-9]\\./.test(navigator.userAgent)){reject(new Error('IE < 10 unsupported'));}// First try a.download, then web filesystem, then object URLs\nif(isSafari){// Safari doesn't allow downloading of blob urls\ndocument.location.href='data:application/octet-stream'+url.slice(url.search(/[,;]/));resolve(name);}if(!name){name='download';}if(canUseSaveLink){saveLink.href=url;saveLink.download=name;document.body.appendChild(saveLink);saveLink.click();document.body.removeChild(saveLink);resolve(name);}// IE 10+ (native saveAs)\nif(typeof navigator!=='undefined'&&navigator.msSaveBlob){// At this point we are only dealing with a SVG encoded as\n// a data URL (since IE only supports SVG)\nvar encoded=url.split(/^data:image\\/svg\\+xml,/)[1];var svg=decodeURIComponent(encoded);navigator.msSaveBlob(new Blob([svg]),name);resolve(name);}reject(new Error('download error'));});return promise;};module.exports=fileSaver;},{}],525:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';exports.getDelay=function(fullLayout){if(!fullLayout._has)return 0;return fullLayout._has('gl3d')||fullLayout._has('gl2d')||fullLayout._has('mapbox')?500:0;};exports.getRedrawFunc=function(gd){var fullLayout=gd._fullLayout||{};var hasPolar=fullLayout._has&&fullLayout._has('polar');var hasLegacyPolar=!hasPolar&&gd.data&&gd.data[0]&&gd.data[0].r;// do not work for legacy polar\nif(hasLegacyPolar)return;return function(){(gd.calcdata||[]).forEach(function(d){if(d[0]&&d[0].t&&d[0].t.cb)d[0].t.cb();});};};},{}],526:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var helpers=_dereq_('./helpers');var Snapshot={getDelay:helpers.getDelay,getRedrawFunc:helpers.getRedrawFunc,clone:_dereq_('./cloneplot'),toSVG:_dereq_('./tosvg'),svgToImg:_dereq_('./svgtoimg'),toImage:_dereq_('./toimage'),downloadImage:_dereq_('./download')};module.exports=Snapshot;},{\"./cloneplot\":522,\"./download\":523,\"./helpers\":525,\"./svgtoimg\":527,\"./toimage\":528,\"./tosvg\":529}],527:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../lib');var EventEmitter=_dereq_('events').EventEmitter;function svgToImg(opts){var ev=opts.emitter||new EventEmitter();var promise=new Promise(function(resolve,reject){var Image=window.Image;var svg=opts.svg;var format=opts.format||'png';// IE only support svg\nif(Lib.isIE()&&format!=='svg'){var ieSvgError=new Error('Sorry IE does not support downloading from canvas. Try {format:\\'svg\\'} instead.');reject(ieSvgError);// eventually remove the ev\n//  in favor of promises\nif(!opts.promise){return ev.emit('error',ieSvgError);}else{return promise;}}var canvas=opts.canvas;var scale=opts.scale||1;var w0=opts.width||300;var h0=opts.height||150;var w1=scale*w0;var h1=scale*h0;var ctx=canvas.getContext('2d');var img=new Image();// for Safari support, eliminate createObjectURL\n//  this decision could cause problems if content\n//  is not restricted to svg\nvar url='data:image/svg+xml,'+encodeURIComponent(svg);canvas.width=w1;canvas.height=h1;img.onload=function(){var imgData;// don't need to draw to canvas if svg\n//  save some time and also avoid failure on IE\nif(format!=='svg'){ctx.drawImage(img,0,0,w1,h1);}switch(format){case'jpeg':imgData=canvas.toDataURL('image/jpeg');break;case'png':imgData=canvas.toDataURL('image/png');break;case'webp':imgData=canvas.toDataURL('image/webp');break;case'svg':imgData=url;break;default:var errorMsg='Image format is not jpeg, png, svg or webp.';reject(new Error(errorMsg));// eventually remove the ev\n//  in favor of promises\nif(!opts.promise){return ev.emit('error',errorMsg);}}resolve(imgData);// eventually remove the ev\n//  in favor of promises\nif(!opts.promise){ev.emit('success',imgData);}};img.onerror=function(err){reject(err);// eventually remove the ev\n//  in favor of promises\nif(!opts.promise){return ev.emit('error',err);}};img.src=url;});// temporary for backward compatibility\n//  move to only Promise in 2.0.0\n//  and eliminate the EventEmitter\nif(opts.promise){return promise;}return ev;}module.exports=svgToImg;},{\"../lib\":423,\"events\":42}],528:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var EventEmitter=_dereq_('events').EventEmitter;var Registry=_dereq_('../registry');var Lib=_dereq_('../lib');var helpers=_dereq_('./helpers');var clonePlot=_dereq_('./cloneplot');var toSVG=_dereq_('./tosvg');var svgToImg=_dereq_('./svgtoimg');/**\n * @param {object} gd figure Object\n * @param {object} opts option object\n * @param opts.format 'jpeg' | 'png' | 'webp' | 'svg'\n */function toImage(gd,opts){// first clone the GD so we can operate in a clean environment\nvar ev=new EventEmitter();var clone=clonePlot(gd,{format:'png'});var clonedGd=clone.gd;// put the cloned div somewhere off screen before attaching to DOM\nclonedGd.style.position='absolute';clonedGd.style.left='-5000px';document.body.appendChild(clonedGd);function wait(){var delay=helpers.getDelay(clonedGd._fullLayout);setTimeout(function(){var svg=toSVG(clonedGd);var canvas=document.createElement('canvas');canvas.id=Lib.randstr();ev=svgToImg({format:opts.format,width:clonedGd._fullLayout.width,height:clonedGd._fullLayout.height,canvas:canvas,emitter:ev,svg:svg});ev.clean=function(){if(clonedGd)document.body.removeChild(clonedGd);};},delay);}var redrawFunc=helpers.getRedrawFunc(clonedGd);Registry.call('plot',clonedGd,clone.data,clone.layout,clone.config).then(redrawFunc).then(wait).catch(function(err){ev.emit('error',err);});return ev;}module.exports=toImage;},{\"../lib\":423,\"../registry\":521,\"./cloneplot\":522,\"./helpers\":525,\"./svgtoimg\":527,\"./tosvg\":529,\"events\":42}],529:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Lib=_dereq_('../lib');var Drawing=_dereq_('../components/drawing');var Color=_dereq_('../components/color');var xmlnsNamespaces=_dereq_('../constants/xmlns_namespaces');var DOUBLEQUOTE_REGEX=/\"/g;var DUMMY_SUB='TOBESTRIPPED';var DUMMY_REGEX=new RegExp('(\"'+DUMMY_SUB+')|('+DUMMY_SUB+'\")','g');function htmlEntityDecode(s){var hiddenDiv=d3.select('body').append('div').style({display:'none'}).html('');var replaced=s.replace(/(&[^;]*;)/gi,function(d){if(d==='&lt;'){return'&#60;';}// special handling for brackets\nif(d==='&rt;'){return'&#62;';}if(d.indexOf('<')!==-1||d.indexOf('>')!==-1){return'';}return hiddenDiv.html(d).text();// everything else, let the browser decode it to unicode\n});hiddenDiv.remove();return replaced;}function xmlEntityEncode(str){return str.replace(/&(?!\\w+;|\\#[0-9]+;| \\#x[0-9A-F]+;)/g,'&amp;');}module.exports=function toSVG(gd,format,scale){var fullLayout=gd._fullLayout;var svg=fullLayout._paper;var toppaper=fullLayout._toppaper;var width=fullLayout.width;var height=fullLayout.height;var i;// make background color a rect in the svg, then revert after scraping\n// all other alterations have been dealt with by properly preparing the svg\n// in the first place... like setting cursors with css classes so we don't\n// have to remove them, and providing the right namespaces in the svg to\n// begin with\nsvg.insert('rect',':first-child').call(Drawing.setRect,0,0,width,height).call(Color.fill,fullLayout.paper_bgcolor);// subplot-specific to-SVG methods\n// which notably add the contents of the gl-container\n// into the main svg node\nvar basePlotModules=fullLayout._basePlotModules||[];for(i=0;i<basePlotModules.length;i++){var _module=basePlotModules[i];if(_module.toSVG)_module.toSVG(gd);}// add top items above them assumes everything in toppaper is either\n// a group or a defs, and if it's empty (like hoverlayer) we can ignore it.\nif(toppaper){var nodes=toppaper.node().childNodes;// make copy of nodes as childNodes prop gets mutated in loop below\nvar topGroups=Array.prototype.slice.call(nodes);for(i=0;i<topGroups.length;i++){var topGroup=topGroups[i];if(topGroup.childNodes.length)svg.node().appendChild(topGroup);}}// remove draglayer for Adobe Illustrator compatibility\nif(fullLayout._draggers){fullLayout._draggers.remove();}// in case the svg element had an explicit background color, remove this\n// we want the rect to get the color so it's the right size; svg bg will\n// fill whatever container it's displayed in regardless of plot size.\nsvg.node().style.background='';svg.selectAll('text').attr({'data-unformatted':null,'data-math':null}).each(function(){var txt=d3.select(this);// hidden text is pre-formatting mathjax, the browser ignores it\n// but in a static plot it's useless and it can confuse batik\n// we've tried to standardize on display:none but make sure we still\n// catch visibility:hidden if it ever arises\nif(this.style.visibility==='hidden'||this.style.display==='none'){txt.remove();return;}else{// clear other visibility/display values to default\n// to not potentially confuse non-browser SVG implementations\ntxt.style({visibility:null,display:null});}// Font family styles break things because of quotation marks,\n// so we must remove them *after* the SVG DOM has been serialized\n// to a string (browsers convert singles back)\nvar ff=this.style.fontFamily;if(ff&&ff.indexOf('\"')!==-1){txt.style('font-family',ff.replace(DOUBLEQUOTE_REGEX,DUMMY_SUB));}});svg.selectAll('.point, .scatterpts, .legendfill>path, .legendlines>path, .cbfill').each(function(){var pt=d3.select(this);// similar to font family styles above,\n// we must remove \" after the SVG DOM has been serialized\nvar fill=this.style.fill;if(fill&&fill.indexOf('url(')!==-1){pt.style('fill',fill.replace(DOUBLEQUOTE_REGEX,DUMMY_SUB));}var stroke=this.style.stroke;if(stroke&&stroke.indexOf('url(')!==-1){pt.style('stroke',stroke.replace(DOUBLEQUOTE_REGEX,DUMMY_SUB));}});if(format==='pdf'||format==='eps'){// these formats make the extra line MathJax adds around symbols look super thick in some cases\n// it looks better if this is removed entirely.\nsvg.selectAll('#MathJax_SVG_glyphs path').attr('stroke-width',0);}// fix for IE namespacing quirk?\n// http://stackoverflow.com/questions/19610089/unwanted-namespaces-on-svg-markup-when-using-xmlserializer-in-javascript-with-ie\nsvg.node().setAttributeNS(xmlnsNamespaces.xmlns,'xmlns',xmlnsNamespaces.svg);svg.node().setAttributeNS(xmlnsNamespaces.xmlns,'xmlns:xlink',xmlnsNamespaces.xlink);if(format==='svg'&&scale){svg.attr('width',scale*width);svg.attr('height',scale*height);svg.attr('viewBox','0 0 '+width+' '+height);}var s=new window.XMLSerializer().serializeToString(svg.node());s=htmlEntityDecode(s);s=xmlEntityEncode(s);// Fix quotations around font strings and gradient URLs\ns=s.replace(DUMMY_REGEX,'\\'');// IE is very strict, so we will need to clean\n//  svg with the following regex\n//  yes this is messy, but do not know a better way\n// Even with this IE will not work due to tainted canvas\n//  see https://github.com/kangax/fabric.js/issues/1957\n//      http://stackoverflow.com/questions/18112047/canvas-todataurl-working-in-all-browsers-except-ie10\n// Leave here just in case the CORS/tainted IE issue gets resolved\nif(Lib.isIE()){// replace double quote with single quote\ns=s.replace(/\"/gi,'\\'');// url in svg are single quoted\n//   since we changed double to single\n//   we'll need to change these to double-quoted\ns=s.replace(/(\\('#)([^']*)('\\))/gi,'(\\\"#$2\\\")');// font names with spaces will be escaped single-quoted\n//   we'll need to change these to double-quoted\ns=s.replace(/(\\\\')/gi,'\\\"');}return s;};},{\"../components/color\":299,\"../components/drawing\":320,\"../constants/xmlns_namespaces\":399,\"../lib\":423,\"d3\":71}],530:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');exports.formatPiePercent=function formatPiePercent(v,separators){var vRounded=(v*100).toPrecision(3);if(vRounded.lastIndexOf('.')!==-1){vRounded=vRounded.replace(/[.]?0+$/,'');}return Lib.numSeparate(vRounded,separators)+'%';};exports.formatPieValue=function formatPieValue(v,separators){var vRounded=v.toPrecision(10);if(vRounded.lastIndexOf('.')!==-1){vRounded=vRounded.replace(/[.]?0+$/,'');}return Lib.numSeparate(vRounded,separators);};exports.getFirstFilled=function getFirstFilled(array,indices){if(!Array.isArray(array))return;for(var i=0;i<indices.length;i++){var v=array[indices[i]];if(v||v===0)return v;}};exports.castOption=function castOption(item,indices){if(Array.isArray(item))return exports.getFirstFilled(item,indices);else if(item)return item;};},{\"../../lib\":423}],531:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Color=_dereq_('../../components/color');var castOption=_dereq_('./helpers').castOption;module.exports=function styleOne(s,pt,trace){var line=trace.marker.line;var lineColor=castOption(line.color,pt.pts)||Color.defaultLine;var lineWidth=castOption(line.width,pt.pts)||0;s.style({'stroke-width':lineWidth}).call(Color.fill,pt.color).call(Color.stroke,lineColor);};},{\"../../components/color\":299,\"./helpers\":530}],532:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');// arrayOk attributes, merge them into calcdata array\nmodule.exports=function arraysToCalcdata(cd,trace){// so each point knows which index it originally came from\nfor(var i=0;i<cd.length;i++){cd[i].i=i;}Lib.mergeArray(trace.text,cd,'tx');Lib.mergeArray(trace.hovertext,cd,'htx');Lib.mergeArray(trace.customdata,cd,'data');Lib.mergeArray(trace.textposition,cd,'tp');if(trace.textfont){Lib.mergeArray(trace.textfont.size,cd,'ts');Lib.mergeArray(trace.textfont.color,cd,'tc');Lib.mergeArray(trace.textfont.family,cd,'tf');}var marker=trace.marker;if(marker){Lib.mergeArray(marker.size,cd,'ms');Lib.mergeArray(marker.opacity,cd,'mo');Lib.mergeArray(marker.symbol,cd,'mx');Lib.mergeArray(marker.color,cd,'mc');var markerLine=marker.line;if(marker.line){Lib.mergeArray(markerLine.color,cd,'mlc');Lib.mergeArray(markerLine.width,cd,'mlw');}var markerGradient=marker.gradient;if(markerGradient&&markerGradient.type!=='none'){Lib.mergeArray(markerGradient.type,cd,'mgt');Lib.mergeArray(markerGradient.color,cd,'mgc');}}};},{\"../../lib\":423}],533:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var hovertemplateAttrs=_dereq_('../../components/fx/hovertemplate_attributes');var colorAttributes=_dereq_('../../components/colorscale/attributes');var colorbarAttrs=_dereq_('../../components/colorbar/attributes');var fontAttrs=_dereq_('../../plots/font_attributes');var dash=_dereq_('../../components/drawing/attributes').dash;var Drawing=_dereq_('../../components/drawing');var constants=_dereq_('./constants');var extendFlat=_dereq_('../../lib/extend').extendFlat;module.exports={x:{valType:'data_array',editType:'calc+clearAxisTypes'},x0:{valType:'any',dflt:0,editType:'calc+clearAxisTypes'},dx:{valType:'number',dflt:1,editType:'calc'},y:{valType:'data_array',editType:'calc+clearAxisTypes'},y0:{valType:'any',dflt:0,editType:'calc+clearAxisTypes'},dy:{valType:'number',dflt:1,editType:'calc'},stackgroup:{valType:'string',dflt:'',editType:'calc'},orientation:{valType:'enumerated',values:['v','h'],editType:'calc'},groupnorm:{valType:'enumerated',values:['','fraction','percent'],dflt:'',editType:'calc'},stackgaps:{valType:'enumerated',values:['infer zero','interpolate'],dflt:'infer zero',editType:'calc'},text:{valType:'string',dflt:'',arrayOk:true,editType:'calc'},hovertext:{valType:'string',dflt:'',arrayOk:true,editType:'style'},mode:{valType:'flaglist',flags:['lines','markers','text'],extras:['none'],editType:'calc'},hoveron:{valType:'flaglist',flags:['points','fills'],editType:'style'},hovertemplate:hovertemplateAttrs({},{keys:constants.eventDataKeys}),line:{color:{valType:'color',editType:'style'},width:{valType:'number',min:0,dflt:2,editType:'style'},shape:{valType:'enumerated',values:['linear','spline','hv','vh','hvh','vhv'],dflt:'linear',editType:'plot'},smoothing:{valType:'number',min:0,max:1.3,dflt:1,editType:'plot'},dash:extendFlat({},dash,{editType:'style'}),simplify:{valType:'boolean',dflt:true,editType:'plot'},editType:'plot'},connectgaps:{valType:'boolean',dflt:false,editType:'calc'},cliponaxis:{valType:'boolean',dflt:true,editType:'plot'},fill:{valType:'enumerated',values:['none','tozeroy','tozerox','tonexty','tonextx','toself','tonext'],editType:'calc'},fillcolor:{valType:'color',editType:'style'},marker:extendFlat({symbol:{valType:'enumerated',values:Drawing.symbolList,dflt:'circle',arrayOk:true,editType:'style'},opacity:{valType:'number',min:0,max:1,arrayOk:true,editType:'style'},size:{valType:'number',min:0,dflt:6,arrayOk:true,editType:'calc'},maxdisplayed:{valType:'number',min:0,dflt:0,editType:'plot'},sizeref:{valType:'number',dflt:1,editType:'calc'},sizemin:{valType:'number',min:0,dflt:0,editType:'calc'},sizemode:{valType:'enumerated',values:['diameter','area'],dflt:'diameter',editType:'calc'},colorbar:colorbarAttrs,line:extendFlat({width:{valType:'number',min:0,arrayOk:true,editType:'style'},editType:'calc'},colorAttributes('marker.line')),gradient:{type:{valType:'enumerated',values:['radial','horizontal','vertical','none'],arrayOk:true,dflt:'none',editType:'calc'},color:{valType:'color',arrayOk:true,editType:'calc'},editType:'calc'},editType:'calc'},colorAttributes('marker')),selected:{marker:{opacity:{valType:'number',min:0,max:1,editType:'style'},color:{valType:'color',editType:'style'},size:{valType:'number',min:0,editType:'style'},editType:'style'},textfont:{color:{valType:'color',editType:'style'},editType:'style'},editType:'style'},unselected:{marker:{opacity:{valType:'number',min:0,max:1,editType:'style'},color:{valType:'color',editType:'style'},size:{valType:'number',min:0,editType:'style'},editType:'style'},textfont:{color:{valType:'color',editType:'style'},editType:'style'},editType:'style'},textposition:{valType:'enumerated',values:['top left','top center','top right','middle left','middle center','middle right','bottom left','bottom center','bottom right'],dflt:'middle center',arrayOk:true,editType:'calc'},textfont:fontAttrs({editType:'calc',colorEditType:'style',arrayOk:true}),r:{valType:'data_array',editType:'calc'},t:{valType:'data_array',editType:'calc'}};},{\"../../components/colorbar/attributes\":300,\"../../components/colorscale/attributes\":306,\"../../components/drawing\":320,\"../../components/drawing/attributes\":319,\"../../components/fx/hovertemplate_attributes\":337,\"../../lib/extend\":416,\"../../plots/font_attributes\":496,\"./constants\":537}],534:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');var Lib=_dereq_('../../lib');var Axes=_dereq_('../../plots/cartesian/axes');var BADNUM=_dereq_('../../constants/numerical').BADNUM;var subTypes=_dereq_('./subtypes');var calcColorscale=_dereq_('./colorscale_calc');var arraysToCalcdata=_dereq_('./arrays_to_calcdata');var calcSelection=_dereq_('./calc_selection');function calc(gd,trace){var fullLayout=gd._fullLayout;var xa=Axes.getFromId(gd,trace.xaxis||'x');var ya=Axes.getFromId(gd,trace.yaxis||'y');var x=xa.makeCalcdata(trace,'x');var y=ya.makeCalcdata(trace,'y');var serieslen=trace._length;var cd=new Array(serieslen);var ids=trace.ids;var stackGroupOpts=getStackOpts(trace,fullLayout,xa,ya);var interpolateGaps=false;var isV,i,j,k,interpolate,vali;setFirstScatter(fullLayout,trace);var xAttr='x';var yAttr='y';var posAttr;if(stackGroupOpts){stackGroupOpts.traceIndices.push(trace.index);isV=stackGroupOpts.orientation==='v';// size, like we use for bar\nif(isV){yAttr='s';posAttr='x';}else{xAttr='s';posAttr='y';}interpolate=stackGroupOpts.stackgaps==='interpolate';}else{var ppad=calcMarkerSize(trace,serieslen);calcAxisExpansion(gd,trace,xa,ya,x,y,ppad);}for(i=0;i<serieslen;i++){var cdi=cd[i]={};var xValid=isNumeric(x[i]);var yValid=isNumeric(y[i]);if(xValid&&yValid){cdi[xAttr]=x[i];cdi[yAttr]=y[i];}// if we're stacking we need to hold on to all valid positions\n// even with invalid sizes\nelse if(stackGroupOpts&&(isV?xValid:yValid)){cdi[posAttr]=isV?x[i]:y[i];cdi.gap=true;if(interpolate){cdi.s=BADNUM;interpolateGaps=true;}else{cdi.s=0;}}else{cdi[xAttr]=cdi[yAttr]=BADNUM;}if(ids){cdi.id=String(ids[i]);}}arraysToCalcdata(cd,trace);calcColorscale(gd,trace);calcSelection(cd,trace);if(stackGroupOpts){// remove bad positions and sort\n// note that original indices get added to cd in arraysToCalcdata\ni=0;while(i<cd.length){if(cd[i][posAttr]===BADNUM){cd.splice(i,1);}else i++;}Lib.sort(cd,function(a,b){return a[posAttr]-b[posAttr]||a.i-b.i;});if(interpolateGaps){// first fill the beginning with constant from the first point\ni=0;while(i<cd.length-1&&cd[i].gap){i++;}vali=cd[i].s;if(!vali)vali=cd[i].s=0;// in case of no data AT ALL in this trace - use 0\nfor(j=0;j<i;j++){cd[j].s=vali;}// then fill the end with constant from the last point\nk=cd.length-1;while(k>i&&cd[k].gap){k--;}vali=cd[k].s;for(j=cd.length-1;j>k;j--){cd[j].s=vali;}// now interpolate internal gaps linearly\nwhile(i<k){i++;if(cd[i].gap){j=i+1;while(cd[j].gap){j++;}var pos0=cd[i-1][posAttr];var size0=cd[i-1].s;var m=(cd[j].s-size0)/(cd[j][posAttr]-pos0);while(i<j){cd[i].s=size0+(cd[i][posAttr]-pos0)*m;i++;}}}}}return cd;}function calcAxisExpansion(gd,trace,xa,ya,x,y,ppad){var serieslen=trace._length;var fullLayout=gd._fullLayout;var xId=xa._id;var yId=ya._id;var firstScatter=fullLayout._firstScatter[firstScatterGroup(trace)]===trace.uid;var stackOrientation=(getStackOpts(trace,fullLayout,xa,ya)||{}).orientation;var fill=trace.fill;// cancel minimum tick spacings (only applies to bars and boxes)\nxa._minDtick=0;ya._minDtick=0;// check whether bounds should be tight, padded, extended to zero...\n// most cases both should be padded on both ends, so start with that.\nvar xOptions={padded:true};var yOptions={padded:true};if(ppad){xOptions.ppad=yOptions.ppad=ppad;}// TODO: text size\nvar openEnded=serieslen<2||x[0]!==x[serieslen-1]||y[0]!==y[serieslen-1];// include zero (tight) and extremes (padded) if fill to zero\n// (unless the shape is closed, then it's just filling the shape regardless)\nif(openEnded&&(fill==='tozerox'||fill==='tonextx'&&(firstScatter||stackOrientation==='h'))){xOptions.tozero=true;}// if no error bars, markers or text, or fill to y=0 remove x padding\nelse if(!(trace.error_y||{}).visible&&(fill==='tonexty'||fill==='tozeroy'||!subTypes.hasMarkers(trace)&&!subTypes.hasText(trace))){xOptions.padded=false;xOptions.ppad=0;}// now check for y - rather different logic, though still mostly padded both ends\n// include zero (tight) and extremes (padded) if fill to zero\n// (unless the shape is closed, then it's just filling the shape regardless)\nif(openEnded&&(fill==='tozeroy'||fill==='tonexty'&&(firstScatter||stackOrientation==='v'))){yOptions.tozero=true;}// tight y: any x fill\nelse if(fill==='tonextx'||fill==='tozerox'){yOptions.padded=false;}// N.B. asymmetric splom traces call this with blank {} xa or ya\nif(xId)trace._extremes[xId]=Axes.findExtremes(xa,x,xOptions);if(yId)trace._extremes[yId]=Axes.findExtremes(ya,y,yOptions);}function calcMarkerSize(trace,serieslen){if(!subTypes.hasMarkers(trace))return;// Treat size like x or y arrays --- Run d2c\n// this needs to go before ppad computation\nvar marker=trace.marker;var sizeref=1.6*(trace.marker.sizeref||1);var markerTrans;if(trace.marker.sizemode==='area'){markerTrans=function markerTrans(v){return Math.max(Math.sqrt((v||0)/sizeref),3);};}else{markerTrans=function markerTrans(v){return Math.max((v||0)/sizeref,3);};}if(Lib.isArrayOrTypedArray(marker.size)){// I tried auto-type but category and dates dont make much sense.\nvar ax={type:'linear'};Axes.setConvert(ax);var s=ax.makeCalcdata(trace.marker,'size');var sizeOut=new Array(serieslen);for(var i=0;i<serieslen;i++){sizeOut[i]=markerTrans(s[i]);}return sizeOut;}else{return markerTrans(marker.size);}}/**\n * mark the first scatter trace for each subplot\n * note that scatter and scattergl each get their own first trace\n * note also that I'm doing this during calc rather than supplyDefaults\n * so I don't need to worry about transforms, but if we ever do\n * per-trace calc this will get confused.\n */function setFirstScatter(fullLayout,trace){var group=firstScatterGroup(trace);var firstScatter=fullLayout._firstScatter;if(!firstScatter[group])firstScatter[group]=trace.uid;}function firstScatterGroup(trace){var stackGroup=trace.stackgroup;return trace.xaxis+trace.yaxis+trace.type+(stackGroup?'-'+stackGroup:'');}function getStackOpts(trace,fullLayout,xa,ya){var stackGroup=trace.stackgroup;if(!stackGroup)return;var stackOpts=fullLayout._scatterStackOpts[xa._id+ya._id][stackGroup];var stackAx=stackOpts.orientation==='v'?ya:xa;// Allow stacking only on numeric axes\n// calc is a little late to be figuring this out, but during supplyDefaults\n// we don't know the axis type yet\nif(stackAx.type==='linear'||stackAx.type==='log')return stackOpts;}module.exports={calc:calc,calcMarkerSize:calcMarkerSize,calcAxisExpansion:calcAxisExpansion,setFirstScatter:setFirstScatter,getStackOpts:getStackOpts};},{\"../../constants/numerical\":398,\"../../lib\":423,\"../../plots/cartesian/axes\":469,\"./arrays_to_calcdata\":532,\"./calc_selection\":535,\"./colorscale_calc\":536,\"./subtypes\":557,\"fast-isnumeric\":80}],535:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');module.exports=function calcSelection(cd,trace){if(Lib.isArrayOrTypedArray(trace.selectedpoints)){Lib.tagSelected(cd,trace);}};},{\"../../lib\":423}],536:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var hasColorscale=_dereq_('../../components/colorscale/helpers').hasColorscale;var calcColorscale=_dereq_('../../components/colorscale/calc');var subTypes=_dereq_('./subtypes');module.exports=function calcMarkerColorscale(gd,trace){if(subTypes.hasLines(trace)&&hasColorscale(trace,'line')){calcColorscale(gd,trace,{vals:trace.line.color,containerStr:'line',cLetter:'c'});}if(subTypes.hasMarkers(trace)){if(hasColorscale(trace,'marker')){calcColorscale(gd,trace,{vals:trace.marker.color,containerStr:'marker',cLetter:'c'});}if(hasColorscale(trace,'marker.line')){calcColorscale(gd,trace,{vals:trace.marker.line.color,containerStr:'marker.line',cLetter:'c'});}}};},{\"../../components/colorscale/calc\":307,\"../../components/colorscale/helpers\":310,\"./subtypes\":557}],537:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={PTS_LINESONLY:20,// fixed parameters of clustering and clipping algorithms\n// fraction of clustering tolerance \"so close we don't even consider it a new point\"\nminTolerance:0.2,// how fast does clustering tolerance increase as you get away from the visible region\ntoleranceGrowth:10,// number of viewport sizes away from the visible region\n// at which we clip all lines to the perimeter\nmaxScreensAway:20,eventDataKeys:[]};},{}],538:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var calc=_dereq_('./calc');/*\n * Scatter stacking & normalization calculations\n * runs per subplot, and can handle multiple stacking groups\n */module.exports=function crossTraceCalc(gd,plotinfo){var xa=plotinfo.xaxis;var ya=plotinfo.yaxis;var subplot=xa._id+ya._id;var subplotStackOpts=gd._fullLayout._scatterStackOpts[subplot];if(!subplotStackOpts)return;var calcTraces=gd.calcdata;var i,j,k,i2,cd,cd0,posj,sumj,norm;var groupOpts,interpolate,groupnorm,posAttr,valAttr;var hasAnyBlanks;for(var stackGroup in subplotStackOpts){groupOpts=subplotStackOpts[stackGroup];var indices=groupOpts.traceIndices;// can get here with no indices if the stack axis is non-numeric\nif(!indices.length)continue;interpolate=groupOpts.stackgaps==='interpolate';groupnorm=groupOpts.groupnorm;if(groupOpts.orientation==='v'){posAttr='x';valAttr='y';}else{posAttr='y';valAttr='x';}hasAnyBlanks=new Array(indices.length);for(i=0;i<hasAnyBlanks.length;i++){hasAnyBlanks[i]=false;}// Collect the complete set of all positions across ALL traces.\n// Start with the first trace, then interleave items from later traces\n// as needed.\n// Fill in mising items as we go.\ncd0=calcTraces[indices[0]];var allPositions=new Array(cd0.length);for(i=0;i<cd0.length;i++){allPositions[i]=cd0[i][posAttr];}for(i=1;i<indices.length;i++){cd=calcTraces[indices[i]];for(j=k=0;j<cd.length;j++){posj=cd[j][posAttr];for(;posj>allPositions[k]&&k<allPositions.length;k++){// the current trace is missing a position from some previous trace(s)\ninsertBlank(cd,j,allPositions[k],i,hasAnyBlanks,interpolate,posAttr);j++;}if(posj!==allPositions[k]){// previous trace(s) are missing a position from the current trace\nfor(i2=0;i2<i;i2++){insertBlank(calcTraces[indices[i2]],k,posj,i2,hasAnyBlanks,interpolate,posAttr);}allPositions.splice(k,0,posj);}k++;}for(;k<allPositions.length;k++){insertBlank(cd,j,allPositions[k],i,hasAnyBlanks,interpolate,posAttr);j++;}}var serieslen=allPositions.length;// stack (and normalize)!\nfor(j=0;j<cd0.length;j++){sumj=cd0[j][valAttr]=cd0[j].s;for(i=1;i<indices.length;i++){cd=calcTraces[indices[i]];cd[0].trace._rawLength=cd[0].trace._length;cd[0].trace._length=serieslen;sumj+=cd[j].s;cd[j][valAttr]=sumj;}if(groupnorm){norm=(groupnorm==='fraction'?sumj:sumj/100)||1;for(i=0;i<indices.length;i++){var cdj=calcTraces[indices[i]][j];cdj[valAttr]/=norm;cdj.sNorm=cdj.s/norm;}}}// autorange\nfor(i=0;i<indices.length;i++){cd=calcTraces[indices[i]];var trace=cd[0].trace;var ppad=calc.calcMarkerSize(trace,trace._rawLength);var arrayPad=Array.isArray(ppad);if(ppad&&hasAnyBlanks[i]||arrayPad){var ppadRaw=ppad;ppad=new Array(serieslen);for(j=0;j<serieslen;j++){ppad[j]=cd[j].gap?0:arrayPad?ppadRaw[cd[j].i]:ppadRaw;}}var x=new Array(serieslen);var y=new Array(serieslen);for(j=0;j<serieslen;j++){x[j]=cd[j].x;y[j]=cd[j].y;}calc.calcAxisExpansion(gd,trace,xa,ya,x,y,ppad);// while we're here (in a loop over all traces in the stack)\n// record the orientation, so hover can find it easily\ncd[0].t.orientation=groupOpts.orientation;}}};function insertBlank(calcTrace,index,position,traceIndex,hasAnyBlanks,interpolate,posAttr){hasAnyBlanks[traceIndex]=true;var newEntry={i:null,gap:true,s:0};newEntry[posAttr]=position;calcTrace.splice(index,0,newEntry);// Even if we're not interpolating, if one trace has multiple\n// values at the same position and this trace only has one value there,\n// we just duplicate that one value rather than insert a zero.\n// We also make it look like a real point - because it's ambiguous which\n// one really is the real one!\nif(index&&position===calcTrace[index-1][posAttr]){var prevEntry=calcTrace[index-1];newEntry.s=prevEntry.s;// TODO is it going to cause any problems to have multiple\n// calcdata points with the same index?\nnewEntry.i=prevEntry.i;newEntry.gap=prevEntry.gap;}else if(interpolate){newEntry.s=getInterp(calcTrace,index,position,posAttr);}if(!index){// t and trace need to stay on the first cd entry\ncalcTrace[0].t=calcTrace[1].t;calcTrace[0].trace=calcTrace[1].trace;delete calcTrace[1].t;delete calcTrace[1].trace;}}function getInterp(calcTrace,index,position,posAttr){var pt0=calcTrace[index-1];var pt1=calcTrace[index+1];if(!pt1)return pt0.s;if(!pt0)return pt1.s;return pt0.s+(pt1.s-pt0.s)*(position-pt0[posAttr])/(pt1[posAttr]-pt0[posAttr]);}},{\"./calc\":534}],539:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';// remove opacity for any trace that has a fill or is filled to\nmodule.exports=function crossTraceDefaults(fullData){for(var i=0;i<fullData.length;i++){var tracei=fullData[i];if(tracei.type!=='scatter')continue;var filli=tracei.fill;if(filli==='none'||filli==='toself')continue;tracei.opacity=undefined;if(filli==='tonexty'||filli==='tonextx'){for(var j=i-1;j>=0;j--){var tracej=fullData[j];if(tracej.type==='scatter'&&tracej.xaxis===tracei.xaxis&&tracej.yaxis===tracei.yaxis){tracej.opacity=undefined;break;}}}}};},{}],540:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Registry=_dereq_('../../registry');var attributes=_dereq_('./attributes');var constants=_dereq_('./constants');var subTypes=_dereq_('./subtypes');var handleXYDefaults=_dereq_('./xy_defaults');var handleStackDefaults=_dereq_('./stack_defaults');var handleMarkerDefaults=_dereq_('./marker_defaults');var handleLineDefaults=_dereq_('./line_defaults');var handleLineShapeDefaults=_dereq_('./line_shape_defaults');var handleTextDefaults=_dereq_('./text_defaults');var handleFillColorDefaults=_dereq_('./fillcolor_defaults');module.exports=function supplyDefaults(traceIn,traceOut,defaultColor,layout){function coerce(attr,dflt){return Lib.coerce(traceIn,traceOut,attributes,attr,dflt);}var len=handleXYDefaults(traceIn,traceOut,layout,coerce);if(!len)traceOut.visible=false;if(!traceOut.visible)return;var stackGroupOpts=handleStackDefaults(traceIn,traceOut,layout,coerce);var defaultMode=!stackGroupOpts&&len<constants.PTS_LINESONLY?'lines+markers':'lines';coerce('text');coerce('hovertext');coerce('mode',defaultMode);if(subTypes.hasLines(traceOut)){handleLineDefaults(traceIn,traceOut,defaultColor,layout,coerce);handleLineShapeDefaults(traceIn,traceOut,coerce);coerce('connectgaps');coerce('line.simplify');}if(subTypes.hasMarkers(traceOut)){handleMarkerDefaults(traceIn,traceOut,defaultColor,layout,coerce,{gradient:true});}if(subTypes.hasText(traceOut)){handleTextDefaults(traceIn,traceOut,layout,coerce);}var dfltHoverOn=[];if(subTypes.hasMarkers(traceOut)||subTypes.hasText(traceOut)){coerce('cliponaxis');coerce('marker.maxdisplayed');dfltHoverOn.push('points');}// It's possible for this default to be changed by a later trace.\n// We handle that case in some hacky code inside handleStackDefaults.\ncoerce('fill',stackGroupOpts?stackGroupOpts.fillDflt:'none');if(traceOut.fill!=='none'){handleFillColorDefaults(traceIn,traceOut,defaultColor,coerce);if(!subTypes.hasLines(traceOut))handleLineShapeDefaults(traceIn,traceOut,coerce);}if(traceOut.fill==='tonext'||traceOut.fill==='toself'){dfltHoverOn.push('fills');}coerce('hoveron',dfltHoverOn.join('+')||'points');if(traceOut.hoveron!=='fills')coerce('hovertemplate');var errorBarsSupplyDefaults=Registry.getComponentMethod('errorbars','supplyDefaults');errorBarsSupplyDefaults(traceIn,traceOut,defaultColor,{axis:'y'});errorBarsSupplyDefaults(traceIn,traceOut,defaultColor,{axis:'x',inherit:'y'});Lib.coerceSelectionMarkerOpacity(traceOut,coerce);};},{\"../../lib\":423,\"../../registry\":521,\"./attributes\":533,\"./constants\":537,\"./fillcolor_defaults\":542,\"./line_defaults\":546,\"./line_shape_defaults\":548,\"./marker_defaults\":552,\"./stack_defaults\":555,\"./subtypes\":557,\"./text_defaults\":558,\"./xy_defaults\":559}],541:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');/** Fill hover 'pointData' container with 'correct' hover text value\n *\n * - If trace hoverinfo contains a 'text' flag and hovertext is not set,\n *   the text elements will be seen in the hover labels.\n *\n * - If trace hoverinfo contains a 'text' flag and hovertext is set,\n *   hovertext takes precedence over text\n *   i.e. the hoverinfo elements will be seen in the hover labels\n *\n *  @param {object} calcPt\n *  @param {object} trace\n *  @param {object || array} contOut (mutated here)\n */module.exports=function fillHoverText(calcPt,trace,contOut){var fill=Array.isArray(contOut)?function(v){contOut.push(v);}:function(v){contOut.text=v;};var htx=Lib.extractOption(calcPt,trace,'htx','hovertext');if(isValid(htx))return fill(htx);var tx=Lib.extractOption(calcPt,trace,'tx','text');if(isValid(tx))return fill(tx);};// accept all truthy values and 0 (which gets cast to '0' in the hover labels)\nfunction isValid(v){return v||v===0;}},{\"../../lib\":423}],542:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Color=_dereq_('../../components/color');var isArrayOrTypedArray=_dereq_('../../lib').isArrayOrTypedArray;module.exports=function fillColorDefaults(traceIn,traceOut,defaultColor,coerce){var inheritColorFromMarker=false;if(traceOut.marker){// don't try to inherit a color array\nvar markerColor=traceOut.marker.color;var markerLineColor=(traceOut.marker.line||{}).color;if(markerColor&&!isArrayOrTypedArray(markerColor)){inheritColorFromMarker=markerColor;}else if(markerLineColor&&!isArrayOrTypedArray(markerLineColor)){inheritColorFromMarker=markerLineColor;}}coerce('fillcolor',Color.addOpacity((traceOut.line||{}).color||inheritColorFromMarker||defaultColor,0.5));};},{\"../../components/color\":299,\"../../lib\":423}],543:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Color=_dereq_('../../components/color');var subtypes=_dereq_('./subtypes');module.exports=function getTraceColor(trace,di){var lc,tc;// TODO: text modes\nif(trace.mode==='lines'){lc=trace.line.color;return lc&&Color.opacity(lc)?lc:trace.fillcolor;}else if(trace.mode==='none'){return trace.fill?trace.fillcolor:'';}else{var mc=di.mcc||(trace.marker||{}).color;var mlc=di.mlcc||((trace.marker||{}).line||{}).color;tc=mc&&Color.opacity(mc)?mc:mlc&&Color.opacity(mlc)&&(di.mlw||((trace.marker||{}).line||{}).width)?mlc:'';if(tc){// make sure the points aren't TOO transparent\nif(Color.opacity(tc)<0.3){return Color.addOpacity(tc,0.3);}else return tc;}else{lc=(trace.line||{}).color;return lc&&Color.opacity(lc)&&subtypes.hasLines(trace)&&trace.line.width?lc:trace.fillcolor;}}};},{\"../../components/color\":299,\"./subtypes\":557}],544:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Fx=_dereq_('../../components/fx');var Registry=_dereq_('../../registry');var getTraceColor=_dereq_('./get_trace_color');var Color=_dereq_('../../components/color');var fillHoverText=_dereq_('./fill_hover_text');module.exports=function hoverPoints(pointData,xval,yval,hovermode){var cd=pointData.cd;var trace=cd[0].trace;var xa=pointData.xa;var ya=pointData.ya;var xpx=xa.c2p(xval);var ypx=ya.c2p(yval);var pt=[xpx,ypx];var hoveron=trace.hoveron||'';var minRad=trace.mode.indexOf('markers')!==-1?3:0.5;// look for points to hover on first, then take fills only if we\n// didn't find a point\nif(hoveron.indexOf('points')!==-1){var dx=function dx(di){// dx and dy are used in compare modes - here we want to always\n// prioritize the closest data point, at least as long as markers are\n// the same size or nonexistent, but still try to prioritize small markers too.\nvar rad=Math.max(3,di.mrc||0);var kink=1-1/rad;var dxRaw=Math.abs(xa.c2p(di.x)-xpx);var d=dxRaw<rad?kink*dxRaw/rad:dxRaw-rad+kink;return d;};var dy=function dy(di){var rad=Math.max(3,di.mrc||0);var kink=1-1/rad;var dyRaw=Math.abs(ya.c2p(di.y)-ypx);return dyRaw<rad?kink*dyRaw/rad:dyRaw-rad+kink;};var dxy=function dxy(di){// scatter points: d.mrc is the calculated marker radius\n// adjust the distance so if you're inside the marker it\n// always will show up regardless of point size, but\n// prioritize smaller points\nvar rad=Math.max(minRad,di.mrc||0);var dx=xa.c2p(di.x)-xpx;var dy=ya.c2p(di.y)-ypx;return Math.max(Math.sqrt(dx*dx+dy*dy)-rad,1-minRad/rad);};var distfn=Fx.getDistanceFunction(hovermode,dx,dy,dxy);Fx.getClosest(cd,distfn,pointData);// skip the rest (for this trace) if we didn't find a close point\nif(pointData.index!==false){// the closest data point\nvar di=cd[pointData.index];var xc=xa.c2p(di.x,true);var yc=ya.c2p(di.y,true);var rad=di.mrc||1;// now we're done using the whole `calcdata` array, replace the\n// index with the original index (in case of inserted point from\n// stacked area)\npointData.index=di.i;var orientation=cd[0].t.orientation;// TODO: for scatter and bar, option to show (sub)totals and\n// raw data? Currently stacked and/or normalized bars just show\n// the normalized individual sizes, so that's what I'm doing here\n// for now.\nvar sizeVal=orientation&&(di.sNorm||di.s);var xLabelVal=orientation==='h'?sizeVal:di.x;var yLabelVal=orientation==='v'?sizeVal:di.y;Lib.extendFlat(pointData,{color:getTraceColor(trace,di),x0:xc-rad,x1:xc+rad,xLabelVal:xLabelVal,y0:yc-rad,y1:yc+rad,yLabelVal:yLabelVal,spikeDistance:dxy(di),hovertemplate:trace.hovertemplate});fillHoverText(di,trace,pointData);Registry.getComponentMethod('errorbars','hoverInfo')(di,trace,pointData);return[pointData];}}// even if hoveron is 'fills', only use it if we have polygons too\nif(hoveron.indexOf('fills')!==-1&&trace._polygons){var polygons=trace._polygons;var polygonsIn=[];var inside=false;var xmin=Infinity;var xmax=-Infinity;var ymin=Infinity;var ymax=-Infinity;var i,j,polygon,pts,xCross,x0,x1,y0,y1;for(i=0;i<polygons.length;i++){polygon=polygons[i];// TODO: this is not going to work right for curved edges, it will\n// act as though they're straight. That's probably going to need\n// the elements themselves to capture the events. Worth it?\nif(polygon.contains(pt)){inside=!inside;// TODO: need better than just the overall bounding box\npolygonsIn.push(polygon);ymin=Math.min(ymin,polygon.ymin);ymax=Math.max(ymax,polygon.ymax);}}if(inside){// constrain ymin/max to the visible plot, so the label goes\n// at the middle of the piece you can see\nymin=Math.max(ymin,0);ymax=Math.min(ymax,ya._length);// find the overall left-most and right-most points of the\n// polygon(s) we're inside at their combined vertical midpoint.\n// This is where we will draw the hover label.\n// Note that this might not be the vertical midpoint of the\n// whole trace, if it's disjoint.\nvar yAvg=(ymin+ymax)/2;for(i=0;i<polygonsIn.length;i++){pts=polygonsIn[i].pts;for(j=1;j<pts.length;j++){y0=pts[j-1][1];y1=pts[j][1];if(y0>yAvg!==y1>=yAvg){x0=pts[j-1][0];x1=pts[j][0];if(y1-y0){xCross=x0+(x1-x0)*(yAvg-y0)/(y1-y0);xmin=Math.min(xmin,xCross);xmax=Math.max(xmax,xCross);}}}}// constrain xmin/max to the visible plot now too\nxmin=Math.max(xmin,0);xmax=Math.min(xmax,xa._length);// get only fill or line color for the hover color\nvar color=Color.defaultLine;if(Color.opacity(trace.fillcolor))color=trace.fillcolor;else if(Color.opacity((trace.line||{}).color)){color=trace.line.color;}Lib.extendFlat(pointData,{// never let a 2D override 1D type as closest point\n// also: no spikeDistance, it's not allowed for fills\ndistance:pointData.maxHoverDistance,x0:xmin,x1:xmax,y0:yAvg,y1:yAvg,color:color,hovertemplate:'%{name}'});delete pointData.index;if(trace.text&&!Array.isArray(trace.text)){pointData.text=String(trace.text);}else pointData.text=trace.name;return[pointData];}}};},{\"../../components/color\":299,\"../../components/fx\":338,\"../../lib\":423,\"../../registry\":521,\"./fill_hover_text\":541,\"./get_trace_color\":543}],545:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Scatter={};var subtypes=_dereq_('./subtypes');Scatter.hasLines=subtypes.hasLines;Scatter.hasMarkers=subtypes.hasMarkers;Scatter.hasText=subtypes.hasText;Scatter.isBubble=subtypes.isBubble;Scatter.attributes=_dereq_('./attributes');Scatter.supplyDefaults=_dereq_('./defaults');Scatter.crossTraceDefaults=_dereq_('./cross_trace_defaults');Scatter.calc=_dereq_('./calc').calc;Scatter.crossTraceCalc=_dereq_('./cross_trace_calc');Scatter.arraysToCalcdata=_dereq_('./arrays_to_calcdata');Scatter.plot=_dereq_('./plot');Scatter.colorbar=_dereq_('./marker_colorbar');Scatter.style=_dereq_('./style').style;Scatter.styleOnSelect=_dereq_('./style').styleOnSelect;Scatter.hoverPoints=_dereq_('./hover');Scatter.selectPoints=_dereq_('./select');Scatter.animatable=true;Scatter.moduleType='trace';Scatter.name='scatter';Scatter.basePlotModule=_dereq_('../../plots/cartesian');Scatter.categories=['cartesian','svg','symbols','errorBarsOK','showLegend','scatter-like','zoomScale'];Scatter.meta={};module.exports=Scatter;},{\"../../plots/cartesian\":481,\"./arrays_to_calcdata\":532,\"./attributes\":533,\"./calc\":534,\"./cross_trace_calc\":538,\"./cross_trace_defaults\":539,\"./defaults\":540,\"./hover\":544,\"./marker_colorbar\":551,\"./plot\":553,\"./select\":554,\"./style\":556,\"./subtypes\":557}],546:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isArrayOrTypedArray=_dereq_('../../lib').isArrayOrTypedArray;var hasColorscale=_dereq_('../../components/colorscale/helpers').hasColorscale;var colorscaleDefaults=_dereq_('../../components/colorscale/defaults');module.exports=function lineDefaults(traceIn,traceOut,defaultColor,layout,coerce,opts){var markerColor=(traceIn.marker||{}).color;coerce('line.color',defaultColor);if(hasColorscale(traceIn,'line')){colorscaleDefaults(traceIn,traceOut,layout,coerce,{prefix:'line.',cLetter:'c',noScale:true});}else{var lineColorDflt=(isArrayOrTypedArray(markerColor)?false:markerColor)||defaultColor;coerce('line.color',lineColorDflt);}coerce('line.width');if(!(opts||{}).noDash)coerce('line.dash');};},{\"../../components/colorscale/defaults\":309,\"../../components/colorscale/helpers\":310,\"../../lib\":423}],547:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var numConstants=_dereq_('../../constants/numerical');var BADNUM=numConstants.BADNUM;var LOG_CLIP=numConstants.LOG_CLIP;var LOG_CLIP_PLUS=LOG_CLIP+0.5;var LOG_CLIP_MINUS=LOG_CLIP-0.5;var Lib=_dereq_('../../lib');var segmentsIntersect=Lib.segmentsIntersect;var constrain=Lib.constrain;var constants=_dereq_('./constants');module.exports=function linePoints(d,opts){var xa=opts.xaxis;var ya=opts.yaxis;var xLog=xa.type==='log';var yLog=ya.type==='log';var xLen=xa._length;var yLen=ya._length;var connectGaps=opts.connectGaps;var baseTolerance=opts.baseTolerance;var shape=opts.shape;var linear=shape==='linear';var segments=[];var minTolerance=constants.minTolerance;var pts=new Array(d.length);var pti=0;var i;// pt variables are pixel coordinates [x,y] of one point\n// these four are the outputs of clustering on a line\nvar clusterStartPt,clusterEndPt,clusterHighPt,clusterLowPt;// \"this\" is the next point we're considering adding to the cluster\nvar thisPt;// did we encounter the high point first, then a low point, or vice versa?\nvar clusterHighFirst;// the first two points in the cluster determine its unit vector\n// so the second is always in the \"High\" direction\nvar clusterUnitVector;// the pixel delta from clusterStartPt\nvar thisVector;// val variables are (signed) pixel distances along the cluster vector\nvar clusterRefDist,clusterHighVal,clusterLowVal,thisVal;// deviation variables are (signed) pixel distances normal to the cluster vector\nvar clusterMinDeviation,clusterMaxDeviation,thisDeviation;// turn one calcdata point into pixel coordinates\nfunction getPt(index){var di=d[index];if(!di)return false;var x=xa.c2p(di.x);var y=ya.c2p(di.y);// if non-positive log values, set them VERY far off-screen\n// so the line looks essentially straight from the previous point.\nif(x===BADNUM){if(xLog)x=xa.c2p(di.x,true);if(x===BADNUM)return false;// If BOTH were bad log values, make the line follow a constant\n// exponent rather than a constant slope\nif(yLog&&y===BADNUM){x*=Math.abs(xa._m*yLen*(xa._m>0?LOG_CLIP_PLUS:LOG_CLIP_MINUS)/(ya._m*xLen*(ya._m>0?LOG_CLIP_PLUS:LOG_CLIP_MINUS)));}x*=1000;}if(y===BADNUM){if(yLog)y=ya.c2p(di.y,true);if(y===BADNUM)return false;y*=1000;}return[x,y];}function crossesViewport(xFrac0,yFrac0,xFrac1,yFrac1){var dx=xFrac1-xFrac0;var dy=yFrac1-yFrac0;var dx0=0.5-xFrac0;var dy0=0.5-yFrac0;var norm2=dx*dx+dy*dy;var dot=dx*dx0+dy*dy0;if(dot>0&&dot<norm2){var cross=dx0*dy-dy0*dx;if(cross*cross<norm2)return true;}}var latestXFrac,latestYFrac;// if we're off-screen, increase tolerance over baseTolerance\nfunction getTolerance(pt,nextPt){var xFrac=pt[0]/xLen;var yFrac=pt[1]/yLen;var offScreenFraction=Math.max(0,-xFrac,xFrac-1,-yFrac,yFrac-1);if(offScreenFraction&&latestXFrac!==undefined&&crossesViewport(xFrac,yFrac,latestXFrac,latestYFrac)){offScreenFraction=0;}if(offScreenFraction&&nextPt&&crossesViewport(xFrac,yFrac,nextPt[0]/xLen,nextPt[1]/yLen)){offScreenFraction=0;}return(1+constants.toleranceGrowth*offScreenFraction)*baseTolerance;}function ptDist(pt1,pt2){var dx=pt1[0]-pt2[0];var dy=pt1[1]-pt2[1];return Math.sqrt(dx*dx+dy*dy);}// last bit of filtering: clip paths that are VERY far off-screen\n// so we don't get near the browser's hard limit (+/- 2^29 px in Chrome and FF)\nvar maxScreensAway=constants.maxScreensAway;// find the intersections between the segment from pt1 to pt2\n// and the large rectangle maxScreensAway around the viewport\n// if one of pt1 and pt2 is inside and the other outside, there\n// will be only one intersection.\n// if both are outside there will be 0 or 2 intersections\n// (or 1 if it's right at a corner - we'll treat that like 0)\n// returns an array of intersection pts\nvar xEdge0=-xLen*maxScreensAway;var xEdge1=xLen*(1+maxScreensAway);var yEdge0=-yLen*maxScreensAway;var yEdge1=yLen*(1+maxScreensAway);var edges=[[xEdge0,yEdge0,xEdge1,yEdge0],[xEdge1,yEdge0,xEdge1,yEdge1],[xEdge1,yEdge1,xEdge0,yEdge1],[xEdge0,yEdge1,xEdge0,yEdge0]];var xEdge,yEdge,lastXEdge,lastYEdge,lastFarPt,edgePt;// for linear line shape, edge intersections should be linearly interpolated\n// spline uses this too, which isn't precisely correct but is actually pretty\n// good, because Catmull-Rom weights far-away points less in creating the curvature\nfunction getLinearEdgeIntersections(pt1,pt2){var out=[];var ptCount=0;for(var i=0;i<4;i++){var edge=edges[i];var ptInt=segmentsIntersect(pt1[0],pt1[1],pt2[0],pt2[1],edge[0],edge[1],edge[2],edge[3]);if(ptInt&&(!ptCount||Math.abs(ptInt.x-out[0][0])>1||Math.abs(ptInt.y-out[0][1])>1)){ptInt=[ptInt.x,ptInt.y];// if we have 2 intersections, make sure the closest one to pt1 comes first\nif(ptCount&&ptDist(ptInt,pt1)<ptDist(out[0],pt1))out.unshift(ptInt);else out.push(ptInt);ptCount++;}}return out;}function onlyConstrainedPoint(pt){if(pt[0]<xEdge0||pt[0]>xEdge1||pt[1]<yEdge0||pt[1]>yEdge1){return[constrain(pt[0],xEdge0,xEdge1),constrain(pt[1],yEdge0,yEdge1)];}}function sameEdge(pt1,pt2){if(pt1[0]===pt2[0]&&(pt1[0]===xEdge0||pt1[0]===xEdge1))return true;if(pt1[1]===pt2[1]&&(pt1[1]===yEdge0||pt1[1]===yEdge1))return true;}// for line shapes hv and vh, movement in the two dimensions is decoupled,\n// so all we need to do is constrain each dimension independently\nfunction getHVEdgeIntersections(pt1,pt2){var out=[];var ptInt1=onlyConstrainedPoint(pt1);var ptInt2=onlyConstrainedPoint(pt2);if(ptInt1&&ptInt2&&sameEdge(ptInt1,ptInt2))return out;if(ptInt1)out.push(ptInt1);if(ptInt2)out.push(ptInt2);return out;}// hvh and vhv we sometimes have to move one of the intersection points\n// out BEYOND the clipping rect, by a maximum of a factor of 2, so that\n// the midpoint line is drawn in the right place\nfunction getABAEdgeIntersections(dim,limit0,limit1){return function(pt1,pt2){var ptInt1=onlyConstrainedPoint(pt1);var ptInt2=onlyConstrainedPoint(pt2);var out=[];if(ptInt1&&ptInt2&&sameEdge(ptInt1,ptInt2))return out;if(ptInt1)out.push(ptInt1);if(ptInt2)out.push(ptInt2);var midShift=2*Lib.constrain((pt1[dim]+pt2[dim])/2,limit0,limit1)-((ptInt1||pt1)[dim]+(ptInt2||pt2)[dim]);if(midShift){var ptToAlter;if(ptInt1&&ptInt2){ptToAlter=midShift>0===ptInt1[dim]>ptInt2[dim]?ptInt1:ptInt2;}else ptToAlter=ptInt1||ptInt2;ptToAlter[dim]+=midShift;}return out;};}var getEdgeIntersections;if(shape==='linear'||shape==='spline'){getEdgeIntersections=getLinearEdgeIntersections;}else if(shape==='hv'||shape==='vh'){getEdgeIntersections=getHVEdgeIntersections;}else if(shape==='hvh')getEdgeIntersections=getABAEdgeIntersections(0,xEdge0,xEdge1);else if(shape==='vhv')getEdgeIntersections=getABAEdgeIntersections(1,yEdge0,yEdge1);// a segment pt1->pt2 entirely outside the nearby region:\n// find the corner it gets closest to touching\nfunction getClosestCorner(pt1,pt2){var dx=pt2[0]-pt1[0];var m=(pt2[1]-pt1[1])/dx;var b=(pt1[1]*pt2[0]-pt2[1]*pt1[0])/dx;if(b>0)return[m>0?xEdge0:xEdge1,yEdge1];else return[m>0?xEdge1:xEdge0,yEdge0];}function updateEdge(pt){var x=pt[0];var y=pt[1];var xSame=x===pts[pti-1][0];var ySame=y===pts[pti-1][1];// duplicate point?\nif(xSame&&ySame)return;if(pti>1){// backtracking along an edge?\nvar xSame2=x===pts[pti-2][0];var ySame2=y===pts[pti-2][1];if(xSame&&(x===xEdge0||x===xEdge1)&&xSame2){if(ySame2)pti--;// backtracking exactly - drop prev pt and don't add\nelse pts[pti-1]=pt;// not exact: replace the prev pt\n}else if(ySame&&(y===yEdge0||y===yEdge1)&&ySame2){if(xSame2)pti--;else pts[pti-1]=pt;}else pts[pti++]=pt;}else pts[pti++]=pt;}function updateEdgesForReentry(pt){// if we're outside the nearby region and going back in,\n// we may need to loop around a corner point\nif(pts[pti-1][0]!==pt[0]&&pts[pti-1][1]!==pt[1]){updateEdge([lastXEdge,lastYEdge]);}updateEdge(pt);lastFarPt=null;lastXEdge=lastYEdge=0;}function addPt(pt){latestXFrac=pt[0]/xLen;latestYFrac=pt[1]/yLen;// Are we more than maxScreensAway off-screen any direction?\n// if so, clip to this box, but in such a way that on-screen\n// drawing is unchanged\nxEdge=pt[0]<xEdge0?xEdge0:pt[0]>xEdge1?xEdge1:0;yEdge=pt[1]<yEdge0?yEdge0:pt[1]>yEdge1?yEdge1:0;if(xEdge||yEdge){// to get fills right - if first point is far, push it toward the\n// screen in whichever direction(s) are far\nif(!pti){pts[pti++]=[xEdge||pt[0],yEdge||pt[1]];}else if(lastFarPt){// both this point and the last are outside the nearby region\n// check if we're crossing the nearby region\nvar intersections=getEdgeIntersections(lastFarPt,pt);if(intersections.length>1){updateEdgesForReentry(intersections[0]);pts[pti++]=intersections[1];}}// we're leaving the nearby region - add the point where we left it\nelse{edgePt=getEdgeIntersections(pts[pti-1],pt)[0];pts[pti++]=edgePt;}var lastPt=pts[pti-1];if(xEdge&&yEdge&&(lastPt[0]!==xEdge||lastPt[1]!==yEdge)){// we've gone out beyond a new corner: add the corner too\n// so that the next point will take the right winding\nif(lastFarPt){if(lastXEdge!==xEdge&&lastYEdge!==yEdge){if(lastXEdge&&lastYEdge){// we've gone around to an opposite corner - we\n// need to add the correct extra corner\n// in order to get the right winding\nupdateEdge(getClosestCorner(lastFarPt,pt));}else{// we're coming from a far edge - the extra corner\n// we need is determined uniquely by the sectors\nupdateEdge([lastXEdge||xEdge,lastYEdge||yEdge]);}}else if(lastXEdge&&lastYEdge){updateEdge([lastXEdge,lastYEdge]);}}updateEdge([xEdge,yEdge]);}else if(lastXEdge-xEdge&&lastYEdge-yEdge){// we're coming from an edge or far corner to an edge - again the\n// extra corner we need is uniquely determined by the sectors\nupdateEdge([xEdge||lastXEdge,yEdge||lastYEdge]);}lastFarPt=pt;lastXEdge=xEdge;lastYEdge=yEdge;}else{if(lastFarPt){// this point is in range but the previous wasn't: add its entry pt first\nupdateEdgesForReentry(getEdgeIntersections(lastFarPt,pt)[0]);}pts[pti++]=pt;}}// loop over ALL points in this trace\nfor(i=0;i<d.length;i++){clusterStartPt=getPt(i);if(!clusterStartPt)continue;pti=0;lastFarPt=null;addPt(clusterStartPt);// loop over one segment of the trace\nfor(i++;i<d.length;i++){clusterHighPt=getPt(i);if(!clusterHighPt){if(connectGaps)continue;else break;}// can't decimate if nonlinear line shape\n// TODO: we *could* decimate [hv]{2,3} shapes if we restricted clusters to horz or vert again\n// but spline would be verrry awkward to decimate\nif(!linear||!opts.simplify){addPt(clusterHighPt);continue;}var nextPt=getPt(i+1);clusterRefDist=ptDist(clusterHighPt,clusterStartPt);if(clusterRefDist<getTolerance(clusterHighPt,nextPt)*minTolerance)continue;clusterUnitVector=[(clusterHighPt[0]-clusterStartPt[0])/clusterRefDist,(clusterHighPt[1]-clusterStartPt[1])/clusterRefDist];clusterLowPt=clusterStartPt;clusterHighVal=clusterRefDist;clusterLowVal=clusterMinDeviation=clusterMaxDeviation=0;clusterHighFirst=false;clusterEndPt=clusterHighPt;// loop over one cluster of points that collapse onto one line\nfor(i++;i<d.length;i++){thisPt=nextPt;nextPt=getPt(i+1);if(!thisPt){if(connectGaps)continue;else break;}thisVector=[thisPt[0]-clusterStartPt[0],thisPt[1]-clusterStartPt[1]];// cross product (or dot with normal to the cluster vector)\nthisDeviation=thisVector[0]*clusterUnitVector[1]-thisVector[1]*clusterUnitVector[0];clusterMinDeviation=Math.min(clusterMinDeviation,thisDeviation);clusterMaxDeviation=Math.max(clusterMaxDeviation,thisDeviation);if(clusterMaxDeviation-clusterMinDeviation>getTolerance(thisPt,nextPt))break;clusterEndPt=thisPt;thisVal=thisVector[0]*clusterUnitVector[0]+thisVector[1]*clusterUnitVector[1];if(thisVal>clusterHighVal){clusterHighVal=thisVal;clusterHighPt=thisPt;clusterHighFirst=false;}else if(thisVal<clusterLowVal){clusterLowVal=thisVal;clusterLowPt=thisPt;clusterHighFirst=true;}}// insert this cluster into pts\n// we've already inserted the start pt, now check if we have high and low pts\nif(clusterHighFirst){addPt(clusterHighPt);if(clusterEndPt!==clusterLowPt)addPt(clusterLowPt);}else{if(clusterLowPt!==clusterStartPt)addPt(clusterLowPt);if(clusterEndPt!==clusterHighPt)addPt(clusterHighPt);}// and finally insert the end pt\naddPt(clusterEndPt);// have we reached the end of this segment?\nif(i>=d.length||!thisPt)break;// otherwise we have an out-of-cluster point to insert as next clusterStartPt\naddPt(thisPt);clusterStartPt=thisPt;}// to get fills right - repeat what we did at the start\nif(lastFarPt)updateEdge([lastXEdge||lastFarPt[0],lastYEdge||lastFarPt[1]]);segments.push(pts.slice(0,pti));}return segments;};},{\"../../constants/numerical\":398,\"../../lib\":423,\"./constants\":537}],548:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';// common to 'scatter' and 'scatterternary'\nmodule.exports=function handleLineShapeDefaults(traceIn,traceOut,coerce){var shape=coerce('line.shape');if(shape==='spline')coerce('line.smoothing');};},{}],549:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var LINKEDFILLS={tonextx:1,tonexty:1,tonext:1};module.exports=function linkTraces(gd,plotinfo,cdscatter){var trace,i,group,prevtrace,groupIndex;// first sort traces to keep stacks & filled-together groups together\nvar groupIndices={};var needsSort=false;var prevGroupIndex=-1;var nextGroupIndex=0;var prevUnstackedGroupIndex=-1;for(i=0;i<cdscatter.length;i++){trace=cdscatter[i][0].trace;group=trace.stackgroup||'';if(group){if(group in groupIndices){groupIndex=groupIndices[group];}else{groupIndex=groupIndices[group]=nextGroupIndex;nextGroupIndex++;}}else if(trace.fill in LINKEDFILLS&&prevUnstackedGroupIndex>=0){groupIndex=prevUnstackedGroupIndex;}else{groupIndex=prevUnstackedGroupIndex=nextGroupIndex;nextGroupIndex++;}if(groupIndex<prevGroupIndex)needsSort=true;trace._groupIndex=prevGroupIndex=groupIndex;}var cdscatterSorted=cdscatter.slice();if(needsSort){cdscatterSorted.sort(function(a,b){var traceA=a[0].trace;var traceB=b[0].trace;return traceA._groupIndex-traceB._groupIndex||traceA.index-traceB.index;});}// now link traces to each other\nvar prevtraces={};for(i=0;i<cdscatterSorted.length;i++){trace=cdscatterSorted[i][0].trace;group=trace.stackgroup||'';// Note: The check which ensures all cdscatter here are for the same axis and\n// are either cartesian or scatterternary has been removed. This code assumes\n// the passed scattertraces have been filtered to the proper plot types and\n// the proper subplots.\nif(trace.visible===true){trace._nexttrace=null;if(trace.fill in LINKEDFILLS){prevtrace=prevtraces[group];trace._prevtrace=prevtrace||null;if(prevtrace){prevtrace._nexttrace=trace;}}trace._ownfill=trace.fill&&(trace.fill.substr(0,6)==='tozero'||trace.fill==='toself'||trace.fill.substr(0,2)==='to'&&!trace._prevtrace);prevtraces[group]=trace;}else{trace._prevtrace=trace._nexttrace=trace._ownfill=null;}}return cdscatterSorted;};},{}],550:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var isNumeric=_dereq_('fast-isnumeric');// used in the drawing step for 'scatter' and 'scattegeo' and\n// in the convert step for 'scatter3d'\nmodule.exports=function makeBubbleSizeFn(trace){var marker=trace.marker;var sizeRef=marker.sizeref||1;var sizeMin=marker.sizemin||0;// for bubble charts, allow scaling the provided value linearly\n// and by area or diameter.\n// Note this only applies to the array-value sizes\nvar baseFn=marker.sizemode==='area'?function(v){return Math.sqrt(v/sizeRef);}:function(v){return v/sizeRef;};// TODO add support for position/negative bubbles?\n// TODO add 'sizeoffset' attribute?\nreturn function(v){var baseSize=baseFn(v/2);// don't show non-numeric and negative sizes\nreturn isNumeric(baseSize)&&baseSize>0?Math.max(baseSize,sizeMin):0;};};},{\"fast-isnumeric\":80}],551:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';module.exports={container:'marker',min:'cmin',max:'cmax'};},{}],552:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Color=_dereq_('../../components/color');var hasColorscale=_dereq_('../../components/colorscale/helpers').hasColorscale;var colorscaleDefaults=_dereq_('../../components/colorscale/defaults');var subTypes=_dereq_('./subtypes');/*\n * opts: object of flags to control features not all marker users support\n *   noLine: caller does not support marker lines\n *   gradient: caller supports gradients\n *   noSelect: caller does not support selected/unselected attribute containers\n */module.exports=function markerDefaults(traceIn,traceOut,defaultColor,layout,coerce,opts){var isBubble=subTypes.isBubble(traceIn);var lineColor=(traceIn.line||{}).color;var defaultMLC;opts=opts||{};// marker.color inherit from line.color (even if line.color is an array)\nif(lineColor)defaultColor=lineColor;coerce('marker.symbol');coerce('marker.opacity',isBubble?0.7:1);coerce('marker.size');coerce('marker.color',defaultColor);if(hasColorscale(traceIn,'marker')){colorscaleDefaults(traceIn,traceOut,layout,coerce,{prefix:'marker.',cLetter:'c'});}if(!opts.noSelect){coerce('selected.marker.color');coerce('unselected.marker.color');coerce('selected.marker.size');coerce('unselected.marker.size');}if(!opts.noLine){// if there's a line with a different color than the marker, use\n// that line color as the default marker line color\n// (except when it's an array)\n// mostly this is for transparent markers to behave nicely\nif(lineColor&&!Array.isArray(lineColor)&&traceOut.marker.color!==lineColor){defaultMLC=lineColor;}else if(isBubble)defaultMLC=Color.background;else defaultMLC=Color.defaultLine;coerce('marker.line.color',defaultMLC);if(hasColorscale(traceIn,'marker.line')){colorscaleDefaults(traceIn,traceOut,layout,coerce,{prefix:'marker.line.',cLetter:'c'});}coerce('marker.line.width',isBubble?1:0);}if(isBubble){coerce('marker.sizeref');coerce('marker.sizemin');coerce('marker.sizemode');}if(opts.gradient){var gradientType=coerce('marker.gradient.type');if(gradientType!=='none'){coerce('marker.gradient.color');}}};},{\"../../components/color\":299,\"../../components/colorscale/defaults\":309,\"../../components/colorscale/helpers\":310,\"./subtypes\":557}],553:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var ensureSingle=Lib.ensureSingle;var identity=Lib.identity;var Drawing=_dereq_('../../components/drawing');var subTypes=_dereq_('./subtypes');var linePoints=_dereq_('./line_points');var linkTraces=_dereq_('./link_traces');var polygonTester=_dereq_('../../lib/polygon').tester;module.exports=function plot(gd,plotinfo,cdscatter,scatterLayer,transitionOpts,makeOnCompleteCallback){var join,onComplete;// If transition config is provided, then it is only a partial replot and traces not\n// updated are removed.\nvar isFullReplot=!transitionOpts;var hasTransition=!!transitionOpts&&transitionOpts.duration>0;// Link traces so the z-order of fill layers is correct\nvar cdscatterSorted=linkTraces(gd,plotinfo,cdscatter);join=scatterLayer.selectAll('g.trace').data(cdscatterSorted,function(d){return d[0].trace.uid;});// Append new traces:\njoin.enter().append('g').attr('class',function(d){return'trace scatter trace'+d[0].trace.uid;}).style('stroke-miterlimit',2);join.order();createFills(gd,join,plotinfo);if(hasTransition){if(makeOnCompleteCallback){// If it was passed a callback to register completion, make a callback. If\n// this is created, then it must be executed on completion, otherwise the\n// pos-transition redraw will not execute:\nonComplete=makeOnCompleteCallback();}var transition=d3.transition().duration(transitionOpts.duration).ease(transitionOpts.easing).each('end',function(){onComplete&&onComplete();}).each('interrupt',function(){onComplete&&onComplete();});transition.each(function(){// Must run the selection again since otherwise enters/updates get grouped together\n// and these get executed out of order. Except we need them in order!\nscatterLayer.selectAll('g.trace').each(function(d,i){plotOne(gd,i,plotinfo,d,cdscatterSorted,this,transitionOpts);});});}else{join.each(function(d,i){plotOne(gd,i,plotinfo,d,cdscatterSorted,this,transitionOpts);});}if(isFullReplot){join.exit().remove();}// remove paths that didn't get used\nscatterLayer.selectAll('path:not([d])').remove();};function createFills(gd,traceJoin,plotinfo){traceJoin.each(function(d){var fills=ensureSingle(d3.select(this),'g','fills');Drawing.setClipUrl(fills,plotinfo.layerClipId,gd);var trace=d[0].trace;var fillData=[];if(trace._ownfill)fillData.push('_ownFill');if(trace._nexttrace)fillData.push('_nextFill');var fillJoin=fills.selectAll('g').data(fillData,identity);fillJoin.enter().append('g');fillJoin.exit().each(function(d){trace[d]=null;}).remove();fillJoin.order().each(function(d){// make a path element inside the fill group, just so\n// we can give it its own data later on and the group can\n// keep its simple '_*Fill' data\ntrace[d]=ensureSingle(d3.select(this),'path','js-fill');});});}function plotOne(gd,idx,plotinfo,cdscatter,cdscatterAll,element,transitionOpts){var i;// Since this has been reorganized and we're executing this on individual traces,\n// we need to pass it the full list of cdscatter as well as this trace's index (idx)\n// since it does an internal n^2 loop over comparisons with other traces:\nselectMarkers(gd,idx,plotinfo,cdscatter,cdscatterAll);var hasTransition=!!transitionOpts&&transitionOpts.duration>0;function transition(selection){return hasTransition?selection.transition():selection;}var xa=plotinfo.xaxis;var ya=plotinfo.yaxis;var trace=cdscatter[0].trace;var line=trace.line;var tr=d3.select(element);var errorBarGroup=ensureSingle(tr,'g','errorbars');var lines=ensureSingle(tr,'g','lines');var points=ensureSingle(tr,'g','points');var text=ensureSingle(tr,'g','text');// error bars are at the bottom\nRegistry.getComponentMethod('errorbars','plot')(gd,errorBarGroup,plotinfo,transitionOpts);if(trace.visible!==true)return;transition(tr).style('opacity',trace.opacity);// BUILD LINES AND FILLS\nvar ownFillEl3,tonext;var ownFillDir=trace.fill.charAt(trace.fill.length-1);if(ownFillDir!=='x'&&ownFillDir!=='y')ownFillDir='';// store node for tweaking by selectPoints\nif(!plotinfo.isRangePlot)cdscatter[0].node3=tr;var prevRevpath='';var prevPolygons=[];var prevtrace=trace._prevtrace;if(prevtrace){prevRevpath=prevtrace._prevRevpath||'';tonext=prevtrace._nextFill;prevPolygons=prevtrace._polygons;}var thispath;var thisrevpath;// fullpath is all paths for this curve, joined together straight\n// across gaps, for filling\nvar fullpath='';// revpath is fullpath reversed, for fill-to-next\nvar revpath='';// functions for converting a point array to a path\nvar pathfn,revpathbase,revpathfn;// variables used before and after the data join\nvar pt0,lastSegment,pt1,thisPolygons;// initialize line join data / method\nvar segments=[];var makeUpdate=Lib.noop;ownFillEl3=trace._ownFill;if(subTypes.hasLines(trace)||trace.fill!=='none'){if(tonext){// This tells .style which trace to use for fill information:\ntonext.datum(cdscatter);}if(['hv','vh','hvh','vhv'].indexOf(line.shape)!==-1){pathfn=Drawing.steps(line.shape);revpathbase=Drawing.steps(line.shape.split('').reverse().join(''));}else if(line.shape==='spline'){pathfn=revpathbase=function revpathbase(pts){var pLast=pts[pts.length-1];if(pts.length>1&&pts[0][0]===pLast[0]&&pts[0][1]===pLast[1]){// identical start and end points: treat it as a\n// closed curve so we don't get a kink\nreturn Drawing.smoothclosed(pts.slice(1),line.smoothing);}else{return Drawing.smoothopen(pts,line.smoothing);}};}else{pathfn=revpathbase=function revpathbase(pts){return'M'+pts.join('L');};}revpathfn=function revpathfn(pts){// note: this is destructive (reverses pts in place) so can't use pts after this\nreturn revpathbase(pts.reverse());};segments=linePoints(cdscatter,{xaxis:xa,yaxis:ya,connectGaps:trace.connectgaps,baseTolerance:Math.max(line.width||1,3)/4,shape:line.shape,simplify:line.simplify});// since we already have the pixel segments here, use them to make\n// polygons for hover on fill\n// TODO: can we skip this if hoveron!=fills? That would mean we\n// need to redraw when you change hoveron...\nthisPolygons=trace._polygons=new Array(segments.length);for(i=0;i<segments.length;i++){trace._polygons[i]=polygonTester(segments[i]);}if(segments.length){pt0=segments[0][0];lastSegment=segments[segments.length-1];pt1=lastSegment[lastSegment.length-1];}makeUpdate=function makeUpdate(isEnter){return function(pts){thispath=pathfn(pts);thisrevpath=revpathfn(pts);if(!fullpath){fullpath=thispath;revpath=thisrevpath;}else if(ownFillDir){fullpath+='L'+thispath.substr(1);revpath=thisrevpath+('L'+revpath.substr(1));}else{fullpath+='Z'+thispath;revpath=thisrevpath+'Z'+revpath;}if(subTypes.hasLines(trace)&&pts.length>1){var el=d3.select(this);// This makes the coloring work correctly:\nel.datum(cdscatter);if(isEnter){transition(el.style('opacity',0).attr('d',thispath).call(Drawing.lineGroupStyle)).style('opacity',1);}else{var sel=transition(el);sel.attr('d',thispath);Drawing.singleLineStyle(cdscatter,sel);}}};};}var lineJoin=lines.selectAll('.js-line').data(segments);transition(lineJoin.exit()).style('opacity',0).remove();lineJoin.each(makeUpdate(false));lineJoin.enter().append('path').classed('js-line',true).style('vector-effect','non-scaling-stroke').call(Drawing.lineGroupStyle).each(makeUpdate(true));Drawing.setClipUrl(lineJoin,plotinfo.layerClipId,gd);function clearFill(selection){transition(selection).attr('d','M0,0Z');}if(segments.length){if(ownFillEl3){ownFillEl3.datum(cdscatter);if(pt0&&pt1){if(ownFillDir){if(ownFillDir==='y'){pt0[1]=pt1[1]=ya.c2p(0,true);}else if(ownFillDir==='x'){pt0[0]=pt1[0]=xa.c2p(0,true);}// fill to zero: full trace path, plus extension of\n// the endpoints to the appropriate axis\n// For the sake of animations, wrap the points around so that\n// the points on the axes are the first two points. Otherwise\n// animations get a little crazy if the number of points changes.\ntransition(ownFillEl3).attr('d','M'+pt1+'L'+pt0+'L'+fullpath.substr(1)).call(Drawing.singleFillStyle);}else{// fill to self: just join the path to itself\ntransition(ownFillEl3).attr('d',fullpath+'Z').call(Drawing.singleFillStyle);}}}else if(tonext){if(trace.fill.substr(0,6)==='tonext'&&fullpath&&prevRevpath){// fill to next: full trace path, plus the previous path reversed\nif(trace.fill==='tonext'){// tonext: for use by concentric shapes, like manually constructed\n// contours, we just add the two paths closed on themselves.\n// This makes strange results if one path is *not* entirely\n// inside the other, but then that is a strange usage.\ntransition(tonext).attr('d',fullpath+'Z'+prevRevpath+'Z').call(Drawing.singleFillStyle);}else{// tonextx/y: for now just connect endpoints with lines. This is\n// the correct behavior if the endpoints are at the same value of\n// y/x, but if they *aren't*, we should ideally do more complicated\n// things depending on whether the new endpoint projects onto the\n// existing curve or off the end of it\ntransition(tonext).attr('d',fullpath+'L'+prevRevpath.substr(1)+'Z').call(Drawing.singleFillStyle);}trace._polygons=trace._polygons.concat(prevPolygons);}else{clearFill(tonext);trace._polygons=null;}}trace._prevRevpath=revpath;trace._prevPolygons=thisPolygons;}else{if(ownFillEl3)clearFill(ownFillEl3);else if(tonext)clearFill(tonext);trace._polygons=trace._prevRevpath=trace._prevPolygons=null;}function visFilter(d){return d.filter(function(v){return!v.gap&&v.vis;});}function visFilterWithGaps(d){return d.filter(function(v){return v.vis;});}function gapFilter(d){return d.filter(function(v){return!v.gap;});}function keyFunc(d){return d.id;}// Returns a function if the trace is keyed, otherwise returns undefined\nfunction getKeyFunc(trace){if(trace.ids){return keyFunc;}}function hideFilter(){return false;}function makePoints(points,text,cdscatter){var join,selection,hasNode;var trace=cdscatter[0].trace;var showMarkers=subTypes.hasMarkers(trace);var showText=subTypes.hasText(trace);var keyFunc=getKeyFunc(trace);var markerFilter=hideFilter;var textFilter=hideFilter;if(showMarkers||showText){var showFilter=identity;// if we're stacking, \"infer zero\" gap mode gets markers in the\n// gap points - because we've inferred a zero there - but other\n// modes (currently \"interpolate\", later \"interrupt\" hopefully)\n// we don't draw generated markers\nvar stackGroup=trace.stackgroup;var isInferZero=stackGroup&&gd._fullLayout._scatterStackOpts[xa._id+ya._id][stackGroup].stackgaps==='infer zero';if(trace.marker.maxdisplayed||trace._needsCull){showFilter=isInferZero?visFilterWithGaps:visFilter;}else if(stackGroup&&!isInferZero){showFilter=gapFilter;}if(showMarkers)markerFilter=showFilter;if(showText)textFilter=showFilter;}// marker points\nselection=points.selectAll('path.point');join=selection.data(markerFilter,keyFunc);var enter=join.enter().append('path').classed('point',true);if(hasTransition){enter.call(Drawing.pointStyle,trace,gd).call(Drawing.translatePoints,xa,ya).style('opacity',0).transition().style('opacity',1);}join.order();var styleFns;if(showMarkers){styleFns=Drawing.makePointStyleFns(trace);}join.each(function(d){var el=d3.select(this);var sel=transition(el);hasNode=Drawing.translatePoint(d,sel,xa,ya);if(hasNode){Drawing.singlePointStyle(d,sel,trace,styleFns,gd);if(plotinfo.layerClipId){Drawing.hideOutsideRangePoint(d,sel,xa,ya,trace.xcalendar,trace.ycalendar);}if(trace.customdata){el.classed('plotly-customdata',d.data!==null&&d.data!==undefined);}}else{sel.remove();}});if(hasTransition){join.exit().transition().style('opacity',0).remove();}else{join.exit().remove();}// text points\nselection=text.selectAll('g');join=selection.data(textFilter,keyFunc);// each text needs to go in its own 'g' in case\n// it gets converted to mathjax\njoin.enter().append('g').classed('textpoint',true).append('text');join.order();join.each(function(d){var g=d3.select(this);var sel=transition(g.select('text'));hasNode=Drawing.translatePoint(d,sel,xa,ya);if(hasNode){if(plotinfo.layerClipId){Drawing.hideOutsideRangePoint(d,g,xa,ya,trace.xcalendar,trace.ycalendar);}}else{g.remove();}});join.selectAll('text').call(Drawing.textPointStyle,trace,gd).each(function(d){// This just *has* to be totally custom becuase of SVG text positioning :(\n// It's obviously copied from translatePoint; we just can't use that\nvar x=xa.c2p(d.x);var y=ya.c2p(d.y);d3.select(this).selectAll('tspan.line').each(function(){transition(d3.select(this)).attr({x:x,y:y});});});join.exit().remove();}points.datum(cdscatter);text.datum(cdscatter);makePoints(points,text,cdscatter);// lastly, clip points groups of `cliponaxis !== false` traces\n// on `plotinfo._hasClipOnAxisFalse === true` subplots\nvar hasClipOnAxisFalse=trace.cliponaxis===false;var clipUrl=hasClipOnAxisFalse?null:plotinfo.layerClipId;Drawing.setClipUrl(points,clipUrl,gd);Drawing.setClipUrl(text,clipUrl,gd);}function selectMarkers(gd,idx,plotinfo,cdscatter,cdscatterAll){var xa=plotinfo.xaxis;var ya=plotinfo.yaxis;var xr=d3.extent(Lib.simpleMap(xa.range,xa.r2c));var yr=d3.extent(Lib.simpleMap(ya.range,ya.r2c));var trace=cdscatter[0].trace;if(!subTypes.hasMarkers(trace))return;// if marker.maxdisplayed is used, select a maximum of\n// mnum markers to show, from the set that are in the viewport\nvar mnum=trace.marker.maxdisplayed;// TODO: remove some as we get away from the viewport?\nif(mnum===0)return;var cd=cdscatter.filter(function(v){return v.x>=xr[0]&&v.x<=xr[1]&&v.y>=yr[0]&&v.y<=yr[1];});var inc=Math.ceil(cd.length/mnum);var tnum=0;cdscatterAll.forEach(function(cdj,j){var tracei=cdj[0].trace;if(subTypes.hasMarkers(tracei)&&tracei.marker.maxdisplayed>0&&j<idx){tnum++;}});// if multiple traces use maxdisplayed, stagger which markers we\n// display this formula offsets successive traces by 1/3 of the\n// increment, adding an extra small amount after each triplet so\n// it's not quite periodic\nvar i0=Math.round(tnum*inc/3+Math.floor(tnum/3)*inc/7.1);// for error bars: save in cd which markers to show\n// so we don't have to repeat this\ncdscatter.forEach(function(v){delete v.vis;});cd.forEach(function(v,i){if(Math.round((i+i0)%inc)===0)v.vis=true;});}},{\"../../components/drawing\":320,\"../../lib\":423,\"../../lib/polygon\":435,\"../../registry\":521,\"./line_points\":547,\"./link_traces\":549,\"./subtypes\":557,\"d3\":71}],554:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var subtypes=_dereq_('./subtypes');module.exports=function selectPoints(searchInfo,selectionTester){var cd=searchInfo.cd;var xa=searchInfo.xaxis;var ya=searchInfo.yaxis;var selection=[];var trace=cd[0].trace;var i;var di;var x;var y;var hasOnlyLines=!subtypes.hasMarkers(trace)&&!subtypes.hasText(trace);if(hasOnlyLines)return[];if(selectionTester===false){// clear selection\nfor(i=0;i<cd.length;i++){cd[i].selected=0;}}else{for(i=0;i<cd.length;i++){di=cd[i];x=xa.c2p(di.x);y=ya.c2p(di.y);if(di.i!==null&&selectionTester.contains([x,y],false,i,searchInfo)){selection.push({pointNumber:di.i,x:xa.c2d(di.x),y:ya.c2d(di.y)});di.selected=1;}else{di.selected=0;}}}return selection;};},{\"./subtypes\":557}],555:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var perStackAttrs=['orientation','groupnorm','stackgaps'];module.exports=function handleStackDefaults(traceIn,traceOut,layout,coerce){var stackOpts=layout._scatterStackOpts;var stackGroup=coerce('stackgroup');if(stackGroup){// use independent stacking options per subplot\nvar subplot=traceOut.xaxis+traceOut.yaxis;var subplotStackOpts=stackOpts[subplot];if(!subplotStackOpts)subplotStackOpts=stackOpts[subplot]={};var groupOpts=subplotStackOpts[stackGroup];var firstTrace=false;if(groupOpts){groupOpts.traces.push(traceOut);}else{groupOpts=subplotStackOpts[stackGroup]={// keep track of trace indices for use during stacking calculations\n// this will be filled in during `calc` and used during `crossTraceCalc`\n// so it's OK if we don't recreate it during a non-calc edit\ntraceIndices:[],// Hold on to the whole set of prior traces\n// First one is most important, so we can clear defaults\n// there if we find explicit values only in later traces.\n// We're only going to *use* the values stored in groupOpts,\n// but for the editor and validate we want things self-consistent\n// The full set of traces is used only to fix `fill` default if\n// we find `orientation: 'h'` beyond the first trace\ntraces:[traceOut]};firstTrace=true;}// TODO: how is this going to work with groupby transforms?\n// in principle it should be OK I guess, as long as explicit group styles\n// don't override explicit base-trace styles?\nvar dflts={orientation:traceOut.x&&!traceOut.y?'h':'v'};for(var i=0;i<perStackAttrs.length;i++){var attr=perStackAttrs[i];var attrFound=attr+'Found';if(!groupOpts[attrFound]){var traceHasAttr=traceIn[attr]!==undefined;var isOrientation=attr==='orientation';if(traceHasAttr||firstTrace){groupOpts[attr]=coerce(attr,dflts[attr]);if(isOrientation){groupOpts.fillDflt=groupOpts[attr]==='h'?'tonextx':'tonexty';}if(traceHasAttr){// Note: this will show a value here even if it's invalid\n// in which case it will revert to default.\ngroupOpts[attrFound]=true;// Note: only one trace in the stack will get a _fullData\n// entry for a given stack-wide attribute. If no traces\n// (or the first trace) specify that attribute, the\n// first trace will get it. If the first trace does NOT\n// specify it but some later trace does, then it gets\n// removed from the first trace and only included in the\n// one that specified it. This is mostly important for\n// editors (that want to see the full values to know\n// what settings are available) and Plotly.react diffing.\n// Editors may want to use fullLayout._scatterStackOpts\n// directly and make these settings available from all\n// traces in the stack... then set the new value into\n// the first trace, and clear all later traces.\nif(!firstTrace){delete groupOpts.traces[0][attr];// orientation can affect default fill of previous traces\nif(isOrientation){for(var j=0;j<groupOpts.traces.length-1;j++){var trace2=groupOpts.traces[j];if(trace2._input.fill!==trace2.fill){trace2.fill=groupOpts.fillDflt;}}}}}}}}return groupOpts;}};},{}],556:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var d3=_dereq_('d3');var Drawing=_dereq_('../../components/drawing');var Registry=_dereq_('../../registry');function style(gd,cd){var s=cd?cd[0].node3:d3.select(gd).selectAll('g.trace.scatter');s.style('opacity',function(d){return d[0].trace.opacity;});s.selectAll('g.points').each(function(d){var sel=d3.select(this);var trace=d.trace||d[0].trace;stylePoints(sel,trace,gd);});s.selectAll('g.text').each(function(d){var sel=d3.select(this);var trace=d.trace||d[0].trace;styleText(sel,trace,gd);});s.selectAll('g.trace path.js-line').call(Drawing.lineGroupStyle);s.selectAll('g.trace path.js-fill').call(Drawing.fillGroupStyle);Registry.getComponentMethod('errorbars','style')(s);}function stylePoints(sel,trace,gd){Drawing.pointStyle(sel.selectAll('path.point'),trace,gd);}function styleText(sel,trace,gd){Drawing.textPointStyle(sel.selectAll('text'),trace,gd);}function styleOnSelect(gd,cd){var s=cd[0].node3;var trace=cd[0].trace;if(trace.selectedpoints){Drawing.selectedPointStyle(s.selectAll('path.point'),trace);Drawing.selectedTextStyle(s.selectAll('text'),trace);}else{stylePoints(s,trace,gd);styleText(s,trace,gd);}}module.exports={style:style,stylePoints:stylePoints,styleText:styleText,styleOnSelect:styleOnSelect};},{\"../../components/drawing\":320,\"../../registry\":521,\"d3\":71}],557:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');module.exports={hasLines:function hasLines(trace){return trace.visible&&trace.mode&&trace.mode.indexOf('lines')!==-1;},hasMarkers:function hasMarkers(trace){return trace.visible&&(trace.mode&&trace.mode.indexOf('markers')!==-1||// until splom implements 'mode'\ntrace.type==='splom');},hasText:function hasText(trace){return trace.visible&&trace.mode&&trace.mode.indexOf('text')!==-1;},isBubble:function isBubble(trace){return Lib.isPlainObject(trace.marker)&&Lib.isArrayOrTypedArray(trace.marker.size);}};},{\"../../lib\":423}],558:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');/*\n * opts: object of flags to control features not all text users support\n *   noSelect: caller does not support selected/unselected attribute containers\n */module.exports=function(traceIn,traceOut,layout,coerce,opts){opts=opts||{};coerce('textposition');Lib.coerceFont(coerce,'textfont',layout.font);if(!opts.noSelect){coerce('selected.textfont.color');coerce('unselected.textfont.color');}};},{\"../../lib\":423}],559:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Lib=_dereq_('../../lib');var Registry=_dereq_('../../registry');module.exports=function handleXYDefaults(traceIn,traceOut,layout,coerce){var x=coerce('x');var y=coerce('y');var len;var handleCalendarDefaults=Registry.getComponentMethod('calendars','handleTraceDefaults');handleCalendarDefaults(traceIn,traceOut,['x','y'],layout);if(x){var xlen=Lib.minRowLength(x);if(y){len=Math.min(xlen,Lib.minRowLength(y));}else{len=xlen;coerce('y0');coerce('dy');}}else{if(!y)return 0;len=Lib.minRowLength(y);coerce('x0');coerce('dx');}traceOut._length=len;return len;};},{\"../../lib\":423,\"../../registry\":521}],560:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var scatterAttrs=_dereq_('../scatter/attributes');var colorAttributes=_dereq_('../../components/colorscale/attributes');var baseAttrs=_dereq_('../../plots/attributes');var DASHES=_dereq_('../../constants/gl3d_dashes');var MARKER_SYMBOLS=_dereq_('../../constants/gl3d_markers');var extendFlat=_dereq_('../../lib/extend').extendFlat;var overrideAll=_dereq_('../../plot_api/edit_types').overrideAll;var scatterLineAttrs=scatterAttrs.line;var scatterMarkerAttrs=scatterAttrs.marker;var scatterMarkerLineAttrs=scatterMarkerAttrs.line;var lineAttrs=extendFlat({width:scatterLineAttrs.width,dash:{valType:'enumerated',values:Object.keys(DASHES),dflt:'solid'}},colorAttributes('line'));// not yet implemented\ndelete lineAttrs.showscale;delete lineAttrs.colorbar;function makeProjectionAttr(axLetter){return{show:{valType:'boolean',dflt:false},opacity:{valType:'number',min:0,max:1,dflt:1},scale:{valType:'number',min:0,max:10,dflt:2/3}};}var attrs=module.exports=overrideAll({x:scatterAttrs.x,y:scatterAttrs.y,z:{valType:'data_array'},text:extendFlat({},scatterAttrs.text,{}),hovertext:extendFlat({},scatterAttrs.hovertext,{}),mode:extendFlat({},scatterAttrs.mode,// shouldn't this be on-par with 2D?\n{dflt:'lines+markers'}),surfaceaxis:{valType:'enumerated',values:[-1,0,1,2],dflt:-1},surfacecolor:{valType:'color'},projection:{x:makeProjectionAttr('x'),y:makeProjectionAttr('y'),z:makeProjectionAttr('z')},connectgaps:scatterAttrs.connectgaps,line:lineAttrs,marker:extendFlat({// Parity with scatter.js?\nsymbol:{valType:'enumerated',values:Object.keys(MARKER_SYMBOLS),dflt:'circle',arrayOk:true},size:extendFlat({},scatterMarkerAttrs.size,{dflt:8}),sizeref:scatterMarkerAttrs.sizeref,sizemin:scatterMarkerAttrs.sizemin,sizemode:scatterMarkerAttrs.sizemode,opacity:extendFlat({},scatterMarkerAttrs.opacity,{arrayOk:false}),colorbar:scatterMarkerAttrs.colorbar,line:extendFlat({width:extendFlat({},scatterMarkerLineAttrs.width,{arrayOk:false})},colorAttributes('marker.line'))},colorAttributes('marker')),textposition:extendFlat({},scatterAttrs.textposition,{dflt:'top center'}),textfont:{color:scatterAttrs.textfont.color,size:scatterAttrs.textfont.size,family:extendFlat({},scatterAttrs.textfont.family,{arrayOk:false})},hoverinfo:extendFlat({},baseAttrs.hoverinfo)},'calc','nested');attrs.x.editType=attrs.y.editType=attrs.z.editType='calc+clearAxisTypes';},{\"../../components/colorscale/attributes\":306,\"../../constants/gl3d_dashes\":395,\"../../constants/gl3d_markers\":396,\"../../lib/extend\":416,\"../../plot_api/edit_types\":452,\"../../plots/attributes\":466,\"../scatter/attributes\":533}],561:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var arraysToCalcdata=_dereq_('../scatter/arrays_to_calcdata');var calcColorscale=_dereq_('../scatter/colorscale_calc');/**\n * This is a kludge to put the array attributes into\n * calcdata the way Scatter.plot does, so that legends and\n * popovers know what to do with them.\n */module.exports=function calc(gd,trace){var cd=[{x:false,y:false,trace:trace,t:{}}];arraysToCalcdata(cd,trace);calcColorscale(gd,trace);return cd;};},{\"../scatter/arrays_to_calcdata\":532,\"../scatter/colorscale_calc\":536}],562:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../../registry');function calculateAxisErrors(data,params,scaleFactor,axis){if(!params||!params.visible)return null;var computeError=Registry.getComponentMethod('errorbars','makeComputeError')(params);var result=new Array(data.length);for(var i=0;i<data.length;i++){var errors=computeError(+data[i],i);if(axis.type==='log'){var point=axis.c2l(data[i]);var min=data[i]-errors[0];var max=data[i]+errors[1];result[i]=[(axis.c2l(min,true)-point)*scaleFactor,(axis.c2l(max,true)-point)*scaleFactor];// Keep track of the lower error bound which isn't negative!\nif(min>0){var lower=axis.c2l(min);if(!axis._lowerLogErrorBound)axis._lowerLogErrorBound=lower;axis._lowerErrorBound=Math.min(axis._lowerLogErrorBound,lower);}}else{result[i]=[-errors[0]*scaleFactor,errors[1]*scaleFactor];}}return result;}function dataLength(array){for(var i=0;i<array.length;i++){if(array[i])return array[i].length;}return 0;}function calculateErrors(data,scaleFactor,sceneLayout){var errors=[calculateAxisErrors(data.x,data.error_x,scaleFactor[0],sceneLayout.xaxis),calculateAxisErrors(data.y,data.error_y,scaleFactor[1],sceneLayout.yaxis),calculateAxisErrors(data.z,data.error_z,scaleFactor[2],sceneLayout.zaxis)];var n=dataLength(errors);if(n===0)return null;var errorBounds=new Array(n);for(var i=0;i<n;i++){var bound=[[0,0,0],[0,0,0]];for(var j=0;j<3;j++){if(errors[j]){for(var k=0;k<2;k++){bound[k][j]=errors[j][i][k];}}}errorBounds[i]=bound;}return errorBounds;}module.exports=calculateErrors;},{\"../../registry\":521}],563:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var createLinePlot=_dereq_('gl-line3d');var createScatterPlot=_dereq_('gl-scatter3d');var createErrorBars=_dereq_('gl-error3d');var createMesh=_dereq_('gl-mesh3d');var triangulate=_dereq_('delaunay-triangulate');var Lib=_dereq_('../../lib');var str2RgbaArray=_dereq_('../../lib/str2rgbarray');var formatColor=_dereq_('../../lib/gl_format_color').formatColor;var makeBubbleSizeFn=_dereq_('../scatter/make_bubble_size_func');var DASH_PATTERNS=_dereq_('../../constants/gl3d_dashes');var MARKER_SYMBOLS=_dereq_('../../constants/gl3d_markers');var calculateError=_dereq_('./calc_errors');function LineWithMarkers(scene,uid){this.scene=scene;this.uid=uid;this.linePlot=null;this.scatterPlot=null;this.errorBars=null;this.textMarkers=null;this.delaunayMesh=null;this.color=null;this.mode='';this.dataPoints=[];this.axesBounds=[[-Infinity,-Infinity,-Infinity],[Infinity,Infinity,Infinity]];this.textLabels=null;this.data=null;}var proto=LineWithMarkers.prototype;proto.handlePick=function(selection){if(selection.object&&(selection.object===this.linePlot||selection.object===this.delaunayMesh||selection.object===this.textMarkers||selection.object===this.scatterPlot)){var ind=selection.index=selection.data.index;if(selection.object.highlight){selection.object.highlight(null);}if(this.scatterPlot){selection.object=this.scatterPlot;this.scatterPlot.highlight(selection.data);}selection.textLabel='';if(this.textLabels){if(Array.isArray(this.textLabels)){if(this.textLabels[ind]||this.textLabels[ind]===0){selection.textLabel=this.textLabels[ind];}}else{selection.textLabel=this.textLabels;}}selection.traceCoordinate=[this.data.x[ind],this.data.y[ind],this.data.z[ind]];return true;}};function constructDelaunay(points,color,axis){var u=(axis+1)%3;var v=(axis+2)%3;var filteredPoints=[];var filteredIds=[];var i;for(i=0;i<points.length;++i){var p=points[i];if(isNaN(p[u])||!isFinite(p[u])||isNaN(p[v])||!isFinite(p[v])){continue;}filteredPoints.push([p[u],p[v]]);filteredIds.push(i);}var cells=triangulate(filteredPoints);for(i=0;i<cells.length;++i){var c=cells[i];for(var j=0;j<c.length;++j){c[j]=filteredIds[c[j]];}}return{positions:points,cells:cells,meshColor:color};}function calculateErrorParams(errors){var capSize=[0.0,0.0,0.0];var color=[[0,0,0],[0,0,0],[0,0,0]];var lineWidth=[1.0,1.0,1.0];for(var i=0;i<3;i++){var e=errors[i];if(e&&e.copy_zstyle!==false&&errors[2].visible!==false)e=errors[2];if(!e||!e.visible)continue;capSize[i]=e.width/2;// ballpark rescaling\ncolor[i]=str2RgbaArray(e.color);lineWidth[i]=e.thickness;}return{capSize:capSize,color:color,lineWidth:lineWidth};}function parseAlignmentX(a){if(a===null||a===undefined)return 0;return a.indexOf('left')>-1?-1:a.indexOf('right')>-1?1:0;}function parseAlignmentY(a){if(a===null||a===undefined)return 0;return a.indexOf('top')>-1?-1:a.indexOf('bottom')>-1?1:0;}function calculateTextOffset(tp){// Read out text properties\nvar defaultAlignmentX=0;var defaultAlignmentY=0;var textOffset=[defaultAlignmentX,defaultAlignmentY];if(Array.isArray(tp)){for(var i=0;i<tp.length;i++){textOffset[i]=[defaultAlignmentX,defaultAlignmentY];if(tp[i]){textOffset[i][0]=parseAlignmentX(tp[i]);textOffset[i][1]=parseAlignmentY(tp[i]);}}}else{textOffset[0]=parseAlignmentX(tp);textOffset[1]=parseAlignmentY(tp);}return textOffset;}function calculateSize(sizeIn,sizeFn){// rough parity with Plotly 2D markers\nreturn sizeFn(sizeIn*4);}function calculateSymbol(symbolIn){return MARKER_SYMBOLS[symbolIn];}function formatParam(paramIn,len,calculate,dflt,extraFn){var paramOut=null;if(Lib.isArrayOrTypedArray(paramIn)){paramOut=[];for(var i=0;i<len;i++){if(paramIn[i]===undefined)paramOut[i]=dflt;else paramOut[i]=calculate(paramIn[i],extraFn);}}else paramOut=calculate(paramIn,Lib.identity);return paramOut;}function convertPlotlyOptions(scene,data){var points=[];var sceneLayout=scene.fullSceneLayout;var scaleFactor=scene.dataScale;var xaxis=sceneLayout.xaxis;var yaxis=sceneLayout.yaxis;var zaxis=sceneLayout.zaxis;var marker=data.marker;var line=data.line;var x=data.x||[];var y=data.y||[];var z=data.z||[];var len=x.length;var xcalendar=data.xcalendar;var ycalendar=data.ycalendar;var zcalendar=data.zcalendar;var xc,yc,zc;var params,i;var text;// Convert points\nfor(i=0;i<len;i++){// sanitize numbers and apply transforms based on axes.type\nxc=xaxis.d2l(x[i],0,xcalendar)*scaleFactor[0];yc=yaxis.d2l(y[i],0,ycalendar)*scaleFactor[1];zc=zaxis.d2l(z[i],0,zcalendar)*scaleFactor[2];points[i]=[xc,yc,zc];}// convert text\nif(Array.isArray(data.text))text=data.text;else if(data.text!==undefined){text=new Array(len);for(i=0;i<len;i++){text[i]=data.text;}}// Build object parameters\nparams={position:points,mode:data.mode,text:text};if('line'in data){params.lineColor=formatColor(line,1,len);params.lineWidth=line.width;params.lineDashes=line.dash;}if('marker'in data){var sizeFn=makeBubbleSizeFn(data);params.scatterColor=formatColor(marker,1,len);params.scatterSize=formatParam(marker.size,len,calculateSize,20,sizeFn);params.scatterMarker=formatParam(marker.symbol,len,calculateSymbol,'●');params.scatterLineWidth=marker.line.width;// arrayOk === false\nparams.scatterLineColor=formatColor(marker.line,1,len);params.scatterAngle=0;}if('textposition'in data){params.textOffset=calculateTextOffset(data.textposition);params.textColor=formatColor(data.textfont,1,len);params.textSize=formatParam(data.textfont.size,len,Lib.identity,12);params.textFont=data.textfont.family;// arrayOk === false\nparams.textAngle=0;}var dims=['x','y','z'];params.project=[false,false,false];params.projectScale=[1,1,1];params.projectOpacity=[1,1,1];for(i=0;i<3;++i){var projection=data.projection[dims[i]];if(params.project[i]=projection.show){params.projectOpacity[i]=projection.opacity;params.projectScale[i]=projection.scale;}}params.errorBounds=calculateError(data,scaleFactor,sceneLayout);var errorParams=calculateErrorParams([data.error_x,data.error_y,data.error_z]);params.errorColor=errorParams.color;params.errorLineWidth=errorParams.lineWidth;params.errorCapSize=errorParams.capSize;params.delaunayAxis=data.surfaceaxis;params.delaunayColor=str2RgbaArray(data.surfacecolor);return params;}function arrayToColor(color){if(Array.isArray(color)){var c=color[0];if(Array.isArray(c))color=c;return'rgb('+color.slice(0,3).map(function(x){return Math.round(x*255);})+')';}return null;}proto.update=function(data){var gl=this.scene.glplot.gl;var lineOptions;var scatterOptions;var errorOptions;var textOptions;var dashPattern=DASH_PATTERNS.solid;// Save data\nthis.data=data;// Run data conversion\nvar options=convertPlotlyOptions(this.scene,data);if('mode'in options){this.mode=options.mode;}if('lineDashes'in options){if(options.lineDashes in DASH_PATTERNS){dashPattern=DASH_PATTERNS[options.lineDashes];}}this.color=arrayToColor(options.scatterColor)||arrayToColor(options.lineColor);// Save data points\nthis.dataPoints=options.position;lineOptions={gl:gl,position:options.position,color:options.lineColor,lineWidth:options.lineWidth||1,dashes:dashPattern[0],dashScale:dashPattern[1],opacity:data.opacity,connectGaps:data.connectgaps};if(this.mode.indexOf('lines')!==-1){if(this.linePlot)this.linePlot.update(lineOptions);else{this.linePlot=createLinePlot(lineOptions);this.linePlot._trace=this;this.scene.glplot.add(this.linePlot);}}else if(this.linePlot){this.scene.glplot.remove(this.linePlot);this.linePlot.dispose();this.linePlot=null;}// N.B. marker.opacity must be a scalar for performance\nvar scatterOpacity=data.opacity;if(data.marker&&data.marker.opacity)scatterOpacity*=data.marker.opacity;scatterOptions={gl:gl,position:options.position,color:options.scatterColor,size:options.scatterSize,glyph:options.scatterMarker,opacity:scatterOpacity,orthographic:true,lineWidth:options.scatterLineWidth,lineColor:options.scatterLineColor,project:options.project,projectScale:options.projectScale,projectOpacity:options.projectOpacity};if(this.mode.indexOf('markers')!==-1){if(this.scatterPlot)this.scatterPlot.update(scatterOptions);else{this.scatterPlot=createScatterPlot(scatterOptions);this.scatterPlot._trace=this;this.scatterPlot.highlightScale=1;this.scene.glplot.add(this.scatterPlot);}}else if(this.scatterPlot){this.scene.glplot.remove(this.scatterPlot);this.scatterPlot.dispose();this.scatterPlot=null;}textOptions={gl:gl,position:options.position,glyph:options.text,color:options.textColor,size:options.textSize,angle:options.textAngle,alignment:options.textOffset,font:options.textFont,orthographic:true,lineWidth:0,project:false,opacity:data.opacity};this.textLabels=data.hovertext||data.text;if(this.mode.indexOf('text')!==-1){if(this.textMarkers)this.textMarkers.update(textOptions);else{this.textMarkers=createScatterPlot(textOptions);this.textMarkers._trace=this;this.textMarkers.highlightScale=1;this.scene.glplot.add(this.textMarkers);}}else if(this.textMarkers){this.scene.glplot.remove(this.textMarkers);this.textMarkers.dispose();this.textMarkers=null;}errorOptions={gl:gl,position:options.position,color:options.errorColor,error:options.errorBounds,lineWidth:options.errorLineWidth,capSize:options.errorCapSize,opacity:data.opacity};if(this.errorBars){if(options.errorBounds){this.errorBars.update(errorOptions);}else{this.scene.glplot.remove(this.errorBars);this.errorBars.dispose();this.errorBars=null;}}else if(options.errorBounds){this.errorBars=createErrorBars(errorOptions);this.errorBars._trace=this;this.scene.glplot.add(this.errorBars);}if(options.delaunayAxis>=0){var delaunayOptions=constructDelaunay(options.position,options.delaunayColor,options.delaunayAxis);delaunayOptions.opacity=data.opacity;if(this.delaunayMesh){this.delaunayMesh.update(delaunayOptions);}else{delaunayOptions.gl=gl;this.delaunayMesh=createMesh(delaunayOptions);this.delaunayMesh._trace=this;this.scene.glplot.add(this.delaunayMesh);}}else if(this.delaunayMesh){this.scene.glplot.remove(this.delaunayMesh);this.delaunayMesh.dispose();this.delaunayMesh=null;}};proto.dispose=function(){if(this.linePlot){this.scene.glplot.remove(this.linePlot);this.linePlot.dispose();}if(this.scatterPlot){this.scene.glplot.remove(this.scatterPlot);this.scatterPlot.dispose();}if(this.errorBars){this.scene.glplot.remove(this.errorBars);this.errorBars.dispose();}if(this.textMarkers){this.scene.glplot.remove(this.textMarkers);this.textMarkers.dispose();}if(this.delaunayMesh){this.scene.glplot.remove(this.delaunayMesh);this.delaunayMesh.dispose();}};function createLineWithMarkers(scene,data){var plot=new LineWithMarkers(scene,data.uid);plot.update(data);return plot;}module.exports=createLineWithMarkers;},{\"../../constants/gl3d_dashes\":395,\"../../constants/gl3d_markers\":396,\"../../lib\":423,\"../../lib/gl_format_color\":421,\"../../lib/str2rgbarray\":445,\"../scatter/make_bubble_size_func\":550,\"./calc_errors\":562,\"delaunay-triangulate\":73,\"gl-error3d\":96,\"gl-line3d\":104,\"gl-mesh3d\":124,\"gl-scatter3d\":131}],564:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Registry=_dereq_('../../registry');var Lib=_dereq_('../../lib');var subTypes=_dereq_('../scatter/subtypes');var handleMarkerDefaults=_dereq_('../scatter/marker_defaults');var handleLineDefaults=_dereq_('../scatter/line_defaults');var handleTextDefaults=_dereq_('../scatter/text_defaults');var attributes=_dereq_('./attributes');module.exports=function supplyDefaults(traceIn,traceOut,defaultColor,layout){function coerce(attr,dflt){return Lib.coerce(traceIn,traceOut,attributes,attr,dflt);}var len=handleXYZDefaults(traceIn,traceOut,coerce,layout);if(!len){traceOut.visible=false;return;}coerce('text');coerce('hovertext');coerce('mode');if(subTypes.hasLines(traceOut)){coerce('connectgaps');handleLineDefaults(traceIn,traceOut,defaultColor,layout,coerce);}if(subTypes.hasMarkers(traceOut)){handleMarkerDefaults(traceIn,traceOut,defaultColor,layout,coerce,{noSelect:true});}if(subTypes.hasText(traceOut)){handleTextDefaults(traceIn,traceOut,layout,coerce,{noSelect:true});}var lineColor=(traceOut.line||{}).color;var markerColor=(traceOut.marker||{}).color;if(coerce('surfaceaxis')>=0)coerce('surfacecolor',lineColor||markerColor);var dims=['x','y','z'];for(var i=0;i<3;++i){var projection='projection.'+dims[i];if(coerce(projection+'.show')){coerce(projection+'.opacity');coerce(projection+'.scale');}}var errorBarsSupplyDefaults=Registry.getComponentMethod('errorbars','supplyDefaults');errorBarsSupplyDefaults(traceIn,traceOut,defaultColor,{axis:'z'});errorBarsSupplyDefaults(traceIn,traceOut,defaultColor,{axis:'y',inherit:'z'});errorBarsSupplyDefaults(traceIn,traceOut,defaultColor,{axis:'x',inherit:'z'});};function handleXYZDefaults(traceIn,traceOut,coerce,layout){var len=0;var x=coerce('x');var y=coerce('y');var z=coerce('z');var handleCalendarDefaults=Registry.getComponentMethod('calendars','handleTraceDefaults');handleCalendarDefaults(traceIn,traceOut,['x','y','z'],layout);if(x&&y&&z){// TODO: what happens if one is missing?\nlen=Math.min(x.length,y.length,z.length);traceOut._length=traceOut._xlength=traceOut._ylength=traceOut._zlength=len;}return len;}},{\"../../lib\":423,\"../../registry\":521,\"../scatter/line_defaults\":546,\"../scatter/marker_defaults\":552,\"../scatter/subtypes\":557,\"../scatter/text_defaults\":558,\"./attributes\":560}],565:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Scatter3D={};Scatter3D.plot=_dereq_('./convert');Scatter3D.attributes=_dereq_('./attributes');Scatter3D.markerSymbols=_dereq_('../../constants/gl3d_markers');Scatter3D.supplyDefaults=_dereq_('./defaults');Scatter3D.colorbar=_dereq_('../scatter/marker_colorbar');Scatter3D.calc=_dereq_('./calc');Scatter3D.moduleType='trace';Scatter3D.name='scatter3d';Scatter3D.basePlotModule=_dereq_('../../plots/gl3d');Scatter3D.categories=['gl3d','symbols','showLegend'];Scatter3D.meta={};module.exports=Scatter3D;},{\"../../constants/gl3d_markers\":396,\"../../plots/gl3d\":500,\"../scatter/marker_colorbar\":551,\"./attributes\":560,\"./calc\":561,\"./convert\":563,\"./defaults\":564}],566:[function(_dereq_,module,exports){arguments[4][560][0].apply(exports,arguments);},{\"../../components/colorscale/attributes\":306,\"../../constants/gl3d_dashes\":395,\"../../constants/gl3d_markers\":396,\"../../lib/extend\":416,\"../../plot_api/edit_types\":452,\"../../plots/attributes\":466,\"../scatter/attributes\":533,\"dup\":560}],567:[function(_dereq_,module,exports){arguments[4][561][0].apply(exports,arguments);},{\"../scatter/arrays_to_calcdata\":532,\"../scatter/colorscale_calc\":536,\"dup\":561}],568:[function(_dereq_,module,exports){arguments[4][562][0].apply(exports,arguments);},{\"../../registry\":521,\"dup\":562}],569:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var createLinePlot=_dereq_('gl-line3d');var createScatterPlot=_dereq_('../../gl-scatter3d-point/pointcloud.js');var createErrorBars=_dereq_('gl-error3d');var createMesh=_dereq_('gl-mesh3d');var triangulate=_dereq_('delaunay-triangulate');var Lib=_dereq_('../../lib');var str2RgbaArray=_dereq_('../../lib/str2rgbarray');var formatColor=_dereq_('../../lib/gl_format_color').formatColor;var makeBubbleSizeFn=_dereq_('../scatter/make_bubble_size_func');var DASH_PATTERNS=_dereq_('../../constants/gl3d_dashes');var MARKER_SYMBOLS=_dereq_('../../constants/gl3d_markers');var calculateError=_dereq_('./calc_errors');function LineWithMarkers(scene,uid){this.scene=scene;this.uid=uid;this.linePlot=null;this.scatterPlot=null;this.errorBars=null;this.textMarkers=null;this.delaunayMesh=null;this.color=null;this.mode='';this.dataPoints=[];this.axesBounds=[[-Infinity,-Infinity,-Infinity],[Infinity,Infinity,Infinity]];this.textLabels=null;this.data=null;}var proto=LineWithMarkers.prototype;proto.handlePick=function(selection){if(selection.object&&(selection.object===this.linePlot||selection.object===this.delaunayMesh||selection.object===this.textMarkers||selection.object===this.scatterPlot)){var ind=selection.index=selection.data.index;if(selection.object.highlight){selection.object.highlight(null);}if(this.scatterPlot){selection.object=this.scatterPlot;this.scatterPlot.highlight(selection.data);}selection.textLabel='';if(this.textLabels){if(Array.isArray(this.textLabels)){if(this.textLabels[ind]||this.textLabels[ind]===0){selection.textLabel=this.textLabels[ind];}}else{selection.textLabel=this.textLabels;}}selection.traceCoordinate=[this.data.x[ind],this.data.y[ind],this.data.z[ind]];return true;}};function constructDelaunay(points,color,axis){var u=(axis+1)%3;var v=(axis+2)%3;var filteredPoints=[];var filteredIds=[];var i;for(i=0;i<points.length;++i){var p=points[i];if(isNaN(p[u])||!isFinite(p[u])||isNaN(p[v])||!isFinite(p[v])){continue;}filteredPoints.push([p[u],p[v]]);filteredIds.push(i);}var cells=triangulate(filteredPoints);for(i=0;i<cells.length;++i){var c=cells[i];for(var j=0;j<c.length;++j){c[j]=filteredIds[c[j]];}}return{positions:points,cells:cells,meshColor:color};}function calculateErrorParams(errors){var capSize=[0.0,0.0,0.0];var color=[[0,0,0],[0,0,0],[0,0,0]];var lineWidth=[1.0,1.0,1.0];for(var i=0;i<3;i++){var e=errors[i];if(e&&e.copy_zstyle!==false&&errors[2].visible!==false)e=errors[2];if(!e||!e.visible)continue;capSize[i]=e.width/2;// ballpark rescaling\ncolor[i]=str2RgbaArray(e.color);lineWidth[i]=e.thickness;}return{capSize:capSize,color:color,lineWidth:lineWidth};}function parseAlignmentX(a){if(a===null||a===undefined)return 0;return a.indexOf('left')>-1?-1:a.indexOf('right')>-1?1:0;}function parseAlignmentY(a){if(a===null||a===undefined)return 0;return a.indexOf('top')>-1?-1:a.indexOf('bottom')>-1?1:0;}function calculateTextOffset(tp){// Read out text properties\nvar defaultAlignmentX=0;var defaultAlignmentY=0;var textOffset=[defaultAlignmentX,defaultAlignmentY];if(Array.isArray(tp)){for(var i=0;i<tp.length;i++){textOffset[i]=[defaultAlignmentX,defaultAlignmentY];if(tp[i]){textOffset[i][0]=parseAlignmentX(tp[i]);textOffset[i][1]=parseAlignmentY(tp[i]);}}}else{textOffset[0]=parseAlignmentX(tp);textOffset[1]=parseAlignmentY(tp);}return textOffset;}function calculateSize(sizeIn,sizeFn){// rough parity with Plotly 2D markers\nreturn sizeFn(sizeIn*4);}function calculateSymbol(symbolIn){return MARKER_SYMBOLS[symbolIn];}function formatParam(paramIn,len,calculate,dflt,extraFn){var paramOut=null;if(Lib.isArrayOrTypedArray(paramIn)){paramOut=[];for(var i=0;i<len;i++){if(paramIn[i]===undefined)paramOut[i]=dflt;else paramOut[i]=calculate(paramIn[i],extraFn);}}else paramOut=calculate(paramIn,Lib.identity);return paramOut;}function convertPlotlyOptions(scene,data){var points=[];var sceneLayout=scene.fullSceneLayout;var scaleFactor=scene.dataScale;var xaxis=sceneLayout.xaxis;var yaxis=sceneLayout.yaxis;var zaxis=sceneLayout.zaxis;var marker=data.marker;var line=data.line;var x=data.x||[];var y=data.y||[];var z=data.z||[];var len=x.length;var xcalendar=data.xcalendar;var ycalendar=data.ycalendar;var zcalendar=data.zcalendar;var xc,yc,zc;var params,i;var text;// Convert points\nfor(i=0;i<len;i++){// sanitize numbers and apply transforms based on axes.type\nxc=xaxis.d2l(x[i],0,xcalendar)*scaleFactor[0];yc=yaxis.d2l(y[i],0,ycalendar)*scaleFactor[1];zc=zaxis.d2l(z[i],0,zcalendar)*scaleFactor[2];points[i]=[xc,yc,zc];}// convert text\nif(Array.isArray(data.text))text=data.text;else if(data.text!==undefined){text=new Array(len);for(i=0;i<len;i++){text[i]=data.text;}}// Build object parameters\nparams={position:points,mode:data.mode,text:text};if('line'in data){params.lineColor=formatColor(line,1,len);params.lineWidth=line.width;params.lineDashes=line.dash;}if('marker'in data){var sizeFn=makeBubbleSizeFn(data);params.scatterColor=formatColor(marker,1,len);params.scatterSize=formatParam(marker.size,len,calculateSize,20,sizeFn);params.scatterMarker=formatParam(marker.symbol,len,calculateSymbol,'●');params.scatterLineWidth=marker.line.width;// arrayOk === false\nparams.scatterLineColor=formatColor(marker.line,1,len);params.scatterAngle=0;}if('textposition'in data){params.textOffset=calculateTextOffset(data.textposition);params.textColor=formatColor(data.textfont,1,len);params.textSize=formatParam(data.textfont.size,len,Lib.identity,12);params.textFont=data.textfont.family;// arrayOk === false\nparams.textAngle=0;}var dims=['x','y','z'];params.project=[false,false,false];params.projectScale=[1,1,1];params.projectOpacity=[1,1,1];for(i=0;i<3;++i){var projection=data.projection[dims[i]];if(params.project[i]=projection.show){params.projectOpacity[i]=projection.opacity;params.projectScale[i]=projection.scale;}}params.errorBounds=calculateError(data,scaleFactor,sceneLayout);var errorParams=calculateErrorParams([data.error_x,data.error_y,data.error_z]);params.errorColor=errorParams.color;params.errorLineWidth=errorParams.lineWidth;params.errorCapSize=errorParams.capSize;params.delaunayAxis=data.surfaceaxis;params.delaunayColor=str2RgbaArray(data.surfacecolor);return params;}function arrayToColor(color){if(Array.isArray(color)){var c=color[0];if(Array.isArray(c))color=c;return'rgb('+color.slice(0,3).map(function(x){return Math.round(x*255);})+')';}return null;}proto.update=function(data){var gl=this.scene.glplot.gl;var lineOptions;var scatterOptions;var errorOptions;var textOptions;var dashPattern=DASH_PATTERNS.solid;// Save data\nthis.data=data;// Run data conversion\nvar options=convertPlotlyOptions(this.scene,data);if('mode'in options){this.mode=options.mode;}if('lineDashes'in options){if(options.lineDashes in DASH_PATTERNS){dashPattern=DASH_PATTERNS[options.lineDashes];}}this.color=arrayToColor(options.scatterColor)||arrayToColor(options.lineColor);// Save data points\nthis.dataPoints=options.position;lineOptions={gl:gl,position:options.position,color:options.lineColor,lineWidth:options.lineWidth||1,dashes:dashPattern[0],dashScale:dashPattern[1],opacity:data.opacity,connectGaps:data.connectgaps};if(this.mode.indexOf('lines')!==-1){if(this.linePlot)this.linePlot.update(lineOptions);else{this.linePlot=createLinePlot(lineOptions);this.linePlot._trace=this;this.scene.glplot.add(this.linePlot);}}else if(this.linePlot){this.scene.glplot.remove(this.linePlot);this.linePlot.dispose();this.linePlot=null;}// N.B. marker.opacity must be a scalar for performance\nvar scatterOpacity=data.opacity;if(data.marker&&data.marker.opacity)scatterOpacity*=data.marker.opacity;scatterOptions={gl:gl,position:options.position,color:options.scatterColor,size:options.scatterSize,glyph:options.scatterMarker,opacity:scatterOpacity,orthographic:true,lineWidth:options.scatterLineWidth,lineColor:options.scatterLineColor,project:options.project,projectScale:options.projectScale,projectOpacity:options.projectOpacity,useSprite:true};if(this.mode.indexOf('markers')!==-1){if(this.scatterPlot)this.scatterPlot.update(scatterOptions);else{this.scatterPlot=createScatterPlot(scatterOptions);this.scatterPlot._trace=this;this.scatterPlot.highlightScale=1;this.scene.glplot.add(this.scatterPlot);}}else if(this.scatterPlot){this.scene.glplot.remove(this.scatterPlot);this.scatterPlot.dispose();this.scatterPlot=null;}textOptions={gl:gl,position:options.position,glyph:options.text,color:options.textColor,size:options.textSize,angle:options.textAngle,alignment:options.textOffset,font:options.textFont,orthographic:true,lineWidth:0,project:false,opacity:data.opacity,useSprite:true};this.textLabels=data.hovertext||data.text;if(this.mode.indexOf('text')!==-1){if(this.textMarkers)this.textMarkers.update(textOptions);else{this.textMarkers=createScatterPlot(textOptions);this.textMarkers._trace=this;this.textMarkers.highlightScale=1;this.scene.glplot.add(this.textMarkers);}}else if(this.textMarkers){this.scene.glplot.remove(this.textMarkers);this.textMarkers.dispose();this.textMarkers=null;}errorOptions={gl:gl,position:options.position,color:options.errorColor,error:options.errorBounds,lineWidth:options.errorLineWidth,capSize:options.errorCapSize,opacity:data.opacity};if(this.errorBars){if(options.errorBounds){this.errorBars.update(errorOptions);}else{this.scene.glplot.remove(this.errorBars);this.errorBars.dispose();this.errorBars=null;}}else if(options.errorBounds){this.errorBars=createErrorBars(errorOptions);this.errorBars._trace=this;this.scene.glplot.add(this.errorBars);}if(options.delaunayAxis>=0){var delaunayOptions=constructDelaunay(options.position,options.delaunayColor,options.delaunayAxis);delaunayOptions.opacity=data.opacity;if(this.delaunayMesh){this.delaunayMesh.update(delaunayOptions);}else{delaunayOptions.gl=gl;this.delaunayMesh=createMesh(delaunayOptions);this.delaunayMesh._trace=this;this.scene.glplot.add(this.delaunayMesh);}}else if(this.delaunayMesh){this.scene.glplot.remove(this.delaunayMesh);this.delaunayMesh.dispose();this.delaunayMesh=null;}};proto.dispose=function(){if(this.linePlot){this.scene.glplot.remove(this.linePlot);this.linePlot.dispose();}if(this.scatterPlot){this.scene.glplot.remove(this.scatterPlot);this.scatterPlot.dispose();}if(this.errorBars){this.scene.glplot.remove(this.errorBars);this.errorBars.dispose();}if(this.textMarkers){this.scene.glplot.remove(this.textMarkers);this.textMarkers.dispose();}if(this.delaunayMesh){this.scene.glplot.remove(this.delaunayMesh);this.delaunayMesh.dispose();}};function createLineWithMarkers(scene,data){var plot=new LineWithMarkers(scene,data.uid);plot.update(data);return plot;}module.exports=createLineWithMarkers;},{\"../../constants/gl3d_dashes\":395,\"../../constants/gl3d_markers\":396,\"../../gl-scatter3d-point/pointcloud.js\":406,\"../../lib\":423,\"../../lib/gl_format_color\":421,\"../../lib/str2rgbarray\":445,\"../scatter/make_bubble_size_func\":550,\"./calc_errors\":568,\"delaunay-triangulate\":73,\"gl-error3d\":96,\"gl-line3d\":104,\"gl-mesh3d\":124}],570:[function(_dereq_,module,exports){arguments[4][564][0].apply(exports,arguments);},{\"../../lib\":423,\"../../registry\":521,\"../scatter/line_defaults\":546,\"../scatter/marker_defaults\":552,\"../scatter/subtypes\":557,\"../scatter/text_defaults\":558,\"./attributes\":566,\"dup\":564}],571:[function(_dereq_,module,exports){/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/'use strict';var Scatter3D={};Scatter3D.plot=_dereq_('./convert');Scatter3D.attributes=_dereq_('./attributes');Scatter3D.markerSymbols=_dereq_('../../constants/gl3d_markers');Scatter3D.supplyDefaults=_dereq_('./defaults');Scatter3D.colorbar=_dereq_('../scatter/marker_colorbar');Scatter3D.calc=_dereq_('./calc');Scatter3D.moduleType='trace';Scatter3D.name='scatter3dpoint';Scatter3D.basePlotModule=_dereq_('../../plots/gl3d');Scatter3D.categories=['gl3d','symbols','showLegend'];Scatter3D.meta={};module.exports=Scatter3D;},{\"../../constants/gl3d_markers\":396,\"../../plots/gl3d\":500,\"../scatter/marker_colorbar\":551,\"./attributes\":566,\"./calc\":567,\"./convert\":569,\"./defaults\":570}]},{},[4])(4);});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(10)))\n\n//# sourceURL=webpack:///./app/scripts/vendors/plotly.js/dist/plotly-scatter3d.js?./node_modules/ify-loader")}}]);